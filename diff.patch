diff -crNb MicorpythonOriginal1.12/micropython/extmod/moduasyncio.c micropython1.12_withUlab/micropython/extmod/moduasyncio.c
*** MicorpythonOriginal1.12/micropython/extmod/moduasyncio.c	1970-01-01 02:00:00.000000000 +0200
--- micropython1.12_withUlab/micropython/extmod/moduasyncio.c	2020-06-19 19:40:00.737722439 +0200
***************
*** 0 ****
--- 1,294 ----
+ /*
+  * This file is part of the MicroPython project, http://micropython.org/
+  *
+  * The MIT License (MIT)
+  *
+  * Copyright (c) 2020 Damien P. George
+  *
+  * Permission is hereby granted, free of charge, to any person obtaining a copy
+  * of this software and associated documentation files (the "Software"), to deal
+  * in the Software without restriction, including without limitation the rights
+  * to use, copy, modify, merge, publish, distribute, sublicense, and/or sell
+  * copies of the Software, and to permit persons to whom the Software is
+  * furnished to do so, subject to the following conditions:
+  *
+  * The above copyright notice and this permission notice shall be included in
+  * all copies or substantial portions of the Software.
+  *
+  * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
+  * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
+  * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE
+  * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
+  * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,
+  * OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN
+  * THE SOFTWARE.
+  */
+ 
+ #include "py/runtime.h"
+ #include "py/smallint.h"
+ #include "py/pairheap.h"
+ #include "py/mphal.h"
+ 
+ #if MICROPY_PY_UASYNCIO
+ 
+ typedef struct _mp_obj_task_t {
+     mp_pairheap_t pairheap;
+     mp_obj_t coro;
+     mp_obj_t data;
+     mp_obj_t waiting;
+ 
+     mp_obj_t ph_key;
+ } mp_obj_task_t;
+ 
+ typedef struct _mp_obj_task_queue_t {
+     mp_obj_base_t base;
+     mp_obj_task_t *heap;
+ } mp_obj_task_queue_t;
+ 
+ STATIC const mp_obj_type_t task_queue_type;
+ STATIC const mp_obj_type_t task_type;
+ 
+ STATIC mp_obj_t task_queue_make_new(const mp_obj_type_t *type, size_t n_args, size_t n_kw, const mp_obj_t *args);
+ 
+ /******************************************************************************/
+ // Ticks for task ordering in pairing heap
+ 
+ STATIC mp_obj_t ticks(void) {
+     return MP_OBJ_NEW_SMALL_INT(mp_hal_ticks_ms() & (MICROPY_PY_UTIME_TICKS_PERIOD - 1));
+ }
+ 
+ STATIC mp_int_t ticks_diff(mp_obj_t t1_in, mp_obj_t t0_in) {
+     mp_uint_t t0 = MP_OBJ_SMALL_INT_VALUE(t0_in);
+     mp_uint_t t1 = MP_OBJ_SMALL_INT_VALUE(t1_in);
+     mp_int_t diff = ((t1 - t0 + MICROPY_PY_UTIME_TICKS_PERIOD / 2) & (MICROPY_PY_UTIME_TICKS_PERIOD - 1))
+         - MICROPY_PY_UTIME_TICKS_PERIOD / 2;
+     return diff;
+ }
+ 
+ STATIC int task_lt(mp_pairheap_t *n1, mp_pairheap_t *n2) {
+     mp_obj_task_t *t1 = (mp_obj_task_t *)n1;
+     mp_obj_task_t *t2 = (mp_obj_task_t *)n2;
+     return MP_OBJ_SMALL_INT_VALUE(ticks_diff(t1->ph_key, t2->ph_key)) < 0;
+ }
+ 
+ /******************************************************************************/
+ // TaskQueue class
+ 
+ STATIC mp_obj_t task_queue_make_new(const mp_obj_type_t *type, size_t n_args, size_t n_kw, const mp_obj_t *args) {
+     (void)args;
+     mp_arg_check_num(n_args, n_kw, 0, 0, false);
+     mp_obj_task_queue_t *self = m_new_obj(mp_obj_task_queue_t);
+     self->base.type = type;
+     self->heap = (mp_obj_task_t *)mp_pairheap_new(task_lt);
+     return MP_OBJ_FROM_PTR(self);
+ }
+ 
+ STATIC mp_obj_t task_queue_peek(mp_obj_t self_in) {
+     mp_obj_task_queue_t *self = MP_OBJ_TO_PTR(self_in);
+     if (self->heap == NULL) {
+         return mp_const_none;
+     } else {
+         return MP_OBJ_FROM_PTR(self->heap);
+     }
+ }
+ STATIC MP_DEFINE_CONST_FUN_OBJ_1(task_queue_peek_obj, task_queue_peek);
+ 
+ STATIC mp_obj_t task_queue_push_sorted(size_t n_args, const mp_obj_t *args) {
+     mp_obj_task_queue_t *self = MP_OBJ_TO_PTR(args[0]);
+     mp_obj_task_t *task = MP_OBJ_TO_PTR(args[1]);
+     task->data = mp_const_none;
+     if (n_args == 2) {
+         task->ph_key = ticks();
+     } else {
+         assert(mp_obj_is_small_int(args[2]));
+         task->ph_key = args[2];
+     }
+     self->heap = (mp_obj_task_t *)mp_pairheap_push(task_lt, &self->heap->pairheap, &task->pairheap);
+     return mp_const_none;
+ }
+ STATIC MP_DEFINE_CONST_FUN_OBJ_VAR_BETWEEN(task_queue_push_sorted_obj, 2, 3, task_queue_push_sorted);
+ 
+ STATIC mp_obj_t task_queue_pop_head(mp_obj_t self_in) {
+     mp_obj_task_queue_t *self = MP_OBJ_TO_PTR(self_in);
+     mp_obj_task_t *head = (mp_obj_task_t *)mp_pairheap_peek(task_lt, &self->heap->pairheap);
+     if (head == NULL) {
+         mp_raise_msg(&mp_type_IndexError, "empty heap");
+     }
+     self->heap = (mp_obj_task_t *)mp_pairheap_pop(task_lt, &self->heap->pairheap);
+     return MP_OBJ_FROM_PTR(head);
+ }
+ STATIC MP_DEFINE_CONST_FUN_OBJ_1(task_queue_pop_head_obj, task_queue_pop_head);
+ 
+ STATIC mp_obj_t task_queue_remove(mp_obj_t self_in, mp_obj_t task_in) {
+     mp_obj_task_queue_t *self = MP_OBJ_TO_PTR(self_in);
+     mp_obj_task_t *task = MP_OBJ_TO_PTR(task_in);
+     self->heap = (mp_obj_task_t *)mp_pairheap_delete(task_lt, &self->heap->pairheap, &task->pairheap);
+     return mp_const_none;
+ }
+ STATIC MP_DEFINE_CONST_FUN_OBJ_2(task_queue_remove_obj, task_queue_remove);
+ 
+ STATIC const mp_rom_map_elem_t task_queue_locals_dict_table[] = {
+     { MP_ROM_QSTR(MP_QSTR_peek), MP_ROM_PTR(&task_queue_peek_obj) },
+     { MP_ROM_QSTR(MP_QSTR_push_sorted), MP_ROM_PTR(&task_queue_push_sorted_obj) },
+     { MP_ROM_QSTR(MP_QSTR_push_head), MP_ROM_PTR(&task_queue_push_sorted_obj) },
+     { MP_ROM_QSTR(MP_QSTR_pop_head), MP_ROM_PTR(&task_queue_pop_head_obj) },
+     { MP_ROM_QSTR(MP_QSTR_remove), MP_ROM_PTR(&task_queue_remove_obj) },
+ };
+ STATIC MP_DEFINE_CONST_DICT(task_queue_locals_dict, task_queue_locals_dict_table);
+ 
+ STATIC const mp_obj_type_t task_queue_type = {
+     { &mp_type_type },
+     .name = MP_QSTR_TaskQueue,
+     .make_new = task_queue_make_new,
+     .locals_dict = (mp_obj_dict_t *)&task_queue_locals_dict,
+ };
+ 
+ /******************************************************************************/
+ // Task class
+ 
+ // This is the core uasyncio context with cur_task, _task_queue and CancelledError.
+ STATIC mp_obj_t uasyncio_context = MP_OBJ_NULL;
+ 
+ STATIC mp_obj_t task_make_new(const mp_obj_type_t *type, size_t n_args, size_t n_kw, const mp_obj_t *args) {
+     mp_arg_check_num(n_args, n_kw, 1, 2, false);
+     mp_obj_task_t *self = m_new_obj(mp_obj_task_t);
+     self->pairheap.base.type = type;
+     mp_pairheap_init_node(task_lt, &self->pairheap);
+     self->coro = args[0];
+     self->data = mp_const_none;
+     self->waiting = mp_const_none;
+     self->ph_key = MP_OBJ_NEW_SMALL_INT(0);
+     if (n_args == 2) {
+         uasyncio_context = args[1];
+     }
+     return MP_OBJ_FROM_PTR(self);
+ }
+ 
+ STATIC mp_obj_t task_cancel(mp_obj_t self_in) {
+     mp_obj_task_t *self = MP_OBJ_TO_PTR(self_in);
+     // Check if task is already finished.
+     if (self->coro == mp_const_none) {
+         return mp_const_false;
+     }
+     // Can't cancel self (not supported yet).
+     mp_obj_t cur_task = mp_obj_dict_get(uasyncio_context, MP_OBJ_NEW_QSTR(MP_QSTR_cur_task));
+     if (self_in == cur_task) {
+         mp_raise_msg(&mp_type_RuntimeError, "can't cancel self");
+     }
+     // If Task waits on another task then forward the cancel to the one it's waiting on.
+     while (mp_obj_is_subclass_fast(MP_OBJ_FROM_PTR(mp_obj_get_type(self->data)), MP_OBJ_FROM_PTR(&task_type))) {
+         self = MP_OBJ_TO_PTR(self->data);
+     }
+ 
+     mp_obj_t _task_queue = mp_obj_dict_get(uasyncio_context, MP_OBJ_NEW_QSTR(MP_QSTR__task_queue));
+ 
+     // Reschedule Task as a cancelled task.
+     mp_obj_t dest[3];
+     mp_load_method_maybe(self->data, MP_QSTR_remove, dest);
+     if (dest[0] != MP_OBJ_NULL) {
+         // Not on the main running queue, remove the task from the queue it's on.
+         dest[2] = MP_OBJ_FROM_PTR(self);
+         mp_call_method_n_kw(1, 0, dest);
+         // _task_queue.push_head(self)
+         dest[0] = _task_queue;
+         dest[1] = MP_OBJ_FROM_PTR(self);
+         task_queue_push_sorted(2, dest);
+     } else if (ticks_diff(self->ph_key, ticks()) > 0) {
+         // On the main running queue but scheduled in the future, so bring it forward to now.
+         // _task_queue.remove(self)
+         task_queue_remove(_task_queue, MP_OBJ_FROM_PTR(self));
+         // _task_queue.push_head(self)
+         dest[0] = _task_queue;
+         dest[1] = MP_OBJ_FROM_PTR(self);
+         task_queue_push_sorted(2, dest);
+     }
+ 
+     self->data = mp_obj_dict_get(uasyncio_context, MP_OBJ_NEW_QSTR(MP_QSTR_CancelledError));
+ 
+     return mp_const_true;
+ }
+ STATIC MP_DEFINE_CONST_FUN_OBJ_1(task_cancel_obj, task_cancel);
+ 
+ STATIC void task_attr(mp_obj_t self_in, qstr attr, mp_obj_t *dest) {
+     mp_obj_task_t *self = MP_OBJ_TO_PTR(self_in);
+     if (dest[0] == MP_OBJ_NULL) {
+         // Load
+         if (attr == MP_QSTR_coro) {
+             dest[0] = self->coro;
+         } else if (attr == MP_QSTR_data) {
+             dest[0] = self->data;
+         } else if (attr == MP_QSTR_waiting) {
+             if (self->waiting != mp_const_none) {
+                 dest[0] = self->waiting;
+             }
+         } else if (attr == MP_QSTR_cancel) {
+             dest[0] = MP_OBJ_FROM_PTR(&task_cancel_obj);
+             dest[1] = self_in;
+         } else if (attr == MP_QSTR_ph_key) {
+             dest[0] = self->ph_key;
+         }
+     } else if (dest[1] != MP_OBJ_NULL) {
+         // Store
+         if (attr == MP_QSTR_coro) {
+             self->coro = dest[1];
+             dest[0] = MP_OBJ_NULL;
+         } else if (attr == MP_QSTR_data) {
+             self->data = dest[1];
+             dest[0] = MP_OBJ_NULL;
+         } else if (attr == MP_QSTR_waiting) {
+             self->waiting = dest[1];
+             dest[0] = MP_OBJ_NULL;
+         }
+     }
+ }
+ 
+ STATIC mp_obj_t task_getiter(mp_obj_t self_in, mp_obj_iter_buf_t *iter_buf) {
+     (void)iter_buf;
+     mp_obj_task_t *self = MP_OBJ_TO_PTR(self_in);
+     if (self->waiting == mp_const_none) {
+         self->waiting = task_queue_make_new(&task_queue_type, 0, 0, NULL);
+     }
+     return self_in;
+ }
+ 
+ STATIC mp_obj_t task_iternext(mp_obj_t self_in) {
+     mp_obj_task_t *self = MP_OBJ_TO_PTR(self_in);
+     if (self->coro == mp_const_none) {
+         // Task finished, raise return value to caller so it can continue.
+         nlr_raise(self->data);
+     } else {
+         // Put calling task on waiting queue.
+         mp_obj_t cur_task = mp_obj_dict_get(uasyncio_context, MP_OBJ_NEW_QSTR(MP_QSTR_cur_task));
+         mp_obj_t args[2] = { self->waiting, cur_task };
+         task_queue_push_sorted(2, args);
+         // Set calling task's data to this task that it waits on, to double-link it.
+         ((mp_obj_task_t *)MP_OBJ_TO_PTR(cur_task))->data = self_in;
+     }
+     return mp_const_none;
+ }
+ 
+ STATIC const mp_obj_type_t task_type = {
+     { &mp_type_type },
+     .name = MP_QSTR_Task,
+     .make_new = task_make_new,
+     .attr = task_attr,
+     .getiter = task_getiter,
+     .iternext = task_iternext,
+ };
+ 
+ /******************************************************************************/
+ // C-level uasyncio module
+ 
+ STATIC const mp_rom_map_elem_t mp_module_uasyncio_globals_table[] = {
+     { MP_ROM_QSTR(MP_QSTR___name__), MP_ROM_QSTR(MP_QSTR__uasyncio) },
+     { MP_ROM_QSTR(MP_QSTR_TaskQueue), MP_ROM_PTR(&task_queue_type) },
+     { MP_ROM_QSTR(MP_QSTR_Task), MP_ROM_PTR(&task_type) },
+ };
+ STATIC MP_DEFINE_CONST_DICT(mp_module_uasyncio_globals, mp_module_uasyncio_globals_table);
+ 
+ const mp_obj_module_t mp_module_uasyncio = {
+     .base = { &mp_type_module },
+     .globals = (mp_obj_dict_t *)&mp_module_uasyncio_globals,
+ };
+ 
+ #endif // MICROPY_PY_UASYNCIO
diff -crNb MicorpythonOriginal1.12/micropython/extmod/__olduasyncio/core.py micropython1.12_withUlab/micropython/extmod/__olduasyncio/core.py
*** MicorpythonOriginal1.12/micropython/extmod/__olduasyncio/core.py	1970-01-01 02:00:00.000000000 +0200
--- micropython1.12_withUlab/micropython/extmod/__olduasyncio/core.py	2020-06-18 19:00:44.970879000 +0200
***************
*** 0 ****
--- 1,277 ----
+ # MicroPython uasyncio module
+ # MIT license; Copyright (c) 2019 Damien P. George
+ 
+ from time import ticks_ms as ticks, ticks_diff, ticks_add
+ import sys, select
+ 
+ # Import TaskQueue and Task, preferring built-in C code over Python code
+ try:
+     from _uasyncio import TaskQueue, Task
+ except:
+     from .task import TaskQueue, Task
+ 
+ 
+ ################################################################################
+ # Exceptions
+ 
+ 
+ class CancelledError(BaseException):
+     pass
+ 
+ 
+ class TimeoutError(Exception):
+     pass
+ 
+ 
+ # Used when calling Loop.call_exception_handler
+ _exc_context = {"message": "Task exception wasn't retrieved", "exception": None, "future": None}
+ 
+ 
+ ################################################################################
+ # Sleep functions
+ 
+ # "Yield" once, then raise StopIteration
+ class SingletonGenerator:
+     def __init__(self):
+         self.state = None
+         self.exc = StopIteration()
+ 
+     def __iter__(self):
+         return self
+ 
+     def __next__(self):
+         if self.state is not None:
+             _task_queue.push_sorted(cur_task, self.state)
+             self.state = None
+             return None
+         else:
+             self.exc.__traceback__ = None
+             raise self.exc
+ 
+ 
+ # Pause task execution for the given time (integer in milliseconds, uPy extension)
+ # Use a SingletonGenerator to do it without allocating on the heap
+ def sleep_ms(t, sgen=SingletonGenerator()):
+     assert sgen.state is None
+     sgen.state = ticks_add(ticks(), t)
+     return sgen
+ 
+ 
+ # Pause task execution for the given time (in seconds)
+ def sleep(t):
+     return sleep_ms(int(t * 1000))
+ 
+ 
+ ################################################################################
+ # Queue and poller for stream IO
+ 
+ 
+ class IOQueue:
+     def __init__(self):
+         self.poller = select.poll()
+         self.map = {}  # maps id(stream) to [task_waiting_read, task_waiting_write, stream]
+ 
+     def _enqueue(self, s, idx):
+         if id(s) not in self.map:
+             entry = [None, None, s]
+             entry[idx] = cur_task
+             self.map[id(s)] = entry
+             self.poller.register(s, select.POLLIN if idx == 0 else select.POLLOUT)
+         else:
+             sm = self.map[id(s)]
+             assert sm[idx] is None
+             assert sm[1 - idx] is not None
+             sm[idx] = cur_task
+             self.poller.modify(s, select.POLLIN | select.POLLOUT)
+         # Link task to this IOQueue so it can be removed if needed
+         cur_task.data = self
+ 
+     def _dequeue(self, s):
+         del self.map[id(s)]
+         self.poller.unregister(s)
+ 
+     def queue_read(self, s):
+         self._enqueue(s, 0)
+ 
+     def queue_write(self, s):
+         self._enqueue(s, 1)
+ 
+     def remove(self, task):
+         while True:
+             del_s = None
+             for k in self.map:  # Iterate without allocating on the heap
+                 q0, q1, s = self.map[k]
+                 if q0 is task or q1 is task:
+                     del_s = s
+                     break
+             if del_s is not None:
+                 self._dequeue(s)
+             else:
+                 break
+ 
+     def wait_io_event(self, dt):
+         for s, ev in self.poller.ipoll(dt):
+             sm = self.map[id(s)]
+             # print('poll', s, sm, ev)
+             if ev & ~select.POLLOUT and sm[0] is not None:
+                 # POLLIN or error
+                 _task_queue.push_head(sm[0])
+                 sm[0] = None
+             if ev & ~select.POLLIN and sm[1] is not None:
+                 # POLLOUT or error
+                 _task_queue.push_head(sm[1])
+                 sm[1] = None
+             if sm[0] is None and sm[1] is None:
+                 self._dequeue(s)
+             elif sm[0] is None:
+                 self.poller.modify(s, select.POLLOUT)
+             else:
+                 self.poller.modify(s, select.POLLIN)
+ 
+ 
+ ################################################################################
+ # Main run loop
+ 
+ # Ensure the awaitable is a task
+ def _promote_to_task(aw):
+     return aw if isinstance(aw, Task) else create_task(aw)
+ 
+ 
+ # Create and schedule a new task from a coroutine
+ def create_task(coro):
+     if not hasattr(coro, "send"):
+         raise TypeError("coroutine expected")
+     t = Task(coro, globals())
+     _task_queue.push_head(t)
+     return t
+ 
+ 
+ # Keep scheduling tasks until there are none left to schedule
+ def run_until_complete(main_task=None):
+     global cur_task
+     excs_all = (CancelledError, Exception)  # To prevent heap allocation in loop
+     excs_stop = (CancelledError, StopIteration)  # To prevent heap allocation in loop
+     while True:
+         # Wait until the head of _task_queue is ready to run
+         dt = 1
+         while dt > 0:
+             dt = -1
+             t = _task_queue.peek()
+             if t:
+                 # A task waiting on _task_queue; "ph_key" is time to schedule task at
+                 dt = max(0, ticks_diff(t.ph_key, ticks()))
+             elif not _io_queue.map:
+                 # No tasks can be woken so finished running
+                 return
+             # print('(poll {})'.format(dt), len(_io_queue.map))
+             _io_queue.wait_io_event(dt)
+ 
+         # Get next task to run and continue it
+         t = _task_queue.pop_head()
+         cur_task = t
+         try:
+             # Continue running the coroutine, it's responsible for rescheduling itself
+             exc = t.data
+             if not exc:
+                 t.coro.send(None)
+             else:
+                 t.data = None
+                 t.coro.throw(exc)
+         except excs_all as er:
+             # Check the task is not on any event queue
+             assert t.data is None
+             # This task is done, check if it's the main task and then loop should stop
+             if t is main_task:
+                 if isinstance(er, StopIteration):
+                     return er.value
+                 raise er
+             # Save return value of coro to pass up to caller
+             t.data = er
+             # Schedule any other tasks waiting on the completion of this task
+             waiting = False
+             if hasattr(t, "waiting"):
+                 while t.waiting.peek():
+                     _task_queue.push_head(t.waiting.pop_head())
+                     waiting = True
+                 t.waiting = None  # Free waiting queue head
+             # Print out exception for detached tasks
+             if not waiting and not isinstance(er, excs_stop):
+                 _exc_context["exception"] = er
+                 _exc_context["future"] = t
+                 Loop.call_exception_handler(_exc_context)
+             # Indicate task is done
+             t.coro = None
+ 
+ 
+ # Create a new task from a coroutine and run it until it finishes
+ def run(coro):
+     return run_until_complete(create_task(coro))
+ 
+ 
+ ################################################################################
+ # Event loop wrapper
+ 
+ 
+ async def _stopper():
+     pass
+ 
+ 
+ _stop_task = None
+ 
+ 
+ class Loop:
+     _exc_handler = None
+ 
+     def create_task(coro):
+         return create_task(coro)
+ 
+     def run_forever():
+         global _stop_task
+         _stop_task = Task(_stopper(), globals())
+         run_until_complete(_stop_task)
+         # TODO should keep running until .stop() is called, even if there're no tasks left
+ 
+     def run_until_complete(aw):
+         return run_until_complete(_promote_to_task(aw))
+ 
+     def stop():
+         global _stop_task
+         if _stop_task is not None:
+             _task_queue.push_head(_stop_task)
+             # If stop() is called again, do nothing
+             _stop_task = None
+ 
+     def close():
+         pass
+ 
+     def set_exception_handler(handler):
+         Loop._exc_handler = handler
+ 
+     def get_exception_handler():
+         return Loop._exc_handler
+ 
+     def default_exception_handler(loop, context):
+         print(context["message"])
+         print("future:", context["future"], "coro=", context["future"].coro)
+         sys.print_exception(context["exception"])
+ 
+     def call_exception_handler(context):
+         (Loop._exc_handler or Loop.default_exception_handler)(Loop, context)
+ 
+ 
+ # The runq_len and waitq_len arguments are for legacy uasyncio compatibility
+ def get_event_loop(runq_len=0, waitq_len=0):
+     return Loop
+ 
+ 
+ def new_event_loop():
+     global _task_queue, _io_queue
+     # TaskQueue of Task instances
+     _task_queue = TaskQueue()
+     # Task queue and poller for stream IO
+     _io_queue = IOQueue()
+     return Loop
+ 
+ 
+ # Initialise default event loop
+ new_event_loop()
diff -crNb MicorpythonOriginal1.12/micropython/extmod/__olduasyncio/event.py micropython1.12_withUlab/micropython/extmod/__olduasyncio/event.py
*** MicorpythonOriginal1.12/micropython/extmod/__olduasyncio/event.py	1970-01-01 02:00:00.000000000 +0200
--- micropython1.12_withUlab/micropython/extmod/__olduasyncio/event.py	2020-06-18 19:00:44.970879000 +0200
***************
*** 0 ****
--- 1,31 ----
+ # MicroPython uasyncio module
+ # MIT license; Copyright (c) 2019-2020 Damien P. George
+ 
+ from . import core
+ 
+ # Event class for primitive events that can be waited on, set, and cleared
+ class Event:
+     def __init__(self):
+         self.state = False  # False=unset; True=set
+         self.waiting = core.TaskQueue()  # Queue of Tasks waiting on completion of this event
+ 
+     def is_set(self):
+         return self.state
+ 
+     def set(self):
+         # Event becomes set, schedule any tasks waiting on it
+         while self.waiting.peek():
+             core._task_queue.push_head(self.waiting.pop_head())
+         self.state = True
+ 
+     def clear(self):
+         self.state = False
+ 
+     async def wait(self):
+         if not self.state:
+             # Event not set, put the calling task on the event's waiting queue
+             self.waiting.push_head(core.cur_task)
+             # Set calling task's data to the event's queue so it can be removed if needed
+             core.cur_task.data = self.waiting
+             yield
+         return True
diff -crNb MicorpythonOriginal1.12/micropython/extmod/__olduasyncio/funcs.py micropython1.12_withUlab/micropython/extmod/__olduasyncio/funcs.py
*** MicorpythonOriginal1.12/micropython/extmod/__olduasyncio/funcs.py	1970-01-01 02:00:00.000000000 +0200
--- micropython1.12_withUlab/micropython/extmod/__olduasyncio/funcs.py	2020-06-18 19:00:44.970879000 +0200
***************
*** 0 ****
--- 1,54 ----
+ # MicroPython uasyncio module
+ # MIT license; Copyright (c) 2019-2020 Damien P. George
+ 
+ from . import core
+ 
+ 
+ async def wait_for(aw, timeout, sleep=core.sleep):
+     aw = core._promote_to_task(aw)
+     if timeout is None:
+         return await aw
+ 
+     def cancel(aw, timeout, sleep):
+         await sleep(timeout)
+         aw.cancel()
+ 
+     cancel_task = core.create_task(cancel(aw, timeout, sleep))
+     try:
+         ret = await aw
+     except core.CancelledError:
+         # Ignore CancelledError from aw, it's probably due to timeout
+         pass
+     finally:
+         # Cancel the "cancel" task if it's still active (optimisation instead of cancel_task.cancel())
+         if cancel_task.coro is not None:
+             core._task_queue.remove(cancel_task)
+     if cancel_task.coro is None:
+         # Cancel task ran to completion, ie there was a timeout
+         raise core.TimeoutError
+     return ret
+ 
+ 
+ def wait_for_ms(aw, timeout):
+     return wait_for(aw, timeout, core.sleep_ms)
+ 
+ 
+ async def gather(*aws, return_exceptions=False):
+     ts = [core._promote_to_task(aw) for aw in aws]
+     for i in range(len(ts)):
+         try:
+             # TODO handle cancel of gather itself
+             # if ts[i].coro:
+             #    iter(ts[i]).waiting.push_head(cur_task)
+             #    try:
+             #        yield
+             #    except CancelledError as er:
+             #        # cancel all waiting tasks
+             #        raise er
+             ts[i] = await ts[i]
+         except Exception as er:
+             if return_exceptions:
+                 ts[i] = er
+             else:
+                 raise er
+     return ts
diff -crNb MicorpythonOriginal1.12/micropython/extmod/__olduasyncio/__init__.py micropython1.12_withUlab/micropython/extmod/__olduasyncio/__init__.py
*** MicorpythonOriginal1.12/micropython/extmod/__olduasyncio/__init__.py	1970-01-01 02:00:00.000000000 +0200
--- micropython1.12_withUlab/micropython/extmod/__olduasyncio/__init__.py	2020-06-18 19:00:44.970879000 +0200
***************
*** 0 ****
--- 1,29 ----
+ # MicroPython uasyncio module
+ # MIT license; Copyright (c) 2019 Damien P. George
+ 
+ from .core import *
+ 
+ __version__ = (3, 0, 0)
+ 
+ _attrs = {
+     "wait_for": "funcs",
+     "wait_for_ms": "funcs",
+     "gather": "funcs",
+     "Event": "event",
+     "Lock": "lock",
+     "open_connection": "stream",
+     "start_server": "stream",
+     "StreamReader": "stream",
+     "StreamWriter": "stream",
+ }
+ 
+ # Lazy loader, effectively does:
+ #   global attr
+ #   from .mod import attr
+ def __getattr__(attr):
+     mod = _attrs.get(attr, None)
+     if mod is None:
+         raise AttributeError(attr)
+     value = getattr(__import__(mod, None, None, True, 1), attr)
+     globals()[attr] = value
+     return value
diff -crNb MicorpythonOriginal1.12/micropython/extmod/__olduasyncio/lock.py micropython1.12_withUlab/micropython/extmod/__olduasyncio/lock.py
*** MicorpythonOriginal1.12/micropython/extmod/__olduasyncio/lock.py	1970-01-01 02:00:00.000000000 +0200
--- micropython1.12_withUlab/micropython/extmod/__olduasyncio/lock.py	2020-06-18 19:00:44.970879000 +0200
***************
*** 0 ****
--- 1,53 ----
+ # MicroPython uasyncio module
+ # MIT license; Copyright (c) 2019-2020 Damien P. George
+ 
+ from . import core
+ 
+ # Lock class for primitive mutex capability
+ class Lock:
+     def __init__(self):
+         # The state can take the following values:
+         # - 0: unlocked
+         # - 1: locked
+         # - <Task>: unlocked but this task has been scheduled to acquire the lock next
+         self.state = 0
+         # Queue of Tasks waiting to acquire this Lock
+         self.waiting = core.TaskQueue()
+ 
+     def locked(self):
+         return self.state == 1
+ 
+     def release(self):
+         if self.state != 1:
+             raise RuntimeError("Lock not acquired")
+         if self.waiting.peek():
+             # Task(s) waiting on lock, schedule next Task
+             self.state = self.waiting.pop_head()
+             core._task_queue.push_head(self.state)
+         else:
+             # No Task waiting so unlock
+             self.state = 0
+ 
+     async def acquire(self):
+         if self.state != 0:
+             # Lock unavailable, put the calling Task on the waiting queue
+             self.waiting.push_head(core.cur_task)
+             # Set calling task's data to the lock's queue so it can be removed if needed
+             core.cur_task.data = self.waiting
+             try:
+                 yield
+             except core.CancelledError as er:
+                 if self.state == core.cur_task:
+                     # Cancelled while pending on resume, schedule next waiting Task
+                     self.state = 1
+                     self.release()
+                 raise er
+         # Lock available, set it as locked
+         self.state = 1
+         return True
+ 
+     async def __aenter__(self):
+         return await self.acquire()
+ 
+     async def __aexit__(self, exc_type, exc, tb):
+         return self.release()
diff -crNb MicorpythonOriginal1.12/micropython/extmod/__olduasyncio/manifest.py micropython1.12_withUlab/micropython/extmod/__olduasyncio/manifest.py
*** MicorpythonOriginal1.12/micropython/extmod/__olduasyncio/manifest.py	1970-01-01 02:00:00.000000000 +0200
--- micropython1.12_withUlab/micropython/extmod/__olduasyncio/manifest.py	2020-06-19 20:29:40.751425219 +0200
***************
*** 0 ****
--- 1,14 ----
+ # This list of frozen files doesn't include task.py because that's provided by the C module.
+ freeze(
+     "..",
+     (
+         "uasyncio/__init__.py",
+         "uasyncio/core.py",
+         "uasyncio/event.py",
+         "uasyncio/funcs.py",
+         "uasyncio/lock.py",
+         "uasyncio/stream.py",
+         "uasyncio/synchro.py",
+     ),
+     opt=3,
+ )
diff -crNb MicorpythonOriginal1.12/micropython/extmod/__olduasyncio/stream.py micropython1.12_withUlab/micropython/extmod/__olduasyncio/stream.py
*** MicorpythonOriginal1.12/micropython/extmod/__olduasyncio/stream.py	1970-01-01 02:00:00.000000000 +0200
--- micropython1.12_withUlab/micropython/extmod/__olduasyncio/stream.py	2020-06-18 19:00:44.970879000 +0200
***************
*** 0 ****
--- 1,146 ----
+ # MicroPython uasyncio module
+ # MIT license; Copyright (c) 2019-2020 Damien P. George
+ 
+ from . import core
+ 
+ 
+ class Stream:
+     def __init__(self, s, e={}):
+         self.s = s
+         self.e = e
+         self.out_buf = b""
+ 
+     def get_extra_info(self, v):
+         return self.e[v]
+ 
+     async def __aenter__(self):
+         return self
+ 
+     async def __aexit__(self, exc_type, exc, tb):
+         await self.close()
+ 
+     def close(self):
+         pass
+ 
+     async def wait_closed(self):
+         # TODO yield?
+         self.s.close()
+ 
+     async def read(self, n):
+         yield core._io_queue.queue_read(self.s)
+         return self.s.read(n)
+ 
+     async def readline(self):
+         l = b""
+         while True:
+             yield core._io_queue.queue_read(self.s)
+             l2 = self.s.readline()  # may do multiple reads but won't block
+             l += l2
+             if not l2 or l[-1] == 10:  # \n (check l in case l2 is str)
+                 return l
+ 
+     def write(self, buf):
+         self.out_buf += buf
+ 
+     async def drain(self):
+         mv = memoryview(self.out_buf)
+         off = 0
+         while off < len(mv):
+             yield core._io_queue.queue_write(self.s)
+             ret = self.s.write(mv[off:])
+             if ret is not None:
+                 off += ret
+         self.out_buf = b""
+ 
+ 
+ # Stream can be used for both reading and writing to save code size
+ StreamReader = Stream
+ StreamWriter = Stream
+ 
+ 
+ # Create a TCP stream connection to a remote host
+ async def open_connection(host, port):
+     from uerrno import EINPROGRESS
+     import usocket as socket
+ 
+     ai = socket.getaddrinfo(host, port)[0]  # TODO this is blocking!
+     s = socket.socket()
+     s.setblocking(False)
+     ss = Stream(s)
+     try:
+         s.connect(ai[-1])
+     except OSError as er:
+         if er.args[0] != EINPROGRESS:
+             raise er
+     yield core._io_queue.queue_write(s)
+     return ss, ss
+ 
+ 
+ # Class representing a TCP stream server, can be closed and used in "async with"
+ class Server:
+     async def __aenter__(self):
+         return self
+ 
+     async def __aexit__(self, exc_type, exc, tb):
+         self.close()
+         await self.wait_closed()
+ 
+     def close(self):
+         self.task.cancel()
+ 
+     async def wait_closed(self):
+         await self.task
+ 
+     async def _serve(self, cb, host, port, backlog):
+         import usocket as socket
+ 
+         ai = socket.getaddrinfo(host, port)[0]  # TODO this is blocking!
+         s = socket.socket()
+         s.setblocking(False)
+         s.setsockopt(socket.SOL_SOCKET, socket.SO_REUSEADDR, 1)
+         s.bind(ai[-1])
+         s.listen(backlog)
+         self.task = core.cur_task
+         # Accept incoming connections
+         while True:
+             try:
+                 yield core._io_queue.queue_read(s)
+             except core.CancelledError:
+                 # Shutdown server
+                 s.close()
+                 return
+             try:
+                 s2, addr = s.accept()
+             except:
+                 # Ignore a failed accept
+                 continue
+             s2.setblocking(False)
+             s2s = Stream(s2, {"peername": addr})
+             core.create_task(cb(s2s, s2s))
+ 
+ 
+ # Helper function to start a TCP stream server, running as a new task
+ # TODO could use an accept-callback on socket read activity instead of creating a task
+ async def start_server(cb, host, port, backlog=5):
+     s = Server()
+     core.create_task(s._serve(cb, host, port, backlog))
+     return s
+ 
+ 
+ ################################################################################
+ # Legacy uasyncio compatibility
+ 
+ 
+ async def stream_awrite(self, buf, off=0, sz=-1):
+     if off != 0 or sz != -1:
+         buf = memoryview(buf)
+         if sz == -1:
+             sz = len(buf)
+         buf = buf[off : off + sz]
+     self.write(buf)
+     await self.drain()
+ 
+ 
+ Stream.aclose = Stream.wait_closed
+ Stream.awrite = stream_awrite
+ Stream.awritestr = stream_awrite  # TODO explicitly convert to bytes?
diff -crNb MicorpythonOriginal1.12/micropython/extmod/__olduasyncio/synchro.py micropython1.12_withUlab/micropython/extmod/__olduasyncio/synchro.py
*** MicorpythonOriginal1.12/micropython/extmod/__olduasyncio/synchro.py	1970-01-01 02:00:00.000000000 +0200
--- micropython1.12_withUlab/micropython/extmod/__olduasyncio/synchro.py	2020-06-19 20:22:01.060319000 +0200
***************
*** 0 ****
--- 1,28 ----
+ from uasyncio import core
+ 
+ class Lock:
+ 
+     def __init__(self):
+         self.locked = False
+         self.wlist = []
+ 
+     def release(self):
+         assert self.locked
+         self.locked = False
+         if self.wlist:
+             #print(self.wlist)
+             coro = self.wlist.pop(0)
+             core.get_event_loop().call_soon(coro)
+ 
+     def acquire(self):
+         # As release() is not coro, assume we just released and going to acquire again
+         # so, yield first to let someone else to acquire it first
+         yield
+         #print("acquire:", self.locked)
+         while 1:
+             if not self.locked:
+                 self.locked = True
+                 return True
+             #print("putting", core.get_event_loop().cur_task, "on waiting list")
+             self.wlist.append(core.get_event_loop().cur_task)
+             yield False
diff -crNb MicorpythonOriginal1.12/micropython/extmod/__olduasyncio/task.py micropython1.12_withUlab/micropython/extmod/__olduasyncio/task.py
*** MicorpythonOriginal1.12/micropython/extmod/__olduasyncio/task.py	1970-01-01 02:00:00.000000000 +0200
--- micropython1.12_withUlab/micropython/extmod/__olduasyncio/task.py	2020-06-18 19:00:44.970879000 +0200
***************
*** 0 ****
--- 1,168 ----
+ # MicroPython uasyncio module
+ # MIT license; Copyright (c) 2019-2020 Damien P. George
+ 
+ # This file contains the core TaskQueue based on a pairing heap, and the core Task class.
+ # They can optionally be replaced by C implementations.
+ 
+ from . import core
+ 
+ 
+ # pairing-heap meld of 2 heaps; O(1)
+ def ph_meld(h1, h2):
+     if h1 is None:
+         return h2
+     if h2 is None:
+         return h1
+     lt = core.ticks_diff(h1.ph_key, h2.ph_key) < 0
+     if lt:
+         if h1.ph_child is None:
+             h1.ph_child = h2
+         else:
+             h1.ph_child_last.ph_next = h2
+         h1.ph_child_last = h2
+         h2.ph_next = None
+         h2.ph_rightmost_parent = h1
+         return h1
+     else:
+         h1.ph_next = h2.ph_child
+         h2.ph_child = h1
+         if h1.ph_next is None:
+             h2.ph_child_last = h1
+             h1.ph_rightmost_parent = h2
+         return h2
+ 
+ 
+ # pairing-heap pairing operation; amortised O(log N)
+ def ph_pairing(child):
+     heap = None
+     while child is not None:
+         n1 = child
+         child = child.ph_next
+         n1.ph_next = None
+         if child is not None:
+             n2 = child
+             child = child.ph_next
+             n2.ph_next = None
+             n1 = ph_meld(n1, n2)
+         heap = ph_meld(heap, n1)
+     return heap
+ 
+ 
+ # pairing-heap delete of a node; stable, amortised O(log N)
+ def ph_delete(heap, node):
+     if node is heap:
+         child = heap.ph_child
+         node.ph_child = None
+         return ph_pairing(child)
+     # Find parent of node
+     parent = node
+     while parent.ph_next is not None:
+         parent = parent.ph_next
+     parent = parent.ph_rightmost_parent
+     # Replace node with pairing of its children
+     if node is parent.ph_child and node.ph_child is None:
+         parent.ph_child = node.ph_next
+         node.ph_next = None
+         return heap
+     elif node is parent.ph_child:
+         child = node.ph_child
+         next = node.ph_next
+         node.ph_child = None
+         node.ph_next = None
+         node = ph_pairing(child)
+         parent.ph_child = node
+     else:
+         n = parent.ph_child
+         while node is not n.ph_next:
+             n = n.ph_next
+         child = node.ph_child
+         next = node.ph_next
+         node.ph_child = None
+         node.ph_next = None
+         node = ph_pairing(child)
+         if node is None:
+             node = n
+         else:
+             n.ph_next = node
+     node.ph_next = next
+     if next is None:
+         node.ph_rightmost_parent = parent
+         parent.ph_child_last = node
+     return heap
+ 
+ 
+ # TaskQueue class based on the above pairing-heap functions.
+ class TaskQueue:
+     def __init__(self):
+         self.heap = None
+ 
+     def peek(self):
+         return self.heap
+ 
+     def push_sorted(self, v, key):
+         v.data = None
+         v.ph_key = key
+         v.ph_child = None
+         v.ph_next = None
+         self.heap = ph_meld(v, self.heap)
+ 
+     def push_head(self, v):
+         self.push_sorted(v, core.ticks())
+ 
+     def pop_head(self):
+         v = self.heap
+         self.heap = ph_pairing(self.heap.ph_child)
+         return v
+ 
+     def remove(self, v):
+         self.heap = ph_delete(self.heap, v)
+ 
+ 
+ # Task class representing a coroutine, can be waited on and cancelled.
+ class Task:
+     def __init__(self, coro, globals=None):
+         self.coro = coro  # Coroutine of this Task
+         self.data = None  # General data for queue it is waiting on
+         self.ph_key = 0  # Pairing heap
+         self.ph_child = None  # Paring heap
+         self.ph_child_last = None  # Paring heap
+         self.ph_next = None  # Paring heap
+         self.ph_rightmost_parent = None  # Paring heap
+ 
+     def __iter__(self):
+         if not hasattr(self, "waiting"):
+             # Lazily allocated head of linked list of Tasks waiting on completion of this task.
+             self.waiting = TaskQueue()
+         return self
+ 
+     def __next__(self):
+         if not self.coro:
+             # Task finished, raise return value to caller so it can continue.
+             raise self.data
+         else:
+             # Put calling task on waiting queue.
+             self.waiting.push_head(core.cur_task)
+             # Set calling task's data to this task that it waits on, to double-link it.
+             core.cur_task.data = self
+ 
+     def cancel(self):
+         # Check if task is already finished.
+         if self.coro is None:
+             return False
+         # Can't cancel self (not supported yet).
+         if self is core.cur_task:
+             raise RuntimeError("can't cancel self")
+         # If Task waits on another task then forward the cancel to the one it's waiting on.
+         while isinstance(self.data, Task):
+             self = self.data
+         # Reschedule Task as a cancelled task.
+         if hasattr(self.data, "remove"):
+             # Not on the main running queue, remove the task from the queue it's on.
+             self.data.remove(self)
+             core._task_queue.push_head(self)
+         elif core.ticks_diff(self.ph_key, core.ticks()) > 0:
+             # On the main running queue but scheduled in the future, so bring it forward to now.
+             core._task_queue.remove(self)
+             core._task_queue.push_head(self)
+         self.data = core.CancelledError
+         return True
diff -crNb MicorpythonOriginal1.12/micropython/extmod/uasyncio/core.py micropython1.12_withUlab/micropython/extmod/uasyncio/core.py
*** MicorpythonOriginal1.12/micropython/extmod/uasyncio/core.py	1970-01-01 02:00:00.000000000 +0200
--- micropython1.12_withUlab/micropython/extmod/uasyncio/core.py	2020-06-19 20:22:01.060319000 +0200
***************
*** 0 ****
--- 1,315 ----
+ import utime as time
+ import utimeq
+ import ucollections
+ 
+ 
+ type_gen = type((lambda: (yield))())
+ 
+ DEBUG = 0
+ log = None
+ 
+ def set_debug(val):
+     global DEBUG, log
+     DEBUG = val
+     if val:
+         import logging
+         log = logging.getLogger("uasyncio.core")
+ 
+ 
+ class CancelledError(Exception):
+     pass
+ 
+ 
+ class TimeoutError(CancelledError):
+     pass
+ 
+ 
+ class EventLoop:
+ 
+     def __init__(self, runq_len=16, waitq_len=16):
+         self.runq = ucollections.deque((), runq_len, True)
+         self.waitq = utimeq.utimeq(waitq_len)
+         # Current task being run. Task is a top-level coroutine scheduled
+         # in the event loop (sub-coroutines executed transparently by
+         # yield from/await, event loop "doesn't see" them).
+         self.cur_task = None
+ 
+     def time(self):
+         return time.ticks_ms()
+ 
+     def create_task(self, coro):
+         # CPython 3.4.2
+         self.call_later_ms(0, coro)
+         # CPython asyncio incompatibility: we don't return Task object
+ 
+     def call_soon(self, callback, *args):
+         if __debug__ and DEBUG:
+             log.debug("Scheduling in runq: %s", (callback, args))
+         self.runq.append(callback)
+         if not isinstance(callback, type_gen):
+             self.runq.append(args)
+ 
+     def call_later(self, delay, callback, *args):
+         self.call_at_(time.ticks_add(self.time(), int(delay * 1000)), callback, args)
+ 
+     def call_later_ms(self, delay, callback, *args):
+         if not delay:
+             return self.call_soon(callback, *args)
+         self.call_at_(time.ticks_add(self.time(), delay), callback, args)
+ 
+     def call_at_(self, time, callback, args=()):
+         if __debug__ and DEBUG:
+             log.debug("Scheduling in waitq: %s", (time, callback, args))
+         self.waitq.push(time, callback, args)
+ 
+     def wait(self, delay):
+         # Default wait implementation, to be overriden in subclasses
+         # with IO scheduling
+         if __debug__ and DEBUG:
+             log.debug("Sleeping for: %s", delay)
+         time.sleep_ms(delay)
+ 
+     def run_forever(self):
+         cur_task = [0, 0, 0]
+         while True:
+             # Expire entries in waitq and move them to runq
+             tnow = self.time()
+             while self.waitq:
+                 t = self.waitq.peektime()
+                 delay = time.ticks_diff(t, tnow)
+                 if delay > 0:
+                     break
+                 self.waitq.pop(cur_task)
+                 if __debug__ and DEBUG:
+                     log.debug("Moving from waitq to runq: %s", cur_task[1])
+                 self.call_soon(cur_task[1], *cur_task[2])
+ 
+             # Process runq
+             l = len(self.runq)
+             if __debug__ and DEBUG:
+                 log.debug("Entries in runq: %d", l)
+             while l:
+                 cb = self.runq.popleft()
+                 l -= 1
+                 args = ()
+                 if not isinstance(cb, type_gen):
+                     args = self.runq.popleft()
+                     l -= 1
+                     if __debug__ and DEBUG:
+                         log.info("Next callback to run: %s", (cb, args))
+                     cb(*args)
+                     continue
+ 
+                 if __debug__ and DEBUG:
+                     log.info("Next coroutine to run: %s", (cb, args))
+                 self.cur_task = cb
+                 delay = 0
+                 try:
+                     if args is ():
+                         ret = next(cb)
+                     else:
+                         ret = cb.send(*args)
+                     if __debug__ and DEBUG:
+                         log.info("Coroutine %s yield result: %s", cb, ret)
+                     if isinstance(ret, SysCall1):
+                         arg = ret.arg
+                         if isinstance(ret, SleepMs):
+                             delay = arg
+                         elif isinstance(ret, IORead):
+                             cb.pend_throw(False)
+                             self.add_reader(arg, cb)
+                             continue
+                         elif isinstance(ret, IOWrite):
+                             cb.pend_throw(False)
+                             self.add_writer(arg, cb)
+                             continue
+                         elif isinstance(ret, IOReadDone):
+                             self.remove_reader(arg)
+                         elif isinstance(ret, IOWriteDone):
+                             self.remove_writer(arg)
+                         elif isinstance(ret, StopLoop):
+                             return arg
+                         else:
+                             assert False, "Unknown syscall yielded: %r (of type %r)" % (ret, type(ret))
+                     elif isinstance(ret, type_gen):
+                         self.call_soon(ret)
+                     elif isinstance(ret, int):
+                         # Delay
+                         delay = ret
+                     elif ret is None:
+                         # Just reschedule
+                         pass
+                     elif ret is False:
+                         # Don't reschedule
+                         continue
+                     else:
+                         assert False, "Unsupported coroutine yield value: %r (of type %r)" % (ret, type(ret))
+                 except StopIteration as e:
+                     if __debug__ and DEBUG:
+                         log.debug("Coroutine finished: %s", cb)
+                     continue
+                 except CancelledError as e:
+                     if __debug__ and DEBUG:
+                         log.debug("Coroutine cancelled: %s", cb)
+                     continue
+                 # Currently all syscalls don't return anything, so we don't
+                 # need to feed anything to the next invocation of coroutine.
+                 # If that changes, need to pass that value below.
+                 if delay:
+                     self.call_later_ms(delay, cb)
+                 else:
+                     self.call_soon(cb)
+ 
+             # Wait until next waitq task or I/O availability
+             delay = 0
+             if not self.runq:
+                 delay = -1
+                 if self.waitq:
+                     tnow = self.time()
+                     t = self.waitq.peektime()
+                     delay = time.ticks_diff(t, tnow)
+                     if delay < 0:
+                         delay = 0
+             self.wait(delay)
+ 
+     def run_until_complete(self, coro):
+         def _run_and_stop():
+             yield from coro
+             yield StopLoop(0)
+         self.call_soon(_run_and_stop())
+         self.run_forever()
+ 
+     def stop(self):
+         self.call_soon((lambda: (yield StopLoop(0)))())
+ 
+     def close(self):
+         pass
+ 
+ 
+ class SysCall:
+ 
+     def __init__(self, *args):
+         self.args = args
+ 
+     def handle(self):
+         raise NotImplementedError
+ 
+ # Optimized syscall with 1 arg
+ class SysCall1(SysCall):
+ 
+     def __init__(self, arg):
+         self.arg = arg
+ 
+ class StopLoop(SysCall1):
+     pass
+ 
+ class IORead(SysCall1):
+     pass
+ 
+ class IOWrite(SysCall1):
+     pass
+ 
+ class IOReadDone(SysCall1):
+     pass
+ 
+ class IOWriteDone(SysCall1):
+     pass
+ 
+ 
+ _event_loop = None
+ _event_loop_class = EventLoop
+ def get_event_loop(runq_len=16, waitq_len=16):
+     global _event_loop
+     if _event_loop is None:
+         _event_loop = _event_loop_class(runq_len, waitq_len)
+     return _event_loop
+ 
+ def sleep(secs):
+     yield int(secs * 1000)
+ 
+ # Implementation of sleep_ms awaitable with zero heap memory usage
+ class SleepMs(SysCall1):
+ 
+     def __init__(self):
+         self.v = None
+         self.arg = None
+ 
+     def __call__(self, arg):
+         self.v = arg
+         #print("__call__")
+         return self
+ 
+     def __iter__(self):
+         #print("__iter__")
+         return self
+ 
+     def __next__(self):
+         if self.v is not None:
+             #print("__next__ syscall enter")
+             self.arg = self.v
+             self.v = None
+             return self
+         #print("__next__ syscall exit")
+         _stop_iter.__traceback__ = None
+         raise _stop_iter
+ 
+ _stop_iter = StopIteration()
+ sleep_ms = SleepMs()
+ 
+ 
+ def cancel(coro):
+     prev = coro.pend_throw(CancelledError())
+     if prev is False:
+         _event_loop.call_soon(coro)
+ 
+ 
+ class TimeoutObj:
+     def __init__(self, coro):
+         self.coro = coro
+ 
+ 
+ def wait_for_ms(coro, timeout):
+ 
+     def waiter(coro, timeout_obj):
+         res = yield from coro
+         if __debug__ and DEBUG:
+             log.debug("waiter: cancelling %s", timeout_obj)
+         timeout_obj.coro = None
+         return res
+ 
+     def timeout_func(timeout_obj):
+         if timeout_obj.coro:
+             if __debug__ and DEBUG:
+                 log.debug("timeout_func: cancelling %s", timeout_obj.coro)
+             prev = timeout_obj.coro.pend_throw(TimeoutError())
+             #print("prev pend", prev)
+             if prev is False:
+                 _event_loop.call_soon(timeout_obj.coro)
+ 
+     timeout_obj = TimeoutObj(_event_loop.cur_task)
+     _event_loop.call_later_ms(timeout, timeout_func, timeout_obj)
+     return (yield from waiter(coro, timeout_obj))
+ 
+ 
+ def wait_for(coro, timeout):
+     return wait_for_ms(coro, int(timeout * 1000))
+ 
+ 
+ def coroutine(f):
+     return f
+ 
+ #
+ # The functions below are deprecated in uasyncio, and provided only
+ # for compatibility with CPython asyncio
+ #
+ 
+ def ensure_future(coro, loop=_event_loop):
+     _event_loop.call_soon(coro)
+     # CPython asyncio incompatibility: we don't return Task object
+     return coro
+ 
+ 
+ # CPython asyncio incompatibility: Task is a function, not a class (for efficiency)
+ def Task(coro, loop=_event_loop):
+     # Same as async()
+     _event_loop.call_soon(coro)
diff -crNb MicorpythonOriginal1.12/micropython/extmod/uasyncio/event.py micropython1.12_withUlab/micropython/extmod/uasyncio/event.py
*** MicorpythonOriginal1.12/micropython/extmod/uasyncio/event.py	1970-01-01 02:00:00.000000000 +0200
--- micropython1.12_withUlab/micropython/extmod/uasyncio/event.py	2020-06-18 19:00:44.970879000 +0200
***************
*** 0 ****
--- 1,31 ----
+ # MicroPython uasyncio module
+ # MIT license; Copyright (c) 2019-2020 Damien P. George
+ 
+ from . import core
+ 
+ # Event class for primitive events that can be waited on, set, and cleared
+ class Event:
+     def __init__(self):
+         self.state = False  # False=unset; True=set
+         self.waiting = core.TaskQueue()  # Queue of Tasks waiting on completion of this event
+ 
+     def is_set(self):
+         return self.state
+ 
+     def set(self):
+         # Event becomes set, schedule any tasks waiting on it
+         while self.waiting.peek():
+             core._task_queue.push_head(self.waiting.pop_head())
+         self.state = True
+ 
+     def clear(self):
+         self.state = False
+ 
+     async def wait(self):
+         if not self.state:
+             # Event not set, put the calling task on the event's waiting queue
+             self.waiting.push_head(core.cur_task)
+             # Set calling task's data to the event's queue so it can be removed if needed
+             core.cur_task.data = self.waiting
+             yield
+         return True
diff -crNb MicorpythonOriginal1.12/micropython/extmod/uasyncio/funcs.py micropython1.12_withUlab/micropython/extmod/uasyncio/funcs.py
*** MicorpythonOriginal1.12/micropython/extmod/uasyncio/funcs.py	1970-01-01 02:00:00.000000000 +0200
--- micropython1.12_withUlab/micropython/extmod/uasyncio/funcs.py	2020-06-18 19:00:44.970879000 +0200
***************
*** 0 ****
--- 1,54 ----
+ # MicroPython uasyncio module
+ # MIT license; Copyright (c) 2019-2020 Damien P. George
+ 
+ from . import core
+ 
+ 
+ async def wait_for(aw, timeout, sleep=core.sleep):
+     aw = core._promote_to_task(aw)
+     if timeout is None:
+         return await aw
+ 
+     def cancel(aw, timeout, sleep):
+         await sleep(timeout)
+         aw.cancel()
+ 
+     cancel_task = core.create_task(cancel(aw, timeout, sleep))
+     try:
+         ret = await aw
+     except core.CancelledError:
+         # Ignore CancelledError from aw, it's probably due to timeout
+         pass
+     finally:
+         # Cancel the "cancel" task if it's still active (optimisation instead of cancel_task.cancel())
+         if cancel_task.coro is not None:
+             core._task_queue.remove(cancel_task)
+     if cancel_task.coro is None:
+         # Cancel task ran to completion, ie there was a timeout
+         raise core.TimeoutError
+     return ret
+ 
+ 
+ def wait_for_ms(aw, timeout):
+     return wait_for(aw, timeout, core.sleep_ms)
+ 
+ 
+ async def gather(*aws, return_exceptions=False):
+     ts = [core._promote_to_task(aw) for aw in aws]
+     for i in range(len(ts)):
+         try:
+             # TODO handle cancel of gather itself
+             # if ts[i].coro:
+             #    iter(ts[i]).waiting.push_head(cur_task)
+             #    try:
+             #        yield
+             #    except CancelledError as er:
+             #        # cancel all waiting tasks
+             #        raise er
+             ts[i] = await ts[i]
+         except Exception as er:
+             if return_exceptions:
+                 ts[i] = er
+             else:
+                 raise er
+     return ts
diff -crNb MicorpythonOriginal1.12/micropython/extmod/uasyncio/__init__.py micropython1.12_withUlab/micropython/extmod/uasyncio/__init__.py
*** MicorpythonOriginal1.12/micropython/extmod/uasyncio/__init__.py	1970-01-01 02:00:00.000000000 +0200
--- micropython1.12_withUlab/micropython/extmod/uasyncio/__init__.py	2020-06-19 20:22:01.060319000 +0200
***************
*** 0 ****
--- 1,258 ----
+ import uerrno
+ import uselect as select
+ import usocket as _socket
+ from uasyncio.core import *
+ 
+ 
+ DEBUG = 0
+ log = None
+ 
+ def set_debug(val):
+     global DEBUG, log
+     DEBUG = val
+     if val:
+         import logging
+         log = logging.getLogger("uasyncio")
+ 
+ 
+ class PollEventLoop(EventLoop):
+ 
+     def __init__(self, runq_len=16, waitq_len=16):
+         EventLoop.__init__(self, runq_len, waitq_len)
+         self.poller = select.poll()
+         self.objmap = {}
+ 
+     def add_reader(self, sock, cb, *args):
+         if DEBUG and __debug__:
+             log.debug("add_reader%s", (sock, cb, args))
+         if args:
+             self.poller.register(sock, select.POLLIN)
+             self.objmap[id(sock)] = (cb, args)
+         else:
+             self.poller.register(sock, select.POLLIN)
+             self.objmap[id(sock)] = cb
+ 
+     def remove_reader(self, sock):
+         if DEBUG and __debug__:
+             log.debug("remove_reader(%s)", sock)
+         self.poller.unregister(sock)
+         del self.objmap[id(sock)]
+ 
+     def add_writer(self, sock, cb, *args):
+         if DEBUG and __debug__:
+             log.debug("add_writer%s", (sock, cb, args))
+         if args:
+             self.poller.register(sock, select.POLLOUT)
+             self.objmap[id(sock)] = (cb, args)
+         else:
+             self.poller.register(sock, select.POLLOUT)
+             self.objmap[id(sock)] = cb
+ 
+     def remove_writer(self, sock):
+         if DEBUG and __debug__:
+             log.debug("remove_writer(%s)", sock)
+         try:
+             self.poller.unregister(sock)
+             self.objmap.pop(id(sock), None)
+         except OSError as e:
+             # StreamWriter.awrite() first tries to write to a socket,
+             # and if that succeeds, yield IOWrite may never be called
+             # for that socket, and it will never be added to poller. So,
+             # ignore such error.
+             if e.args[0] != uerrno.ENOENT:
+                 raise
+ 
+     def wait(self, delay):
+         if DEBUG and __debug__:
+             log.debug("poll.wait(%d)", delay)
+         # We need one-shot behavior (second arg of 1 to .poll())
+         res = self.poller.ipoll(delay, 1)
+         #log.debug("poll result: %s", res)
+         # Remove "if res" workaround after
+         # https://github.com/micropython/micropython/issues/2716 fixed.
+         if res:
+             for sock, ev in res:
+                 cb = self.objmap[id(sock)]
+                 if ev & (select.POLLHUP | select.POLLERR):
+                     # These events are returned even if not requested, and
+                     # are sticky, i.e. will be returned again and again.
+                     # If the caller doesn't do proper error handling and
+                     # unregister this sock, we'll busy-loop on it, so we
+                     # as well can unregister it now "just in case".
+                     self.remove_reader(sock)
+                 if DEBUG and __debug__:
+                     log.debug("Calling IO callback: %r", cb)
+                 if isinstance(cb, tuple):
+                     cb[0](*cb[1])
+                 else:
+                     cb.pend_throw(None)
+                     self.call_soon(cb)
+ 
+ 
+ class StreamReader:
+ 
+     def __init__(self, polls, ios=None):
+         if ios is None:
+             ios = polls
+         self.polls = polls
+         self.ios = ios
+ 
+     def read(self, n=-1):
+         while True:
+             yield IORead(self.polls)
+             res = self.ios.read(n)
+             if res is not None:
+                 break
+             # This should not happen for real sockets, but can easily
+             # happen for stream wrappers (ssl, websockets, etc.)
+             #log.warn("Empty read")
+         if not res:
+             yield IOReadDone(self.polls)
+         return res
+ 
+     def readexactly(self, n):
+         buf = b""
+         while n:
+             yield IORead(self.polls)
+             res = self.ios.read(n)
+             assert res is not None
+             if not res:
+                 yield IOReadDone(self.polls)
+                 break
+             buf += res
+             n -= len(res)
+         return buf
+ 
+     def readline(self):
+         if DEBUG and __debug__:
+             log.debug("StreamReader.readline()")
+         buf = b""
+         while True:
+             yield IORead(self.polls)
+             res = self.ios.readline()
+             assert res is not None
+             if not res:
+                 yield IOReadDone(self.polls)
+                 break
+             buf += res
+             if buf[-1] == 0x0a:
+                 break
+         if DEBUG and __debug__:
+             log.debug("StreamReader.readline(): %s", buf)
+         return buf
+ 
+     def aclose(self):
+         yield IOReadDone(self.polls)
+         self.ios.close()
+ 
+     def __repr__(self):
+         return "<StreamReader %r %r>" % (self.polls, self.ios)
+ 
+ 
+ class StreamWriter:
+ 
+     def __init__(self, s, extra):
+         self.s = s
+         self.extra = extra
+ 
+     def awrite(self, buf, off=0, sz=-1):
+         # This method is called awrite (async write) to not proliferate
+         # incompatibility with original asyncio. Unlike original asyncio
+         # whose .write() method is both not a coroutine and guaranteed
+         # to return immediately (which means it has to buffer all the
+         # data), this method is a coroutine.
+         if sz == -1:
+             sz = len(buf) - off
+         if DEBUG and __debug__:
+             log.debug("StreamWriter.awrite(): spooling %d bytes", sz)
+         while True:
+             res = self.s.write(buf, off, sz)
+             # If we spooled everything, return immediately
+             if res == sz:
+                 if DEBUG and __debug__:
+                     log.debug("StreamWriter.awrite(): completed spooling %d bytes", res)
+                 return
+             if res is None:
+                 res = 0
+             if DEBUG and __debug__:
+                 log.debug("StreamWriter.awrite(): spooled partial %d bytes", res)
+             assert res < sz
+             off += res
+             sz -= res
+             yield IOWrite(self.s)
+             #assert s2.fileno() == self.s.fileno()
+             if DEBUG and __debug__:
+                 log.debug("StreamWriter.awrite(): can write more")
+ 
+     # Write piecewise content from iterable (usually, a generator)
+     def awriteiter(self, iterable):
+         for buf in iterable:
+             yield from self.awrite(buf)
+ 
+     def aclose(self):
+         yield IOWriteDone(self.s)
+         self.s.close()
+ 
+     def get_extra_info(self, name, default=None):
+         return self.extra.get(name, default)
+ 
+     def __repr__(self):
+         return "<StreamWriter %r>" % self.s
+ 
+ 
+ def open_connection(host, port, ssl=False):
+     if DEBUG and __debug__:
+         log.debug("open_connection(%s, %s)", host, port)
+     ai = _socket.getaddrinfo(host, port, 0, _socket.SOCK_STREAM)
+     ai = ai[0]
+     s = _socket.socket(ai[0], ai[1], ai[2])
+     s.setblocking(False)
+     try:
+         s.connect(ai[-1])
+     except OSError as e:
+         if e.args[0] != uerrno.EINPROGRESS:
+             raise
+     if DEBUG and __debug__:
+         log.debug("open_connection: After connect")
+     yield IOWrite(s)
+ #    if __debug__:
+ #        assert s2.fileno() == s.fileno()
+     if DEBUG and __debug__:
+         log.debug("open_connection: After iowait: %s", s)
+     if ssl:
+         print("Warning: uasyncio SSL support is alpha")
+         import ussl
+         s.setblocking(True)
+         s2 = ussl.wrap_socket(s)
+         s.setblocking(False)
+         return StreamReader(s, s2), StreamWriter(s2, {})
+     return StreamReader(s), StreamWriter(s, {})
+ 
+ 
+ def start_server(client_coro, host, port, backlog=10):
+     if DEBUG and __debug__:
+         log.debug("start_server(%s, %s)", host, port)
+     ai = _socket.getaddrinfo(host, port, 0, _socket.SOCK_STREAM)
+     ai = ai[0]
+     s = _socket.socket(ai[0], ai[1], ai[2])
+     s.setblocking(False)
+ 
+     s.setsockopt(_socket.SOL_SOCKET, _socket.SO_REUSEADDR, 1)
+     s.bind(ai[-1])
+     s.listen(backlog)
+     while True:
+         if DEBUG and __debug__:
+             log.debug("start_server: Before accept")
+         yield IORead(s)
+         if DEBUG and __debug__:
+             log.debug("start_server: After iowait")
+         s2, client_addr = s.accept()
+         s2.setblocking(False)
+         if DEBUG and __debug__:
+             log.debug("start_server: After accept: %s", s2)
+         extra = {"peername": client_addr}
+         yield client_coro(StreamReader(s2), StreamWriter(s2, extra))
+ 
+ 
+ import uasyncio.core
+ uasyncio.core._event_loop_class = PollEventLoop
diff -crNb MicorpythonOriginal1.12/micropython/extmod/uasyncio/lock.py micropython1.12_withUlab/micropython/extmod/uasyncio/lock.py
*** MicorpythonOriginal1.12/micropython/extmod/uasyncio/lock.py	1970-01-01 02:00:00.000000000 +0200
--- micropython1.12_withUlab/micropython/extmod/uasyncio/lock.py	2020-06-18 19:00:44.970879000 +0200
***************
*** 0 ****
--- 1,53 ----
+ # MicroPython uasyncio module
+ # MIT license; Copyright (c) 2019-2020 Damien P. George
+ 
+ from . import core
+ 
+ # Lock class for primitive mutex capability
+ class Lock:
+     def __init__(self):
+         # The state can take the following values:
+         # - 0: unlocked
+         # - 1: locked
+         # - <Task>: unlocked but this task has been scheduled to acquire the lock next
+         self.state = 0
+         # Queue of Tasks waiting to acquire this Lock
+         self.waiting = core.TaskQueue()
+ 
+     def locked(self):
+         return self.state == 1
+ 
+     def release(self):
+         if self.state != 1:
+             raise RuntimeError("Lock not acquired")
+         if self.waiting.peek():
+             # Task(s) waiting on lock, schedule next Task
+             self.state = self.waiting.pop_head()
+             core._task_queue.push_head(self.state)
+         else:
+             # No Task waiting so unlock
+             self.state = 0
+ 
+     async def acquire(self):
+         if self.state != 0:
+             # Lock unavailable, put the calling Task on the waiting queue
+             self.waiting.push_head(core.cur_task)
+             # Set calling task's data to the lock's queue so it can be removed if needed
+             core.cur_task.data = self.waiting
+             try:
+                 yield
+             except core.CancelledError as er:
+                 if self.state == core.cur_task:
+                     # Cancelled while pending on resume, schedule next waiting Task
+                     self.state = 1
+                     self.release()
+                 raise er
+         # Lock available, set it as locked
+         self.state = 1
+         return True
+ 
+     async def __aenter__(self):
+         return await self.acquire()
+ 
+     async def __aexit__(self, exc_type, exc, tb):
+         return self.release()
diff -crNb MicorpythonOriginal1.12/micropython/extmod/uasyncio/manifest.py micropython1.12_withUlab/micropython/extmod/uasyncio/manifest.py
*** MicorpythonOriginal1.12/micropython/extmod/uasyncio/manifest.py	1970-01-01 02:00:00.000000000 +0200
--- micropython1.12_withUlab/micropython/extmod/uasyncio/manifest.py	2020-06-19 20:47:05.652720129 +0200
***************
*** 0 ****
--- 1,15 ----
+ # This list of frozen files doesn't include task.py because that's provided by the C module.
+ freeze(
+     "..",
+     (
+         "uasyncio/__init__.py",
+         "uasyncio/core.py",
+         "uasyncio/event.py",
+         "uasyncio/funcs.py",
+         "uasyncio/lock.py",
+         "uasyncio/stream.py",
+         "uasyncio/synchro.py",
+         "uasyncio/queues.py",
+     ),
+     opt=3,
+ )
diff -crNb MicorpythonOriginal1.12/micropython/extmod/uasyncio/queues.py micropython1.12_withUlab/micropython/extmod/uasyncio/queues.py
*** MicorpythonOriginal1.12/micropython/extmod/uasyncio/queues.py	1970-01-01 02:00:00.000000000 +0200
--- micropython1.12_withUlab/micropython/extmod/uasyncio/queues.py	2020-06-19 20:22:01.060319000 +0200
***************
*** 0 ****
--- 1,94 ----
+ from collections.deque import deque
+ from uasyncio.core import sleep
+ 
+ 
+ class QueueEmpty(Exception):
+     """Exception raised by get_nowait()."""
+ 
+ 
+ class QueueFull(Exception):
+     """Exception raised by put_nowait()."""
+ 
+ 
+ class Queue:
+     """A queue, useful for coordinating producer and consumer coroutines.
+ 
+     If maxsize is less than or equal to zero, the queue size is infinite. If it
+     is an integer greater than 0, then "yield from put()" will block when the
+     queue reaches maxsize, until an item is removed by get().
+ 
+     Unlike the standard library Queue, you can reliably know this Queue's size
+     with qsize(), since your single-threaded uasyncio application won't be
+     interrupted between calling qsize() and doing an operation on the Queue.
+     """
+     _attempt_delay = 0.1
+ 
+     def __init__(self, maxsize=0):
+         self.maxsize = maxsize
+         self._queue = deque()
+ 
+     def _get(self):
+         return self._queue.popleft()
+ 
+     def get(self):
+         """Returns generator, which can be used for getting (and removing)
+         an item from a queue.
+ 
+         Usage::
+ 
+             item = yield from queue.get()
+         """
+         while not self._queue:
+             yield from sleep(self._attempt_delay)
+         return self._get()
+ 
+     def get_nowait(self):
+         """Remove and return an item from the queue.
+ 
+         Return an item if one is immediately available, else raise QueueEmpty.
+         """
+         if not self._queue:
+             raise QueueEmpty()
+         return self._get()
+ 
+     def _put(self, val):
+         self._queue.append(val)
+ 
+     def put(self, val):
+         """Returns generator which can be used for putting item in a queue.
+ 
+         Usage::
+ 
+             yield from queue.put(item)
+         """
+         while self.qsize() >= self.maxsize and self.maxsize:
+             yield from sleep(self._attempt_delay)
+         self._put(val)
+ 
+     def put_nowait(self, val):
+         """Put an item into the queue without blocking.
+ 
+         If no free slot is immediately available, raise QueueFull.
+         """
+         if self.qsize() >= self.maxsize and self.maxsize:
+             raise QueueFull()
+         self._put(val)
+ 
+     def qsize(self):
+         """Number of items in the queue."""
+         return len(self._queue)
+ 
+     def empty(self):
+         """Return True if the queue is empty, False otherwise."""
+         return not self._queue
+ 
+     def full(self):
+         """Return True if there are maxsize items in the queue.
+ 
+         Note: if the Queue was initialized with maxsize=0 (the default),
+         then full() is never True.
+         """
+         if self.maxsize <= 0:
+             return False
+         else:
+             return self.qsize() >= self.maxsize
diff -crNb MicorpythonOriginal1.12/micropython/extmod/uasyncio/server.py micropython1.12_withUlab/micropython/extmod/uasyncio/server.py
*** MicorpythonOriginal1.12/micropython/extmod/uasyncio/server.py	1970-01-01 02:00:00.000000000 +0200
--- micropython1.12_withUlab/micropython/extmod/uasyncio/server.py	2020-06-19 20:22:01.060319000 +0200
***************
*** 0 ****
--- 1,63 ----
+ import uasyncio
+ import uhashlib, ubinascii
+ import websocket
+ 
+ 
+ def make_respkey(webkey):
+     d = uhashlib.sha1(webkey)
+     d.update(b"258EAFA5-E914-47DA-95CA-C5AB0DC85B11")
+     respkey = d.digest()
+     respkey = ubinascii.b2a_base64(respkey) #[:-1]
+     # Return with trailing "\n".
+     return respkey
+ 
+ 
+ class WSWriter:
+ 
+     def __init__(self, reader, writer):
+         # Reader is passed for symmetry with WSReader() and ignored.
+         self.s = writer
+ 
+     async def awrite(self, data):
+         assert len(data) < 126
+         await self.s.awrite(b"\x81")
+         await self.s.awrite(bytes([len(data)]))
+         await self.s.awrite(data)
+ 
+ 
+ def WSReader(reader, writer):
+ 
+         webkey = None
+         while 1:
+             l = yield from reader.readline()
+             print(l)
+             if not l:
+                 raise ValueError()
+             if l == b"\r\n":
+                 break
+             if l.startswith(b'Sec-WebSocket-Key'):
+                 webkey = l.split(b":", 1)[1]
+                 webkey = webkey.strip()
+ 
+         if not webkey:
+             raise ValueError("Not a websocker request")
+ 
+         respkey = make_respkey(webkey)
+ 
+         await writer.awrite(b"""\
+ HTTP/1.1 101 Switching Protocols\r
+ Upgrade: websocket\r
+ Connection: Upgrade\r
+ Sec-WebSocket-Accept: """)
+         await writer.awrite(respkey)
+         # This will lead to "<key>\n\r\n" being written. Not exactly
+         # "\r\n\r\n", but browsers seem to eat it.
+         await writer.awrite("\r\n")
+         #await writer.awrite("\r\n\r\n")
+ 
+         print("Finished webrepl handshake")
+ 
+         ws = websocket.websocket(reader.ios)
+         rws = uasyncio.StreamReader(reader.ios, ws)
+ 
+         return rws
diff -crNb MicorpythonOriginal1.12/micropython/extmod/uasyncio/stream.py micropython1.12_withUlab/micropython/extmod/uasyncio/stream.py
*** MicorpythonOriginal1.12/micropython/extmod/uasyncio/stream.py	1970-01-01 02:00:00.000000000 +0200
--- micropython1.12_withUlab/micropython/extmod/uasyncio/stream.py	2020-06-18 19:00:44.970879000 +0200
***************
*** 0 ****
--- 1,146 ----
+ # MicroPython uasyncio module
+ # MIT license; Copyright (c) 2019-2020 Damien P. George
+ 
+ from . import core
+ 
+ 
+ class Stream:
+     def __init__(self, s, e={}):
+         self.s = s
+         self.e = e
+         self.out_buf = b""
+ 
+     def get_extra_info(self, v):
+         return self.e[v]
+ 
+     async def __aenter__(self):
+         return self
+ 
+     async def __aexit__(self, exc_type, exc, tb):
+         await self.close()
+ 
+     def close(self):
+         pass
+ 
+     async def wait_closed(self):
+         # TODO yield?
+         self.s.close()
+ 
+     async def read(self, n):
+         yield core._io_queue.queue_read(self.s)
+         return self.s.read(n)
+ 
+     async def readline(self):
+         l = b""
+         while True:
+             yield core._io_queue.queue_read(self.s)
+             l2 = self.s.readline()  # may do multiple reads but won't block
+             l += l2
+             if not l2 or l[-1] == 10:  # \n (check l in case l2 is str)
+                 return l
+ 
+     def write(self, buf):
+         self.out_buf += buf
+ 
+     async def drain(self):
+         mv = memoryview(self.out_buf)
+         off = 0
+         while off < len(mv):
+             yield core._io_queue.queue_write(self.s)
+             ret = self.s.write(mv[off:])
+             if ret is not None:
+                 off += ret
+         self.out_buf = b""
+ 
+ 
+ # Stream can be used for both reading and writing to save code size
+ StreamReader = Stream
+ StreamWriter = Stream
+ 
+ 
+ # Create a TCP stream connection to a remote host
+ async def open_connection(host, port):
+     from uerrno import EINPROGRESS
+     import usocket as socket
+ 
+     ai = socket.getaddrinfo(host, port)[0]  # TODO this is blocking!
+     s = socket.socket()
+     s.setblocking(False)
+     ss = Stream(s)
+     try:
+         s.connect(ai[-1])
+     except OSError as er:
+         if er.args[0] != EINPROGRESS:
+             raise er
+     yield core._io_queue.queue_write(s)
+     return ss, ss
+ 
+ 
+ # Class representing a TCP stream server, can be closed and used in "async with"
+ class Server:
+     async def __aenter__(self):
+         return self
+ 
+     async def __aexit__(self, exc_type, exc, tb):
+         self.close()
+         await self.wait_closed()
+ 
+     def close(self):
+         self.task.cancel()
+ 
+     async def wait_closed(self):
+         await self.task
+ 
+     async def _serve(self, cb, host, port, backlog):
+         import usocket as socket
+ 
+         ai = socket.getaddrinfo(host, port)[0]  # TODO this is blocking!
+         s = socket.socket()
+         s.setblocking(False)
+         s.setsockopt(socket.SOL_SOCKET, socket.SO_REUSEADDR, 1)
+         s.bind(ai[-1])
+         s.listen(backlog)
+         self.task = core.cur_task
+         # Accept incoming connections
+         while True:
+             try:
+                 yield core._io_queue.queue_read(s)
+             except core.CancelledError:
+                 # Shutdown server
+                 s.close()
+                 return
+             try:
+                 s2, addr = s.accept()
+             except:
+                 # Ignore a failed accept
+                 continue
+             s2.setblocking(False)
+             s2s = Stream(s2, {"peername": addr})
+             core.create_task(cb(s2s, s2s))
+ 
+ 
+ # Helper function to start a TCP stream server, running as a new task
+ # TODO could use an accept-callback on socket read activity instead of creating a task
+ async def start_server(cb, host, port, backlog=5):
+     s = Server()
+     core.create_task(s._serve(cb, host, port, backlog))
+     return s
+ 
+ 
+ ################################################################################
+ # Legacy uasyncio compatibility
+ 
+ 
+ async def stream_awrite(self, buf, off=0, sz=-1):
+     if off != 0 or sz != -1:
+         buf = memoryview(buf)
+         if sz == -1:
+             sz = len(buf)
+         buf = buf[off : off + sz]
+     self.write(buf)
+     await self.drain()
+ 
+ 
+ Stream.aclose = Stream.wait_closed
+ Stream.awrite = stream_awrite
+ Stream.awritestr = stream_awrite  # TODO explicitly convert to bytes?
diff -crNb MicorpythonOriginal1.12/micropython/extmod/uasyncio/synchro.py micropython1.12_withUlab/micropython/extmod/uasyncio/synchro.py
*** MicorpythonOriginal1.12/micropython/extmod/uasyncio/synchro.py	1970-01-01 02:00:00.000000000 +0200
--- micropython1.12_withUlab/micropython/extmod/uasyncio/synchro.py	2020-06-19 20:22:01.060319000 +0200
***************
*** 0 ****
--- 1,28 ----
+ from uasyncio import core
+ 
+ class Lock:
+ 
+     def __init__(self):
+         self.locked = False
+         self.wlist = []
+ 
+     def release(self):
+         assert self.locked
+         self.locked = False
+         if self.wlist:
+             #print(self.wlist)
+             coro = self.wlist.pop(0)
+             core.get_event_loop().call_soon(coro)
+ 
+     def acquire(self):
+         # As release() is not coro, assume we just released and going to acquire again
+         # so, yield first to let someone else to acquire it first
+         yield
+         #print("acquire:", self.locked)
+         while 1:
+             if not self.locked:
+                 self.locked = True
+                 return True
+             #print("putting", core.get_event_loop().cur_task, "on waiting list")
+             self.wlist.append(core.get_event_loop().cur_task)
+             yield False
diff -crNb MicorpythonOriginal1.12/micropython/extmod/uasyncio/task.py micropython1.12_withUlab/micropython/extmod/uasyncio/task.py
*** MicorpythonOriginal1.12/micropython/extmod/uasyncio/task.py	1970-01-01 02:00:00.000000000 +0200
--- micropython1.12_withUlab/micropython/extmod/uasyncio/task.py	2020-06-18 19:00:44.970879000 +0200
***************
*** 0 ****
--- 1,168 ----
+ # MicroPython uasyncio module
+ # MIT license; Copyright (c) 2019-2020 Damien P. George
+ 
+ # This file contains the core TaskQueue based on a pairing heap, and the core Task class.
+ # They can optionally be replaced by C implementations.
+ 
+ from . import core
+ 
+ 
+ # pairing-heap meld of 2 heaps; O(1)
+ def ph_meld(h1, h2):
+     if h1 is None:
+         return h2
+     if h2 is None:
+         return h1
+     lt = core.ticks_diff(h1.ph_key, h2.ph_key) < 0
+     if lt:
+         if h1.ph_child is None:
+             h1.ph_child = h2
+         else:
+             h1.ph_child_last.ph_next = h2
+         h1.ph_child_last = h2
+         h2.ph_next = None
+         h2.ph_rightmost_parent = h1
+         return h1
+     else:
+         h1.ph_next = h2.ph_child
+         h2.ph_child = h1
+         if h1.ph_next is None:
+             h2.ph_child_last = h1
+             h1.ph_rightmost_parent = h2
+         return h2
+ 
+ 
+ # pairing-heap pairing operation; amortised O(log N)
+ def ph_pairing(child):
+     heap = None
+     while child is not None:
+         n1 = child
+         child = child.ph_next
+         n1.ph_next = None
+         if child is not None:
+             n2 = child
+             child = child.ph_next
+             n2.ph_next = None
+             n1 = ph_meld(n1, n2)
+         heap = ph_meld(heap, n1)
+     return heap
+ 
+ 
+ # pairing-heap delete of a node; stable, amortised O(log N)
+ def ph_delete(heap, node):
+     if node is heap:
+         child = heap.ph_child
+         node.ph_child = None
+         return ph_pairing(child)
+     # Find parent of node
+     parent = node
+     while parent.ph_next is not None:
+         parent = parent.ph_next
+     parent = parent.ph_rightmost_parent
+     # Replace node with pairing of its children
+     if node is parent.ph_child and node.ph_child is None:
+         parent.ph_child = node.ph_next
+         node.ph_next = None
+         return heap
+     elif node is parent.ph_child:
+         child = node.ph_child
+         next = node.ph_next
+         node.ph_child = None
+         node.ph_next = None
+         node = ph_pairing(child)
+         parent.ph_child = node
+     else:
+         n = parent.ph_child
+         while node is not n.ph_next:
+             n = n.ph_next
+         child = node.ph_child
+         next = node.ph_next
+         node.ph_child = None
+         node.ph_next = None
+         node = ph_pairing(child)
+         if node is None:
+             node = n
+         else:
+             n.ph_next = node
+     node.ph_next = next
+     if next is None:
+         node.ph_rightmost_parent = parent
+         parent.ph_child_last = node
+     return heap
+ 
+ 
+ # TaskQueue class based on the above pairing-heap functions.
+ class TaskQueue:
+     def __init__(self):
+         self.heap = None
+ 
+     def peek(self):
+         return self.heap
+ 
+     def push_sorted(self, v, key):
+         v.data = None
+         v.ph_key = key
+         v.ph_child = None
+         v.ph_next = None
+         self.heap = ph_meld(v, self.heap)
+ 
+     def push_head(self, v):
+         self.push_sorted(v, core.ticks())
+ 
+     def pop_head(self):
+         v = self.heap
+         self.heap = ph_pairing(self.heap.ph_child)
+         return v
+ 
+     def remove(self, v):
+         self.heap = ph_delete(self.heap, v)
+ 
+ 
+ # Task class representing a coroutine, can be waited on and cancelled.
+ class Task:
+     def __init__(self, coro, globals=None):
+         self.coro = coro  # Coroutine of this Task
+         self.data = None  # General data for queue it is waiting on
+         self.ph_key = 0  # Pairing heap
+         self.ph_child = None  # Paring heap
+         self.ph_child_last = None  # Paring heap
+         self.ph_next = None  # Paring heap
+         self.ph_rightmost_parent = None  # Paring heap
+ 
+     def __iter__(self):
+         if not hasattr(self, "waiting"):
+             # Lazily allocated head of linked list of Tasks waiting on completion of this task.
+             self.waiting = TaskQueue()
+         return self
+ 
+     def __next__(self):
+         if not self.coro:
+             # Task finished, raise return value to caller so it can continue.
+             raise self.data
+         else:
+             # Put calling task on waiting queue.
+             self.waiting.push_head(core.cur_task)
+             # Set calling task's data to this task that it waits on, to double-link it.
+             core.cur_task.data = self
+ 
+     def cancel(self):
+         # Check if task is already finished.
+         if self.coro is None:
+             return False
+         # Can't cancel self (not supported yet).
+         if self is core.cur_task:
+             raise RuntimeError("can't cancel self")
+         # If Task waits on another task then forward the cancel to the one it's waiting on.
+         while isinstance(self.data, Task):
+             self = self.data
+         # Reschedule Task as a cancelled task.
+         if hasattr(self.data, "remove"):
+             # Not on the main running queue, remove the task from the queue it's on.
+             self.data.remove(self)
+             core._task_queue.push_head(self)
+         elif core.ticks_diff(self.ph_key, core.ticks()) > 0:
+             # On the main running queue but scheduled in the future, so bring it forward to now.
+             core._task_queue.remove(self)
+             core._task_queue.push_head(self)
+         self.data = core.CancelledError
+         return True
diff -crNb MicorpythonOriginal1.12/micropython/extmod/uasyncio/udp.py micropython1.12_withUlab/micropython/extmod/uasyncio/udp.py
*** MicorpythonOriginal1.12/micropython/extmod/uasyncio/udp.py	1970-01-01 02:00:00.000000000 +0200
--- micropython1.12_withUlab/micropython/extmod/uasyncio/udp.py	2020-06-19 20:22:01.060319000 +0200
***************
*** 0 ****
--- 1,57 ----
+ import usocket
+ from uasyncio import core
+ 
+ 
+ DEBUG = 0
+ log = None
+ 
+ def set_debug(val):
+     global DEBUG, log
+     DEBUG = val
+     if val:
+         import logging
+         log = logging.getLogger("uasyncio.udp")
+ 
+ def socket(af=usocket.AF_INET):
+     s = usocket.socket(af, usocket.SOCK_DGRAM)
+     s.setblocking(False)
+     return s
+ 
+ def recv(s, n):
+     try:
+         yield core.IORead(s)
+         return s.recv(n)
+     except:
+         #print("recv: exc, cleaning up")
+         #print(uasyncio.core._event_loop.objmap, uasyncio.core._event_loop.poller)
+         #uasyncio.core._event_loop.poller.dump()
+         yield core.IOReadDone(s)
+         #print(uasyncio.core._event_loop.objmap)
+         #uasyncio.core._event_loop.poller.dump()
+         raise
+ 
+ def recvfrom(s, n):
+     try:
+         yield core.IORead(s)
+         return s.recvfrom(n)
+     except:
+         #print("recv: exc, cleaning up")
+         #print(uasyncio.core._event_loop.objmap, uasyncio.core._event_loop.poller)
+         #uasyncio.core._event_loop.poller.dump()
+         yield core.IOReadDone(s)
+         #print(uasyncio.core._event_loop.objmap)
+         #uasyncio.core._event_loop.poller.dump()
+         raise
+ 
+ def sendto(s, buf, addr=None):
+     while 1:
+         res = s.sendto(buf, addr)
+         #print("send res:", res)
+         if res == len(buf):
+             return
+         print("sendto: IOWrite")
+         yield core.IOWrite(s)
+ 
+ def close(s):
+     yield core.IOReadDone(s)
+     s.close()
Binary files MicorpythonOriginal1.12/micropython/mpy-cross/build/gccollect.o and micropython1.12_withUlab/micropython/mpy-cross/build/gccollect.o differ
diff -crNb MicorpythonOriginal1.12/micropython/mpy-cross/build/gccollect.P micropython1.12_withUlab/micropython/mpy-cross/build/gccollect.P
*** MicorpythonOriginal1.12/micropython/mpy-cross/build/gccollect.P	1970-01-01 02:00:00.000000000 +0200
--- micropython1.12_withUlab/micropython/mpy-cross/build/gccollect.P	2020-06-19 18:37:39.515505049 +0200
***************
*** 0 ****
--- 1,70 ----
+ build/gccollect.o: gccollect.c /usr/include/stdc-predef.h \
+  /usr/include/stdio.h \
+  /usr/include/x86_64-linux-gnu/bits/libc-header-start.h \
+  /usr/include/features.h /usr/include/x86_64-linux-gnu/sys/cdefs.h \
+  /usr/include/x86_64-linux-gnu/bits/wordsize.h \
+  /usr/include/x86_64-linux-gnu/bits/long-double.h \
+  /usr/include/x86_64-linux-gnu/gnu/stubs.h \
+  /usr/include/x86_64-linux-gnu/gnu/stubs-64.h \
+  /usr/lib/gcc/x86_64-linux-gnu/7/include/stddef.h \
+  /usr/include/x86_64-linux-gnu/bits/types.h \
+  /usr/include/x86_64-linux-gnu/bits/typesizes.h \
+  /usr/include/x86_64-linux-gnu/bits/types/__FILE.h \
+  /usr/include/x86_64-linux-gnu/bits/types/FILE.h \
+  /usr/include/x86_64-linux-gnu/bits/libio.h \
+  /usr/include/x86_64-linux-gnu/bits/_G_config.h \
+  /usr/include/x86_64-linux-gnu/bits/types/__mbstate_t.h \
+  /usr/lib/gcc/x86_64-linux-gnu/7/include/stdarg.h \
+  /usr/include/x86_64-linux-gnu/bits/stdio_lim.h \
+  /usr/include/x86_64-linux-gnu/bits/sys_errlist.h \
+  /usr/include/x86_64-linux-gnu/bits/stdio2.h ../py/mpstate.h \
+  /usr/lib/gcc/x86_64-linux-gnu/7/include/stdint.h /usr/include/stdint.h \
+  /usr/include/x86_64-linux-gnu/bits/wchar.h \
+  /usr/include/x86_64-linux-gnu/bits/stdint-intn.h \
+  /usr/include/x86_64-linux-gnu/bits/stdint-uintn.h ../py/mpconfig.h \
+  mpconfigport.h /usr/include/alloca.h ../py/mpthread.h ../py/misc.h \
+  /usr/lib/gcc/x86_64-linux-gnu/7/include/stdbool.h ../py/nlr.h \
+  /usr/lib/gcc/x86_64-linux-gnu/7/include-fixed/limits.h \
+  /usr/lib/gcc/x86_64-linux-gnu/7/include-fixed/syslimits.h \
+  /usr/include/limits.h /usr/include/x86_64-linux-gnu/bits/posix1_lim.h \
+  /usr/include/x86_64-linux-gnu/bits/local_lim.h \
+  /usr/include/linux/limits.h \
+  /usr/include/x86_64-linux-gnu/bits/posix2_lim.h /usr/include/assert.h \
+  ../py/obj.h ../py/qstr.h build/genhdr/qstrdefs.generated.h \
+  ../py/mpprint.h ../py/runtime0.h ../py/objlist.h ../py/objexcept.h \
+  ../py/objtuple.h ../py/gc.h
+ gccollect.c /usr/include/stdc-predef.h :
+  /usr/include/stdio.h :
+  /usr/include/x86_64-linux-gnu/bits/libc-header-start.h :
+  /usr/include/features.h /usr/include/x86_64-linux-gnu/sys/cdefs.h :
+  /usr/include/x86_64-linux-gnu/bits/wordsize.h :
+  /usr/include/x86_64-linux-gnu/bits/long-double.h :
+  /usr/include/x86_64-linux-gnu/gnu/stubs.h :
+  /usr/include/x86_64-linux-gnu/gnu/stubs-64.h :
+  /usr/lib/gcc/x86_64-linux-gnu/7/include/stddef.h :
+  /usr/include/x86_64-linux-gnu/bits/types.h :
+  /usr/include/x86_64-linux-gnu/bits/typesizes.h :
+  /usr/include/x86_64-linux-gnu/bits/types/__FILE.h :
+  /usr/include/x86_64-linux-gnu/bits/types/FILE.h :
+  /usr/include/x86_64-linux-gnu/bits/libio.h :
+  /usr/include/x86_64-linux-gnu/bits/_G_config.h :
+  /usr/include/x86_64-linux-gnu/bits/types/__mbstate_t.h :
+  /usr/lib/gcc/x86_64-linux-gnu/7/include/stdarg.h :
+  /usr/include/x86_64-linux-gnu/bits/stdio_lim.h :
+  /usr/include/x86_64-linux-gnu/bits/sys_errlist.h :
+  /usr/include/x86_64-linux-gnu/bits/stdio2.h ../py/mpstate.h :
+  /usr/lib/gcc/x86_64-linux-gnu/7/include/stdint.h /usr/include/stdint.h :
+  /usr/include/x86_64-linux-gnu/bits/wchar.h :
+  /usr/include/x86_64-linux-gnu/bits/stdint-intn.h :
+  /usr/include/x86_64-linux-gnu/bits/stdint-uintn.h ../py/mpconfig.h :
+  mpconfigport.h /usr/include/alloca.h ../py/mpthread.h ../py/misc.h :
+  /usr/lib/gcc/x86_64-linux-gnu/7/include/stdbool.h ../py/nlr.h :
+  /usr/lib/gcc/x86_64-linux-gnu/7/include-fixed/limits.h :
+  /usr/lib/gcc/x86_64-linux-gnu/7/include-fixed/syslimits.h :
+  /usr/include/limits.h /usr/include/x86_64-linux-gnu/bits/posix1_lim.h :
+  /usr/include/x86_64-linux-gnu/bits/local_lim.h :
+  /usr/include/linux/limits.h :
+  /usr/include/x86_64-linux-gnu/bits/posix2_lim.h /usr/include/assert.h :
+  ../py/obj.h ../py/qstr.h build/genhdr/qstrdefs.generated.h :
+  ../py/mpprint.h ../py/runtime0.h ../py/objlist.h ../py/objexcept.h :
+  ../py/objtuple.h ../py/gc.h :
diff -crNb MicorpythonOriginal1.12/micropython/mpy-cross/build/genhdr/moduledefs.h micropython1.12_withUlab/micropython/mpy-cross/build/genhdr/moduledefs.h
*** MicorpythonOriginal1.12/micropython/mpy-cross/build/genhdr/moduledefs.h	1970-01-01 02:00:00.000000000 +0200
--- micropython1.12_withUlab/micropython/mpy-cross/build/genhdr/moduledefs.h	2020-06-19 19:54:01.829493584 +0200
***************
*** 0 ****
--- 1,13 ----
+ // Automatically generated by makemoduledefs.py.
+ 
+ #if (MICROPY_PY_ARRAY)
+     extern const struct _mp_obj_module_t mp_module_uarray;
+     #define MODULE_DEF_MP_QSTR_UARRAY { MP_ROM_QSTR(MP_QSTR_uarray), MP_ROM_PTR(&mp_module_uarray) },
+ #else
+     #define MODULE_DEF_MP_QSTR_UARRAY
+ #endif
+ 
+ 
+ #define MICROPY_REGISTERED_MODULES \
+     MODULE_DEF_MP_QSTR_UARRAY \
+ // MICROPY_REGISTERED_MODULES
diff -crNb MicorpythonOriginal1.12/micropython/mpy-cross/build/genhdr/mpversion.h micropython1.12_withUlab/micropython/mpy-cross/build/genhdr/mpversion.h
*** MicorpythonOriginal1.12/micropython/mpy-cross/build/genhdr/mpversion.h	1970-01-01 02:00:00.000000000 +0200
--- micropython1.12_withUlab/micropython/mpy-cross/build/genhdr/mpversion.h	2020-06-19 18:37:32.455656692 +0200
***************
*** 0 ****
--- 1,4 ----
+ // This file was generated by py/makeversionhdr.py
+ #define MICROPY_GIT_TAG "v1.12"
+ #define MICROPY_GIT_HASH "<no hash>"
+ #define MICROPY_BUILD_DATE "2020-06-19"
diff -crNb MicorpythonOriginal1.12/micropython/mpy-cross/build/genhdr/qstr/out micropython1.12_withUlab/micropython/mpy-cross/build/genhdr/qstr/out
*** MicorpythonOriginal1.12/micropython/mpy-cross/build/genhdr/qstr/out	1970-01-01 02:00:00.000000000 +0200
--- micropython1.12_withUlab/micropython/mpy-cross/build/genhdr/qstr/out	2020-06-19 20:30:07.275234731 +0200
***************
*** 0 ****
--- 1,1069 ----
+ Q(ArithmeticError)
+ 
+ Q(ArithmeticError)
+ 
+ Q(AssertionError)
+ 
+ Q(AssertionError)
+ 
+ Q(AssertionError)
+ 
+ Q(AttributeError)
+ 
+ Q(AttributeError)
+ 
+ Q(BaseException)
+ 
+ Q(BaseException)
+ 
+ Q(BaseException)
+ 
+ Q(EOFError)
+ 
+ Q(EOFError)
+ 
+ Q(Ellipsis)
+ 
+ Q(Ellipsis)
+ 
+ Q(Exception)
+ 
+ Q(Exception)
+ 
+ Q(GeneratorExit)
+ 
+ Q(GeneratorExit)
+ 
+ Q(ImportError)
+ 
+ Q(ImportError)
+ 
+ Q(IndentationError)
+ 
+ Q(IndentationError)
+ 
+ Q(IndexError)
+ 
+ Q(IndexError)
+ 
+ Q(KeyError)
+ 
+ Q(KeyError)
+ 
+ Q(KeyboardInterrupt)
+ 
+ Q(KeyboardInterrupt)
+ 
+ Q(LookupError)
+ 
+ Q(LookupError)
+ 
+ Q(MemoryError)
+ 
+ Q(MemoryError)
+ 
+ Q(NameError)
+ 
+ Q(NameError)
+ 
+ Q(None)
+ 
+ Q(NoneType)
+ 
+ Q(NotImplementedError)
+ 
+ Q(NotImplementedError)
+ 
+ Q(OSError)
+ 
+ Q(OSError)
+ 
+ Q(OverflowError)
+ 
+ Q(OverflowError)
+ 
+ Q(RuntimeError)
+ 
+ Q(RuntimeError)
+ 
+ Q(StopAsyncIteration)
+ 
+ Q(StopAsyncIteration)
+ 
+ Q(StopAsyncIteration)
+ 
+ Q(StopIteration)
+ 
+ Q(StopIteration)
+ 
+ Q(SyntaxError)
+ 
+ Q(SyntaxError)
+ 
+ Q(SystemExit)
+ 
+ Q(SystemExit)
+ 
+ Q(TypeError)
+ 
+ Q(TypeError)
+ 
+ Q(UnicodeError)
+ 
+ Q(UnicodeError)
+ 
+ Q(ValueError)
+ 
+ Q(ValueError)
+ 
+ Q(ViperTypeError)
+ 
+ Q(ViperTypeError)
+ 
+ Q(ZeroDivisionError)
+ 
+ Q(ZeroDivisionError)
+ 
+ Q(_0x0a_)
+ 
+ Q(__add__)
+ 
+ Q(__aenter__)
+ 
+ Q(__aenter__)
+ 
+ Q(__aexit__)
+ 
+ Q(__aexit__)
+ 
+ Q(__aiter__)
+ 
+ Q(__anext__)
+ 
+ Q(__bases__)
+ 
+ Q(__bool__)
+ 
+ Q(__build_class__)
+ 
+ Q(__call__)
+ 
+ Q(__class__)
+ 
+ Q(__class__)
+ 
+ Q(__class__)
+ 
+ Q(__class__)
+ 
+ Q(__class__)
+ 
+ Q(__class__)
+ 
+ Q(__class__)
+ 
+ Q(__contains__)
+ 
+ Q(__contains__)
+ 
+ Q(__del__)
+ 
+ Q(__delitem__)
+ 
+ Q(__delitem__)
+ 
+ Q(__dict__)
+ 
+ Q(__enter__)
+ 
+ Q(__enter__)
+ 
+ Q(__eq__)
+ 
+ Q(__eq__)
+ 
+ Q(__exit__)
+ 
+ Q(__exit__)
+ 
+ Q(__ge__)
+ 
+ Q(__getattr__)
+ 
+ Q(__getattr__)
+ 
+ Q(__getitem__)
+ 
+ Q(__getitem__)
+ 
+ Q(__getitem__)
+ 
+ Q(__getitem__)
+ 
+ Q(__gt__)
+ 
+ Q(__hash__)
+ 
+ Q(__iadd__)
+ 
+ Q(__import__)
+ 
+ Q(__init__)
+ 
+ Q(__init__)
+ 
+ Q(__init__)
+ 
+ Q(__int__)
+ 
+ Q(__isub__)
+ 
+ Q(__iter__)
+ 
+ Q(__le__)
+ 
+ Q(__len__)
+ 
+ Q(__lt__)
+ 
+ Q(__main__)
+ 
+ Q(__main__)
+ 
+ Q(__main__)
+ 
+ Q(__main__)
+ 
+ Q(__main__)
+ 
+ Q(__main__)
+ 
+ Q(__main__)
+ 
+ Q(__module__)
+ 
+ Q(__name__)
+ 
+ Q(__name__)
+ 
+ Q(__name__)
+ 
+ Q(__name__)
+ 
+ Q(__name__)
+ 
+ Q(__name__)
+ 
+ Q(__name__)
+ 
+ Q(__name__)
+ 
+ Q(__name__)
+ 
+ Q(__name__)
+ 
+ Q(__name__)
+ 
+ Q(__new__)
+ 
+ Q(__new__)
+ 
+ Q(__new__)
+ 
+ Q(__next__)
+ 
+ Q(__next__)
+ 
+ Q(__next__)
+ 
+ Q(__next__)
+ 
+ Q(__path__)
+ 
+ Q(__path__)
+ 
+ Q(__path__)
+ 
+ Q(__qualname__)
+ 
+ Q(__repl_print__)
+ 
+ Q(__repl_print__)
+ 
+ Q(__repr__)
+ 
+ Q(__repr__)
+ 
+ Q(__reversed__)
+ 
+ Q(__setitem__)
+ 
+ Q(__setitem__)
+ 
+ Q(__str__)
+ 
+ Q(__sub__)
+ 
+ Q(__traceback__)
+ 
+ Q(_brace_open__colon__hash_b_brace_close_)
+ 
+ Q(_lt_dictcomp_gt_)
+ 
+ Q(_lt_genexpr_gt_)
+ 
+ Q(_lt_lambda_gt_)
+ 
+ Q(_lt_listcomp_gt_)
+ 
+ Q(_lt_module_gt_)
+ 
+ Q(_lt_setcomp_gt_)
+ 
+ Q(_lt_string_gt_)
+ 
+ Q(_percent__hash_o)
+ 
+ Q(_percent__hash_x)
+ 
+ Q(_space_)
+ 
+ Q(_star_)
+ 
+ Q(_star_)
+ 
+ Q(_star_)
+ 
+ Q(abs)
+ 
+ Q(add)
+ 
+ Q(add)
+ 
+ Q(add)
+ 
+ Q(add)
+ 
+ Q(addi)
+ 
+ Q(align)
+ 
+ Q(all)
+ 
+ Q(and_)
+ 
+ Q(and_)
+ 
+ Q(any)
+ 
+ Q(append)
+ 
+ Q(append)
+ 
+ Q(args)
+ 
+ Q(asm_thumb)
+ 
+ Q(asm_xtensa)
+ 
+ Q(asr)
+ 
+ Q(b)
+ 
+ Q(ball)
+ 
+ Q(bany)
+ 
+ Q(bbc)
+ 
+ Q(bbs)
+ 
+ Q(beq)
+ 
+ Q(beqz)
+ 
+ Q(bge)
+ 
+ Q(bgeu)
+ 
+ Q(bin)
+ 
+ Q(bl)
+ 
+ Q(blt)
+ 
+ Q(bnall)
+ 
+ Q(bne)
+ 
+ Q(bnez)
+ 
+ Q(bnone)
+ 
+ Q(bool)
+ 
+ Q(bool)
+ 
+ Q(bool)
+ 
+ Q(bool)
+ 
+ Q(bool)
+ 
+ Q(bound_method)
+ 
+ Q(builtins)
+ 
+ Q(builtins)
+ 
+ Q(bx)
+ 
+ Q(bytearray)
+ 
+ Q(bytearray)
+ 
+ Q(bytecode)
+ 
+ Q(bytes)
+ 
+ Q(bytes)
+ 
+ Q(bytes)
+ 
+ Q(calcsize)
+ 
+ Q(callable)
+ 
+ Q(callx0)
+ 
+ Q(chr)
+ 
+ Q(classmethod)
+ 
+ Q(classmethod)
+ 
+ Q(clear)
+ 
+ Q(clear)
+ 
+ Q(clear)
+ 
+ Q(close)
+ 
+ Q(close)
+ 
+ Q(close)
+ 
+ Q(closure)
+ 
+ Q(closure)
+ 
+ Q(clz)
+ 
+ Q(cmp)
+ 
+ Q(complex)
+ 
+ Q(complex)
+ 
+ Q(const)
+ 
+ Q(const)
+ 
+ Q(copy)
+ 
+ Q(copy)
+ 
+ Q(copy)
+ 
+ Q(count)
+ 
+ Q(count)
+ 
+ Q(count)
+ 
+ Q(count)
+ 
+ Q(cpsid)
+ 
+ Q(cpsie)
+ 
+ Q(data)
+ 
+ Q(decode)
+ 
+ Q(decode)
+ 
+ Q(default)
+ 
+ Q(delattr)
+ 
+ Q(deleter)
+ 
+ Q(dict)
+ 
+ Q(dict)
+ 
+ Q(dict_view)
+ 
+ Q(difference)
+ 
+ Q(difference_update)
+ 
+ Q(dir)
+ 
+ Q(discard)
+ 
+ Q(divmod)
+ 
+ Q(doc)
+ 
+ Q(encode)
+ 
+ Q(end)
+ 
+ Q(endswith)
+ 
+ Q(endswith)
+ 
+ Q(enumerate)
+ 
+ Q(enumerate)
+ 
+ Q(eval)
+ 
+ Q(exec)
+ 
+ Q(extend)
+ 
+ Q(extend)
+ 
+ Q(filter)
+ 
+ Q(filter)
+ 
+ Q(find)
+ 
+ Q(find)
+ 
+ Q(float)
+ 
+ Q(float)
+ 
+ Q(format)
+ 
+ Q(format)
+ 
+ Q(from_bytes)
+ 
+ Q(fromkeys)
+ 
+ Q(function)
+ 
+ Q(function)
+ 
+ Q(function)
+ 
+ Q(function)
+ 
+ Q(function)
+ 
+ Q(function)
+ 
+ Q(function)
+ 
+ Q(function)
+ 
+ Q(function)
+ 
+ Q(function)
+ 
+ Q(function)
+ 
+ Q(generator)
+ 
+ Q(generator)
+ 
+ Q(generator)
+ 
+ Q(generator)
+ 
+ Q(get)
+ 
+ Q(getattr)
+ 
+ Q(getter)
+ 
+ Q(globals)
+ 
+ Q(hasattr)
+ 
+ Q(hash)
+ 
+ Q(heap_lock)
+ 
+ Q(heap_unlock)
+ 
+ Q(hex)
+ 
+ Q(id)
+ 
+ Q(imag)
+ 
+ Q(index)
+ 
+ Q(index)
+ 
+ Q(index)
+ 
+ Q(index)
+ 
+ Q(insert)
+ 
+ Q(int)
+ 
+ Q(int)
+ 
+ Q(int)
+ 
+ Q(int)
+ 
+ Q(int)
+ 
+ Q(intersection)
+ 
+ Q(intersection_update)
+ 
+ Q(isalpha)
+ 
+ Q(isalpha)
+ 
+ Q(isdigit)
+ 
+ Q(isdigit)
+ 
+ Q(isdisjoint)
+ 
+ Q(isinstance)
+ 
+ Q(islower)
+ 
+ Q(islower)
+ 
+ Q(isspace)
+ 
+ Q(isspace)
+ 
+ Q(issubclass)
+ 
+ Q(issubset)
+ 
+ Q(issuperset)
+ 
+ Q(isupper)
+ 
+ Q(isupper)
+ 
+ Q(items)
+ 
+ Q(iter)
+ 
+ Q(iterable)
+ 
+ Q(iterator)
+ 
+ Q(iterator)
+ 
+ Q(iterator)
+ 
+ Q(iterator)
+ 
+ Q(iterator)
+ 
+ Q(j)
+ 
+ Q(join)
+ 
+ Q(join)
+ 
+ Q(jx)
+ 
+ Q(key)
+ 
+ Q(key)
+ 
+ Q(keys)
+ 
+ Q(keys)
+ 
+ Q(l16si)
+ 
+ Q(l16ui)
+ 
+ Q(l32i)
+ 
+ Q(l8ui)
+ 
+ Q(label)
+ 
+ Q(ldr)
+ 
+ Q(ldrb)
+ 
+ Q(ldrex)
+ 
+ Q(ldrh)
+ 
+ Q(len)
+ 
+ Q(list)
+ 
+ Q(list)
+ 
+ Q(little)
+ 
+ Q(little)
+ 
+ Q(little)
+ 
+ Q(locals)
+ 
+ Q(lower)
+ 
+ Q(lower)
+ 
+ Q(lsl)
+ 
+ Q(lsr)
+ 
+ Q(lstrip)
+ 
+ Q(lstrip)
+ 
+ Q(map)
+ 
+ Q(map)
+ 
+ Q(max)
+ 
+ Q(maximum_space_recursion_space_depth_space_exceeded)
+ 
+ Q(micropython)
+ 
+ Q(micropython)
+ 
+ Q(micropython)
+ 
+ Q(min)
+ 
+ Q(module)
+ 
+ Q(mov)
+ 
+ Q(mov)
+ 
+ Q(mov)
+ 
+ Q(mov_n)
+ 
+ Q(movi)
+ 
+ Q(movt)
+ 
+ Q(movw)
+ 
+ Q(movwt)
+ 
+ Q(mp_file)
+ 
+ Q(mrs)
+ 
+ Q(mull)
+ 
+ Q(native)
+ 
+ Q(next)
+ 
+ Q(nop)
+ 
+ Q(object)
+ 
+ Q(object)
+ 
+ Q(object)
+ 
+ Q(object)
+ 
+ Q(object)
+ 
+ Q(oct)
+ 
+ Q(opt_level)
+ 
+ Q(or_)
+ 
+ Q(ord)
+ 
+ Q(pack)
+ 
+ Q(pack_into)
+ 
+ Q(pend_throw)
+ 
+ Q(pop)
+ 
+ Q(pop)
+ 
+ Q(pop)
+ 
+ Q(pop)
+ 
+ Q(popitem)
+ 
+ Q(pow)
+ 
+ Q(print)
+ 
+ Q(property)
+ 
+ Q(property)
+ 
+ Q(ptr)
+ 
+ Q(ptr)
+ 
+ Q(ptr16)
+ 
+ Q(ptr16)
+ 
+ Q(ptr32)
+ 
+ Q(ptr32)
+ 
+ Q(ptr8)
+ 
+ Q(ptr8)
+ 
+ Q(push)
+ 
+ Q(range)
+ 
+ Q(range)
+ 
+ Q(range)
+ 
+ Q(rbit)
+ 
+ Q(readinto)
+ 
+ Q(real)
+ 
+ Q(remove)
+ 
+ Q(remove)
+ 
+ Q(replace)
+ 
+ Q(replace)
+ 
+ Q(repr)
+ 
+ Q(ret_n)
+ 
+ Q(reverse)
+ 
+ Q(reverse)
+ 
+ Q(reversed)
+ 
+ Q(reversed)
+ 
+ Q(rfind)
+ 
+ Q(rfind)
+ 
+ Q(rindex)
+ 
+ Q(rindex)
+ 
+ Q(round)
+ 
+ Q(rsplit)
+ 
+ Q(rsplit)
+ 
+ Q(rstrip)
+ 
+ Q(rstrip)
+ 
+ Q(s16i)
+ 
+ Q(s32i)
+ 
+ Q(s8i)
+ 
+ Q(sdiv)
+ 
+ Q(seek)
+ 
+ Q(send)
+ 
+ Q(send)
+ 
+ Q(sep)
+ 
+ Q(set)
+ 
+ Q(set)
+ 
+ Q(setattr)
+ 
+ Q(setdefault)
+ 
+ Q(setter)
+ 
+ Q(slice)
+ 
+ Q(slice)
+ 
+ Q(sort)
+ 
+ Q(sorted)
+ 
+ Q(split)
+ 
+ Q(split)
+ 
+ Q(start)
+ 
+ Q(start)
+ 
+ Q(startswith)
+ 
+ Q(startswith)
+ 
+ Q(staticmethod)
+ 
+ Q(staticmethod)
+ 
+ Q(step)
+ 
+ Q(stop)
+ 
+ Q(str)
+ 
+ Q(str)
+ 
+ Q(str)
+ 
+ Q(str)
+ 
+ Q(str)
+ 
+ Q(strb)
+ 
+ Q(strex)
+ 
+ Q(strh)
+ 
+ Q(strip)
+ 
+ Q(strip)
+ 
+ Q(sub)
+ 
+ Q(sub)
+ 
+ Q(sub)
+ 
+ Q(sum)
+ 
+ Q(super)
+ 
+ Q(super)
+ 
+ Q(super)
+ 
+ Q(symmetric_difference)
+ 
+ Q(symmetric_difference_update)
+ 
+ Q(tell)
+ 
+ Q(throw)
+ 
+ Q(throw)
+ 
+ Q(to_bytes)
+ 
+ Q(tuple)
+ 
+ Q(tuple)
+ 
+ Q(type)
+ 
+ Q(type)
+ 
+ Q(udiv)
+ 
+ Q(uint)
+ 
+ Q(uint)
+ 
+ Q(uint)
+ 
+ Q(union)
+ 
+ Q(unpack)
+ 
+ Q(unpack_from)
+ 
+ Q(update)
+ 
+ Q(update)
+ 
+ Q(upper)
+ 
+ Q(upper)
+ 
+ Q(ustruct)
+ 
+ Q(ustruct)
+ 
+ Q(utf_hyphen_8)
+ 
+ Q(utf_hyphen_8)
+ 
+ Q(value)
+ 
+ Q(values)
+ 
+ Q(vcmp)
+ 
+ Q(vcvt_f32_s32)
+ 
+ Q(vcvt_s32_f32)
+ 
+ Q(viper)
+ 
+ Q(vldr)
+ 
+ Q(vmov)
+ 
+ Q(vmrs)
+ 
+ Q(vneg)
+ 
+ Q(vsqrt)
+ 
+ Q(vstr)
+ 
+ Q(wfi)
+ 
+ Q(xor)
+ 
+ Q(zip)
+ 
+ Q(zip)
+ 
+ Q(zip)
diff -crNb MicorpythonOriginal1.12/micropython/mpy-cross/build/genhdr/qstr/@@__py__builtinevex.c.qstr micropython1.12_withUlab/micropython/mpy-cross/build/genhdr/qstr/@@__py__builtinevex.c.qstr
*** MicorpythonOriginal1.12/micropython/mpy-cross/build/genhdr/qstr/@@__py__builtinevex.c.qstr	1970-01-01 02:00:00.000000000 +0200
--- micropython1.12_withUlab/micropython/mpy-cross/build/genhdr/qstr/@@__py__builtinevex.c.qstr	2020-06-14 15:06:48.827520228 +0200
***************
*** 0 ****
--- 1 ----
+ Q(_lt_string_gt_)
diff -crNb MicorpythonOriginal1.12/micropython/mpy-cross/build/genhdr/qstr/@@__py__builtinimport.c.qstr micropython1.12_withUlab/micropython/mpy-cross/build/genhdr/qstr/@@__py__builtinimport.c.qstr
*** MicorpythonOriginal1.12/micropython/mpy-cross/build/genhdr/qstr/@@__py__builtinimport.c.qstr	1970-01-01 02:00:00.000000000 +0200
--- micropython1.12_withUlab/micropython/mpy-cross/build/genhdr/qstr/@@__py__builtinimport.c.qstr	2020-06-14 15:06:48.827520228 +0200
***************
*** 0 ****
--- 1,10 ----
+ Q(__path__)
+ Q(__name__)
+ Q(__main__)
+ Q(__main__)
+ Q(__path__)
+ Q(__name__)
+ Q(__main__)
+ Q(__main__)
+ Q(__main__)
+ Q(__path__)
diff -crNb MicorpythonOriginal1.12/micropython/mpy-cross/build/genhdr/qstr/@@__py__compile.c.qstr micropython1.12_withUlab/micropython/mpy-cross/build/genhdr/qstr/@@__py__compile.c.qstr
*** MicorpythonOriginal1.12/micropython/mpy-cross/build/genhdr/qstr/@@__py__compile.c.qstr	1970-01-01 02:00:00.000000000 +0200
--- micropython1.12_withUlab/micropython/mpy-cross/build/genhdr/qstr/@@__py__compile.c.qstr	2020-06-14 15:06:48.755520740 +0200
***************
*** 0 ****
--- 1,35 ----
+ Q(micropython)
+ Q(bytecode)
+ Q(native)
+ Q(viper)
+ Q(asm_thumb)
+ Q(asm_xtensa)
+ Q(_star_)
+ Q(AssertionError)
+ Q(range)
+ Q(__aiter__)
+ Q(__anext__)
+ Q(StopAsyncIteration)
+ Q(__aenter__)
+ Q(__aenter__)
+ Q(BaseException)
+ Q(__aexit__)
+ Q(__class__)
+ Q(__aexit__)
+ Q(__repl_print__)
+ Q(super)
+ Q(__class__)
+ Q(__class__)
+ Q(__name__)
+ Q(__module__)
+ Q(__qualname__)
+ Q(__class__)
+ Q(__class__)
+ Q(object)
+ Q(bool)
+ Q(int)
+ Q(uint)
+ Q(label)
+ Q(align)
+ Q(data)
+ Q(__class__)
diff -crNb MicorpythonOriginal1.12/micropython/mpy-cross/build/genhdr/qstr/@@__py__emitbc.c.qstr micropython1.12_withUlab/micropython/mpy-cross/build/genhdr/qstr/@@__py__emitbc.c.qstr
*** MicorpythonOriginal1.12/micropython/mpy-cross/build/genhdr/qstr/@@__py__emitbc.c.qstr	1970-01-01 02:00:00.000000000 +0200
--- micropython1.12_withUlab/micropython/mpy-cross/build/genhdr/qstr/@@__py__emitbc.c.qstr	2020-06-14 15:06:48.755520740 +0200
***************
*** 0 ****
--- 1 ----
+ Q(_star_)
diff -crNb MicorpythonOriginal1.12/micropython/mpy-cross/build/genhdr/qstr/@@__py__emitinlinethumb.c.qstr micropython1.12_withUlab/micropython/mpy-cross/build/genhdr/qstr/@@__py__emitinlinethumb.c.qstr
*** MicorpythonOriginal1.12/micropython/mpy-cross/build/genhdr/qstr/@@__py__emitinlinethumb.c.qstr	1970-01-01 02:00:00.000000000 +0200
--- micropython1.12_withUlab/micropython/mpy-cross/build/genhdr/qstr/@@__py__emitinlinethumb.c.qstr	2020-06-14 15:06:48.767520654 +0200
***************
*** 0 ****
--- 1,45 ----
+ Q(ldr)
+ Q(ldrb)
+ Q(ldrh)
+ Q(str)
+ Q(strb)
+ Q(strh)
+ Q(vcmp)
+ Q(vsqrt)
+ Q(vneg)
+ Q(vcvt_f32_s32)
+ Q(vcvt_s32_f32)
+ Q(vmrs)
+ Q(vmov)
+ Q(vldr)
+ Q(vstr)
+ Q(nop)
+ Q(wfi)
+ Q(b)
+ Q(bl)
+ Q(bx)
+ Q(cpsid)
+ Q(cpsie)
+ Q(push)
+ Q(pop)
+ Q(mov)
+ Q(clz)
+ Q(rbit)
+ Q(mrs)
+ Q(and_)
+ Q(mov)
+ Q(cmp)
+ Q(add)
+ Q(sub)
+ Q(movw)
+ Q(movt)
+ Q(movwt)
+ Q(ldrex)
+ Q(lsl)
+ Q(lsr)
+ Q(asr)
+ Q(add)
+ Q(sdiv)
+ Q(udiv)
+ Q(sub)
+ Q(strex)
diff -crNb MicorpythonOriginal1.12/micropython/mpy-cross/build/genhdr/qstr/@@__py__emitinlinextensa.c.qstr micropython1.12_withUlab/micropython/mpy-cross/build/genhdr/qstr/@@__py__emitinlinextensa.c.qstr
*** MicorpythonOriginal1.12/micropython/mpy-cross/build/genhdr/qstr/@@__py__emitinlinextensa.c.qstr	1970-01-01 02:00:00.000000000 +0200
--- micropython1.12_withUlab/micropython/mpy-cross/build/genhdr/qstr/@@__py__emitinlinextensa.c.qstr	2020-06-14 15:06:48.775520598 +0200
***************
*** 0 ****
--- 1,34 ----
+ Q(and_)
+ Q(or_)
+ Q(xor)
+ Q(add)
+ Q(sub)
+ Q(mull)
+ Q(l8ui)
+ Q(l16ui)
+ Q(l32i)
+ Q(s8i)
+ Q(s16i)
+ Q(s32i)
+ Q(l16si)
+ Q(addi)
+ Q(ball)
+ Q(bany)
+ Q(bbc)
+ Q(bbs)
+ Q(beq)
+ Q(bge)
+ Q(bgeu)
+ Q(blt)
+ Q(bnall)
+ Q(bne)
+ Q(bnone)
+ Q(ret_n)
+ Q(callx0)
+ Q(j)
+ Q(jx)
+ Q(beqz)
+ Q(bnez)
+ Q(mov)
+ Q(mov_n)
+ Q(movi)
diff -crNb MicorpythonOriginal1.12/micropython/mpy-cross/build/genhdr/qstr/@@__py__emitnative.c.qstr micropython1.12_withUlab/micropython/mpy-cross/build/genhdr/qstr/@@__py__emitnative.c.qstr
*** MicorpythonOriginal1.12/micropython/mpy-cross/build/genhdr/qstr/@@__py__emitnative.c.qstr	1970-01-01 02:00:00.000000000 +0200
--- micropython1.12_withUlab/micropython/mpy-cross/build/genhdr/qstr/@@__py__emitnative.c.qstr	2020-06-14 15:06:48.779520569 +0200
***************
*** 0 ****
--- 1,12 ----
+ Q(object)
+ Q(bool)
+ Q(int)
+ Q(uint)
+ Q(ptr)
+ Q(ptr8)
+ Q(ptr16)
+ Q(ptr32)
+ Q(None)
+ Q(_star_)
+ Q(__exit__)
+ Q(__enter__)
diff -crNb MicorpythonOriginal1.12/micropython/mpy-cross/build/genhdr/qstr/@@__py__modbuiltins.c.qstr micropython1.12_withUlab/micropython/mpy-cross/build/genhdr/qstr/@@__py__modbuiltins.c.qstr
*** MicorpythonOriginal1.12/micropython/mpy-cross/build/genhdr/qstr/@@__py__modbuiltins.c.qstr	1970-01-01 02:00:00.000000000 +0200
--- micropython1.12_withUlab/micropython/mpy-cross/build/genhdr/qstr/@@__py__modbuiltins.c.qstr	2020-06-14 15:06:48.831520201 +0200
***************
*** 0 ****
--- 1,101 ----
+ Q(_brace_open__colon__hash_b_brace_close_)
+ Q(_percent__hash_x)
+ Q(key)
+ Q(default)
+ Q(_percent__hash_o)
+ Q(sep)
+ Q(_space_)
+ Q(end)
+ Q(_0x0a_)
+ Q(__name__)
+ Q(builtins)
+ Q(__build_class__)
+ Q(__import__)
+ Q(__repl_print__)
+ Q(bool)
+ Q(bytes)
+ Q(bytearray)
+ Q(complex)
+ Q(dict)
+ Q(enumerate)
+ Q(filter)
+ Q(float)
+ Q(int)
+ Q(list)
+ Q(map)
+ Q(object)
+ Q(property)
+ Q(range)
+ Q(reversed)
+ Q(set)
+ Q(slice)
+ Q(str)
+ Q(super)
+ Q(tuple)
+ Q(type)
+ Q(zip)
+ Q(classmethod)
+ Q(staticmethod)
+ Q(Ellipsis)
+ Q(abs)
+ Q(all)
+ Q(any)
+ Q(bin)
+ Q(callable)
+ Q(chr)
+ Q(delattr)
+ Q(dir)
+ Q(divmod)
+ Q(eval)
+ Q(exec)
+ Q(getattr)
+ Q(setattr)
+ Q(globals)
+ Q(hasattr)
+ Q(hash)
+ Q(hex)
+ Q(id)
+ Q(isinstance)
+ Q(issubclass)
+ Q(iter)
+ Q(len)
+ Q(locals)
+ Q(max)
+ Q(min)
+ Q(next)
+ Q(oct)
+ Q(ord)
+ Q(pow)
+ Q(print)
+ Q(repr)
+ Q(round)
+ Q(sorted)
+ Q(sum)
+ Q(BaseException)
+ Q(ArithmeticError)
+ Q(AssertionError)
+ Q(AttributeError)
+ Q(EOFError)
+ Q(Exception)
+ Q(GeneratorExit)
+ Q(ImportError)
+ Q(IndentationError)
+ Q(IndexError)
+ Q(KeyboardInterrupt)
+ Q(KeyError)
+ Q(LookupError)
+ Q(MemoryError)
+ Q(NameError)
+ Q(NotImplementedError)
+ Q(OSError)
+ Q(OverflowError)
+ Q(RuntimeError)
+ Q(StopAsyncIteration)
+ Q(StopIteration)
+ Q(SyntaxError)
+ Q(SystemExit)
+ Q(TypeError)
+ Q(UnicodeError)
+ Q(ValueError)
+ Q(ViperTypeError)
+ Q(ZeroDivisionError)
diff -crNb MicorpythonOriginal1.12/micropython/mpy-cross/build/genhdr/qstr/@@__py__modmicropython.c.qstr micropython1.12_withUlab/micropython/mpy-cross/build/genhdr/qstr/@@__py__modmicropython.c.qstr
*** MicorpythonOriginal1.12/micropython/mpy-cross/build/genhdr/qstr/@@__py__modmicropython.c.qstr	1970-01-01 02:00:00.000000000 +0200
--- micropython1.12_withUlab/micropython/mpy-cross/build/genhdr/qstr/@@__py__modmicropython.c.qstr	2020-06-14 15:06:48.835520171 +0200
***************
*** 0 ****
--- 1,6 ----
+ Q(__name__)
+ Q(micropython)
+ Q(const)
+ Q(opt_level)
+ Q(heap_lock)
+ Q(heap_unlock)
diff -crNb MicorpythonOriginal1.12/micropython/mpy-cross/build/genhdr/qstr/@@__py__modstruct.c.qstr micropython1.12_withUlab/micropython/mpy-cross/build/genhdr/qstr/@@__py__modstruct.c.qstr
*** MicorpythonOriginal1.12/micropython/mpy-cross/build/genhdr/qstr/@@__py__modstruct.c.qstr	1970-01-01 02:00:00.000000000 +0200
--- micropython1.12_withUlab/micropython/mpy-cross/build/genhdr/qstr/@@__py__modstruct.c.qstr	2020-06-14 15:06:48.835520171 +0200
***************
*** 0 ****
--- 1,7 ----
+ Q(__name__)
+ Q(ustruct)
+ Q(calcsize)
+ Q(pack)
+ Q(pack_into)
+ Q(unpack)
+ Q(unpack_from)
diff -crNb MicorpythonOriginal1.12/micropython/mpy-cross/build/genhdr/qstr/@@__py__mpfile.c.qstr micropython1.12_withUlab/micropython/mpy-cross/build/genhdr/qstr/@@__py__mpfile.c.qstr
*** MicorpythonOriginal1.12/micropython/mpy-cross/build/genhdr/qstr/@@__py__mpfile.c.qstr	1970-01-01 02:00:00.000000000 +0200
--- micropython1.12_withUlab/micropython/mpy-cross/build/genhdr/qstr/@@__py__mpfile.c.qstr	2020-06-19 18:37:32.563654349 +0200
***************
*** 0 ****
--- 1,6 ----
+ Q(readinto)
+ Q(seek)
+ Q(tell)
+ Q(close)
+ Q(__del__)
+ Q(mp_file)
diff -crNb MicorpythonOriginal1.12/micropython/mpy-cross/build/genhdr/qstr/@@__py__nativeglue.c.qstr micropython1.12_withUlab/micropython/mpy-cross/build/genhdr/qstr/@@__py__nativeglue.c.qstr
*** MicorpythonOriginal1.12/micropython/mpy-cross/build/genhdr/qstr/@@__py__nativeglue.c.qstr	1970-01-01 02:00:00.000000000 +0200
--- micropython1.12_withUlab/micropython/mpy-cross/build/genhdr/qstr/@@__py__nativeglue.c.qstr	2020-06-14 15:06:48.787520512 +0200
***************
*** 0 ****
--- 1,8 ----
+ Q(object)
+ Q(bool)
+ Q(int)
+ Q(uint)
+ Q(ptr)
+ Q(ptr8)
+ Q(ptr16)
+ Q(ptr32)
diff -crNb MicorpythonOriginal1.12/micropython/mpy-cross/build/genhdr/qstr/@@__py__objarray.c.qstr micropython1.12_withUlab/micropython/mpy-cross/build/genhdr/qstr/@@__py__objarray.c.qstr
*** MicorpythonOriginal1.12/micropython/mpy-cross/build/genhdr/qstr/@@__py__objarray.c.qstr	1970-01-01 02:00:00.000000000 +0200
--- micropython1.12_withUlab/micropython/mpy-cross/build/genhdr/qstr/@@__py__objarray.c.qstr	2020-06-14 15:06:48.791520484 +0200
***************
*** 0 ****
--- 1,5 ----
+ Q(append)
+ Q(extend)
+ Q(decode)
+ Q(bytearray)
+ Q(iterator)
diff -crNb MicorpythonOriginal1.12/micropython/mpy-cross/build/genhdr/qstr/@@__py__objbool.c.qstr micropython1.12_withUlab/micropython/mpy-cross/build/genhdr/qstr/@@__py__objbool.c.qstr
*** MicorpythonOriginal1.12/micropython/mpy-cross/build/genhdr/qstr/@@__py__objbool.c.qstr	1970-01-01 02:00:00.000000000 +0200
--- micropython1.12_withUlab/micropython/mpy-cross/build/genhdr/qstr/@@__py__objbool.c.qstr	2020-06-14 15:06:48.791520484 +0200
***************
*** 0 ****
--- 1 ----
+ Q(bool)
diff -crNb MicorpythonOriginal1.12/micropython/mpy-cross/build/genhdr/qstr/@@__py__objboundmeth.c.qstr micropython1.12_withUlab/micropython/mpy-cross/build/genhdr/qstr/@@__py__objboundmeth.c.qstr
*** MicorpythonOriginal1.12/micropython/mpy-cross/build/genhdr/qstr/@@__py__objboundmeth.c.qstr	1970-01-01 02:00:00.000000000 +0200
--- micropython1.12_withUlab/micropython/mpy-cross/build/genhdr/qstr/@@__py__objboundmeth.c.qstr	2020-06-14 15:06:48.795520456 +0200
***************
*** 0 ****
--- 1 ----
+ Q(bound_method)
diff -crNb MicorpythonOriginal1.12/micropython/mpy-cross/build/genhdr/qstr/@@__py__objclosure.c.qstr micropython1.12_withUlab/micropython/mpy-cross/build/genhdr/qstr/@@__py__objclosure.c.qstr
*** MicorpythonOriginal1.12/micropython/mpy-cross/build/genhdr/qstr/@@__py__objclosure.c.qstr	1970-01-01 02:00:00.000000000 +0200
--- micropython1.12_withUlab/micropython/mpy-cross/build/genhdr/qstr/@@__py__objclosure.c.qstr	2020-06-14 15:06:48.795520456 +0200
***************
*** 0 ****
--- 1 ----
+ Q(closure)
diff -crNb MicorpythonOriginal1.12/micropython/mpy-cross/build/genhdr/qstr/@@__py__objcomplex.c.qstr micropython1.12_withUlab/micropython/mpy-cross/build/genhdr/qstr/@@__py__objcomplex.c.qstr
*** MicorpythonOriginal1.12/micropython/mpy-cross/build/genhdr/qstr/@@__py__objcomplex.c.qstr	1970-01-01 02:00:00.000000000 +0200
--- micropython1.12_withUlab/micropython/mpy-cross/build/genhdr/qstr/@@__py__objcomplex.c.qstr	2020-06-14 15:06:48.795520456 +0200
***************
*** 0 ****
--- 1,3 ----
+ Q(real)
+ Q(imag)
+ Q(complex)
diff -crNb MicorpythonOriginal1.12/micropython/mpy-cross/build/genhdr/qstr/@@__py__objdict.c.qstr micropython1.12_withUlab/micropython/mpy-cross/build/genhdr/qstr/@@__py__objdict.c.qstr
*** MicorpythonOriginal1.12/micropython/mpy-cross/build/genhdr/qstr/@@__py__objdict.c.qstr	1970-01-01 02:00:00.000000000 +0200
--- micropython1.12_withUlab/micropython/mpy-cross/build/genhdr/qstr/@@__py__objdict.c.qstr	2020-06-14 15:06:48.799520427 +0200
***************
*** 0 ****
--- 1,17 ----
+ Q(iterator)
+ Q(dict_view)
+ Q(clear)
+ Q(copy)
+ Q(fromkeys)
+ Q(get)
+ Q(items)
+ Q(keys)
+ Q(pop)
+ Q(popitem)
+ Q(setdefault)
+ Q(update)
+ Q(values)
+ Q(__getitem__)
+ Q(__setitem__)
+ Q(__delitem__)
+ Q(dict)
diff -crNb MicorpythonOriginal1.12/micropython/mpy-cross/build/genhdr/qstr/@@__py__objenumerate.c.qstr micropython1.12_withUlab/micropython/mpy-cross/build/genhdr/qstr/@@__py__objenumerate.c.qstr
*** MicorpythonOriginal1.12/micropython/mpy-cross/build/genhdr/qstr/@@__py__objenumerate.c.qstr	1970-01-01 02:00:00.000000000 +0200
--- micropython1.12_withUlab/micropython/mpy-cross/build/genhdr/qstr/@@__py__objenumerate.c.qstr	2020-06-14 15:06:48.799520427 +0200
***************
*** 0 ****
--- 1,3 ----
+ Q(iterable)
+ Q(start)
+ Q(enumerate)
diff -crNb MicorpythonOriginal1.12/micropython/mpy-cross/build/genhdr/qstr/@@__py__objexcept.c.qstr micropython1.12_withUlab/micropython/mpy-cross/build/genhdr/qstr/@@__py__objexcept.c.qstr
*** MicorpythonOriginal1.12/micropython/mpy-cross/build/genhdr/qstr/@@__py__objexcept.c.qstr	1970-01-01 02:00:00.000000000 +0200
--- micropython1.12_withUlab/micropython/mpy-cross/build/genhdr/qstr/@@__py__objexcept.c.qstr	2020-06-14 15:06:48.799520427 +0200
***************
*** 0 ****
--- 1,31 ----
+ Q(__traceback__)
+ Q(args)
+ Q(value)
+ Q(BaseException)
+ Q(SystemExit)
+ Q(KeyboardInterrupt)
+ Q(GeneratorExit)
+ Q(Exception)
+ Q(StopAsyncIteration)
+ Q(StopIteration)
+ Q(ArithmeticError)
+ Q(OverflowError)
+ Q(ZeroDivisionError)
+ Q(AssertionError)
+ Q(AttributeError)
+ Q(EOFError)
+ Q(ImportError)
+ Q(LookupError)
+ Q(IndexError)
+ Q(KeyError)
+ Q(MemoryError)
+ Q(NameError)
+ Q(OSError)
+ Q(RuntimeError)
+ Q(NotImplementedError)
+ Q(SyntaxError)
+ Q(IndentationError)
+ Q(TypeError)
+ Q(ViperTypeError)
+ Q(ValueError)
+ Q(UnicodeError)
diff -crNb MicorpythonOriginal1.12/micropython/mpy-cross/build/genhdr/qstr/@@__py__objfilter.c.qstr micropython1.12_withUlab/micropython/mpy-cross/build/genhdr/qstr/@@__py__objfilter.c.qstr
*** MicorpythonOriginal1.12/micropython/mpy-cross/build/genhdr/qstr/@@__py__objfilter.c.qstr	1970-01-01 02:00:00.000000000 +0200
--- micropython1.12_withUlab/micropython/mpy-cross/build/genhdr/qstr/@@__py__objfilter.c.qstr	2020-06-14 15:06:48.799520427 +0200
***************
*** 0 ****
--- 1 ----
+ Q(filter)
diff -crNb MicorpythonOriginal1.12/micropython/mpy-cross/build/genhdr/qstr/@@__py__objfloat.c.qstr micropython1.12_withUlab/micropython/mpy-cross/build/genhdr/qstr/@@__py__objfloat.c.qstr
*** MicorpythonOriginal1.12/micropython/mpy-cross/build/genhdr/qstr/@@__py__objfloat.c.qstr	1970-01-01 02:00:00.000000000 +0200
--- micropython1.12_withUlab/micropython/mpy-cross/build/genhdr/qstr/@@__py__objfloat.c.qstr	2020-06-14 15:06:48.803520398 +0200
***************
*** 0 ****
--- 1 ----
+ Q(float)
diff -crNb MicorpythonOriginal1.12/micropython/mpy-cross/build/genhdr/qstr/@@__py__objfun.c.qstr micropython1.12_withUlab/micropython/mpy-cross/build/genhdr/qstr/@@__py__objfun.c.qstr
*** MicorpythonOriginal1.12/micropython/mpy-cross/build/genhdr/qstr/@@__py__objfun.c.qstr	1970-01-01 02:00:00.000000000 +0200
--- micropython1.12_withUlab/micropython/mpy-cross/build/genhdr/qstr/@@__py__objfun.c.qstr	2020-06-14 15:06:48.803520398 +0200
***************
*** 0 ****
--- 1,8 ----
+ Q(function)
+ Q(function)
+ Q(function)
+ Q(function)
+ Q(function)
+ Q(function)
+ Q(function)
+ Q(function)
diff -crNb MicorpythonOriginal1.12/micropython/mpy-cross/build/genhdr/qstr/@@__py__objgenerator.c.qstr micropython1.12_withUlab/micropython/mpy-cross/build/genhdr/qstr/@@__py__objgenerator.c.qstr
*** MicorpythonOriginal1.12/micropython/mpy-cross/build/genhdr/qstr/@@__py__objgenerator.c.qstr	1970-01-01 02:00:00.000000000 +0200
--- micropython1.12_withUlab/micropython/mpy-cross/build/genhdr/qstr/@@__py__objgenerator.c.qstr	2020-06-14 15:06:48.803520398 +0200
***************
*** 0 ****
--- 1,7 ----
+ Q(generator)
+ Q(generator)
+ Q(close)
+ Q(send)
+ Q(throw)
+ Q(pend_throw)
+ Q(generator)
diff -crNb MicorpythonOriginal1.12/micropython/mpy-cross/build/genhdr/qstr/@@__py__objgetitemiter.c.qstr micropython1.12_withUlab/micropython/mpy-cross/build/genhdr/qstr/@@__py__objgetitemiter.c.qstr
*** MicorpythonOriginal1.12/micropython/mpy-cross/build/genhdr/qstr/@@__py__objgetitemiter.c.qstr	1970-01-01 02:00:00.000000000 +0200
--- micropython1.12_withUlab/micropython/mpy-cross/build/genhdr/qstr/@@__py__objgetitemiter.c.qstr	2020-06-14 15:06:48.803520398 +0200
***************
*** 0 ****
--- 1 ----
+ Q(iterator)
diff -crNb MicorpythonOriginal1.12/micropython/mpy-cross/build/genhdr/qstr/@@__py__objint.c.qstr micropython1.12_withUlab/micropython/mpy-cross/build/genhdr/qstr/@@__py__objint.c.qstr
*** MicorpythonOriginal1.12/micropython/mpy-cross/build/genhdr/qstr/@@__py__objint.c.qstr	1970-01-01 02:00:00.000000000 +0200
--- micropython1.12_withUlab/micropython/mpy-cross/build/genhdr/qstr/@@__py__objint.c.qstr	2020-06-14 15:06:48.803520398 +0200
***************
*** 0 ****
--- 1,6 ----
+ Q(little)
+ Q(little)
+ Q(little)
+ Q(from_bytes)
+ Q(to_bytes)
+ Q(int)
diff -crNb MicorpythonOriginal1.12/micropython/mpy-cross/build/genhdr/qstr/@@__py__objlist.c.qstr micropython1.12_withUlab/micropython/mpy-cross/build/genhdr/qstr/@@__py__objlist.c.qstr
*** MicorpythonOriginal1.12/micropython/mpy-cross/build/genhdr/qstr/@@__py__objlist.c.qstr	1970-01-01 02:00:00.000000000 +0200
--- micropython1.12_withUlab/micropython/mpy-cross/build/genhdr/qstr/@@__py__objlist.c.qstr	2020-06-14 15:06:48.807520370 +0200
***************
*** 0 ****
--- 1,14 ----
+ Q(key)
+ Q(reverse)
+ Q(append)
+ Q(clear)
+ Q(copy)
+ Q(count)
+ Q(extend)
+ Q(index)
+ Q(insert)
+ Q(pop)
+ Q(remove)
+ Q(reverse)
+ Q(sort)
+ Q(list)
diff -crNb MicorpythonOriginal1.12/micropython/mpy-cross/build/genhdr/qstr/@@__py__objmap.c.qstr micropython1.12_withUlab/micropython/mpy-cross/build/genhdr/qstr/@@__py__objmap.c.qstr
*** MicorpythonOriginal1.12/micropython/mpy-cross/build/genhdr/qstr/@@__py__objmap.c.qstr	1970-01-01 02:00:00.000000000 +0200
--- micropython1.12_withUlab/micropython/mpy-cross/build/genhdr/qstr/@@__py__objmap.c.qstr	2020-06-14 15:06:48.807520370 +0200
***************
*** 0 ****
--- 1 ----
+ Q(map)
diff -crNb MicorpythonOriginal1.12/micropython/mpy-cross/build/genhdr/qstr/@@__py__objmodule.c.qstr micropython1.12_withUlab/micropython/mpy-cross/build/genhdr/qstr/@@__py__objmodule.c.qstr
*** MicorpythonOriginal1.12/micropython/mpy-cross/build/genhdr/qstr/@@__py__objmodule.c.qstr	1970-01-01 02:00:00.000000000 +0200
--- micropython1.12_withUlab/micropython/mpy-cross/build/genhdr/qstr/@@__py__objmodule.c.qstr	2020-06-19 19:54:01.865493365 +0200
***************
*** 0 ****
--- 1,7 ----
+ Q(__name__)
+ Q(module)
+ Q(__name__)
+ Q(__main__)
+ Q(builtins)
+ Q(micropython)
+ Q(ustruct)
diff -crNb MicorpythonOriginal1.12/micropython/mpy-cross/build/genhdr/qstr/@@__py__objnone.c.qstr micropython1.12_withUlab/micropython/mpy-cross/build/genhdr/qstr/@@__py__objnone.c.qstr
*** MicorpythonOriginal1.12/micropython/mpy-cross/build/genhdr/qstr/@@__py__objnone.c.qstr	1970-01-01 02:00:00.000000000 +0200
--- micropython1.12_withUlab/micropython/mpy-cross/build/genhdr/qstr/@@__py__objnone.c.qstr	2020-06-14 15:06:48.811520342 +0200
***************
*** 0 ****
--- 1 ----
+ Q(NoneType)
diff -crNb MicorpythonOriginal1.12/micropython/mpy-cross/build/genhdr/qstr/@@__py__objobject.c.qstr micropython1.12_withUlab/micropython/mpy-cross/build/genhdr/qstr/@@__py__objobject.c.qstr
*** MicorpythonOriginal1.12/micropython/mpy-cross/build/genhdr/qstr/@@__py__objobject.c.qstr	1970-01-01 02:00:00.000000000 +0200
--- micropython1.12_withUlab/micropython/mpy-cross/build/genhdr/qstr/@@__py__objobject.c.qstr	2020-06-14 15:06:48.811520342 +0200
***************
*** 0 ****
--- 1,3 ----
+ Q(__init__)
+ Q(__new__)
+ Q(object)
diff -crNb MicorpythonOriginal1.12/micropython/mpy-cross/build/genhdr/qstr/@@__py__objpolyiter.c.qstr micropython1.12_withUlab/micropython/mpy-cross/build/genhdr/qstr/@@__py__objpolyiter.c.qstr
*** MicorpythonOriginal1.12/micropython/mpy-cross/build/genhdr/qstr/@@__py__objpolyiter.c.qstr	1970-01-01 02:00:00.000000000 +0200
--- micropython1.12_withUlab/micropython/mpy-cross/build/genhdr/qstr/@@__py__objpolyiter.c.qstr	2020-06-14 15:06:48.811520342 +0200
***************
*** 0 ****
--- 1 ----
+ Q(iterator)
diff -crNb MicorpythonOriginal1.12/micropython/mpy-cross/build/genhdr/qstr/@@__py__objproperty.c.qstr micropython1.12_withUlab/micropython/mpy-cross/build/genhdr/qstr/@@__py__objproperty.c.qstr
*** MicorpythonOriginal1.12/micropython/mpy-cross/build/genhdr/qstr/@@__py__objproperty.c.qstr	1970-01-01 02:00:00.000000000 +0200
--- micropython1.12_withUlab/micropython/mpy-cross/build/genhdr/qstr/@@__py__objproperty.c.qstr	2020-06-14 15:06:48.811520342 +0200
***************
*** 0 ****
--- 1,5 ----
+ Q(doc)
+ Q(getter)
+ Q(setter)
+ Q(deleter)
+ Q(property)
diff -crNb MicorpythonOriginal1.12/micropython/mpy-cross/build/genhdr/qstr/@@__py__objrange.c.qstr micropython1.12_withUlab/micropython/mpy-cross/build/genhdr/qstr/@@__py__objrange.c.qstr
*** MicorpythonOriginal1.12/micropython/mpy-cross/build/genhdr/qstr/@@__py__objrange.c.qstr	1970-01-01 02:00:00.000000000 +0200
--- micropython1.12_withUlab/micropython/mpy-cross/build/genhdr/qstr/@@__py__objrange.c.qstr	2020-06-14 15:06:48.815520313 +0200
***************
*** 0 ****
--- 1,5 ----
+ Q(iterator)
+ Q(start)
+ Q(stop)
+ Q(step)
+ Q(range)
diff -crNb MicorpythonOriginal1.12/micropython/mpy-cross/build/genhdr/qstr/@@__py__objreversed.c.qstr micropython1.12_withUlab/micropython/mpy-cross/build/genhdr/qstr/@@__py__objreversed.c.qstr
*** MicorpythonOriginal1.12/micropython/mpy-cross/build/genhdr/qstr/@@__py__objreversed.c.qstr	1970-01-01 02:00:00.000000000 +0200
--- micropython1.12_withUlab/micropython/mpy-cross/build/genhdr/qstr/@@__py__objreversed.c.qstr	2020-06-14 15:06:48.815520313 +0200
***************
*** 0 ****
--- 1,2 ----
+ Q(__reversed__)
+ Q(reversed)
diff -crNb MicorpythonOriginal1.12/micropython/mpy-cross/build/genhdr/qstr/@@__py__objset.c.qstr micropython1.12_withUlab/micropython/mpy-cross/build/genhdr/qstr/@@__py__objset.c.qstr
*** MicorpythonOriginal1.12/micropython/mpy-cross/build/genhdr/qstr/@@__py__objset.c.qstr	1970-01-01 02:00:00.000000000 +0200
--- micropython1.12_withUlab/micropython/mpy-cross/build/genhdr/qstr/@@__py__objset.c.qstr	2020-06-14 15:06:48.815520313 +0200
***************
*** 0 ****
--- 1,19 ----
+ Q(add)
+ Q(clear)
+ Q(copy)
+ Q(discard)
+ Q(difference)
+ Q(difference_update)
+ Q(intersection)
+ Q(intersection_update)
+ Q(isdisjoint)
+ Q(issubset)
+ Q(issuperset)
+ Q(pop)
+ Q(remove)
+ Q(symmetric_difference)
+ Q(symmetric_difference_update)
+ Q(union)
+ Q(update)
+ Q(__contains__)
+ Q(set)
diff -crNb MicorpythonOriginal1.12/micropython/mpy-cross/build/genhdr/qstr/@@__py__objsingleton.c.qstr micropython1.12_withUlab/micropython/mpy-cross/build/genhdr/qstr/@@__py__objsingleton.c.qstr
*** MicorpythonOriginal1.12/micropython/mpy-cross/build/genhdr/qstr/@@__py__objsingleton.c.qstr	1970-01-01 02:00:00.000000000 +0200
--- micropython1.12_withUlab/micropython/mpy-cross/build/genhdr/qstr/@@__py__objsingleton.c.qstr	2020-06-14 15:06:48.815520313 +0200
***************
*** 0 ****
--- 1 ----
+ Q(Ellipsis)
diff -crNb MicorpythonOriginal1.12/micropython/mpy-cross/build/genhdr/qstr/@@__py__objslice.c.qstr micropython1.12_withUlab/micropython/mpy-cross/build/genhdr/qstr/@@__py__objslice.c.qstr
*** MicorpythonOriginal1.12/micropython/mpy-cross/build/genhdr/qstr/@@__py__objslice.c.qstr	1970-01-01 02:00:00.000000000 +0200
--- micropython1.12_withUlab/micropython/mpy-cross/build/genhdr/qstr/@@__py__objslice.c.qstr	2020-06-14 15:06:48.819520285 +0200
***************
*** 0 ****
--- 1 ----
+ Q(slice)
diff -crNb MicorpythonOriginal1.12/micropython/mpy-cross/build/genhdr/qstr/@@__py__objstr.c.qstr micropython1.12_withUlab/micropython/mpy-cross/build/genhdr/qstr/@@__py__objstr.c.qstr
*** MicorpythonOriginal1.12/micropython/mpy-cross/build/genhdr/qstr/@@__py__objstr.c.qstr	1970-01-01 02:00:00.000000000 +0200
--- micropython1.12_withUlab/micropython/mpy-cross/build/genhdr/qstr/@@__py__objstr.c.qstr	2020-06-14 15:06:48.819520285 +0200
***************
*** 0 ****
--- 1,29 ----
+ Q(utf_hyphen_8)
+ Q(utf_hyphen_8)
+ Q(decode)
+ Q(find)
+ Q(rfind)
+ Q(index)
+ Q(rindex)
+ Q(join)
+ Q(split)
+ Q(rsplit)
+ Q(startswith)
+ Q(endswith)
+ Q(strip)
+ Q(lstrip)
+ Q(rstrip)
+ Q(format)
+ Q(replace)
+ Q(count)
+ Q(lower)
+ Q(upper)
+ Q(isspace)
+ Q(isalpha)
+ Q(isdigit)
+ Q(isupper)
+ Q(islower)
+ Q(bytes)
+ Q(str)
+ Q(bytes)
+ Q(str)
diff -crNb MicorpythonOriginal1.12/micropython/mpy-cross/build/genhdr/qstr/@@__py__objstrunicode.c.qstr micropython1.12_withUlab/micropython/mpy-cross/build/genhdr/qstr/@@__py__objstrunicode.c.qstr
*** MicorpythonOriginal1.12/micropython/mpy-cross/build/genhdr/qstr/@@__py__objstrunicode.c.qstr	1970-01-01 02:00:00.000000000 +0200
--- micropython1.12_withUlab/micropython/mpy-cross/build/genhdr/qstr/@@__py__objstrunicode.c.qstr	2020-06-14 15:06:48.819520285 +0200
***************
*** 0 ****
--- 1,24 ----
+ Q(encode)
+ Q(find)
+ Q(rfind)
+ Q(index)
+ Q(rindex)
+ Q(join)
+ Q(split)
+ Q(rsplit)
+ Q(startswith)
+ Q(endswith)
+ Q(strip)
+ Q(lstrip)
+ Q(rstrip)
+ Q(format)
+ Q(replace)
+ Q(count)
+ Q(lower)
+ Q(upper)
+ Q(isspace)
+ Q(isalpha)
+ Q(isdigit)
+ Q(isupper)
+ Q(islower)
+ Q(str)
diff -crNb MicorpythonOriginal1.12/micropython/mpy-cross/build/genhdr/qstr/@@__py__objtuple.c.qstr micropython1.12_withUlab/micropython/mpy-cross/build/genhdr/qstr/@@__py__objtuple.c.qstr
*** MicorpythonOriginal1.12/micropython/mpy-cross/build/genhdr/qstr/@@__py__objtuple.c.qstr	1970-01-01 02:00:00.000000000 +0200
--- micropython1.12_withUlab/micropython/mpy-cross/build/genhdr/qstr/@@__py__objtuple.c.qstr	2020-06-14 15:06:48.823520257 +0200
***************
*** 0 ****
--- 1,3 ----
+ Q(count)
+ Q(index)
+ Q(tuple)
diff -crNb MicorpythonOriginal1.12/micropython/mpy-cross/build/genhdr/qstr/@@__py__objtype.c.qstr micropython1.12_withUlab/micropython/mpy-cross/build/genhdr/qstr/@@__py__objtype.c.qstr
*** MicorpythonOriginal1.12/micropython/mpy-cross/build/genhdr/qstr/@@__py__objtype.c.qstr	1970-01-01 02:00:00.000000000 +0200
--- micropython1.12_withUlab/micropython/mpy-cross/build/genhdr/qstr/@@__py__objtype.c.qstr	2020-06-14 15:06:48.823520257 +0200
***************
*** 0 ****
--- 1,37 ----
+ Q(__str__)
+ Q(__repr__)
+ Q(__repr__)
+ Q(__new__)
+ Q(__init__)
+ Q(__bool__)
+ Q(__len__)
+ Q(__hash__)
+ Q(__int__)
+ Q(__eq__)
+ Q(__lt__)
+ Q(__gt__)
+ Q(__eq__)
+ Q(__le__)
+ Q(__ge__)
+ Q(__contains__)
+ Q(__iadd__)
+ Q(__isub__)
+ Q(__add__)
+ Q(__sub__)
+ Q(__dict__)
+ Q(__getattr__)
+ Q(__getattr__)
+ Q(__delitem__)
+ Q(__getitem__)
+ Q(__setitem__)
+ Q(__call__)
+ Q(__iter__)
+ Q(__name__)
+ Q(__bases__)
+ Q(type)
+ Q(__new__)
+ Q(function)
+ Q(__init__)
+ Q(super)
+ Q(staticmethod)
+ Q(classmethod)
diff -crNb MicorpythonOriginal1.12/micropython/mpy-cross/build/genhdr/qstr/@@__py__objzip.c.qstr micropython1.12_withUlab/micropython/mpy-cross/build/genhdr/qstr/@@__py__objzip.c.qstr
*** MicorpythonOriginal1.12/micropython/mpy-cross/build/genhdr/qstr/@@__py__objzip.c.qstr	1970-01-01 02:00:00.000000000 +0200
--- micropython1.12_withUlab/micropython/mpy-cross/build/genhdr/qstr/@@__py__objzip.c.qstr	2020-06-14 15:06:48.823520257 +0200
***************
*** 0 ****
--- 1 ----
+ Q(zip)
diff -crNb MicorpythonOriginal1.12/micropython/mpy-cross/build/genhdr/qstr/@@__py__parse.c.qstr micropython1.12_withUlab/micropython/mpy-cross/build/genhdr/qstr/@@__py__parse.c.qstr
*** MicorpythonOriginal1.12/micropython/mpy-cross/build/genhdr/qstr/@@__py__parse.c.qstr	1970-01-01 02:00:00.000000000 +0200
--- micropython1.12_withUlab/micropython/mpy-cross/build/genhdr/qstr/@@__py__parse.c.qstr	2020-06-14 15:06:48.751520768 +0200
***************
*** 0 ****
--- 1 ----
+ Q(const)
diff -crNb MicorpythonOriginal1.12/micropython/mpy-cross/build/genhdr/qstr/@@__py__persistentcode.c.qstr micropython1.12_withUlab/micropython/mpy-cross/build/genhdr/qstr/@@__py__persistentcode.c.qstr
*** MicorpythonOriginal1.12/micropython/mpy-cross/build/genhdr/qstr/@@__py__persistentcode.c.qstr	1970-01-01 02:00:00.000000000 +0200
--- micropython1.12_withUlab/micropython/mpy-cross/build/genhdr/qstr/@@__py__persistentcode.c.qstr	2020-06-14 15:06:48.783520540 +0200
***************
*** 0 ****
--- 1 ----
+ Q(zip)
diff -crNb MicorpythonOriginal1.12/micropython/mpy-cross/build/genhdr/qstr/@@__py__runtime.c.qstr micropython1.12_withUlab/micropython/mpy-cross/build/genhdr/qstr/@@__py__runtime.c.qstr
*** MicorpythonOriginal1.12/micropython/mpy-cross/build/genhdr/qstr/@@__py__runtime.c.qstr	1970-01-01 02:00:00.000000000 +0200
--- micropython1.12_withUlab/micropython/mpy-cross/build/genhdr/qstr/@@__py__runtime.c.qstr	2020-06-14 15:06:48.783520540 +0200
***************
*** 0 ****
--- 1,19 ----
+ Q(__name__)
+ Q(__main__)
+ Q(keys)
+ Q(__getitem__)
+ Q(function)
+ Q(function)
+ Q(closure)
+ Q(generator)
+ Q(__class__)
+ Q(__next__)
+ Q(__getitem__)
+ Q(__next__)
+ Q(__next__)
+ Q(__next__)
+ Q(send)
+ Q(close)
+ Q(throw)
+ Q(__name__)
+ Q(maximum_space_recursion_space_depth_space_exceeded)
diff -crNb MicorpythonOriginal1.12/micropython/mpy-cross/build/genhdr/qstr/@@__py__scope.c.qstr micropython1.12_withUlab/micropython/mpy-cross/build/genhdr/qstr/@@__py__scope.c.qstr
*** MicorpythonOriginal1.12/micropython/mpy-cross/build/genhdr/qstr/@@__py__scope.c.qstr	1970-01-01 02:00:00.000000000 +0200
--- micropython1.12_withUlab/micropython/mpy-cross/build/genhdr/qstr/@@__py__scope.c.qstr	2020-06-14 15:06:48.751520768 +0200
***************
*** 0 ****
--- 1,6 ----
+ Q(_lt_module_gt_)
+ Q(_lt_lambda_gt_)
+ Q(_lt_listcomp_gt_)
+ Q(_lt_dictcomp_gt_)
+ Q(_lt_setcomp_gt_)
+ Q(_lt_genexpr_gt_)
diff -crNb MicorpythonOriginal1.12/micropython/mpy-cross/build/genhdr/qstr/@@__py__vm.c.qstr micropython1.12_withUlab/micropython/mpy-cross/build/genhdr/qstr/@@__py__vm.c.qstr
*** MicorpythonOriginal1.12/micropython/mpy-cross/build/genhdr/qstr/@@__py__vm.c.qstr	1970-01-01 02:00:00.000000000 +0200
--- micropython1.12_withUlab/micropython/mpy-cross/build/genhdr/qstr/@@__py__vm.c.qstr	2020-06-14 15:06:48.839520143 +0200
***************
*** 0 ****
--- 1,2 ----
+ Q(__exit__)
+ Q(__enter__)
diff -crNb MicorpythonOriginal1.12/micropython/mpy-cross/build/genhdr/qstrdefs.collected.h micropython1.12_withUlab/micropython/mpy-cross/build/genhdr/qstrdefs.collected.h
*** MicorpythonOriginal1.12/micropython/mpy-cross/build/genhdr/qstrdefs.collected.h	1970-01-01 02:00:00.000000000 +0200
--- micropython1.12_withUlab/micropython/mpy-cross/build/genhdr/qstrdefs.collected.h	2020-06-19 18:37:32.587653828 +0200
***************
*** 0 ****
--- 1,1069 ----
+ Q(ArithmeticError)
+ 
+ Q(ArithmeticError)
+ 
+ Q(AssertionError)
+ 
+ Q(AssertionError)
+ 
+ Q(AssertionError)
+ 
+ Q(AttributeError)
+ 
+ Q(AttributeError)
+ 
+ Q(BaseException)
+ 
+ Q(BaseException)
+ 
+ Q(BaseException)
+ 
+ Q(EOFError)
+ 
+ Q(EOFError)
+ 
+ Q(Ellipsis)
+ 
+ Q(Ellipsis)
+ 
+ Q(Exception)
+ 
+ Q(Exception)
+ 
+ Q(GeneratorExit)
+ 
+ Q(GeneratorExit)
+ 
+ Q(ImportError)
+ 
+ Q(ImportError)
+ 
+ Q(IndentationError)
+ 
+ Q(IndentationError)
+ 
+ Q(IndexError)
+ 
+ Q(IndexError)
+ 
+ Q(KeyError)
+ 
+ Q(KeyError)
+ 
+ Q(KeyboardInterrupt)
+ 
+ Q(KeyboardInterrupt)
+ 
+ Q(LookupError)
+ 
+ Q(LookupError)
+ 
+ Q(MemoryError)
+ 
+ Q(MemoryError)
+ 
+ Q(NameError)
+ 
+ Q(NameError)
+ 
+ Q(None)
+ 
+ Q(NoneType)
+ 
+ Q(NotImplementedError)
+ 
+ Q(NotImplementedError)
+ 
+ Q(OSError)
+ 
+ Q(OSError)
+ 
+ Q(OverflowError)
+ 
+ Q(OverflowError)
+ 
+ Q(RuntimeError)
+ 
+ Q(RuntimeError)
+ 
+ Q(StopAsyncIteration)
+ 
+ Q(StopAsyncIteration)
+ 
+ Q(StopAsyncIteration)
+ 
+ Q(StopIteration)
+ 
+ Q(StopIteration)
+ 
+ Q(SyntaxError)
+ 
+ Q(SyntaxError)
+ 
+ Q(SystemExit)
+ 
+ Q(SystemExit)
+ 
+ Q(TypeError)
+ 
+ Q(TypeError)
+ 
+ Q(UnicodeError)
+ 
+ Q(UnicodeError)
+ 
+ Q(ValueError)
+ 
+ Q(ValueError)
+ 
+ Q(ViperTypeError)
+ 
+ Q(ViperTypeError)
+ 
+ Q(ZeroDivisionError)
+ 
+ Q(ZeroDivisionError)
+ 
+ Q(_0x0a_)
+ 
+ Q(__add__)
+ 
+ Q(__aenter__)
+ 
+ Q(__aenter__)
+ 
+ Q(__aexit__)
+ 
+ Q(__aexit__)
+ 
+ Q(__aiter__)
+ 
+ Q(__anext__)
+ 
+ Q(__bases__)
+ 
+ Q(__bool__)
+ 
+ Q(__build_class__)
+ 
+ Q(__call__)
+ 
+ Q(__class__)
+ 
+ Q(__class__)
+ 
+ Q(__class__)
+ 
+ Q(__class__)
+ 
+ Q(__class__)
+ 
+ Q(__class__)
+ 
+ Q(__class__)
+ 
+ Q(__contains__)
+ 
+ Q(__contains__)
+ 
+ Q(__del__)
+ 
+ Q(__delitem__)
+ 
+ Q(__delitem__)
+ 
+ Q(__dict__)
+ 
+ Q(__enter__)
+ 
+ Q(__enter__)
+ 
+ Q(__eq__)
+ 
+ Q(__eq__)
+ 
+ Q(__exit__)
+ 
+ Q(__exit__)
+ 
+ Q(__ge__)
+ 
+ Q(__getattr__)
+ 
+ Q(__getattr__)
+ 
+ Q(__getitem__)
+ 
+ Q(__getitem__)
+ 
+ Q(__getitem__)
+ 
+ Q(__getitem__)
+ 
+ Q(__gt__)
+ 
+ Q(__hash__)
+ 
+ Q(__iadd__)
+ 
+ Q(__import__)
+ 
+ Q(__init__)
+ 
+ Q(__init__)
+ 
+ Q(__init__)
+ 
+ Q(__int__)
+ 
+ Q(__isub__)
+ 
+ Q(__iter__)
+ 
+ Q(__le__)
+ 
+ Q(__len__)
+ 
+ Q(__lt__)
+ 
+ Q(__main__)
+ 
+ Q(__main__)
+ 
+ Q(__main__)
+ 
+ Q(__main__)
+ 
+ Q(__main__)
+ 
+ Q(__main__)
+ 
+ Q(__main__)
+ 
+ Q(__module__)
+ 
+ Q(__name__)
+ 
+ Q(__name__)
+ 
+ Q(__name__)
+ 
+ Q(__name__)
+ 
+ Q(__name__)
+ 
+ Q(__name__)
+ 
+ Q(__name__)
+ 
+ Q(__name__)
+ 
+ Q(__name__)
+ 
+ Q(__name__)
+ 
+ Q(__name__)
+ 
+ Q(__new__)
+ 
+ Q(__new__)
+ 
+ Q(__new__)
+ 
+ Q(__next__)
+ 
+ Q(__next__)
+ 
+ Q(__next__)
+ 
+ Q(__next__)
+ 
+ Q(__path__)
+ 
+ Q(__path__)
+ 
+ Q(__path__)
+ 
+ Q(__qualname__)
+ 
+ Q(__repl_print__)
+ 
+ Q(__repl_print__)
+ 
+ Q(__repr__)
+ 
+ Q(__repr__)
+ 
+ Q(__reversed__)
+ 
+ Q(__setitem__)
+ 
+ Q(__setitem__)
+ 
+ Q(__str__)
+ 
+ Q(__sub__)
+ 
+ Q(__traceback__)
+ 
+ Q(_brace_open__colon__hash_b_brace_close_)
+ 
+ Q(_lt_dictcomp_gt_)
+ 
+ Q(_lt_genexpr_gt_)
+ 
+ Q(_lt_lambda_gt_)
+ 
+ Q(_lt_listcomp_gt_)
+ 
+ Q(_lt_module_gt_)
+ 
+ Q(_lt_setcomp_gt_)
+ 
+ Q(_lt_string_gt_)
+ 
+ Q(_percent__hash_o)
+ 
+ Q(_percent__hash_x)
+ 
+ Q(_space_)
+ 
+ Q(_star_)
+ 
+ Q(_star_)
+ 
+ Q(_star_)
+ 
+ Q(abs)
+ 
+ Q(add)
+ 
+ Q(add)
+ 
+ Q(add)
+ 
+ Q(add)
+ 
+ Q(addi)
+ 
+ Q(align)
+ 
+ Q(all)
+ 
+ Q(and_)
+ 
+ Q(and_)
+ 
+ Q(any)
+ 
+ Q(append)
+ 
+ Q(append)
+ 
+ Q(args)
+ 
+ Q(asm_thumb)
+ 
+ Q(asm_xtensa)
+ 
+ Q(asr)
+ 
+ Q(b)
+ 
+ Q(ball)
+ 
+ Q(bany)
+ 
+ Q(bbc)
+ 
+ Q(bbs)
+ 
+ Q(beq)
+ 
+ Q(beqz)
+ 
+ Q(bge)
+ 
+ Q(bgeu)
+ 
+ Q(bin)
+ 
+ Q(bl)
+ 
+ Q(blt)
+ 
+ Q(bnall)
+ 
+ Q(bne)
+ 
+ Q(bnez)
+ 
+ Q(bnone)
+ 
+ Q(bool)
+ 
+ Q(bool)
+ 
+ Q(bool)
+ 
+ Q(bool)
+ 
+ Q(bool)
+ 
+ Q(bound_method)
+ 
+ Q(builtins)
+ 
+ Q(builtins)
+ 
+ Q(bx)
+ 
+ Q(bytearray)
+ 
+ Q(bytearray)
+ 
+ Q(bytecode)
+ 
+ Q(bytes)
+ 
+ Q(bytes)
+ 
+ Q(bytes)
+ 
+ Q(calcsize)
+ 
+ Q(callable)
+ 
+ Q(callx0)
+ 
+ Q(chr)
+ 
+ Q(classmethod)
+ 
+ Q(classmethod)
+ 
+ Q(clear)
+ 
+ Q(clear)
+ 
+ Q(clear)
+ 
+ Q(close)
+ 
+ Q(close)
+ 
+ Q(close)
+ 
+ Q(closure)
+ 
+ Q(closure)
+ 
+ Q(clz)
+ 
+ Q(cmp)
+ 
+ Q(complex)
+ 
+ Q(complex)
+ 
+ Q(const)
+ 
+ Q(const)
+ 
+ Q(copy)
+ 
+ Q(copy)
+ 
+ Q(copy)
+ 
+ Q(count)
+ 
+ Q(count)
+ 
+ Q(count)
+ 
+ Q(count)
+ 
+ Q(cpsid)
+ 
+ Q(cpsie)
+ 
+ Q(data)
+ 
+ Q(decode)
+ 
+ Q(decode)
+ 
+ Q(default)
+ 
+ Q(delattr)
+ 
+ Q(deleter)
+ 
+ Q(dict)
+ 
+ Q(dict)
+ 
+ Q(dict_view)
+ 
+ Q(difference)
+ 
+ Q(difference_update)
+ 
+ Q(dir)
+ 
+ Q(discard)
+ 
+ Q(divmod)
+ 
+ Q(doc)
+ 
+ Q(encode)
+ 
+ Q(end)
+ 
+ Q(endswith)
+ 
+ Q(endswith)
+ 
+ Q(enumerate)
+ 
+ Q(enumerate)
+ 
+ Q(eval)
+ 
+ Q(exec)
+ 
+ Q(extend)
+ 
+ Q(extend)
+ 
+ Q(filter)
+ 
+ Q(filter)
+ 
+ Q(find)
+ 
+ Q(find)
+ 
+ Q(float)
+ 
+ Q(float)
+ 
+ Q(format)
+ 
+ Q(format)
+ 
+ Q(from_bytes)
+ 
+ Q(fromkeys)
+ 
+ Q(function)
+ 
+ Q(function)
+ 
+ Q(function)
+ 
+ Q(function)
+ 
+ Q(function)
+ 
+ Q(function)
+ 
+ Q(function)
+ 
+ Q(function)
+ 
+ Q(function)
+ 
+ Q(function)
+ 
+ Q(function)
+ 
+ Q(generator)
+ 
+ Q(generator)
+ 
+ Q(generator)
+ 
+ Q(generator)
+ 
+ Q(get)
+ 
+ Q(getattr)
+ 
+ Q(getter)
+ 
+ Q(globals)
+ 
+ Q(hasattr)
+ 
+ Q(hash)
+ 
+ Q(heap_lock)
+ 
+ Q(heap_unlock)
+ 
+ Q(hex)
+ 
+ Q(id)
+ 
+ Q(imag)
+ 
+ Q(index)
+ 
+ Q(index)
+ 
+ Q(index)
+ 
+ Q(index)
+ 
+ Q(insert)
+ 
+ Q(int)
+ 
+ Q(int)
+ 
+ Q(int)
+ 
+ Q(int)
+ 
+ Q(int)
+ 
+ Q(intersection)
+ 
+ Q(intersection_update)
+ 
+ Q(isalpha)
+ 
+ Q(isalpha)
+ 
+ Q(isdigit)
+ 
+ Q(isdigit)
+ 
+ Q(isdisjoint)
+ 
+ Q(isinstance)
+ 
+ Q(islower)
+ 
+ Q(islower)
+ 
+ Q(isspace)
+ 
+ Q(isspace)
+ 
+ Q(issubclass)
+ 
+ Q(issubset)
+ 
+ Q(issuperset)
+ 
+ Q(isupper)
+ 
+ Q(isupper)
+ 
+ Q(items)
+ 
+ Q(iter)
+ 
+ Q(iterable)
+ 
+ Q(iterator)
+ 
+ Q(iterator)
+ 
+ Q(iterator)
+ 
+ Q(iterator)
+ 
+ Q(iterator)
+ 
+ Q(j)
+ 
+ Q(join)
+ 
+ Q(join)
+ 
+ Q(jx)
+ 
+ Q(key)
+ 
+ Q(key)
+ 
+ Q(keys)
+ 
+ Q(keys)
+ 
+ Q(l16si)
+ 
+ Q(l16ui)
+ 
+ Q(l32i)
+ 
+ Q(l8ui)
+ 
+ Q(label)
+ 
+ Q(ldr)
+ 
+ Q(ldrb)
+ 
+ Q(ldrex)
+ 
+ Q(ldrh)
+ 
+ Q(len)
+ 
+ Q(list)
+ 
+ Q(list)
+ 
+ Q(little)
+ 
+ Q(little)
+ 
+ Q(little)
+ 
+ Q(locals)
+ 
+ Q(lower)
+ 
+ Q(lower)
+ 
+ Q(lsl)
+ 
+ Q(lsr)
+ 
+ Q(lstrip)
+ 
+ Q(lstrip)
+ 
+ Q(map)
+ 
+ Q(map)
+ 
+ Q(max)
+ 
+ Q(maximum_space_recursion_space_depth_space_exceeded)
+ 
+ Q(micropython)
+ 
+ Q(micropython)
+ 
+ Q(micropython)
+ 
+ Q(min)
+ 
+ Q(module)
+ 
+ Q(mov)
+ 
+ Q(mov)
+ 
+ Q(mov)
+ 
+ Q(mov_n)
+ 
+ Q(movi)
+ 
+ Q(movt)
+ 
+ Q(movw)
+ 
+ Q(movwt)
+ 
+ Q(mp_file)
+ 
+ Q(mrs)
+ 
+ Q(mull)
+ 
+ Q(native)
+ 
+ Q(next)
+ 
+ Q(nop)
+ 
+ Q(object)
+ 
+ Q(object)
+ 
+ Q(object)
+ 
+ Q(object)
+ 
+ Q(object)
+ 
+ Q(oct)
+ 
+ Q(opt_level)
+ 
+ Q(or_)
+ 
+ Q(ord)
+ 
+ Q(pack)
+ 
+ Q(pack_into)
+ 
+ Q(pend_throw)
+ 
+ Q(pop)
+ 
+ Q(pop)
+ 
+ Q(pop)
+ 
+ Q(pop)
+ 
+ Q(popitem)
+ 
+ Q(pow)
+ 
+ Q(print)
+ 
+ Q(property)
+ 
+ Q(property)
+ 
+ Q(ptr)
+ 
+ Q(ptr)
+ 
+ Q(ptr16)
+ 
+ Q(ptr16)
+ 
+ Q(ptr32)
+ 
+ Q(ptr32)
+ 
+ Q(ptr8)
+ 
+ Q(ptr8)
+ 
+ Q(push)
+ 
+ Q(range)
+ 
+ Q(range)
+ 
+ Q(range)
+ 
+ Q(rbit)
+ 
+ Q(readinto)
+ 
+ Q(real)
+ 
+ Q(remove)
+ 
+ Q(remove)
+ 
+ Q(replace)
+ 
+ Q(replace)
+ 
+ Q(repr)
+ 
+ Q(ret_n)
+ 
+ Q(reverse)
+ 
+ Q(reverse)
+ 
+ Q(reversed)
+ 
+ Q(reversed)
+ 
+ Q(rfind)
+ 
+ Q(rfind)
+ 
+ Q(rindex)
+ 
+ Q(rindex)
+ 
+ Q(round)
+ 
+ Q(rsplit)
+ 
+ Q(rsplit)
+ 
+ Q(rstrip)
+ 
+ Q(rstrip)
+ 
+ Q(s16i)
+ 
+ Q(s32i)
+ 
+ Q(s8i)
+ 
+ Q(sdiv)
+ 
+ Q(seek)
+ 
+ Q(send)
+ 
+ Q(send)
+ 
+ Q(sep)
+ 
+ Q(set)
+ 
+ Q(set)
+ 
+ Q(setattr)
+ 
+ Q(setdefault)
+ 
+ Q(setter)
+ 
+ Q(slice)
+ 
+ Q(slice)
+ 
+ Q(sort)
+ 
+ Q(sorted)
+ 
+ Q(split)
+ 
+ Q(split)
+ 
+ Q(start)
+ 
+ Q(start)
+ 
+ Q(startswith)
+ 
+ Q(startswith)
+ 
+ Q(staticmethod)
+ 
+ Q(staticmethod)
+ 
+ Q(step)
+ 
+ Q(stop)
+ 
+ Q(str)
+ 
+ Q(str)
+ 
+ Q(str)
+ 
+ Q(str)
+ 
+ Q(str)
+ 
+ Q(strb)
+ 
+ Q(strex)
+ 
+ Q(strh)
+ 
+ Q(strip)
+ 
+ Q(strip)
+ 
+ Q(sub)
+ 
+ Q(sub)
+ 
+ Q(sub)
+ 
+ Q(sum)
+ 
+ Q(super)
+ 
+ Q(super)
+ 
+ Q(super)
+ 
+ Q(symmetric_difference)
+ 
+ Q(symmetric_difference_update)
+ 
+ Q(tell)
+ 
+ Q(throw)
+ 
+ Q(throw)
+ 
+ Q(to_bytes)
+ 
+ Q(tuple)
+ 
+ Q(tuple)
+ 
+ Q(type)
+ 
+ Q(type)
+ 
+ Q(udiv)
+ 
+ Q(uint)
+ 
+ Q(uint)
+ 
+ Q(uint)
+ 
+ Q(union)
+ 
+ Q(unpack)
+ 
+ Q(unpack_from)
+ 
+ Q(update)
+ 
+ Q(update)
+ 
+ Q(upper)
+ 
+ Q(upper)
+ 
+ Q(ustruct)
+ 
+ Q(ustruct)
+ 
+ Q(utf_hyphen_8)
+ 
+ Q(utf_hyphen_8)
+ 
+ Q(value)
+ 
+ Q(values)
+ 
+ Q(vcmp)
+ 
+ Q(vcvt_f32_s32)
+ 
+ Q(vcvt_s32_f32)
+ 
+ Q(viper)
+ 
+ Q(vldr)
+ 
+ Q(vmov)
+ 
+ Q(vmrs)
+ 
+ Q(vneg)
+ 
+ Q(vsqrt)
+ 
+ Q(vstr)
+ 
+ Q(wfi)
+ 
+ Q(xor)
+ 
+ Q(zip)
+ 
+ Q(zip)
+ 
+ Q(zip)
diff -crNb MicorpythonOriginal1.12/micropython/mpy-cross/build/genhdr/qstrdefs.collected.h.hash micropython1.12_withUlab/micropython/mpy-cross/build/genhdr/qstrdefs.collected.h.hash
*** MicorpythonOriginal1.12/micropython/mpy-cross/build/genhdr/qstrdefs.collected.h.hash	1970-01-01 02:00:00.000000000 +0200
--- micropython1.12_withUlab/micropython/mpy-cross/build/genhdr/qstrdefs.collected.h.hash	2020-06-19 18:37:32.587653828 +0200
***************
*** 0 ****
--- 1 ----
+ aae90c44dc20fb87d2beaa4ce04c4fbd
\ No newline at end of file
diff -crNb MicorpythonOriginal1.12/micropython/mpy-cross/build/genhdr/qstrdefs.generated.h micropython1.12_withUlab/micropython/mpy-cross/build/genhdr/qstrdefs.generated.h
*** MicorpythonOriginal1.12/micropython/mpy-cross/build/genhdr/qstrdefs.generated.h	1970-01-01 02:00:00.000000000 +0200
--- micropython1.12_withUlab/micropython/mpy-cross/build/genhdr/qstrdefs.generated.h	2020-06-19 18:37:32.627652961 +0200
***************
*** 0 ****
--- 1,344 ----
+ // This file was automatically generated by makeqstrdata.py
+ 
+ QDEF(MP_QSTRnull, (const byte*)"\x00\x00\x00" "")
+ QDEF(MP_QSTR_, (const byte*)"\x05\x15\x00" "")
+ QDEF(MP_QSTR___dir__, (const byte*)"\x7a\x8f\x07" "__dir__")
+ QDEF(MP_QSTR__0x0a_, (const byte*)"\xaf\xb5\x01" "\x0a")
+ QDEF(MP_QSTR__space_, (const byte*)"\x85\xb5\x01" " ")
+ QDEF(MP_QSTR__star_, (const byte*)"\x8f\xb5\x01" "*")
+ QDEF(MP_QSTR__slash_, (const byte*)"\x8a\xb5\x01" "/")
+ QDEF(MP_QSTR__lt_module_gt_, (const byte*)"\xbd\x94\x08" "<module>")
+ QDEF(MP_QSTR__, (const byte*)"\xfa\xb5\x01" "_")
+ QDEF(MP_QSTR___call__, (const byte*)"\xa7\xf9\x08" "__call__")
+ QDEF(MP_QSTR___class__, (const byte*)"\x2b\xc5\x09" "__class__")
+ QDEF(MP_QSTR___delitem__, (const byte*)"\xfd\x35\x0b" "__delitem__")
+ QDEF(MP_QSTR___enter__, (const byte*)"\x6d\xba\x09" "__enter__")
+ QDEF(MP_QSTR___exit__, (const byte*)"\x45\xf8\x08" "__exit__")
+ QDEF(MP_QSTR___getattr__, (const byte*)"\x40\xf8\x0b" "__getattr__")
+ QDEF(MP_QSTR___getitem__, (const byte*)"\x26\x39\x0b" "__getitem__")
+ QDEF(MP_QSTR___hash__, (const byte*)"\xf7\xc8\x08" "__hash__")
+ QDEF(MP_QSTR___init__, (const byte*)"\x5f\xa5\x08" "__init__")
+ QDEF(MP_QSTR___int__, (const byte*)"\x16\x1b\x07" "__int__")
+ QDEF(MP_QSTR___iter__, (const byte*)"\xcf\x32\x08" "__iter__")
+ QDEF(MP_QSTR___len__, (const byte*)"\xe2\xb0\x07" "__len__")
+ QDEF(MP_QSTR___main__, (const byte*)"\x8e\x13\x08" "__main__")
+ QDEF(MP_QSTR___module__, (const byte*)"\xff\x30\x0a" "__module__")
+ QDEF(MP_QSTR___name__, (const byte*)"\xe2\x38\x08" "__name__")
+ QDEF(MP_QSTR___new__, (const byte*)"\x79\x15\x07" "__new__")
+ QDEF(MP_QSTR___next__, (const byte*)"\x02\x73\x08" "__next__")
+ QDEF(MP_QSTR___qualname__, (const byte*)"\x6b\x00\x0c" "__qualname__")
+ QDEF(MP_QSTR___repr__, (const byte*)"\x10\x0b\x08" "__repr__")
+ QDEF(MP_QSTR___setitem__, (const byte*)"\x32\x3e\x0b" "__setitem__")
+ QDEF(MP_QSTR___str__, (const byte*)"\xd0\xcd\x07" "__str__")
+ QDEF(MP_QSTR_ArithmeticError, (const byte*)"\x2d\x8c\x0f" "ArithmeticError")
+ QDEF(MP_QSTR_AssertionError, (const byte*)"\x97\x5a\x0e" "AssertionError")
+ QDEF(MP_QSTR_AttributeError, (const byte*)"\x21\xde\x0e" "AttributeError")
+ QDEF(MP_QSTR_BaseException, (const byte*)"\x07\x92\x0d" "BaseException")
+ QDEF(MP_QSTR_EOFError, (const byte*)"\x91\xbf\x08" "EOFError")
+ QDEF(MP_QSTR_Ellipsis, (const byte*)"\xf0\xe0\x08" "Ellipsis")
+ QDEF(MP_QSTR_Exception, (const byte*)"\xf2\x29\x09" "Exception")
+ QDEF(MP_QSTR_GeneratorExit, (const byte*)"\x16\x62\x0d" "GeneratorExit")
+ QDEF(MP_QSTR_ImportError, (const byte*)"\x20\x9c\x0b" "ImportError")
+ QDEF(MP_QSTR_IndentationError, (const byte*)"\x5c\x20\x10" "IndentationError")
+ QDEF(MP_QSTR_IndexError, (const byte*)"\x83\xad\x0a" "IndexError")
+ QDEF(MP_QSTR_KeyError, (const byte*)"\xea\x00\x08" "KeyError")
+ QDEF(MP_QSTR_KeyboardInterrupt, (const byte*)"\xaf\xe2\x11" "KeyboardInterrupt")
+ QDEF(MP_QSTR_LookupError, (const byte*)"\xff\x69\x0b" "LookupError")
+ QDEF(MP_QSTR_MemoryError, (const byte*)"\xdc\x83\x0b" "MemoryError")
+ QDEF(MP_QSTR_NameError, (const byte*)"\xba\x2d\x09" "NameError")
+ QDEF(MP_QSTR_NoneType, (const byte*)"\x17\x68\x08" "NoneType")
+ QDEF(MP_QSTR_NotImplementedError, (const byte*)"\xc6\x98\x13" "NotImplementedError")
+ QDEF(MP_QSTR_OSError, (const byte*)"\xa1\x65\x07" "OSError")
+ QDEF(MP_QSTR_OverflowError, (const byte*)"\x81\xe1\x0d" "OverflowError")
+ QDEF(MP_QSTR_RuntimeError, (const byte*)"\x61\xf1\x0c" "RuntimeError")
+ QDEF(MP_QSTR_StopIteration, (const byte*)"\xea\x1c\x0d" "StopIteration")
+ QDEF(MP_QSTR_SyntaxError, (const byte*)"\x94\x8f\x0b" "SyntaxError")
+ QDEF(MP_QSTR_SystemExit, (const byte*)"\x20\xff\x0a" "SystemExit")
+ QDEF(MP_QSTR_TypeError, (const byte*)"\x25\x96\x09" "TypeError")
+ QDEF(MP_QSTR_ValueError, (const byte*)"\x96\x87\x0a" "ValueError")
+ QDEF(MP_QSTR_ZeroDivisionError, (const byte*)"\xb6\x27\x11" "ZeroDivisionError")
+ QDEF(MP_QSTR_abs, (const byte*)"\x95\x32\x03" "abs")
+ QDEF(MP_QSTR_all, (const byte*)"\x44\x33\x03" "all")
+ QDEF(MP_QSTR_any, (const byte*)"\x13\x33\x03" "any")
+ QDEF(MP_QSTR_append, (const byte*)"\x6b\x97\x06" "append")
+ QDEF(MP_QSTR_args, (const byte*)"\xc2\xc6\x04" "args")
+ QDEF(MP_QSTR_bool, (const byte*)"\xeb\x3c\x04" "bool")
+ QDEF(MP_QSTR_builtins, (const byte*)"\xf7\x31\x08" "builtins")
+ QDEF(MP_QSTR_bytearray, (const byte*)"\x76\xa3\x09" "bytearray")
+ QDEF(MP_QSTR_bytecode, (const byte*)"\x22\x7d\x08" "bytecode")
+ QDEF(MP_QSTR_bytes, (const byte*)"\x5c\xb2\x05" "bytes")
+ QDEF(MP_QSTR_callable, (const byte*)"\x0d\x70\x08" "callable")
+ QDEF(MP_QSTR_chr, (const byte*)"\xdc\x4c\x03" "chr")
+ QDEF(MP_QSTR_classmethod, (const byte*)"\xb4\x8c\x0b" "classmethod")
+ QDEF(MP_QSTR_clear, (const byte*)"\x7c\xa0\x05" "clear")
+ QDEF(MP_QSTR_close, (const byte*)"\x33\x67\x05" "close")
+ QDEF(MP_QSTR_const, (const byte*)"\xc0\xff\x05" "const")
+ QDEF(MP_QSTR_copy, (const byte*)"\xe0\xdb\x04" "copy")
+ QDEF(MP_QSTR_count, (const byte*)"\xa6\x4d\x05" "count")
+ QDEF(MP_QSTR_dict, (const byte*)"\x3f\xfc\x04" "dict")
+ QDEF(MP_QSTR_dir, (const byte*)"\xfa\x1e\x03" "dir")
+ QDEF(MP_QSTR_divmod, (const byte*)"\xb8\x04\x06" "divmod")
+ QDEF(MP_QSTR_end, (const byte*)"\x0a\x23\x03" "end")
+ QDEF(MP_QSTR_endswith, (const byte*)"\x1b\xa3\x08" "endswith")
+ QDEF(MP_QSTR_eval, (const byte*)"\x9b\xa6\x04" "eval")
+ QDEF(MP_QSTR_exec, (const byte*)"\x1e\xc0\x04" "exec")
+ QDEF(MP_QSTR_extend, (const byte*)"\x63\xe8\x06" "extend")
+ QDEF(MP_QSTR_find, (const byte*)"\x00\x34\x04" "find")
+ QDEF(MP_QSTR_format, (const byte*)"\x26\x33\x06" "format")
+ QDEF(MP_QSTR_from_bytes, (const byte*)"\x35\x74\x0a" "from_bytes")
+ QDEF(MP_QSTR_get, (const byte*)"\x33\x3b\x03" "get")
+ QDEF(MP_QSTR_getattr, (const byte*)"\xc0\x17\x07" "getattr")
+ QDEF(MP_QSTR_globals, (const byte*)"\x9d\x49\x07" "globals")
+ QDEF(MP_QSTR_hasattr, (const byte*)"\x8c\xb0\x07" "hasattr")
+ QDEF(MP_QSTR_hash, (const byte*)"\xb7\x70\x04" "hash")
+ QDEF(MP_QSTR_id, (const byte*)"\x28\x6f\x02" "id")
+ QDEF(MP_QSTR_index, (const byte*)"\x7b\x28\x05" "index")
+ QDEF(MP_QSTR_insert, (const byte*)"\x12\x54\x06" "insert")
+ QDEF(MP_QSTR_int, (const byte*)"\x16\x53\x03" "int")
+ QDEF(MP_QSTR_isalpha, (const byte*)"\xeb\x37\x07" "isalpha")
+ QDEF(MP_QSTR_isdigit, (const byte*)"\xa8\x9a\x07" "isdigit")
+ QDEF(MP_QSTR_isinstance, (const byte*)"\xb6\xbe\x0a" "isinstance")
+ QDEF(MP_QSTR_islower, (const byte*)"\xfc\x80\x07" "islower")
+ QDEF(MP_QSTR_isspace, (const byte*)"\x5b\xf8\x07" "isspace")
+ QDEF(MP_QSTR_issubclass, (const byte*)"\xb5\x7f\x0a" "issubclass")
+ QDEF(MP_QSTR_isupper, (const byte*)"\xdd\xa7\x07" "isupper")
+ QDEF(MP_QSTR_items, (const byte*)"\xe3\x53\x05" "items")
+ QDEF(MP_QSTR_iter, (const byte*)"\x8f\x21\x04" "iter")
+ QDEF(MP_QSTR_join, (const byte*)"\xa7\x5c\x04" "join")
+ QDEF(MP_QSTR_key, (const byte*)"\x32\x6d\x03" "key")
+ QDEF(MP_QSTR_keys, (const byte*)"\x01\x13\x04" "keys")
+ QDEF(MP_QSTR_len, (const byte*)"\x62\x40\x03" "len")
+ QDEF(MP_QSTR_list, (const byte*)"\x27\x1d\x04" "list")
+ QDEF(MP_QSTR_little, (const byte*)"\x89\x6a\x06" "little")
+ QDEF(MP_QSTR_locals, (const byte*)"\x3b\xa1\x06" "locals")
+ QDEF(MP_QSTR_lower, (const byte*)"\xc6\xcb\x05" "lower")
+ QDEF(MP_QSTR_lstrip, (const byte*)"\xe5\xb9\x06" "lstrip")
+ QDEF(MP_QSTR_main, (const byte*)"\xce\xb7\x04" "main")
+ QDEF(MP_QSTR_map, (const byte*)"\xb9\x43\x03" "map")
+ QDEF(MP_QSTR_micropython, (const byte*)"\x0b\x7c\x0b" "micropython")
+ QDEF(MP_QSTR_next, (const byte*)"\x42\x88\x04" "next")
+ QDEF(MP_QSTR_object, (const byte*)"\x90\x8d\x06" "object")
+ QDEF(MP_QSTR_open, (const byte*)"\xd1\x3a\x04" "open")
+ QDEF(MP_QSTR_ord, (const byte*)"\x1c\x5e\x03" "ord")
+ QDEF(MP_QSTR_pop, (const byte*)"\x2a\x73\x03" "pop")
+ QDEF(MP_QSTR_popitem, (const byte*)"\xbf\x2c\x07" "popitem")
+ QDEF(MP_QSTR_pow, (const byte*)"\x2d\x73\x03" "pow")
+ QDEF(MP_QSTR_print, (const byte*)"\x54\xc6\x05" "print")
+ QDEF(MP_QSTR_range, (const byte*)"\x1a\x5e\x05" "range")
+ QDEF(MP_QSTR_read, (const byte*)"\xb7\xf9\x04" "read")
+ QDEF(MP_QSTR_readinto, (const byte*)"\x4b\xbf\x08" "readinto")
+ QDEF(MP_QSTR_readline, (const byte*)"\xf9\x19\x08" "readline")
+ QDEF(MP_QSTR_remove, (const byte*)"\x63\x8a\x06" "remove")
+ QDEF(MP_QSTR_replace, (const byte*)"\x49\x25\x07" "replace")
+ QDEF(MP_QSTR_repr, (const byte*)"\xd0\xf7\x04" "repr")
+ QDEF(MP_QSTR_reverse, (const byte*)"\x25\x2a\x07" "reverse")
+ QDEF(MP_QSTR_rfind, (const byte*)"\xd2\x9c\x05" "rfind")
+ QDEF(MP_QSTR_rindex, (const byte*)"\xe9\x2b\x06" "rindex")
+ QDEF(MP_QSTR_round, (const byte*)"\xe7\x25\x05" "round")
+ QDEF(MP_QSTR_rsplit, (const byte*)"\xa5\x00\x06" "rsplit")
+ QDEF(MP_QSTR_rstrip, (const byte*)"\x3b\x95\x06" "rstrip")
+ QDEF(MP_QSTR_self, (const byte*)"\x79\x77\x04" "self")
+ QDEF(MP_QSTR_send, (const byte*)"\xb9\x76\x04" "send")
+ QDEF(MP_QSTR_sep, (const byte*)"\x23\x8f\x03" "sep")
+ QDEF(MP_QSTR_set, (const byte*)"\x27\x8f\x03" "set")
+ QDEF(MP_QSTR_setattr, (const byte*)"\xd4\xa8\x07" "setattr")
+ QDEF(MP_QSTR_setdefault, (const byte*)"\x6c\xa3\x0a" "setdefault")
+ QDEF(MP_QSTR_sort, (const byte*)"\xbf\x9d\x04" "sort")
+ QDEF(MP_QSTR_sorted, (const byte*)"\x5e\x15\x06" "sorted")
+ QDEF(MP_QSTR_split, (const byte*)"\xb7\x33\x05" "split")
+ QDEF(MP_QSTR_start, (const byte*)"\x85\xef\x05" "start")
+ QDEF(MP_QSTR_startswith, (const byte*)"\x74\xe8\x0a" "startswith")
+ QDEF(MP_QSTR_staticmethod, (const byte*)"\x62\xaf\x0c" "staticmethod")
+ QDEF(MP_QSTR_step, (const byte*)"\x57\x36\x04" "step")
+ QDEF(MP_QSTR_stop, (const byte*)"\x9d\x36\x04" "stop")
+ QDEF(MP_QSTR_str, (const byte*)"\x50\x8d\x03" "str")
+ QDEF(MP_QSTR_strip, (const byte*)"\x29\x1e\x05" "strip")
+ QDEF(MP_QSTR_sum, (const byte*)"\x2e\x8d\x03" "sum")
+ QDEF(MP_QSTR_super, (const byte*)"\xc4\xb2\x05" "super")
+ QDEF(MP_QSTR_throw, (const byte*)"\xb3\x44\x05" "throw")
+ QDEF(MP_QSTR_to_bytes, (const byte*)"\xd8\x3e\x08" "to_bytes")
+ QDEF(MP_QSTR_tuple, (const byte*)"\xfd\x41\x05" "tuple")
+ QDEF(MP_QSTR_type, (const byte*)"\x9d\x7f\x04" "type")
+ QDEF(MP_QSTR_update, (const byte*)"\xb4\x76\x06" "update")
+ QDEF(MP_QSTR_upper, (const byte*)"\x27\x94\x05" "upper")
+ QDEF(MP_QSTR_utf_hyphen_8, (const byte*)"\xb7\x82\x05" "utf-8")
+ QDEF(MP_QSTR_value, (const byte*)"\x4e\x34\x05" "value")
+ QDEF(MP_QSTR_values, (const byte*)"\x7d\xbe\x06" "values")
+ QDEF(MP_QSTR_write, (const byte*)"\x98\xa8\x05" "write")
+ QDEF(MP_QSTR_zip, (const byte*)"\xe6\xac\x03" "zip")
+ QDEF(MP_QSTR___add__, (const byte*)"\xc4\x82\x07" "__add__")
+ QDEF(MP_QSTR___aenter__, (const byte*)"\x4c\x84\x0a" "__aenter__")
+ QDEF(MP_QSTR___aexit__, (const byte*)"\xc4\xcf\x09" "__aexit__")
+ QDEF(MP_QSTR___aiter__, (const byte*)"\x4e\x2b\x09" "__aiter__")
+ QDEF(MP_QSTR___anext__, (const byte*)"\x83\xb4\x09" "__anext__")
+ QDEF(MP_QSTR___bases__, (const byte*)"\x03\x30\x09" "__bases__")
+ QDEF(MP_QSTR___bool__, (const byte*)"\x2b\x65\x08" "__bool__")
+ QDEF(MP_QSTR___build_class__, (const byte*)"\x42\x88\x0f" "__build_class__")
+ QDEF(MP_QSTR___contains__, (const byte*)"\xc6\x5f\x0c" "__contains__")
+ QDEF(MP_QSTR___del__, (const byte*)"\x68\x37\x07" "__del__")
+ QDEF(MP_QSTR___dict__, (const byte*)"\x7f\x54\x08" "__dict__")
+ QDEF(MP_QSTR___eq__, (const byte*)"\x71\x3e\x06" "__eq__")
+ QDEF(MP_QSTR___ge__, (const byte*)"\xa7\x46\x06" "__ge__")
+ QDEF(MP_QSTR___gt__, (const byte*)"\xb6\x82\x06" "__gt__")
+ QDEF(MP_QSTR___iadd__, (const byte*)"\x6d\x4a\x08" "__iadd__")
+ QDEF(MP_QSTR___import__, (const byte*)"\x38\x3e\x0a" "__import__")
+ QDEF(MP_QSTR___isub__, (const byte*)"\x08\x78\x08" "__isub__")
+ QDEF(MP_QSTR___le__, (const byte*)"\xcc\x13\x06" "__le__")
+ QDEF(MP_QSTR___lt__, (const byte*)"\x5d\x68\x06" "__lt__")
+ QDEF(MP_QSTR___path__, (const byte*)"\xc8\x23\x08" "__path__")
+ QDEF(MP_QSTR___repl_print__, (const byte*)"\x00\xbb\x0e" "__repl_print__")
+ QDEF(MP_QSTR___reversed__, (const byte*)"\x61\xff\x0c" "__reversed__")
+ QDEF(MP_QSTR___sub__, (const byte*)"\x21\x09\x07" "__sub__")
+ QDEF(MP_QSTR___traceback__, (const byte*)"\x4f\xcf\x0d" "__traceback__")
+ QDEF(MP_QSTR__percent__hash_o, (const byte*)"\x6c\x1a\x03" "%#o")
+ QDEF(MP_QSTR__percent__hash_x, (const byte*)"\x7b\x1a\x03" "%#x")
+ QDEF(MP_QSTR__brace_open__colon__hash_b_brace_close_, (const byte*)"\x58\x37\x05" "{:#b}")
+ QDEF(MP_QSTR_maximum_space_recursion_space_depth_space_exceeded, (const byte*)"\x73\x1e\x20" "maximum recursion depth exceeded")
+ QDEF(MP_QSTR__lt_lambda_gt_, (const byte*)"\x80\x8c\x08" "<lambda>")
+ QDEF(MP_QSTR__lt_listcomp_gt_, (const byte*)"\xd4\x15\x0a" "<listcomp>")
+ QDEF(MP_QSTR__lt_dictcomp_gt_, (const byte*)"\xcc\x8d\x0a" "<dictcomp>")
+ QDEF(MP_QSTR__lt_setcomp_gt_, (const byte*)"\x54\x51\x09" "<setcomp>")
+ QDEF(MP_QSTR__lt_genexpr_gt_, (const byte*)"\x34\x6a\x09" "<genexpr>")
+ QDEF(MP_QSTR__lt_string_gt_, (const byte*)"\x52\x53\x08" "<string>")
+ QDEF(MP_QSTR__lt_stdin_gt_, (const byte*)"\xe3\x63\x07" "<stdin>")
+ QDEF(MP_QSTR_mp_file, (const byte*)"\x21\xa4\x07" "mp_file")
+ QDEF(MP_QSTR_None, (const byte*)"\x6f\xd1\x04" "None")
+ QDEF(MP_QSTR_StopAsyncIteration, (const byte*)"\xec\xf0\x12" "StopAsyncIteration")
+ QDEF(MP_QSTR_UnicodeError, (const byte*)"\x22\xd1\x0c" "UnicodeError")
+ QDEF(MP_QSTR_ViperTypeError, (const byte*)"\xdd\x05\x0e" "ViperTypeError")
+ QDEF(MP_QSTR_add, (const byte*)"\x44\x32\x03" "add")
+ QDEF(MP_QSTR_addi, (const byte*)"\xad\x7a\x04" "addi")
+ QDEF(MP_QSTR_align, (const byte*)"\xa8\xfb\x05" "align")
+ QDEF(MP_QSTR_and_, (const byte*)"\x91\x94\x04" "and_")
+ QDEF(MP_QSTR_asm_thumb, (const byte*)"\x43\x6d\x09" "asm_thumb")
+ QDEF(MP_QSTR_asm_xtensa, (const byte*)"\xb0\x12\x0a" "asm_xtensa")
+ QDEF(MP_QSTR_asr, (const byte*)"\x65\x35\x03" "asr")
+ QDEF(MP_QSTR_b, (const byte*)"\xc7\xb5\x01" "b")
+ QDEF(MP_QSTR_ball, (const byte*)"\x46\x45\x04" "ball")
+ QDEF(MP_QSTR_bany, (const byte*)"\x91\x44\x04" "bany")
+ QDEF(MP_QSTR_bbc, (const byte*)"\x06\x47\x03" "bbc")
+ QDEF(MP_QSTR_bbs, (const byte*)"\x16\x47\x03" "bbs")
+ QDEF(MP_QSTR_beq, (const byte*)"\x73\x47\x03" "beq")
+ QDEF(MP_QSTR_beqz, (const byte*)"\xa9\x35\x04" "beqz")
+ QDEF(MP_QSTR_bge, (const byte*)"\xa5\x46\x03" "bge")
+ QDEF(MP_QSTR_bgeu, (const byte*)"\x30\x1b\x04" "bgeu")
+ QDEF(MP_QSTR_bin, (const byte*)"\xe0\x48\x03" "bin")
+ QDEF(MP_QSTR_bl, (const byte*)"\xcb\x6e\x02" "bl")
+ QDEF(MP_QSTR_blt, (const byte*)"\x5f\x48\x03" "blt")
+ QDEF(MP_QSTR_bnall, (const byte*)"\x08\x55\x05" "bnall")
+ QDEF(MP_QSTR_bne, (const byte*)"\x8c\x47\x03" "bne")
+ QDEF(MP_QSTR_bnez, (const byte*)"\x76\x39\x04" "bnez")
+ QDEF(MP_QSTR_bnone, (const byte*)"\x4d\x3d\x05" "bnone")
+ QDEF(MP_QSTR_bound_method, (const byte*)"\x97\xa2\x0c" "bound_method")
+ QDEF(MP_QSTR_bx, (const byte*)"\xdf\x6e\x02" "bx")
+ QDEF(MP_QSTR_calcsize, (const byte*)"\x4d\x38\x08" "calcsize")
+ QDEF(MP_QSTR_callx0, (const byte*)"\x2f\xb6\x06" "callx0")
+ QDEF(MP_QSTR_closure, (const byte*)"\x74\xca\x07" "closure")
+ QDEF(MP_QSTR_clz, (const byte*)"\x50\x4c\x03" "clz")
+ QDEF(MP_QSTR_cmp, (const byte*)"\x3b\x4c\x03" "cmp")
+ QDEF(MP_QSTR_complex, (const byte*)"\xc5\x9d\x07" "complex")
+ QDEF(MP_QSTR_cpsid, (const byte*)"\xe8\xc7\x05" "cpsid")
+ QDEF(MP_QSTR_cpsie, (const byte*)"\xe9\xc7\x05" "cpsie")
+ QDEF(MP_QSTR_data, (const byte*)"\x15\xdc\x04" "data")
+ QDEF(MP_QSTR_decode, (const byte*)"\xa9\x59\x06" "decode")
+ QDEF(MP_QSTR_default, (const byte*)"\xce\x7d\x07" "default")
+ QDEF(MP_QSTR_delattr, (const byte*)"\xdb\xc8\x07" "delattr")
+ QDEF(MP_QSTR_deleter, (const byte*)"\x6e\xdb\x07" "deleter")
+ QDEF(MP_QSTR_dict_view, (const byte*)"\x2d\xa9\x09" "dict_view")
+ QDEF(MP_QSTR_difference, (const byte*)"\x72\x24\x0a" "difference")
+ QDEF(MP_QSTR_difference_update, (const byte*)"\x9c\xfa\x11" "difference_update")
+ QDEF(MP_QSTR_discard, (const byte*)"\x0f\x71\x07" "discard")
+ QDEF(MP_QSTR_doc, (const byte*)"\x2d\x1f\x03" "doc")
+ QDEF(MP_QSTR_encode, (const byte*)"\x43\xca\x06" "encode")
+ QDEF(MP_QSTR_enumerate, (const byte*)"\x71\xba\x09" "enumerate")
+ QDEF(MP_QSTR_filter, (const byte*)"\x25\xbe\x06" "filter")
+ QDEF(MP_QSTR_float, (const byte*)"\x35\x44\x05" "float")
+ QDEF(MP_QSTR_fromkeys, (const byte*)"\x37\xbd\x08" "fromkeys")
+ QDEF(MP_QSTR_function, (const byte*)"\x27\x02\x08" "function")
+ QDEF(MP_QSTR_generator, (const byte*)"\x96\xc3\x09" "generator")
+ QDEF(MP_QSTR_getter, (const byte*)"\x90\xb2\x06" "getter")
+ QDEF(MP_QSTR_heap_lock, (const byte*)"\xad\x8c\x09" "heap_lock")
+ QDEF(MP_QSTR_heap_unlock, (const byte*)"\x56\x2d\x0b" "heap_unlock")
+ QDEF(MP_QSTR_hex, (const byte*)"\x70\x50\x03" "hex")
+ QDEF(MP_QSTR_imag, (const byte*)"\x47\xb7\x04" "imag")
+ QDEF(MP_QSTR_intersection, (const byte*)"\x28\x2a\x0c" "intersection")
+ QDEF(MP_QSTR_intersection_update, (const byte*)"\x06\xdd\x13" "intersection_update")
+ QDEF(MP_QSTR_isdisjoint, (const byte*)"\xf7\x68\x0a" "isdisjoint")
+ QDEF(MP_QSTR_issubset, (const byte*)"\xb9\xc1\x08" "issubset")
+ QDEF(MP_QSTR_issuperset, (const byte*)"\xfc\xec\x0a" "issuperset")
+ QDEF(MP_QSTR_iterable, (const byte*)"\x25\x92\x08" "iterable")
+ QDEF(MP_QSTR_iterator, (const byte*)"\x47\xbe\x08" "iterator")
+ QDEF(MP_QSTR_j, (const byte*)"\xcf\xb5\x01" "j")
+ QDEF(MP_QSTR_jx, (const byte*)"\xd7\x6f\x02" "jx")
+ QDEF(MP_QSTR_l16si, (const byte*)"\x14\x83\x05" "l16si")
+ QDEF(MP_QSTR_l16ui, (const byte*)"\x52\x83\x05" "l16ui")
+ QDEF(MP_QSTR_l32i, (const byte*)"\x41\x8f\x04" "l32i")
+ QDEF(MP_QSTR_l8ui, (const byte*)"\x6d\x59\x04" "l8ui")
+ QDEF(MP_QSTR_label, (const byte*)"\x43\xe7\x05" "label")
+ QDEF(MP_QSTR_ldr, (const byte*)"\x5f\x40\x03" "ldr")
+ QDEF(MP_QSTR_ldrb, (const byte*)"\x5d\x4c\x04" "ldrb")
+ QDEF(MP_QSTR_ldrex, (const byte*)"\xe2\xd7\x05" "ldrex")
+ QDEF(MP_QSTR_ldrh, (const byte*)"\x57\x4c\x04" "ldrh")
+ QDEF(MP_QSTR_lsl, (const byte*)"\xb6\x41\x03" "lsl")
+ QDEF(MP_QSTR_lsr, (const byte*)"\xa8\x41\x03" "lsr")
+ QDEF(MP_QSTR_max, (const byte*)"\xb1\x43\x03" "max")
+ QDEF(MP_QSTR_min, (const byte*)"\xaf\x42\x03" "min")
+ QDEF(MP_QSTR_module, (const byte*)"\xbf\x99\x06" "module")
+ QDEF(MP_QSTR_mov, (const byte*)"\xf1\x43\x03" "mov")
+ QDEF(MP_QSTR_mov_n, (const byte*)"\x60\x0c\x05" "mov_n")
+ QDEF(MP_QSTR_movi, (const byte*)"\x78\xc2\x04" "movi")
+ QDEF(MP_QSTR_movt, (const byte*)"\x65\xc2\x04" "movt")
+ QDEF(MP_QSTR_movw, (const byte*)"\x66\xc2\x04" "movw")
+ QDEF(MP_QSTR_movwt, (const byte*)"\x52\x0f\x05" "movwt")
+ QDEF(MP_QSTR_mrs, (const byte*)"\x89\x45\x03" "mrs")
+ QDEF(MP_QSTR_mull, (const byte*)"\x3d\x0c\x04" "mull")
+ QDEF(MP_QSTR_native, (const byte*)"\x84\x0b\x06" "native")
+ QDEF(MP_QSTR_nop, (const byte*)"\xb4\x57\x03" "nop")
+ QDEF(MP_QSTR_oct, (const byte*)"\xfd\x5c\x03" "oct")
+ QDEF(MP_QSTR_opt_level, (const byte*)"\x87\x67\x09" "opt_level")
+ QDEF(MP_QSTR_or_, (const byte*)"\x27\x5e\x03" "or_")
+ QDEF(MP_QSTR_pack, (const byte*)"\xbc\xd1\x04" "pack")
+ QDEF(MP_QSTR_pack_into, (const byte*)"\x1f\xa9\x09" "pack_into")
+ QDEF(MP_QSTR_pend_throw, (const byte*)"\xf3\x74\x0a" "pend_throw")
+ QDEF(MP_QSTR_property, (const byte*)"\xc2\x29\x08" "property")
+ QDEF(MP_QSTR_ptr, (const byte*)"\x53\x70\x03" "ptr")
+ QDEF(MP_QSTR_ptr16, (const byte*)"\xf4\xca\x05" "ptr16")
+ QDEF(MP_QSTR_ptr32, (const byte*)"\xb2\xca\x05" "ptr32")
+ QDEF(MP_QSTR_ptr8, (const byte*)"\x8b\x7a\x04" "ptr8")
+ QDEF(MP_QSTR_push, (const byte*)"\xbb\x7e\x04" "push")
+ QDEF(MP_QSTR_rbit, (const byte*)"\xe8\xee\x04" "rbit")
+ QDEF(MP_QSTR_real, (const byte*)"\xbf\xf9\x04" "real")
+ QDEF(MP_QSTR_ret_n, (const byte*)"\xf7\x07\x05" "ret_n")
+ QDEF(MP_QSTR_reversed, (const byte*)"\xa1\x6e\x08" "reversed")
+ QDEF(MP_QSTR_s16i, (const byte*)"\xb8\x3b\x04" "s16i")
+ QDEF(MP_QSTR_s32i, (const byte*)"\x3e\x34\x04" "s32i")
+ QDEF(MP_QSTR_s8i, (const byte*)"\x07\x86\x03" "s8i")
+ QDEF(MP_QSTR_sdiv, (const byte*)"\xcd\x7a\x04" "sdiv")
+ QDEF(MP_QSTR_seek, (const byte*)"\x9d\x75\x04" "seek")
+ QDEF(MP_QSTR_setter, (const byte*)"\x04\x59\x06" "setter")
+ QDEF(MP_QSTR_slice, (const byte*)"\xb5\xf4\x05" "slice")
+ QDEF(MP_QSTR_strb, (const byte*)"\x32\x37\x04" "strb")
+ QDEF(MP_QSTR_strex, (const byte*)"\xad\x1d\x05" "strex")
+ QDEF(MP_QSTR_strh, (const byte*)"\x38\x37\x04" "strh")
+ QDEF(MP_QSTR_sub, (const byte*)"\x21\x8d\x03" "sub")
+ QDEF(MP_QSTR_symmetric_difference, (const byte*)"\xce\x67\x14" "symmetric_difference")
+ QDEF(MP_QSTR_symmetric_difference_update, (const byte*)"\x60\xf8\x1b" "symmetric_difference_update")
+ QDEF(MP_QSTR_tell, (const byte*)"\x14\xb1\x04" "tell")
+ QDEF(MP_QSTR_udiv, (const byte*)"\x8b\x31\x04" "udiv")
+ QDEF(MP_QSTR_uint, (const byte*)"\xe3\x3d\x04" "uint")
+ QDEF(MP_QSTR_union, (const byte*)"\xf6\x7c\x05" "union")
+ QDEF(MP_QSTR_unpack, (const byte*)"\x07\x3c\x06" "unpack")
+ QDEF(MP_QSTR_unpack_from, (const byte*)"\x0e\x6d\x0b" "unpack_from")
+ QDEF(MP_QSTR_ustruct, (const byte*)"\x47\x08\x07" "ustruct")
+ QDEF(MP_QSTR_vcmp, (const byte*)"\xad\xc1\x04" "vcmp")
+ QDEF(MP_QSTR_vcvt_f32_s32, (const byte*)"\x47\xc9\x0c" "vcvt_f32_s32")
+ QDEF(MP_QSTR_vcvt_s32_f32, (const byte*)"\x07\x33\x0c" "vcvt_s32_f32")
+ QDEF(MP_QSTR_viper, (const byte*)"\x5d\x23\x05" "viper")
+ QDEF(MP_QSTR_vldr, (const byte*)"\xc9\x07\x04" "vldr")
+ QDEF(MP_QSTR_vmov, (const byte*)"\xe7\x0a\x04" "vmov")
+ QDEF(MP_QSTR_vmrs, (const byte*)"\x9f\x09\x04" "vmrs")
+ QDEF(MP_QSTR_vneg, (const byte*)"\xff\xee\x04" "vneg")
+ QDEF(MP_QSTR_vsqrt, (const byte*)"\xf7\x42\x05" "vsqrt")
+ QDEF(MP_QSTR_vstr, (const byte*)"\xc6\x7e\x04" "vstr")
+ QDEF(MP_QSTR_wfi, (const byte*)"\x9d\x7e\x03" "wfi")
+ QDEF(MP_QSTR_xor, (const byte*)"\x20\x93\x03" "xor")
diff -crNb MicorpythonOriginal1.12/micropython/mpy-cross/build/genhdr/qstrdefs.preprocessed.h micropython1.12_withUlab/micropython/mpy-cross/build/genhdr/qstrdefs.preprocessed.h
*** MicorpythonOriginal1.12/micropython/mpy-cross/build/genhdr/qstrdefs.preprocessed.h	1970-01-01 02:00:00.000000000 +0200
--- micropython1.12_withUlab/micropython/mpy-cross/build/genhdr/qstrdefs.preprocessed.h	2020-06-19 18:37:32.599653568 +0200
***************
*** 0 ****
--- 1,1359 ----
+ # 1 "<stdin>"
+ # 1 "<built-in>"
+ # 1 "<command-line>"
+ # 1 "/usr/include/stdc-predef.h" 1 3 4
+ # 1 "<command-line>" 2
+ # 1 "<stdin>"
+ # 27 "<stdin>"
+ # 1 "../py/mpconfig.h" 1
+ # 62 "../py/mpconfig.h"
+ # 1 "./mpconfigport.h" 1
+ # 94 "./mpconfigport.h"
+ typedef long mp_int_t;
+ typedef unsigned long mp_uint_t;
+ # 114 "./mpconfigport.h"
+ typedef long mp_off_t;
+ # 125 "./mpconfigport.h"
+ # 1 "/usr/include/alloca.h" 1 3 4
+ # 21 "/usr/include/alloca.h" 3 4
+ # 1 "/usr/include/features.h" 1 3 4
+ # 424 "/usr/include/features.h" 3 4
+ # 1 "/usr/include/x86_64-linux-gnu/sys/cdefs.h" 1 3 4
+ # 427 "/usr/include/x86_64-linux-gnu/sys/cdefs.h" 3 4
+ # 1 "/usr/include/x86_64-linux-gnu/bits/wordsize.h" 1 3 4
+ # 428 "/usr/include/x86_64-linux-gnu/sys/cdefs.h" 2 3 4
+ # 1 "/usr/include/x86_64-linux-gnu/bits/long-double.h" 1 3 4
+ # 429 "/usr/include/x86_64-linux-gnu/sys/cdefs.h" 2 3 4
+ # 425 "/usr/include/features.h" 2 3 4
+ # 448 "/usr/include/features.h" 3 4
+ # 1 "/usr/include/x86_64-linux-gnu/gnu/stubs.h" 1 3 4
+ # 10 "/usr/include/x86_64-linux-gnu/gnu/stubs.h" 3 4
+ # 1 "/usr/include/x86_64-linux-gnu/gnu/stubs-64.h" 1 3 4
+ # 11 "/usr/include/x86_64-linux-gnu/gnu/stubs.h" 2 3 4
+ # 449 "/usr/include/features.h" 2 3 4
+ # 22 "/usr/include/alloca.h" 2 3 4
+ 
+ 
+ # 1 "/usr/lib/gcc/x86_64-linux-gnu/7/include/stddef.h" 1 3 4
+ # 216 "/usr/lib/gcc/x86_64-linux-gnu/7/include/stddef.h" 3 4
+ 
+ # 216 "/usr/lib/gcc/x86_64-linux-gnu/7/include/stddef.h" 3 4
+ typedef long unsigned int size_t;
+ # 25 "/usr/include/alloca.h" 2 3 4
+ 
+ 
+ 
+ 
+ 
+ 
+ 
+ extern void *alloca (size_t __size) __attribute__ ((__nothrow__ , __leaf__));
+ 
+ 
+ 
+ 
+ 
+ 
+ # 126 "./mpconfigport.h" 2
+ 
+ 
+ # 1 "/usr/lib/gcc/x86_64-linux-gnu/7/include/stdint.h" 1 3 4
+ # 9 "/usr/lib/gcc/x86_64-linux-gnu/7/include/stdint.h" 3 4
+ # 1 "/usr/include/stdint.h" 1 3 4
+ # 26 "/usr/include/stdint.h" 3 4
+ # 1 "/usr/include/x86_64-linux-gnu/bits/libc-header-start.h" 1 3 4
+ # 27 "/usr/include/stdint.h" 2 3 4
+ # 1 "/usr/include/x86_64-linux-gnu/bits/types.h" 1 3 4
+ # 27 "/usr/include/x86_64-linux-gnu/bits/types.h" 3 4
+ # 1 "/usr/include/x86_64-linux-gnu/bits/wordsize.h" 1 3 4
+ # 28 "/usr/include/x86_64-linux-gnu/bits/types.h" 2 3 4
+ 
+ 
+ typedef unsigned char __u_char;
+ typedef unsigned short int __u_short;
+ typedef unsigned int __u_int;
+ typedef unsigned long int __u_long;
+ 
+ 
+ typedef signed char __int8_t;
+ typedef unsigned char __uint8_t;
+ typedef signed short int __int16_t;
+ typedef unsigned short int __uint16_t;
+ typedef signed int __int32_t;
+ typedef unsigned int __uint32_t;
+ 
+ typedef signed long int __int64_t;
+ typedef unsigned long int __uint64_t;
+ 
+ 
+ 
+ 
+ 
+ 
+ 
+ typedef long int __quad_t;
+ typedef unsigned long int __u_quad_t;
+ 
+ 
+ 
+ 
+ 
+ 
+ 
+ typedef long int __intmax_t;
+ typedef unsigned long int __uintmax_t;
+ # 130 "/usr/include/x86_64-linux-gnu/bits/types.h" 3 4
+ # 1 "/usr/include/x86_64-linux-gnu/bits/typesizes.h" 1 3 4
+ # 131 "/usr/include/x86_64-linux-gnu/bits/types.h" 2 3 4
+ 
+ 
+ typedef unsigned long int __dev_t;
+ typedef unsigned int __uid_t;
+ typedef unsigned int __gid_t;
+ typedef unsigned long int __ino_t;
+ typedef unsigned long int __ino64_t;
+ typedef unsigned int __mode_t;
+ typedef unsigned long int __nlink_t;
+ typedef long int __off_t;
+ typedef long int __off64_t;
+ typedef int __pid_t;
+ typedef struct { int __val[2]; } __fsid_t;
+ typedef long int __clock_t;
+ typedef unsigned long int __rlim_t;
+ typedef unsigned long int __rlim64_t;
+ typedef unsigned int __id_t;
+ typedef long int __time_t;
+ typedef unsigned int __useconds_t;
+ typedef long int __suseconds_t;
+ 
+ typedef int __daddr_t;
+ typedef int __key_t;
+ 
+ 
+ typedef int __clockid_t;
+ 
+ 
+ typedef void * __timer_t;
+ 
+ 
+ typedef long int __blksize_t;
+ 
+ 
+ 
+ 
+ typedef long int __blkcnt_t;
+ typedef long int __blkcnt64_t;
+ 
+ 
+ typedef unsigned long int __fsblkcnt_t;
+ typedef unsigned long int __fsblkcnt64_t;
+ 
+ 
+ typedef unsigned long int __fsfilcnt_t;
+ typedef unsigned long int __fsfilcnt64_t;
+ 
+ 
+ typedef long int __fsword_t;
+ 
+ typedef long int __ssize_t;
+ 
+ 
+ typedef long int __syscall_slong_t;
+ 
+ typedef unsigned long int __syscall_ulong_t;
+ 
+ 
+ 
+ typedef __off64_t __loff_t;
+ typedef char *__caddr_t;
+ 
+ 
+ typedef long int __intptr_t;
+ 
+ 
+ typedef unsigned int __socklen_t;
+ 
+ 
+ 
+ 
+ typedef int __sig_atomic_t;
+ # 28 "/usr/include/stdint.h" 2 3 4
+ # 1 "/usr/include/x86_64-linux-gnu/bits/wchar.h" 1 3 4
+ # 29 "/usr/include/stdint.h" 2 3 4
+ # 1 "/usr/include/x86_64-linux-gnu/bits/wordsize.h" 1 3 4
+ # 30 "/usr/include/stdint.h" 2 3 4
+ 
+ 
+ 
+ 
+ # 1 "/usr/include/x86_64-linux-gnu/bits/stdint-intn.h" 1 3 4
+ # 24 "/usr/include/x86_64-linux-gnu/bits/stdint-intn.h" 3 4
+ typedef __int8_t int8_t;
+ typedef __int16_t int16_t;
+ typedef __int32_t int32_t;
+ typedef __int64_t int64_t;
+ # 35 "/usr/include/stdint.h" 2 3 4
+ 
+ 
+ # 1 "/usr/include/x86_64-linux-gnu/bits/stdint-uintn.h" 1 3 4
+ # 24 "/usr/include/x86_64-linux-gnu/bits/stdint-uintn.h" 3 4
+ typedef __uint8_t uint8_t;
+ typedef __uint16_t uint16_t;
+ typedef __uint32_t uint32_t;
+ typedef __uint64_t uint64_t;
+ # 38 "/usr/include/stdint.h" 2 3 4
+ 
+ 
+ 
+ 
+ 
+ typedef signed char int_least8_t;
+ typedef short int int_least16_t;
+ typedef int int_least32_t;
+ 
+ typedef long int int_least64_t;
+ 
+ 
+ 
+ 
+ 
+ 
+ typedef unsigned char uint_least8_t;
+ typedef unsigned short int uint_least16_t;
+ typedef unsigned int uint_least32_t;
+ 
+ typedef unsigned long int uint_least64_t;
+ # 68 "/usr/include/stdint.h" 3 4
+ typedef signed char int_fast8_t;
+ 
+ typedef long int int_fast16_t;
+ typedef long int int_fast32_t;
+ typedef long int int_fast64_t;
+ # 81 "/usr/include/stdint.h" 3 4
+ typedef unsigned char uint_fast8_t;
+ 
+ typedef unsigned long int uint_fast16_t;
+ typedef unsigned long int uint_fast32_t;
+ typedef unsigned long int uint_fast64_t;
+ # 97 "/usr/include/stdint.h" 3 4
+ typedef long int intptr_t;
+ 
+ 
+ typedef unsigned long int uintptr_t;
+ # 111 "/usr/include/stdint.h" 3 4
+ typedef __intmax_t intmax_t;
+ typedef __uintmax_t uintmax_t;
+ # 10 "/usr/lib/gcc/x86_64-linux-gnu/7/include/stdint.h" 2 3 4
+ # 129 "./mpconfigport.h" 2
+ # 63 "../py/mpconfig.h" 2
+ # 651 "../py/mpconfig.h"
+ 
+ # 651 "../py/mpconfig.h"
+ typedef double mp_float_t;
+ # 28 "<stdin>" 2
+ 
+ 
+ 
+ 
+ 
+ QCFG(BYTES_IN_LEN, (1))
+ QCFG(BYTES_IN_HASH, (2))
+ 
+ Q()
+ Q(*)
+ Q(_)
+ Q(/)
+ 
+ Q(%#o)
+ Q(%#x)
+ 
+ 
+ 
+ 
+ Q({:#b})
+ Q( )
+ Q(\n)
+ Q(maximum recursion depth exceeded)
+ Q(<module>)
+ Q(<lambda>)
+ Q(<listcomp>)
+ Q(<dictcomp>)
+ Q(<setcomp>)
+ Q(<genexpr>)
+ Q(<string>)
+ Q(<stdin>)
+ Q(utf-8)
+ Q(mp_file)
+ 
+ 
+ 
+ 
+ Q(ArithmeticError)
+ 
+ Q(ArithmeticError)
+ 
+ Q(AssertionError)
+ 
+ Q(AssertionError)
+ 
+ Q(AssertionError)
+ 
+ Q(AttributeError)
+ 
+ Q(AttributeError)
+ 
+ Q(BaseException)
+ 
+ Q(BaseException)
+ 
+ Q(BaseException)
+ 
+ Q(EOFError)
+ 
+ Q(EOFError)
+ 
+ Q(Ellipsis)
+ 
+ Q(Ellipsis)
+ 
+ Q(Exception)
+ 
+ Q(Exception)
+ 
+ Q(GeneratorExit)
+ 
+ Q(GeneratorExit)
+ 
+ Q(ImportError)
+ 
+ Q(ImportError)
+ 
+ Q(IndentationError)
+ 
+ Q(IndentationError)
+ 
+ Q(IndexError)
+ 
+ Q(IndexError)
+ 
+ Q(KeyError)
+ 
+ Q(KeyError)
+ 
+ Q(KeyboardInterrupt)
+ 
+ Q(KeyboardInterrupt)
+ 
+ Q(LookupError)
+ 
+ Q(LookupError)
+ 
+ Q(MemoryError)
+ 
+ Q(MemoryError)
+ 
+ Q(NameError)
+ 
+ Q(NameError)
+ 
+ Q(None)
+ 
+ Q(NoneType)
+ 
+ Q(NotImplementedError)
+ 
+ Q(NotImplementedError)
+ 
+ Q(OSError)
+ 
+ Q(OSError)
+ 
+ Q(OverflowError)
+ 
+ Q(OverflowError)
+ 
+ Q(RuntimeError)
+ 
+ Q(RuntimeError)
+ 
+ Q(StopAsyncIteration)
+ 
+ Q(StopAsyncIteration)
+ 
+ Q(StopAsyncIteration)
+ 
+ Q(StopIteration)
+ 
+ Q(StopIteration)
+ 
+ Q(SyntaxError)
+ 
+ Q(SyntaxError)
+ 
+ Q(SystemExit)
+ 
+ Q(SystemExit)
+ 
+ Q(TypeError)
+ 
+ Q(TypeError)
+ 
+ Q(UnicodeError)
+ 
+ Q(UnicodeError)
+ 
+ Q(ValueError)
+ 
+ Q(ValueError)
+ 
+ Q(ViperTypeError)
+ 
+ Q(ViperTypeError)
+ 
+ Q(ZeroDivisionError)
+ 
+ Q(ZeroDivisionError)
+ 
+ Q(_0x0a_)
+ 
+ Q(__add__)
+ 
+ Q(__aenter__)
+ 
+ Q(__aenter__)
+ 
+ Q(__aexit__)
+ 
+ Q(__aexit__)
+ 
+ Q(__aiter__)
+ 
+ Q(__anext__)
+ 
+ Q(__bases__)
+ 
+ Q(__bool__)
+ 
+ Q(__build_class__)
+ 
+ Q(__call__)
+ 
+ Q(__class__)
+ 
+ Q(__class__)
+ 
+ Q(__class__)
+ 
+ Q(__class__)
+ 
+ Q(__class__)
+ 
+ Q(__class__)
+ 
+ Q(__class__)
+ 
+ Q(__contains__)
+ 
+ Q(__contains__)
+ 
+ Q(__del__)
+ 
+ Q(__delitem__)
+ 
+ Q(__delitem__)
+ 
+ Q(__dict__)
+ 
+ Q(__enter__)
+ 
+ Q(__enter__)
+ 
+ Q(__eq__)
+ 
+ Q(__eq__)
+ 
+ Q(__exit__)
+ 
+ Q(__exit__)
+ 
+ Q(__ge__)
+ 
+ Q(__getattr__)
+ 
+ Q(__getattr__)
+ 
+ Q(__getitem__)
+ 
+ Q(__getitem__)
+ 
+ Q(__getitem__)
+ 
+ Q(__getitem__)
+ 
+ Q(__gt__)
+ 
+ Q(__hash__)
+ 
+ Q(__iadd__)
+ 
+ Q(__import__)
+ 
+ Q(__init__)
+ 
+ Q(__init__)
+ 
+ Q(__init__)
+ 
+ Q(__int__)
+ 
+ Q(__isub__)
+ 
+ Q(__iter__)
+ 
+ Q(__le__)
+ 
+ Q(__len__)
+ 
+ Q(__lt__)
+ 
+ Q(__main__)
+ 
+ Q(__main__)
+ 
+ Q(__main__)
+ 
+ Q(__main__)
+ 
+ Q(__main__)
+ 
+ Q(__main__)
+ 
+ Q(__main__)
+ 
+ Q(__module__)
+ 
+ Q(__name__)
+ 
+ Q(__name__)
+ 
+ Q(__name__)
+ 
+ Q(__name__)
+ 
+ Q(__name__)
+ 
+ Q(__name__)
+ 
+ Q(__name__)
+ 
+ Q(__name__)
+ 
+ Q(__name__)
+ 
+ Q(__name__)
+ 
+ Q(__name__)
+ 
+ Q(__new__)
+ 
+ Q(__new__)
+ 
+ Q(__new__)
+ 
+ Q(__next__)
+ 
+ Q(__next__)
+ 
+ Q(__next__)
+ 
+ Q(__next__)
+ 
+ Q(__path__)
+ 
+ Q(__path__)
+ 
+ Q(__path__)
+ 
+ Q(__qualname__)
+ 
+ Q(__repl_print__)
+ 
+ Q(__repl_print__)
+ 
+ Q(__repr__)
+ 
+ Q(__repr__)
+ 
+ Q(__reversed__)
+ 
+ Q(__setitem__)
+ 
+ Q(__setitem__)
+ 
+ Q(__str__)
+ 
+ Q(__sub__)
+ 
+ Q(__traceback__)
+ 
+ Q(_brace_open__colon__hash_b_brace_close_)
+ 
+ Q(_lt_dictcomp_gt_)
+ 
+ Q(_lt_genexpr_gt_)
+ 
+ Q(_lt_lambda_gt_)
+ 
+ Q(_lt_listcomp_gt_)
+ 
+ Q(_lt_module_gt_)
+ 
+ Q(_lt_setcomp_gt_)
+ 
+ Q(_lt_string_gt_)
+ 
+ Q(_percent__hash_o)
+ 
+ Q(_percent__hash_x)
+ 
+ Q(_space_)
+ 
+ Q(_star_)
+ 
+ Q(_star_)
+ 
+ Q(_star_)
+ 
+ Q(abs)
+ 
+ Q(add)
+ 
+ Q(add)
+ 
+ Q(add)
+ 
+ Q(add)
+ 
+ Q(addi)
+ 
+ Q(align)
+ 
+ Q(all)
+ 
+ Q(and_)
+ 
+ Q(and_)
+ 
+ Q(any)
+ 
+ Q(append)
+ 
+ Q(append)
+ 
+ Q(args)
+ 
+ Q(asm_thumb)
+ 
+ Q(asm_xtensa)
+ 
+ Q(asr)
+ 
+ Q(b)
+ 
+ Q(ball)
+ 
+ Q(bany)
+ 
+ Q(bbc)
+ 
+ Q(bbs)
+ 
+ Q(beq)
+ 
+ Q(beqz)
+ 
+ Q(bge)
+ 
+ Q(bgeu)
+ 
+ Q(bin)
+ 
+ Q(bl)
+ 
+ Q(blt)
+ 
+ Q(bnall)
+ 
+ Q(bne)
+ 
+ Q(bnez)
+ 
+ Q(bnone)
+ 
+ Q(bool)
+ 
+ Q(bool)
+ 
+ Q(bool)
+ 
+ Q(bool)
+ 
+ Q(bool)
+ 
+ Q(bound_method)
+ 
+ Q(builtins)
+ 
+ Q(builtins)
+ 
+ Q(bx)
+ 
+ Q(bytearray)
+ 
+ Q(bytearray)
+ 
+ Q(bytecode)
+ 
+ Q(bytes)
+ 
+ Q(bytes)
+ 
+ Q(bytes)
+ 
+ Q(calcsize)
+ 
+ Q(callable)
+ 
+ Q(callx0)
+ 
+ Q(chr)
+ 
+ Q(classmethod)
+ 
+ Q(classmethod)
+ 
+ Q(clear)
+ 
+ Q(clear)
+ 
+ Q(clear)
+ 
+ Q(close)
+ 
+ Q(close)
+ 
+ Q(close)
+ 
+ Q(closure)
+ 
+ Q(closure)
+ 
+ Q(clz)
+ 
+ Q(cmp)
+ 
+ Q(complex)
+ 
+ Q(complex)
+ 
+ Q(const)
+ 
+ Q(const)
+ 
+ Q(copy)
+ 
+ Q(copy)
+ 
+ Q(copy)
+ 
+ Q(count)
+ 
+ Q(count)
+ 
+ Q(count)
+ 
+ Q(count)
+ 
+ Q(cpsid)
+ 
+ Q(cpsie)
+ 
+ Q(data)
+ 
+ Q(decode)
+ 
+ Q(decode)
+ 
+ Q(default)
+ 
+ Q(delattr)
+ 
+ Q(deleter)
+ 
+ Q(dict)
+ 
+ Q(dict)
+ 
+ Q(dict_view)
+ 
+ Q(difference)
+ 
+ Q(difference_update)
+ 
+ Q(dir)
+ 
+ Q(discard)
+ 
+ Q(divmod)
+ 
+ Q(doc)
+ 
+ Q(encode)
+ 
+ Q(end)
+ 
+ Q(endswith)
+ 
+ Q(endswith)
+ 
+ Q(enumerate)
+ 
+ Q(enumerate)
+ 
+ Q(eval)
+ 
+ Q(exec)
+ 
+ Q(extend)
+ 
+ Q(extend)
+ 
+ Q(filter)
+ 
+ Q(filter)
+ 
+ Q(find)
+ 
+ Q(find)
+ 
+ Q(float)
+ 
+ Q(float)
+ 
+ Q(format)
+ 
+ Q(format)
+ 
+ Q(from_bytes)
+ 
+ Q(fromkeys)
+ 
+ Q(function)
+ 
+ Q(function)
+ 
+ Q(function)
+ 
+ Q(function)
+ 
+ Q(function)
+ 
+ Q(function)
+ 
+ Q(function)
+ 
+ Q(function)
+ 
+ Q(function)
+ 
+ Q(function)
+ 
+ Q(function)
+ 
+ Q(generator)
+ 
+ Q(generator)
+ 
+ Q(generator)
+ 
+ Q(generator)
+ 
+ Q(get)
+ 
+ Q(getattr)
+ 
+ Q(getter)
+ 
+ Q(globals)
+ 
+ Q(hasattr)
+ 
+ Q(hash)
+ 
+ Q(heap_lock)
+ 
+ Q(heap_unlock)
+ 
+ Q(hex)
+ 
+ Q(id)
+ 
+ Q(imag)
+ 
+ Q(index)
+ 
+ Q(index)
+ 
+ Q(index)
+ 
+ Q(index)
+ 
+ Q(insert)
+ 
+ Q(int)
+ 
+ Q(int)
+ 
+ Q(int)
+ 
+ Q(int)
+ 
+ Q(int)
+ 
+ Q(intersection)
+ 
+ Q(intersection_update)
+ 
+ Q(isalpha)
+ 
+ Q(isalpha)
+ 
+ Q(isdigit)
+ 
+ Q(isdigit)
+ 
+ Q(isdisjoint)
+ 
+ Q(isinstance)
+ 
+ Q(islower)
+ 
+ Q(islower)
+ 
+ Q(isspace)
+ 
+ Q(isspace)
+ 
+ Q(issubclass)
+ 
+ Q(issubset)
+ 
+ Q(issuperset)
+ 
+ Q(isupper)
+ 
+ Q(isupper)
+ 
+ Q(items)
+ 
+ Q(iter)
+ 
+ Q(iterable)
+ 
+ Q(iterator)
+ 
+ Q(iterator)
+ 
+ Q(iterator)
+ 
+ Q(iterator)
+ 
+ Q(iterator)
+ 
+ Q(j)
+ 
+ Q(join)
+ 
+ Q(join)
+ 
+ Q(jx)
+ 
+ Q(key)
+ 
+ Q(key)
+ 
+ Q(keys)
+ 
+ Q(keys)
+ 
+ Q(l16si)
+ 
+ Q(l16ui)
+ 
+ Q(l32i)
+ 
+ Q(l8ui)
+ 
+ Q(label)
+ 
+ Q(ldr)
+ 
+ Q(ldrb)
+ 
+ Q(ldrex)
+ 
+ Q(ldrh)
+ 
+ Q(len)
+ 
+ Q(list)
+ 
+ Q(list)
+ 
+ Q(little)
+ 
+ Q(little)
+ 
+ Q(little)
+ 
+ Q(locals)
+ 
+ Q(lower)
+ 
+ Q(lower)
+ 
+ Q(lsl)
+ 
+ Q(lsr)
+ 
+ Q(lstrip)
+ 
+ Q(lstrip)
+ 
+ Q(map)
+ 
+ Q(map)
+ 
+ Q(max)
+ 
+ Q(maximum_space_recursion_space_depth_space_exceeded)
+ 
+ Q(micropython)
+ 
+ Q(micropython)
+ 
+ Q(micropython)
+ 
+ Q(min)
+ 
+ Q(module)
+ 
+ Q(mov)
+ 
+ Q(mov)
+ 
+ Q(mov)
+ 
+ Q(mov_n)
+ 
+ Q(movi)
+ 
+ Q(movt)
+ 
+ Q(movw)
+ 
+ Q(movwt)
+ 
+ Q(mp_file)
+ 
+ Q(mrs)
+ 
+ Q(mull)
+ 
+ Q(native)
+ 
+ Q(next)
+ 
+ Q(nop)
+ 
+ Q(object)
+ 
+ Q(object)
+ 
+ Q(object)
+ 
+ Q(object)
+ 
+ Q(object)
+ 
+ Q(oct)
+ 
+ Q(opt_level)
+ 
+ Q(or_)
+ 
+ Q(ord)
+ 
+ Q(pack)
+ 
+ Q(pack_into)
+ 
+ Q(pend_throw)
+ 
+ Q(pop)
+ 
+ Q(pop)
+ 
+ Q(pop)
+ 
+ Q(pop)
+ 
+ Q(popitem)
+ 
+ Q(pow)
+ 
+ Q(print)
+ 
+ Q(property)
+ 
+ Q(property)
+ 
+ Q(ptr)
+ 
+ Q(ptr)
+ 
+ Q(ptr16)
+ 
+ Q(ptr16)
+ 
+ Q(ptr32)
+ 
+ Q(ptr32)
+ 
+ Q(ptr8)
+ 
+ Q(ptr8)
+ 
+ Q(push)
+ 
+ Q(range)
+ 
+ Q(range)
+ 
+ Q(range)
+ 
+ Q(rbit)
+ 
+ Q(readinto)
+ 
+ Q(real)
+ 
+ Q(remove)
+ 
+ Q(remove)
+ 
+ Q(replace)
+ 
+ Q(replace)
+ 
+ Q(repr)
+ 
+ Q(ret_n)
+ 
+ Q(reverse)
+ 
+ Q(reverse)
+ 
+ Q(reversed)
+ 
+ Q(reversed)
+ 
+ Q(rfind)
+ 
+ Q(rfind)
+ 
+ Q(rindex)
+ 
+ Q(rindex)
+ 
+ Q(round)
+ 
+ Q(rsplit)
+ 
+ Q(rsplit)
+ 
+ Q(rstrip)
+ 
+ Q(rstrip)
+ 
+ Q(s16i)
+ 
+ Q(s32i)
+ 
+ Q(s8i)
+ 
+ Q(sdiv)
+ 
+ Q(seek)
+ 
+ Q(send)
+ 
+ Q(send)
+ 
+ Q(sep)
+ 
+ Q(set)
+ 
+ Q(set)
+ 
+ Q(setattr)
+ 
+ Q(setdefault)
+ 
+ Q(setter)
+ 
+ Q(slice)
+ 
+ Q(slice)
+ 
+ Q(sort)
+ 
+ Q(sorted)
+ 
+ Q(split)
+ 
+ Q(split)
+ 
+ Q(start)
+ 
+ Q(start)
+ 
+ Q(startswith)
+ 
+ Q(startswith)
+ 
+ Q(staticmethod)
+ 
+ Q(staticmethod)
+ 
+ Q(step)
+ 
+ Q(stop)
+ 
+ Q(str)
+ 
+ Q(str)
+ 
+ Q(str)
+ 
+ Q(str)
+ 
+ Q(str)
+ 
+ Q(strb)
+ 
+ Q(strex)
+ 
+ Q(strh)
+ 
+ Q(strip)
+ 
+ Q(strip)
+ 
+ Q(sub)
+ 
+ Q(sub)
+ 
+ Q(sub)
+ 
+ Q(sum)
+ 
+ Q(super)
+ 
+ Q(super)
+ 
+ Q(super)
+ 
+ Q(symmetric_difference)
+ 
+ Q(symmetric_difference_update)
+ 
+ Q(tell)
+ 
+ Q(throw)
+ 
+ Q(throw)
+ 
+ Q(to_bytes)
+ 
+ Q(tuple)
+ 
+ Q(tuple)
+ 
+ Q(type)
+ 
+ Q(type)
+ 
+ Q(udiv)
+ 
+ Q(uint)
+ 
+ Q(uint)
+ 
+ Q(uint)
+ 
+ Q(union)
+ 
+ Q(unpack)
+ 
+ Q(unpack_from)
+ 
+ Q(update)
+ 
+ Q(update)
+ 
+ Q(upper)
+ 
+ Q(upper)
+ 
+ Q(ustruct)
+ 
+ Q(ustruct)
+ 
+ Q(utf_hyphen_8)
+ 
+ Q(utf_hyphen_8)
+ 
+ Q(value)
+ 
+ Q(values)
+ 
+ Q(vcmp)
+ 
+ Q(vcvt_f32_s32)
+ 
+ Q(vcvt_s32_f32)
+ 
+ Q(viper)
+ 
+ Q(vldr)
+ 
+ Q(vmov)
+ 
+ Q(vmrs)
+ 
+ Q(vneg)
+ 
+ Q(vsqrt)
+ 
+ Q(vstr)
+ 
+ Q(wfi)
+ 
+ Q(xor)
+ 
+ Q(zip)
+ 
+ Q(zip)
+ 
+ Q(zip)
diff -crNb MicorpythonOriginal1.12/micropython/mpy-cross/build/genhdr/qstr.i.last micropython1.12_withUlab/micropython/mpy-cross/build/genhdr/qstr.i.last
*** MicorpythonOriginal1.12/micropython/mpy-cross/build/genhdr/qstr.i.last	1970-01-01 02:00:00.000000000 +0200
--- micropython1.12_withUlab/micropython/mpy-cross/build/genhdr/qstr.i.last	2020-06-19 19:54:01.849493463 +0200
***************
*** 0 ****
--- 1,3487 ----
+ # 1 "../py/objmodule.c"
+ # 1 "<built-in>"
+ # 1 "<command-line>"
+ # 1 "/usr/include/stdc-predef.h" 1 3 4
+ # 1 "<command-line>" 2
+ # 1 "../py/objmodule.c"
+ # 28 "../py/objmodule.c"
+ # 1 "/usr/include/stdlib.h" 1 3 4
+ # 25 "/usr/include/stdlib.h" 3 4
+ # 1 "/usr/include/x86_64-linux-gnu/bits/libc-header-start.h" 1 3 4
+ # 33 "/usr/include/x86_64-linux-gnu/bits/libc-header-start.h" 3 4
+ # 1 "/usr/include/features.h" 1 3 4
+ # 424 "/usr/include/features.h" 3 4
+ # 1 "/usr/include/x86_64-linux-gnu/sys/cdefs.h" 1 3 4
+ # 427 "/usr/include/x86_64-linux-gnu/sys/cdefs.h" 3 4
+ # 1 "/usr/include/x86_64-linux-gnu/bits/wordsize.h" 1 3 4
+ # 428 "/usr/include/x86_64-linux-gnu/sys/cdefs.h" 2 3 4
+ # 1 "/usr/include/x86_64-linux-gnu/bits/long-double.h" 1 3 4
+ # 429 "/usr/include/x86_64-linux-gnu/sys/cdefs.h" 2 3 4
+ # 425 "/usr/include/features.h" 2 3 4
+ # 448 "/usr/include/features.h" 3 4
+ # 1 "/usr/include/x86_64-linux-gnu/gnu/stubs.h" 1 3 4
+ # 10 "/usr/include/x86_64-linux-gnu/gnu/stubs.h" 3 4
+ # 1 "/usr/include/x86_64-linux-gnu/gnu/stubs-64.h" 1 3 4
+ # 11 "/usr/include/x86_64-linux-gnu/gnu/stubs.h" 2 3 4
+ # 449 "/usr/include/features.h" 2 3 4
+ # 34 "/usr/include/x86_64-linux-gnu/bits/libc-header-start.h" 2 3 4
+ # 26 "/usr/include/stdlib.h" 2 3 4
+ 
+ 
+ 
+ 
+ 
+ # 1 "/usr/lib/gcc/x86_64-linux-gnu/7/include/stddef.h" 1 3 4
+ # 216 "/usr/lib/gcc/x86_64-linux-gnu/7/include/stddef.h" 3 4
+ 
+ # 216 "/usr/lib/gcc/x86_64-linux-gnu/7/include/stddef.h" 3 4
+ typedef long unsigned int size_t;
+ # 328 "/usr/lib/gcc/x86_64-linux-gnu/7/include/stddef.h" 3 4
+ typedef int wchar_t;
+ # 32 "/usr/include/stdlib.h" 2 3 4
+ 
+ 
+ 
+ 
+ 
+ 
+ 
+ # 1 "/usr/include/x86_64-linux-gnu/bits/waitflags.h" 1 3 4
+ # 52 "/usr/include/x86_64-linux-gnu/bits/waitflags.h" 3 4
+ typedef enum
+ {
+   P_ALL,
+   P_PID,
+   P_PGID
+ } idtype_t;
+ # 40 "/usr/include/stdlib.h" 2 3 4
+ # 1 "/usr/include/x86_64-linux-gnu/bits/waitstatus.h" 1 3 4
+ # 41 "/usr/include/stdlib.h" 2 3 4
+ # 55 "/usr/include/stdlib.h" 3 4
+ # 1 "/usr/include/x86_64-linux-gnu/bits/floatn.h" 1 3 4
+ # 120 "/usr/include/x86_64-linux-gnu/bits/floatn.h" 3 4
+ # 1 "/usr/include/x86_64-linux-gnu/bits/floatn-common.h" 1 3 4
+ # 24 "/usr/include/x86_64-linux-gnu/bits/floatn-common.h" 3 4
+ # 1 "/usr/include/x86_64-linux-gnu/bits/long-double.h" 1 3 4
+ # 25 "/usr/include/x86_64-linux-gnu/bits/floatn-common.h" 2 3 4
+ # 121 "/usr/include/x86_64-linux-gnu/bits/floatn.h" 2 3 4
+ # 56 "/usr/include/stdlib.h" 2 3 4
+ 
+ 
+ typedef struct
+   {
+     int quot;
+     int rem;
+   } div_t;
+ 
+ 
+ 
+ typedef struct
+   {
+     long int quot;
+     long int rem;
+   } ldiv_t;
+ 
+ 
+ 
+ 
+ 
+ __extension__ typedef struct
+   {
+     long long int quot;
+     long long int rem;
+   } lldiv_t;
+ # 97 "/usr/include/stdlib.h" 3 4
+ extern size_t __ctype_get_mb_cur_max (void) __attribute__ ((__nothrow__ , __leaf__)) __attribute__ ((__warn_unused_result__));
+ 
+ 
+ 
+ extern double atof (const char *__nptr)
+      __attribute__ ((__nothrow__ , __leaf__)) __attribute__ ((__pure__)) __attribute__ ((__nonnull__ (1))) __attribute__ ((__warn_unused_result__));
+ 
+ extern int atoi (const char *__nptr)
+      __attribute__ ((__nothrow__ , __leaf__)) __attribute__ ((__pure__)) __attribute__ ((__nonnull__ (1))) __attribute__ ((__warn_unused_result__));
+ 
+ extern long int atol (const char *__nptr)
+      __attribute__ ((__nothrow__ , __leaf__)) __attribute__ ((__pure__)) __attribute__ ((__nonnull__ (1))) __attribute__ ((__warn_unused_result__));
+ 
+ 
+ 
+ __extension__ extern long long int atoll (const char *__nptr)
+      __attribute__ ((__nothrow__ , __leaf__)) __attribute__ ((__pure__)) __attribute__ ((__nonnull__ (1))) __attribute__ ((__warn_unused_result__));
+ 
+ 
+ 
+ extern double strtod (const char *__restrict __nptr,
+         char **__restrict __endptr)
+      __attribute__ ((__nothrow__ , __leaf__)) __attribute__ ((__nonnull__ (1)));
+ 
+ 
+ 
+ extern float strtof (const char *__restrict __nptr,
+        char **__restrict __endptr) __attribute__ ((__nothrow__ , __leaf__)) __attribute__ ((__nonnull__ (1)));
+ 
+ extern long double strtold (const char *__restrict __nptr,
+        char **__restrict __endptr)
+      __attribute__ ((__nothrow__ , __leaf__)) __attribute__ ((__nonnull__ (1)));
+ # 176 "/usr/include/stdlib.h" 3 4
+ extern long int strtol (const char *__restrict __nptr,
+    char **__restrict __endptr, int __base)
+      __attribute__ ((__nothrow__ , __leaf__)) __attribute__ ((__nonnull__ (1)));
+ 
+ extern unsigned long int strtoul (const char *__restrict __nptr,
+       char **__restrict __endptr, int __base)
+      __attribute__ ((__nothrow__ , __leaf__)) __attribute__ ((__nonnull__ (1)));
+ 
+ 
+ 
+ __extension__
+ extern long long int strtoq (const char *__restrict __nptr,
+         char **__restrict __endptr, int __base)
+      __attribute__ ((__nothrow__ , __leaf__)) __attribute__ ((__nonnull__ (1)));
+ 
+ __extension__
+ extern unsigned long long int strtouq (const char *__restrict __nptr,
+            char **__restrict __endptr, int __base)
+      __attribute__ ((__nothrow__ , __leaf__)) __attribute__ ((__nonnull__ (1)));
+ 
+ 
+ 
+ 
+ __extension__
+ extern long long int strtoll (const char *__restrict __nptr,
+          char **__restrict __endptr, int __base)
+      __attribute__ ((__nothrow__ , __leaf__)) __attribute__ ((__nonnull__ (1)));
+ 
+ __extension__
+ extern unsigned long long int strtoull (const char *__restrict __nptr,
+      char **__restrict __endptr, int __base)
+      __attribute__ ((__nothrow__ , __leaf__)) __attribute__ ((__nonnull__ (1)));
+ # 385 "/usr/include/stdlib.h" 3 4
+ extern char *l64a (long int __n) __attribute__ ((__nothrow__ , __leaf__)) __attribute__ ((__warn_unused_result__));
+ 
+ 
+ extern long int a64l (const char *__s)
+      __attribute__ ((__nothrow__ , __leaf__)) __attribute__ ((__pure__)) __attribute__ ((__nonnull__ (1))) __attribute__ ((__warn_unused_result__));
+ 
+ 
+ 
+ 
+ # 1 "/usr/include/x86_64-linux-gnu/sys/types.h" 1 3 4
+ # 27 "/usr/include/x86_64-linux-gnu/sys/types.h" 3 4
+ 
+ 
+ # 1 "/usr/include/x86_64-linux-gnu/bits/types.h" 1 3 4
+ # 27 "/usr/include/x86_64-linux-gnu/bits/types.h" 3 4
+ # 1 "/usr/include/x86_64-linux-gnu/bits/wordsize.h" 1 3 4
+ # 28 "/usr/include/x86_64-linux-gnu/bits/types.h" 2 3 4
+ 
+ 
+ typedef unsigned char __u_char;
+ typedef unsigned short int __u_short;
+ typedef unsigned int __u_int;
+ typedef unsigned long int __u_long;
+ 
+ 
+ typedef signed char __int8_t;
+ typedef unsigned char __uint8_t;
+ typedef signed short int __int16_t;
+ typedef unsigned short int __uint16_t;
+ typedef signed int __int32_t;
+ typedef unsigned int __uint32_t;
+ 
+ typedef signed long int __int64_t;
+ typedef unsigned long int __uint64_t;
+ 
+ 
+ 
+ 
+ 
+ 
+ 
+ typedef long int __quad_t;
+ typedef unsigned long int __u_quad_t;
+ 
+ 
+ 
+ 
+ 
+ 
+ 
+ typedef long int __intmax_t;
+ typedef unsigned long int __uintmax_t;
+ # 130 "/usr/include/x86_64-linux-gnu/bits/types.h" 3 4
+ # 1 "/usr/include/x86_64-linux-gnu/bits/typesizes.h" 1 3 4
+ # 131 "/usr/include/x86_64-linux-gnu/bits/types.h" 2 3 4
+ 
+ 
+ typedef unsigned long int __dev_t;
+ typedef unsigned int __uid_t;
+ typedef unsigned int __gid_t;
+ typedef unsigned long int __ino_t;
+ typedef unsigned long int __ino64_t;
+ typedef unsigned int __mode_t;
+ typedef unsigned long int __nlink_t;
+ typedef long int __off_t;
+ typedef long int __off64_t;
+ typedef int __pid_t;
+ typedef struct { int __val[2]; } __fsid_t;
+ typedef long int __clock_t;
+ typedef unsigned long int __rlim_t;
+ typedef unsigned long int __rlim64_t;
+ typedef unsigned int __id_t;
+ typedef long int __time_t;
+ typedef unsigned int __useconds_t;
+ typedef long int __suseconds_t;
+ 
+ typedef int __daddr_t;
+ typedef int __key_t;
+ 
+ 
+ typedef int __clockid_t;
+ 
+ 
+ typedef void * __timer_t;
+ 
+ 
+ typedef long int __blksize_t;
+ 
+ 
+ 
+ 
+ typedef long int __blkcnt_t;
+ typedef long int __blkcnt64_t;
+ 
+ 
+ typedef unsigned long int __fsblkcnt_t;
+ typedef unsigned long int __fsblkcnt64_t;
+ 
+ 
+ typedef unsigned long int __fsfilcnt_t;
+ typedef unsigned long int __fsfilcnt64_t;
+ 
+ 
+ typedef long int __fsword_t;
+ 
+ typedef long int __ssize_t;
+ 
+ 
+ typedef long int __syscall_slong_t;
+ 
+ typedef unsigned long int __syscall_ulong_t;
+ 
+ 
+ 
+ typedef __off64_t __loff_t;
+ typedef char *__caddr_t;
+ 
+ 
+ typedef long int __intptr_t;
+ 
+ 
+ typedef unsigned int __socklen_t;
+ 
+ 
+ 
+ 
+ typedef int __sig_atomic_t;
+ # 30 "/usr/include/x86_64-linux-gnu/sys/types.h" 2 3 4
+ 
+ 
+ 
+ typedef __u_char u_char;
+ typedef __u_short u_short;
+ typedef __u_int u_int;
+ typedef __u_long u_long;
+ typedef __quad_t quad_t;
+ typedef __u_quad_t u_quad_t;
+ typedef __fsid_t fsid_t;
+ 
+ 
+ 
+ 
+ typedef __loff_t loff_t;
+ 
+ 
+ 
+ typedef __ino_t ino_t;
+ # 60 "/usr/include/x86_64-linux-gnu/sys/types.h" 3 4
+ typedef __dev_t dev_t;
+ 
+ 
+ 
+ 
+ typedef __gid_t gid_t;
+ 
+ 
+ 
+ 
+ typedef __mode_t mode_t;
+ 
+ 
+ 
+ 
+ typedef __nlink_t nlink_t;
+ 
+ 
+ 
+ 
+ typedef __uid_t uid_t;
+ 
+ 
+ 
+ 
+ 
+ typedef __off_t off_t;
+ # 98 "/usr/include/x86_64-linux-gnu/sys/types.h" 3 4
+ typedef __pid_t pid_t;
+ 
+ 
+ 
+ 
+ 
+ typedef __id_t id_t;
+ 
+ 
+ 
+ 
+ typedef __ssize_t ssize_t;
+ 
+ 
+ 
+ 
+ 
+ typedef __daddr_t daddr_t;
+ typedef __caddr_t caddr_t;
+ 
+ 
+ 
+ 
+ 
+ typedef __key_t key_t;
+ 
+ 
+ 
+ 
+ # 1 "/usr/include/x86_64-linux-gnu/bits/types/clock_t.h" 1 3 4
+ 
+ 
+ 
+ 
+ 
+ 
+ typedef __clock_t clock_t;
+ # 128 "/usr/include/x86_64-linux-gnu/sys/types.h" 2 3 4
+ 
+ # 1 "/usr/include/x86_64-linux-gnu/bits/types/clockid_t.h" 1 3 4
+ 
+ 
+ 
+ 
+ 
+ 
+ typedef __clockid_t clockid_t;
+ # 130 "/usr/include/x86_64-linux-gnu/sys/types.h" 2 3 4
+ # 1 "/usr/include/x86_64-linux-gnu/bits/types/time_t.h" 1 3 4
+ 
+ 
+ 
+ 
+ 
+ 
+ typedef __time_t time_t;
+ # 131 "/usr/include/x86_64-linux-gnu/sys/types.h" 2 3 4
+ # 1 "/usr/include/x86_64-linux-gnu/bits/types/timer_t.h" 1 3 4
+ 
+ 
+ 
+ 
+ 
+ 
+ typedef __timer_t timer_t;
+ # 132 "/usr/include/x86_64-linux-gnu/sys/types.h" 2 3 4
+ # 145 "/usr/include/x86_64-linux-gnu/sys/types.h" 3 4
+ # 1 "/usr/lib/gcc/x86_64-linux-gnu/7/include/stddef.h" 1 3 4
+ # 146 "/usr/include/x86_64-linux-gnu/sys/types.h" 2 3 4
+ 
+ 
+ 
+ typedef unsigned long int ulong;
+ typedef unsigned short int ushort;
+ typedef unsigned int uint;
+ 
+ 
+ 
+ 
+ # 1 "/usr/include/x86_64-linux-gnu/bits/stdint-intn.h" 1 3 4
+ # 24 "/usr/include/x86_64-linux-gnu/bits/stdint-intn.h" 3 4
+ typedef __int8_t int8_t;
+ typedef __int16_t int16_t;
+ typedef __int32_t int32_t;
+ typedef __int64_t int64_t;
+ # 157 "/usr/include/x86_64-linux-gnu/sys/types.h" 2 3 4
+ # 178 "/usr/include/x86_64-linux-gnu/sys/types.h" 3 4
+ typedef unsigned int u_int8_t __attribute__ ((__mode__ (__QI__)));
+ typedef unsigned int u_int16_t __attribute__ ((__mode__ (__HI__)));
+ typedef unsigned int u_int32_t __attribute__ ((__mode__ (__SI__)));
+ typedef unsigned int u_int64_t __attribute__ ((__mode__ (__DI__)));
+ 
+ typedef int register_t __attribute__ ((__mode__ (__word__)));
+ # 194 "/usr/include/x86_64-linux-gnu/sys/types.h" 3 4
+ # 1 "/usr/include/endian.h" 1 3 4
+ # 36 "/usr/include/endian.h" 3 4
+ # 1 "/usr/include/x86_64-linux-gnu/bits/endian.h" 1 3 4
+ # 37 "/usr/include/endian.h" 2 3 4
+ # 60 "/usr/include/endian.h" 3 4
+ # 1 "/usr/include/x86_64-linux-gnu/bits/byteswap.h" 1 3 4
+ # 28 "/usr/include/x86_64-linux-gnu/bits/byteswap.h" 3 4
+ # 1 "/usr/include/x86_64-linux-gnu/bits/wordsize.h" 1 3 4
+ # 29 "/usr/include/x86_64-linux-gnu/bits/byteswap.h" 2 3 4
+ 
+ 
+ 
+ 
+ 
+ 
+ # 1 "/usr/include/x86_64-linux-gnu/bits/byteswap-16.h" 1 3 4
+ # 36 "/usr/include/x86_64-linux-gnu/bits/byteswap.h" 2 3 4
+ # 44 "/usr/include/x86_64-linux-gnu/bits/byteswap.h" 3 4
+ static __inline unsigned int
+ __bswap_32 (unsigned int __bsx)
+ {
+   return __builtin_bswap32 (__bsx);
+ }
+ # 108 "/usr/include/x86_64-linux-gnu/bits/byteswap.h" 3 4
+ static __inline __uint64_t
+ __bswap_64 (__uint64_t __bsx)
+ {
+   return __builtin_bswap64 (__bsx);
+ }
+ # 61 "/usr/include/endian.h" 2 3 4
+ # 1 "/usr/include/x86_64-linux-gnu/bits/uintn-identity.h" 1 3 4
+ # 32 "/usr/include/x86_64-linux-gnu/bits/uintn-identity.h" 3 4
+ static __inline __uint16_t
+ __uint16_identity (__uint16_t __x)
+ {
+   return __x;
+ }
+ 
+ static __inline __uint32_t
+ __uint32_identity (__uint32_t __x)
+ {
+   return __x;
+ }
+ 
+ static __inline __uint64_t
+ __uint64_identity (__uint64_t __x)
+ {
+   return __x;
+ }
+ # 62 "/usr/include/endian.h" 2 3 4
+ # 195 "/usr/include/x86_64-linux-gnu/sys/types.h" 2 3 4
+ 
+ 
+ # 1 "/usr/include/x86_64-linux-gnu/sys/select.h" 1 3 4
+ # 30 "/usr/include/x86_64-linux-gnu/sys/select.h" 3 4
+ # 1 "/usr/include/x86_64-linux-gnu/bits/select.h" 1 3 4
+ # 22 "/usr/include/x86_64-linux-gnu/bits/select.h" 3 4
+ # 1 "/usr/include/x86_64-linux-gnu/bits/wordsize.h" 1 3 4
+ # 23 "/usr/include/x86_64-linux-gnu/bits/select.h" 2 3 4
+ # 31 "/usr/include/x86_64-linux-gnu/sys/select.h" 2 3 4
+ 
+ 
+ # 1 "/usr/include/x86_64-linux-gnu/bits/types/sigset_t.h" 1 3 4
+ 
+ 
+ 
+ # 1 "/usr/include/x86_64-linux-gnu/bits/types/__sigset_t.h" 1 3 4
+ 
+ 
+ 
+ 
+ typedef struct
+ {
+   unsigned long int __val[(1024 / (8 * sizeof (unsigned long int)))];
+ } __sigset_t;
+ # 5 "/usr/include/x86_64-linux-gnu/bits/types/sigset_t.h" 2 3 4
+ 
+ 
+ typedef __sigset_t sigset_t;
+ # 34 "/usr/include/x86_64-linux-gnu/sys/select.h" 2 3 4
+ 
+ 
+ 
+ # 1 "/usr/include/x86_64-linux-gnu/bits/types/struct_timeval.h" 1 3 4
+ 
+ 
+ 
+ 
+ 
+ 
+ 
+ struct timeval
+ {
+   __time_t tv_sec;
+   __suseconds_t tv_usec;
+ };
+ # 38 "/usr/include/x86_64-linux-gnu/sys/select.h" 2 3 4
+ 
+ # 1 "/usr/include/x86_64-linux-gnu/bits/types/struct_timespec.h" 1 3 4
+ 
+ 
+ 
+ 
+ 
+ 
+ 
+ struct timespec
+ {
+   __time_t tv_sec;
+   __syscall_slong_t tv_nsec;
+ };
+ # 40 "/usr/include/x86_64-linux-gnu/sys/select.h" 2 3 4
+ 
+ 
+ 
+ typedef __suseconds_t suseconds_t;
+ 
+ 
+ 
+ 
+ 
+ typedef long int __fd_mask;
+ # 59 "/usr/include/x86_64-linux-gnu/sys/select.h" 3 4
+ typedef struct
+   {
+ 
+ 
+ 
+ 
+ 
+ 
+     __fd_mask __fds_bits[1024 / (8 * (int) sizeof (__fd_mask))];
+ 
+ 
+   } fd_set;
+ 
+ 
+ 
+ 
+ 
+ 
+ typedef __fd_mask fd_mask;
+ # 91 "/usr/include/x86_64-linux-gnu/sys/select.h" 3 4
+ 
+ # 101 "/usr/include/x86_64-linux-gnu/sys/select.h" 3 4
+ extern int select (int __nfds, fd_set *__restrict __readfds,
+      fd_set *__restrict __writefds,
+      fd_set *__restrict __exceptfds,
+      struct timeval *__restrict __timeout);
+ # 113 "/usr/include/x86_64-linux-gnu/sys/select.h" 3 4
+ extern int pselect (int __nfds, fd_set *__restrict __readfds,
+       fd_set *__restrict __writefds,
+       fd_set *__restrict __exceptfds,
+       const struct timespec *__restrict __timeout,
+       const __sigset_t *__restrict __sigmask);
+ 
+ 
+ 
+ 
+ 
+ # 1 "/usr/include/x86_64-linux-gnu/bits/select2.h" 1 3 4
+ # 24 "/usr/include/x86_64-linux-gnu/bits/select2.h" 3 4
+ extern long int __fdelt_chk (long int __d);
+ extern long int __fdelt_warn (long int __d)
+   __attribute__((__warning__ ("bit outside of fd_set selected")));
+ # 124 "/usr/include/x86_64-linux-gnu/sys/select.h" 2 3 4
+ 
+ 
+ 
+ # 198 "/usr/include/x86_64-linux-gnu/sys/types.h" 2 3 4
+ 
+ 
+ 
+ 
+ 
+ 
+ 
+ # 1 "/usr/include/x86_64-linux-gnu/sys/sysmacros.h" 1 3 4
+ # 41 "/usr/include/x86_64-linux-gnu/sys/sysmacros.h" 3 4
+ # 1 "/usr/include/x86_64-linux-gnu/bits/sysmacros.h" 1 3 4
+ # 42 "/usr/include/x86_64-linux-gnu/sys/sysmacros.h" 2 3 4
+ # 71 "/usr/include/x86_64-linux-gnu/sys/sysmacros.h" 3 4
+ 
+ 
+ extern unsigned int gnu_dev_major (__dev_t __dev) __attribute__ ((__nothrow__ , __leaf__)) __attribute__ ((__const__));
+ extern unsigned int gnu_dev_minor (__dev_t __dev) __attribute__ ((__nothrow__ , __leaf__)) __attribute__ ((__const__));
+ extern __dev_t gnu_dev_makedev (unsigned int __major, unsigned int __minor) __attribute__ ((__nothrow__ , __leaf__)) __attribute__ ((__const__));
+ # 85 "/usr/include/x86_64-linux-gnu/sys/sysmacros.h" 3 4
+ 
+ # 206 "/usr/include/x86_64-linux-gnu/sys/types.h" 2 3 4
+ 
+ 
+ 
+ 
+ 
+ 
+ typedef __blksize_t blksize_t;
+ 
+ 
+ 
+ 
+ 
+ 
+ typedef __blkcnt_t blkcnt_t;
+ 
+ 
+ 
+ typedef __fsblkcnt_t fsblkcnt_t;
+ 
+ 
+ 
+ typedef __fsfilcnt_t fsfilcnt_t;
+ # 254 "/usr/include/x86_64-linux-gnu/sys/types.h" 3 4
+ # 1 "/usr/include/x86_64-linux-gnu/bits/pthreadtypes.h" 1 3 4
+ # 23 "/usr/include/x86_64-linux-gnu/bits/pthreadtypes.h" 3 4
+ # 1 "/usr/include/x86_64-linux-gnu/bits/thread-shared-types.h" 1 3 4
+ # 77 "/usr/include/x86_64-linux-gnu/bits/thread-shared-types.h" 3 4
+ # 1 "/usr/include/x86_64-linux-gnu/bits/pthreadtypes-arch.h" 1 3 4
+ # 21 "/usr/include/x86_64-linux-gnu/bits/pthreadtypes-arch.h" 3 4
+ # 1 "/usr/include/x86_64-linux-gnu/bits/wordsize.h" 1 3 4
+ # 22 "/usr/include/x86_64-linux-gnu/bits/pthreadtypes-arch.h" 2 3 4
+ # 65 "/usr/include/x86_64-linux-gnu/bits/pthreadtypes-arch.h" 3 4
+ struct __pthread_rwlock_arch_t
+ {
+   unsigned int __readers;
+   unsigned int __writers;
+   unsigned int __wrphase_futex;
+   unsigned int __writers_futex;
+   unsigned int __pad3;
+   unsigned int __pad4;
+ 
+   int __cur_writer;
+   int __shared;
+   signed char __rwelision;
+ 
+ 
+ 
+ 
+   unsigned char __pad1[7];
+ 
+ 
+   unsigned long int __pad2;
+ 
+ 
+   unsigned int __flags;
+ # 99 "/usr/include/x86_64-linux-gnu/bits/pthreadtypes-arch.h" 3 4
+ };
+ # 78 "/usr/include/x86_64-linux-gnu/bits/thread-shared-types.h" 2 3 4
+ 
+ 
+ 
+ 
+ typedef struct __pthread_internal_list
+ {
+   struct __pthread_internal_list *__prev;
+   struct __pthread_internal_list *__next;
+ } __pthread_list_t;
+ # 118 "/usr/include/x86_64-linux-gnu/bits/thread-shared-types.h" 3 4
+ struct __pthread_mutex_s
+ {
+   int __lock ;
+   unsigned int __count;
+   int __owner;
+ 
+   unsigned int __nusers;
+ 
+ 
+ 
+   int __kind;
+  
+ 
+ 
+ 
+ 
+   short __spins; short __elision;
+   __pthread_list_t __list;
+ # 145 "/usr/include/x86_64-linux-gnu/bits/thread-shared-types.h" 3 4
+  
+ };
+ 
+ 
+ 
+ 
+ struct __pthread_cond_s
+ {
+   __extension__ union
+   {
+     __extension__ unsigned long long int __wseq;
+     struct
+     {
+       unsigned int __low;
+       unsigned int __high;
+     } __wseq32;
+   };
+   __extension__ union
+   {
+     __extension__ unsigned long long int __g1_start;
+     struct
+     {
+       unsigned int __low;
+       unsigned int __high;
+     } __g1_start32;
+   };
+   unsigned int __g_refs[2] ;
+   unsigned int __g_size[2];
+   unsigned int __g1_orig_size;
+   unsigned int __wrefs;
+   unsigned int __g_signals[2];
+ };
+ # 24 "/usr/include/x86_64-linux-gnu/bits/pthreadtypes.h" 2 3 4
+ 
+ 
+ 
+ typedef unsigned long int pthread_t;
+ 
+ 
+ 
+ 
+ typedef union
+ {
+   char __size[4];
+   int __align;
+ } pthread_mutexattr_t;
+ 
+ 
+ 
+ 
+ typedef union
+ {
+   char __size[4];
+   int __align;
+ } pthread_condattr_t;
+ 
+ 
+ 
+ typedef unsigned int pthread_key_t;
+ 
+ 
+ 
+ typedef int pthread_once_t;
+ 
+ 
+ union pthread_attr_t
+ {
+   char __size[56];
+   long int __align;
+ };
+ 
+ typedef union pthread_attr_t pthread_attr_t;
+ 
+ 
+ 
+ 
+ typedef union
+ {
+   struct __pthread_mutex_s __data;
+   char __size[40];
+   long int __align;
+ } pthread_mutex_t;
+ 
+ 
+ typedef union
+ {
+   struct __pthread_cond_s __data;
+   char __size[48];
+   __extension__ long long int __align;
+ } pthread_cond_t;
+ 
+ 
+ 
+ 
+ 
+ typedef union
+ {
+   struct __pthread_rwlock_arch_t __data;
+   char __size[56];
+   long int __align;
+ } pthread_rwlock_t;
+ 
+ typedef union
+ {
+   char __size[8];
+   long int __align;
+ } pthread_rwlockattr_t;
+ 
+ 
+ 
+ 
+ 
+ typedef volatile int pthread_spinlock_t;
+ 
+ 
+ 
+ 
+ typedef union
+ {
+   char __size[32];
+   long int __align;
+ } pthread_barrier_t;
+ 
+ typedef union
+ {
+   char __size[4];
+   int __align;
+ } pthread_barrierattr_t;
+ # 255 "/usr/include/x86_64-linux-gnu/sys/types.h" 2 3 4
+ 
+ 
+ 
+ # 395 "/usr/include/stdlib.h" 2 3 4
+ 
+ 
+ 
+ 
+ 
+ 
+ extern long int random (void) __attribute__ ((__nothrow__ , __leaf__));
+ 
+ 
+ extern void srandom (unsigned int __seed) __attribute__ ((__nothrow__ , __leaf__));
+ 
+ 
+ 
+ 
+ 
+ extern char *initstate (unsigned int __seed, char *__statebuf,
+    size_t __statelen) __attribute__ ((__nothrow__ , __leaf__)) __attribute__ ((__nonnull__ (2)));
+ 
+ 
+ 
+ extern char *setstate (char *__statebuf) __attribute__ ((__nothrow__ , __leaf__)) __attribute__ ((__nonnull__ (1)));
+ 
+ 
+ 
+ 
+ 
+ 
+ 
+ struct random_data
+   {
+     int32_t *fptr;
+     int32_t *rptr;
+     int32_t *state;
+     int rand_type;
+     int rand_deg;
+     int rand_sep;
+     int32_t *end_ptr;
+   };
+ 
+ extern int random_r (struct random_data *__restrict __buf,
+        int32_t *__restrict __result) __attribute__ ((__nothrow__ , __leaf__)) __attribute__ ((__nonnull__ (1, 2)));
+ 
+ extern int srandom_r (unsigned int __seed, struct random_data *__buf)
+      __attribute__ ((__nothrow__ , __leaf__)) __attribute__ ((__nonnull__ (2)));
+ 
+ extern int initstate_r (unsigned int __seed, char *__restrict __statebuf,
+    size_t __statelen,
+    struct random_data *__restrict __buf)
+      __attribute__ ((__nothrow__ , __leaf__)) __attribute__ ((__nonnull__ (2, 4)));
+ 
+ extern int setstate_r (char *__restrict __statebuf,
+          struct random_data *__restrict __buf)
+      __attribute__ ((__nothrow__ , __leaf__)) __attribute__ ((__nonnull__ (1, 2)));
+ 
+ 
+ 
+ 
+ 
+ extern int rand (void) __attribute__ ((__nothrow__ , __leaf__));
+ 
+ extern void srand (unsigned int __seed) __attribute__ ((__nothrow__ , __leaf__));
+ 
+ 
+ 
+ extern int rand_r (unsigned int *__seed) __attribute__ ((__nothrow__ , __leaf__));
+ 
+ 
+ 
+ 
+ 
+ 
+ 
+ extern double drand48 (void) __attribute__ ((__nothrow__ , __leaf__));
+ extern double erand48 (unsigned short int __xsubi[3]) __attribute__ ((__nothrow__ , __leaf__)) __attribute__ ((__nonnull__ (1)));
+ 
+ 
+ extern long int lrand48 (void) __attribute__ ((__nothrow__ , __leaf__));
+ extern long int nrand48 (unsigned short int __xsubi[3])
+      __attribute__ ((__nothrow__ , __leaf__)) __attribute__ ((__nonnull__ (1)));
+ 
+ 
+ extern long int mrand48 (void) __attribute__ ((__nothrow__ , __leaf__));
+ extern long int jrand48 (unsigned short int __xsubi[3])
+      __attribute__ ((__nothrow__ , __leaf__)) __attribute__ ((__nonnull__ (1)));
+ 
+ 
+ extern void srand48 (long int __seedval) __attribute__ ((__nothrow__ , __leaf__));
+ extern unsigned short int *seed48 (unsigned short int __seed16v[3])
+      __attribute__ ((__nothrow__ , __leaf__)) __attribute__ ((__nonnull__ (1)));
+ extern void lcong48 (unsigned short int __param[7]) __attribute__ ((__nothrow__ , __leaf__)) __attribute__ ((__nonnull__ (1)));
+ 
+ 
+ 
+ 
+ 
+ struct drand48_data
+   {
+     unsigned short int __x[3];
+     unsigned short int __old_x[3];
+     unsigned short int __c;
+     unsigned short int __init;
+     __extension__ unsigned long long int __a;
+ 
+   };
+ 
+ 
+ extern int drand48_r (struct drand48_data *__restrict __buffer,
+         double *__restrict __result) __attribute__ ((__nothrow__ , __leaf__)) __attribute__ ((__nonnull__ (1, 2)));
+ extern int erand48_r (unsigned short int __xsubi[3],
+         struct drand48_data *__restrict __buffer,
+         double *__restrict __result) __attribute__ ((__nothrow__ , __leaf__)) __attribute__ ((__nonnull__ (1, 2)));
+ 
+ 
+ extern int lrand48_r (struct drand48_data *__restrict __buffer,
+         long int *__restrict __result)
+      __attribute__ ((__nothrow__ , __leaf__)) __attribute__ ((__nonnull__ (1, 2)));
+ extern int nrand48_r (unsigned short int __xsubi[3],
+         struct drand48_data *__restrict __buffer,
+         long int *__restrict __result)
+      __attribute__ ((__nothrow__ , __leaf__)) __attribute__ ((__nonnull__ (1, 2)));
+ 
+ 
+ extern int mrand48_r (struct drand48_data *__restrict __buffer,
+         long int *__restrict __result)
+      __attribute__ ((__nothrow__ , __leaf__)) __attribute__ ((__nonnull__ (1, 2)));
+ extern int jrand48_r (unsigned short int __xsubi[3],
+         struct drand48_data *__restrict __buffer,
+         long int *__restrict __result)
+      __attribute__ ((__nothrow__ , __leaf__)) __attribute__ ((__nonnull__ (1, 2)));
+ 
+ 
+ extern int srand48_r (long int __seedval, struct drand48_data *__buffer)
+      __attribute__ ((__nothrow__ , __leaf__)) __attribute__ ((__nonnull__ (2)));
+ 
+ extern int seed48_r (unsigned short int __seed16v[3],
+        struct drand48_data *__buffer) __attribute__ ((__nothrow__ , __leaf__)) __attribute__ ((__nonnull__ (1, 2)));
+ 
+ extern int lcong48_r (unsigned short int __param[7],
+         struct drand48_data *__buffer)
+      __attribute__ ((__nothrow__ , __leaf__)) __attribute__ ((__nonnull__ (1, 2)));
+ 
+ 
+ 
+ 
+ extern void *malloc (size_t __size) __attribute__ ((__nothrow__ , __leaf__)) __attribute__ ((__malloc__)) __attribute__ ((__warn_unused_result__));
+ 
+ extern void *calloc (size_t __nmemb, size_t __size)
+      __attribute__ ((__nothrow__ , __leaf__)) __attribute__ ((__malloc__)) __attribute__ ((__warn_unused_result__));
+ 
+ 
+ 
+ 
+ 
+ 
+ extern void *realloc (void *__ptr, size_t __size)
+      __attribute__ ((__nothrow__ , __leaf__)) __attribute__ ((__warn_unused_result__));
+ # 563 "/usr/include/stdlib.h" 3 4
+ extern void free (void *__ptr) __attribute__ ((__nothrow__ , __leaf__));
+ 
+ 
+ # 1 "/usr/include/alloca.h" 1 3 4
+ # 24 "/usr/include/alloca.h" 3 4
+ # 1 "/usr/lib/gcc/x86_64-linux-gnu/7/include/stddef.h" 1 3 4
+ # 25 "/usr/include/alloca.h" 2 3 4
+ 
+ 
+ 
+ 
+ 
+ 
+ 
+ extern void *alloca (size_t __size) __attribute__ ((__nothrow__ , __leaf__));
+ 
+ 
+ 
+ 
+ 
+ 
+ # 567 "/usr/include/stdlib.h" 2 3 4
+ 
+ 
+ 
+ 
+ 
+ extern void *valloc (size_t __size) __attribute__ ((__nothrow__ , __leaf__)) __attribute__ ((__malloc__)) __attribute__ ((__warn_unused_result__));
+ 
+ 
+ 
+ 
+ extern int posix_memalign (void **__memptr, size_t __alignment, size_t __size)
+      __attribute__ ((__nothrow__ , __leaf__)) __attribute__ ((__nonnull__ (1))) __attribute__ ((__warn_unused_result__));
+ # 588 "/usr/include/stdlib.h" 3 4
+ extern void abort (void) __attribute__ ((__nothrow__ , __leaf__)) __attribute__ ((__noreturn__));
+ 
+ 
+ 
+ extern int atexit (void (*__func) (void)) __attribute__ ((__nothrow__ , __leaf__)) __attribute__ ((__nonnull__ (1)));
+ # 607 "/usr/include/stdlib.h" 3 4
+ extern int on_exit (void (*__func) (int __status, void *__arg), void *__arg)
+      __attribute__ ((__nothrow__ , __leaf__)) __attribute__ ((__nonnull__ (1)));
+ 
+ 
+ 
+ 
+ 
+ extern void exit (int __status) __attribute__ ((__nothrow__ , __leaf__)) __attribute__ ((__noreturn__));
+ # 626 "/usr/include/stdlib.h" 3 4
+ extern void _Exit (int __status) __attribute__ ((__nothrow__ , __leaf__)) __attribute__ ((__noreturn__));
+ 
+ 
+ 
+ 
+ extern char *getenv (const char *__name) __attribute__ ((__nothrow__ , __leaf__)) __attribute__ ((__nonnull__ (1))) __attribute__ ((__warn_unused_result__));
+ # 644 "/usr/include/stdlib.h" 3 4
+ extern int putenv (char *__string) __attribute__ ((__nothrow__ , __leaf__)) __attribute__ ((__nonnull__ (1)));
+ 
+ 
+ 
+ 
+ 
+ extern int setenv (const char *__name, const char *__value, int __replace)
+      __attribute__ ((__nothrow__ , __leaf__)) __attribute__ ((__nonnull__ (2)));
+ 
+ 
+ extern int unsetenv (const char *__name) __attribute__ ((__nothrow__ , __leaf__)) __attribute__ ((__nonnull__ (1)));
+ 
+ 
+ 
+ 
+ 
+ 
+ extern int clearenv (void) __attribute__ ((__nothrow__ , __leaf__));
+ # 672 "/usr/include/stdlib.h" 3 4
+ extern char *mktemp (char *__template) __attribute__ ((__nothrow__ , __leaf__)) __attribute__ ((__nonnull__ (1)));
+ # 685 "/usr/include/stdlib.h" 3 4
+ extern int mkstemp (char *__template) __attribute__ ((__nonnull__ (1))) __attribute__ ((__warn_unused_result__));
+ # 707 "/usr/include/stdlib.h" 3 4
+ extern int mkstemps (char *__template, int __suffixlen) __attribute__ ((__nonnull__ (1))) __attribute__ ((__warn_unused_result__));
+ # 728 "/usr/include/stdlib.h" 3 4
+ extern char *mkdtemp (char *__template) __attribute__ ((__nothrow__ , __leaf__)) __attribute__ ((__nonnull__ (1))) __attribute__ ((__warn_unused_result__));
+ # 781 "/usr/include/stdlib.h" 3 4
+ extern int system (const char *__command) __attribute__ ((__warn_unused_result__));
+ # 797 "/usr/include/stdlib.h" 3 4
+ extern char *realpath (const char *__restrict __name,
+          char *__restrict __resolved) __attribute__ ((__nothrow__ , __leaf__)) __attribute__ ((__warn_unused_result__));
+ 
+ 
+ 
+ 
+ 
+ 
+ typedef int (*__compar_fn_t) (const void *, const void *);
+ # 817 "/usr/include/stdlib.h" 3 4
+ extern void *bsearch (const void *__key, const void *__base,
+         size_t __nmemb, size_t __size, __compar_fn_t __compar)
+      __attribute__ ((__nonnull__ (1, 2, 5))) __attribute__ ((__warn_unused_result__));
+ 
+ 
+ 
+ 
+ 
+ 
+ 
+ extern void qsort (void *__base, size_t __nmemb, size_t __size,
+      __compar_fn_t __compar) __attribute__ ((__nonnull__ (1, 4)));
+ # 837 "/usr/include/stdlib.h" 3 4
+ extern int abs (int __x) __attribute__ ((__nothrow__ , __leaf__)) __attribute__ ((__const__)) __attribute__ ((__warn_unused_result__));
+ extern long int labs (long int __x) __attribute__ ((__nothrow__ , __leaf__)) __attribute__ ((__const__)) __attribute__ ((__warn_unused_result__));
+ 
+ 
+ __extension__ extern long long int llabs (long long int __x)
+      __attribute__ ((__nothrow__ , __leaf__)) __attribute__ ((__const__)) __attribute__ ((__warn_unused_result__));
+ 
+ 
+ 
+ 
+ 
+ 
+ extern div_t div (int __numer, int __denom)
+      __attribute__ ((__nothrow__ , __leaf__)) __attribute__ ((__const__)) __attribute__ ((__warn_unused_result__));
+ extern ldiv_t ldiv (long int __numer, long int __denom)
+      __attribute__ ((__nothrow__ , __leaf__)) __attribute__ ((__const__)) __attribute__ ((__warn_unused_result__));
+ 
+ 
+ __extension__ extern lldiv_t lldiv (long long int __numer,
+         long long int __denom)
+      __attribute__ ((__nothrow__ , __leaf__)) __attribute__ ((__const__)) __attribute__ ((__warn_unused_result__));
+ # 869 "/usr/include/stdlib.h" 3 4
+ extern char *ecvt (double __value, int __ndigit, int *__restrict __decpt,
+      int *__restrict __sign) __attribute__ ((__nothrow__ , __leaf__)) __attribute__ ((__nonnull__ (3, 4))) __attribute__ ((__warn_unused_result__));
+ 
+ 
+ 
+ 
+ extern char *fcvt (double __value, int __ndigit, int *__restrict __decpt,
+      int *__restrict __sign) __attribute__ ((__nothrow__ , __leaf__)) __attribute__ ((__nonnull__ (3, 4))) __attribute__ ((__warn_unused_result__));
+ 
+ 
+ 
+ 
+ extern char *gcvt (double __value, int __ndigit, char *__buf)
+      __attribute__ ((__nothrow__ , __leaf__)) __attribute__ ((__nonnull__ (3))) __attribute__ ((__warn_unused_result__));
+ 
+ 
+ 
+ 
+ extern char *qecvt (long double __value, int __ndigit,
+       int *__restrict __decpt, int *__restrict __sign)
+      __attribute__ ((__nothrow__ , __leaf__)) __attribute__ ((__nonnull__ (3, 4))) __attribute__ ((__warn_unused_result__));
+ extern char *qfcvt (long double __value, int __ndigit,
+       int *__restrict __decpt, int *__restrict __sign)
+      __attribute__ ((__nothrow__ , __leaf__)) __attribute__ ((__nonnull__ (3, 4))) __attribute__ ((__warn_unused_result__));
+ extern char *qgcvt (long double __value, int __ndigit, char *__buf)
+      __attribute__ ((__nothrow__ , __leaf__)) __attribute__ ((__nonnull__ (3))) __attribute__ ((__warn_unused_result__));
+ 
+ 
+ 
+ 
+ extern int ecvt_r (double __value, int __ndigit, int *__restrict __decpt,
+      int *__restrict __sign, char *__restrict __buf,
+      size_t __len) __attribute__ ((__nothrow__ , __leaf__)) __attribute__ ((__nonnull__ (3, 4, 5)));
+ extern int fcvt_r (double __value, int __ndigit, int *__restrict __decpt,
+      int *__restrict __sign, char *__restrict __buf,
+      size_t __len) __attribute__ ((__nothrow__ , __leaf__)) __attribute__ ((__nonnull__ (3, 4, 5)));
+ 
+ extern int qecvt_r (long double __value, int __ndigit,
+       int *__restrict __decpt, int *__restrict __sign,
+       char *__restrict __buf, size_t __len)
+      __attribute__ ((__nothrow__ , __leaf__)) __attribute__ ((__nonnull__ (3, 4, 5)));
+ extern int qfcvt_r (long double __value, int __ndigit,
+       int *__restrict __decpt, int *__restrict __sign,
+       char *__restrict __buf, size_t __len)
+      __attribute__ ((__nothrow__ , __leaf__)) __attribute__ ((__nonnull__ (3, 4, 5)));
+ 
+ 
+ 
+ 
+ 
+ extern int mblen (const char *__s, size_t __n) __attribute__ ((__nothrow__ , __leaf__));
+ 
+ 
+ extern int mbtowc (wchar_t *__restrict __pwc,
+      const char *__restrict __s, size_t __n) __attribute__ ((__nothrow__ , __leaf__));
+ 
+ 
+ extern int wctomb (char *__s, wchar_t __wchar) __attribute__ ((__nothrow__ , __leaf__));
+ 
+ 
+ 
+ extern size_t mbstowcs (wchar_t *__restrict __pwcs,
+    const char *__restrict __s, size_t __n) __attribute__ ((__nothrow__ , __leaf__));
+ 
+ extern size_t wcstombs (char *__restrict __s,
+    const wchar_t *__restrict __pwcs, size_t __n)
+      __attribute__ ((__nothrow__ , __leaf__));
+ 
+ 
+ 
+ 
+ 
+ 
+ 
+ extern int rpmatch (const char *__response) __attribute__ ((__nothrow__ , __leaf__)) __attribute__ ((__nonnull__ (1))) __attribute__ ((__warn_unused_result__));
+ # 954 "/usr/include/stdlib.h" 3 4
+ extern int getsubopt (char **__restrict __optionp,
+         char *const *__restrict __tokens,
+         char **__restrict __valuep)
+      __attribute__ ((__nothrow__ , __leaf__)) __attribute__ ((__nonnull__ (1, 2, 3))) __attribute__ ((__warn_unused_result__));
+ # 1006 "/usr/include/stdlib.h" 3 4
+ extern int getloadavg (double __loadavg[], int __nelem)
+      __attribute__ ((__nothrow__ , __leaf__)) __attribute__ ((__nonnull__ (1)));
+ # 1016 "/usr/include/stdlib.h" 3 4
+ # 1 "/usr/include/x86_64-linux-gnu/bits/stdlib-float.h" 1 3 4
+ # 1017 "/usr/include/stdlib.h" 2 3 4
+ 
+ 
+ 
+ # 1 "/usr/include/x86_64-linux-gnu/bits/stdlib.h" 1 3 4
+ # 23 "/usr/include/x86_64-linux-gnu/bits/stdlib.h" 3 4
+ extern char *__realpath_chk (const char *__restrict __name,
+         char *__restrict __resolved,
+         size_t __resolvedlen) __attribute__ ((__nothrow__ , __leaf__)) __attribute__ ((__warn_unused_result__));
+ extern char *__realpath_alias (const char *__restrict __name, char *__restrict __resolved) __asm__ ("" "realpath") __attribute__ ((__nothrow__ , __leaf__))
+ 
+                                                  __attribute__ ((__warn_unused_result__));
+ extern char *__realpath_chk_warn (const char *__restrict __name, char *__restrict __resolved, size_t __resolvedlen) __asm__ ("" "__realpath_chk") __attribute__ ((__nothrow__ , __leaf__))
+ 
+ 
+                                                 __attribute__ ((__warn_unused_result__))
+      __attribute__((__warning__ ("second argument of realpath must be either NULL or at " "least PATH_MAX bytes long buffer")))
+                                       ;
+ 
+ extern __inline __attribute__ ((__always_inline__)) __attribute__ ((__gnu_inline__)) __attribute__ ((__artificial__)) __attribute__ ((__warn_unused_result__)) char *
+ __attribute__ ((__nothrow__ , __leaf__)) realpath (const char *__restrict __name, char *__restrict __resolved)
+ {
+   if (__builtin_object_size (__resolved, 2 > 1) != (size_t) -1)
+     {
+ 
+ 
+ 
+ 
+       return __realpath_chk (__name, __resolved, __builtin_object_size (__resolved, 2 > 1));
+     }
+ 
+   return __realpath_alias (__name, __resolved);
+ }
+ 
+ 
+ extern int __ptsname_r_chk (int __fd, char *__buf, size_t __buflen,
+        size_t __nreal) __attribute__ ((__nothrow__ , __leaf__)) __attribute__ ((__nonnull__ (2)));
+ extern int __ptsname_r_alias (int __fd, char *__buf, size_t __buflen) __asm__ ("" "ptsname_r") __attribute__ ((__nothrow__ , __leaf__))
+ 
+      __attribute__ ((__nonnull__ (2)));
+ extern int __ptsname_r_chk_warn (int __fd, char *__buf, size_t __buflen, size_t __nreal) __asm__ ("" "__ptsname_r_chk") __attribute__ ((__nothrow__ , __leaf__))
+ 
+ 
+      __attribute__ ((__nonnull__ (2))) __attribute__((__warning__ ("ptsname_r called with buflen bigger than " "size of buf")))
+                    ;
+ 
+ extern __inline __attribute__ ((__always_inline__)) __attribute__ ((__gnu_inline__)) __attribute__ ((__artificial__)) int
+ __attribute__ ((__nothrow__ , __leaf__)) ptsname_r (int __fd, char *__buf, size_t __buflen)
+ {
+   if (__builtin_object_size (__buf, 2 > 1) != (size_t) -1)
+     {
+       if (!__builtin_constant_p (__buflen))
+  return __ptsname_r_chk (__fd, __buf, __buflen, __builtin_object_size (__buf, 2 > 1));
+       if (__buflen > __builtin_object_size (__buf, 2 > 1))
+  return __ptsname_r_chk_warn (__fd, __buf, __buflen, __builtin_object_size (__buf, 2 > 1));
+     }
+   return __ptsname_r_alias (__fd, __buf, __buflen);
+ }
+ 
+ 
+ extern int __wctomb_chk (char *__s, wchar_t __wchar, size_t __buflen)
+   __attribute__ ((__nothrow__ , __leaf__)) __attribute__ ((__warn_unused_result__));
+ extern int __wctomb_alias (char *__s, wchar_t __wchar) __asm__ ("" "wctomb") __attribute__ ((__nothrow__ , __leaf__))
+               __attribute__ ((__warn_unused_result__));
+ 
+ extern __inline __attribute__ ((__always_inline__)) __attribute__ ((__gnu_inline__)) __attribute__ ((__artificial__)) __attribute__ ((__warn_unused_result__)) int
+ __attribute__ ((__nothrow__ , __leaf__)) wctomb (char *__s, wchar_t __wchar)
+ {
+ 
+ 
+ 
+ 
+ 
+ 
+ 
+   if (__builtin_object_size (__s, 2 > 1) != (size_t) -1 && 16 > __builtin_object_size (__s, 2 > 1))
+     return __wctomb_chk (__s, __wchar, __builtin_object_size (__s, 2 > 1));
+   return __wctomb_alias (__s, __wchar);
+ }
+ 
+ 
+ extern size_t __mbstowcs_chk (wchar_t *__restrict __dst,
+          const char *__restrict __src,
+          size_t __len, size_t __dstlen) __attribute__ ((__nothrow__ , __leaf__));
+ extern size_t __mbstowcs_alias (wchar_t *__restrict __dst, const char *__restrict __src, size_t __len) __asm__ ("" "mbstowcs") __attribute__ ((__nothrow__ , __leaf__))
+ 
+ 
+                                   ;
+ extern size_t __mbstowcs_chk_warn (wchar_t *__restrict __dst, const char *__restrict __src, size_t __len, size_t __dstlen) __asm__ ("" "__mbstowcs_chk") __attribute__ ((__nothrow__ , __leaf__))
+ 
+ 
+ 
+      __attribute__((__warning__ ("mbstowcs called with dst buffer smaller than len " "* sizeof (wchar_t)")))
+                         ;
+ 
+ extern __inline __attribute__ ((__always_inline__)) __attribute__ ((__gnu_inline__)) __attribute__ ((__artificial__)) size_t
+ __attribute__ ((__nothrow__ , __leaf__)) mbstowcs (wchar_t *__restrict __dst, const char *__restrict __src, size_t __len)
+ 
+ {
+   if (__builtin_object_size (__dst, 2 > 1) != (size_t) -1)
+     {
+       if (!__builtin_constant_p (__len))
+  return __mbstowcs_chk (__dst, __src, __len,
+           __builtin_object_size (__dst, 2 > 1) / sizeof (wchar_t));
+ 
+       if (__len > __builtin_object_size (__dst, 2 > 1) / sizeof (wchar_t))
+  return __mbstowcs_chk_warn (__dst, __src, __len,
+          __builtin_object_size (__dst, 2 > 1) / sizeof (wchar_t));
+     }
+   return __mbstowcs_alias (__dst, __src, __len);
+ }
+ 
+ 
+ extern size_t __wcstombs_chk (char *__restrict __dst,
+          const wchar_t *__restrict __src,
+          size_t __len, size_t __dstlen) __attribute__ ((__nothrow__ , __leaf__));
+ extern size_t __wcstombs_alias (char *__restrict __dst, const wchar_t *__restrict __src, size_t __len) __asm__ ("" "wcstombs") __attribute__ ((__nothrow__ , __leaf__))
+ 
+ 
+                                   ;
+ extern size_t __wcstombs_chk_warn (char *__restrict __dst, const wchar_t *__restrict __src, size_t __len, size_t __dstlen) __asm__ ("" "__wcstombs_chk") __attribute__ ((__nothrow__ , __leaf__))
+ 
+ 
+ 
+      __attribute__((__warning__ ("wcstombs called with dst buffer smaller than len")));
+ 
+ extern __inline __attribute__ ((__always_inline__)) __attribute__ ((__gnu_inline__)) __attribute__ ((__artificial__)) size_t
+ __attribute__ ((__nothrow__ , __leaf__)) wcstombs (char *__restrict __dst, const wchar_t *__restrict __src, size_t __len)
+ 
+ {
+   if (__builtin_object_size (__dst, 2 > 1) != (size_t) -1)
+     {
+       if (!__builtin_constant_p (__len))
+  return __wcstombs_chk (__dst, __src, __len, __builtin_object_size (__dst, 2 > 1));
+       if (__len > __builtin_object_size (__dst, 2 > 1))
+  return __wcstombs_chk_warn (__dst, __src, __len, __builtin_object_size (__dst, 2 > 1));
+     }
+   return __wcstombs_alias (__dst, __src, __len);
+ }
+ # 1021 "/usr/include/stdlib.h" 2 3 4
+ 
+ 
+ 
+ 
+ 
+ 
+ # 29 "../py/objmodule.c" 2
+ # 1 "/usr/include/string.h" 1 3 4
+ # 26 "/usr/include/string.h" 3 4
+ # 1 "/usr/include/x86_64-linux-gnu/bits/libc-header-start.h" 1 3 4
+ # 27 "/usr/include/string.h" 2 3 4
+ 
+ 
+ 
+ 
+ 
+ 
+ # 1 "/usr/lib/gcc/x86_64-linux-gnu/7/include/stddef.h" 1 3 4
+ # 34 "/usr/include/string.h" 2 3 4
+ # 42 "/usr/include/string.h" 3 4
+ extern void *memcpy (void *__restrict __dest, const void *__restrict __src,
+        size_t __n) __attribute__ ((__nothrow__ , __leaf__)) __attribute__ ((__nonnull__ (1, 2)));
+ 
+ 
+ extern void *memmove (void *__dest, const void *__src, size_t __n)
+      __attribute__ ((__nothrow__ , __leaf__)) __attribute__ ((__nonnull__ (1, 2)));
+ 
+ 
+ 
+ 
+ 
+ extern void *memccpy (void *__restrict __dest, const void *__restrict __src,
+         int __c, size_t __n)
+      __attribute__ ((__nothrow__ , __leaf__)) __attribute__ ((__nonnull__ (1, 2)));
+ 
+ 
+ 
+ 
+ extern void *memset (void *__s, int __c, size_t __n) __attribute__ ((__nothrow__ , __leaf__)) __attribute__ ((__nonnull__ (1)));
+ 
+ 
+ extern int memcmp (const void *__s1, const void *__s2, size_t __n)
+      __attribute__ ((__nothrow__ , __leaf__)) __attribute__ ((__pure__)) __attribute__ ((__nonnull__ (1, 2)));
+ # 90 "/usr/include/string.h" 3 4
+ extern void *memchr (const void *__s, int __c, size_t __n)
+       __attribute__ ((__nothrow__ , __leaf__)) __attribute__ ((__pure__)) __attribute__ ((__nonnull__ (1)));
+ # 121 "/usr/include/string.h" 3 4
+ extern char *strcpy (char *__restrict __dest, const char *__restrict __src)
+      __attribute__ ((__nothrow__ , __leaf__)) __attribute__ ((__nonnull__ (1, 2)));
+ 
+ extern char *strncpy (char *__restrict __dest,
+         const char *__restrict __src, size_t __n)
+      __attribute__ ((__nothrow__ , __leaf__)) __attribute__ ((__nonnull__ (1, 2)));
+ 
+ 
+ extern char *strcat (char *__restrict __dest, const char *__restrict __src)
+      __attribute__ ((__nothrow__ , __leaf__)) __attribute__ ((__nonnull__ (1, 2)));
+ 
+ extern char *strncat (char *__restrict __dest, const char *__restrict __src,
+         size_t __n) __attribute__ ((__nothrow__ , __leaf__)) __attribute__ ((__nonnull__ (1, 2)));
+ 
+ 
+ extern int strcmp (const char *__s1, const char *__s2)
+      __attribute__ ((__nothrow__ , __leaf__)) __attribute__ ((__pure__)) __attribute__ ((__nonnull__ (1, 2)));
+ 
+ extern int strncmp (const char *__s1, const char *__s2, size_t __n)
+      __attribute__ ((__nothrow__ , __leaf__)) __attribute__ ((__pure__)) __attribute__ ((__nonnull__ (1, 2)));
+ 
+ 
+ extern int strcoll (const char *__s1, const char *__s2)
+      __attribute__ ((__nothrow__ , __leaf__)) __attribute__ ((__pure__)) __attribute__ ((__nonnull__ (1, 2)));
+ 
+ extern size_t strxfrm (char *__restrict __dest,
+          const char *__restrict __src, size_t __n)
+      __attribute__ ((__nothrow__ , __leaf__)) __attribute__ ((__nonnull__ (2)));
+ 
+ 
+ 
+ # 1 "/usr/include/x86_64-linux-gnu/bits/types/locale_t.h" 1 3 4
+ # 22 "/usr/include/x86_64-linux-gnu/bits/types/locale_t.h" 3 4
+ # 1 "/usr/include/x86_64-linux-gnu/bits/types/__locale_t.h" 1 3 4
+ # 28 "/usr/include/x86_64-linux-gnu/bits/types/__locale_t.h" 3 4
+ struct __locale_struct
+ {
+ 
+   struct __locale_data *__locales[13];
+ 
+ 
+   const unsigned short int *__ctype_b;
+   const int *__ctype_tolower;
+   const int *__ctype_toupper;
+ 
+ 
+   const char *__names[13];
+ };
+ 
+ typedef struct __locale_struct *__locale_t;
+ # 23 "/usr/include/x86_64-linux-gnu/bits/types/locale_t.h" 2 3 4
+ 
+ typedef __locale_t locale_t;
+ # 153 "/usr/include/string.h" 2 3 4
+ 
+ 
+ extern int strcoll_l (const char *__s1, const char *__s2, locale_t __l)
+      __attribute__ ((__nothrow__ , __leaf__)) __attribute__ ((__pure__)) __attribute__ ((__nonnull__ (1, 2, 3)));
+ 
+ 
+ extern size_t strxfrm_l (char *__dest, const char *__src, size_t __n,
+     locale_t __l) __attribute__ ((__nothrow__ , __leaf__)) __attribute__ ((__nonnull__ (2, 4)));
+ 
+ 
+ 
+ 
+ 
+ extern char *strdup (const char *__s)
+      __attribute__ ((__nothrow__ , __leaf__)) __attribute__ ((__malloc__)) __attribute__ ((__nonnull__ (1)));
+ 
+ 
+ 
+ 
+ 
+ 
+ extern char *strndup (const char *__string, size_t __n)
+      __attribute__ ((__nothrow__ , __leaf__)) __attribute__ ((__malloc__)) __attribute__ ((__nonnull__ (1)));
+ # 225 "/usr/include/string.h" 3 4
+ extern char *strchr (const char *__s, int __c)
+      __attribute__ ((__nothrow__ , __leaf__)) __attribute__ ((__pure__)) __attribute__ ((__nonnull__ (1)));
+ # 252 "/usr/include/string.h" 3 4
+ extern char *strrchr (const char *__s, int __c)
+      __attribute__ ((__nothrow__ , __leaf__)) __attribute__ ((__pure__)) __attribute__ ((__nonnull__ (1)));
+ # 272 "/usr/include/string.h" 3 4
+ extern size_t strcspn (const char *__s, const char *__reject)
+      __attribute__ ((__nothrow__ , __leaf__)) __attribute__ ((__pure__)) __attribute__ ((__nonnull__ (1, 2)));
+ 
+ 
+ extern size_t strspn (const char *__s, const char *__accept)
+      __attribute__ ((__nothrow__ , __leaf__)) __attribute__ ((__pure__)) __attribute__ ((__nonnull__ (1, 2)));
+ # 302 "/usr/include/string.h" 3 4
+ extern char *strpbrk (const char *__s, const char *__accept)
+      __attribute__ ((__nothrow__ , __leaf__)) __attribute__ ((__pure__)) __attribute__ ((__nonnull__ (1, 2)));
+ # 329 "/usr/include/string.h" 3 4
+ extern char *strstr (const char *__haystack, const char *__needle)
+      __attribute__ ((__nothrow__ , __leaf__)) __attribute__ ((__pure__)) __attribute__ ((__nonnull__ (1, 2)));
+ 
+ 
+ 
+ 
+ extern char *strtok (char *__restrict __s, const char *__restrict __delim)
+      __attribute__ ((__nothrow__ , __leaf__)) __attribute__ ((__nonnull__ (2)));
+ 
+ 
+ 
+ extern char *__strtok_r (char *__restrict __s,
+     const char *__restrict __delim,
+     char **__restrict __save_ptr)
+      __attribute__ ((__nothrow__ , __leaf__)) __attribute__ ((__nonnull__ (2, 3)));
+ 
+ extern char *strtok_r (char *__restrict __s, const char *__restrict __delim,
+          char **__restrict __save_ptr)
+      __attribute__ ((__nothrow__ , __leaf__)) __attribute__ ((__nonnull__ (2, 3)));
+ # 384 "/usr/include/string.h" 3 4
+ extern size_t strlen (const char *__s)
+      __attribute__ ((__nothrow__ , __leaf__)) __attribute__ ((__pure__)) __attribute__ ((__nonnull__ (1)));
+ 
+ 
+ 
+ 
+ extern size_t strnlen (const char *__string, size_t __maxlen)
+      __attribute__ ((__nothrow__ , __leaf__)) __attribute__ ((__pure__)) __attribute__ ((__nonnull__ (1)));
+ 
+ 
+ 
+ 
+ extern char *strerror (int __errnum) __attribute__ ((__nothrow__ , __leaf__));
+ # 409 "/usr/include/string.h" 3 4
+ extern int strerror_r (int __errnum, char *__buf, size_t __buflen) __asm__ ("" "__xpg_strerror_r") __attribute__ ((__nothrow__ , __leaf__))
+ 
+                         __attribute__ ((__nonnull__ (2)));
+ # 427 "/usr/include/string.h" 3 4
+ extern char *strerror_l (int __errnum, locale_t __l) __attribute__ ((__nothrow__ , __leaf__));
+ 
+ 
+ 
+ # 1 "/usr/include/strings.h" 1 3 4
+ # 23 "/usr/include/strings.h" 3 4
+ # 1 "/usr/lib/gcc/x86_64-linux-gnu/7/include/stddef.h" 1 3 4
+ # 24 "/usr/include/strings.h" 2 3 4
+ 
+ 
+ 
+ 
+ 
+ 
+ 
+ 
+ 
+ 
+ extern int bcmp (const void *__s1, const void *__s2, size_t __n)
+      __attribute__ ((__nothrow__ , __leaf__)) __attribute__ ((__pure__)) __attribute__ ((__nonnull__ (1, 2)));
+ 
+ 
+ extern void bcopy (const void *__src, void *__dest, size_t __n)
+   __attribute__ ((__nothrow__ , __leaf__)) __attribute__ ((__nonnull__ (1, 2)));
+ 
+ 
+ extern void bzero (void *__s, size_t __n) __attribute__ ((__nothrow__ , __leaf__)) __attribute__ ((__nonnull__ (1)));
+ # 68 "/usr/include/strings.h" 3 4
+ extern char *index (const char *__s, int __c)
+      __attribute__ ((__nothrow__ , __leaf__)) __attribute__ ((__pure__)) __attribute__ ((__nonnull__ (1)));
+ # 96 "/usr/include/strings.h" 3 4
+ extern char *rindex (const char *__s, int __c)
+      __attribute__ ((__nothrow__ , __leaf__)) __attribute__ ((__pure__)) __attribute__ ((__nonnull__ (1)));
+ 
+ 
+ 
+ 
+ 
+ 
+ extern int ffs (int __i) __attribute__ ((__nothrow__ , __leaf__)) __attribute__ ((__const__));
+ 
+ 
+ 
+ 
+ 
+ extern int ffsl (long int __l) __attribute__ ((__nothrow__ , __leaf__)) __attribute__ ((__const__));
+ __extension__ extern int ffsll (long long int __ll)
+      __attribute__ ((__nothrow__ , __leaf__)) __attribute__ ((__const__));
+ 
+ 
+ 
+ extern int strcasecmp (const char *__s1, const char *__s2)
+      __attribute__ ((__nothrow__ , __leaf__)) __attribute__ ((__pure__)) __attribute__ ((__nonnull__ (1, 2)));
+ 
+ 
+ extern int strncasecmp (const char *__s1, const char *__s2, size_t __n)
+      __attribute__ ((__nothrow__ , __leaf__)) __attribute__ ((__pure__)) __attribute__ ((__nonnull__ (1, 2)));
+ 
+ 
+ 
+ 
+ 
+ 
+ extern int strcasecmp_l (const char *__s1, const char *__s2, locale_t __loc)
+      __attribute__ ((__nothrow__ , __leaf__)) __attribute__ ((__pure__)) __attribute__ ((__nonnull__ (1, 2, 3)));
+ 
+ 
+ 
+ extern int strncasecmp_l (const char *__s1, const char *__s2,
+      size_t __n, locale_t __loc)
+      __attribute__ ((__nothrow__ , __leaf__)) __attribute__ ((__pure__)) __attribute__ ((__nonnull__ (1, 2, 4)));
+ 
+ 
+ 
+ 
+ 
+ 
+ 
+ 
+ # 1 "/usr/include/x86_64-linux-gnu/bits/strings_fortified.h" 1 3 4
+ # 22 "/usr/include/x86_64-linux-gnu/bits/strings_fortified.h" 3 4
+ extern __inline __attribute__ ((__always_inline__)) __attribute__ ((__gnu_inline__)) __attribute__ ((__artificial__)) void
+ __attribute__ ((__nothrow__ , __leaf__)) bcopy (const void *__src, void *__dest, size_t __len)
+ {
+   (void) __builtin___memmove_chk (__dest, __src, __len, __builtin_object_size (__dest, 0));
+ }
+ 
+ extern __inline __attribute__ ((__always_inline__)) __attribute__ ((__gnu_inline__)) __attribute__ ((__artificial__)) void
+ __attribute__ ((__nothrow__ , __leaf__)) bzero (void *__dest, size_t __len)
+ {
+   (void) __builtin___memset_chk (__dest, '\0', __len, __builtin_object_size (__dest, 0));
+ }
+ # 145 "/usr/include/strings.h" 2 3 4
+ # 432 "/usr/include/string.h" 2 3 4
+ 
+ 
+ 
+ extern void explicit_bzero (void *__s, size_t __n) __attribute__ ((__nothrow__ , __leaf__)) __attribute__ ((__nonnull__ (1)));
+ 
+ 
+ 
+ extern char *strsep (char **__restrict __stringp,
+        const char *__restrict __delim)
+      __attribute__ ((__nothrow__ , __leaf__)) __attribute__ ((__nonnull__ (1, 2)));
+ 
+ 
+ 
+ 
+ extern char *strsignal (int __sig) __attribute__ ((__nothrow__ , __leaf__));
+ 
+ 
+ extern char *__stpcpy (char *__restrict __dest, const char *__restrict __src)
+      __attribute__ ((__nothrow__ , __leaf__)) __attribute__ ((__nonnull__ (1, 2)));
+ extern char *stpcpy (char *__restrict __dest, const char *__restrict __src)
+      __attribute__ ((__nothrow__ , __leaf__)) __attribute__ ((__nonnull__ (1, 2)));
+ 
+ 
+ 
+ extern char *__stpncpy (char *__restrict __dest,
+    const char *__restrict __src, size_t __n)
+      __attribute__ ((__nothrow__ , __leaf__)) __attribute__ ((__nonnull__ (1, 2)));
+ extern char *stpncpy (char *__restrict __dest,
+         const char *__restrict __src, size_t __n)
+      __attribute__ ((__nothrow__ , __leaf__)) __attribute__ ((__nonnull__ (1, 2)));
+ # 494 "/usr/include/string.h" 3 4
+ # 1 "/usr/include/x86_64-linux-gnu/bits/string_fortified.h" 1 3 4
+ # 30 "/usr/include/x86_64-linux-gnu/bits/string_fortified.h" 3 4
+ extern __inline __attribute__ ((__always_inline__)) __attribute__ ((__gnu_inline__)) __attribute__ ((__artificial__)) void *
+ __attribute__ ((__nothrow__ , __leaf__)) memcpy (void *__restrict __dest, const void *__restrict __src, size_t __len)
+ 
+ {
+   return __builtin___memcpy_chk (__dest, __src, __len, __builtin_object_size (__dest, 0));
+ }
+ 
+ extern __inline __attribute__ ((__always_inline__)) __attribute__ ((__gnu_inline__)) __attribute__ ((__artificial__)) void *
+ __attribute__ ((__nothrow__ , __leaf__)) memmove (void *__dest, const void *__src, size_t __len)
+ {
+   return __builtin___memmove_chk (__dest, __src, __len, __builtin_object_size (__dest, 0));
+ }
+ # 58 "/usr/include/x86_64-linux-gnu/bits/string_fortified.h" 3 4
+ extern __inline __attribute__ ((__always_inline__)) __attribute__ ((__gnu_inline__)) __attribute__ ((__artificial__)) void *
+ __attribute__ ((__nothrow__ , __leaf__)) memset (void *__dest, int __ch, size_t __len)
+ {
+ # 71 "/usr/include/x86_64-linux-gnu/bits/string_fortified.h" 3 4
+   return __builtin___memset_chk (__dest, __ch, __len, __builtin_object_size (__dest, 0));
+ }
+ 
+ 
+ 
+ 
+ void __explicit_bzero_chk (void *__dest, size_t __len, size_t __destlen)
+   __attribute__ ((__nothrow__ , __leaf__)) __attribute__ ((__nonnull__ (1)));
+ 
+ extern __inline __attribute__ ((__always_inline__)) __attribute__ ((__gnu_inline__)) __attribute__ ((__artificial__)) void
+ __attribute__ ((__nothrow__ , __leaf__)) explicit_bzero (void *__dest, size_t __len)
+ {
+   __explicit_bzero_chk (__dest, __len, __builtin_object_size (__dest, 0));
+ }
+ 
+ 
+ extern __inline __attribute__ ((__always_inline__)) __attribute__ ((__gnu_inline__)) __attribute__ ((__artificial__)) char *
+ __attribute__ ((__nothrow__ , __leaf__)) strcpy (char *__restrict __dest, const char *__restrict __src)
+ {
+   return __builtin___strcpy_chk (__dest, __src, __builtin_object_size (__dest, 2 > 1));
+ }
+ # 102 "/usr/include/x86_64-linux-gnu/bits/string_fortified.h" 3 4
+ extern __inline __attribute__ ((__always_inline__)) __attribute__ ((__gnu_inline__)) __attribute__ ((__artificial__)) char *
+ __attribute__ ((__nothrow__ , __leaf__)) strncpy (char *__restrict __dest, const char *__restrict __src, size_t __len)
+ 
+ {
+   return __builtin___strncpy_chk (__dest, __src, __len, __builtin_object_size (__dest, 2 > 1));
+ }
+ 
+ 
+ extern char *__stpncpy_chk (char *__dest, const char *__src, size_t __n,
+        size_t __destlen) __attribute__ ((__nothrow__ , __leaf__));
+ extern char *__stpncpy_alias (char *__dest, const char *__src, size_t __n) __asm__ ("" "stpncpy") __attribute__ ((__nothrow__ , __leaf__))
+                                  ;
+ 
+ extern __inline __attribute__ ((__always_inline__)) __attribute__ ((__gnu_inline__)) __attribute__ ((__artificial__)) char *
+ __attribute__ ((__nothrow__ , __leaf__)) stpncpy (char *__dest, const char *__src, size_t __n)
+ {
+   if (__builtin_object_size (__dest, 2 > 1) != (size_t) -1
+       && (!__builtin_constant_p (__n) || __n > __builtin_object_size (__dest, 2 > 1)))
+     return __stpncpy_chk (__dest, __src, __n, __builtin_object_size (__dest, 2 > 1));
+   return __stpncpy_alias (__dest, __src, __n);
+ }
+ 
+ 
+ extern __inline __attribute__ ((__always_inline__)) __attribute__ ((__gnu_inline__)) __attribute__ ((__artificial__)) char *
+ __attribute__ ((__nothrow__ , __leaf__)) strcat (char *__restrict __dest, const char *__restrict __src)
+ {
+   return __builtin___strcat_chk (__dest, __src, __builtin_object_size (__dest, 2 > 1));
+ }
+ 
+ 
+ extern __inline __attribute__ ((__always_inline__)) __attribute__ ((__gnu_inline__)) __attribute__ ((__artificial__)) char *
+ __attribute__ ((__nothrow__ , __leaf__)) strncat (char *__restrict __dest, const char *__restrict __src, size_t __len)
+ 
+ {
+   return __builtin___strncat_chk (__dest, __src, __len, __builtin_object_size (__dest, 2 > 1));
+ }
+ # 495 "/usr/include/string.h" 2 3 4
+ 
+ 
+ 
+ 
+ # 30 "../py/objmodule.c" 2
+ # 1 "/usr/include/assert.h" 1 3 4
+ # 66 "/usr/include/assert.h" 3 4
+ 
+ 
+ 
+ extern void __assert_fail (const char *__assertion, const char *__file,
+       unsigned int __line, const char *__function)
+      __attribute__ ((__nothrow__ , __leaf__)) __attribute__ ((__noreturn__));
+ 
+ 
+ extern void __assert_perror_fail (int __errnum, const char *__file,
+       unsigned int __line, const char *__function)
+      __attribute__ ((__nothrow__ , __leaf__)) __attribute__ ((__noreturn__));
+ 
+ 
+ 
+ 
+ extern void __assert (const char *__assertion, const char *__file, int __line)
+      __attribute__ ((__nothrow__ , __leaf__)) __attribute__ ((__noreturn__));
+ 
+ 
+ 
+ # 31 "../py/objmodule.c" 2
+ 
+ # 1 "../py/objmodule.h" 1
+ # 29 "../py/objmodule.h"
+ # 1 "../py/obj.h" 1
+ # 29 "../py/obj.h"
+ # 1 "../py/mpconfig.h" 1
+ # 62 "../py/mpconfig.h"
+ # 1 "./mpconfigport.h" 1
+ # 94 "./mpconfigport.h"
+ 
+ # 94 "./mpconfigport.h"
+ typedef long mp_int_t;
+ typedef unsigned long mp_uint_t;
+ # 114 "./mpconfigport.h"
+ typedef long mp_off_t;
+ # 128 "./mpconfigport.h"
+ # 1 "/usr/lib/gcc/x86_64-linux-gnu/7/include/stdint.h" 1 3 4
+ # 9 "/usr/lib/gcc/x86_64-linux-gnu/7/include/stdint.h" 3 4
+ # 1 "/usr/include/stdint.h" 1 3 4
+ # 26 "/usr/include/stdint.h" 3 4
+ # 1 "/usr/include/x86_64-linux-gnu/bits/libc-header-start.h" 1 3 4
+ # 27 "/usr/include/stdint.h" 2 3 4
+ 
+ # 1 "/usr/include/x86_64-linux-gnu/bits/wchar.h" 1 3 4
+ # 29 "/usr/include/stdint.h" 2 3 4
+ # 1 "/usr/include/x86_64-linux-gnu/bits/wordsize.h" 1 3 4
+ # 30 "/usr/include/stdint.h" 2 3 4
+ 
+ 
+ 
+ 
+ 
+ 
+ 
+ # 1 "/usr/include/x86_64-linux-gnu/bits/stdint-uintn.h" 1 3 4
+ # 24 "/usr/include/x86_64-linux-gnu/bits/stdint-uintn.h" 3 4
+ 
+ # 24 "/usr/include/x86_64-linux-gnu/bits/stdint-uintn.h" 3 4
+ typedef __uint8_t uint8_t;
+ typedef __uint16_t uint16_t;
+ typedef __uint32_t uint32_t;
+ typedef __uint64_t uint64_t;
+ # 38 "/usr/include/stdint.h" 2 3 4
+ 
+ 
+ 
+ 
+ 
+ typedef signed char int_least8_t;
+ typedef short int int_least16_t;
+ typedef int int_least32_t;
+ 
+ typedef long int int_least64_t;
+ 
+ 
+ 
+ 
+ 
+ 
+ typedef unsigned char uint_least8_t;
+ typedef unsigned short int uint_least16_t;
+ typedef unsigned int uint_least32_t;
+ 
+ typedef unsigned long int uint_least64_t;
+ # 68 "/usr/include/stdint.h" 3 4
+ typedef signed char int_fast8_t;
+ 
+ typedef long int int_fast16_t;
+ typedef long int int_fast32_t;
+ typedef long int int_fast64_t;
+ # 81 "/usr/include/stdint.h" 3 4
+ typedef unsigned char uint_fast8_t;
+ 
+ typedef unsigned long int uint_fast16_t;
+ typedef unsigned long int uint_fast32_t;
+ typedef unsigned long int uint_fast64_t;
+ # 97 "/usr/include/stdint.h" 3 4
+ typedef long int intptr_t;
+ 
+ 
+ typedef unsigned long int uintptr_t;
+ # 111 "/usr/include/stdint.h" 3 4
+ typedef __intmax_t intmax_t;
+ typedef __uintmax_t uintmax_t;
+ # 10 "/usr/lib/gcc/x86_64-linux-gnu/7/include/stdint.h" 2 3 4
+ # 129 "./mpconfigport.h" 2
+ # 63 "../py/mpconfig.h" 2
+ # 651 "../py/mpconfig.h"
+ 
+ # 651 "../py/mpconfig.h"
+ typedef double mp_float_t;
+ # 30 "../py/obj.h" 2
+ # 1 "../py/misc.h" 1
+ # 33 "../py/misc.h"
+ # 1 "/usr/lib/gcc/x86_64-linux-gnu/7/include/stdbool.h" 1 3 4
+ # 34 "../py/misc.h" 2
+ 
+ # 1 "/usr/lib/gcc/x86_64-linux-gnu/7/include/stddef.h" 1 3 4
+ # 149 "/usr/lib/gcc/x86_64-linux-gnu/7/include/stddef.h" 3 4
+ 
+ # 149 "/usr/lib/gcc/x86_64-linux-gnu/7/include/stddef.h" 3 4
+ typedef long int ptrdiff_t;
+ # 36 "../py/misc.h" 2
+ 
+ 
+ # 37 "../py/misc.h"
+ typedef unsigned char byte;
+ typedef unsigned int uint;
+ # 87 "../py/misc.h"
+ void *m_malloc(size_t num_bytes);
+ void *m_malloc_maybe(size_t num_bytes);
+ void *m_malloc_with_finaliser(size_t num_bytes);
+ void *m_malloc0(size_t num_bytes);
+ 
+ 
+ 
+ 
+ 
+ void *m_realloc(void *ptr, size_t new_num_bytes);
+ void *m_realloc_maybe(void *ptr, size_t new_num_bytes, 
+ # 97 "../py/misc.h" 3 4
+                                                       _Bool 
+ # 97 "../py/misc.h"
+                                                            allow_move);
+ void m_free(void *ptr);
+ 
+ __attribute__((noreturn)) void m_malloc_fail(size_t num_bytes);
+ # 120 "../py/misc.h"
+ typedef uint32_t unichar;
+ 
+ 
+ 
+ 
+ 
+ 
+ 
+ unichar utf8_get_char(const byte *s);
+ const byte *utf8_next_char(const byte *s);
+ size_t utf8_charlen(const byte *str, size_t len);
+ 
+ 
+ 
+ 
+ 
+ 
+ 
+ # 137 "../py/misc.h" 3 4
+ _Bool 
+ # 137 "../py/misc.h"
+     unichar_isspace(unichar c);
+ 
+ # 138 "../py/misc.h" 3 4
+ _Bool 
+ # 138 "../py/misc.h"
+     unichar_isalpha(unichar c);
+ 
+ # 139 "../py/misc.h" 3 4
+ _Bool 
+ # 139 "../py/misc.h"
+     unichar_isprint(unichar c);
+ 
+ # 140 "../py/misc.h" 3 4
+ _Bool 
+ # 140 "../py/misc.h"
+     unichar_isdigit(unichar c);
+ 
+ # 141 "../py/misc.h" 3 4
+ _Bool 
+ # 141 "../py/misc.h"
+     unichar_isxdigit(unichar c);
+ 
+ # 142 "../py/misc.h" 3 4
+ _Bool 
+ # 142 "../py/misc.h"
+     unichar_isident(unichar c);
+ 
+ # 143 "../py/misc.h" 3 4
+ _Bool 
+ # 143 "../py/misc.h"
+     unichar_isupper(unichar c);
+ 
+ # 144 "../py/misc.h" 3 4
+ _Bool 
+ # 144 "../py/misc.h"
+     unichar_islower(unichar c);
+ unichar unichar_tolower(unichar c);
+ unichar unichar_toupper(unichar c);
+ mp_uint_t unichar_xdigit_value(unichar c);
+ 
+ 
+ 
+ 
+ 
+ typedef struct _vstr_t {
+     size_t alloc;
+     size_t len;
+     char *buf;
+     
+ # 157 "../py/misc.h" 3 4
+    _Bool 
+ # 157 "../py/misc.h"
+         fixed_buf : 1;
+ } vstr_t;
+ 
+ 
+ 
+ 
+ void vstr_init(vstr_t *vstr, size_t alloc);
+ void vstr_init_len(vstr_t *vstr, size_t len);
+ void vstr_init_fixed_buf(vstr_t *vstr, size_t alloc, char *buf);
+ struct _mp_print_t;
+ void vstr_init_print(vstr_t *vstr, size_t alloc, struct _mp_print_t *print);
+ void vstr_clear(vstr_t *vstr);
+ vstr_t *vstr_new(size_t alloc);
+ void vstr_free(vstr_t *vstr);
+ static inline void vstr_reset(vstr_t *vstr) { vstr->len = 0; }
+ static inline char *vstr_str(vstr_t *vstr) { return vstr->buf; }
+ static inline size_t vstr_len(vstr_t *vstr) { return vstr->len; }
+ void vstr_hint_size(vstr_t *vstr, size_t size);
+ char *vstr_extend(vstr_t *vstr, size_t size);
+ char *vstr_add_len(vstr_t *vstr, size_t len);
+ char *vstr_null_terminated_str(vstr_t *vstr);
+ void vstr_add_byte(vstr_t *vstr, byte v);
+ void vstr_add_char(vstr_t *vstr, unichar chr);
+ void vstr_add_str(vstr_t *vstr, const char *str);
+ void vstr_add_strn(vstr_t *vstr, const char *str, size_t len);
+ void vstr_ins_byte(vstr_t *vstr, size_t byte_pos, byte b);
+ void vstr_ins_char(vstr_t *vstr, size_t char_pos, unichar chr);
+ void vstr_cut_head_bytes(vstr_t *vstr, size_t bytes_to_cut);
+ void vstr_cut_tail_bytes(vstr_t *vstr, size_t bytes_to_cut);
+ void vstr_cut_out_bytes(vstr_t *vstr, size_t byte_pos, size_t bytes_to_cut);
+ void vstr_printf(vstr_t *vstr, const char *fmt, ...);
+ # 206 "../py/misc.h"
+ int DEBUG_printf(const char *fmt, ...);
+ 
+ extern mp_uint_t mp_verbose_flag;
+ # 31 "../py/obj.h" 2
+ # 1 "../py/qstr.h" 1
+ # 39 "../py/qstr.h"
+ enum {
+ 
+ 
+ 
+ 
+ 
+     MP_QSTRnumber_of,
+ };
+ 
+ typedef size_t qstr;
+ 
+ typedef struct _qstr_pool_t {
+     struct _qstr_pool_t *prev;
+     size_t total_prev_len;
+     size_t alloc;
+     size_t len;
+     const byte *qstrs[];
+ } qstr_pool_t;
+ 
+ 
+ 
+ 
+ void qstr_init(void);
+ 
+ mp_uint_t qstr_compute_hash(const byte *data, size_t len);
+ qstr qstr_find_strn(const char *str, size_t str_len);
+ 
+ qstr qstr_from_str(const char *str);
+ qstr qstr_from_strn(const char *str, size_t len);
+ 
+ mp_uint_t qstr_hash(qstr q);
+ const char *qstr_str(qstr q);
+ size_t qstr_len(qstr q);
+ const byte *qstr_data(qstr q, size_t *len);
+ 
+ void qstr_pool_info(size_t *n_pool, size_t *n_qstr, size_t *n_str_data_bytes, size_t *n_total_bytes);
+ void qstr_dump_data(void);
+ # 32 "../py/obj.h" 2
+ # 1 "../py/mpprint.h" 1
+ # 48 "../py/mpprint.h"
+ typedef void (*mp_print_strn_t)(void *data, const char *str, size_t len);
+ 
+ typedef struct _mp_print_t {
+     void *data;
+     mp_print_strn_t print_strn;
+ } mp_print_t;
+ 
+ 
+ 
+ extern const mp_print_t mp_plat_print;
+ 
+ 
+ 
+ 
+ 
+ int mp_print_str(const mp_print_t *print, const char *str);
+ int mp_print_strn(const mp_print_t *print, const char *str, size_t len, int flags, char fill, int width);
+ 
+ int mp_print_float(const mp_print_t *print, mp_float_t f, char fmt, int flags, char fill, int width, int prec);
+ 
+ 
+ int mp_printf(const mp_print_t *print, const char *fmt, ...);
+ # 33 "../py/obj.h" 2
+ # 1 "../py/runtime0.h" 1
+ # 65 "../py/runtime0.h"
+ typedef enum {
+ 
+ 
+     MP_UNARY_OP_POSITIVE,
+     MP_UNARY_OP_NEGATIVE,
+     MP_UNARY_OP_INVERT,
+     MP_UNARY_OP_NOT,
+ 
+ 
+     MP_UNARY_OP_BOOL,
+     MP_UNARY_OP_LEN,
+     MP_UNARY_OP_HASH,
+     MP_UNARY_OP_ABS,
+     MP_UNARY_OP_INT,
+     MP_UNARY_OP_SIZEOF,
+ } mp_unary_op_t;
+ 
+ typedef enum {
+ 
+ 
+ 
+ 
+     MP_BINARY_OP_LESS,
+     MP_BINARY_OP_MORE,
+     MP_BINARY_OP_EQUAL,
+     MP_BINARY_OP_LESS_EQUAL,
+     MP_BINARY_OP_MORE_EQUAL,
+     MP_BINARY_OP_NOT_EQUAL,
+     MP_BINARY_OP_IN,
+     MP_BINARY_OP_IS,
+     MP_BINARY_OP_EXCEPTION_MATCH,
+ 
+ 
+     MP_BINARY_OP_INPLACE_OR,
+     MP_BINARY_OP_INPLACE_XOR,
+     MP_BINARY_OP_INPLACE_AND,
+     MP_BINARY_OP_INPLACE_LSHIFT,
+     MP_BINARY_OP_INPLACE_RSHIFT,
+     MP_BINARY_OP_INPLACE_ADD,
+     MP_BINARY_OP_INPLACE_SUBTRACT,
+     MP_BINARY_OP_INPLACE_MULTIPLY,
+     MP_BINARY_OP_INPLACE_MAT_MULTIPLY,
+     MP_BINARY_OP_INPLACE_FLOOR_DIVIDE,
+     MP_BINARY_OP_INPLACE_TRUE_DIVIDE,
+     MP_BINARY_OP_INPLACE_MODULO,
+     MP_BINARY_OP_INPLACE_POWER,
+ 
+ 
+     MP_BINARY_OP_OR,
+     MP_BINARY_OP_XOR,
+     MP_BINARY_OP_AND,
+     MP_BINARY_OP_LSHIFT,
+     MP_BINARY_OP_RSHIFT,
+     MP_BINARY_OP_ADD,
+     MP_BINARY_OP_SUBTRACT,
+     MP_BINARY_OP_MULTIPLY,
+     MP_BINARY_OP_MAT_MULTIPLY,
+     MP_BINARY_OP_FLOOR_DIVIDE,
+     MP_BINARY_OP_TRUE_DIVIDE,
+     MP_BINARY_OP_MODULO,
+     MP_BINARY_OP_POWER,
+ 
+ 
+ 
+ 
+ 
+ 
+     MP_BINARY_OP_DIVMOD,
+ 
+ 
+ 
+     MP_BINARY_OP_CONTAINS,
+ 
+ 
+ 
+     MP_BINARY_OP_REVERSE_OR,
+     MP_BINARY_OP_REVERSE_XOR,
+     MP_BINARY_OP_REVERSE_AND,
+     MP_BINARY_OP_REVERSE_LSHIFT,
+     MP_BINARY_OP_REVERSE_RSHIFT,
+     MP_BINARY_OP_REVERSE_ADD,
+     MP_BINARY_OP_REVERSE_SUBTRACT,
+     MP_BINARY_OP_REVERSE_MULTIPLY,
+     MP_BINARY_OP_REVERSE_MAT_MULTIPLY,
+     MP_BINARY_OP_REVERSE_FLOOR_DIVIDE,
+     MP_BINARY_OP_REVERSE_TRUE_DIVIDE,
+     MP_BINARY_OP_REVERSE_MODULO,
+     MP_BINARY_OP_REVERSE_POWER,
+ 
+ 
+     MP_BINARY_OP_NOT_IN,
+     MP_BINARY_OP_IS_NOT,
+ } mp_binary_op_t;
+ # 34 "../py/obj.h" 2
+ # 42 "../py/obj.h"
+ typedef void *mp_obj_t;
+ typedef const void *mp_const_obj_t;
+ 
+ 
+ 
+ 
+ typedef struct _mp_obj_type_t mp_obj_type_t;
+ 
+ 
+ 
+ struct _mp_obj_base_t {
+     const mp_obj_type_t *type ;
+ };
+ typedef struct _mp_obj_base_t mp_obj_base_t;
+ # 84 "../py/obj.h"
+ static inline 
+ # 84 "../py/obj.h" 3 4
+              _Bool 
+ # 84 "../py/obj.h"
+                   mp_obj_is_small_int(mp_const_obj_t o)
+     { return ((((mp_int_t)(o)) & 1) != 0); }
+ 
+ 
+ 
+ static inline 
+ # 89 "../py/obj.h" 3 4
+              _Bool 
+ # 89 "../py/obj.h"
+                   mp_obj_is_qstr(mp_const_obj_t o)
+     { return ((((mp_int_t)(o)) & 3) == 2); }
+ 
+ 
+ 
+ 
+ 
+ 
+ extern const struct _mp_obj_float_t mp_const_float_e_obj;
+ extern const struct _mp_obj_float_t mp_const_float_pi_obj;
+ 
+ 
+ mp_float_t mp_obj_float_get(mp_obj_t self_in);
+ mp_obj_t mp_obj_new_float(mp_float_t value);
+ 
+ 
+ static inline 
+ # 105 "../py/obj.h" 3 4
+              _Bool 
+ # 105 "../py/obj.h"
+                   mp_obj_is_obj(mp_const_obj_t o)
+     { return ((((mp_int_t)(o)) & 3) == 0); }
+ # 246 "../py/obj.h"
+ typedef mp_const_obj_t mp_rom_obj_t;
+ # 338 "../py/obj.h"
+ typedef struct _mp_map_elem_t {
+     mp_obj_t key;
+     mp_obj_t value;
+ } mp_map_elem_t;
+ 
+ typedef struct _mp_rom_map_elem_t {
+     mp_rom_obj_t key;
+     mp_rom_obj_t value;
+ } mp_rom_map_elem_t;
+ 
+ 
+ 
+ 
+ 
+ 
+ typedef struct _mp_map_t {
+     size_t all_keys_are_qstrs : 1;
+     size_t is_fixed : 1;
+     size_t is_ordered : 1;
+     size_t used : (8 * sizeof(size_t) - 3);
+     size_t alloc;
+     mp_map_elem_t *table;
+ } mp_map_t;
+ 
+ 
+ typedef enum _mp_map_lookup_kind_t {
+     MP_MAP_LOOKUP = 0,
+     MP_MAP_LOOKUP_ADD_IF_NOT_FOUND = 1,
+     MP_MAP_LOOKUP_REMOVE_IF_FOUND = 2,
+     MP_MAP_LOOKUP_ADD_IF_NOT_FOUND_OR_REMOVE_IF_FOUND = 3,
+ } mp_map_lookup_kind_t;
+ 
+ extern const mp_map_t mp_const_empty_map;
+ 
+ static inline 
+ # 372 "../py/obj.h" 3 4
+              _Bool 
+ # 372 "../py/obj.h"
+                   mp_map_slot_is_filled(const mp_map_t *map, size_t pos) { return ((map)->table[pos].key != (((mp_obj_t)(void*)0)) && (map)->table[pos].key != (((mp_obj_t)(void*)4))); }
+ 
+ void mp_map_init(mp_map_t *map, size_t n);
+ void mp_map_init_fixed_table(mp_map_t *map, size_t n, const mp_obj_t *table);
+ mp_map_t *mp_map_new(size_t n);
+ void mp_map_deinit(mp_map_t *map);
+ void mp_map_free(mp_map_t *map);
+ mp_map_elem_t *mp_map_lookup(mp_map_t *map, mp_obj_t index, mp_map_lookup_kind_t lookup_kind);
+ void mp_map_clear(mp_map_t *map);
+ void mp_map_dump(mp_map_t *map);
+ 
+ 
+ 
+ typedef struct _mp_set_t {
+     size_t alloc;
+     size_t used;
+     mp_obj_t *table;
+ } mp_set_t;
+ 
+ static inline 
+ # 391 "../py/obj.h" 3 4
+              _Bool 
+ # 391 "../py/obj.h"
+                   mp_set_slot_is_filled(const mp_set_t *set, size_t pos) { return ((set)->table[pos] != (((mp_obj_t)(void*)0)) && (set)->table[pos] != (((mp_obj_t)(void*)4))); }
+ 
+ void mp_set_init(mp_set_t *set, size_t n);
+ mp_obj_t mp_set_lookup(mp_set_t *set, mp_obj_t index, mp_map_lookup_kind_t lookup_kind);
+ mp_obj_t mp_set_remove_first(mp_set_t *set);
+ void mp_set_clear(mp_set_t *set);
+ 
+ 
+ 
+ typedef mp_obj_t (*mp_fun_0_t)(void);
+ typedef mp_obj_t (*mp_fun_1_t)(mp_obj_t);
+ typedef mp_obj_t (*mp_fun_2_t)(mp_obj_t, mp_obj_t);
+ typedef mp_obj_t (*mp_fun_3_t)(mp_obj_t, mp_obj_t, mp_obj_t);
+ typedef mp_obj_t (*mp_fun_var_t)(size_t n, const mp_obj_t *);
+ 
+ 
+ typedef mp_obj_t (*mp_fun_kw_t)(size_t n, const mp_obj_t *, mp_map_t *);
+ 
+ typedef enum {
+     PRINT_STR = 0,
+     PRINT_REPR = 1,
+     PRINT_EXC = 2,
+     PRINT_JSON = 3,
+     PRINT_RAW = 4,
+     PRINT_EXC_SUBCLASS = 0x80,
+ } mp_print_kind_t;
+ 
+ typedef struct _mp_obj_iter_buf_t {
+     mp_obj_base_t base;
+     mp_obj_t buf[3];
+ } mp_obj_iter_buf_t;
+ 
+ 
+ 
+ 
+ 
+ typedef void (*mp_print_fun_t)(const mp_print_t *print, mp_obj_t o, mp_print_kind_t kind);
+ typedef mp_obj_t (*mp_make_new_fun_t)(const mp_obj_type_t *type, size_t n_args, size_t n_kw, const mp_obj_t *args);
+ typedef mp_obj_t (*mp_call_fun_t)(mp_obj_t fun, size_t n_args, size_t n_kw, const mp_obj_t *args);
+ typedef mp_obj_t (*mp_unary_op_fun_t)(mp_unary_op_t op, mp_obj_t);
+ typedef mp_obj_t (*mp_binary_op_fun_t)(mp_binary_op_t op, mp_obj_t, mp_obj_t);
+ typedef void (*mp_attr_fun_t)(mp_obj_t self_in, qstr attr, mp_obj_t *dest);
+ typedef mp_obj_t (*mp_subscr_fun_t)(mp_obj_t self_in, mp_obj_t index, mp_obj_t value);
+ typedef mp_obj_t (*mp_getiter_fun_t)(mp_obj_t self_in, mp_obj_iter_buf_t *iter_buf);
+ 
+ 
+ typedef struct _mp_buffer_info_t {
+ 
+ 
+ 
+ 
+ 
+     void *buf;
+     size_t len;
+     int typecode;
+ 
+ 
+ 
+ 
+ } mp_buffer_info_t;
+ 
+ 
+ 
+ typedef struct _mp_buffer_p_t {
+     mp_int_t (*get_buffer)(mp_obj_t obj, mp_buffer_info_t *bufinfo, mp_uint_t flags);
+ } mp_buffer_p_t;
+ 
+ # 457 "../py/obj.h" 3 4
+ _Bool 
+ # 457 "../py/obj.h"
+     mp_get_buffer(mp_obj_t obj, mp_buffer_info_t *bufinfo, mp_uint_t flags);
+ void mp_get_buffer_raise(mp_obj_t obj, mp_buffer_info_t *bufinfo, mp_uint_t flags);
+ 
+ struct _mp_obj_type_t {
+ 
+     mp_obj_base_t base;
+ 
+ 
+     uint16_t flags;
+ 
+ 
+     uint16_t name;
+ 
+ 
+     mp_print_fun_t print;
+ 
+ 
+     mp_make_new_fun_t make_new;
+ 
+ 
+     mp_call_fun_t call;
+ 
+ 
+ 
+     mp_unary_op_fun_t unary_op;
+     mp_binary_op_fun_t binary_op;
+ # 495 "../py/obj.h"
+     mp_attr_fun_t attr;
+ 
+ 
+ 
+ 
+ 
+ 
+     mp_subscr_fun_t subscr;
+ 
+ 
+ 
+ 
+     mp_getiter_fun_t getiter;
+ 
+ 
+ 
+     mp_fun_1_t iternext;
+ 
+ 
+     mp_buffer_p_t buffer_p;
+ 
+ 
+     const void *protocol;
+ 
+ 
+ 
+ 
+ 
+     const void *parent;
+ 
+ 
+     struct _mp_obj_dict_t *locals_dict;
+ };
+ 
+ 
+ extern const mp_obj_type_t mp_type_type;
+ extern const mp_obj_type_t mp_type_object;
+ extern const mp_obj_type_t mp_type_NoneType;
+ extern const mp_obj_type_t mp_type_bool;
+ extern const mp_obj_type_t mp_type_int;
+ extern const mp_obj_type_t mp_type_str;
+ extern const mp_obj_type_t mp_type_bytes;
+ extern const mp_obj_type_t mp_type_bytearray;
+ extern const mp_obj_type_t mp_type_memoryview;
+ extern const mp_obj_type_t mp_type_float;
+ extern const mp_obj_type_t mp_type_complex;
+ extern const mp_obj_type_t mp_type_tuple;
+ extern const mp_obj_type_t mp_type_list;
+ extern const mp_obj_type_t mp_type_map;
+ extern const mp_obj_type_t mp_type_enumerate;
+ extern const mp_obj_type_t mp_type_filter;
+ extern const mp_obj_type_t mp_type_deque;
+ extern const mp_obj_type_t mp_type_dict;
+ extern const mp_obj_type_t mp_type_ordereddict;
+ extern const mp_obj_type_t mp_type_range;
+ extern const mp_obj_type_t mp_type_set;
+ extern const mp_obj_type_t mp_type_frozenset;
+ extern const mp_obj_type_t mp_type_slice;
+ extern const mp_obj_type_t mp_type_zip;
+ extern const mp_obj_type_t mp_type_array;
+ extern const mp_obj_type_t mp_type_super;
+ extern const mp_obj_type_t mp_type_gen_wrap;
+ extern const mp_obj_type_t mp_type_native_gen_wrap;
+ extern const mp_obj_type_t mp_type_gen_instance;
+ extern const mp_obj_type_t mp_type_fun_builtin_0;
+ extern const mp_obj_type_t mp_type_fun_builtin_1;
+ extern const mp_obj_type_t mp_type_fun_builtin_2;
+ extern const mp_obj_type_t mp_type_fun_builtin_3;
+ extern const mp_obj_type_t mp_type_fun_builtin_var;
+ extern const mp_obj_type_t mp_type_fun_bc;
+ extern const mp_obj_type_t mp_type_module;
+ extern const mp_obj_type_t mp_type_staticmethod;
+ extern const mp_obj_type_t mp_type_classmethod;
+ extern const mp_obj_type_t mp_type_property;
+ extern const mp_obj_type_t mp_type_stringio;
+ extern const mp_obj_type_t mp_type_bytesio;
+ extern const mp_obj_type_t mp_type_reversed;
+ extern const mp_obj_type_t mp_type_polymorph_iter;
+ 
+ 
+ extern const mp_obj_type_t mp_type_BaseException;
+ extern const mp_obj_type_t mp_type_ArithmeticError;
+ extern const mp_obj_type_t mp_type_AssertionError;
+ extern const mp_obj_type_t mp_type_AttributeError;
+ extern const mp_obj_type_t mp_type_EOFError;
+ extern const mp_obj_type_t mp_type_Exception;
+ extern const mp_obj_type_t mp_type_GeneratorExit;
+ extern const mp_obj_type_t mp_type_ImportError;
+ extern const mp_obj_type_t mp_type_IndentationError;
+ extern const mp_obj_type_t mp_type_IndexError;
+ extern const mp_obj_type_t mp_type_KeyboardInterrupt;
+ extern const mp_obj_type_t mp_type_KeyError;
+ extern const mp_obj_type_t mp_type_LookupError;
+ extern const mp_obj_type_t mp_type_MemoryError;
+ extern const mp_obj_type_t mp_type_NameError;
+ extern const mp_obj_type_t mp_type_NotImplementedError;
+ extern const mp_obj_type_t mp_type_OSError;
+ extern const mp_obj_type_t mp_type_TimeoutError;
+ extern const mp_obj_type_t mp_type_OverflowError;
+ extern const mp_obj_type_t mp_type_RuntimeError;
+ extern const mp_obj_type_t mp_type_StopAsyncIteration;
+ extern const mp_obj_type_t mp_type_StopIteration;
+ extern const mp_obj_type_t mp_type_SyntaxError;
+ extern const mp_obj_type_t mp_type_SystemExit;
+ extern const mp_obj_type_t mp_type_TypeError;
+ extern const mp_obj_type_t mp_type_UnicodeError;
+ extern const mp_obj_type_t mp_type_ValueError;
+ extern const mp_obj_type_t mp_type_ViperTypeError;
+ extern const mp_obj_type_t mp_type_ZeroDivisionError;
+ # 613 "../py/obj.h"
+ extern const struct _mp_obj_none_t mp_const_none_obj;
+ extern const struct _mp_obj_bool_t mp_const_false_obj;
+ extern const struct _mp_obj_bool_t mp_const_true_obj;
+ extern const struct _mp_obj_str_t mp_const_empty_bytes_obj;
+ extern const struct _mp_obj_tuple_t mp_const_empty_tuple_obj;
+ extern const struct _mp_obj_singleton_t mp_const_ellipsis_obj;
+ extern const struct _mp_obj_singleton_t mp_const_notimplemented_obj;
+ extern const struct _mp_obj_exception_t mp_const_GeneratorExit_obj;
+ # 634 "../py/obj.h"
+ mp_obj_t mp_obj_new_type(qstr name, mp_obj_t bases_tuple, mp_obj_t locals_dict);
+ static inline mp_obj_t mp_obj_new_bool(mp_int_t x) { return x ? (((mp_obj_t)&mp_const_true_obj)) : (((mp_obj_t)&mp_const_false_obj)); }
+ mp_obj_t mp_obj_new_cell(mp_obj_t obj);
+ mp_obj_t mp_obj_new_int(mp_int_t value);
+ mp_obj_t mp_obj_new_int_from_uint(mp_uint_t value);
+ mp_obj_t mp_obj_new_int_from_str_len(const char **str, size_t len, 
+ # 639 "../py/obj.h" 3 4
+                                                                   _Bool 
+ # 639 "../py/obj.h"
+                                                                        neg, unsigned int base);
+ mp_obj_t mp_obj_new_int_from_ll(long long val);
+ mp_obj_t mp_obj_new_int_from_ull(unsigned long long val);
+ mp_obj_t mp_obj_new_str(const char* data, size_t len);
+ mp_obj_t mp_obj_new_str_via_qstr(const char* data, size_t len);
+ mp_obj_t mp_obj_new_str_from_vstr(const mp_obj_type_t *type, vstr_t *vstr);
+ mp_obj_t mp_obj_new_bytes(const byte* data, size_t len);
+ mp_obj_t mp_obj_new_bytearray(size_t n, void *items);
+ mp_obj_t mp_obj_new_bytearray_by_ref(size_t n, void *items);
+ 
+ mp_obj_t mp_obj_new_int_from_float(mp_float_t val);
+ mp_obj_t mp_obj_new_complex(mp_float_t real, mp_float_t imag);
+ 
+ mp_obj_t mp_obj_new_exception(const mp_obj_type_t *exc_type);
+ mp_obj_t mp_obj_new_exception_arg1(const mp_obj_type_t *exc_type, mp_obj_t arg);
+ mp_obj_t mp_obj_new_exception_args(const mp_obj_type_t *exc_type, size_t n_args, const mp_obj_t *args);
+ mp_obj_t mp_obj_new_exception_msg(const mp_obj_type_t *exc_type, const char *msg);
+ mp_obj_t mp_obj_new_exception_msg_varg(const mp_obj_type_t *exc_type, const char *fmt, ...);
+ mp_obj_t mp_obj_new_fun_bc(mp_obj_t def_args, mp_obj_t def_kw_args, const byte *code, const mp_uint_t *const_table);
+ mp_obj_t mp_obj_new_fun_native(mp_obj_t def_args_in, mp_obj_t def_kw_args, const void *fun_data, const mp_uint_t *const_table);
+ mp_obj_t mp_obj_new_fun_asm(size_t n_args, const void *fun_data, mp_uint_t type_sig);
+ mp_obj_t mp_obj_new_gen_wrap(mp_obj_t fun);
+ mp_obj_t mp_obj_new_closure(mp_obj_t fun, size_t n_closed, const mp_obj_t *closed);
+ mp_obj_t mp_obj_new_tuple(size_t n, const mp_obj_t *items);
+ mp_obj_t mp_obj_new_list(size_t n, mp_obj_t *items);
+ mp_obj_t mp_obj_new_dict(size_t n_args);
+ mp_obj_t mp_obj_new_set(size_t n_args, mp_obj_t *items);
+ mp_obj_t mp_obj_new_slice(mp_obj_t start, mp_obj_t stop, mp_obj_t step);
+ mp_obj_t mp_obj_new_bound_meth(mp_obj_t meth, mp_obj_t self);
+ mp_obj_t mp_obj_new_getitem_iter(mp_obj_t *args, mp_obj_iter_buf_t *iter_buf);
+ mp_obj_t mp_obj_new_module(qstr module_name);
+ mp_obj_t mp_obj_new_memoryview(byte typecode, size_t nitems, void *items);
+ 
+ mp_obj_type_t *mp_obj_get_type(mp_const_obj_t o_in);
+ const char *mp_obj_get_type_str(mp_const_obj_t o_in);
+ 
+ # 674 "../py/obj.h" 3 4
+ _Bool 
+ # 674 "../py/obj.h"
+     mp_obj_is_subclass_fast(mp_const_obj_t object, mp_const_obj_t classinfo);
+ mp_obj_t mp_instance_cast_to_native_base(mp_const_obj_t self_in, mp_const_obj_t native_type);
+ 
+ void mp_obj_print_helper(const mp_print_t *print, mp_obj_t o_in, mp_print_kind_t kind);
+ void mp_obj_print(mp_obj_t o, mp_print_kind_t kind);
+ void mp_obj_print_exception(const mp_print_t *print, mp_obj_t exc);
+ 
+ 
+ # 681 "../py/obj.h" 3 4
+ _Bool 
+ # 681 "../py/obj.h"
+     mp_obj_is_true(mp_obj_t arg);
+ 
+ # 682 "../py/obj.h" 3 4
+ _Bool 
+ # 682 "../py/obj.h"
+     mp_obj_is_callable(mp_obj_t o_in);
+ 
+ # 683 "../py/obj.h" 3 4
+ _Bool 
+ # 683 "../py/obj.h"
+     mp_obj_equal(mp_obj_t o1, mp_obj_t o2);
+ 
+ static inline 
+ # 685 "../py/obj.h" 3 4
+              _Bool 
+ # 685 "../py/obj.h"
+                   mp_obj_is_integer(mp_const_obj_t o) { return (mp_obj_is_small_int(o) || (mp_obj_is_obj(o) && (((mp_obj_base_t*)((void*)o))->type == (&mp_type_int)))) || (mp_obj_is_obj(o) && (((mp_obj_base_t*)((void*)o))->type == (&mp_type_bool))); }
+ mp_int_t mp_obj_get_int(mp_const_obj_t arg);
+ mp_int_t mp_obj_get_int_truncated(mp_const_obj_t arg);
+ 
+ # 688 "../py/obj.h" 3 4
+ _Bool 
+ # 688 "../py/obj.h"
+     mp_obj_get_int_maybe(mp_const_obj_t arg, mp_int_t *value);
+ 
+ mp_float_t mp_obj_get_float(mp_obj_t self_in);
+ 
+ # 691 "../py/obj.h" 3 4
+ _Bool 
+ # 691 "../py/obj.h"
+     mp_obj_get_float_maybe(mp_obj_t arg, mp_float_t *value);
+ void mp_obj_get_complex(mp_obj_t self_in, mp_float_t *real, mp_float_t *imag);
+ 
+ void mp_obj_get_array(mp_obj_t o, size_t *len, mp_obj_t **items);
+ void mp_obj_get_array_fixed_n(mp_obj_t o, size_t len, mp_obj_t **items);
+ size_t mp_get_index(const mp_obj_type_t *type, size_t len, mp_obj_t index, 
+ # 696 "../py/obj.h" 3 4
+                                                                           _Bool 
+ # 696 "../py/obj.h"
+                                                                                is_slice);
+ mp_obj_t mp_obj_id(mp_obj_t o_in);
+ mp_obj_t mp_obj_len(mp_obj_t o_in);
+ mp_obj_t mp_obj_len_maybe(mp_obj_t o_in);
+ mp_obj_t mp_obj_subscr(mp_obj_t base, mp_obj_t index, mp_obj_t val);
+ mp_obj_t mp_generic_unary_op(mp_unary_op_t op, mp_obj_t o_in);
+ 
+ 
+ mp_obj_t mp_obj_cell_get(mp_obj_t self_in);
+ void mp_obj_cell_set(mp_obj_t self_in, mp_obj_t obj);
+ 
+ 
+ 
+ mp_int_t mp_obj_int_get_truncated(mp_const_obj_t self_in);
+ 
+ mp_int_t mp_obj_int_get_checked(mp_const_obj_t self_in);
+ 
+ 
+ 
+ 
+ # 715 "../py/obj.h" 3 4
+ _Bool 
+ # 715 "../py/obj.h"
+     mp_obj_is_exception_type(mp_obj_t self_in);
+ 
+ # 716 "../py/obj.h" 3 4
+ _Bool 
+ # 716 "../py/obj.h"
+     mp_obj_is_exception_instance(mp_obj_t self_in);
+ 
+ # 717 "../py/obj.h" 3 4
+ _Bool 
+ # 717 "../py/obj.h"
+     mp_obj_exception_match(mp_obj_t exc, mp_const_obj_t exc_type);
+ void mp_obj_exception_clear_traceback(mp_obj_t self_in);
+ void mp_obj_exception_add_traceback(mp_obj_t self_in, qstr file, size_t line, qstr block);
+ void mp_obj_exception_get_traceback(mp_obj_t self_in, size_t *n, size_t **values);
+ mp_obj_t mp_obj_exception_get_value(mp_obj_t self_in);
+ mp_obj_t mp_obj_exception_make_new(const mp_obj_type_t *type_in, size_t n_args, size_t n_kw, const mp_obj_t *args);
+ mp_obj_t mp_alloc_emergency_exception_buf(mp_obj_t size_in);
+ void mp_init_emergency_exception_buf(void);
+ 
+ 
+ 
+ # 727 "../py/obj.h" 3 4
+ _Bool 
+ # 727 "../py/obj.h"
+     mp_obj_str_equal(mp_obj_t s1, mp_obj_t s2);
+ qstr mp_obj_str_get_qstr(mp_obj_t self_in);
+ const char *mp_obj_str_get_str(mp_obj_t self_in);
+ const char *mp_obj_str_get_data(mp_obj_t self_in, size_t *len);
+ mp_obj_t mp_obj_str_intern(mp_obj_t str);
+ mp_obj_t mp_obj_str_intern_checked(mp_obj_t obj);
+ void mp_str_print_quoted(const mp_print_t *print, const byte *str_data, size_t str_len, 
+ # 733 "../py/obj.h" 3 4
+                                                                                        _Bool 
+ # 733 "../py/obj.h"
+                                                                                             is_bytes);
+ 
+ 
+ 
+ 
+ 
+ 
+ static inline mp_int_t mp_float_hash(mp_float_t val) { return (mp_int_t)val; }
+ 
+ mp_obj_t mp_obj_float_binary_op(mp_binary_op_t op, mp_float_t lhs_val, mp_obj_t rhs);
+ 
+ 
+ void mp_obj_complex_get(mp_obj_t self_in, mp_float_t *real, mp_float_t *imag);
+ mp_obj_t mp_obj_complex_binary_op(mp_binary_op_t op, mp_float_t lhs_real, mp_float_t lhs_imag, mp_obj_t rhs_in);
+ 
+ 
+ 
+ 
+ 
+ void mp_obj_tuple_get(mp_obj_t self_in, size_t *len, mp_obj_t **items);
+ void mp_obj_tuple_del(mp_obj_t self_in);
+ mp_int_t mp_obj_tuple_hash(mp_obj_t self_in);
+ 
+ 
+ mp_obj_t mp_obj_list_append(mp_obj_t self_in, mp_obj_t arg);
+ mp_obj_t mp_obj_list_remove(mp_obj_t self_in, mp_obj_t value);
+ void mp_obj_list_get(mp_obj_t self_in, size_t *len, mp_obj_t **items);
+ void mp_obj_list_set_len(mp_obj_t self_in, size_t len);
+ void mp_obj_list_store(mp_obj_t self_in, mp_obj_t index, mp_obj_t value);
+ mp_obj_t mp_obj_list_sort(size_t n_args, const mp_obj_t *args, mp_map_t *kwargs);
+ 
+ 
+ typedef struct _mp_obj_dict_t {
+     mp_obj_base_t base;
+     mp_map_t map;
+ } mp_obj_dict_t;
+ void mp_obj_dict_init(mp_obj_dict_t *dict, size_t n_args);
+ size_t mp_obj_dict_len(mp_obj_t self_in);
+ mp_obj_t mp_obj_dict_get(mp_obj_t self_in, mp_obj_t index);
+ mp_obj_t mp_obj_dict_store(mp_obj_t self_in, mp_obj_t key, mp_obj_t value);
+ mp_obj_t mp_obj_dict_delete(mp_obj_t self_in, mp_obj_t key);
+ static inline mp_map_t *mp_obj_dict_get_map(mp_obj_t dict) {
+     return &((mp_obj_dict_t*)((void*)dict))->map;
+ }
+ 
+ 
+ void mp_obj_set_store(mp_obj_t self_in, mp_obj_t item);
+ 
+ 
+ void mp_obj_slice_get(mp_obj_t self_in, mp_obj_t *start, mp_obj_t *stop, mp_obj_t *step);
+ 
+ 
+ 
+ typedef struct _mp_obj_fun_builtin_fixed_t {
+     mp_obj_base_t base;
+     union {
+         mp_fun_0_t _0;
+         mp_fun_1_t _1;
+         mp_fun_2_t _2;
+         mp_fun_3_t _3;
+     } fun;
+ } mp_obj_fun_builtin_fixed_t;
+ 
+ typedef struct _mp_obj_fun_builtin_var_t {
+     mp_obj_base_t base;
+     uint32_t sig;
+     union {
+         mp_fun_var_t var;
+         mp_fun_kw_t kw;
+     } fun;
+ } mp_obj_fun_builtin_var_t;
+ 
+ qstr mp_obj_fun_get_name(mp_const_obj_t fun);
+ qstr mp_obj_code_get_name(const byte *code_info);
+ 
+ mp_obj_t mp_identity(mp_obj_t self);
+ extern const mp_obj_fun_builtin_fixed_t mp_identity_obj;
+ mp_obj_t mp_identity_getiter(mp_obj_t self, mp_obj_iter_buf_t *iter_buf);
+ 
+ 
+ typedef struct _mp_obj_module_t {
+     mp_obj_base_t base;
+     mp_obj_dict_t *globals;
+ } mp_obj_module_t;
+ static inline mp_obj_dict_t *mp_obj_module_get_globals(mp_obj_t module) {
+     return ((mp_obj_module_t*)((void*)module))->globals;
+ }
+ 
+ 
+ # 821 "../py/obj.h" 3 4
+ _Bool 
+ # 821 "../py/obj.h"
+     mp_obj_is_package(mp_obj_t module);
+ 
+ 
+ 
+ typedef struct _mp_obj_static_class_method_t {
+     mp_obj_base_t base;
+     mp_obj_t fun;
+ } mp_obj_static_class_method_t;
+ typedef struct _mp_rom_obj_static_class_method_t {
+     mp_obj_base_t base;
+     mp_rom_obj_t fun;
+ } mp_rom_obj_static_class_method_t;
+ 
+ 
+ const mp_obj_t *mp_obj_property_get(mp_obj_t self_in);
+ 
+ 
+ 
+ 
+ typedef struct {
+     mp_uint_t start;
+     mp_uint_t stop;
+     mp_int_t step;
+ } mp_bound_slice_t;
+ 
+ void mp_seq_multiply(const void *items, size_t item_sz, size_t len, size_t times, void *dest);
+ 
+ 
+ # 848 "../py/obj.h" 3 4
+ _Bool 
+ # 848 "../py/obj.h"
+     mp_seq_get_fast_slice_indexes(mp_uint_t len, mp_obj_t slice, mp_bound_slice_t *indexes);
+ 
+ 
+ 
+ 
+ # 852 "../py/obj.h" 3 4
+ _Bool 
+ # 852 "../py/obj.h"
+     mp_seq_cmp_bytes(mp_uint_t op, const byte *data1, size_t len1, const byte *data2, size_t len2);
+ 
+ # 853 "../py/obj.h" 3 4
+ _Bool 
+ # 853 "../py/obj.h"
+     mp_seq_cmp_objs(mp_uint_t op, const mp_obj_t *items1, size_t len1, const mp_obj_t *items2, size_t len2);
+ mp_obj_t mp_seq_index_obj(const mp_obj_t *items, size_t len, size_t n_args, const mp_obj_t *args);
+ mp_obj_t mp_seq_count_obj(const mp_obj_t *items, size_t len, mp_obj_t value);
+ mp_obj_t mp_seq_extract_slice(size_t len, const mp_obj_t *seq, mp_bound_slice_t *indexes);
+ # 30 "../py/objmodule.h" 2
+ 
+ extern const mp_map_t mp_builtin_module_map;
+ extern const mp_map_t mp_builtin_module_weak_links_map;
+ 
+ mp_obj_t mp_module_get(qstr module_name);
+ void mp_module_register(qstr qstr, mp_obj_t module);
+ 
+ mp_obj_t mp_module_search_umodule(const char *module_str);
+ 
+ 
+ 
+ 
+ static inline void mp_module_call_init(qstr module_name, mp_obj_t module_obj) {
+     (void)module_name;
+     (void)module_obj;
+ }
+ # 33 "../py/objmodule.c" 2
+ # 1 "../py/runtime.h" 1
+ # 29 "../py/runtime.h"
+ # 1 "../py/mpstate.h" 1
+ # 32 "../py/mpstate.h"
+ # 1 "../py/mpthread.h" 1
+ # 33 "../py/mpstate.h" 2
+ 
+ # 1 "../py/nlr.h" 1
+ # 32 "../py/nlr.h"
+ # 1 "/usr/lib/gcc/x86_64-linux-gnu/7/include-fixed/limits.h" 1 3 4
+ # 34 "/usr/lib/gcc/x86_64-linux-gnu/7/include-fixed/limits.h" 3 4
+ # 1 "/usr/lib/gcc/x86_64-linux-gnu/7/include-fixed/syslimits.h" 1 3 4
+ 
+ 
+ 
+ 
+ 
+ 
+ # 1 "/usr/lib/gcc/x86_64-linux-gnu/7/include-fixed/limits.h" 1 3 4
+ # 194 "/usr/lib/gcc/x86_64-linux-gnu/7/include-fixed/limits.h" 3 4
+ # 1 "/usr/include/limits.h" 1 3 4
+ # 26 "/usr/include/limits.h" 3 4
+ # 1 "/usr/include/x86_64-linux-gnu/bits/libc-header-start.h" 1 3 4
+ # 27 "/usr/include/limits.h" 2 3 4
+ # 183 "/usr/include/limits.h" 3 4
+ # 1 "/usr/include/x86_64-linux-gnu/bits/posix1_lim.h" 1 3 4
+ # 160 "/usr/include/x86_64-linux-gnu/bits/posix1_lim.h" 3 4
+ # 1 "/usr/include/x86_64-linux-gnu/bits/local_lim.h" 1 3 4
+ # 38 "/usr/include/x86_64-linux-gnu/bits/local_lim.h" 3 4
+ # 1 "/usr/include/linux/limits.h" 1 3 4
+ # 39 "/usr/include/x86_64-linux-gnu/bits/local_lim.h" 2 3 4
+ # 161 "/usr/include/x86_64-linux-gnu/bits/posix1_lim.h" 2 3 4
+ # 184 "/usr/include/limits.h" 2 3 4
+ 
+ 
+ 
+ # 1 "/usr/include/x86_64-linux-gnu/bits/posix2_lim.h" 1 3 4
+ # 188 "/usr/include/limits.h" 2 3 4
+ # 195 "/usr/lib/gcc/x86_64-linux-gnu/7/include-fixed/limits.h" 2 3 4
+ # 8 "/usr/lib/gcc/x86_64-linux-gnu/7/include-fixed/syslimits.h" 2 3 4
+ # 35 "/usr/lib/gcc/x86_64-linux-gnu/7/include-fixed/limits.h" 2 3 4
+ # 33 "../py/nlr.h" 2
+ # 1 "/usr/include/assert.h" 1 3 4
+ # 34 "../py/nlr.h" 2
+ # 90 "../py/nlr.h"
+ typedef struct _nlr_buf_t nlr_buf_t;
+ struct _nlr_buf_t {
+ 
+     nlr_buf_t *prev;
+     void *ret_val;
+ 
+ 
+ 
+ 
+     void *regs[((8))];
+ 
+ 
+ 
+ 
+ 
+ };
+ # 133 "../py/nlr.h"
+ unsigned int nlr_push(nlr_buf_t *);
+ 
+ 
+ unsigned int nlr_push_tail(nlr_buf_t *top);
+ void nlr_pop(void);
+ __attribute__((noreturn)) void nlr_jump(void *val);
+ 
+ 
+ 
+ 
+ __attribute__((noreturn)) void nlr_jump_fail(void *val);
+ # 35 "../py/mpstate.h" 2
+ 
+ # 1 "../py/objlist.h" 1
+ # 31 "../py/objlist.h"
+ typedef struct _mp_obj_list_t {
+     mp_obj_base_t base;
+     size_t alloc;
+     size_t len;
+     mp_obj_t *items;
+ } mp_obj_list_t;
+ 
+ void mp_obj_list_init(mp_obj_list_t *o, size_t n);
+ # 37 "../py/mpstate.h" 2
+ # 1 "../py/objexcept.h" 1
+ # 30 "../py/objexcept.h"
+ # 1 "../py/objtuple.h" 1
+ # 31 "../py/objtuple.h"
+ typedef struct _mp_obj_tuple_t {
+     mp_obj_base_t base;
+     size_t len;
+     mp_obj_t items[];
+ } mp_obj_tuple_t;
+ 
+ typedef struct _mp_rom_obj_tuple_t {
+     mp_obj_base_t base;
+     size_t len;
+     mp_rom_obj_t items[];
+ } mp_rom_obj_tuple_t;
+ 
+ void mp_obj_tuple_print(const mp_print_t *print, mp_obj_t o_in, mp_print_kind_t kind);
+ mp_obj_t mp_obj_tuple_unary_op(mp_unary_op_t op, mp_obj_t self_in);
+ mp_obj_t mp_obj_tuple_binary_op(mp_binary_op_t op, mp_obj_t lhs, mp_obj_t rhs);
+ mp_obj_t mp_obj_tuple_subscr(mp_obj_t base, mp_obj_t index, mp_obj_t value);
+ mp_obj_t mp_obj_tuple_getiter(mp_obj_t o_in, mp_obj_iter_buf_t *iter_buf);
+ 
+ extern const mp_obj_type_t mp_type_attrtuple;
+ # 62 "../py/objtuple.h"
+ mp_obj_t mp_obj_new_attrtuple(const qstr *fields, size_t n, const mp_obj_t *items);
+ # 31 "../py/objexcept.h" 2
+ 
+ typedef struct _mp_obj_exception_t {
+     mp_obj_base_t base;
+     size_t traceback_alloc : (8 * sizeof(size_t) / 2);
+     size_t traceback_len : (8 * sizeof(size_t) / 2);
+     size_t *traceback_data;
+     mp_obj_tuple_t *args;
+ } mp_obj_exception_t;
+ 
+ void mp_obj_exception_print(const mp_print_t *print, mp_obj_t o_in, mp_print_kind_t kind);
+ void mp_obj_exception_attr(mp_obj_t self_in, qstr attr, mp_obj_t *dest);
+ # 38 "../py/mpstate.h" 2
+ 
+ 
+ 
+ 
+ 
+ 
+ 
+ typedef struct mp_dynamic_compiler_t {
+     uint8_t small_int_bits;
+     
+ # 47 "../py/mpstate.h" 3 4
+    _Bool 
+ # 47 "../py/mpstate.h"
+         opt_cache_map_lookup_in_bytecode;
+     
+ # 48 "../py/mpstate.h" 3 4
+    _Bool 
+ # 48 "../py/mpstate.h"
+         py_builtins_str_unicode;
+     uint8_t native_arch;
+     uint8_t nlr_buf_num_regs;
+ } mp_dynamic_compiler_t;
+ extern mp_dynamic_compiler_t mp_dynamic_compiler;
+ 
+ 
+ 
+ 
+ 
+ 
+ 
+ typedef struct _mp_sched_item_t {
+     mp_obj_t func;
+     mp_obj_t arg;
+ } mp_sched_item_t;
+ 
+ 
+ typedef struct _mp_state_mem_t {
+ 
+ 
+ 
+ 
+ 
+ 
+     byte *gc_alloc_table_start;
+     size_t gc_alloc_table_byte_len;
+ 
+ 
+ 
+     byte *gc_pool_start;
+     byte *gc_pool_end;
+ 
+     int gc_stack_overflow;
+     size_t gc_stack[(64)];
+     uint16_t gc_lock_depth;
+ 
+ 
+ 
+ 
+     uint16_t gc_auto_collect_enabled;
+ 
+ 
+     size_t gc_alloc_amount;
+     size_t gc_alloc_threshold;
+ 
+ 
+     size_t gc_last_free_atb_index;
+ # 105 "../py/mpstate.h"
+ } mp_state_mem_t;
+ 
+ 
+ 
+ typedef struct _mp_state_vm_t {
+ 
+ 
+ 
+ 
+ 
+ 
+ 
+     qstr_pool_t *last_pool;
+ 
+ 
+     mp_obj_exception_t mp_emergency_exception_obj;
+ # 139 "../py/mpstate.h"
+     mp_obj_dict_t mp_loaded_modules_dict;
+ 
+ 
+     volatile mp_obj_t mp_pending_exception;
+ # 159 "../py/mpstate.h"
+     mp_obj_dict_t dict_main;
+ 
+ 
+     mp_obj_list_t mp_sys_path_obj;
+     mp_obj_list_t mp_sys_argv_obj;
+ 
+ 
+ 
+ 
+ 
+ 
+ 
+    
+ # 202 "../py/mpstate.h"
+     byte *qstr_last_chunk;
+     size_t qstr_last_alloc;
+     size_t qstr_last_used;
+ 
+ 
+ 
+ 
+ 
+ 
+ 
+     mp_uint_t mp_optimise_value;
+ 
+     uint8_t default_emit_opt;
+ # 233 "../py/mpstate.h"
+ } mp_state_vm_t;
+ 
+ 
+ 
+ typedef struct _mp_state_thread_t {
+ 
+     char *stack_top;
+ 
+ 
+     size_t stack_limit;
+ # 257 "../py/mpstate.h"
+     mp_obj_dict_t *dict_locals;
+     mp_obj_dict_t *dict_globals;
+ 
+     nlr_buf_t *nlr_top;
+ 
+ 
+ 
+ 
+ 
+ 
+ } mp_state_thread_t;
+ 
+ 
+ 
+ typedef struct _mp_state_ctx_t {
+     mp_state_thread_t thread;
+     mp_state_vm_t vm;
+     mp_state_mem_t mem;
+ } mp_state_ctx_t;
+ 
+ extern mp_state_ctx_t mp_state_ctx;
+ # 30 "../py/runtime.h" 2
+ # 1 "../py/pystack.h" 1
+ # 80 "../py/pystack.h"
+ static inline void mp_local_free(void *ptr) {
+     (void)ptr;
+ }
+ 
+ static inline void *mp_nonlocal_alloc(size_t n_bytes) {
+     return ((uint8_t*)(m_malloc(sizeof(uint8_t) * (n_bytes))));
+ }
+ 
+ static inline void *mp_nonlocal_realloc(void *ptr, size_t old_n_bytes, size_t new_n_bytes) {
+     return ((uint8_t*)(m_realloc((ptr), sizeof(uint8_t) * (new_n_bytes))));
+ }
+ 
+ static inline void mp_nonlocal_free(void *ptr, size_t n_bytes) {
+     ((void)(n_bytes), m_free(ptr));
+ }
+ # 31 "../py/runtime.h" 2
+ 
+ typedef enum {
+     MP_VM_RETURN_NORMAL,
+     MP_VM_RETURN_YIELD,
+     MP_VM_RETURN_EXCEPTION,
+ } mp_vm_return_kind_t;
+ 
+ typedef enum {
+     MP_ARG_BOOL = 0x001,
+     MP_ARG_INT = 0x002,
+     MP_ARG_OBJ = 0x003,
+     MP_ARG_KIND_MASK = 0x0ff,
+     MP_ARG_REQUIRED = 0x100,
+     MP_ARG_KW_ONLY = 0x200,
+ } mp_arg_flag_t;
+ 
+ typedef union _mp_arg_val_t {
+     
+ # 48 "../py/runtime.h" 3 4
+    _Bool 
+ # 48 "../py/runtime.h"
+         u_bool;
+     mp_int_t u_int;
+     mp_obj_t u_obj;
+     mp_rom_obj_t u_rom_obj;
+ } mp_arg_val_t;
+ 
+ typedef struct _mp_arg_t {
+     uint16_t qst;
+     uint16_t flags;
+     mp_arg_val_t defval;
+ } mp_arg_t;
+ 
+ 
+ extern const byte mp_unary_op_method_name[];
+ extern const byte mp_binary_op_method_name[];
+ 
+ void mp_init(void);
+ void mp_deinit(void);
+ 
+ void mp_handle_pending(void);
+ void mp_handle_pending_tail(mp_uint_t atomic_state);
+ # 78 "../py/runtime.h"
+ int mp_print_mp_int(const mp_print_t *print, mp_obj_t x, int base, int base_char, int flags, char fill, int width, int prec);
+ 
+ void mp_arg_check_num_sig(size_t n_args, size_t n_kw, uint32_t sig);
+ static inline void mp_arg_check_num(size_t n_args, size_t n_kw, size_t n_args_min, size_t n_args_max, 
+ # 81 "../py/runtime.h" 3 4
+                                                                                                      _Bool 
+ # 81 "../py/runtime.h"
+                                                                                                           takes_kw) {
+     mp_arg_check_num_sig(n_args, n_kw, ((uint32_t)((((uint32_t)(n_args_min)) << 17) | (((uint32_t)(n_args_max)) << 1) | ((takes_kw) ? 1 : 0))));
+ }
+ void mp_arg_parse_all(size_t n_pos, const mp_obj_t *pos, mp_map_t *kws, size_t n_allowed, const mp_arg_t *allowed, mp_arg_val_t *out_vals);
+ void mp_arg_parse_all_kw_array(size_t n_pos, size_t n_kw, const mp_obj_t *args, size_t n_allowed, const mp_arg_t *allowed, mp_arg_val_t *out_vals);
+ __attribute__((noreturn)) void mp_arg_error_terse_mismatch(void);
+ __attribute__((noreturn)) void mp_arg_error_unimpl_kw(void);
+ 
+ static inline mp_obj_dict_t *mp_locals_get(void) { return (mp_state_ctx.thread.dict_locals); }
+ static inline void mp_locals_set(mp_obj_dict_t *d) { (mp_state_ctx.thread.dict_locals) = d; }
+ static inline mp_obj_dict_t *mp_globals_get(void) { return (mp_state_ctx.thread.dict_globals); }
+ static inline void mp_globals_set(mp_obj_dict_t *d) { (mp_state_ctx.thread.dict_globals) = d; }
+ 
+ mp_obj_t mp_load_name(qstr qst);
+ mp_obj_t mp_load_global(qstr qst);
+ mp_obj_t mp_load_build_class(void);
+ void mp_store_name(qstr qst, mp_obj_t obj);
+ void mp_store_global(qstr qst, mp_obj_t obj);
+ void mp_delete_name(qstr qst);
+ void mp_delete_global(qstr qst);
+ 
+ mp_obj_t mp_unary_op(mp_unary_op_t op, mp_obj_t arg);
+ mp_obj_t mp_binary_op(mp_binary_op_t op, mp_obj_t lhs, mp_obj_t rhs);
+ 
+ mp_obj_t mp_call_function_0(mp_obj_t fun);
+ mp_obj_t mp_call_function_1(mp_obj_t fun, mp_obj_t arg);
+ mp_obj_t mp_call_function_2(mp_obj_t fun, mp_obj_t arg1, mp_obj_t arg2);
+ mp_obj_t mp_call_function_n_kw(mp_obj_t fun, size_t n_args, size_t n_kw, const mp_obj_t *args);
+ mp_obj_t mp_call_method_n_kw(size_t n_args, size_t n_kw, const mp_obj_t *args);
+ mp_obj_t mp_call_method_n_kw_var(
+ # 110 "../py/runtime.h" 3 4
+                                 _Bool 
+ # 110 "../py/runtime.h"
+                                      have_self, size_t n_args_n_kw, const mp_obj_t *args);
+ mp_obj_t mp_call_method_self_n_kw(mp_obj_t meth, mp_obj_t self, size_t n_args, size_t n_kw, const mp_obj_t *args);
+ 
+ 
+ mp_obj_t mp_call_function_1_protected(mp_obj_t fun, mp_obj_t arg);
+ mp_obj_t mp_call_function_2_protected(mp_obj_t fun, mp_obj_t arg1, mp_obj_t arg2);
+ 
+ typedef struct _mp_call_args_t {
+     mp_obj_t fun;
+     size_t n_args, n_kw, n_alloc;
+     mp_obj_t *args;
+ } mp_call_args_t;
+ # 131 "../py/runtime.h"
+ void mp_unpack_sequence(mp_obj_t seq, size_t num, mp_obj_t *items);
+ void mp_unpack_ex(mp_obj_t seq, size_t num, mp_obj_t *items);
+ mp_obj_t mp_store_map(mp_obj_t map, mp_obj_t key, mp_obj_t value);
+ mp_obj_t mp_load_attr(mp_obj_t base, qstr attr);
+ void mp_convert_member_lookup(mp_obj_t obj, const mp_obj_type_t *type, mp_obj_t member, mp_obj_t *dest);
+ void mp_load_method(mp_obj_t base, qstr attr, mp_obj_t *dest);
+ void mp_load_method_maybe(mp_obj_t base, qstr attr, mp_obj_t *dest);
+ void mp_load_method_protected(mp_obj_t obj, qstr attr, mp_obj_t *dest, 
+ # 138 "../py/runtime.h" 3 4
+                                                                       _Bool 
+ # 138 "../py/runtime.h"
+                                                                            catch_all_exc);
+ void mp_load_super_method(qstr attr, mp_obj_t *dest);
+ void mp_store_attr(mp_obj_t base, qstr attr, mp_obj_t val);
+ 
+ mp_obj_t mp_getiter(mp_obj_t o, mp_obj_iter_buf_t *iter_buf);
+ mp_obj_t mp_iternext_allow_raise(mp_obj_t o);
+ mp_obj_t mp_iternext(mp_obj_t o);
+ mp_vm_return_kind_t mp_resume(mp_obj_t self_in, mp_obj_t send_value, mp_obj_t throw_value, mp_obj_t *ret_val);
+ 
+ mp_obj_t mp_make_raise_obj(mp_obj_t o);
+ 
+ mp_obj_t mp_import_name(qstr name, mp_obj_t fromlist, mp_obj_t level);
+ mp_obj_t mp_import_from(mp_obj_t module, qstr name);
+ void mp_import_all(mp_obj_t module);
+ 
+ __attribute__((noreturn)) void mp_raise_msg(const mp_obj_type_t *exc_type, const char *msg);
+ __attribute__((noreturn)) void mp_raise_ValueError(const char *msg);
+ __attribute__((noreturn)) void mp_raise_TypeError(const char *msg);
+ __attribute__((noreturn)) void mp_raise_NotImplementedError(const char *msg);
+ __attribute__((noreturn)) void mp_raise_OSError(int errno_);
+ __attribute__((noreturn)) void mp_raise_recursion_depth(void);
+ # 171 "../py/runtime.h"
+ int mp_native_type_from_qstr(qstr qst);
+ mp_uint_t mp_native_from_obj(mp_obj_t obj, mp_uint_t type);
+ mp_obj_t mp_native_to_obj(mp_uint_t val, mp_uint_t type);
+ 
+ 
+ 
+ 
+ 
+ 
+ void mp_warning(const char *category, const char *msg, ...);
+ # 34 "../py/objmodule.c" 2
+ # 1 "../py/builtin.h" 1
+ # 31 "../py/builtin.h"
+ mp_obj_t mp_builtin___import__(size_t n_args, const mp_obj_t *args);
+ mp_obj_t mp_builtin_open(size_t n_args, const mp_obj_t *args, mp_map_t *kwargs);
+ mp_obj_t mp_micropython_mem_info(size_t n_args, const mp_obj_t *args);
+ 
+ extern const mp_obj_fun_builtin_var_t mp_builtin___build_class___obj;
+ extern const mp_obj_fun_builtin_var_t mp_builtin___import___obj;
+ extern const mp_obj_fun_builtin_fixed_t mp_builtin___repl_print___obj;
+ extern const mp_obj_fun_builtin_fixed_t mp_builtin_abs_obj;
+ extern const mp_obj_fun_builtin_fixed_t mp_builtin_all_obj;
+ extern const mp_obj_fun_builtin_fixed_t mp_builtin_any_obj;
+ extern const mp_obj_fun_builtin_fixed_t mp_builtin_bin_obj;
+ extern const mp_obj_fun_builtin_fixed_t mp_builtin_callable_obj;
+ extern const mp_obj_fun_builtin_var_t mp_builtin_compile_obj;
+ extern const mp_obj_fun_builtin_fixed_t mp_builtin_chr_obj;
+ extern const mp_obj_fun_builtin_fixed_t mp_builtin_delattr_obj;
+ extern const mp_obj_fun_builtin_var_t mp_builtin_dir_obj;
+ extern const mp_obj_fun_builtin_fixed_t mp_builtin_divmod_obj;
+ extern const mp_obj_fun_builtin_var_t mp_builtin_eval_obj;
+ extern const mp_obj_fun_builtin_var_t mp_builtin_exec_obj;
+ extern const mp_obj_fun_builtin_var_t mp_builtin_execfile_obj;
+ extern const mp_obj_fun_builtin_var_t mp_builtin_getattr_obj;
+ extern const mp_obj_fun_builtin_fixed_t mp_builtin_setattr_obj;
+ extern const mp_obj_fun_builtin_fixed_t mp_builtin_globals_obj;
+ extern const mp_obj_fun_builtin_fixed_t mp_builtin_hasattr_obj;
+ extern const mp_obj_fun_builtin_fixed_t mp_builtin_hash_obj;
+ extern const mp_obj_fun_builtin_var_t mp_builtin_help_obj;
+ extern const mp_obj_fun_builtin_fixed_t mp_builtin_hex_obj;
+ extern const mp_obj_fun_builtin_fixed_t mp_builtin_id_obj;
+ extern const mp_obj_fun_builtin_fixed_t mp_builtin_isinstance_obj;
+ extern const mp_obj_fun_builtin_fixed_t mp_builtin_issubclass_obj;
+ extern const mp_obj_fun_builtin_fixed_t mp_builtin_iter_obj;
+ extern const mp_obj_fun_builtin_fixed_t mp_builtin_len_obj;
+ extern const mp_obj_fun_builtin_fixed_t mp_builtin_locals_obj;
+ extern const mp_obj_fun_builtin_var_t mp_builtin_max_obj;
+ extern const mp_obj_fun_builtin_var_t mp_builtin_min_obj;
+ 
+ 
+ 
+ extern const mp_obj_fun_builtin_fixed_t mp_builtin_next_obj;
+ 
+ extern const mp_obj_fun_builtin_fixed_t mp_builtin_oct_obj;
+ extern const mp_obj_fun_builtin_fixed_t mp_builtin_ord_obj;
+ extern const mp_obj_fun_builtin_var_t mp_builtin_pow_obj;
+ extern const mp_obj_fun_builtin_var_t mp_builtin_print_obj;
+ extern const mp_obj_fun_builtin_fixed_t mp_builtin_repr_obj;
+ extern const mp_obj_fun_builtin_var_t mp_builtin_round_obj;
+ extern const mp_obj_fun_builtin_var_t mp_builtin_sorted_obj;
+ extern const mp_obj_fun_builtin_var_t mp_builtin_sum_obj;
+ 
+ extern const mp_obj_fun_builtin_var_t mp_builtin_input_obj;
+ extern const mp_obj_fun_builtin_var_t mp_builtin_open_obj;
+ 
+ extern const mp_obj_fun_builtin_fixed_t mp_namedtuple_obj;
+ 
+ extern const mp_obj_fun_builtin_fixed_t mp_op_contains_obj;
+ extern const mp_obj_fun_builtin_fixed_t mp_op_getitem_obj;
+ extern const mp_obj_fun_builtin_fixed_t mp_op_setitem_obj;
+ extern const mp_obj_fun_builtin_fixed_t mp_op_delitem_obj;
+ 
+ extern const mp_obj_module_t mp_module___main__;
+ extern const mp_obj_module_t mp_module_builtins;
+ extern const mp_obj_module_t mp_module_uarray;
+ extern const mp_obj_module_t mp_module_collections;
+ extern const mp_obj_module_t mp_module_io;
+ extern const mp_obj_module_t mp_module_math;
+ extern const mp_obj_module_t mp_module_cmath;
+ extern const mp_obj_module_t mp_module_micropython;
+ extern const mp_obj_module_t mp_module_ustruct;
+ extern const mp_obj_module_t mp_module_sys;
+ extern const mp_obj_module_t mp_module_gc;
+ extern const mp_obj_module_t mp_module_thread;
+ 
+ extern const mp_obj_dict_t mp_module_builtins_globals;
+ 
+ 
+ extern const mp_obj_module_t mp_module_uasyncio;
+ extern const mp_obj_module_t mp_module_uerrno;
+ extern const mp_obj_module_t mp_module_uctypes;
+ extern const mp_obj_module_t mp_module_uzlib;
+ extern const mp_obj_module_t mp_module_ujson;
+ extern const mp_obj_module_t mp_module_ure;
+ extern const mp_obj_module_t mp_module_uheapq;
+ extern const mp_obj_module_t mp_module_uhashlib;
+ extern const mp_obj_module_t mp_module_ucryptolib;
+ extern const mp_obj_module_t mp_module_ubinascii;
+ extern const mp_obj_module_t mp_module_urandom;
+ extern const mp_obj_module_t mp_module_uselect;
+ extern const mp_obj_module_t mp_module_ussl;
+ extern const mp_obj_module_t mp_module_utimeq;
+ extern const mp_obj_module_t mp_module_machine;
+ extern const mp_obj_module_t mp_module_lwip;
+ extern const mp_obj_module_t mp_module_uwebsocket;
+ extern const mp_obj_module_t mp_module_webrepl;
+ extern const mp_obj_module_t mp_module_framebuf;
+ extern const mp_obj_module_t mp_module_btree;
+ extern const mp_obj_module_t mp_module_ubluetooth;
+ 
+ extern const char mp_help_default_text[];
+ # 35 "../py/objmodule.c" 2
+ 
+ # 1 "build/genhdr/moduledefs.h" 1
+ # 37 "../py/objmodule.c" 2
+ 
+ static void module_print(const mp_print_t *print, mp_obj_t self_in, mp_print_kind_t kind) {
+     (void)kind;
+     mp_obj_module_t *self = ((void*)self_in);
+ 
+     const char *module_name = "";
+     mp_map_elem_t *elem = mp_map_lookup(&self->globals->map, ((mp_obj_t)((((mp_uint_t)(MP_QSTR___name__)) << 2) | 2)), MP_MAP_LOOKUP);
+     if (elem != 
+ # 44 "../py/objmodule.c" 3 4
+                ((void *)0)
+ # 44 "../py/objmodule.c"
+                    ) {
+         module_name = mp_obj_str_get_str(elem->value);
+     }
+ # 58 "../py/objmodule.c"
+     mp_printf(print, "<module '%s'>", module_name);
+ }
+ 
+ static void module_attr(mp_obj_t self_in, qstr attr, mp_obj_t *dest) {
+     mp_obj_module_t *self = ((void*)self_in);
+     if (dest[0] == (((mp_obj_t)(void*)0))) {
+ 
+         mp_map_elem_t *elem = mp_map_lookup(&self->globals->map, ((mp_obj_t)((((mp_uint_t)(attr)) << 2) | 2)), MP_MAP_LOOKUP);
+         if (elem != 
+ # 66 "../py/objmodule.c" 3 4
+                    ((void *)0)
+ # 66 "../py/objmodule.c"
+                        ) {
+             dest[0] = elem->value;
+ 
+ 
+ 
+ 
+ 
+ 
+ 
+         }
+     } else {
+ 
+         mp_obj_dict_t *dict = self->globals;
+         if (dict->map.is_fixed) {
+ # 88 "../py/objmodule.c"
+             {
+ 
+                 return;
+             }
+         }
+         if (dest[1] == (((mp_obj_t)(void*)0))) {
+ 
+             mp_obj_dict_delete(((mp_obj_t)dict), ((mp_obj_t)((((mp_uint_t)(attr)) << 2) | 2)));
+         } else {
+ 
+             mp_obj_dict_store(((mp_obj_t)dict), ((mp_obj_t)((((mp_uint_t)(attr)) << 2) | 2)), dest[1]);
+         }
+         dest[0] = (((mp_obj_t)(void*)0));
+     }
+ }
+ 
+ const mp_obj_type_t mp_type_module = {
+     { &mp_type_type },
+     .name = MP_QSTR_module,
+     .print = module_print,
+     .attr = module_attr,
+ };
+ 
+ mp_obj_t mp_obj_new_module(qstr module_name) {
+     mp_map_t *mp_loaded_modules_map = &(mp_state_ctx.vm.mp_loaded_modules_dict).map;
+     mp_map_elem_t *el = mp_map_lookup(mp_loaded_modules_map, ((mp_obj_t)((((mp_uint_t)(module_name)) << 2) | 2)), MP_MAP_LOOKUP_ADD_IF_NOT_FOUND);
+ 
+ 
+     if (el->value != (((mp_obj_t)(void*)0))) {
+         return el->value;
+     }
+ 
+ 
+     mp_obj_module_t *o = (((mp_obj_module_t*)(m_malloc(sizeof(mp_obj_module_t) * (1)))));
+     o->base.type = &mp_type_module;
+     o->globals = ((void*)mp_obj_new_dict((1)));
+ 
+ 
+     mp_obj_dict_store(((mp_obj_t)o->globals), ((mp_obj_t)((((mp_uint_t)(MP_QSTR___name__)) << 2) | 2)), ((mp_obj_t)((((mp_uint_t)(module_name)) << 2) | 2)));
+ 
+ 
+     el->value = ((mp_obj_t)o);
+ 
+ 
+     return ((mp_obj_t)o);
+ }
+ 
+ 
+ 
+ 
+ static const mp_rom_map_elem_t mp_builtin_module_table[] = {
+     { ((mp_obj_t)((((mp_uint_t)(MP_QSTR___main__)) << 2) | 2)), (&mp_module___main__) },
+     { ((mp_obj_t)((((mp_uint_t)(MP_QSTR_builtins)) << 2) | 2)), (&mp_module_builtins) },
+     { ((mp_obj_t)((((mp_uint_t)(MP_QSTR_micropython)) << 2) | 2)), (&mp_module_micropython) },
+ # 150 "../py/objmodule.c"
+     { ((mp_obj_t)((((mp_uint_t)(MP_QSTR_ustruct)) << 2) | 2)), (&mp_module_ustruct) },
+ # 234 "../py/objmodule.c"
+    
+ 
+ 
+ 
+    
+ 
+ };
+ 
+ const mp_map_t mp_builtin_module_map = { .all_keys_are_qstrs = 1, .is_fixed = 1, .is_ordered = 1, .used = (sizeof(mp_builtin_module_table) / sizeof((mp_builtin_module_table)[0])), .alloc = (sizeof(mp_builtin_module_table) / sizeof((mp_builtin_module_table)[0])), .table = (mp_map_elem_t*)(mp_rom_map_elem_t*)mp_builtin_module_table, };
+ 
+ 
+ mp_obj_t mp_module_get(qstr module_name) {
+     mp_map_t *mp_loaded_modules_map = &(mp_state_ctx.vm.mp_loaded_modules_dict).map;
+ 
+     mp_map_elem_t *el = mp_map_lookup(mp_loaded_modules_map, ((mp_obj_t)((((mp_uint_t)(module_name)) << 2) | 2)), MP_MAP_LOOKUP);
+ 
+     if (el == 
+ # 250 "../py/objmodule.c" 3 4
+              ((void *)0)
+ # 250 "../py/objmodule.c"
+                  ) {
+ 
+         el = mp_map_lookup((mp_map_t*)&mp_builtin_module_map, ((mp_obj_t)((((mp_uint_t)(module_name)) << 2) | 2)), MP_MAP_LOOKUP);
+         if (el == 
+ # 253 "../py/objmodule.c" 3 4
+                  ((void *)0)
+ # 253 "../py/objmodule.c"
+                      ) {
+             return (((mp_obj_t)(void*)0));
+         }
+         mp_module_call_init(module_name, el->value);
+     }
+ 
+ 
+     return el->value;
+ }
+ 
+ void mp_module_register(qstr qst, mp_obj_t module) {
+     mp_map_t *mp_loaded_modules_map = &(mp_state_ctx.vm.mp_loaded_modules_dict).map;
+     mp_map_lookup(mp_loaded_modules_map, ((mp_obj_t)((((mp_uint_t)(qst)) << 2) | 2)), MP_MAP_LOOKUP_ADD_IF_NOT_FOUND)->value = module;
+ }
+ # 1 "build/genhdr/moduledefs.h"
+ # 1 "<built-in>"
+ # 1 "<command-line>"
+ # 1 "/usr/include/stdc-predef.h" 1 3 4
+ # 1 "<command-line>" 2
+ # 1 "build/genhdr/moduledefs.h"
Binary files MicorpythonOriginal1.12/micropython/mpy-cross/build/main.o and micropython1.12_withUlab/micropython/mpy-cross/build/main.o differ
diff -crNb MicorpythonOriginal1.12/micropython/mpy-cross/build/main.P micropython1.12_withUlab/micropython/mpy-cross/build/main.P
*** MicorpythonOriginal1.12/micropython/mpy-cross/build/main.P	1970-01-01 02:00:00.000000000 +0200
--- micropython1.12_withUlab/micropython/mpy-cross/build/main.P	2020-06-19 18:37:39.487505645 +0200
***************
*** 0 ****
--- 1,150 ----
+ build/main.o: main.c /usr/include/stdc-predef.h /usr/include/stdio.h \
+  /usr/include/x86_64-linux-gnu/bits/libc-header-start.h \
+  /usr/include/features.h /usr/include/x86_64-linux-gnu/sys/cdefs.h \
+  /usr/include/x86_64-linux-gnu/bits/wordsize.h \
+  /usr/include/x86_64-linux-gnu/bits/long-double.h \
+  /usr/include/x86_64-linux-gnu/gnu/stubs.h \
+  /usr/include/x86_64-linux-gnu/gnu/stubs-64.h \
+  /usr/lib/gcc/x86_64-linux-gnu/7/include/stddef.h \
+  /usr/include/x86_64-linux-gnu/bits/types.h \
+  /usr/include/x86_64-linux-gnu/bits/typesizes.h \
+  /usr/include/x86_64-linux-gnu/bits/types/__FILE.h \
+  /usr/include/x86_64-linux-gnu/bits/types/FILE.h \
+  /usr/include/x86_64-linux-gnu/bits/libio.h \
+  /usr/include/x86_64-linux-gnu/bits/_G_config.h \
+  /usr/include/x86_64-linux-gnu/bits/types/__mbstate_t.h \
+  /usr/lib/gcc/x86_64-linux-gnu/7/include/stdarg.h \
+  /usr/include/x86_64-linux-gnu/bits/stdio_lim.h \
+  /usr/include/x86_64-linux-gnu/bits/sys_errlist.h \
+  /usr/include/x86_64-linux-gnu/bits/stdio2.h /usr/include/string.h \
+  /usr/include/x86_64-linux-gnu/bits/types/locale_t.h \
+  /usr/include/x86_64-linux-gnu/bits/types/__locale_t.h \
+  /usr/include/strings.h \
+  /usr/include/x86_64-linux-gnu/bits/strings_fortified.h \
+  /usr/include/x86_64-linux-gnu/bits/string_fortified.h \
+  /usr/include/stdlib.h /usr/include/x86_64-linux-gnu/bits/waitflags.h \
+  /usr/include/x86_64-linux-gnu/bits/waitstatus.h \
+  /usr/include/x86_64-linux-gnu/bits/floatn.h \
+  /usr/include/x86_64-linux-gnu/bits/floatn-common.h \
+  /usr/include/x86_64-linux-gnu/sys/types.h \
+  /usr/include/x86_64-linux-gnu/bits/types/clock_t.h \
+  /usr/include/x86_64-linux-gnu/bits/types/clockid_t.h \
+  /usr/include/x86_64-linux-gnu/bits/types/time_t.h \
+  /usr/include/x86_64-linux-gnu/bits/types/timer_t.h \
+  /usr/include/x86_64-linux-gnu/bits/stdint-intn.h /usr/include/endian.h \
+  /usr/include/x86_64-linux-gnu/bits/endian.h \
+  /usr/include/x86_64-linux-gnu/bits/byteswap.h \
+  /usr/include/x86_64-linux-gnu/bits/byteswap-16.h \
+  /usr/include/x86_64-linux-gnu/bits/uintn-identity.h \
+  /usr/include/x86_64-linux-gnu/sys/select.h \
+  /usr/include/x86_64-linux-gnu/bits/select.h \
+  /usr/include/x86_64-linux-gnu/bits/types/sigset_t.h \
+  /usr/include/x86_64-linux-gnu/bits/types/__sigset_t.h \
+  /usr/include/x86_64-linux-gnu/bits/types/struct_timeval.h \
+  /usr/include/x86_64-linux-gnu/bits/types/struct_timespec.h \
+  /usr/include/x86_64-linux-gnu/bits/select2.h \
+  /usr/include/x86_64-linux-gnu/sys/sysmacros.h \
+  /usr/include/x86_64-linux-gnu/bits/sysmacros.h \
+  /usr/include/x86_64-linux-gnu/bits/pthreadtypes.h \
+  /usr/include/x86_64-linux-gnu/bits/thread-shared-types.h \
+  /usr/include/x86_64-linux-gnu/bits/pthreadtypes-arch.h \
+  /usr/include/alloca.h /usr/include/x86_64-linux-gnu/bits/stdlib-float.h \
+  /usr/include/x86_64-linux-gnu/bits/stdlib.h /usr/include/unistd.h \
+  /usr/include/x86_64-linux-gnu/bits/posix_opt.h \
+  /usr/include/x86_64-linux-gnu/bits/environments.h \
+  /usr/include/x86_64-linux-gnu/bits/confname.h \
+  /usr/include/x86_64-linux-gnu/bits/getopt_posix.h \
+  /usr/include/x86_64-linux-gnu/bits/getopt_core.h \
+  /usr/include/x86_64-linux-gnu/bits/unistd.h ../py/compile.h \
+  ../py/lexer.h /usr/lib/gcc/x86_64-linux-gnu/7/include/stdint.h \
+  /usr/include/stdint.h /usr/include/x86_64-linux-gnu/bits/wchar.h \
+  /usr/include/x86_64-linux-gnu/bits/stdint-uintn.h ../py/mpconfig.h \
+  mpconfigport.h ../py/qstr.h ../py/misc.h \
+  /usr/lib/gcc/x86_64-linux-gnu/7/include/stdbool.h \
+  build/genhdr/qstrdefs.generated.h ../py/reader.h ../py/obj.h \
+  ../py/mpprint.h ../py/runtime0.h ../py/parse.h ../py/emitglue.h \
+  ../py/bc.h ../py/runtime.h ../py/mpstate.h ../py/mpthread.h ../py/nlr.h \
+  /usr/lib/gcc/x86_64-linux-gnu/7/include-fixed/limits.h \
+  /usr/lib/gcc/x86_64-linux-gnu/7/include-fixed/syslimits.h \
+  /usr/include/limits.h /usr/include/x86_64-linux-gnu/bits/posix1_lim.h \
+  /usr/include/x86_64-linux-gnu/bits/local_lim.h \
+  /usr/include/linux/limits.h \
+  /usr/include/x86_64-linux-gnu/bits/posix2_lim.h /usr/include/assert.h \
+  ../py/objlist.h ../py/objexcept.h ../py/objtuple.h ../py/pystack.h \
+  ../py/objfun.h ../py/persistentcode.h ../py/gc.h ../py/stackctrl.h \
+  build/genhdr/mpversion.h
+ main.c /usr/include/stdc-predef.h /usr/include/stdio.h :
+  /usr/include/x86_64-linux-gnu/bits/libc-header-start.h :
+  /usr/include/features.h /usr/include/x86_64-linux-gnu/sys/cdefs.h :
+  /usr/include/x86_64-linux-gnu/bits/wordsize.h :
+  /usr/include/x86_64-linux-gnu/bits/long-double.h :
+  /usr/include/x86_64-linux-gnu/gnu/stubs.h :
+  /usr/include/x86_64-linux-gnu/gnu/stubs-64.h :
+  /usr/lib/gcc/x86_64-linux-gnu/7/include/stddef.h :
+  /usr/include/x86_64-linux-gnu/bits/types.h :
+  /usr/include/x86_64-linux-gnu/bits/typesizes.h :
+  /usr/include/x86_64-linux-gnu/bits/types/__FILE.h :
+  /usr/include/x86_64-linux-gnu/bits/types/FILE.h :
+  /usr/include/x86_64-linux-gnu/bits/libio.h :
+  /usr/include/x86_64-linux-gnu/bits/_G_config.h :
+  /usr/include/x86_64-linux-gnu/bits/types/__mbstate_t.h :
+  /usr/lib/gcc/x86_64-linux-gnu/7/include/stdarg.h :
+  /usr/include/x86_64-linux-gnu/bits/stdio_lim.h :
+  /usr/include/x86_64-linux-gnu/bits/sys_errlist.h :
+  /usr/include/x86_64-linux-gnu/bits/stdio2.h /usr/include/string.h :
+  /usr/include/x86_64-linux-gnu/bits/types/locale_t.h :
+  /usr/include/x86_64-linux-gnu/bits/types/__locale_t.h :
+  /usr/include/strings.h :
+  /usr/include/x86_64-linux-gnu/bits/strings_fortified.h :
+  /usr/include/x86_64-linux-gnu/bits/string_fortified.h :
+  /usr/include/stdlib.h /usr/include/x86_64-linux-gnu/bits/waitflags.h :
+  /usr/include/x86_64-linux-gnu/bits/waitstatus.h :
+  /usr/include/x86_64-linux-gnu/bits/floatn.h :
+  /usr/include/x86_64-linux-gnu/bits/floatn-common.h :
+  /usr/include/x86_64-linux-gnu/sys/types.h :
+  /usr/include/x86_64-linux-gnu/bits/types/clock_t.h :
+  /usr/include/x86_64-linux-gnu/bits/types/clockid_t.h :
+  /usr/include/x86_64-linux-gnu/bits/types/time_t.h :
+  /usr/include/x86_64-linux-gnu/bits/types/timer_t.h :
+  /usr/include/x86_64-linux-gnu/bits/stdint-intn.h /usr/include/endian.h :
+  /usr/include/x86_64-linux-gnu/bits/endian.h :
+  /usr/include/x86_64-linux-gnu/bits/byteswap.h :
+  /usr/include/x86_64-linux-gnu/bits/byteswap-16.h :
+  /usr/include/x86_64-linux-gnu/bits/uintn-identity.h :
+  /usr/include/x86_64-linux-gnu/sys/select.h :
+  /usr/include/x86_64-linux-gnu/bits/select.h :
+  /usr/include/x86_64-linux-gnu/bits/types/sigset_t.h :
+  /usr/include/x86_64-linux-gnu/bits/types/__sigset_t.h :
+  /usr/include/x86_64-linux-gnu/bits/types/struct_timeval.h :
+  /usr/include/x86_64-linux-gnu/bits/types/struct_timespec.h :
+  /usr/include/x86_64-linux-gnu/bits/select2.h :
+  /usr/include/x86_64-linux-gnu/sys/sysmacros.h :
+  /usr/include/x86_64-linux-gnu/bits/sysmacros.h :
+  /usr/include/x86_64-linux-gnu/bits/pthreadtypes.h :
+  /usr/include/x86_64-linux-gnu/bits/thread-shared-types.h :
+  /usr/include/x86_64-linux-gnu/bits/pthreadtypes-arch.h :
+  /usr/include/alloca.h /usr/include/x86_64-linux-gnu/bits/stdlib-float.h :
+  /usr/include/x86_64-linux-gnu/bits/stdlib.h /usr/include/unistd.h :
+  /usr/include/x86_64-linux-gnu/bits/posix_opt.h :
+  /usr/include/x86_64-linux-gnu/bits/environments.h :
+  /usr/include/x86_64-linux-gnu/bits/confname.h :
+  /usr/include/x86_64-linux-gnu/bits/getopt_posix.h :
+  /usr/include/x86_64-linux-gnu/bits/getopt_core.h :
+  /usr/include/x86_64-linux-gnu/bits/unistd.h ../py/compile.h :
+  ../py/lexer.h /usr/lib/gcc/x86_64-linux-gnu/7/include/stdint.h :
+  /usr/include/stdint.h /usr/include/x86_64-linux-gnu/bits/wchar.h :
+  /usr/include/x86_64-linux-gnu/bits/stdint-uintn.h ../py/mpconfig.h :
+  mpconfigport.h ../py/qstr.h ../py/misc.h :
+  /usr/lib/gcc/x86_64-linux-gnu/7/include/stdbool.h :
+  build/genhdr/qstrdefs.generated.h ../py/reader.h ../py/obj.h :
+  ../py/mpprint.h ../py/runtime0.h ../py/parse.h ../py/emitglue.h :
+  ../py/bc.h ../py/runtime.h ../py/mpstate.h ../py/mpthread.h ../py/nlr.h :
+  /usr/lib/gcc/x86_64-linux-gnu/7/include-fixed/limits.h :
+  /usr/lib/gcc/x86_64-linux-gnu/7/include-fixed/syslimits.h :
+  /usr/include/limits.h /usr/include/x86_64-linux-gnu/bits/posix1_lim.h :
+  /usr/include/x86_64-linux-gnu/bits/local_lim.h :
+  /usr/include/linux/limits.h :
+  /usr/include/x86_64-linux-gnu/bits/posix2_lim.h /usr/include/assert.h :
+  ../py/objlist.h ../py/objexcept.h ../py/objtuple.h ../py/pystack.h :
+  ../py/objfun.h ../py/persistentcode.h ../py/gc.h ../py/stackctrl.h :
+  build/genhdr/mpversion.h :
Binary files MicorpythonOriginal1.12/micropython/mpy-cross/build/py/argcheck.o and micropython1.12_withUlab/micropython/mpy-cross/build/py/argcheck.o differ
diff -crNb MicorpythonOriginal1.12/micropython/mpy-cross/build/py/argcheck.P micropython1.12_withUlab/micropython/mpy-cross/build/py/argcheck.P
*** MicorpythonOriginal1.12/micropython/mpy-cross/build/py/argcheck.P	1970-01-01 02:00:00.000000000 +0200
--- micropython1.12_withUlab/micropython/mpy-cross/build/py/argcheck.P	2020-06-19 18:37:36.555568251 +0200
***************
*** 0 ****
--- 1,106 ----
+ build/py/argcheck.o: ../py/argcheck.c /usr/include/stdc-predef.h \
+  /usr/include/stdlib.h \
+  /usr/include/x86_64-linux-gnu/bits/libc-header-start.h \
+  /usr/include/features.h /usr/include/x86_64-linux-gnu/sys/cdefs.h \
+  /usr/include/x86_64-linux-gnu/bits/wordsize.h \
+  /usr/include/x86_64-linux-gnu/bits/long-double.h \
+  /usr/include/x86_64-linux-gnu/gnu/stubs.h \
+  /usr/include/x86_64-linux-gnu/gnu/stubs-64.h \
+  /usr/lib/gcc/x86_64-linux-gnu/7/include/stddef.h \
+  /usr/include/x86_64-linux-gnu/bits/waitflags.h \
+  /usr/include/x86_64-linux-gnu/bits/waitstatus.h \
+  /usr/include/x86_64-linux-gnu/bits/floatn.h \
+  /usr/include/x86_64-linux-gnu/bits/floatn-common.h \
+  /usr/include/x86_64-linux-gnu/sys/types.h \
+  /usr/include/x86_64-linux-gnu/bits/types.h \
+  /usr/include/x86_64-linux-gnu/bits/typesizes.h \
+  /usr/include/x86_64-linux-gnu/bits/types/clock_t.h \
+  /usr/include/x86_64-linux-gnu/bits/types/clockid_t.h \
+  /usr/include/x86_64-linux-gnu/bits/types/time_t.h \
+  /usr/include/x86_64-linux-gnu/bits/types/timer_t.h \
+  /usr/include/x86_64-linux-gnu/bits/stdint-intn.h /usr/include/endian.h \
+  /usr/include/x86_64-linux-gnu/bits/endian.h \
+  /usr/include/x86_64-linux-gnu/bits/byteswap.h \
+  /usr/include/x86_64-linux-gnu/bits/byteswap-16.h \
+  /usr/include/x86_64-linux-gnu/bits/uintn-identity.h \
+  /usr/include/x86_64-linux-gnu/sys/select.h \
+  /usr/include/x86_64-linux-gnu/bits/select.h \
+  /usr/include/x86_64-linux-gnu/bits/types/sigset_t.h \
+  /usr/include/x86_64-linux-gnu/bits/types/__sigset_t.h \
+  /usr/include/x86_64-linux-gnu/bits/types/struct_timeval.h \
+  /usr/include/x86_64-linux-gnu/bits/types/struct_timespec.h \
+  /usr/include/x86_64-linux-gnu/bits/select2.h \
+  /usr/include/x86_64-linux-gnu/sys/sysmacros.h \
+  /usr/include/x86_64-linux-gnu/bits/sysmacros.h \
+  /usr/include/x86_64-linux-gnu/bits/pthreadtypes.h \
+  /usr/include/x86_64-linux-gnu/bits/thread-shared-types.h \
+  /usr/include/x86_64-linux-gnu/bits/pthreadtypes-arch.h \
+  /usr/include/alloca.h /usr/include/x86_64-linux-gnu/bits/stdlib-float.h \
+  /usr/include/x86_64-linux-gnu/bits/stdlib.h /usr/include/assert.h \
+  ../py/runtime.h ../py/mpstate.h \
+  /usr/lib/gcc/x86_64-linux-gnu/7/include/stdint.h /usr/include/stdint.h \
+  /usr/include/x86_64-linux-gnu/bits/wchar.h \
+  /usr/include/x86_64-linux-gnu/bits/stdint-uintn.h ../py/mpconfig.h \
+  mpconfigport.h ../py/mpthread.h ../py/misc.h \
+  /usr/lib/gcc/x86_64-linux-gnu/7/include/stdbool.h ../py/nlr.h \
+  /usr/lib/gcc/x86_64-linux-gnu/7/include-fixed/limits.h \
+  /usr/lib/gcc/x86_64-linux-gnu/7/include-fixed/syslimits.h \
+  /usr/include/limits.h /usr/include/x86_64-linux-gnu/bits/posix1_lim.h \
+  /usr/include/x86_64-linux-gnu/bits/local_lim.h \
+  /usr/include/linux/limits.h \
+  /usr/include/x86_64-linux-gnu/bits/posix2_lim.h ../py/obj.h ../py/qstr.h \
+  build/genhdr/qstrdefs.generated.h ../py/mpprint.h ../py/runtime0.h \
+  ../py/objlist.h ../py/objexcept.h ../py/objtuple.h ../py/pystack.h
+ ../py/argcheck.c /usr/include/stdc-predef.h :
+  /usr/include/stdlib.h :
+  /usr/include/x86_64-linux-gnu/bits/libc-header-start.h :
+  /usr/include/features.h /usr/include/x86_64-linux-gnu/sys/cdefs.h :
+  /usr/include/x86_64-linux-gnu/bits/wordsize.h :
+  /usr/include/x86_64-linux-gnu/bits/long-double.h :
+  /usr/include/x86_64-linux-gnu/gnu/stubs.h :
+  /usr/include/x86_64-linux-gnu/gnu/stubs-64.h :
+  /usr/lib/gcc/x86_64-linux-gnu/7/include/stddef.h :
+  /usr/include/x86_64-linux-gnu/bits/waitflags.h :
+  /usr/include/x86_64-linux-gnu/bits/waitstatus.h :
+  /usr/include/x86_64-linux-gnu/bits/floatn.h :
+  /usr/include/x86_64-linux-gnu/bits/floatn-common.h :
+  /usr/include/x86_64-linux-gnu/sys/types.h :
+  /usr/include/x86_64-linux-gnu/bits/types.h :
+  /usr/include/x86_64-linux-gnu/bits/typesizes.h :
+  /usr/include/x86_64-linux-gnu/bits/types/clock_t.h :
+  /usr/include/x86_64-linux-gnu/bits/types/clockid_t.h :
+  /usr/include/x86_64-linux-gnu/bits/types/time_t.h :
+  /usr/include/x86_64-linux-gnu/bits/types/timer_t.h :
+  /usr/include/x86_64-linux-gnu/bits/stdint-intn.h /usr/include/endian.h :
+  /usr/include/x86_64-linux-gnu/bits/endian.h :
+  /usr/include/x86_64-linux-gnu/bits/byteswap.h :
+  /usr/include/x86_64-linux-gnu/bits/byteswap-16.h :
+  /usr/include/x86_64-linux-gnu/bits/uintn-identity.h :
+  /usr/include/x86_64-linux-gnu/sys/select.h :
+  /usr/include/x86_64-linux-gnu/bits/select.h :
+  /usr/include/x86_64-linux-gnu/bits/types/sigset_t.h :
+  /usr/include/x86_64-linux-gnu/bits/types/__sigset_t.h :
+  /usr/include/x86_64-linux-gnu/bits/types/struct_timeval.h :
+  /usr/include/x86_64-linux-gnu/bits/types/struct_timespec.h :
+  /usr/include/x86_64-linux-gnu/bits/select2.h :
+  /usr/include/x86_64-linux-gnu/sys/sysmacros.h :
+  /usr/include/x86_64-linux-gnu/bits/sysmacros.h :
+  /usr/include/x86_64-linux-gnu/bits/pthreadtypes.h :
+  /usr/include/x86_64-linux-gnu/bits/thread-shared-types.h :
+  /usr/include/x86_64-linux-gnu/bits/pthreadtypes-arch.h :
+  /usr/include/alloca.h /usr/include/x86_64-linux-gnu/bits/stdlib-float.h :
+  /usr/include/x86_64-linux-gnu/bits/stdlib.h /usr/include/assert.h :
+  ../py/runtime.h ../py/mpstate.h :
+  /usr/lib/gcc/x86_64-linux-gnu/7/include/stdint.h /usr/include/stdint.h :
+  /usr/include/x86_64-linux-gnu/bits/wchar.h :
+  /usr/include/x86_64-linux-gnu/bits/stdint-uintn.h ../py/mpconfig.h :
+  mpconfigport.h ../py/mpthread.h ../py/misc.h :
+  /usr/lib/gcc/x86_64-linux-gnu/7/include/stdbool.h ../py/nlr.h :
+  /usr/lib/gcc/x86_64-linux-gnu/7/include-fixed/limits.h :
+  /usr/lib/gcc/x86_64-linux-gnu/7/include-fixed/syslimits.h :
+  /usr/include/limits.h /usr/include/x86_64-linux-gnu/bits/posix1_lim.h :
+  /usr/include/x86_64-linux-gnu/bits/local_lim.h :
+  /usr/include/linux/limits.h :
+  /usr/include/x86_64-linux-gnu/bits/posix2_lim.h ../py/obj.h ../py/qstr.h :
+  build/genhdr/qstrdefs.generated.h ../py/mpprint.h ../py/runtime0.h :
+  ../py/objlist.h ../py/objexcept.h ../py/objtuple.h ../py/pystack.h :
Binary files MicorpythonOriginal1.12/micropython/mpy-cross/build/py/asmarm.o and micropython1.12_withUlab/micropython/mpy-cross/build/py/asmarm.o differ
diff -crNb MicorpythonOriginal1.12/micropython/mpy-cross/build/py/asmarm.P micropython1.12_withUlab/micropython/mpy-cross/build/py/asmarm.P
*** MicorpythonOriginal1.12/micropython/mpy-cross/build/py/asmarm.P	1970-01-01 02:00:00.000000000 +0200
--- micropython1.12_withUlab/micropython/mpy-cross/build/py/asmarm.P	2020-06-14 15:06:51.771499328 +0200
***************
*** 0 ****
--- 1,66 ----
+ build/py/asmarm.o: ../py/asmarm.c /usr/include/stdc-predef.h \
+  /usr/include/stdio.h \
+  /usr/include/x86_64-linux-gnu/bits/libc-header-start.h \
+  /usr/include/features.h /usr/include/x86_64-linux-gnu/sys/cdefs.h \
+  /usr/include/x86_64-linux-gnu/bits/wordsize.h \
+  /usr/include/x86_64-linux-gnu/bits/long-double.h \
+  /usr/include/x86_64-linux-gnu/gnu/stubs.h \
+  /usr/include/x86_64-linux-gnu/gnu/stubs-64.h \
+  /usr/lib/gcc/x86_64-linux-gnu/7/include/stddef.h \
+  /usr/include/x86_64-linux-gnu/bits/types.h \
+  /usr/include/x86_64-linux-gnu/bits/typesizes.h \
+  /usr/include/x86_64-linux-gnu/bits/types/__FILE.h \
+  /usr/include/x86_64-linux-gnu/bits/types/FILE.h \
+  /usr/include/x86_64-linux-gnu/bits/libio.h \
+  /usr/include/x86_64-linux-gnu/bits/_G_config.h \
+  /usr/include/x86_64-linux-gnu/bits/types/__mbstate_t.h \
+  /usr/lib/gcc/x86_64-linux-gnu/7/include/stdarg.h \
+  /usr/include/x86_64-linux-gnu/bits/stdio_lim.h \
+  /usr/include/x86_64-linux-gnu/bits/sys_errlist.h \
+  /usr/include/x86_64-linux-gnu/bits/stdio2.h /usr/include/assert.h \
+  /usr/include/string.h \
+  /usr/include/x86_64-linux-gnu/bits/types/locale_t.h \
+  /usr/include/x86_64-linux-gnu/bits/types/__locale_t.h \
+  /usr/include/strings.h \
+  /usr/include/x86_64-linux-gnu/bits/strings_fortified.h \
+  /usr/include/x86_64-linux-gnu/bits/string_fortified.h ../py/mpconfig.h \
+  mpconfigport.h /usr/include/alloca.h \
+  /usr/lib/gcc/x86_64-linux-gnu/7/include/stdint.h /usr/include/stdint.h \
+  /usr/include/x86_64-linux-gnu/bits/wchar.h \
+  /usr/include/x86_64-linux-gnu/bits/stdint-intn.h \
+  /usr/include/x86_64-linux-gnu/bits/stdint-uintn.h ../py/asmarm.h \
+  ../py/misc.h /usr/lib/gcc/x86_64-linux-gnu/7/include/stdbool.h \
+  ../py/asmbase.h
+ ../py/asmarm.c /usr/include/stdc-predef.h :
+  /usr/include/stdio.h :
+  /usr/include/x86_64-linux-gnu/bits/libc-header-start.h :
+  /usr/include/features.h /usr/include/x86_64-linux-gnu/sys/cdefs.h :
+  /usr/include/x86_64-linux-gnu/bits/wordsize.h :
+  /usr/include/x86_64-linux-gnu/bits/long-double.h :
+  /usr/include/x86_64-linux-gnu/gnu/stubs.h :
+  /usr/include/x86_64-linux-gnu/gnu/stubs-64.h :
+  /usr/lib/gcc/x86_64-linux-gnu/7/include/stddef.h :
+  /usr/include/x86_64-linux-gnu/bits/types.h :
+  /usr/include/x86_64-linux-gnu/bits/typesizes.h :
+  /usr/include/x86_64-linux-gnu/bits/types/__FILE.h :
+  /usr/include/x86_64-linux-gnu/bits/types/FILE.h :
+  /usr/include/x86_64-linux-gnu/bits/libio.h :
+  /usr/include/x86_64-linux-gnu/bits/_G_config.h :
+  /usr/include/x86_64-linux-gnu/bits/types/__mbstate_t.h :
+  /usr/lib/gcc/x86_64-linux-gnu/7/include/stdarg.h :
+  /usr/include/x86_64-linux-gnu/bits/stdio_lim.h :
+  /usr/include/x86_64-linux-gnu/bits/sys_errlist.h :
+  /usr/include/x86_64-linux-gnu/bits/stdio2.h /usr/include/assert.h :
+  /usr/include/string.h :
+  /usr/include/x86_64-linux-gnu/bits/types/locale_t.h :
+  /usr/include/x86_64-linux-gnu/bits/types/__locale_t.h :
+  /usr/include/strings.h :
+  /usr/include/x86_64-linux-gnu/bits/strings_fortified.h :
+  /usr/include/x86_64-linux-gnu/bits/string_fortified.h ../py/mpconfig.h :
+  mpconfigport.h /usr/include/alloca.h :
+  /usr/lib/gcc/x86_64-linux-gnu/7/include/stdint.h /usr/include/stdint.h :
+  /usr/include/x86_64-linux-gnu/bits/wchar.h :
+  /usr/include/x86_64-linux-gnu/bits/stdint-intn.h :
+  /usr/include/x86_64-linux-gnu/bits/stdint-uintn.h ../py/asmarm.h :
+  ../py/misc.h /usr/lib/gcc/x86_64-linux-gnu/7/include/stdbool.h :
+  ../py/asmbase.h :
Binary files MicorpythonOriginal1.12/micropython/mpy-cross/build/py/asmbase.o and micropython1.12_withUlab/micropython/mpy-cross/build/py/asmbase.o differ
diff -crNb MicorpythonOriginal1.12/micropython/mpy-cross/build/py/asmbase.P micropython1.12_withUlab/micropython/mpy-cross/build/py/asmbase.P
*** MicorpythonOriginal1.12/micropython/mpy-cross/build/py/asmbase.P	1970-01-01 02:00:00.000000000 +0200
--- micropython1.12_withUlab/micropython/mpy-cross/build/py/asmbase.P	2020-06-19 18:37:34.103621013 +0200
***************
*** 0 ****
--- 1,48 ----
+ build/py/asmbase.o: ../py/asmbase.c /usr/include/stdc-predef.h \
+  /usr/include/assert.h /usr/include/features.h \
+  /usr/include/x86_64-linux-gnu/sys/cdefs.h \
+  /usr/include/x86_64-linux-gnu/bits/wordsize.h \
+  /usr/include/x86_64-linux-gnu/bits/long-double.h \
+  /usr/include/x86_64-linux-gnu/gnu/stubs.h \
+  /usr/include/x86_64-linux-gnu/gnu/stubs-64.h /usr/include/string.h \
+  /usr/include/x86_64-linux-gnu/bits/libc-header-start.h \
+  /usr/lib/gcc/x86_64-linux-gnu/7/include/stddef.h \
+  /usr/include/x86_64-linux-gnu/bits/types/locale_t.h \
+  /usr/include/x86_64-linux-gnu/bits/types/__locale_t.h \
+  /usr/include/strings.h \
+  /usr/include/x86_64-linux-gnu/bits/strings_fortified.h \
+  /usr/include/x86_64-linux-gnu/bits/string_fortified.h ../py/obj.h \
+  ../py/mpconfig.h mpconfigport.h /usr/include/alloca.h \
+  /usr/lib/gcc/x86_64-linux-gnu/7/include/stdint.h /usr/include/stdint.h \
+  /usr/include/x86_64-linux-gnu/bits/types.h \
+  /usr/include/x86_64-linux-gnu/bits/typesizes.h \
+  /usr/include/x86_64-linux-gnu/bits/wchar.h \
+  /usr/include/x86_64-linux-gnu/bits/stdint-intn.h \
+  /usr/include/x86_64-linux-gnu/bits/stdint-uintn.h ../py/misc.h \
+  /usr/lib/gcc/x86_64-linux-gnu/7/include/stdbool.h ../py/qstr.h \
+  build/genhdr/qstrdefs.generated.h ../py/mpprint.h ../py/runtime0.h \
+  ../py/asmbase.h
+ ../py/asmbase.c /usr/include/stdc-predef.h :
+  /usr/include/assert.h /usr/include/features.h :
+  /usr/include/x86_64-linux-gnu/sys/cdefs.h :
+  /usr/include/x86_64-linux-gnu/bits/wordsize.h :
+  /usr/include/x86_64-linux-gnu/bits/long-double.h :
+  /usr/include/x86_64-linux-gnu/gnu/stubs.h :
+  /usr/include/x86_64-linux-gnu/gnu/stubs-64.h /usr/include/string.h :
+  /usr/include/x86_64-linux-gnu/bits/libc-header-start.h :
+  /usr/lib/gcc/x86_64-linux-gnu/7/include/stddef.h :
+  /usr/include/x86_64-linux-gnu/bits/types/locale_t.h :
+  /usr/include/x86_64-linux-gnu/bits/types/__locale_t.h :
+  /usr/include/strings.h :
+  /usr/include/x86_64-linux-gnu/bits/strings_fortified.h :
+  /usr/include/x86_64-linux-gnu/bits/string_fortified.h ../py/obj.h :
+  ../py/mpconfig.h mpconfigport.h /usr/include/alloca.h :
+  /usr/lib/gcc/x86_64-linux-gnu/7/include/stdint.h /usr/include/stdint.h :
+  /usr/include/x86_64-linux-gnu/bits/types.h :
+  /usr/include/x86_64-linux-gnu/bits/typesizes.h :
+  /usr/include/x86_64-linux-gnu/bits/wchar.h :
+  /usr/include/x86_64-linux-gnu/bits/stdint-intn.h :
+  /usr/include/x86_64-linux-gnu/bits/stdint-uintn.h ../py/misc.h :
+  /usr/lib/gcc/x86_64-linux-gnu/7/include/stdbool.h ../py/qstr.h :
+  build/genhdr/qstrdefs.generated.h ../py/mpprint.h ../py/runtime0.h :
+  ../py/asmbase.h :
Binary files MicorpythonOriginal1.12/micropython/mpy-cross/build/py/asmthumb.o and micropython1.12_withUlab/micropython/mpy-cross/build/py/asmthumb.o differ
diff -crNb MicorpythonOriginal1.12/micropython/mpy-cross/build/py/asmthumb.P micropython1.12_withUlab/micropython/mpy-cross/build/py/asmthumb.P
*** MicorpythonOriginal1.12/micropython/mpy-cross/build/py/asmthumb.P	1970-01-01 02:00:00.000000000 +0200
--- micropython1.12_withUlab/micropython/mpy-cross/build/py/asmthumb.P	2020-06-19 18:37:34.735607380 +0200
***************
*** 0 ****
--- 1,88 ----
+ build/py/asmthumb.o: ../py/asmthumb.c /usr/include/stdc-predef.h \
+  /usr/include/stdio.h \
+  /usr/include/x86_64-linux-gnu/bits/libc-header-start.h \
+  /usr/include/features.h /usr/include/x86_64-linux-gnu/sys/cdefs.h \
+  /usr/include/x86_64-linux-gnu/bits/wordsize.h \
+  /usr/include/x86_64-linux-gnu/bits/long-double.h \
+  /usr/include/x86_64-linux-gnu/gnu/stubs.h \
+  /usr/include/x86_64-linux-gnu/gnu/stubs-64.h \
+  /usr/lib/gcc/x86_64-linux-gnu/7/include/stddef.h \
+  /usr/include/x86_64-linux-gnu/bits/types.h \
+  /usr/include/x86_64-linux-gnu/bits/typesizes.h \
+  /usr/include/x86_64-linux-gnu/bits/types/__FILE.h \
+  /usr/include/x86_64-linux-gnu/bits/types/FILE.h \
+  /usr/include/x86_64-linux-gnu/bits/libio.h \
+  /usr/include/x86_64-linux-gnu/bits/_G_config.h \
+  /usr/include/x86_64-linux-gnu/bits/types/__mbstate_t.h \
+  /usr/lib/gcc/x86_64-linux-gnu/7/include/stdarg.h \
+  /usr/include/x86_64-linux-gnu/bits/stdio_lim.h \
+  /usr/include/x86_64-linux-gnu/bits/sys_errlist.h \
+  /usr/include/x86_64-linux-gnu/bits/stdio2.h /usr/include/assert.h \
+  /usr/include/string.h \
+  /usr/include/x86_64-linux-gnu/bits/types/locale_t.h \
+  /usr/include/x86_64-linux-gnu/bits/types/__locale_t.h \
+  /usr/include/strings.h \
+  /usr/include/x86_64-linux-gnu/bits/strings_fortified.h \
+  /usr/include/x86_64-linux-gnu/bits/string_fortified.h ../py/mpconfig.h \
+  mpconfigport.h /usr/include/alloca.h \
+  /usr/lib/gcc/x86_64-linux-gnu/7/include/stdint.h /usr/include/stdint.h \
+  /usr/include/x86_64-linux-gnu/bits/wchar.h \
+  /usr/include/x86_64-linux-gnu/bits/stdint-intn.h \
+  /usr/include/x86_64-linux-gnu/bits/stdint-uintn.h ../py/mpstate.h \
+  ../py/mpthread.h ../py/misc.h \
+  /usr/lib/gcc/x86_64-linux-gnu/7/include/stdbool.h ../py/nlr.h \
+  /usr/lib/gcc/x86_64-linux-gnu/7/include-fixed/limits.h \
+  /usr/lib/gcc/x86_64-linux-gnu/7/include-fixed/syslimits.h \
+  /usr/include/limits.h /usr/include/x86_64-linux-gnu/bits/posix1_lim.h \
+  /usr/include/x86_64-linux-gnu/bits/local_lim.h \
+  /usr/include/linux/limits.h \
+  /usr/include/x86_64-linux-gnu/bits/posix2_lim.h ../py/obj.h ../py/qstr.h \
+  build/genhdr/qstrdefs.generated.h ../py/mpprint.h ../py/runtime0.h \
+  ../py/objlist.h ../py/objexcept.h ../py/objtuple.h \
+  ../py/persistentcode.h ../py/reader.h ../py/emitglue.h ../py/bc.h \
+  ../py/runtime.h ../py/pystack.h ../py/objfun.h ../py/mphal.h mphalport.h \
+  ../py/asmthumb.h ../py/asmbase.h
+ ../py/asmthumb.c /usr/include/stdc-predef.h :
+  /usr/include/stdio.h :
+  /usr/include/x86_64-linux-gnu/bits/libc-header-start.h :
+  /usr/include/features.h /usr/include/x86_64-linux-gnu/sys/cdefs.h :
+  /usr/include/x86_64-linux-gnu/bits/wordsize.h :
+  /usr/include/x86_64-linux-gnu/bits/long-double.h :
+  /usr/include/x86_64-linux-gnu/gnu/stubs.h :
+  /usr/include/x86_64-linux-gnu/gnu/stubs-64.h :
+  /usr/lib/gcc/x86_64-linux-gnu/7/include/stddef.h :
+  /usr/include/x86_64-linux-gnu/bits/types.h :
+  /usr/include/x86_64-linux-gnu/bits/typesizes.h :
+  /usr/include/x86_64-linux-gnu/bits/types/__FILE.h :
+  /usr/include/x86_64-linux-gnu/bits/types/FILE.h :
+  /usr/include/x86_64-linux-gnu/bits/libio.h :
+  /usr/include/x86_64-linux-gnu/bits/_G_config.h :
+  /usr/include/x86_64-linux-gnu/bits/types/__mbstate_t.h :
+  /usr/lib/gcc/x86_64-linux-gnu/7/include/stdarg.h :
+  /usr/include/x86_64-linux-gnu/bits/stdio_lim.h :
+  /usr/include/x86_64-linux-gnu/bits/sys_errlist.h :
+  /usr/include/x86_64-linux-gnu/bits/stdio2.h /usr/include/assert.h :
+  /usr/include/string.h :
+  /usr/include/x86_64-linux-gnu/bits/types/locale_t.h :
+  /usr/include/x86_64-linux-gnu/bits/types/__locale_t.h :
+  /usr/include/strings.h :
+  /usr/include/x86_64-linux-gnu/bits/strings_fortified.h :
+  /usr/include/x86_64-linux-gnu/bits/string_fortified.h ../py/mpconfig.h :
+  mpconfigport.h /usr/include/alloca.h :
+  /usr/lib/gcc/x86_64-linux-gnu/7/include/stdint.h /usr/include/stdint.h :
+  /usr/include/x86_64-linux-gnu/bits/wchar.h :
+  /usr/include/x86_64-linux-gnu/bits/stdint-intn.h :
+  /usr/include/x86_64-linux-gnu/bits/stdint-uintn.h ../py/mpstate.h :
+  ../py/mpthread.h ../py/misc.h :
+  /usr/lib/gcc/x86_64-linux-gnu/7/include/stdbool.h ../py/nlr.h :
+  /usr/lib/gcc/x86_64-linux-gnu/7/include-fixed/limits.h :
+  /usr/lib/gcc/x86_64-linux-gnu/7/include-fixed/syslimits.h :
+  /usr/include/limits.h /usr/include/x86_64-linux-gnu/bits/posix1_lim.h :
+  /usr/include/x86_64-linux-gnu/bits/local_lim.h :
+  /usr/include/linux/limits.h :
+  /usr/include/x86_64-linux-gnu/bits/posix2_lim.h ../py/obj.h ../py/qstr.h :
+  build/genhdr/qstrdefs.generated.h ../py/mpprint.h ../py/runtime0.h :
+  ../py/objlist.h ../py/objexcept.h ../py/objtuple.h :
+  ../py/persistentcode.h ../py/reader.h ../py/emitglue.h ../py/bc.h :
+  ../py/runtime.h ../py/pystack.h ../py/objfun.h ../py/mphal.h mphalport.h :
+  ../py/asmthumb.h ../py/asmbase.h :
Binary files MicorpythonOriginal1.12/micropython/mpy-cross/build/py/asmx64.o and micropython1.12_withUlab/micropython/mpy-cross/build/py/asmx64.o differ
diff -crNb MicorpythonOriginal1.12/micropython/mpy-cross/build/py/asmx64.P micropython1.12_withUlab/micropython/mpy-cross/build/py/asmx64.P
*** MicorpythonOriginal1.12/micropython/mpy-cross/build/py/asmx64.P	1970-01-01 02:00:00.000000000 +0200
--- micropython1.12_withUlab/micropython/mpy-cross/build/py/asmx64.P	2020-06-14 15:06:50.587507734 +0200
***************
*** 0 ****
--- 1,62 ----
+ build/py/asmx64.o: ../py/asmx64.c /usr/include/stdc-predef.h \
+  /usr/lib/gcc/x86_64-linux-gnu/7/include/stdint.h /usr/include/stdint.h \
+  /usr/include/x86_64-linux-gnu/bits/libc-header-start.h \
+  /usr/include/features.h /usr/include/x86_64-linux-gnu/sys/cdefs.h \
+  /usr/include/x86_64-linux-gnu/bits/wordsize.h \
+  /usr/include/x86_64-linux-gnu/bits/long-double.h \
+  /usr/include/x86_64-linux-gnu/gnu/stubs.h \
+  /usr/include/x86_64-linux-gnu/gnu/stubs-64.h \
+  /usr/include/x86_64-linux-gnu/bits/types.h \
+  /usr/include/x86_64-linux-gnu/bits/typesizes.h \
+  /usr/include/x86_64-linux-gnu/bits/wchar.h \
+  /usr/include/x86_64-linux-gnu/bits/stdint-intn.h \
+  /usr/include/x86_64-linux-gnu/bits/stdint-uintn.h /usr/include/stdio.h \
+  /usr/lib/gcc/x86_64-linux-gnu/7/include/stddef.h \
+  /usr/include/x86_64-linux-gnu/bits/types/__FILE.h \
+  /usr/include/x86_64-linux-gnu/bits/types/FILE.h \
+  /usr/include/x86_64-linux-gnu/bits/libio.h \
+  /usr/include/x86_64-linux-gnu/bits/_G_config.h \
+  /usr/include/x86_64-linux-gnu/bits/types/__mbstate_t.h \
+  /usr/lib/gcc/x86_64-linux-gnu/7/include/stdarg.h \
+  /usr/include/x86_64-linux-gnu/bits/stdio_lim.h \
+  /usr/include/x86_64-linux-gnu/bits/sys_errlist.h \
+  /usr/include/x86_64-linux-gnu/bits/stdio2.h /usr/include/assert.h \
+  /usr/include/string.h \
+  /usr/include/x86_64-linux-gnu/bits/types/locale_t.h \
+  /usr/include/x86_64-linux-gnu/bits/types/__locale_t.h \
+  /usr/include/strings.h \
+  /usr/include/x86_64-linux-gnu/bits/strings_fortified.h \
+  /usr/include/x86_64-linux-gnu/bits/string_fortified.h ../py/mpconfig.h \
+  mpconfigport.h /usr/include/alloca.h ../py/asmx64.h ../py/misc.h \
+  /usr/lib/gcc/x86_64-linux-gnu/7/include/stdbool.h ../py/asmbase.h
+ ../py/asmx64.c /usr/include/stdc-predef.h :
+  /usr/lib/gcc/x86_64-linux-gnu/7/include/stdint.h /usr/include/stdint.h :
+  /usr/include/x86_64-linux-gnu/bits/libc-header-start.h :
+  /usr/include/features.h /usr/include/x86_64-linux-gnu/sys/cdefs.h :
+  /usr/include/x86_64-linux-gnu/bits/wordsize.h :
+  /usr/include/x86_64-linux-gnu/bits/long-double.h :
+  /usr/include/x86_64-linux-gnu/gnu/stubs.h :
+  /usr/include/x86_64-linux-gnu/gnu/stubs-64.h :
+  /usr/include/x86_64-linux-gnu/bits/types.h :
+  /usr/include/x86_64-linux-gnu/bits/typesizes.h :
+  /usr/include/x86_64-linux-gnu/bits/wchar.h :
+  /usr/include/x86_64-linux-gnu/bits/stdint-intn.h :
+  /usr/include/x86_64-linux-gnu/bits/stdint-uintn.h /usr/include/stdio.h :
+  /usr/lib/gcc/x86_64-linux-gnu/7/include/stddef.h :
+  /usr/include/x86_64-linux-gnu/bits/types/__FILE.h :
+  /usr/include/x86_64-linux-gnu/bits/types/FILE.h :
+  /usr/include/x86_64-linux-gnu/bits/libio.h :
+  /usr/include/x86_64-linux-gnu/bits/_G_config.h :
+  /usr/include/x86_64-linux-gnu/bits/types/__mbstate_t.h :
+  /usr/lib/gcc/x86_64-linux-gnu/7/include/stdarg.h :
+  /usr/include/x86_64-linux-gnu/bits/stdio_lim.h :
+  /usr/include/x86_64-linux-gnu/bits/sys_errlist.h :
+  /usr/include/x86_64-linux-gnu/bits/stdio2.h /usr/include/assert.h :
+  /usr/include/string.h :
+  /usr/include/x86_64-linux-gnu/bits/types/locale_t.h :
+  /usr/include/x86_64-linux-gnu/bits/types/__locale_t.h :
+  /usr/include/strings.h :
+  /usr/include/x86_64-linux-gnu/bits/strings_fortified.h :
+  /usr/include/x86_64-linux-gnu/bits/string_fortified.h ../py/mpconfig.h :
+  mpconfigport.h /usr/include/alloca.h ../py/asmx64.h ../py/misc.h :
+  /usr/lib/gcc/x86_64-linux-gnu/7/include/stdbool.h ../py/asmbase.h :
Binary files MicorpythonOriginal1.12/micropython/mpy-cross/build/py/asmx86.o and micropython1.12_withUlab/micropython/mpy-cross/build/py/asmx86.o differ
diff -crNb MicorpythonOriginal1.12/micropython/mpy-cross/build/py/asmx86.P micropython1.12_withUlab/micropython/mpy-cross/build/py/asmx86.P
*** MicorpythonOriginal1.12/micropython/mpy-cross/build/py/asmx86.P	1970-01-01 02:00:00.000000000 +0200
--- micropython1.12_withUlab/micropython/mpy-cross/build/py/asmx86.P	2020-06-14 15:06:50.947505178 +0200
***************
*** 0 ****
--- 1,62 ----
+ build/py/asmx86.o: ../py/asmx86.c /usr/include/stdc-predef.h \
+  /usr/lib/gcc/x86_64-linux-gnu/7/include/stdint.h /usr/include/stdint.h \
+  /usr/include/x86_64-linux-gnu/bits/libc-header-start.h \
+  /usr/include/features.h /usr/include/x86_64-linux-gnu/sys/cdefs.h \
+  /usr/include/x86_64-linux-gnu/bits/wordsize.h \
+  /usr/include/x86_64-linux-gnu/bits/long-double.h \
+  /usr/include/x86_64-linux-gnu/gnu/stubs.h \
+  /usr/include/x86_64-linux-gnu/gnu/stubs-64.h \
+  /usr/include/x86_64-linux-gnu/bits/types.h \
+  /usr/include/x86_64-linux-gnu/bits/typesizes.h \
+  /usr/include/x86_64-linux-gnu/bits/wchar.h \
+  /usr/include/x86_64-linux-gnu/bits/stdint-intn.h \
+  /usr/include/x86_64-linux-gnu/bits/stdint-uintn.h /usr/include/stdio.h \
+  /usr/lib/gcc/x86_64-linux-gnu/7/include/stddef.h \
+  /usr/include/x86_64-linux-gnu/bits/types/__FILE.h \
+  /usr/include/x86_64-linux-gnu/bits/types/FILE.h \
+  /usr/include/x86_64-linux-gnu/bits/libio.h \
+  /usr/include/x86_64-linux-gnu/bits/_G_config.h \
+  /usr/include/x86_64-linux-gnu/bits/types/__mbstate_t.h \
+  /usr/lib/gcc/x86_64-linux-gnu/7/include/stdarg.h \
+  /usr/include/x86_64-linux-gnu/bits/stdio_lim.h \
+  /usr/include/x86_64-linux-gnu/bits/sys_errlist.h \
+  /usr/include/x86_64-linux-gnu/bits/stdio2.h /usr/include/assert.h \
+  /usr/include/string.h \
+  /usr/include/x86_64-linux-gnu/bits/types/locale_t.h \
+  /usr/include/x86_64-linux-gnu/bits/types/__locale_t.h \
+  /usr/include/strings.h \
+  /usr/include/x86_64-linux-gnu/bits/strings_fortified.h \
+  /usr/include/x86_64-linux-gnu/bits/string_fortified.h ../py/mpconfig.h \
+  mpconfigport.h /usr/include/alloca.h ../py/asmx86.h ../py/misc.h \
+  /usr/lib/gcc/x86_64-linux-gnu/7/include/stdbool.h ../py/asmbase.h
+ ../py/asmx86.c /usr/include/stdc-predef.h :
+  /usr/lib/gcc/x86_64-linux-gnu/7/include/stdint.h /usr/include/stdint.h :
+  /usr/include/x86_64-linux-gnu/bits/libc-header-start.h :
+  /usr/include/features.h /usr/include/x86_64-linux-gnu/sys/cdefs.h :
+  /usr/include/x86_64-linux-gnu/bits/wordsize.h :
+  /usr/include/x86_64-linux-gnu/bits/long-double.h :
+  /usr/include/x86_64-linux-gnu/gnu/stubs.h :
+  /usr/include/x86_64-linux-gnu/gnu/stubs-64.h :
+  /usr/include/x86_64-linux-gnu/bits/types.h :
+  /usr/include/x86_64-linux-gnu/bits/typesizes.h :
+  /usr/include/x86_64-linux-gnu/bits/wchar.h :
+  /usr/include/x86_64-linux-gnu/bits/stdint-intn.h :
+  /usr/include/x86_64-linux-gnu/bits/stdint-uintn.h /usr/include/stdio.h :
+  /usr/lib/gcc/x86_64-linux-gnu/7/include/stddef.h :
+  /usr/include/x86_64-linux-gnu/bits/types/__FILE.h :
+  /usr/include/x86_64-linux-gnu/bits/types/FILE.h :
+  /usr/include/x86_64-linux-gnu/bits/libio.h :
+  /usr/include/x86_64-linux-gnu/bits/_G_config.h :
+  /usr/include/x86_64-linux-gnu/bits/types/__mbstate_t.h :
+  /usr/lib/gcc/x86_64-linux-gnu/7/include/stdarg.h :
+  /usr/include/x86_64-linux-gnu/bits/stdio_lim.h :
+  /usr/include/x86_64-linux-gnu/bits/sys_errlist.h :
+  /usr/include/x86_64-linux-gnu/bits/stdio2.h /usr/include/assert.h :
+  /usr/include/string.h :
+  /usr/include/x86_64-linux-gnu/bits/types/locale_t.h :
+  /usr/include/x86_64-linux-gnu/bits/types/__locale_t.h :
+  /usr/include/strings.h :
+  /usr/include/x86_64-linux-gnu/bits/strings_fortified.h :
+  /usr/include/x86_64-linux-gnu/bits/string_fortified.h ../py/mpconfig.h :
+  mpconfigport.h /usr/include/alloca.h ../py/asmx86.h ../py/misc.h :
+  /usr/lib/gcc/x86_64-linux-gnu/7/include/stdbool.h ../py/asmbase.h :
Binary files MicorpythonOriginal1.12/micropython/mpy-cross/build/py/asmxtensa.o and micropython1.12_withUlab/micropython/mpy-cross/build/py/asmxtensa.o differ
diff -crNb MicorpythonOriginal1.12/micropython/mpy-cross/build/py/asmxtensa.P micropython1.12_withUlab/micropython/mpy-cross/build/py/asmxtensa.P
*** MicorpythonOriginal1.12/micropython/mpy-cross/build/py/asmxtensa.P	1970-01-01 02:00:00.000000000 +0200
--- micropython1.12_withUlab/micropython/mpy-cross/build/py/asmxtensa.P	2020-06-14 15:06:52.111496914 +0200
***************
*** 0 ****
--- 1,54 ----
+ build/py/asmxtensa.o: ../py/asmxtensa.c /usr/include/stdc-predef.h \
+  /usr/include/stdio.h \
+  /usr/include/x86_64-linux-gnu/bits/libc-header-start.h \
+  /usr/include/features.h /usr/include/x86_64-linux-gnu/sys/cdefs.h \
+  /usr/include/x86_64-linux-gnu/bits/wordsize.h \
+  /usr/include/x86_64-linux-gnu/bits/long-double.h \
+  /usr/include/x86_64-linux-gnu/gnu/stubs.h \
+  /usr/include/x86_64-linux-gnu/gnu/stubs-64.h \
+  /usr/lib/gcc/x86_64-linux-gnu/7/include/stddef.h \
+  /usr/include/x86_64-linux-gnu/bits/types.h \
+  /usr/include/x86_64-linux-gnu/bits/typesizes.h \
+  /usr/include/x86_64-linux-gnu/bits/types/__FILE.h \
+  /usr/include/x86_64-linux-gnu/bits/types/FILE.h \
+  /usr/include/x86_64-linux-gnu/bits/libio.h \
+  /usr/include/x86_64-linux-gnu/bits/_G_config.h \
+  /usr/include/x86_64-linux-gnu/bits/types/__mbstate_t.h \
+  /usr/lib/gcc/x86_64-linux-gnu/7/include/stdarg.h \
+  /usr/include/x86_64-linux-gnu/bits/stdio_lim.h \
+  /usr/include/x86_64-linux-gnu/bits/sys_errlist.h \
+  /usr/include/x86_64-linux-gnu/bits/stdio2.h /usr/include/assert.h \
+  ../py/mpconfig.h mpconfigport.h /usr/include/alloca.h \
+  /usr/lib/gcc/x86_64-linux-gnu/7/include/stdint.h /usr/include/stdint.h \
+  /usr/include/x86_64-linux-gnu/bits/wchar.h \
+  /usr/include/x86_64-linux-gnu/bits/stdint-intn.h \
+  /usr/include/x86_64-linux-gnu/bits/stdint-uintn.h ../py/asmxtensa.h \
+  ../py/misc.h /usr/lib/gcc/x86_64-linux-gnu/7/include/stdbool.h \
+  ../py/asmbase.h
+ ../py/asmxtensa.c /usr/include/stdc-predef.h :
+  /usr/include/stdio.h :
+  /usr/include/x86_64-linux-gnu/bits/libc-header-start.h :
+  /usr/include/features.h /usr/include/x86_64-linux-gnu/sys/cdefs.h :
+  /usr/include/x86_64-linux-gnu/bits/wordsize.h :
+  /usr/include/x86_64-linux-gnu/bits/long-double.h :
+  /usr/include/x86_64-linux-gnu/gnu/stubs.h :
+  /usr/include/x86_64-linux-gnu/gnu/stubs-64.h :
+  /usr/lib/gcc/x86_64-linux-gnu/7/include/stddef.h :
+  /usr/include/x86_64-linux-gnu/bits/types.h :
+  /usr/include/x86_64-linux-gnu/bits/typesizes.h :
+  /usr/include/x86_64-linux-gnu/bits/types/__FILE.h :
+  /usr/include/x86_64-linux-gnu/bits/types/FILE.h :
+  /usr/include/x86_64-linux-gnu/bits/libio.h :
+  /usr/include/x86_64-linux-gnu/bits/_G_config.h :
+  /usr/include/x86_64-linux-gnu/bits/types/__mbstate_t.h :
+  /usr/lib/gcc/x86_64-linux-gnu/7/include/stdarg.h :
+  /usr/include/x86_64-linux-gnu/bits/stdio_lim.h :
+  /usr/include/x86_64-linux-gnu/bits/sys_errlist.h :
+  /usr/include/x86_64-linux-gnu/bits/stdio2.h /usr/include/assert.h :
+  ../py/mpconfig.h mpconfigport.h /usr/include/alloca.h :
+  /usr/lib/gcc/x86_64-linux-gnu/7/include/stdint.h /usr/include/stdint.h :
+  /usr/include/x86_64-linux-gnu/bits/wchar.h :
+  /usr/include/x86_64-linux-gnu/bits/stdint-intn.h :
+  /usr/include/x86_64-linux-gnu/bits/stdint-uintn.h ../py/asmxtensa.h :
+  ../py/misc.h /usr/lib/gcc/x86_64-linux-gnu/7/include/stdbool.h :
+  ../py/asmbase.h :
Binary files MicorpythonOriginal1.12/micropython/mpy-cross/build/py/bc.o and micropython1.12_withUlab/micropython/mpy-cross/build/py/bc.o differ
diff -crNb MicorpythonOriginal1.12/micropython/mpy-cross/build/py/bc.P micropython1.12_withUlab/micropython/mpy-cross/build/py/bc.P
*** MicorpythonOriginal1.12/micropython/mpy-cross/build/py/bc.P	1970-01-01 02:00:00.000000000 +0200
--- micropython1.12_withUlab/micropython/mpy-cross/build/py/bc.P	2020-06-19 18:37:39.367508196 +0200
***************
*** 0 ****
--- 1,62 ----
+ build/py/bc.o: ../py/bc.c /usr/include/stdc-predef.h \
+  /usr/lib/gcc/x86_64-linux-gnu/7/include/stdbool.h /usr/include/string.h \
+  /usr/include/x86_64-linux-gnu/bits/libc-header-start.h \
+  /usr/include/features.h /usr/include/x86_64-linux-gnu/sys/cdefs.h \
+  /usr/include/x86_64-linux-gnu/bits/wordsize.h \
+  /usr/include/x86_64-linux-gnu/bits/long-double.h \
+  /usr/include/x86_64-linux-gnu/gnu/stubs.h \
+  /usr/include/x86_64-linux-gnu/gnu/stubs-64.h \
+  /usr/lib/gcc/x86_64-linux-gnu/7/include/stddef.h \
+  /usr/include/x86_64-linux-gnu/bits/types/locale_t.h \
+  /usr/include/x86_64-linux-gnu/bits/types/__locale_t.h \
+  /usr/include/strings.h \
+  /usr/include/x86_64-linux-gnu/bits/strings_fortified.h \
+  /usr/include/x86_64-linux-gnu/bits/string_fortified.h \
+  /usr/include/assert.h ../py/runtime.h ../py/mpstate.h \
+  /usr/lib/gcc/x86_64-linux-gnu/7/include/stdint.h /usr/include/stdint.h \
+  /usr/include/x86_64-linux-gnu/bits/types.h \
+  /usr/include/x86_64-linux-gnu/bits/typesizes.h \
+  /usr/include/x86_64-linux-gnu/bits/wchar.h \
+  /usr/include/x86_64-linux-gnu/bits/stdint-intn.h \
+  /usr/include/x86_64-linux-gnu/bits/stdint-uintn.h ../py/mpconfig.h \
+  mpconfigport.h /usr/include/alloca.h ../py/mpthread.h ../py/misc.h \
+  ../py/nlr.h /usr/lib/gcc/x86_64-linux-gnu/7/include-fixed/limits.h \
+  /usr/lib/gcc/x86_64-linux-gnu/7/include-fixed/syslimits.h \
+  /usr/include/limits.h /usr/include/x86_64-linux-gnu/bits/posix1_lim.h \
+  /usr/include/x86_64-linux-gnu/bits/local_lim.h \
+  /usr/include/linux/limits.h \
+  /usr/include/x86_64-linux-gnu/bits/posix2_lim.h ../py/obj.h ../py/qstr.h \
+  build/genhdr/qstrdefs.generated.h ../py/mpprint.h ../py/runtime0.h \
+  ../py/objlist.h ../py/objexcept.h ../py/objtuple.h ../py/pystack.h \
+  ../py/bc0.h ../py/bc.h ../py/objfun.h
+ ../py/bc.c /usr/include/stdc-predef.h :
+  /usr/lib/gcc/x86_64-linux-gnu/7/include/stdbool.h /usr/include/string.h :
+  /usr/include/x86_64-linux-gnu/bits/libc-header-start.h :
+  /usr/include/features.h /usr/include/x86_64-linux-gnu/sys/cdefs.h :
+  /usr/include/x86_64-linux-gnu/bits/wordsize.h :
+  /usr/include/x86_64-linux-gnu/bits/long-double.h :
+  /usr/include/x86_64-linux-gnu/gnu/stubs.h :
+  /usr/include/x86_64-linux-gnu/gnu/stubs-64.h :
+  /usr/lib/gcc/x86_64-linux-gnu/7/include/stddef.h :
+  /usr/include/x86_64-linux-gnu/bits/types/locale_t.h :
+  /usr/include/x86_64-linux-gnu/bits/types/__locale_t.h :
+  /usr/include/strings.h :
+  /usr/include/x86_64-linux-gnu/bits/strings_fortified.h :
+  /usr/include/x86_64-linux-gnu/bits/string_fortified.h :
+  /usr/include/assert.h ../py/runtime.h ../py/mpstate.h :
+  /usr/lib/gcc/x86_64-linux-gnu/7/include/stdint.h /usr/include/stdint.h :
+  /usr/include/x86_64-linux-gnu/bits/types.h :
+  /usr/include/x86_64-linux-gnu/bits/typesizes.h :
+  /usr/include/x86_64-linux-gnu/bits/wchar.h :
+  /usr/include/x86_64-linux-gnu/bits/stdint-intn.h :
+  /usr/include/x86_64-linux-gnu/bits/stdint-uintn.h ../py/mpconfig.h :
+  mpconfigport.h /usr/include/alloca.h ../py/mpthread.h ../py/misc.h :
+  ../py/nlr.h /usr/lib/gcc/x86_64-linux-gnu/7/include-fixed/limits.h :
+  /usr/lib/gcc/x86_64-linux-gnu/7/include-fixed/syslimits.h :
+  /usr/include/limits.h /usr/include/x86_64-linux-gnu/bits/posix1_lim.h :
+  /usr/include/x86_64-linux-gnu/bits/local_lim.h :
+  /usr/include/linux/limits.h :
+  /usr/include/x86_64-linux-gnu/bits/posix2_lim.h ../py/obj.h ../py/qstr.h :
+  build/genhdr/qstrdefs.generated.h ../py/mpprint.h ../py/runtime0.h :
+  ../py/objlist.h ../py/objexcept.h ../py/objtuple.h ../py/pystack.h :
+  ../py/bc0.h ../py/bc.h ../py/objfun.h :
Binary files MicorpythonOriginal1.12/micropython/mpy-cross/build/py/binary.o and micropython1.12_withUlab/micropython/mpy-cross/build/py/binary.o differ
diff -crNb MicorpythonOriginal1.12/micropython/mpy-cross/build/py/binary.P micropython1.12_withUlab/micropython/mpy-cross/build/py/binary.P
*** MicorpythonOriginal1.12/micropython/mpy-cross/build/py/binary.P	1970-01-01 02:00:00.000000000 +0200
--- micropython1.12_withUlab/micropython/mpy-cross/build/py/binary.P	2020-06-19 18:37:38.731521736 +0200
***************
*** 0 ****
--- 1,118 ----
+ build/py/binary.o: ../py/binary.c /usr/include/stdc-predef.h \
+  /usr/lib/gcc/x86_64-linux-gnu/7/include/stdint.h /usr/include/stdint.h \
+  /usr/include/x86_64-linux-gnu/bits/libc-header-start.h \
+  /usr/include/features.h /usr/include/x86_64-linux-gnu/sys/cdefs.h \
+  /usr/include/x86_64-linux-gnu/bits/wordsize.h \
+  /usr/include/x86_64-linux-gnu/bits/long-double.h \
+  /usr/include/x86_64-linux-gnu/gnu/stubs.h \
+  /usr/include/x86_64-linux-gnu/gnu/stubs-64.h \
+  /usr/include/x86_64-linux-gnu/bits/types.h \
+  /usr/include/x86_64-linux-gnu/bits/typesizes.h \
+  /usr/include/x86_64-linux-gnu/bits/wchar.h \
+  /usr/include/x86_64-linux-gnu/bits/stdint-intn.h \
+  /usr/include/x86_64-linux-gnu/bits/stdint-uintn.h /usr/include/stdlib.h \
+  /usr/lib/gcc/x86_64-linux-gnu/7/include/stddef.h \
+  /usr/include/x86_64-linux-gnu/bits/waitflags.h \
+  /usr/include/x86_64-linux-gnu/bits/waitstatus.h \
+  /usr/include/x86_64-linux-gnu/bits/floatn.h \
+  /usr/include/x86_64-linux-gnu/bits/floatn-common.h \
+  /usr/include/x86_64-linux-gnu/sys/types.h \
+  /usr/include/x86_64-linux-gnu/bits/types/clock_t.h \
+  /usr/include/x86_64-linux-gnu/bits/types/clockid_t.h \
+  /usr/include/x86_64-linux-gnu/bits/types/time_t.h \
+  /usr/include/x86_64-linux-gnu/bits/types/timer_t.h /usr/include/endian.h \
+  /usr/include/x86_64-linux-gnu/bits/endian.h \
+  /usr/include/x86_64-linux-gnu/bits/byteswap.h \
+  /usr/include/x86_64-linux-gnu/bits/byteswap-16.h \
+  /usr/include/x86_64-linux-gnu/bits/uintn-identity.h \
+  /usr/include/x86_64-linux-gnu/sys/select.h \
+  /usr/include/x86_64-linux-gnu/bits/select.h \
+  /usr/include/x86_64-linux-gnu/bits/types/sigset_t.h \
+  /usr/include/x86_64-linux-gnu/bits/types/__sigset_t.h \
+  /usr/include/x86_64-linux-gnu/bits/types/struct_timeval.h \
+  /usr/include/x86_64-linux-gnu/bits/types/struct_timespec.h \
+  /usr/include/x86_64-linux-gnu/bits/select2.h \
+  /usr/include/x86_64-linux-gnu/sys/sysmacros.h \
+  /usr/include/x86_64-linux-gnu/bits/sysmacros.h \
+  /usr/include/x86_64-linux-gnu/bits/pthreadtypes.h \
+  /usr/include/x86_64-linux-gnu/bits/thread-shared-types.h \
+  /usr/include/x86_64-linux-gnu/bits/pthreadtypes-arch.h \
+  /usr/include/alloca.h /usr/include/x86_64-linux-gnu/bits/stdlib-float.h \
+  /usr/include/x86_64-linux-gnu/bits/stdlib.h /usr/include/string.h \
+  /usr/include/x86_64-linux-gnu/bits/types/locale_t.h \
+  /usr/include/x86_64-linux-gnu/bits/types/__locale_t.h \
+  /usr/include/strings.h \
+  /usr/include/x86_64-linux-gnu/bits/strings_fortified.h \
+  /usr/include/x86_64-linux-gnu/bits/string_fortified.h \
+  /usr/include/assert.h ../py/binary.h ../py/obj.h ../py/mpconfig.h \
+  mpconfigport.h ../py/misc.h \
+  /usr/lib/gcc/x86_64-linux-gnu/7/include/stdbool.h ../py/qstr.h \
+  build/genhdr/qstrdefs.generated.h ../py/mpprint.h ../py/runtime0.h \
+  ../py/smallint.h ../py/objint.h ../py/mpz.h ../py/runtime.h \
+  ../py/mpstate.h ../py/mpthread.h ../py/nlr.h \
+  /usr/lib/gcc/x86_64-linux-gnu/7/include-fixed/limits.h \
+  /usr/lib/gcc/x86_64-linux-gnu/7/include-fixed/syslimits.h \
+  /usr/include/limits.h /usr/include/x86_64-linux-gnu/bits/posix1_lim.h \
+  /usr/include/x86_64-linux-gnu/bits/local_lim.h \
+  /usr/include/linux/limits.h \
+  /usr/include/x86_64-linux-gnu/bits/posix2_lim.h ../py/objlist.h \
+  ../py/objexcept.h ../py/objtuple.h ../py/pystack.h
+ ../py/binary.c /usr/include/stdc-predef.h :
+  /usr/lib/gcc/x86_64-linux-gnu/7/include/stdint.h /usr/include/stdint.h :
+  /usr/include/x86_64-linux-gnu/bits/libc-header-start.h :
+  /usr/include/features.h /usr/include/x86_64-linux-gnu/sys/cdefs.h :
+  /usr/include/x86_64-linux-gnu/bits/wordsize.h :
+  /usr/include/x86_64-linux-gnu/bits/long-double.h :
+  /usr/include/x86_64-linux-gnu/gnu/stubs.h :
+  /usr/include/x86_64-linux-gnu/gnu/stubs-64.h :
+  /usr/include/x86_64-linux-gnu/bits/types.h :
+  /usr/include/x86_64-linux-gnu/bits/typesizes.h :
+  /usr/include/x86_64-linux-gnu/bits/wchar.h :
+  /usr/include/x86_64-linux-gnu/bits/stdint-intn.h :
+  /usr/include/x86_64-linux-gnu/bits/stdint-uintn.h /usr/include/stdlib.h :
+  /usr/lib/gcc/x86_64-linux-gnu/7/include/stddef.h :
+  /usr/include/x86_64-linux-gnu/bits/waitflags.h :
+  /usr/include/x86_64-linux-gnu/bits/waitstatus.h :
+  /usr/include/x86_64-linux-gnu/bits/floatn.h :
+  /usr/include/x86_64-linux-gnu/bits/floatn-common.h :
+  /usr/include/x86_64-linux-gnu/sys/types.h :
+  /usr/include/x86_64-linux-gnu/bits/types/clock_t.h :
+  /usr/include/x86_64-linux-gnu/bits/types/clockid_t.h :
+  /usr/include/x86_64-linux-gnu/bits/types/time_t.h :
+  /usr/include/x86_64-linux-gnu/bits/types/timer_t.h /usr/include/endian.h :
+  /usr/include/x86_64-linux-gnu/bits/endian.h :
+  /usr/include/x86_64-linux-gnu/bits/byteswap.h :
+  /usr/include/x86_64-linux-gnu/bits/byteswap-16.h :
+  /usr/include/x86_64-linux-gnu/bits/uintn-identity.h :
+  /usr/include/x86_64-linux-gnu/sys/select.h :
+  /usr/include/x86_64-linux-gnu/bits/select.h :
+  /usr/include/x86_64-linux-gnu/bits/types/sigset_t.h :
+  /usr/include/x86_64-linux-gnu/bits/types/__sigset_t.h :
+  /usr/include/x86_64-linux-gnu/bits/types/struct_timeval.h :
+  /usr/include/x86_64-linux-gnu/bits/types/struct_timespec.h :
+  /usr/include/x86_64-linux-gnu/bits/select2.h :
+  /usr/include/x86_64-linux-gnu/sys/sysmacros.h :
+  /usr/include/x86_64-linux-gnu/bits/sysmacros.h :
+  /usr/include/x86_64-linux-gnu/bits/pthreadtypes.h :
+  /usr/include/x86_64-linux-gnu/bits/thread-shared-types.h :
+  /usr/include/x86_64-linux-gnu/bits/pthreadtypes-arch.h :
+  /usr/include/alloca.h /usr/include/x86_64-linux-gnu/bits/stdlib-float.h :
+  /usr/include/x86_64-linux-gnu/bits/stdlib.h /usr/include/string.h :
+  /usr/include/x86_64-linux-gnu/bits/types/locale_t.h :
+  /usr/include/x86_64-linux-gnu/bits/types/__locale_t.h :
+  /usr/include/strings.h :
+  /usr/include/x86_64-linux-gnu/bits/strings_fortified.h :
+  /usr/include/x86_64-linux-gnu/bits/string_fortified.h :
+  /usr/include/assert.h ../py/binary.h ../py/obj.h ../py/mpconfig.h :
+  mpconfigport.h ../py/misc.h :
+  /usr/lib/gcc/x86_64-linux-gnu/7/include/stdbool.h ../py/qstr.h :
+  build/genhdr/qstrdefs.generated.h ../py/mpprint.h ../py/runtime0.h :
+  ../py/smallint.h ../py/objint.h ../py/mpz.h ../py/runtime.h :
+  ../py/mpstate.h ../py/mpthread.h ../py/nlr.h :
+  /usr/lib/gcc/x86_64-linux-gnu/7/include-fixed/limits.h :
+  /usr/lib/gcc/x86_64-linux-gnu/7/include-fixed/syslimits.h :
+  /usr/include/limits.h /usr/include/x86_64-linux-gnu/bits/posix1_lim.h :
+  /usr/include/x86_64-linux-gnu/bits/local_lim.h :
+  /usr/include/linux/limits.h :
+  /usr/include/x86_64-linux-gnu/bits/posix2_lim.h ../py/objlist.h :
+  ../py/objexcept.h ../py/objtuple.h ../py/pystack.h :
Binary files MicorpythonOriginal1.12/micropython/mpy-cross/build/py/builtinevex.o and micropython1.12_withUlab/micropython/mpy-cross/build/py/builtinevex.o differ
diff -crNb MicorpythonOriginal1.12/micropython/mpy-cross/build/py/builtinevex.P micropython1.12_withUlab/micropython/mpy-cross/build/py/builtinevex.P
*** MicorpythonOriginal1.12/micropython/mpy-cross/build/py/builtinevex.P	1970-01-01 02:00:00.000000000 +0200
--- micropython1.12_withUlab/micropython/mpy-cross/build/py/builtinevex.P	2020-06-19 19:54:02.493489532 +0200
***************
*** 0 ****
--- 1,56 ----
+ build/py/builtinevex.o: ../py/builtinevex.c /usr/include/stdc-predef.h \
+  /usr/lib/gcc/x86_64-linux-gnu/7/include/stdint.h /usr/include/stdint.h \
+  /usr/include/x86_64-linux-gnu/bits/libc-header-start.h \
+  /usr/include/features.h /usr/include/x86_64-linux-gnu/sys/cdefs.h \
+  /usr/include/x86_64-linux-gnu/bits/wordsize.h \
+  /usr/include/x86_64-linux-gnu/bits/long-double.h \
+  /usr/include/x86_64-linux-gnu/gnu/stubs.h \
+  /usr/include/x86_64-linux-gnu/gnu/stubs-64.h \
+  /usr/include/x86_64-linux-gnu/bits/types.h \
+  /usr/include/x86_64-linux-gnu/bits/typesizes.h \
+  /usr/include/x86_64-linux-gnu/bits/wchar.h \
+  /usr/include/x86_64-linux-gnu/bits/stdint-intn.h \
+  /usr/include/x86_64-linux-gnu/bits/stdint-uintn.h ../py/objfun.h \
+  ../py/obj.h ../py/mpconfig.h mpconfigport.h /usr/include/alloca.h \
+  /usr/lib/gcc/x86_64-linux-gnu/7/include/stddef.h ../py/misc.h \
+  /usr/lib/gcc/x86_64-linux-gnu/7/include/stdbool.h ../py/qstr.h \
+  build/genhdr/qstrdefs.generated.h ../py/mpprint.h ../py/runtime0.h \
+  ../py/compile.h ../py/lexer.h ../py/reader.h ../py/parse.h \
+  ../py/emitglue.h ../py/bc.h ../py/runtime.h ../py/mpstate.h \
+  ../py/mpthread.h ../py/nlr.h \
+  /usr/lib/gcc/x86_64-linux-gnu/7/include-fixed/limits.h \
+  /usr/lib/gcc/x86_64-linux-gnu/7/include-fixed/syslimits.h \
+  /usr/include/limits.h /usr/include/x86_64-linux-gnu/bits/posix1_lim.h \
+  /usr/include/x86_64-linux-gnu/bits/local_lim.h \
+  /usr/include/linux/limits.h \
+  /usr/include/x86_64-linux-gnu/bits/posix2_lim.h /usr/include/assert.h \
+  ../py/objlist.h ../py/objexcept.h ../py/objtuple.h ../py/pystack.h \
+  ../py/builtin.h
+ ../py/builtinevex.c /usr/include/stdc-predef.h :
+  /usr/lib/gcc/x86_64-linux-gnu/7/include/stdint.h /usr/include/stdint.h :
+  /usr/include/x86_64-linux-gnu/bits/libc-header-start.h :
+  /usr/include/features.h /usr/include/x86_64-linux-gnu/sys/cdefs.h :
+  /usr/include/x86_64-linux-gnu/bits/wordsize.h :
+  /usr/include/x86_64-linux-gnu/bits/long-double.h :
+  /usr/include/x86_64-linux-gnu/gnu/stubs.h :
+  /usr/include/x86_64-linux-gnu/gnu/stubs-64.h :
+  /usr/include/x86_64-linux-gnu/bits/types.h :
+  /usr/include/x86_64-linux-gnu/bits/typesizes.h :
+  /usr/include/x86_64-linux-gnu/bits/wchar.h :
+  /usr/include/x86_64-linux-gnu/bits/stdint-intn.h :
+  /usr/include/x86_64-linux-gnu/bits/stdint-uintn.h ../py/objfun.h :
+  ../py/obj.h ../py/mpconfig.h mpconfigport.h /usr/include/alloca.h :
+  /usr/lib/gcc/x86_64-linux-gnu/7/include/stddef.h ../py/misc.h :
+  /usr/lib/gcc/x86_64-linux-gnu/7/include/stdbool.h ../py/qstr.h :
+  build/genhdr/qstrdefs.generated.h ../py/mpprint.h ../py/runtime0.h :
+  ../py/compile.h ../py/lexer.h ../py/reader.h ../py/parse.h :
+  ../py/emitglue.h ../py/bc.h ../py/runtime.h ../py/mpstate.h :
+  ../py/mpthread.h ../py/nlr.h :
+  /usr/lib/gcc/x86_64-linux-gnu/7/include-fixed/limits.h :
+  /usr/lib/gcc/x86_64-linux-gnu/7/include-fixed/syslimits.h :
+  /usr/include/limits.h /usr/include/x86_64-linux-gnu/bits/posix1_lim.h :
+  /usr/include/x86_64-linux-gnu/bits/local_lim.h :
+  /usr/include/linux/limits.h :
+  /usr/include/x86_64-linux-gnu/bits/posix2_lim.h /usr/include/assert.h :
+  ../py/objlist.h ../py/objexcept.h ../py/objtuple.h ../py/pystack.h :
+  ../py/builtin.h :
Binary files MicorpythonOriginal1.12/micropython/mpy-cross/build/py/builtinhelp.o and micropython1.12_withUlab/micropython/mpy-cross/build/py/builtinhelp.o differ
diff -crNb MicorpythonOriginal1.12/micropython/mpy-cross/build/py/builtinhelp.P micropython1.12_withUlab/micropython/mpy-cross/build/py/builtinhelp.P
*** MicorpythonOriginal1.12/micropython/mpy-cross/build/py/builtinhelp.P	1970-01-01 02:00:00.000000000 +0200
--- micropython1.12_withUlab/micropython/mpy-cross/build/py/builtinhelp.P	2020-06-19 19:54:02.517489385 +0200
***************
*** 0 ****
--- 1,66 ----
+ build/py/builtinhelp.o: ../py/builtinhelp.c /usr/include/stdc-predef.h \
+  /usr/include/stdio.h \
+  /usr/include/x86_64-linux-gnu/bits/libc-header-start.h \
+  /usr/include/features.h /usr/include/x86_64-linux-gnu/sys/cdefs.h \
+  /usr/include/x86_64-linux-gnu/bits/wordsize.h \
+  /usr/include/x86_64-linux-gnu/bits/long-double.h \
+  /usr/include/x86_64-linux-gnu/gnu/stubs.h \
+  /usr/include/x86_64-linux-gnu/gnu/stubs-64.h \
+  /usr/lib/gcc/x86_64-linux-gnu/7/include/stddef.h \
+  /usr/include/x86_64-linux-gnu/bits/types.h \
+  /usr/include/x86_64-linux-gnu/bits/typesizes.h \
+  /usr/include/x86_64-linux-gnu/bits/types/__FILE.h \
+  /usr/include/x86_64-linux-gnu/bits/types/FILE.h \
+  /usr/include/x86_64-linux-gnu/bits/libio.h \
+  /usr/include/x86_64-linux-gnu/bits/_G_config.h \
+  /usr/include/x86_64-linux-gnu/bits/types/__mbstate_t.h \
+  /usr/lib/gcc/x86_64-linux-gnu/7/include/stdarg.h \
+  /usr/include/x86_64-linux-gnu/bits/stdio_lim.h \
+  /usr/include/x86_64-linux-gnu/bits/sys_errlist.h \
+  /usr/include/x86_64-linux-gnu/bits/stdio2.h /usr/include/string.h \
+  /usr/include/x86_64-linux-gnu/bits/types/locale_t.h \
+  /usr/include/x86_64-linux-gnu/bits/types/__locale_t.h \
+  /usr/include/strings.h \
+  /usr/include/x86_64-linux-gnu/bits/strings_fortified.h \
+  /usr/include/x86_64-linux-gnu/bits/string_fortified.h ../py/builtin.h \
+  ../py/obj.h ../py/mpconfig.h mpconfigport.h /usr/include/alloca.h \
+  /usr/lib/gcc/x86_64-linux-gnu/7/include/stdint.h /usr/include/stdint.h \
+  /usr/include/x86_64-linux-gnu/bits/wchar.h \
+  /usr/include/x86_64-linux-gnu/bits/stdint-intn.h \
+  /usr/include/x86_64-linux-gnu/bits/stdint-uintn.h ../py/misc.h \
+  /usr/lib/gcc/x86_64-linux-gnu/7/include/stdbool.h ../py/qstr.h \
+  build/genhdr/qstrdefs.generated.h ../py/mpprint.h ../py/runtime0.h \
+  ../py/objmodule.h
+ ../py/builtinhelp.c /usr/include/stdc-predef.h :
+  /usr/include/stdio.h :
+  /usr/include/x86_64-linux-gnu/bits/libc-header-start.h :
+  /usr/include/features.h /usr/include/x86_64-linux-gnu/sys/cdefs.h :
+  /usr/include/x86_64-linux-gnu/bits/wordsize.h :
+  /usr/include/x86_64-linux-gnu/bits/long-double.h :
+  /usr/include/x86_64-linux-gnu/gnu/stubs.h :
+  /usr/include/x86_64-linux-gnu/gnu/stubs-64.h :
+  /usr/lib/gcc/x86_64-linux-gnu/7/include/stddef.h :
+  /usr/include/x86_64-linux-gnu/bits/types.h :
+  /usr/include/x86_64-linux-gnu/bits/typesizes.h :
+  /usr/include/x86_64-linux-gnu/bits/types/__FILE.h :
+  /usr/include/x86_64-linux-gnu/bits/types/FILE.h :
+  /usr/include/x86_64-linux-gnu/bits/libio.h :
+  /usr/include/x86_64-linux-gnu/bits/_G_config.h :
+  /usr/include/x86_64-linux-gnu/bits/types/__mbstate_t.h :
+  /usr/lib/gcc/x86_64-linux-gnu/7/include/stdarg.h :
+  /usr/include/x86_64-linux-gnu/bits/stdio_lim.h :
+  /usr/include/x86_64-linux-gnu/bits/sys_errlist.h :
+  /usr/include/x86_64-linux-gnu/bits/stdio2.h /usr/include/string.h :
+  /usr/include/x86_64-linux-gnu/bits/types/locale_t.h :
+  /usr/include/x86_64-linux-gnu/bits/types/__locale_t.h :
+  /usr/include/strings.h :
+  /usr/include/x86_64-linux-gnu/bits/strings_fortified.h :
+  /usr/include/x86_64-linux-gnu/bits/string_fortified.h ../py/builtin.h :
+  ../py/obj.h ../py/mpconfig.h mpconfigport.h /usr/include/alloca.h :
+  /usr/lib/gcc/x86_64-linux-gnu/7/include/stdint.h /usr/include/stdint.h :
+  /usr/include/x86_64-linux-gnu/bits/wchar.h :
+  /usr/include/x86_64-linux-gnu/bits/stdint-intn.h :
+  /usr/include/x86_64-linux-gnu/bits/stdint-uintn.h ../py/misc.h :
+  /usr/lib/gcc/x86_64-linux-gnu/7/include/stdbool.h ../py/qstr.h :
+  build/genhdr/qstrdefs.generated.h ../py/mpprint.h ../py/runtime0.h :
+  ../py/objmodule.h :
Binary files MicorpythonOriginal1.12/micropython/mpy-cross/build/py/builtinimport.o and micropython1.12_withUlab/micropython/mpy-cross/build/py/builtinimport.o differ
diff -crNb MicorpythonOriginal1.12/micropython/mpy-cross/build/py/builtinimport.P micropython1.12_withUlab/micropython/mpy-cross/build/py/builtinimport.P
*** MicorpythonOriginal1.12/micropython/mpy-cross/build/py/builtinimport.P	1970-01-01 02:00:00.000000000 +0200
--- micropython1.12_withUlab/micropython/mpy-cross/build/py/builtinimport.P	2020-06-19 19:54:02.465489703 +0200
***************
*** 0 ****
--- 1,88 ----
+ build/py/builtinimport.o: ../py/builtinimport.c \
+  /usr/include/stdc-predef.h /usr/include/stdio.h \
+  /usr/include/x86_64-linux-gnu/bits/libc-header-start.h \
+  /usr/include/features.h /usr/include/x86_64-linux-gnu/sys/cdefs.h \
+  /usr/include/x86_64-linux-gnu/bits/wordsize.h \
+  /usr/include/x86_64-linux-gnu/bits/long-double.h \
+  /usr/include/x86_64-linux-gnu/gnu/stubs.h \
+  /usr/include/x86_64-linux-gnu/gnu/stubs-64.h \
+  /usr/lib/gcc/x86_64-linux-gnu/7/include/stddef.h \
+  /usr/include/x86_64-linux-gnu/bits/types.h \
+  /usr/include/x86_64-linux-gnu/bits/typesizes.h \
+  /usr/include/x86_64-linux-gnu/bits/types/__FILE.h \
+  /usr/include/x86_64-linux-gnu/bits/types/FILE.h \
+  /usr/include/x86_64-linux-gnu/bits/libio.h \
+  /usr/include/x86_64-linux-gnu/bits/_G_config.h \
+  /usr/include/x86_64-linux-gnu/bits/types/__mbstate_t.h \
+  /usr/lib/gcc/x86_64-linux-gnu/7/include/stdarg.h \
+  /usr/include/x86_64-linux-gnu/bits/stdio_lim.h \
+  /usr/include/x86_64-linux-gnu/bits/sys_errlist.h \
+  /usr/include/x86_64-linux-gnu/bits/stdio2.h /usr/include/string.h \
+  /usr/include/x86_64-linux-gnu/bits/types/locale_t.h \
+  /usr/include/x86_64-linux-gnu/bits/types/__locale_t.h \
+  /usr/include/strings.h \
+  /usr/include/x86_64-linux-gnu/bits/strings_fortified.h \
+  /usr/include/x86_64-linux-gnu/bits/string_fortified.h \
+  /usr/include/assert.h ../py/compile.h ../py/lexer.h \
+  /usr/lib/gcc/x86_64-linux-gnu/7/include/stdint.h /usr/include/stdint.h \
+  /usr/include/x86_64-linux-gnu/bits/wchar.h \
+  /usr/include/x86_64-linux-gnu/bits/stdint-intn.h \
+  /usr/include/x86_64-linux-gnu/bits/stdint-uintn.h ../py/mpconfig.h \
+  mpconfigport.h /usr/include/alloca.h ../py/qstr.h ../py/misc.h \
+  /usr/lib/gcc/x86_64-linux-gnu/7/include/stdbool.h \
+  build/genhdr/qstrdefs.generated.h ../py/reader.h ../py/obj.h \
+  ../py/mpprint.h ../py/runtime0.h ../py/parse.h ../py/emitglue.h \
+  ../py/bc.h ../py/runtime.h ../py/mpstate.h ../py/mpthread.h ../py/nlr.h \
+  /usr/lib/gcc/x86_64-linux-gnu/7/include-fixed/limits.h \
+  /usr/lib/gcc/x86_64-linux-gnu/7/include-fixed/syslimits.h \
+  /usr/include/limits.h /usr/include/x86_64-linux-gnu/bits/posix1_lim.h \
+  /usr/include/x86_64-linux-gnu/bits/local_lim.h \
+  /usr/include/linux/limits.h \
+  /usr/include/x86_64-linux-gnu/bits/posix2_lim.h ../py/objlist.h \
+  ../py/objexcept.h ../py/objtuple.h ../py/pystack.h ../py/objfun.h \
+  ../py/objmodule.h ../py/persistentcode.h ../py/builtin.h \
+  ../py/frozenmod.h
+ ../py/builtinimport.c :
+  /usr/include/stdc-predef.h /usr/include/stdio.h :
+  /usr/include/x86_64-linux-gnu/bits/libc-header-start.h :
+  /usr/include/features.h /usr/include/x86_64-linux-gnu/sys/cdefs.h :
+  /usr/include/x86_64-linux-gnu/bits/wordsize.h :
+  /usr/include/x86_64-linux-gnu/bits/long-double.h :
+  /usr/include/x86_64-linux-gnu/gnu/stubs.h :
+  /usr/include/x86_64-linux-gnu/gnu/stubs-64.h :
+  /usr/lib/gcc/x86_64-linux-gnu/7/include/stddef.h :
+  /usr/include/x86_64-linux-gnu/bits/types.h :
+  /usr/include/x86_64-linux-gnu/bits/typesizes.h :
+  /usr/include/x86_64-linux-gnu/bits/types/__FILE.h :
+  /usr/include/x86_64-linux-gnu/bits/types/FILE.h :
+  /usr/include/x86_64-linux-gnu/bits/libio.h :
+  /usr/include/x86_64-linux-gnu/bits/_G_config.h :
+  /usr/include/x86_64-linux-gnu/bits/types/__mbstate_t.h :
+  /usr/lib/gcc/x86_64-linux-gnu/7/include/stdarg.h :
+  /usr/include/x86_64-linux-gnu/bits/stdio_lim.h :
+  /usr/include/x86_64-linux-gnu/bits/sys_errlist.h :
+  /usr/include/x86_64-linux-gnu/bits/stdio2.h /usr/include/string.h :
+  /usr/include/x86_64-linux-gnu/bits/types/locale_t.h :
+  /usr/include/x86_64-linux-gnu/bits/types/__locale_t.h :
+  /usr/include/strings.h :
+  /usr/include/x86_64-linux-gnu/bits/strings_fortified.h :
+  /usr/include/x86_64-linux-gnu/bits/string_fortified.h :
+  /usr/include/assert.h ../py/compile.h ../py/lexer.h :
+  /usr/lib/gcc/x86_64-linux-gnu/7/include/stdint.h /usr/include/stdint.h :
+  /usr/include/x86_64-linux-gnu/bits/wchar.h :
+  /usr/include/x86_64-linux-gnu/bits/stdint-intn.h :
+  /usr/include/x86_64-linux-gnu/bits/stdint-uintn.h ../py/mpconfig.h :
+  mpconfigport.h /usr/include/alloca.h ../py/qstr.h ../py/misc.h :
+  /usr/lib/gcc/x86_64-linux-gnu/7/include/stdbool.h :
+  build/genhdr/qstrdefs.generated.h ../py/reader.h ../py/obj.h :
+  ../py/mpprint.h ../py/runtime0.h ../py/parse.h ../py/emitglue.h :
+  ../py/bc.h ../py/runtime.h ../py/mpstate.h ../py/mpthread.h ../py/nlr.h :
+  /usr/lib/gcc/x86_64-linux-gnu/7/include-fixed/limits.h :
+  /usr/lib/gcc/x86_64-linux-gnu/7/include-fixed/syslimits.h :
+  /usr/include/limits.h /usr/include/x86_64-linux-gnu/bits/posix1_lim.h :
+  /usr/include/x86_64-linux-gnu/bits/local_lim.h :
+  /usr/include/linux/limits.h :
+  /usr/include/x86_64-linux-gnu/bits/posix2_lim.h ../py/objlist.h :
+  ../py/objexcept.h ../py/objtuple.h ../py/pystack.h ../py/objfun.h :
+  ../py/objmodule.h ../py/persistentcode.h ../py/builtin.h :
+  ../py/frozenmod.h :
Binary files MicorpythonOriginal1.12/micropython/mpy-cross/build/py/compile.o and micropython1.12_withUlab/micropython/mpy-cross/build/py/compile.o differ
diff -crNb MicorpythonOriginal1.12/micropython/mpy-cross/build/py/compile.P micropython1.12_withUlab/micropython/mpy-cross/build/py/compile.P
*** MicorpythonOriginal1.12/micropython/mpy-cross/build/py/compile.P	1970-01-01 02:00:00.000000000 +0200
--- micropython1.12_withUlab/micropython/mpy-cross/build/py/compile.P	2020-06-19 18:37:33.883625766 +0200
***************
*** 0 ****
--- 1,86 ----
+ build/py/compile.o: ../py/compile.c /usr/include/stdc-predef.h \
+  /usr/lib/gcc/x86_64-linux-gnu/7/include/stdbool.h \
+  /usr/lib/gcc/x86_64-linux-gnu/7/include/stdint.h /usr/include/stdint.h \
+  /usr/include/x86_64-linux-gnu/bits/libc-header-start.h \
+  /usr/include/features.h /usr/include/x86_64-linux-gnu/sys/cdefs.h \
+  /usr/include/x86_64-linux-gnu/bits/wordsize.h \
+  /usr/include/x86_64-linux-gnu/bits/long-double.h \
+  /usr/include/x86_64-linux-gnu/gnu/stubs.h \
+  /usr/include/x86_64-linux-gnu/gnu/stubs-64.h \
+  /usr/include/x86_64-linux-gnu/bits/types.h \
+  /usr/include/x86_64-linux-gnu/bits/typesizes.h \
+  /usr/include/x86_64-linux-gnu/bits/wchar.h \
+  /usr/include/x86_64-linux-gnu/bits/stdint-intn.h \
+  /usr/include/x86_64-linux-gnu/bits/stdint-uintn.h /usr/include/stdio.h \
+  /usr/lib/gcc/x86_64-linux-gnu/7/include/stddef.h \
+  /usr/include/x86_64-linux-gnu/bits/types/__FILE.h \
+  /usr/include/x86_64-linux-gnu/bits/types/FILE.h \
+  /usr/include/x86_64-linux-gnu/bits/libio.h \
+  /usr/include/x86_64-linux-gnu/bits/_G_config.h \
+  /usr/include/x86_64-linux-gnu/bits/types/__mbstate_t.h \
+  /usr/lib/gcc/x86_64-linux-gnu/7/include/stdarg.h \
+  /usr/include/x86_64-linux-gnu/bits/stdio_lim.h \
+  /usr/include/x86_64-linux-gnu/bits/sys_errlist.h \
+  /usr/include/x86_64-linux-gnu/bits/stdio2.h /usr/include/string.h \
+  /usr/include/x86_64-linux-gnu/bits/types/locale_t.h \
+  /usr/include/x86_64-linux-gnu/bits/types/__locale_t.h \
+  /usr/include/strings.h \
+  /usr/include/x86_64-linux-gnu/bits/strings_fortified.h \
+  /usr/include/x86_64-linux-gnu/bits/string_fortified.h \
+  /usr/include/assert.h ../py/scope.h ../py/parse.h ../py/obj.h \
+  ../py/mpconfig.h mpconfigport.h /usr/include/alloca.h ../py/misc.h \
+  ../py/qstr.h build/genhdr/qstrdefs.generated.h ../py/mpprint.h \
+  ../py/runtime0.h ../py/emitglue.h ../py/bc.h ../py/runtime.h \
+  ../py/mpstate.h ../py/mpthread.h ../py/nlr.h \
+  /usr/lib/gcc/x86_64-linux-gnu/7/include-fixed/limits.h \
+  /usr/lib/gcc/x86_64-linux-gnu/7/include-fixed/syslimits.h \
+  /usr/include/limits.h /usr/include/x86_64-linux-gnu/bits/posix1_lim.h \
+  /usr/include/x86_64-linux-gnu/bits/local_lim.h \
+  /usr/include/linux/limits.h \
+  /usr/include/x86_64-linux-gnu/bits/posix2_lim.h ../py/objlist.h \
+  ../py/objexcept.h ../py/objtuple.h ../py/pystack.h ../py/objfun.h \
+  ../py/emit.h ../py/lexer.h ../py/reader.h ../py/compile.h \
+  ../py/asmbase.h ../py/persistentcode.h ../py/grammar.h
+ ../py/compile.c /usr/include/stdc-predef.h :
+  /usr/lib/gcc/x86_64-linux-gnu/7/include/stdbool.h :
+  /usr/lib/gcc/x86_64-linux-gnu/7/include/stdint.h /usr/include/stdint.h :
+  /usr/include/x86_64-linux-gnu/bits/libc-header-start.h :
+  /usr/include/features.h /usr/include/x86_64-linux-gnu/sys/cdefs.h :
+  /usr/include/x86_64-linux-gnu/bits/wordsize.h :
+  /usr/include/x86_64-linux-gnu/bits/long-double.h :
+  /usr/include/x86_64-linux-gnu/gnu/stubs.h :
+  /usr/include/x86_64-linux-gnu/gnu/stubs-64.h :
+  /usr/include/x86_64-linux-gnu/bits/types.h :
+  /usr/include/x86_64-linux-gnu/bits/typesizes.h :
+  /usr/include/x86_64-linux-gnu/bits/wchar.h :
+  /usr/include/x86_64-linux-gnu/bits/stdint-intn.h :
+  /usr/include/x86_64-linux-gnu/bits/stdint-uintn.h /usr/include/stdio.h :
+  /usr/lib/gcc/x86_64-linux-gnu/7/include/stddef.h :
+  /usr/include/x86_64-linux-gnu/bits/types/__FILE.h :
+  /usr/include/x86_64-linux-gnu/bits/types/FILE.h :
+  /usr/include/x86_64-linux-gnu/bits/libio.h :
+  /usr/include/x86_64-linux-gnu/bits/_G_config.h :
+  /usr/include/x86_64-linux-gnu/bits/types/__mbstate_t.h :
+  /usr/lib/gcc/x86_64-linux-gnu/7/include/stdarg.h :
+  /usr/include/x86_64-linux-gnu/bits/stdio_lim.h :
+  /usr/include/x86_64-linux-gnu/bits/sys_errlist.h :
+  /usr/include/x86_64-linux-gnu/bits/stdio2.h /usr/include/string.h :
+  /usr/include/x86_64-linux-gnu/bits/types/locale_t.h :
+  /usr/include/x86_64-linux-gnu/bits/types/__locale_t.h :
+  /usr/include/strings.h :
+  /usr/include/x86_64-linux-gnu/bits/strings_fortified.h :
+  /usr/include/x86_64-linux-gnu/bits/string_fortified.h :
+  /usr/include/assert.h ../py/scope.h ../py/parse.h ../py/obj.h :
+  ../py/mpconfig.h mpconfigport.h /usr/include/alloca.h ../py/misc.h :
+  ../py/qstr.h build/genhdr/qstrdefs.generated.h ../py/mpprint.h :
+  ../py/runtime0.h ../py/emitglue.h ../py/bc.h ../py/runtime.h :
+  ../py/mpstate.h ../py/mpthread.h ../py/nlr.h :
+  /usr/lib/gcc/x86_64-linux-gnu/7/include-fixed/limits.h :
+  /usr/lib/gcc/x86_64-linux-gnu/7/include-fixed/syslimits.h :
+  /usr/include/limits.h /usr/include/x86_64-linux-gnu/bits/posix1_lim.h :
+  /usr/include/x86_64-linux-gnu/bits/local_lim.h :
+  /usr/include/linux/limits.h :
+  /usr/include/x86_64-linux-gnu/bits/posix2_lim.h ../py/objlist.h :
+  ../py/objexcept.h ../py/objtuple.h ../py/pystack.h ../py/objfun.h :
+  ../py/emit.h ../py/lexer.h ../py/reader.h ../py/compile.h :
+  ../py/asmbase.h ../py/persistentcode.h ../py/grammar.h :
Binary files MicorpythonOriginal1.12/micropython/mpy-cross/build/py/emitbc.o and micropython1.12_withUlab/micropython/mpy-cross/build/py/emitbc.o differ
diff -crNb MicorpythonOriginal1.12/micropython/mpy-cross/build/py/emitbc.P micropython1.12_withUlab/micropython/mpy-cross/build/py/emitbc.P
*** MicorpythonOriginal1.12/micropython/mpy-cross/build/py/emitbc.P	1970-01-01 02:00:00.000000000 +0200
--- micropython1.12_withUlab/micropython/mpy-cross/build/py/emitbc.P	2020-06-19 18:37:34.067621790 +0200
***************
*** 0 ****
--- 1,84 ----
+ build/py/emitbc.o: ../py/emitbc.c /usr/include/stdc-predef.h \
+  /usr/lib/gcc/x86_64-linux-gnu/7/include/stdbool.h \
+  /usr/lib/gcc/x86_64-linux-gnu/7/include/stdint.h /usr/include/stdint.h \
+  /usr/include/x86_64-linux-gnu/bits/libc-header-start.h \
+  /usr/include/features.h /usr/include/x86_64-linux-gnu/sys/cdefs.h \
+  /usr/include/x86_64-linux-gnu/bits/wordsize.h \
+  /usr/include/x86_64-linux-gnu/bits/long-double.h \
+  /usr/include/x86_64-linux-gnu/gnu/stubs.h \
+  /usr/include/x86_64-linux-gnu/gnu/stubs-64.h \
+  /usr/include/x86_64-linux-gnu/bits/types.h \
+  /usr/include/x86_64-linux-gnu/bits/typesizes.h \
+  /usr/include/x86_64-linux-gnu/bits/wchar.h \
+  /usr/include/x86_64-linux-gnu/bits/stdint-intn.h \
+  /usr/include/x86_64-linux-gnu/bits/stdint-uintn.h /usr/include/stdio.h \
+  /usr/lib/gcc/x86_64-linux-gnu/7/include/stddef.h \
+  /usr/include/x86_64-linux-gnu/bits/types/__FILE.h \
+  /usr/include/x86_64-linux-gnu/bits/types/FILE.h \
+  /usr/include/x86_64-linux-gnu/bits/libio.h \
+  /usr/include/x86_64-linux-gnu/bits/_G_config.h \
+  /usr/include/x86_64-linux-gnu/bits/types/__mbstate_t.h \
+  /usr/lib/gcc/x86_64-linux-gnu/7/include/stdarg.h \
+  /usr/include/x86_64-linux-gnu/bits/stdio_lim.h \
+  /usr/include/x86_64-linux-gnu/bits/sys_errlist.h \
+  /usr/include/x86_64-linux-gnu/bits/stdio2.h /usr/include/string.h \
+  /usr/include/x86_64-linux-gnu/bits/types/locale_t.h \
+  /usr/include/x86_64-linux-gnu/bits/types/__locale_t.h \
+  /usr/include/strings.h \
+  /usr/include/x86_64-linux-gnu/bits/strings_fortified.h \
+  /usr/include/x86_64-linux-gnu/bits/string_fortified.h \
+  /usr/include/assert.h ../py/mpstate.h ../py/mpconfig.h mpconfigport.h \
+  /usr/include/alloca.h ../py/mpthread.h ../py/misc.h ../py/nlr.h \
+  /usr/lib/gcc/x86_64-linux-gnu/7/include-fixed/limits.h \
+  /usr/lib/gcc/x86_64-linux-gnu/7/include-fixed/syslimits.h \
+  /usr/include/limits.h /usr/include/x86_64-linux-gnu/bits/posix1_lim.h \
+  /usr/include/x86_64-linux-gnu/bits/local_lim.h \
+  /usr/include/linux/limits.h \
+  /usr/include/x86_64-linux-gnu/bits/posix2_lim.h ../py/obj.h ../py/qstr.h \
+  build/genhdr/qstrdefs.generated.h ../py/mpprint.h ../py/runtime0.h \
+  ../py/objlist.h ../py/objexcept.h ../py/objtuple.h ../py/emit.h \
+  ../py/lexer.h ../py/reader.h ../py/scope.h ../py/parse.h \
+  ../py/emitglue.h ../py/bc.h ../py/runtime.h ../py/pystack.h \
+  ../py/objfun.h ../py/bc0.h
+ ../py/emitbc.c /usr/include/stdc-predef.h :
+  /usr/lib/gcc/x86_64-linux-gnu/7/include/stdbool.h :
+  /usr/lib/gcc/x86_64-linux-gnu/7/include/stdint.h /usr/include/stdint.h :
+  /usr/include/x86_64-linux-gnu/bits/libc-header-start.h :
+  /usr/include/features.h /usr/include/x86_64-linux-gnu/sys/cdefs.h :
+  /usr/include/x86_64-linux-gnu/bits/wordsize.h :
+  /usr/include/x86_64-linux-gnu/bits/long-double.h :
+  /usr/include/x86_64-linux-gnu/gnu/stubs.h :
+  /usr/include/x86_64-linux-gnu/gnu/stubs-64.h :
+  /usr/include/x86_64-linux-gnu/bits/types.h :
+  /usr/include/x86_64-linux-gnu/bits/typesizes.h :
+  /usr/include/x86_64-linux-gnu/bits/wchar.h :
+  /usr/include/x86_64-linux-gnu/bits/stdint-intn.h :
+  /usr/include/x86_64-linux-gnu/bits/stdint-uintn.h /usr/include/stdio.h :
+  /usr/lib/gcc/x86_64-linux-gnu/7/include/stddef.h :
+  /usr/include/x86_64-linux-gnu/bits/types/__FILE.h :
+  /usr/include/x86_64-linux-gnu/bits/types/FILE.h :
+  /usr/include/x86_64-linux-gnu/bits/libio.h :
+  /usr/include/x86_64-linux-gnu/bits/_G_config.h :
+  /usr/include/x86_64-linux-gnu/bits/types/__mbstate_t.h :
+  /usr/lib/gcc/x86_64-linux-gnu/7/include/stdarg.h :
+  /usr/include/x86_64-linux-gnu/bits/stdio_lim.h :
+  /usr/include/x86_64-linux-gnu/bits/sys_errlist.h :
+  /usr/include/x86_64-linux-gnu/bits/stdio2.h /usr/include/string.h :
+  /usr/include/x86_64-linux-gnu/bits/types/locale_t.h :
+  /usr/include/x86_64-linux-gnu/bits/types/__locale_t.h :
+  /usr/include/strings.h :
+  /usr/include/x86_64-linux-gnu/bits/strings_fortified.h :
+  /usr/include/x86_64-linux-gnu/bits/string_fortified.h :
+  /usr/include/assert.h ../py/mpstate.h ../py/mpconfig.h mpconfigport.h :
+  /usr/include/alloca.h ../py/mpthread.h ../py/misc.h ../py/nlr.h :
+  /usr/lib/gcc/x86_64-linux-gnu/7/include-fixed/limits.h :
+  /usr/lib/gcc/x86_64-linux-gnu/7/include-fixed/syslimits.h :
+  /usr/include/limits.h /usr/include/x86_64-linux-gnu/bits/posix1_lim.h :
+  /usr/include/x86_64-linux-gnu/bits/local_lim.h :
+  /usr/include/linux/limits.h :
+  /usr/include/x86_64-linux-gnu/bits/posix2_lim.h ../py/obj.h ../py/qstr.h :
+  build/genhdr/qstrdefs.generated.h ../py/mpprint.h ../py/runtime0.h :
+  ../py/objlist.h ../py/objexcept.h ../py/objtuple.h ../py/emit.h :
+  ../py/lexer.h ../py/reader.h ../py/scope.h ../py/parse.h :
+  ../py/emitglue.h ../py/bc.h ../py/runtime.h ../py/pystack.h :
+  ../py/objfun.h ../py/bc0.h :
Binary files MicorpythonOriginal1.12/micropython/mpy-cross/build/py/emitcommon.o and micropython1.12_withUlab/micropython/mpy-cross/build/py/emitcommon.o differ
diff -crNb MicorpythonOriginal1.12/micropython/mpy-cross/build/py/emitcommon.P micropython1.12_withUlab/micropython/mpy-cross/build/py/emitcommon.P
*** MicorpythonOriginal1.12/micropython/mpy-cross/build/py/emitcommon.P	1970-01-01 02:00:00.000000000 +0200
--- micropython1.12_withUlab/micropython/mpy-cross/build/py/emitcommon.P	2020-06-19 18:37:33.947624381 +0200
***************
*** 0 ****
--- 1,56 ----
+ build/py/emitcommon.o: ../py/emitcommon.c /usr/include/stdc-predef.h \
+  /usr/include/assert.h /usr/include/features.h \
+  /usr/include/x86_64-linux-gnu/sys/cdefs.h \
+  /usr/include/x86_64-linux-gnu/bits/wordsize.h \
+  /usr/include/x86_64-linux-gnu/bits/long-double.h \
+  /usr/include/x86_64-linux-gnu/gnu/stubs.h \
+  /usr/include/x86_64-linux-gnu/gnu/stubs-64.h ../py/emit.h ../py/lexer.h \
+  /usr/lib/gcc/x86_64-linux-gnu/7/include/stdint.h /usr/include/stdint.h \
+  /usr/include/x86_64-linux-gnu/bits/libc-header-start.h \
+  /usr/include/x86_64-linux-gnu/bits/types.h \
+  /usr/include/x86_64-linux-gnu/bits/typesizes.h \
+  /usr/include/x86_64-linux-gnu/bits/wchar.h \
+  /usr/include/x86_64-linux-gnu/bits/stdint-intn.h \
+  /usr/include/x86_64-linux-gnu/bits/stdint-uintn.h ../py/mpconfig.h \
+  mpconfigport.h /usr/include/alloca.h \
+  /usr/lib/gcc/x86_64-linux-gnu/7/include/stddef.h ../py/qstr.h \
+  ../py/misc.h /usr/lib/gcc/x86_64-linux-gnu/7/include/stdbool.h \
+  build/genhdr/qstrdefs.generated.h ../py/reader.h ../py/obj.h \
+  ../py/mpprint.h ../py/runtime0.h ../py/scope.h ../py/parse.h \
+  ../py/emitglue.h ../py/bc.h ../py/runtime.h ../py/mpstate.h \
+  ../py/mpthread.h ../py/nlr.h \
+  /usr/lib/gcc/x86_64-linux-gnu/7/include-fixed/limits.h \
+  /usr/lib/gcc/x86_64-linux-gnu/7/include-fixed/syslimits.h \
+  /usr/include/limits.h /usr/include/x86_64-linux-gnu/bits/posix1_lim.h \
+  /usr/include/x86_64-linux-gnu/bits/local_lim.h \
+  /usr/include/linux/limits.h \
+  /usr/include/x86_64-linux-gnu/bits/posix2_lim.h ../py/objlist.h \
+  ../py/objexcept.h ../py/objtuple.h ../py/pystack.h ../py/objfun.h
+ ../py/emitcommon.c /usr/include/stdc-predef.h :
+  /usr/include/assert.h /usr/include/features.h :
+  /usr/include/x86_64-linux-gnu/sys/cdefs.h :
+  /usr/include/x86_64-linux-gnu/bits/wordsize.h :
+  /usr/include/x86_64-linux-gnu/bits/long-double.h :
+  /usr/include/x86_64-linux-gnu/gnu/stubs.h :
+  /usr/include/x86_64-linux-gnu/gnu/stubs-64.h ../py/emit.h ../py/lexer.h :
+  /usr/lib/gcc/x86_64-linux-gnu/7/include/stdint.h /usr/include/stdint.h :
+  /usr/include/x86_64-linux-gnu/bits/libc-header-start.h :
+  /usr/include/x86_64-linux-gnu/bits/types.h :
+  /usr/include/x86_64-linux-gnu/bits/typesizes.h :
+  /usr/include/x86_64-linux-gnu/bits/wchar.h :
+  /usr/include/x86_64-linux-gnu/bits/stdint-intn.h :
+  /usr/include/x86_64-linux-gnu/bits/stdint-uintn.h ../py/mpconfig.h :
+  mpconfigport.h /usr/include/alloca.h :
+  /usr/lib/gcc/x86_64-linux-gnu/7/include/stddef.h ../py/qstr.h :
+  ../py/misc.h /usr/lib/gcc/x86_64-linux-gnu/7/include/stdbool.h :
+  build/genhdr/qstrdefs.generated.h ../py/reader.h ../py/obj.h :
+  ../py/mpprint.h ../py/runtime0.h ../py/scope.h ../py/parse.h :
+  ../py/emitglue.h ../py/bc.h ../py/runtime.h ../py/mpstate.h :
+  ../py/mpthread.h ../py/nlr.h :
+  /usr/lib/gcc/x86_64-linux-gnu/7/include-fixed/limits.h :
+  /usr/lib/gcc/x86_64-linux-gnu/7/include-fixed/syslimits.h :
+  /usr/include/limits.h /usr/include/x86_64-linux-gnu/bits/posix1_lim.h :
+  /usr/include/x86_64-linux-gnu/bits/local_lim.h :
+  /usr/include/linux/limits.h :
+  /usr/include/x86_64-linux-gnu/bits/posix2_lim.h ../py/objlist.h :
+  ../py/objexcept.h ../py/objtuple.h ../py/pystack.h ../py/objfun.h :
Binary files MicorpythonOriginal1.12/micropython/mpy-cross/build/py/emitglue.o and micropython1.12_withUlab/micropython/mpy-cross/build/py/emitglue.o differ
diff -crNb MicorpythonOriginal1.12/micropython/mpy-cross/build/py/emitglue.P micropython1.12_withUlab/micropython/mpy-cross/build/py/emitglue.P
*** MicorpythonOriginal1.12/micropython/mpy-cross/build/py/emitglue.P	1970-01-01 02:00:00.000000000 +0200
--- micropython1.12_withUlab/micropython/mpy-cross/build/py/emitglue.P	2020-06-19 18:37:36.183576229 +0200
***************
*** 0 ****
--- 1,82 ----
+ build/py/emitglue.o: ../py/emitglue.c /usr/include/stdc-predef.h \
+  /usr/lib/gcc/x86_64-linux-gnu/7/include/stdint.h /usr/include/stdint.h \
+  /usr/include/x86_64-linux-gnu/bits/libc-header-start.h \
+  /usr/include/features.h /usr/include/x86_64-linux-gnu/sys/cdefs.h \
+  /usr/include/x86_64-linux-gnu/bits/wordsize.h \
+  /usr/include/x86_64-linux-gnu/bits/long-double.h \
+  /usr/include/x86_64-linux-gnu/gnu/stubs.h \
+  /usr/include/x86_64-linux-gnu/gnu/stubs-64.h \
+  /usr/include/x86_64-linux-gnu/bits/types.h \
+  /usr/include/x86_64-linux-gnu/bits/typesizes.h \
+  /usr/include/x86_64-linux-gnu/bits/wchar.h \
+  /usr/include/x86_64-linux-gnu/bits/stdint-intn.h \
+  /usr/include/x86_64-linux-gnu/bits/stdint-uintn.h /usr/include/stdio.h \
+  /usr/lib/gcc/x86_64-linux-gnu/7/include/stddef.h \
+  /usr/include/x86_64-linux-gnu/bits/types/__FILE.h \
+  /usr/include/x86_64-linux-gnu/bits/types/FILE.h \
+  /usr/include/x86_64-linux-gnu/bits/libio.h \
+  /usr/include/x86_64-linux-gnu/bits/_G_config.h \
+  /usr/include/x86_64-linux-gnu/bits/types/__mbstate_t.h \
+  /usr/lib/gcc/x86_64-linux-gnu/7/include/stdarg.h \
+  /usr/include/x86_64-linux-gnu/bits/stdio_lim.h \
+  /usr/include/x86_64-linux-gnu/bits/sys_errlist.h \
+  /usr/include/x86_64-linux-gnu/bits/stdio2.h /usr/include/string.h \
+  /usr/include/x86_64-linux-gnu/bits/types/locale_t.h \
+  /usr/include/x86_64-linux-gnu/bits/types/__locale_t.h \
+  /usr/include/strings.h \
+  /usr/include/x86_64-linux-gnu/bits/strings_fortified.h \
+  /usr/include/x86_64-linux-gnu/bits/string_fortified.h \
+  /usr/include/assert.h ../py/emitglue.h ../py/obj.h ../py/mpconfig.h \
+  mpconfigport.h /usr/include/alloca.h ../py/misc.h \
+  /usr/lib/gcc/x86_64-linux-gnu/7/include/stdbool.h ../py/qstr.h \
+  build/genhdr/qstrdefs.generated.h ../py/mpprint.h ../py/runtime0.h \
+  ../py/bc.h ../py/runtime.h ../py/mpstate.h ../py/mpthread.h ../py/nlr.h \
+  /usr/lib/gcc/x86_64-linux-gnu/7/include-fixed/limits.h \
+  /usr/lib/gcc/x86_64-linux-gnu/7/include-fixed/syslimits.h \
+  /usr/include/limits.h /usr/include/x86_64-linux-gnu/bits/posix1_lim.h \
+  /usr/include/x86_64-linux-gnu/bits/local_lim.h \
+  /usr/include/linux/limits.h \
+  /usr/include/x86_64-linux-gnu/bits/posix2_lim.h ../py/objlist.h \
+  ../py/objexcept.h ../py/objtuple.h ../py/pystack.h ../py/objfun.h \
+  ../py/profile.h
+ ../py/emitglue.c /usr/include/stdc-predef.h :
+  /usr/lib/gcc/x86_64-linux-gnu/7/include/stdint.h /usr/include/stdint.h :
+  /usr/include/x86_64-linux-gnu/bits/libc-header-start.h :
+  /usr/include/features.h /usr/include/x86_64-linux-gnu/sys/cdefs.h :
+  /usr/include/x86_64-linux-gnu/bits/wordsize.h :
+  /usr/include/x86_64-linux-gnu/bits/long-double.h :
+  /usr/include/x86_64-linux-gnu/gnu/stubs.h :
+  /usr/include/x86_64-linux-gnu/gnu/stubs-64.h :
+  /usr/include/x86_64-linux-gnu/bits/types.h :
+  /usr/include/x86_64-linux-gnu/bits/typesizes.h :
+  /usr/include/x86_64-linux-gnu/bits/wchar.h :
+  /usr/include/x86_64-linux-gnu/bits/stdint-intn.h :
+  /usr/include/x86_64-linux-gnu/bits/stdint-uintn.h /usr/include/stdio.h :
+  /usr/lib/gcc/x86_64-linux-gnu/7/include/stddef.h :
+  /usr/include/x86_64-linux-gnu/bits/types/__FILE.h :
+  /usr/include/x86_64-linux-gnu/bits/types/FILE.h :
+  /usr/include/x86_64-linux-gnu/bits/libio.h :
+  /usr/include/x86_64-linux-gnu/bits/_G_config.h :
+  /usr/include/x86_64-linux-gnu/bits/types/__mbstate_t.h :
+  /usr/lib/gcc/x86_64-linux-gnu/7/include/stdarg.h :
+  /usr/include/x86_64-linux-gnu/bits/stdio_lim.h :
+  /usr/include/x86_64-linux-gnu/bits/sys_errlist.h :
+  /usr/include/x86_64-linux-gnu/bits/stdio2.h /usr/include/string.h :
+  /usr/include/x86_64-linux-gnu/bits/types/locale_t.h :
+  /usr/include/x86_64-linux-gnu/bits/types/__locale_t.h :
+  /usr/include/strings.h :
+  /usr/include/x86_64-linux-gnu/bits/strings_fortified.h :
+  /usr/include/x86_64-linux-gnu/bits/string_fortified.h :
+  /usr/include/assert.h ../py/emitglue.h ../py/obj.h ../py/mpconfig.h :
+  mpconfigport.h /usr/include/alloca.h ../py/misc.h :
+  /usr/lib/gcc/x86_64-linux-gnu/7/include/stdbool.h ../py/qstr.h :
+  build/genhdr/qstrdefs.generated.h ../py/mpprint.h ../py/runtime0.h :
+  ../py/bc.h ../py/runtime.h ../py/mpstate.h ../py/mpthread.h ../py/nlr.h :
+  /usr/lib/gcc/x86_64-linux-gnu/7/include-fixed/limits.h :
+  /usr/lib/gcc/x86_64-linux-gnu/7/include-fixed/syslimits.h :
+  /usr/include/limits.h /usr/include/x86_64-linux-gnu/bits/posix1_lim.h :
+  /usr/include/x86_64-linux-gnu/bits/local_lim.h :
+  /usr/include/linux/limits.h :
+  /usr/include/x86_64-linux-gnu/bits/posix2_lim.h ../py/objlist.h :
+  ../py/objexcept.h ../py/objtuple.h ../py/pystack.h ../py/objfun.h :
+  ../py/profile.h :
Binary files MicorpythonOriginal1.12/micropython/mpy-cross/build/py/emitinlinethumb.o and micropython1.12_withUlab/micropython/mpy-cross/build/py/emitinlinethumb.o differ
diff -crNb MicorpythonOriginal1.12/micropython/mpy-cross/build/py/emitinlinethumb.P micropython1.12_withUlab/micropython/mpy-cross/build/py/emitinlinethumb.P
*** MicorpythonOriginal1.12/micropython/mpy-cross/build/py/emitinlinethumb.P	1970-01-01 02:00:00.000000000 +0200
--- micropython1.12_withUlab/micropython/mpy-cross/build/py/emitinlinethumb.P	2020-06-19 18:37:35.151598416 +0200
***************
*** 0 ****
--- 1,88 ----
+ build/py/emitinlinethumb.o: ../py/emitinlinethumb.c \
+  /usr/include/stdc-predef.h \
+  /usr/lib/gcc/x86_64-linux-gnu/7/include/stdint.h /usr/include/stdint.h \
+  /usr/include/x86_64-linux-gnu/bits/libc-header-start.h \
+  /usr/include/features.h /usr/include/x86_64-linux-gnu/sys/cdefs.h \
+  /usr/include/x86_64-linux-gnu/bits/wordsize.h \
+  /usr/include/x86_64-linux-gnu/bits/long-double.h \
+  /usr/include/x86_64-linux-gnu/gnu/stubs.h \
+  /usr/include/x86_64-linux-gnu/gnu/stubs-64.h \
+  /usr/include/x86_64-linux-gnu/bits/types.h \
+  /usr/include/x86_64-linux-gnu/bits/typesizes.h \
+  /usr/include/x86_64-linux-gnu/bits/wchar.h \
+  /usr/include/x86_64-linux-gnu/bits/stdint-intn.h \
+  /usr/include/x86_64-linux-gnu/bits/stdint-uintn.h /usr/include/stdio.h \
+  /usr/lib/gcc/x86_64-linux-gnu/7/include/stddef.h \
+  /usr/include/x86_64-linux-gnu/bits/types/__FILE.h \
+  /usr/include/x86_64-linux-gnu/bits/types/FILE.h \
+  /usr/include/x86_64-linux-gnu/bits/libio.h \
+  /usr/include/x86_64-linux-gnu/bits/_G_config.h \
+  /usr/include/x86_64-linux-gnu/bits/types/__mbstate_t.h \
+  /usr/lib/gcc/x86_64-linux-gnu/7/include/stdarg.h \
+  /usr/include/x86_64-linux-gnu/bits/stdio_lim.h \
+  /usr/include/x86_64-linux-gnu/bits/sys_errlist.h \
+  /usr/include/x86_64-linux-gnu/bits/stdio2.h /usr/include/string.h \
+  /usr/include/x86_64-linux-gnu/bits/types/locale_t.h \
+  /usr/include/x86_64-linux-gnu/bits/types/__locale_t.h \
+  /usr/include/strings.h \
+  /usr/include/x86_64-linux-gnu/bits/strings_fortified.h \
+  /usr/include/x86_64-linux-gnu/bits/string_fortified.h \
+  /usr/include/assert.h ../py/emit.h ../py/lexer.h ../py/mpconfig.h \
+  mpconfigport.h /usr/include/alloca.h ../py/qstr.h ../py/misc.h \
+  /usr/lib/gcc/x86_64-linux-gnu/7/include/stdbool.h \
+  build/genhdr/qstrdefs.generated.h ../py/reader.h ../py/obj.h \
+  ../py/mpprint.h ../py/runtime0.h ../py/scope.h ../py/parse.h \
+  ../py/emitglue.h ../py/bc.h ../py/runtime.h ../py/mpstate.h \
+  ../py/mpthread.h ../py/nlr.h \
+  /usr/lib/gcc/x86_64-linux-gnu/7/include-fixed/limits.h \
+  /usr/lib/gcc/x86_64-linux-gnu/7/include-fixed/syslimits.h \
+  /usr/include/limits.h /usr/include/x86_64-linux-gnu/bits/posix1_lim.h \
+  /usr/include/x86_64-linux-gnu/bits/local_lim.h \
+  /usr/include/linux/limits.h \
+  /usr/include/x86_64-linux-gnu/bits/posix2_lim.h ../py/objlist.h \
+  ../py/objexcept.h ../py/objtuple.h ../py/pystack.h ../py/objfun.h \
+  ../py/asmthumb.h ../py/asmbase.h ../py/grammar.h
+ ../py/emitinlinethumb.c :
+  /usr/include/stdc-predef.h :
+  /usr/lib/gcc/x86_64-linux-gnu/7/include/stdint.h /usr/include/stdint.h :
+  /usr/include/x86_64-linux-gnu/bits/libc-header-start.h :
+  /usr/include/features.h /usr/include/x86_64-linux-gnu/sys/cdefs.h :
+  /usr/include/x86_64-linux-gnu/bits/wordsize.h :
+  /usr/include/x86_64-linux-gnu/bits/long-double.h :
+  /usr/include/x86_64-linux-gnu/gnu/stubs.h :
+  /usr/include/x86_64-linux-gnu/gnu/stubs-64.h :
+  /usr/include/x86_64-linux-gnu/bits/types.h :
+  /usr/include/x86_64-linux-gnu/bits/typesizes.h :
+  /usr/include/x86_64-linux-gnu/bits/wchar.h :
+  /usr/include/x86_64-linux-gnu/bits/stdint-intn.h :
+  /usr/include/x86_64-linux-gnu/bits/stdint-uintn.h /usr/include/stdio.h :
+  /usr/lib/gcc/x86_64-linux-gnu/7/include/stddef.h :
+  /usr/include/x86_64-linux-gnu/bits/types/__FILE.h :
+  /usr/include/x86_64-linux-gnu/bits/types/FILE.h :
+  /usr/include/x86_64-linux-gnu/bits/libio.h :
+  /usr/include/x86_64-linux-gnu/bits/_G_config.h :
+  /usr/include/x86_64-linux-gnu/bits/types/__mbstate_t.h :
+  /usr/lib/gcc/x86_64-linux-gnu/7/include/stdarg.h :
+  /usr/include/x86_64-linux-gnu/bits/stdio_lim.h :
+  /usr/include/x86_64-linux-gnu/bits/sys_errlist.h :
+  /usr/include/x86_64-linux-gnu/bits/stdio2.h /usr/include/string.h :
+  /usr/include/x86_64-linux-gnu/bits/types/locale_t.h :
+  /usr/include/x86_64-linux-gnu/bits/types/__locale_t.h :
+  /usr/include/strings.h :
+  /usr/include/x86_64-linux-gnu/bits/strings_fortified.h :
+  /usr/include/x86_64-linux-gnu/bits/string_fortified.h :
+  /usr/include/assert.h ../py/emit.h ../py/lexer.h ../py/mpconfig.h :
+  mpconfigport.h /usr/include/alloca.h ../py/qstr.h ../py/misc.h :
+  /usr/lib/gcc/x86_64-linux-gnu/7/include/stdbool.h :
+  build/genhdr/qstrdefs.generated.h ../py/reader.h ../py/obj.h :
+  ../py/mpprint.h ../py/runtime0.h ../py/scope.h ../py/parse.h :
+  ../py/emitglue.h ../py/bc.h ../py/runtime.h ../py/mpstate.h :
+  ../py/mpthread.h ../py/nlr.h :
+  /usr/lib/gcc/x86_64-linux-gnu/7/include-fixed/limits.h :
+  /usr/lib/gcc/x86_64-linux-gnu/7/include-fixed/syslimits.h :
+  /usr/include/limits.h /usr/include/x86_64-linux-gnu/bits/posix1_lim.h :
+  /usr/include/x86_64-linux-gnu/bits/local_lim.h :
+  /usr/include/linux/limits.h :
+  /usr/include/x86_64-linux-gnu/bits/posix2_lim.h ../py/objlist.h :
+  ../py/objexcept.h ../py/objtuple.h ../py/pystack.h ../py/objfun.h :
+  ../py/asmthumb.h ../py/asmbase.h ../py/grammar.h :
Binary files MicorpythonOriginal1.12/micropython/mpy-cross/build/py/emitinlinextensa.o and micropython1.12_withUlab/micropython/mpy-cross/build/py/emitinlinextensa.o differ
diff -crNb MicorpythonOriginal1.12/micropython/mpy-cross/build/py/emitinlinextensa.P micropython1.12_withUlab/micropython/mpy-cross/build/py/emitinlinextensa.P
*** MicorpythonOriginal1.12/micropython/mpy-cross/build/py/emitinlinextensa.P	1970-01-01 02:00:00.000000000 +0200
--- micropython1.12_withUlab/micropython/mpy-cross/build/py/emitinlinextensa.P	2020-06-19 18:37:35.799584478 +0200
***************
*** 0 ****
--- 1,88 ----
+ build/py/emitinlinextensa.o: ../py/emitinlinextensa.c \
+  /usr/include/stdc-predef.h \
+  /usr/lib/gcc/x86_64-linux-gnu/7/include/stdint.h /usr/include/stdint.h \
+  /usr/include/x86_64-linux-gnu/bits/libc-header-start.h \
+  /usr/include/features.h /usr/include/x86_64-linux-gnu/sys/cdefs.h \
+  /usr/include/x86_64-linux-gnu/bits/wordsize.h \
+  /usr/include/x86_64-linux-gnu/bits/long-double.h \
+  /usr/include/x86_64-linux-gnu/gnu/stubs.h \
+  /usr/include/x86_64-linux-gnu/gnu/stubs-64.h \
+  /usr/include/x86_64-linux-gnu/bits/types.h \
+  /usr/include/x86_64-linux-gnu/bits/typesizes.h \
+  /usr/include/x86_64-linux-gnu/bits/wchar.h \
+  /usr/include/x86_64-linux-gnu/bits/stdint-intn.h \
+  /usr/include/x86_64-linux-gnu/bits/stdint-uintn.h /usr/include/stdio.h \
+  /usr/lib/gcc/x86_64-linux-gnu/7/include/stddef.h \
+  /usr/include/x86_64-linux-gnu/bits/types/__FILE.h \
+  /usr/include/x86_64-linux-gnu/bits/types/FILE.h \
+  /usr/include/x86_64-linux-gnu/bits/libio.h \
+  /usr/include/x86_64-linux-gnu/bits/_G_config.h \
+  /usr/include/x86_64-linux-gnu/bits/types/__mbstate_t.h \
+  /usr/lib/gcc/x86_64-linux-gnu/7/include/stdarg.h \
+  /usr/include/x86_64-linux-gnu/bits/stdio_lim.h \
+  /usr/include/x86_64-linux-gnu/bits/sys_errlist.h \
+  /usr/include/x86_64-linux-gnu/bits/stdio2.h /usr/include/string.h \
+  /usr/include/x86_64-linux-gnu/bits/types/locale_t.h \
+  /usr/include/x86_64-linux-gnu/bits/types/__locale_t.h \
+  /usr/include/strings.h \
+  /usr/include/x86_64-linux-gnu/bits/strings_fortified.h \
+  /usr/include/x86_64-linux-gnu/bits/string_fortified.h \
+  /usr/include/assert.h ../py/emit.h ../py/lexer.h ../py/mpconfig.h \
+  mpconfigport.h /usr/include/alloca.h ../py/qstr.h ../py/misc.h \
+  /usr/lib/gcc/x86_64-linux-gnu/7/include/stdbool.h \
+  build/genhdr/qstrdefs.generated.h ../py/reader.h ../py/obj.h \
+  ../py/mpprint.h ../py/runtime0.h ../py/scope.h ../py/parse.h \
+  ../py/emitglue.h ../py/bc.h ../py/runtime.h ../py/mpstate.h \
+  ../py/mpthread.h ../py/nlr.h \
+  /usr/lib/gcc/x86_64-linux-gnu/7/include-fixed/limits.h \
+  /usr/lib/gcc/x86_64-linux-gnu/7/include-fixed/syslimits.h \
+  /usr/include/limits.h /usr/include/x86_64-linux-gnu/bits/posix1_lim.h \
+  /usr/include/x86_64-linux-gnu/bits/local_lim.h \
+  /usr/include/linux/limits.h \
+  /usr/include/x86_64-linux-gnu/bits/posix2_lim.h ../py/objlist.h \
+  ../py/objexcept.h ../py/objtuple.h ../py/pystack.h ../py/objfun.h \
+  ../py/asmxtensa.h ../py/asmbase.h
+ ../py/emitinlinextensa.c :
+  /usr/include/stdc-predef.h :
+  /usr/lib/gcc/x86_64-linux-gnu/7/include/stdint.h /usr/include/stdint.h :
+  /usr/include/x86_64-linux-gnu/bits/libc-header-start.h :
+  /usr/include/features.h /usr/include/x86_64-linux-gnu/sys/cdefs.h :
+  /usr/include/x86_64-linux-gnu/bits/wordsize.h :
+  /usr/include/x86_64-linux-gnu/bits/long-double.h :
+  /usr/include/x86_64-linux-gnu/gnu/stubs.h :
+  /usr/include/x86_64-linux-gnu/gnu/stubs-64.h :
+  /usr/include/x86_64-linux-gnu/bits/types.h :
+  /usr/include/x86_64-linux-gnu/bits/typesizes.h :
+  /usr/include/x86_64-linux-gnu/bits/wchar.h :
+  /usr/include/x86_64-linux-gnu/bits/stdint-intn.h :
+  /usr/include/x86_64-linux-gnu/bits/stdint-uintn.h /usr/include/stdio.h :
+  /usr/lib/gcc/x86_64-linux-gnu/7/include/stddef.h :
+  /usr/include/x86_64-linux-gnu/bits/types/__FILE.h :
+  /usr/include/x86_64-linux-gnu/bits/types/FILE.h :
+  /usr/include/x86_64-linux-gnu/bits/libio.h :
+  /usr/include/x86_64-linux-gnu/bits/_G_config.h :
+  /usr/include/x86_64-linux-gnu/bits/types/__mbstate_t.h :
+  /usr/lib/gcc/x86_64-linux-gnu/7/include/stdarg.h :
+  /usr/include/x86_64-linux-gnu/bits/stdio_lim.h :
+  /usr/include/x86_64-linux-gnu/bits/sys_errlist.h :
+  /usr/include/x86_64-linux-gnu/bits/stdio2.h /usr/include/string.h :
+  /usr/include/x86_64-linux-gnu/bits/types/locale_t.h :
+  /usr/include/x86_64-linux-gnu/bits/types/__locale_t.h :
+  /usr/include/strings.h :
+  /usr/include/x86_64-linux-gnu/bits/strings_fortified.h :
+  /usr/include/x86_64-linux-gnu/bits/string_fortified.h :
+  /usr/include/assert.h ../py/emit.h ../py/lexer.h ../py/mpconfig.h :
+  mpconfigport.h /usr/include/alloca.h ../py/qstr.h ../py/misc.h :
+  /usr/lib/gcc/x86_64-linux-gnu/7/include/stdbool.h :
+  build/genhdr/qstrdefs.generated.h ../py/reader.h ../py/obj.h :
+  ../py/mpprint.h ../py/runtime0.h ../py/scope.h ../py/parse.h :
+  ../py/emitglue.h ../py/bc.h ../py/runtime.h ../py/mpstate.h :
+  ../py/mpthread.h ../py/nlr.h :
+  /usr/lib/gcc/x86_64-linux-gnu/7/include-fixed/limits.h :
+  /usr/lib/gcc/x86_64-linux-gnu/7/include-fixed/syslimits.h :
+  /usr/include/limits.h /usr/include/x86_64-linux-gnu/bits/posix1_lim.h :
+  /usr/include/x86_64-linux-gnu/bits/local_lim.h :
+  /usr/include/linux/limits.h :
+  /usr/include/x86_64-linux-gnu/bits/posix2_lim.h ../py/objlist.h :
+  ../py/objexcept.h ../py/objtuple.h ../py/pystack.h ../py/objfun.h :
+  ../py/asmxtensa.h ../py/asmbase.h :
Binary files MicorpythonOriginal1.12/micropython/mpy-cross/build/py/emitnarm.o and micropython1.12_withUlab/micropython/mpy-cross/build/py/emitnarm.o differ
diff -crNb MicorpythonOriginal1.12/micropython/mpy-cross/build/py/emitnarm.P micropython1.12_withUlab/micropython/mpy-cross/build/py/emitnarm.P
*** MicorpythonOriginal1.12/micropython/mpy-cross/build/py/emitnarm.P	1970-01-01 02:00:00.000000000 +0200
--- micropython1.12_withUlab/micropython/mpy-cross/build/py/emitnarm.P	2020-06-19 18:37:35.435592307 +0200
***************
*** 0 ****
--- 1,96 ----
+ build/py/emitnarm.o: ../py/emitnarm.c /usr/include/stdc-predef.h \
+  ../py/mpconfig.h mpconfigport.h /usr/include/alloca.h \
+  /usr/include/features.h /usr/include/x86_64-linux-gnu/sys/cdefs.h \
+  /usr/include/x86_64-linux-gnu/bits/wordsize.h \
+  /usr/include/x86_64-linux-gnu/bits/long-double.h \
+  /usr/include/x86_64-linux-gnu/gnu/stubs.h \
+  /usr/include/x86_64-linux-gnu/gnu/stubs-64.h \
+  /usr/lib/gcc/x86_64-linux-gnu/7/include/stddef.h \
+  /usr/lib/gcc/x86_64-linux-gnu/7/include/stdint.h /usr/include/stdint.h \
+  /usr/include/x86_64-linux-gnu/bits/libc-header-start.h \
+  /usr/include/x86_64-linux-gnu/bits/types.h \
+  /usr/include/x86_64-linux-gnu/bits/typesizes.h \
+  /usr/include/x86_64-linux-gnu/bits/wchar.h \
+  /usr/include/x86_64-linux-gnu/bits/stdint-intn.h \
+  /usr/include/x86_64-linux-gnu/bits/stdint-uintn.h ../py/asmarm.h \
+  ../py/misc.h /usr/lib/gcc/x86_64-linux-gnu/7/include/stdbool.h \
+  ../py/asmbase.h ../py/emitnative.c /usr/include/stdio.h \
+  /usr/include/x86_64-linux-gnu/bits/types/__FILE.h \
+  /usr/include/x86_64-linux-gnu/bits/types/FILE.h \
+  /usr/include/x86_64-linux-gnu/bits/libio.h \
+  /usr/include/x86_64-linux-gnu/bits/_G_config.h \
+  /usr/include/x86_64-linux-gnu/bits/types/__mbstate_t.h \
+  /usr/lib/gcc/x86_64-linux-gnu/7/include/stdarg.h \
+  /usr/include/x86_64-linux-gnu/bits/stdio_lim.h \
+  /usr/include/x86_64-linux-gnu/bits/sys_errlist.h \
+  /usr/include/x86_64-linux-gnu/bits/stdio2.h /usr/include/string.h \
+  /usr/include/x86_64-linux-gnu/bits/types/locale_t.h \
+  /usr/include/x86_64-linux-gnu/bits/types/__locale_t.h \
+  /usr/include/strings.h \
+  /usr/include/x86_64-linux-gnu/bits/strings_fortified.h \
+  /usr/include/x86_64-linux-gnu/bits/string_fortified.h \
+  /usr/include/assert.h ../py/emit.h ../py/lexer.h ../py/qstr.h \
+  build/genhdr/qstrdefs.generated.h ../py/reader.h ../py/obj.h \
+  ../py/mpprint.h ../py/runtime0.h ../py/scope.h ../py/parse.h \
+  ../py/emitglue.h ../py/bc.h ../py/runtime.h ../py/mpstate.h \
+  ../py/mpthread.h ../py/nlr.h \
+  /usr/lib/gcc/x86_64-linux-gnu/7/include-fixed/limits.h \
+  /usr/lib/gcc/x86_64-linux-gnu/7/include-fixed/syslimits.h \
+  /usr/include/limits.h /usr/include/x86_64-linux-gnu/bits/posix1_lim.h \
+  /usr/include/x86_64-linux-gnu/bits/local_lim.h \
+  /usr/include/linux/limits.h \
+  /usr/include/x86_64-linux-gnu/bits/posix2_lim.h ../py/objlist.h \
+  ../py/objexcept.h ../py/objtuple.h ../py/pystack.h ../py/objfun.h \
+  ../py/nativeglue.h ../py/persistentcode.h ../py/stream.h ../py/mperrno.h \
+  /usr/include/errno.h /usr/include/x86_64-linux-gnu/bits/errno.h \
+  /usr/include/linux/errno.h /usr/include/x86_64-linux-gnu/asm/errno.h \
+  /usr/include/asm-generic/errno.h /usr/include/asm-generic/errno-base.h \
+  ../py/objstr.h
+ ../py/emitnarm.c /usr/include/stdc-predef.h :
+  ../py/mpconfig.h mpconfigport.h /usr/include/alloca.h :
+  /usr/include/features.h /usr/include/x86_64-linux-gnu/sys/cdefs.h :
+  /usr/include/x86_64-linux-gnu/bits/wordsize.h :
+  /usr/include/x86_64-linux-gnu/bits/long-double.h :
+  /usr/include/x86_64-linux-gnu/gnu/stubs.h :
+  /usr/include/x86_64-linux-gnu/gnu/stubs-64.h :
+  /usr/lib/gcc/x86_64-linux-gnu/7/include/stddef.h :
+  /usr/lib/gcc/x86_64-linux-gnu/7/include/stdint.h /usr/include/stdint.h :
+  /usr/include/x86_64-linux-gnu/bits/libc-header-start.h :
+  /usr/include/x86_64-linux-gnu/bits/types.h :
+  /usr/include/x86_64-linux-gnu/bits/typesizes.h :
+  /usr/include/x86_64-linux-gnu/bits/wchar.h :
+  /usr/include/x86_64-linux-gnu/bits/stdint-intn.h :
+  /usr/include/x86_64-linux-gnu/bits/stdint-uintn.h ../py/asmarm.h :
+  ../py/misc.h /usr/lib/gcc/x86_64-linux-gnu/7/include/stdbool.h :
+  ../py/asmbase.h ../py/emitnative.c /usr/include/stdio.h :
+  /usr/include/x86_64-linux-gnu/bits/types/__FILE.h :
+  /usr/include/x86_64-linux-gnu/bits/types/FILE.h :
+  /usr/include/x86_64-linux-gnu/bits/libio.h :
+  /usr/include/x86_64-linux-gnu/bits/_G_config.h :
+  /usr/include/x86_64-linux-gnu/bits/types/__mbstate_t.h :
+  /usr/lib/gcc/x86_64-linux-gnu/7/include/stdarg.h :
+  /usr/include/x86_64-linux-gnu/bits/stdio_lim.h :
+  /usr/include/x86_64-linux-gnu/bits/sys_errlist.h :
+  /usr/include/x86_64-linux-gnu/bits/stdio2.h /usr/include/string.h :
+  /usr/include/x86_64-linux-gnu/bits/types/locale_t.h :
+  /usr/include/x86_64-linux-gnu/bits/types/__locale_t.h :
+  /usr/include/strings.h :
+  /usr/include/x86_64-linux-gnu/bits/strings_fortified.h :
+  /usr/include/x86_64-linux-gnu/bits/string_fortified.h :
+  /usr/include/assert.h ../py/emit.h ../py/lexer.h ../py/qstr.h :
+  build/genhdr/qstrdefs.generated.h ../py/reader.h ../py/obj.h :
+  ../py/mpprint.h ../py/runtime0.h ../py/scope.h ../py/parse.h :
+  ../py/emitglue.h ../py/bc.h ../py/runtime.h ../py/mpstate.h :
+  ../py/mpthread.h ../py/nlr.h :
+  /usr/lib/gcc/x86_64-linux-gnu/7/include-fixed/limits.h :
+  /usr/lib/gcc/x86_64-linux-gnu/7/include-fixed/syslimits.h :
+  /usr/include/limits.h /usr/include/x86_64-linux-gnu/bits/posix1_lim.h :
+  /usr/include/x86_64-linux-gnu/bits/local_lim.h :
+  /usr/include/linux/limits.h :
+  /usr/include/x86_64-linux-gnu/bits/posix2_lim.h ../py/objlist.h :
+  ../py/objexcept.h ../py/objtuple.h ../py/pystack.h ../py/objfun.h :
+  ../py/nativeglue.h ../py/persistentcode.h ../py/stream.h ../py/mperrno.h :
+  /usr/include/errno.h /usr/include/x86_64-linux-gnu/bits/errno.h :
+  /usr/include/linux/errno.h /usr/include/x86_64-linux-gnu/asm/errno.h :
+  /usr/include/asm-generic/errno.h /usr/include/asm-generic/errno-base.h :
+  ../py/objstr.h :
Binary files MicorpythonOriginal1.12/micropython/mpy-cross/build/py/emitnthumb.o and micropython1.12_withUlab/micropython/mpy-cross/build/py/emitnthumb.o differ
diff -crNb MicorpythonOriginal1.12/micropython/mpy-cross/build/py/emitnthumb.P micropython1.12_withUlab/micropython/mpy-cross/build/py/emitnthumb.P
*** MicorpythonOriginal1.12/micropython/mpy-cross/build/py/emitnthumb.P	1970-01-01 02:00:00.000000000 +0200
--- micropython1.12_withUlab/micropython/mpy-cross/build/py/emitnthumb.P	2020-06-19 18:37:35.035600911 +0200
***************
*** 0 ****
--- 1,96 ----
+ build/py/emitnthumb.o: ../py/emitnthumb.c /usr/include/stdc-predef.h \
+  ../py/mpconfig.h mpconfigport.h /usr/include/alloca.h \
+  /usr/include/features.h /usr/include/x86_64-linux-gnu/sys/cdefs.h \
+  /usr/include/x86_64-linux-gnu/bits/wordsize.h \
+  /usr/include/x86_64-linux-gnu/bits/long-double.h \
+  /usr/include/x86_64-linux-gnu/gnu/stubs.h \
+  /usr/include/x86_64-linux-gnu/gnu/stubs-64.h \
+  /usr/lib/gcc/x86_64-linux-gnu/7/include/stddef.h \
+  /usr/lib/gcc/x86_64-linux-gnu/7/include/stdint.h /usr/include/stdint.h \
+  /usr/include/x86_64-linux-gnu/bits/libc-header-start.h \
+  /usr/include/x86_64-linux-gnu/bits/types.h \
+  /usr/include/x86_64-linux-gnu/bits/typesizes.h \
+  /usr/include/x86_64-linux-gnu/bits/wchar.h \
+  /usr/include/x86_64-linux-gnu/bits/stdint-intn.h \
+  /usr/include/x86_64-linux-gnu/bits/stdint-uintn.h ../py/asmthumb.h \
+  /usr/include/assert.h ../py/misc.h \
+  /usr/lib/gcc/x86_64-linux-gnu/7/include/stdbool.h ../py/asmbase.h \
+  ../py/emitnative.c /usr/include/stdio.h \
+  /usr/include/x86_64-linux-gnu/bits/types/__FILE.h \
+  /usr/include/x86_64-linux-gnu/bits/types/FILE.h \
+  /usr/include/x86_64-linux-gnu/bits/libio.h \
+  /usr/include/x86_64-linux-gnu/bits/_G_config.h \
+  /usr/include/x86_64-linux-gnu/bits/types/__mbstate_t.h \
+  /usr/lib/gcc/x86_64-linux-gnu/7/include/stdarg.h \
+  /usr/include/x86_64-linux-gnu/bits/stdio_lim.h \
+  /usr/include/x86_64-linux-gnu/bits/sys_errlist.h \
+  /usr/include/x86_64-linux-gnu/bits/stdio2.h /usr/include/string.h \
+  /usr/include/x86_64-linux-gnu/bits/types/locale_t.h \
+  /usr/include/x86_64-linux-gnu/bits/types/__locale_t.h \
+  /usr/include/strings.h \
+  /usr/include/x86_64-linux-gnu/bits/strings_fortified.h \
+  /usr/include/x86_64-linux-gnu/bits/string_fortified.h ../py/emit.h \
+  ../py/lexer.h ../py/qstr.h build/genhdr/qstrdefs.generated.h \
+  ../py/reader.h ../py/obj.h ../py/mpprint.h ../py/runtime0.h \
+  ../py/scope.h ../py/parse.h ../py/emitglue.h ../py/bc.h ../py/runtime.h \
+  ../py/mpstate.h ../py/mpthread.h ../py/nlr.h \
+  /usr/lib/gcc/x86_64-linux-gnu/7/include-fixed/limits.h \
+  /usr/lib/gcc/x86_64-linux-gnu/7/include-fixed/syslimits.h \
+  /usr/include/limits.h /usr/include/x86_64-linux-gnu/bits/posix1_lim.h \
+  /usr/include/x86_64-linux-gnu/bits/local_lim.h \
+  /usr/include/linux/limits.h \
+  /usr/include/x86_64-linux-gnu/bits/posix2_lim.h ../py/objlist.h \
+  ../py/objexcept.h ../py/objtuple.h ../py/pystack.h ../py/objfun.h \
+  ../py/nativeglue.h ../py/persistentcode.h ../py/stream.h ../py/mperrno.h \
+  /usr/include/errno.h /usr/include/x86_64-linux-gnu/bits/errno.h \
+  /usr/include/linux/errno.h /usr/include/x86_64-linux-gnu/asm/errno.h \
+  /usr/include/asm-generic/errno.h /usr/include/asm-generic/errno-base.h \
+  ../py/objstr.h
+ ../py/emitnthumb.c /usr/include/stdc-predef.h :
+  ../py/mpconfig.h mpconfigport.h /usr/include/alloca.h :
+  /usr/include/features.h /usr/include/x86_64-linux-gnu/sys/cdefs.h :
+  /usr/include/x86_64-linux-gnu/bits/wordsize.h :
+  /usr/include/x86_64-linux-gnu/bits/long-double.h :
+  /usr/include/x86_64-linux-gnu/gnu/stubs.h :
+  /usr/include/x86_64-linux-gnu/gnu/stubs-64.h :
+  /usr/lib/gcc/x86_64-linux-gnu/7/include/stddef.h :
+  /usr/lib/gcc/x86_64-linux-gnu/7/include/stdint.h /usr/include/stdint.h :
+  /usr/include/x86_64-linux-gnu/bits/libc-header-start.h :
+  /usr/include/x86_64-linux-gnu/bits/types.h :
+  /usr/include/x86_64-linux-gnu/bits/typesizes.h :
+  /usr/include/x86_64-linux-gnu/bits/wchar.h :
+  /usr/include/x86_64-linux-gnu/bits/stdint-intn.h :
+  /usr/include/x86_64-linux-gnu/bits/stdint-uintn.h ../py/asmthumb.h :
+  /usr/include/assert.h ../py/misc.h :
+  /usr/lib/gcc/x86_64-linux-gnu/7/include/stdbool.h ../py/asmbase.h :
+  ../py/emitnative.c /usr/include/stdio.h :
+  /usr/include/x86_64-linux-gnu/bits/types/__FILE.h :
+  /usr/include/x86_64-linux-gnu/bits/types/FILE.h :
+  /usr/include/x86_64-linux-gnu/bits/libio.h :
+  /usr/include/x86_64-linux-gnu/bits/_G_config.h :
+  /usr/include/x86_64-linux-gnu/bits/types/__mbstate_t.h :
+  /usr/lib/gcc/x86_64-linux-gnu/7/include/stdarg.h :
+  /usr/include/x86_64-linux-gnu/bits/stdio_lim.h :
+  /usr/include/x86_64-linux-gnu/bits/sys_errlist.h :
+  /usr/include/x86_64-linux-gnu/bits/stdio2.h /usr/include/string.h :
+  /usr/include/x86_64-linux-gnu/bits/types/locale_t.h :
+  /usr/include/x86_64-linux-gnu/bits/types/__locale_t.h :
+  /usr/include/strings.h :
+  /usr/include/x86_64-linux-gnu/bits/strings_fortified.h :
+  /usr/include/x86_64-linux-gnu/bits/string_fortified.h ../py/emit.h :
+  ../py/lexer.h ../py/qstr.h build/genhdr/qstrdefs.generated.h :
+  ../py/reader.h ../py/obj.h ../py/mpprint.h ../py/runtime0.h :
+  ../py/scope.h ../py/parse.h ../py/emitglue.h ../py/bc.h ../py/runtime.h :
+  ../py/mpstate.h ../py/mpthread.h ../py/nlr.h :
+  /usr/lib/gcc/x86_64-linux-gnu/7/include-fixed/limits.h :
+  /usr/lib/gcc/x86_64-linux-gnu/7/include-fixed/syslimits.h :
+  /usr/include/limits.h /usr/include/x86_64-linux-gnu/bits/posix1_lim.h :
+  /usr/include/x86_64-linux-gnu/bits/local_lim.h :
+  /usr/include/linux/limits.h :
+  /usr/include/x86_64-linux-gnu/bits/posix2_lim.h ../py/objlist.h :
+  ../py/objexcept.h ../py/objtuple.h ../py/pystack.h ../py/objfun.h :
+  ../py/nativeglue.h ../py/persistentcode.h ../py/stream.h ../py/mperrno.h :
+  /usr/include/errno.h /usr/include/x86_64-linux-gnu/bits/errno.h :
+  /usr/include/linux/errno.h /usr/include/x86_64-linux-gnu/asm/errno.h :
+  /usr/include/asm-generic/errno.h /usr/include/asm-generic/errno-base.h :
+  ../py/objstr.h :
Binary files MicorpythonOriginal1.12/micropython/mpy-cross/build/py/emitnx64.o and micropython1.12_withUlab/micropython/mpy-cross/build/py/emitnx64.o differ
diff -crNb MicorpythonOriginal1.12/micropython/mpy-cross/build/py/emitnx64.P micropython1.12_withUlab/micropython/mpy-cross/build/py/emitnx64.P
*** MicorpythonOriginal1.12/micropython/mpy-cross/build/py/emitnx64.P	1970-01-01 02:00:00.000000000 +0200
--- micropython1.12_withUlab/micropython/mpy-cross/build/py/emitnx64.P	2020-06-19 18:37:34.383614973 +0200
***************
*** 0 ****
--- 1,96 ----
+ build/py/emitnx64.o: ../py/emitnx64.c /usr/include/stdc-predef.h \
+  ../py/mpconfig.h mpconfigport.h /usr/include/alloca.h \
+  /usr/include/features.h /usr/include/x86_64-linux-gnu/sys/cdefs.h \
+  /usr/include/x86_64-linux-gnu/bits/wordsize.h \
+  /usr/include/x86_64-linux-gnu/bits/long-double.h \
+  /usr/include/x86_64-linux-gnu/gnu/stubs.h \
+  /usr/include/x86_64-linux-gnu/gnu/stubs-64.h \
+  /usr/lib/gcc/x86_64-linux-gnu/7/include/stddef.h \
+  /usr/lib/gcc/x86_64-linux-gnu/7/include/stdint.h /usr/include/stdint.h \
+  /usr/include/x86_64-linux-gnu/bits/libc-header-start.h \
+  /usr/include/x86_64-linux-gnu/bits/types.h \
+  /usr/include/x86_64-linux-gnu/bits/typesizes.h \
+  /usr/include/x86_64-linux-gnu/bits/wchar.h \
+  /usr/include/x86_64-linux-gnu/bits/stdint-intn.h \
+  /usr/include/x86_64-linux-gnu/bits/stdint-uintn.h ../py/asmx64.h \
+  ../py/misc.h /usr/lib/gcc/x86_64-linux-gnu/7/include/stdbool.h \
+  ../py/asmbase.h ../py/emitnative.c /usr/include/stdio.h \
+  /usr/include/x86_64-linux-gnu/bits/types/__FILE.h \
+  /usr/include/x86_64-linux-gnu/bits/types/FILE.h \
+  /usr/include/x86_64-linux-gnu/bits/libio.h \
+  /usr/include/x86_64-linux-gnu/bits/_G_config.h \
+  /usr/include/x86_64-linux-gnu/bits/types/__mbstate_t.h \
+  /usr/lib/gcc/x86_64-linux-gnu/7/include/stdarg.h \
+  /usr/include/x86_64-linux-gnu/bits/stdio_lim.h \
+  /usr/include/x86_64-linux-gnu/bits/sys_errlist.h \
+  /usr/include/x86_64-linux-gnu/bits/stdio2.h /usr/include/string.h \
+  /usr/include/x86_64-linux-gnu/bits/types/locale_t.h \
+  /usr/include/x86_64-linux-gnu/bits/types/__locale_t.h \
+  /usr/include/strings.h \
+  /usr/include/x86_64-linux-gnu/bits/strings_fortified.h \
+  /usr/include/x86_64-linux-gnu/bits/string_fortified.h \
+  /usr/include/assert.h ../py/emit.h ../py/lexer.h ../py/qstr.h \
+  build/genhdr/qstrdefs.generated.h ../py/reader.h ../py/obj.h \
+  ../py/mpprint.h ../py/runtime0.h ../py/scope.h ../py/parse.h \
+  ../py/emitglue.h ../py/bc.h ../py/runtime.h ../py/mpstate.h \
+  ../py/mpthread.h ../py/nlr.h \
+  /usr/lib/gcc/x86_64-linux-gnu/7/include-fixed/limits.h \
+  /usr/lib/gcc/x86_64-linux-gnu/7/include-fixed/syslimits.h \
+  /usr/include/limits.h /usr/include/x86_64-linux-gnu/bits/posix1_lim.h \
+  /usr/include/x86_64-linux-gnu/bits/local_lim.h \
+  /usr/include/linux/limits.h \
+  /usr/include/x86_64-linux-gnu/bits/posix2_lim.h ../py/objlist.h \
+  ../py/objexcept.h ../py/objtuple.h ../py/pystack.h ../py/objfun.h \
+  ../py/nativeglue.h ../py/persistentcode.h ../py/stream.h ../py/mperrno.h \
+  /usr/include/errno.h /usr/include/x86_64-linux-gnu/bits/errno.h \
+  /usr/include/linux/errno.h /usr/include/x86_64-linux-gnu/asm/errno.h \
+  /usr/include/asm-generic/errno.h /usr/include/asm-generic/errno-base.h \
+  ../py/objstr.h
+ ../py/emitnx64.c /usr/include/stdc-predef.h :
+  ../py/mpconfig.h mpconfigport.h /usr/include/alloca.h :
+  /usr/include/features.h /usr/include/x86_64-linux-gnu/sys/cdefs.h :
+  /usr/include/x86_64-linux-gnu/bits/wordsize.h :
+  /usr/include/x86_64-linux-gnu/bits/long-double.h :
+  /usr/include/x86_64-linux-gnu/gnu/stubs.h :
+  /usr/include/x86_64-linux-gnu/gnu/stubs-64.h :
+  /usr/lib/gcc/x86_64-linux-gnu/7/include/stddef.h :
+  /usr/lib/gcc/x86_64-linux-gnu/7/include/stdint.h /usr/include/stdint.h :
+  /usr/include/x86_64-linux-gnu/bits/libc-header-start.h :
+  /usr/include/x86_64-linux-gnu/bits/types.h :
+  /usr/include/x86_64-linux-gnu/bits/typesizes.h :
+  /usr/include/x86_64-linux-gnu/bits/wchar.h :
+  /usr/include/x86_64-linux-gnu/bits/stdint-intn.h :
+  /usr/include/x86_64-linux-gnu/bits/stdint-uintn.h ../py/asmx64.h :
+  ../py/misc.h /usr/lib/gcc/x86_64-linux-gnu/7/include/stdbool.h :
+  ../py/asmbase.h ../py/emitnative.c /usr/include/stdio.h :
+  /usr/include/x86_64-linux-gnu/bits/types/__FILE.h :
+  /usr/include/x86_64-linux-gnu/bits/types/FILE.h :
+  /usr/include/x86_64-linux-gnu/bits/libio.h :
+  /usr/include/x86_64-linux-gnu/bits/_G_config.h :
+  /usr/include/x86_64-linux-gnu/bits/types/__mbstate_t.h :
+  /usr/lib/gcc/x86_64-linux-gnu/7/include/stdarg.h :
+  /usr/include/x86_64-linux-gnu/bits/stdio_lim.h :
+  /usr/include/x86_64-linux-gnu/bits/sys_errlist.h :
+  /usr/include/x86_64-linux-gnu/bits/stdio2.h /usr/include/string.h :
+  /usr/include/x86_64-linux-gnu/bits/types/locale_t.h :
+  /usr/include/x86_64-linux-gnu/bits/types/__locale_t.h :
+  /usr/include/strings.h :
+  /usr/include/x86_64-linux-gnu/bits/strings_fortified.h :
+  /usr/include/x86_64-linux-gnu/bits/string_fortified.h :
+  /usr/include/assert.h ../py/emit.h ../py/lexer.h ../py/qstr.h :
+  build/genhdr/qstrdefs.generated.h ../py/reader.h ../py/obj.h :
+  ../py/mpprint.h ../py/runtime0.h ../py/scope.h ../py/parse.h :
+  ../py/emitglue.h ../py/bc.h ../py/runtime.h ../py/mpstate.h :
+  ../py/mpthread.h ../py/nlr.h :
+  /usr/lib/gcc/x86_64-linux-gnu/7/include-fixed/limits.h :
+  /usr/lib/gcc/x86_64-linux-gnu/7/include-fixed/syslimits.h :
+  /usr/include/limits.h /usr/include/x86_64-linux-gnu/bits/posix1_lim.h :
+  /usr/include/x86_64-linux-gnu/bits/local_lim.h :
+  /usr/include/linux/limits.h :
+  /usr/include/x86_64-linux-gnu/bits/posix2_lim.h ../py/objlist.h :
+  ../py/objexcept.h ../py/objtuple.h ../py/pystack.h ../py/objfun.h :
+  ../py/nativeglue.h ../py/persistentcode.h ../py/stream.h ../py/mperrno.h :
+  /usr/include/errno.h /usr/include/x86_64-linux-gnu/bits/errno.h :
+  /usr/include/linux/errno.h /usr/include/x86_64-linux-gnu/asm/errno.h :
+  /usr/include/asm-generic/errno.h /usr/include/asm-generic/errno-base.h :
+  ../py/objstr.h :
Binary files MicorpythonOriginal1.12/micropython/mpy-cross/build/py/emitnx86.o and micropython1.12_withUlab/micropython/mpy-cross/build/py/emitnx86.o differ
diff -crNb MicorpythonOriginal1.12/micropython/mpy-cross/build/py/emitnx86.P micropython1.12_withUlab/micropython/mpy-cross/build/py/emitnx86.P
*** MicorpythonOriginal1.12/micropython/mpy-cross/build/py/emitnx86.P	1970-01-01 02:00:00.000000000 +0200
--- micropython1.12_withUlab/micropython/mpy-cross/build/py/emitnx86.P	2020-06-19 18:37:34.667608847 +0200
***************
*** 0 ****
--- 1,92 ----
+ build/py/emitnx86.o: ../py/emitnx86.c /usr/include/stdc-predef.h \
+  ../py/mpconfig.h mpconfigport.h /usr/include/alloca.h \
+  /usr/include/features.h /usr/include/x86_64-linux-gnu/sys/cdefs.h \
+  /usr/include/x86_64-linux-gnu/bits/wordsize.h \
+  /usr/include/x86_64-linux-gnu/bits/long-double.h \
+  /usr/include/x86_64-linux-gnu/gnu/stubs.h \
+  /usr/include/x86_64-linux-gnu/gnu/stubs-64.h \
+  /usr/lib/gcc/x86_64-linux-gnu/7/include/stddef.h \
+  /usr/lib/gcc/x86_64-linux-gnu/7/include/stdint.h /usr/include/stdint.h \
+  /usr/include/x86_64-linux-gnu/bits/libc-header-start.h \
+  /usr/include/x86_64-linux-gnu/bits/types.h \
+  /usr/include/x86_64-linux-gnu/bits/typesizes.h \
+  /usr/include/x86_64-linux-gnu/bits/wchar.h \
+  /usr/include/x86_64-linux-gnu/bits/stdint-intn.h \
+  /usr/include/x86_64-linux-gnu/bits/stdint-uintn.h ../py/nativeglue.h \
+  /usr/lib/gcc/x86_64-linux-gnu/7/include/stdarg.h ../py/obj.h \
+  ../py/misc.h /usr/lib/gcc/x86_64-linux-gnu/7/include/stdbool.h \
+  ../py/qstr.h build/genhdr/qstrdefs.generated.h ../py/mpprint.h \
+  ../py/runtime0.h ../py/persistentcode.h ../py/reader.h ../py/emitglue.h \
+  ../py/bc.h ../py/runtime.h ../py/mpstate.h ../py/mpthread.h ../py/nlr.h \
+  /usr/lib/gcc/x86_64-linux-gnu/7/include-fixed/limits.h \
+  /usr/lib/gcc/x86_64-linux-gnu/7/include-fixed/syslimits.h \
+  /usr/include/limits.h /usr/include/x86_64-linux-gnu/bits/posix1_lim.h \
+  /usr/include/x86_64-linux-gnu/bits/local_lim.h \
+  /usr/include/linux/limits.h \
+  /usr/include/x86_64-linux-gnu/bits/posix2_lim.h /usr/include/assert.h \
+  ../py/objlist.h ../py/objexcept.h ../py/objtuple.h ../py/pystack.h \
+  ../py/objfun.h ../py/stream.h ../py/mperrno.h /usr/include/errno.h \
+  /usr/include/x86_64-linux-gnu/bits/errno.h /usr/include/linux/errno.h \
+  /usr/include/x86_64-linux-gnu/asm/errno.h \
+  /usr/include/asm-generic/errno.h /usr/include/asm-generic/errno-base.h \
+  ../py/asmx86.h ../py/asmbase.h ../py/emitnative.c /usr/include/stdio.h \
+  /usr/include/x86_64-linux-gnu/bits/types/__FILE.h \
+  /usr/include/x86_64-linux-gnu/bits/types/FILE.h \
+  /usr/include/x86_64-linux-gnu/bits/libio.h \
+  /usr/include/x86_64-linux-gnu/bits/_G_config.h \
+  /usr/include/x86_64-linux-gnu/bits/types/__mbstate_t.h \
+  /usr/include/x86_64-linux-gnu/bits/stdio_lim.h \
+  /usr/include/x86_64-linux-gnu/bits/sys_errlist.h \
+  /usr/include/x86_64-linux-gnu/bits/stdio2.h /usr/include/string.h \
+  /usr/include/x86_64-linux-gnu/bits/types/locale_t.h \
+  /usr/include/x86_64-linux-gnu/bits/types/__locale_t.h \
+  /usr/include/strings.h \
+  /usr/include/x86_64-linux-gnu/bits/strings_fortified.h \
+  /usr/include/x86_64-linux-gnu/bits/string_fortified.h ../py/emit.h \
+  ../py/lexer.h ../py/scope.h ../py/parse.h ../py/objstr.h
+ ../py/emitnx86.c /usr/include/stdc-predef.h :
+  ../py/mpconfig.h mpconfigport.h /usr/include/alloca.h :
+  /usr/include/features.h /usr/include/x86_64-linux-gnu/sys/cdefs.h :
+  /usr/include/x86_64-linux-gnu/bits/wordsize.h :
+  /usr/include/x86_64-linux-gnu/bits/long-double.h :
+  /usr/include/x86_64-linux-gnu/gnu/stubs.h :
+  /usr/include/x86_64-linux-gnu/gnu/stubs-64.h :
+  /usr/lib/gcc/x86_64-linux-gnu/7/include/stddef.h :
+  /usr/lib/gcc/x86_64-linux-gnu/7/include/stdint.h /usr/include/stdint.h :
+  /usr/include/x86_64-linux-gnu/bits/libc-header-start.h :
+  /usr/include/x86_64-linux-gnu/bits/types.h :
+  /usr/include/x86_64-linux-gnu/bits/typesizes.h :
+  /usr/include/x86_64-linux-gnu/bits/wchar.h :
+  /usr/include/x86_64-linux-gnu/bits/stdint-intn.h :
+  /usr/include/x86_64-linux-gnu/bits/stdint-uintn.h ../py/nativeglue.h :
+  /usr/lib/gcc/x86_64-linux-gnu/7/include/stdarg.h ../py/obj.h :
+  ../py/misc.h /usr/lib/gcc/x86_64-linux-gnu/7/include/stdbool.h :
+  ../py/qstr.h build/genhdr/qstrdefs.generated.h ../py/mpprint.h :
+  ../py/runtime0.h ../py/persistentcode.h ../py/reader.h ../py/emitglue.h :
+  ../py/bc.h ../py/runtime.h ../py/mpstate.h ../py/mpthread.h ../py/nlr.h :
+  /usr/lib/gcc/x86_64-linux-gnu/7/include-fixed/limits.h :
+  /usr/lib/gcc/x86_64-linux-gnu/7/include-fixed/syslimits.h :
+  /usr/include/limits.h /usr/include/x86_64-linux-gnu/bits/posix1_lim.h :
+  /usr/include/x86_64-linux-gnu/bits/local_lim.h :
+  /usr/include/linux/limits.h :
+  /usr/include/x86_64-linux-gnu/bits/posix2_lim.h /usr/include/assert.h :
+  ../py/objlist.h ../py/objexcept.h ../py/objtuple.h ../py/pystack.h :
+  ../py/objfun.h ../py/stream.h ../py/mperrno.h /usr/include/errno.h :
+  /usr/include/x86_64-linux-gnu/bits/errno.h /usr/include/linux/errno.h :
+  /usr/include/x86_64-linux-gnu/asm/errno.h :
+  /usr/include/asm-generic/errno.h /usr/include/asm-generic/errno-base.h :
+  ../py/asmx86.h ../py/asmbase.h ../py/emitnative.c /usr/include/stdio.h :
+  /usr/include/x86_64-linux-gnu/bits/types/__FILE.h :
+  /usr/include/x86_64-linux-gnu/bits/types/FILE.h :
+  /usr/include/x86_64-linux-gnu/bits/libio.h :
+  /usr/include/x86_64-linux-gnu/bits/_G_config.h :
+  /usr/include/x86_64-linux-gnu/bits/types/__mbstate_t.h :
+  /usr/include/x86_64-linux-gnu/bits/stdio_lim.h :
+  /usr/include/x86_64-linux-gnu/bits/sys_errlist.h :
+  /usr/include/x86_64-linux-gnu/bits/stdio2.h /usr/include/string.h :
+  /usr/include/x86_64-linux-gnu/bits/types/locale_t.h :
+  /usr/include/x86_64-linux-gnu/bits/types/__locale_t.h :
+  /usr/include/strings.h :
+  /usr/include/x86_64-linux-gnu/bits/strings_fortified.h :
+  /usr/include/x86_64-linux-gnu/bits/string_fortified.h ../py/emit.h :
+  ../py/lexer.h ../py/scope.h ../py/parse.h ../py/objstr.h :
Binary files MicorpythonOriginal1.12/micropython/mpy-cross/build/py/emitnxtensa.o and micropython1.12_withUlab/micropython/mpy-cross/build/py/emitnxtensa.o differ
diff -crNb MicorpythonOriginal1.12/micropython/mpy-cross/build/py/emitnxtensa.P micropython1.12_withUlab/micropython/mpy-cross/build/py/emitnxtensa.P
*** MicorpythonOriginal1.12/micropython/mpy-cross/build/py/emitnxtensa.P	1970-01-01 02:00:00.000000000 +0200
--- micropython1.12_withUlab/micropython/mpy-cross/build/py/emitnxtensa.P	2020-06-19 18:37:35.731585940 +0200
***************
*** 0 ****
--- 1,96 ----
+ build/py/emitnxtensa.o: ../py/emitnxtensa.c /usr/include/stdc-predef.h \
+  ../py/mpconfig.h mpconfigport.h /usr/include/alloca.h \
+  /usr/include/features.h /usr/include/x86_64-linux-gnu/sys/cdefs.h \
+  /usr/include/x86_64-linux-gnu/bits/wordsize.h \
+  /usr/include/x86_64-linux-gnu/bits/long-double.h \
+  /usr/include/x86_64-linux-gnu/gnu/stubs.h \
+  /usr/include/x86_64-linux-gnu/gnu/stubs-64.h \
+  /usr/lib/gcc/x86_64-linux-gnu/7/include/stddef.h \
+  /usr/lib/gcc/x86_64-linux-gnu/7/include/stdint.h /usr/include/stdint.h \
+  /usr/include/x86_64-linux-gnu/bits/libc-header-start.h \
+  /usr/include/x86_64-linux-gnu/bits/types.h \
+  /usr/include/x86_64-linux-gnu/bits/typesizes.h \
+  /usr/include/x86_64-linux-gnu/bits/wchar.h \
+  /usr/include/x86_64-linux-gnu/bits/stdint-intn.h \
+  /usr/include/x86_64-linux-gnu/bits/stdint-uintn.h ../py/asmxtensa.h \
+  ../py/misc.h /usr/lib/gcc/x86_64-linux-gnu/7/include/stdbool.h \
+  ../py/asmbase.h ../py/emitnative.c /usr/include/stdio.h \
+  /usr/include/x86_64-linux-gnu/bits/types/__FILE.h \
+  /usr/include/x86_64-linux-gnu/bits/types/FILE.h \
+  /usr/include/x86_64-linux-gnu/bits/libio.h \
+  /usr/include/x86_64-linux-gnu/bits/_G_config.h \
+  /usr/include/x86_64-linux-gnu/bits/types/__mbstate_t.h \
+  /usr/lib/gcc/x86_64-linux-gnu/7/include/stdarg.h \
+  /usr/include/x86_64-linux-gnu/bits/stdio_lim.h \
+  /usr/include/x86_64-linux-gnu/bits/sys_errlist.h \
+  /usr/include/x86_64-linux-gnu/bits/stdio2.h /usr/include/string.h \
+  /usr/include/x86_64-linux-gnu/bits/types/locale_t.h \
+  /usr/include/x86_64-linux-gnu/bits/types/__locale_t.h \
+  /usr/include/strings.h \
+  /usr/include/x86_64-linux-gnu/bits/strings_fortified.h \
+  /usr/include/x86_64-linux-gnu/bits/string_fortified.h \
+  /usr/include/assert.h ../py/emit.h ../py/lexer.h ../py/qstr.h \
+  build/genhdr/qstrdefs.generated.h ../py/reader.h ../py/obj.h \
+  ../py/mpprint.h ../py/runtime0.h ../py/scope.h ../py/parse.h \
+  ../py/emitglue.h ../py/bc.h ../py/runtime.h ../py/mpstate.h \
+  ../py/mpthread.h ../py/nlr.h \
+  /usr/lib/gcc/x86_64-linux-gnu/7/include-fixed/limits.h \
+  /usr/lib/gcc/x86_64-linux-gnu/7/include-fixed/syslimits.h \
+  /usr/include/limits.h /usr/include/x86_64-linux-gnu/bits/posix1_lim.h \
+  /usr/include/x86_64-linux-gnu/bits/local_lim.h \
+  /usr/include/linux/limits.h \
+  /usr/include/x86_64-linux-gnu/bits/posix2_lim.h ../py/objlist.h \
+  ../py/objexcept.h ../py/objtuple.h ../py/pystack.h ../py/objfun.h \
+  ../py/nativeglue.h ../py/persistentcode.h ../py/stream.h ../py/mperrno.h \
+  /usr/include/errno.h /usr/include/x86_64-linux-gnu/bits/errno.h \
+  /usr/include/linux/errno.h /usr/include/x86_64-linux-gnu/asm/errno.h \
+  /usr/include/asm-generic/errno.h /usr/include/asm-generic/errno-base.h \
+  ../py/objstr.h
+ ../py/emitnxtensa.c /usr/include/stdc-predef.h :
+  ../py/mpconfig.h mpconfigport.h /usr/include/alloca.h :
+  /usr/include/features.h /usr/include/x86_64-linux-gnu/sys/cdefs.h :
+  /usr/include/x86_64-linux-gnu/bits/wordsize.h :
+  /usr/include/x86_64-linux-gnu/bits/long-double.h :
+  /usr/include/x86_64-linux-gnu/gnu/stubs.h :
+  /usr/include/x86_64-linux-gnu/gnu/stubs-64.h :
+  /usr/lib/gcc/x86_64-linux-gnu/7/include/stddef.h :
+  /usr/lib/gcc/x86_64-linux-gnu/7/include/stdint.h /usr/include/stdint.h :
+  /usr/include/x86_64-linux-gnu/bits/libc-header-start.h :
+  /usr/include/x86_64-linux-gnu/bits/types.h :
+  /usr/include/x86_64-linux-gnu/bits/typesizes.h :
+  /usr/include/x86_64-linux-gnu/bits/wchar.h :
+  /usr/include/x86_64-linux-gnu/bits/stdint-intn.h :
+  /usr/include/x86_64-linux-gnu/bits/stdint-uintn.h ../py/asmxtensa.h :
+  ../py/misc.h /usr/lib/gcc/x86_64-linux-gnu/7/include/stdbool.h :
+  ../py/asmbase.h ../py/emitnative.c /usr/include/stdio.h :
+  /usr/include/x86_64-linux-gnu/bits/types/__FILE.h :
+  /usr/include/x86_64-linux-gnu/bits/types/FILE.h :
+  /usr/include/x86_64-linux-gnu/bits/libio.h :
+  /usr/include/x86_64-linux-gnu/bits/_G_config.h :
+  /usr/include/x86_64-linux-gnu/bits/types/__mbstate_t.h :
+  /usr/lib/gcc/x86_64-linux-gnu/7/include/stdarg.h :
+  /usr/include/x86_64-linux-gnu/bits/stdio_lim.h :
+  /usr/include/x86_64-linux-gnu/bits/sys_errlist.h :
+  /usr/include/x86_64-linux-gnu/bits/stdio2.h /usr/include/string.h :
+  /usr/include/x86_64-linux-gnu/bits/types/locale_t.h :
+  /usr/include/x86_64-linux-gnu/bits/types/__locale_t.h :
+  /usr/include/strings.h :
+  /usr/include/x86_64-linux-gnu/bits/strings_fortified.h :
+  /usr/include/x86_64-linux-gnu/bits/string_fortified.h :
+  /usr/include/assert.h ../py/emit.h ../py/lexer.h ../py/qstr.h :
+  build/genhdr/qstrdefs.generated.h ../py/reader.h ../py/obj.h :
+  ../py/mpprint.h ../py/runtime0.h ../py/scope.h ../py/parse.h :
+  ../py/emitglue.h ../py/bc.h ../py/runtime.h ../py/mpstate.h :
+  ../py/mpthread.h ../py/nlr.h :
+  /usr/lib/gcc/x86_64-linux-gnu/7/include-fixed/limits.h :
+  /usr/lib/gcc/x86_64-linux-gnu/7/include-fixed/syslimits.h :
+  /usr/include/limits.h /usr/include/x86_64-linux-gnu/bits/posix1_lim.h :
+  /usr/include/x86_64-linux-gnu/bits/local_lim.h :
+  /usr/include/linux/limits.h :
+  /usr/include/x86_64-linux-gnu/bits/posix2_lim.h ../py/objlist.h :
+  ../py/objexcept.h ../py/objtuple.h ../py/pystack.h ../py/objfun.h :
+  ../py/nativeglue.h ../py/persistentcode.h ../py/stream.h ../py/mperrno.h :
+  /usr/include/errno.h /usr/include/x86_64-linux-gnu/bits/errno.h :
+  /usr/include/linux/errno.h /usr/include/x86_64-linux-gnu/asm/errno.h :
+  /usr/include/asm-generic/errno.h /usr/include/asm-generic/errno-base.h :
+  ../py/objstr.h :
Binary files MicorpythonOriginal1.12/micropython/mpy-cross/build/py/emitnxtensawin.o and micropython1.12_withUlab/micropython/mpy-cross/build/py/emitnxtensawin.o differ
diff -crNb MicorpythonOriginal1.12/micropython/mpy-cross/build/py/emitnxtensawin.P micropython1.12_withUlab/micropython/mpy-cross/build/py/emitnxtensawin.P
*** MicorpythonOriginal1.12/micropython/mpy-cross/build/py/emitnxtensawin.P	1970-01-01 02:00:00.000000000 +0200
--- micropython1.12_withUlab/micropython/mpy-cross/build/py/emitnxtensawin.P	2020-06-19 18:37:36.087578288 +0200
***************
*** 0 ****
--- 1,98 ----
+ build/py/emitnxtensawin.o: ../py/emitnxtensawin.c \
+  /usr/include/stdc-predef.h ../py/mpconfig.h mpconfigport.h \
+  /usr/include/alloca.h /usr/include/features.h \
+  /usr/include/x86_64-linux-gnu/sys/cdefs.h \
+  /usr/include/x86_64-linux-gnu/bits/wordsize.h \
+  /usr/include/x86_64-linux-gnu/bits/long-double.h \
+  /usr/include/x86_64-linux-gnu/gnu/stubs.h \
+  /usr/include/x86_64-linux-gnu/gnu/stubs-64.h \
+  /usr/lib/gcc/x86_64-linux-gnu/7/include/stddef.h \
+  /usr/lib/gcc/x86_64-linux-gnu/7/include/stdint.h /usr/include/stdint.h \
+  /usr/include/x86_64-linux-gnu/bits/libc-header-start.h \
+  /usr/include/x86_64-linux-gnu/bits/types.h \
+  /usr/include/x86_64-linux-gnu/bits/typesizes.h \
+  /usr/include/x86_64-linux-gnu/bits/wchar.h \
+  /usr/include/x86_64-linux-gnu/bits/stdint-intn.h \
+  /usr/include/x86_64-linux-gnu/bits/stdint-uintn.h ../py/asmxtensa.h \
+  ../py/misc.h /usr/lib/gcc/x86_64-linux-gnu/7/include/stdbool.h \
+  ../py/asmbase.h ../py/emitnative.c /usr/include/stdio.h \
+  /usr/include/x86_64-linux-gnu/bits/types/__FILE.h \
+  /usr/include/x86_64-linux-gnu/bits/types/FILE.h \
+  /usr/include/x86_64-linux-gnu/bits/libio.h \
+  /usr/include/x86_64-linux-gnu/bits/_G_config.h \
+  /usr/include/x86_64-linux-gnu/bits/types/__mbstate_t.h \
+  /usr/lib/gcc/x86_64-linux-gnu/7/include/stdarg.h \
+  /usr/include/x86_64-linux-gnu/bits/stdio_lim.h \
+  /usr/include/x86_64-linux-gnu/bits/sys_errlist.h \
+  /usr/include/x86_64-linux-gnu/bits/stdio2.h /usr/include/string.h \
+  /usr/include/x86_64-linux-gnu/bits/types/locale_t.h \
+  /usr/include/x86_64-linux-gnu/bits/types/__locale_t.h \
+  /usr/include/strings.h \
+  /usr/include/x86_64-linux-gnu/bits/strings_fortified.h \
+  /usr/include/x86_64-linux-gnu/bits/string_fortified.h \
+  /usr/include/assert.h ../py/emit.h ../py/lexer.h ../py/qstr.h \
+  build/genhdr/qstrdefs.generated.h ../py/reader.h ../py/obj.h \
+  ../py/mpprint.h ../py/runtime0.h ../py/scope.h ../py/parse.h \
+  ../py/emitglue.h ../py/bc.h ../py/runtime.h ../py/mpstate.h \
+  ../py/mpthread.h ../py/nlr.h \
+  /usr/lib/gcc/x86_64-linux-gnu/7/include-fixed/limits.h \
+  /usr/lib/gcc/x86_64-linux-gnu/7/include-fixed/syslimits.h \
+  /usr/include/limits.h /usr/include/x86_64-linux-gnu/bits/posix1_lim.h \
+  /usr/include/x86_64-linux-gnu/bits/local_lim.h \
+  /usr/include/linux/limits.h \
+  /usr/include/x86_64-linux-gnu/bits/posix2_lim.h ../py/objlist.h \
+  ../py/objexcept.h ../py/objtuple.h ../py/pystack.h ../py/objfun.h \
+  ../py/nativeglue.h ../py/persistentcode.h ../py/stream.h ../py/mperrno.h \
+  /usr/include/errno.h /usr/include/x86_64-linux-gnu/bits/errno.h \
+  /usr/include/linux/errno.h /usr/include/x86_64-linux-gnu/asm/errno.h \
+  /usr/include/asm-generic/errno.h /usr/include/asm-generic/errno-base.h \
+  ../py/objstr.h
+ ../py/emitnxtensawin.c :
+  /usr/include/stdc-predef.h ../py/mpconfig.h mpconfigport.h :
+  /usr/include/alloca.h /usr/include/features.h :
+  /usr/include/x86_64-linux-gnu/sys/cdefs.h :
+  /usr/include/x86_64-linux-gnu/bits/wordsize.h :
+  /usr/include/x86_64-linux-gnu/bits/long-double.h :
+  /usr/include/x86_64-linux-gnu/gnu/stubs.h :
+  /usr/include/x86_64-linux-gnu/gnu/stubs-64.h :
+  /usr/lib/gcc/x86_64-linux-gnu/7/include/stddef.h :
+  /usr/lib/gcc/x86_64-linux-gnu/7/include/stdint.h /usr/include/stdint.h :
+  /usr/include/x86_64-linux-gnu/bits/libc-header-start.h :
+  /usr/include/x86_64-linux-gnu/bits/types.h :
+  /usr/include/x86_64-linux-gnu/bits/typesizes.h :
+  /usr/include/x86_64-linux-gnu/bits/wchar.h :
+  /usr/include/x86_64-linux-gnu/bits/stdint-intn.h :
+  /usr/include/x86_64-linux-gnu/bits/stdint-uintn.h ../py/asmxtensa.h :
+  ../py/misc.h /usr/lib/gcc/x86_64-linux-gnu/7/include/stdbool.h :
+  ../py/asmbase.h ../py/emitnative.c /usr/include/stdio.h :
+  /usr/include/x86_64-linux-gnu/bits/types/__FILE.h :
+  /usr/include/x86_64-linux-gnu/bits/types/FILE.h :
+  /usr/include/x86_64-linux-gnu/bits/libio.h :
+  /usr/include/x86_64-linux-gnu/bits/_G_config.h :
+  /usr/include/x86_64-linux-gnu/bits/types/__mbstate_t.h :
+  /usr/lib/gcc/x86_64-linux-gnu/7/include/stdarg.h :
+  /usr/include/x86_64-linux-gnu/bits/stdio_lim.h :
+  /usr/include/x86_64-linux-gnu/bits/sys_errlist.h :
+  /usr/include/x86_64-linux-gnu/bits/stdio2.h /usr/include/string.h :
+  /usr/include/x86_64-linux-gnu/bits/types/locale_t.h :
+  /usr/include/x86_64-linux-gnu/bits/types/__locale_t.h :
+  /usr/include/strings.h :
+  /usr/include/x86_64-linux-gnu/bits/strings_fortified.h :
+  /usr/include/x86_64-linux-gnu/bits/string_fortified.h :
+  /usr/include/assert.h ../py/emit.h ../py/lexer.h ../py/qstr.h :
+  build/genhdr/qstrdefs.generated.h ../py/reader.h ../py/obj.h :
+  ../py/mpprint.h ../py/runtime0.h ../py/scope.h ../py/parse.h :
+  ../py/emitglue.h ../py/bc.h ../py/runtime.h ../py/mpstate.h :
+  ../py/mpthread.h ../py/nlr.h :
+  /usr/lib/gcc/x86_64-linux-gnu/7/include-fixed/limits.h :
+  /usr/lib/gcc/x86_64-linux-gnu/7/include-fixed/syslimits.h :
+  /usr/include/limits.h /usr/include/x86_64-linux-gnu/bits/posix1_lim.h :
+  /usr/include/x86_64-linux-gnu/bits/local_lim.h :
+  /usr/include/linux/limits.h :
+  /usr/include/x86_64-linux-gnu/bits/posix2_lim.h ../py/objlist.h :
+  ../py/objexcept.h ../py/objtuple.h ../py/pystack.h ../py/objfun.h :
+  ../py/nativeglue.h ../py/persistentcode.h ../py/stream.h ../py/mperrno.h :
+  /usr/include/errno.h /usr/include/x86_64-linux-gnu/bits/errno.h :
+  /usr/include/linux/errno.h /usr/include/x86_64-linux-gnu/asm/errno.h :
+  /usr/include/asm-generic/errno.h /usr/include/asm-generic/errno-base.h :
+  ../py/objstr.h :
Binary files MicorpythonOriginal1.12/micropython/mpy-cross/build/py/formatfloat.o and micropython1.12_withUlab/micropython/mpy-cross/build/py/formatfloat.o differ
diff -crNb MicorpythonOriginal1.12/micropython/mpy-cross/build/py/formatfloat.P micropython1.12_withUlab/micropython/mpy-cross/build/py/formatfloat.P
*** MicorpythonOriginal1.12/micropython/mpy-cross/build/py/formatfloat.P	1970-01-01 02:00:00.000000000 +0200
--- micropython1.12_withUlab/micropython/mpy-cross/build/py/formatfloat.P	2020-06-14 15:06:52.815491916 +0200
***************
*** 0 ****
--- 1,98 ----
+ build/py/formatfloat.o: ../py/formatfloat.c /usr/include/stdc-predef.h \
+  ../py/mpconfig.h mpconfigport.h /usr/include/alloca.h \
+  /usr/include/features.h /usr/include/x86_64-linux-gnu/sys/cdefs.h \
+  /usr/include/x86_64-linux-gnu/bits/wordsize.h \
+  /usr/include/x86_64-linux-gnu/bits/long-double.h \
+  /usr/include/x86_64-linux-gnu/gnu/stubs.h \
+  /usr/include/x86_64-linux-gnu/gnu/stubs-64.h \
+  /usr/lib/gcc/x86_64-linux-gnu/7/include/stddef.h \
+  /usr/lib/gcc/x86_64-linux-gnu/7/include/stdint.h /usr/include/stdint.h \
+  /usr/include/x86_64-linux-gnu/bits/libc-header-start.h \
+  /usr/include/x86_64-linux-gnu/bits/types.h \
+  /usr/include/x86_64-linux-gnu/bits/typesizes.h \
+  /usr/include/x86_64-linux-gnu/bits/wchar.h \
+  /usr/include/x86_64-linux-gnu/bits/stdint-intn.h \
+  /usr/include/x86_64-linux-gnu/bits/stdint-uintn.h /usr/include/assert.h \
+  /usr/include/stdlib.h /usr/include/x86_64-linux-gnu/bits/waitflags.h \
+  /usr/include/x86_64-linux-gnu/bits/waitstatus.h \
+  /usr/include/x86_64-linux-gnu/bits/floatn.h \
+  /usr/include/x86_64-linux-gnu/bits/floatn-common.h \
+  /usr/include/x86_64-linux-gnu/sys/types.h \
+  /usr/include/x86_64-linux-gnu/bits/types/clock_t.h \
+  /usr/include/x86_64-linux-gnu/bits/types/clockid_t.h \
+  /usr/include/x86_64-linux-gnu/bits/types/time_t.h \
+  /usr/include/x86_64-linux-gnu/bits/types/timer_t.h /usr/include/endian.h \
+  /usr/include/x86_64-linux-gnu/bits/endian.h \
+  /usr/include/x86_64-linux-gnu/bits/byteswap.h \
+  /usr/include/x86_64-linux-gnu/bits/byteswap-16.h \
+  /usr/include/x86_64-linux-gnu/bits/uintn-identity.h \
+  /usr/include/x86_64-linux-gnu/sys/select.h \
+  /usr/include/x86_64-linux-gnu/bits/select.h \
+  /usr/include/x86_64-linux-gnu/bits/types/sigset_t.h \
+  /usr/include/x86_64-linux-gnu/bits/types/__sigset_t.h \
+  /usr/include/x86_64-linux-gnu/bits/types/struct_timeval.h \
+  /usr/include/x86_64-linux-gnu/bits/types/struct_timespec.h \
+  /usr/include/x86_64-linux-gnu/bits/select2.h \
+  /usr/include/x86_64-linux-gnu/sys/sysmacros.h \
+  /usr/include/x86_64-linux-gnu/bits/sysmacros.h \
+  /usr/include/x86_64-linux-gnu/bits/pthreadtypes.h \
+  /usr/include/x86_64-linux-gnu/bits/thread-shared-types.h \
+  /usr/include/x86_64-linux-gnu/bits/pthreadtypes-arch.h \
+  /usr/include/x86_64-linux-gnu/bits/stdlib-float.h \
+  /usr/include/x86_64-linux-gnu/bits/stdlib.h /usr/include/math.h \
+  /usr/include/x86_64-linux-gnu/bits/math-vector.h \
+  /usr/include/x86_64-linux-gnu/bits/libm-simd-decl-stubs.h \
+  /usr/include/x86_64-linux-gnu/bits/flt-eval-method.h \
+  /usr/include/x86_64-linux-gnu/bits/fp-logb.h \
+  /usr/include/x86_64-linux-gnu/bits/fp-fast.h \
+  /usr/include/x86_64-linux-gnu/bits/mathcalls-helper-functions.h \
+  /usr/include/x86_64-linux-gnu/bits/mathcalls.h ../py/formatfloat.h
+ ../py/formatfloat.c /usr/include/stdc-predef.h :
+  ../py/mpconfig.h mpconfigport.h /usr/include/alloca.h :
+  /usr/include/features.h /usr/include/x86_64-linux-gnu/sys/cdefs.h :
+  /usr/include/x86_64-linux-gnu/bits/wordsize.h :
+  /usr/include/x86_64-linux-gnu/bits/long-double.h :
+  /usr/include/x86_64-linux-gnu/gnu/stubs.h :
+  /usr/include/x86_64-linux-gnu/gnu/stubs-64.h :
+  /usr/lib/gcc/x86_64-linux-gnu/7/include/stddef.h :
+  /usr/lib/gcc/x86_64-linux-gnu/7/include/stdint.h /usr/include/stdint.h :
+  /usr/include/x86_64-linux-gnu/bits/libc-header-start.h :
+  /usr/include/x86_64-linux-gnu/bits/types.h :
+  /usr/include/x86_64-linux-gnu/bits/typesizes.h :
+  /usr/include/x86_64-linux-gnu/bits/wchar.h :
+  /usr/include/x86_64-linux-gnu/bits/stdint-intn.h :
+  /usr/include/x86_64-linux-gnu/bits/stdint-uintn.h /usr/include/assert.h :
+  /usr/include/stdlib.h /usr/include/x86_64-linux-gnu/bits/waitflags.h :
+  /usr/include/x86_64-linux-gnu/bits/waitstatus.h :
+  /usr/include/x86_64-linux-gnu/bits/floatn.h :
+  /usr/include/x86_64-linux-gnu/bits/floatn-common.h :
+  /usr/include/x86_64-linux-gnu/sys/types.h :
+  /usr/include/x86_64-linux-gnu/bits/types/clock_t.h :
+  /usr/include/x86_64-linux-gnu/bits/types/clockid_t.h :
+  /usr/include/x86_64-linux-gnu/bits/types/time_t.h :
+  /usr/include/x86_64-linux-gnu/bits/types/timer_t.h /usr/include/endian.h :
+  /usr/include/x86_64-linux-gnu/bits/endian.h :
+  /usr/include/x86_64-linux-gnu/bits/byteswap.h :
+  /usr/include/x86_64-linux-gnu/bits/byteswap-16.h :
+  /usr/include/x86_64-linux-gnu/bits/uintn-identity.h :
+  /usr/include/x86_64-linux-gnu/sys/select.h :
+  /usr/include/x86_64-linux-gnu/bits/select.h :
+  /usr/include/x86_64-linux-gnu/bits/types/sigset_t.h :
+  /usr/include/x86_64-linux-gnu/bits/types/__sigset_t.h :
+  /usr/include/x86_64-linux-gnu/bits/types/struct_timeval.h :
+  /usr/include/x86_64-linux-gnu/bits/types/struct_timespec.h :
+  /usr/include/x86_64-linux-gnu/bits/select2.h :
+  /usr/include/x86_64-linux-gnu/sys/sysmacros.h :
+  /usr/include/x86_64-linux-gnu/bits/sysmacros.h :
+  /usr/include/x86_64-linux-gnu/bits/pthreadtypes.h :
+  /usr/include/x86_64-linux-gnu/bits/thread-shared-types.h :
+  /usr/include/x86_64-linux-gnu/bits/pthreadtypes-arch.h :
+  /usr/include/x86_64-linux-gnu/bits/stdlib-float.h :
+  /usr/include/x86_64-linux-gnu/bits/stdlib.h /usr/include/math.h :
+  /usr/include/x86_64-linux-gnu/bits/math-vector.h :
+  /usr/include/x86_64-linux-gnu/bits/libm-simd-decl-stubs.h :
+  /usr/include/x86_64-linux-gnu/bits/flt-eval-method.h :
+  /usr/include/x86_64-linux-gnu/bits/fp-logb.h :
+  /usr/include/x86_64-linux-gnu/bits/fp-fast.h :
+  /usr/include/x86_64-linux-gnu/bits/mathcalls-helper-functions.h :
+  /usr/include/x86_64-linux-gnu/bits/mathcalls.h ../py/formatfloat.h :
Binary files MicorpythonOriginal1.12/micropython/mpy-cross/build/py/frozenmod.o and micropython1.12_withUlab/micropython/mpy-cross/build/py/frozenmod.o differ
diff -crNb MicorpythonOriginal1.12/micropython/mpy-cross/build/py/frozenmod.P micropython1.12_withUlab/micropython/mpy-cross/build/py/frozenmod.P
*** MicorpythonOriginal1.12/micropython/mpy-cross/build/py/frozenmod.P	1970-01-01 02:00:00.000000000 +0200
--- micropython1.12_withUlab/micropython/mpy-cross/build/py/frozenmod.P	2020-06-19 18:37:39.427506920 +0200
***************
*** 0 ****
--- 1,48 ----
+ build/py/frozenmod.o: ../py/frozenmod.c /usr/include/stdc-predef.h \
+  /usr/include/string.h \
+  /usr/include/x86_64-linux-gnu/bits/libc-header-start.h \
+  /usr/include/features.h /usr/include/x86_64-linux-gnu/sys/cdefs.h \
+  /usr/include/x86_64-linux-gnu/bits/wordsize.h \
+  /usr/include/x86_64-linux-gnu/bits/long-double.h \
+  /usr/include/x86_64-linux-gnu/gnu/stubs.h \
+  /usr/include/x86_64-linux-gnu/gnu/stubs-64.h \
+  /usr/lib/gcc/x86_64-linux-gnu/7/include/stddef.h \
+  /usr/include/x86_64-linux-gnu/bits/types/locale_t.h \
+  /usr/include/x86_64-linux-gnu/bits/types/__locale_t.h \
+  /usr/include/strings.h \
+  /usr/include/x86_64-linux-gnu/bits/strings_fortified.h \
+  /usr/include/x86_64-linux-gnu/bits/string_fortified.h \
+  /usr/lib/gcc/x86_64-linux-gnu/7/include/stdint.h /usr/include/stdint.h \
+  /usr/include/x86_64-linux-gnu/bits/types.h \
+  /usr/include/x86_64-linux-gnu/bits/typesizes.h \
+  /usr/include/x86_64-linux-gnu/bits/wchar.h \
+  /usr/include/x86_64-linux-gnu/bits/stdint-intn.h \
+  /usr/include/x86_64-linux-gnu/bits/stdint-uintn.h ../py/lexer.h \
+  ../py/mpconfig.h mpconfigport.h /usr/include/alloca.h ../py/qstr.h \
+  ../py/misc.h /usr/lib/gcc/x86_64-linux-gnu/7/include/stdbool.h \
+  build/genhdr/qstrdefs.generated.h ../py/reader.h ../py/obj.h \
+  ../py/mpprint.h ../py/runtime0.h ../py/frozenmod.h
+ ../py/frozenmod.c /usr/include/stdc-predef.h :
+  /usr/include/string.h :
+  /usr/include/x86_64-linux-gnu/bits/libc-header-start.h :
+  /usr/include/features.h /usr/include/x86_64-linux-gnu/sys/cdefs.h :
+  /usr/include/x86_64-linux-gnu/bits/wordsize.h :
+  /usr/include/x86_64-linux-gnu/bits/long-double.h :
+  /usr/include/x86_64-linux-gnu/gnu/stubs.h :
+  /usr/include/x86_64-linux-gnu/gnu/stubs-64.h :
+  /usr/lib/gcc/x86_64-linux-gnu/7/include/stddef.h :
+  /usr/include/x86_64-linux-gnu/bits/types/locale_t.h :
+  /usr/include/x86_64-linux-gnu/bits/types/__locale_t.h :
+  /usr/include/strings.h :
+  /usr/include/x86_64-linux-gnu/bits/strings_fortified.h :
+  /usr/include/x86_64-linux-gnu/bits/string_fortified.h :
+  /usr/lib/gcc/x86_64-linux-gnu/7/include/stdint.h /usr/include/stdint.h :
+  /usr/include/x86_64-linux-gnu/bits/types.h :
+  /usr/include/x86_64-linux-gnu/bits/typesizes.h :
+  /usr/include/x86_64-linux-gnu/bits/wchar.h :
+  /usr/include/x86_64-linux-gnu/bits/stdint-intn.h :
+  /usr/include/x86_64-linux-gnu/bits/stdint-uintn.h ../py/lexer.h :
+  ../py/mpconfig.h mpconfigport.h /usr/include/alloca.h ../py/qstr.h :
+  ../py/misc.h /usr/lib/gcc/x86_64-linux-gnu/7/include/stdbool.h :
+  build/genhdr/qstrdefs.generated.h ../py/reader.h ../py/obj.h :
+  ../py/mpprint.h ../py/runtime0.h ../py/frozenmod.h :
Binary files MicorpythonOriginal1.12/micropython/mpy-cross/build/py/gc.o and micropython1.12_withUlab/micropython/mpy-cross/build/py/gc.o differ
diff -crNb MicorpythonOriginal1.12/micropython/mpy-cross/build/py/gc.P micropython1.12_withUlab/micropython/mpy-cross/build/py/gc.P
*** MicorpythonOriginal1.12/micropython/mpy-cross/build/py/gc.P	1970-01-01 02:00:00.000000000 +0200
--- micropython1.12_withUlab/micropython/mpy-cross/build/py/gc.P	2020-06-19 18:37:32.971645497 +0200
***************
*** 0 ****
--- 1,82 ----
+ build/py/gc.o: ../py/gc.c /usr/include/stdc-predef.h \
+  /usr/include/assert.h /usr/include/features.h \
+  /usr/include/x86_64-linux-gnu/sys/cdefs.h \
+  /usr/include/x86_64-linux-gnu/bits/wordsize.h \
+  /usr/include/x86_64-linux-gnu/bits/long-double.h \
+  /usr/include/x86_64-linux-gnu/gnu/stubs.h \
+  /usr/include/x86_64-linux-gnu/gnu/stubs-64.h /usr/include/stdio.h \
+  /usr/include/x86_64-linux-gnu/bits/libc-header-start.h \
+  /usr/lib/gcc/x86_64-linux-gnu/7/include/stddef.h \
+  /usr/include/x86_64-linux-gnu/bits/types.h \
+  /usr/include/x86_64-linux-gnu/bits/typesizes.h \
+  /usr/include/x86_64-linux-gnu/bits/types/__FILE.h \
+  /usr/include/x86_64-linux-gnu/bits/types/FILE.h \
+  /usr/include/x86_64-linux-gnu/bits/libio.h \
+  /usr/include/x86_64-linux-gnu/bits/_G_config.h \
+  /usr/include/x86_64-linux-gnu/bits/types/__mbstate_t.h \
+  /usr/lib/gcc/x86_64-linux-gnu/7/include/stdarg.h \
+  /usr/include/x86_64-linux-gnu/bits/stdio_lim.h \
+  /usr/include/x86_64-linux-gnu/bits/sys_errlist.h \
+  /usr/include/x86_64-linux-gnu/bits/stdio.h \
+  /usr/include/x86_64-linux-gnu/bits/stdio2.h /usr/include/string.h \
+  /usr/include/x86_64-linux-gnu/bits/types/locale_t.h \
+  /usr/include/x86_64-linux-gnu/bits/types/__locale_t.h \
+  /usr/include/strings.h \
+  /usr/include/x86_64-linux-gnu/bits/strings_fortified.h \
+  /usr/include/x86_64-linux-gnu/bits/string_fortified.h ../py/gc.h \
+  /usr/lib/gcc/x86_64-linux-gnu/7/include/stdint.h /usr/include/stdint.h \
+  /usr/include/x86_64-linux-gnu/bits/wchar.h \
+  /usr/include/x86_64-linux-gnu/bits/stdint-intn.h \
+  /usr/include/x86_64-linux-gnu/bits/stdint-uintn.h ../py/mpconfig.h \
+  mpconfigport.h /usr/include/alloca.h ../py/misc.h \
+  /usr/lib/gcc/x86_64-linux-gnu/7/include/stdbool.h ../py/runtime.h \
+  ../py/mpstate.h ../py/mpthread.h ../py/nlr.h \
+  /usr/lib/gcc/x86_64-linux-gnu/7/include-fixed/limits.h \
+  /usr/lib/gcc/x86_64-linux-gnu/7/include-fixed/syslimits.h \
+  /usr/include/limits.h /usr/include/x86_64-linux-gnu/bits/posix1_lim.h \
+  /usr/include/x86_64-linux-gnu/bits/local_lim.h \
+  /usr/include/linux/limits.h \
+  /usr/include/x86_64-linux-gnu/bits/posix2_lim.h ../py/obj.h ../py/qstr.h \
+  build/genhdr/qstrdefs.generated.h ../py/mpprint.h ../py/runtime0.h \
+  ../py/objlist.h ../py/objexcept.h ../py/objtuple.h ../py/pystack.h
+ ../py/gc.c /usr/include/stdc-predef.h :
+  /usr/include/assert.h /usr/include/features.h :
+  /usr/include/x86_64-linux-gnu/sys/cdefs.h :
+  /usr/include/x86_64-linux-gnu/bits/wordsize.h :
+  /usr/include/x86_64-linux-gnu/bits/long-double.h :
+  /usr/include/x86_64-linux-gnu/gnu/stubs.h :
+  /usr/include/x86_64-linux-gnu/gnu/stubs-64.h /usr/include/stdio.h :
+  /usr/include/x86_64-linux-gnu/bits/libc-header-start.h :
+  /usr/lib/gcc/x86_64-linux-gnu/7/include/stddef.h :
+  /usr/include/x86_64-linux-gnu/bits/types.h :
+  /usr/include/x86_64-linux-gnu/bits/typesizes.h :
+  /usr/include/x86_64-linux-gnu/bits/types/__FILE.h :
+  /usr/include/x86_64-linux-gnu/bits/types/FILE.h :
+  /usr/include/x86_64-linux-gnu/bits/libio.h :
+  /usr/include/x86_64-linux-gnu/bits/_G_config.h :
+  /usr/include/x86_64-linux-gnu/bits/types/__mbstate_t.h :
+  /usr/lib/gcc/x86_64-linux-gnu/7/include/stdarg.h :
+  /usr/include/x86_64-linux-gnu/bits/stdio_lim.h :
+  /usr/include/x86_64-linux-gnu/bits/sys_errlist.h :
+  /usr/include/x86_64-linux-gnu/bits/stdio.h :
+  /usr/include/x86_64-linux-gnu/bits/stdio2.h /usr/include/string.h :
+  /usr/include/x86_64-linux-gnu/bits/types/locale_t.h :
+  /usr/include/x86_64-linux-gnu/bits/types/__locale_t.h :
+  /usr/include/strings.h :
+  /usr/include/x86_64-linux-gnu/bits/strings_fortified.h :
+  /usr/include/x86_64-linux-gnu/bits/string_fortified.h ../py/gc.h :
+  /usr/lib/gcc/x86_64-linux-gnu/7/include/stdint.h /usr/include/stdint.h :
+  /usr/include/x86_64-linux-gnu/bits/wchar.h :
+  /usr/include/x86_64-linux-gnu/bits/stdint-intn.h :
+  /usr/include/x86_64-linux-gnu/bits/stdint-uintn.h ../py/mpconfig.h :
+  mpconfigport.h /usr/include/alloca.h ../py/misc.h :
+  /usr/lib/gcc/x86_64-linux-gnu/7/include/stdbool.h ../py/runtime.h :
+  ../py/mpstate.h ../py/mpthread.h ../py/nlr.h :
+  /usr/lib/gcc/x86_64-linux-gnu/7/include-fixed/limits.h :
+  /usr/lib/gcc/x86_64-linux-gnu/7/include-fixed/syslimits.h :
+  /usr/include/limits.h /usr/include/x86_64-linux-gnu/bits/posix1_lim.h :
+  /usr/include/x86_64-linux-gnu/bits/local_lim.h :
+  /usr/include/linux/limits.h :
+  /usr/include/x86_64-linux-gnu/bits/posix2_lim.h ../py/obj.h ../py/qstr.h :
+  build/genhdr/qstrdefs.generated.h ../py/mpprint.h ../py/runtime0.h :
+  ../py/objlist.h ../py/objexcept.h ../py/objtuple.h ../py/pystack.h :
Binary files MicorpythonOriginal1.12/micropython/mpy-cross/build/py/lexer.o and micropython1.12_withUlab/micropython/mpy-cross/build/py/lexer.o differ
diff -crNb MicorpythonOriginal1.12/micropython/mpy-cross/build/py/lexer.P micropython1.12_withUlab/micropython/mpy-cross/build/py/lexer.P
*** MicorpythonOriginal1.12/micropython/mpy-cross/build/py/lexer.P	1970-01-01 02:00:00.000000000 +0200
--- micropython1.12_withUlab/micropython/mpy-cross/build/py/lexer.P	2020-06-19 18:37:33.323637880 +0200
***************
*** 0 ****
--- 1,82 ----
+ build/py/lexer.o: ../py/lexer.c /usr/include/stdc-predef.h \
+  /usr/include/stdio.h \
+  /usr/include/x86_64-linux-gnu/bits/libc-header-start.h \
+  /usr/include/features.h /usr/include/x86_64-linux-gnu/sys/cdefs.h \
+  /usr/include/x86_64-linux-gnu/bits/wordsize.h \
+  /usr/include/x86_64-linux-gnu/bits/long-double.h \
+  /usr/include/x86_64-linux-gnu/gnu/stubs.h \
+  /usr/include/x86_64-linux-gnu/gnu/stubs-64.h \
+  /usr/lib/gcc/x86_64-linux-gnu/7/include/stddef.h \
+  /usr/include/x86_64-linux-gnu/bits/types.h \
+  /usr/include/x86_64-linux-gnu/bits/typesizes.h \
+  /usr/include/x86_64-linux-gnu/bits/types/__FILE.h \
+  /usr/include/x86_64-linux-gnu/bits/types/FILE.h \
+  /usr/include/x86_64-linux-gnu/bits/libio.h \
+  /usr/include/x86_64-linux-gnu/bits/_G_config.h \
+  /usr/include/x86_64-linux-gnu/bits/types/__mbstate_t.h \
+  /usr/lib/gcc/x86_64-linux-gnu/7/include/stdarg.h \
+  /usr/include/x86_64-linux-gnu/bits/stdio_lim.h \
+  /usr/include/x86_64-linux-gnu/bits/sys_errlist.h \
+  /usr/include/x86_64-linux-gnu/bits/stdio2.h /usr/include/string.h \
+  /usr/include/x86_64-linux-gnu/bits/types/locale_t.h \
+  /usr/include/x86_64-linux-gnu/bits/types/__locale_t.h \
+  /usr/include/strings.h \
+  /usr/include/x86_64-linux-gnu/bits/strings_fortified.h \
+  /usr/include/x86_64-linux-gnu/bits/string_fortified.h \
+  /usr/include/assert.h ../py/reader.h ../py/obj.h ../py/mpconfig.h \
+  mpconfigport.h /usr/include/alloca.h \
+  /usr/lib/gcc/x86_64-linux-gnu/7/include/stdint.h /usr/include/stdint.h \
+  /usr/include/x86_64-linux-gnu/bits/wchar.h \
+  /usr/include/x86_64-linux-gnu/bits/stdint-intn.h \
+  /usr/include/x86_64-linux-gnu/bits/stdint-uintn.h ../py/misc.h \
+  /usr/lib/gcc/x86_64-linux-gnu/7/include/stdbool.h ../py/qstr.h \
+  build/genhdr/qstrdefs.generated.h ../py/mpprint.h ../py/runtime0.h \
+  ../py/lexer.h ../py/runtime.h ../py/mpstate.h ../py/mpthread.h \
+  ../py/nlr.h /usr/lib/gcc/x86_64-linux-gnu/7/include-fixed/limits.h \
+  /usr/lib/gcc/x86_64-linux-gnu/7/include-fixed/syslimits.h \
+  /usr/include/limits.h /usr/include/x86_64-linux-gnu/bits/posix1_lim.h \
+  /usr/include/x86_64-linux-gnu/bits/local_lim.h \
+  /usr/include/linux/limits.h \
+  /usr/include/x86_64-linux-gnu/bits/posix2_lim.h ../py/objlist.h \
+  ../py/objexcept.h ../py/objtuple.h ../py/pystack.h
+ ../py/lexer.c /usr/include/stdc-predef.h :
+  /usr/include/stdio.h :
+  /usr/include/x86_64-linux-gnu/bits/libc-header-start.h :
+  /usr/include/features.h /usr/include/x86_64-linux-gnu/sys/cdefs.h :
+  /usr/include/x86_64-linux-gnu/bits/wordsize.h :
+  /usr/include/x86_64-linux-gnu/bits/long-double.h :
+  /usr/include/x86_64-linux-gnu/gnu/stubs.h :
+  /usr/include/x86_64-linux-gnu/gnu/stubs-64.h :
+  /usr/lib/gcc/x86_64-linux-gnu/7/include/stddef.h :
+  /usr/include/x86_64-linux-gnu/bits/types.h :
+  /usr/include/x86_64-linux-gnu/bits/typesizes.h :
+  /usr/include/x86_64-linux-gnu/bits/types/__FILE.h :
+  /usr/include/x86_64-linux-gnu/bits/types/FILE.h :
+  /usr/include/x86_64-linux-gnu/bits/libio.h :
+  /usr/include/x86_64-linux-gnu/bits/_G_config.h :
+  /usr/include/x86_64-linux-gnu/bits/types/__mbstate_t.h :
+  /usr/lib/gcc/x86_64-linux-gnu/7/include/stdarg.h :
+  /usr/include/x86_64-linux-gnu/bits/stdio_lim.h :
+  /usr/include/x86_64-linux-gnu/bits/sys_errlist.h :
+  /usr/include/x86_64-linux-gnu/bits/stdio2.h /usr/include/string.h :
+  /usr/include/x86_64-linux-gnu/bits/types/locale_t.h :
+  /usr/include/x86_64-linux-gnu/bits/types/__locale_t.h :
+  /usr/include/strings.h :
+  /usr/include/x86_64-linux-gnu/bits/strings_fortified.h :
+  /usr/include/x86_64-linux-gnu/bits/string_fortified.h :
+  /usr/include/assert.h ../py/reader.h ../py/obj.h ../py/mpconfig.h :
+  mpconfigport.h /usr/include/alloca.h :
+  /usr/lib/gcc/x86_64-linux-gnu/7/include/stdint.h /usr/include/stdint.h :
+  /usr/include/x86_64-linux-gnu/bits/wchar.h :
+  /usr/include/x86_64-linux-gnu/bits/stdint-intn.h :
+  /usr/include/x86_64-linux-gnu/bits/stdint-uintn.h ../py/misc.h :
+  /usr/lib/gcc/x86_64-linux-gnu/7/include/stdbool.h ../py/qstr.h :
+  build/genhdr/qstrdefs.generated.h ../py/mpprint.h ../py/runtime0.h :
+  ../py/lexer.h ../py/runtime.h ../py/mpstate.h ../py/mpthread.h :
+  ../py/nlr.h /usr/lib/gcc/x86_64-linux-gnu/7/include-fixed/limits.h :
+  /usr/lib/gcc/x86_64-linux-gnu/7/include-fixed/syslimits.h :
+  /usr/include/limits.h /usr/include/x86_64-linux-gnu/bits/posix1_lim.h :
+  /usr/include/x86_64-linux-gnu/bits/local_lim.h :
+  /usr/include/linux/limits.h :
+  /usr/include/x86_64-linux-gnu/bits/posix2_lim.h ../py/objlist.h :
+  ../py/objexcept.h ../py/objtuple.h ../py/pystack.h :
Binary files MicorpythonOriginal1.12/micropython/mpy-cross/build/py/malloc.o and micropython1.12_withUlab/micropython/mpy-cross/build/py/malloc.o differ
diff -crNb MicorpythonOriginal1.12/micropython/mpy-cross/build/py/malloc.P micropython1.12_withUlab/micropython/mpy-cross/build/py/malloc.P
*** MicorpythonOriginal1.12/micropython/mpy-cross/build/py/malloc.P	1970-01-01 02:00:00.000000000 +0200
--- micropython1.12_withUlab/micropython/mpy-cross/build/py/malloc.P	2020-06-19 18:37:32.863647840 +0200
***************
*** 0 ****
--- 1,134 ----
+ build/py/malloc.o: ../py/malloc.c /usr/include/stdc-predef.h \
+  /usr/include/stdio.h \
+  /usr/include/x86_64-linux-gnu/bits/libc-header-start.h \
+  /usr/include/features.h /usr/include/x86_64-linux-gnu/sys/cdefs.h \
+  /usr/include/x86_64-linux-gnu/bits/wordsize.h \
+  /usr/include/x86_64-linux-gnu/bits/long-double.h \
+  /usr/include/x86_64-linux-gnu/gnu/stubs.h \
+  /usr/include/x86_64-linux-gnu/gnu/stubs-64.h \
+  /usr/lib/gcc/x86_64-linux-gnu/7/include/stddef.h \
+  /usr/include/x86_64-linux-gnu/bits/types.h \
+  /usr/include/x86_64-linux-gnu/bits/typesizes.h \
+  /usr/include/x86_64-linux-gnu/bits/types/__FILE.h \
+  /usr/include/x86_64-linux-gnu/bits/types/FILE.h \
+  /usr/include/x86_64-linux-gnu/bits/libio.h \
+  /usr/include/x86_64-linux-gnu/bits/_G_config.h \
+  /usr/include/x86_64-linux-gnu/bits/types/__mbstate_t.h \
+  /usr/lib/gcc/x86_64-linux-gnu/7/include/stdarg.h \
+  /usr/include/x86_64-linux-gnu/bits/stdio_lim.h \
+  /usr/include/x86_64-linux-gnu/bits/sys_errlist.h \
+  /usr/include/x86_64-linux-gnu/bits/stdio2.h /usr/include/stdlib.h \
+  /usr/include/x86_64-linux-gnu/bits/waitflags.h \
+  /usr/include/x86_64-linux-gnu/bits/waitstatus.h \
+  /usr/include/x86_64-linux-gnu/bits/floatn.h \
+  /usr/include/x86_64-linux-gnu/bits/floatn-common.h \
+  /usr/include/x86_64-linux-gnu/sys/types.h \
+  /usr/include/x86_64-linux-gnu/bits/types/clock_t.h \
+  /usr/include/x86_64-linux-gnu/bits/types/clockid_t.h \
+  /usr/include/x86_64-linux-gnu/bits/types/time_t.h \
+  /usr/include/x86_64-linux-gnu/bits/types/timer_t.h \
+  /usr/include/x86_64-linux-gnu/bits/stdint-intn.h /usr/include/endian.h \
+  /usr/include/x86_64-linux-gnu/bits/endian.h \
+  /usr/include/x86_64-linux-gnu/bits/byteswap.h \
+  /usr/include/x86_64-linux-gnu/bits/byteswap-16.h \
+  /usr/include/x86_64-linux-gnu/bits/uintn-identity.h \
+  /usr/include/x86_64-linux-gnu/sys/select.h \
+  /usr/include/x86_64-linux-gnu/bits/select.h \
+  /usr/include/x86_64-linux-gnu/bits/types/sigset_t.h \
+  /usr/include/x86_64-linux-gnu/bits/types/__sigset_t.h \
+  /usr/include/x86_64-linux-gnu/bits/types/struct_timeval.h \
+  /usr/include/x86_64-linux-gnu/bits/types/struct_timespec.h \
+  /usr/include/x86_64-linux-gnu/bits/select2.h \
+  /usr/include/x86_64-linux-gnu/sys/sysmacros.h \
+  /usr/include/x86_64-linux-gnu/bits/sysmacros.h \
+  /usr/include/x86_64-linux-gnu/bits/pthreadtypes.h \
+  /usr/include/x86_64-linux-gnu/bits/thread-shared-types.h \
+  /usr/include/x86_64-linux-gnu/bits/pthreadtypes-arch.h \
+  /usr/include/alloca.h /usr/include/x86_64-linux-gnu/bits/stdlib-float.h \
+  /usr/include/x86_64-linux-gnu/bits/stdlib.h /usr/include/string.h \
+  /usr/include/x86_64-linux-gnu/bits/types/locale_t.h \
+  /usr/include/x86_64-linux-gnu/bits/types/__locale_t.h \
+  /usr/include/strings.h \
+  /usr/include/x86_64-linux-gnu/bits/strings_fortified.h \
+  /usr/include/x86_64-linux-gnu/bits/string_fortified.h ../py/mpconfig.h \
+  mpconfigport.h /usr/lib/gcc/x86_64-linux-gnu/7/include/stdint.h \
+  /usr/include/stdint.h /usr/include/x86_64-linux-gnu/bits/wchar.h \
+  /usr/include/x86_64-linux-gnu/bits/stdint-uintn.h ../py/misc.h \
+  /usr/lib/gcc/x86_64-linux-gnu/7/include/stdbool.h ../py/mpstate.h \
+  ../py/mpthread.h ../py/nlr.h \
+  /usr/lib/gcc/x86_64-linux-gnu/7/include-fixed/limits.h \
+  /usr/lib/gcc/x86_64-linux-gnu/7/include-fixed/syslimits.h \
+  /usr/include/limits.h /usr/include/x86_64-linux-gnu/bits/posix1_lim.h \
+  /usr/include/x86_64-linux-gnu/bits/local_lim.h \
+  /usr/include/linux/limits.h \
+  /usr/include/x86_64-linux-gnu/bits/posix2_lim.h /usr/include/assert.h \
+  ../py/obj.h ../py/qstr.h build/genhdr/qstrdefs.generated.h \
+  ../py/mpprint.h ../py/runtime0.h ../py/objlist.h ../py/objexcept.h \
+  ../py/objtuple.h ../py/gc.h
+ ../py/malloc.c /usr/include/stdc-predef.h :
+  /usr/include/stdio.h :
+  /usr/include/x86_64-linux-gnu/bits/libc-header-start.h :
+  /usr/include/features.h /usr/include/x86_64-linux-gnu/sys/cdefs.h :
+  /usr/include/x86_64-linux-gnu/bits/wordsize.h :
+  /usr/include/x86_64-linux-gnu/bits/long-double.h :
+  /usr/include/x86_64-linux-gnu/gnu/stubs.h :
+  /usr/include/x86_64-linux-gnu/gnu/stubs-64.h :
+  /usr/lib/gcc/x86_64-linux-gnu/7/include/stddef.h :
+  /usr/include/x86_64-linux-gnu/bits/types.h :
+  /usr/include/x86_64-linux-gnu/bits/typesizes.h :
+  /usr/include/x86_64-linux-gnu/bits/types/__FILE.h :
+  /usr/include/x86_64-linux-gnu/bits/types/FILE.h :
+  /usr/include/x86_64-linux-gnu/bits/libio.h :
+  /usr/include/x86_64-linux-gnu/bits/_G_config.h :
+  /usr/include/x86_64-linux-gnu/bits/types/__mbstate_t.h :
+  /usr/lib/gcc/x86_64-linux-gnu/7/include/stdarg.h :
+  /usr/include/x86_64-linux-gnu/bits/stdio_lim.h :
+  /usr/include/x86_64-linux-gnu/bits/sys_errlist.h :
+  /usr/include/x86_64-linux-gnu/bits/stdio2.h /usr/include/stdlib.h :
+  /usr/include/x86_64-linux-gnu/bits/waitflags.h :
+  /usr/include/x86_64-linux-gnu/bits/waitstatus.h :
+  /usr/include/x86_64-linux-gnu/bits/floatn.h :
+  /usr/include/x86_64-linux-gnu/bits/floatn-common.h :
+  /usr/include/x86_64-linux-gnu/sys/types.h :
+  /usr/include/x86_64-linux-gnu/bits/types/clock_t.h :
+  /usr/include/x86_64-linux-gnu/bits/types/clockid_t.h :
+  /usr/include/x86_64-linux-gnu/bits/types/time_t.h :
+  /usr/include/x86_64-linux-gnu/bits/types/timer_t.h :
+  /usr/include/x86_64-linux-gnu/bits/stdint-intn.h /usr/include/endian.h :
+  /usr/include/x86_64-linux-gnu/bits/endian.h :
+  /usr/include/x86_64-linux-gnu/bits/byteswap.h :
+  /usr/include/x86_64-linux-gnu/bits/byteswap-16.h :
+  /usr/include/x86_64-linux-gnu/bits/uintn-identity.h :
+  /usr/include/x86_64-linux-gnu/sys/select.h :
+  /usr/include/x86_64-linux-gnu/bits/select.h :
+  /usr/include/x86_64-linux-gnu/bits/types/sigset_t.h :
+  /usr/include/x86_64-linux-gnu/bits/types/__sigset_t.h :
+  /usr/include/x86_64-linux-gnu/bits/types/struct_timeval.h :
+  /usr/include/x86_64-linux-gnu/bits/types/struct_timespec.h :
+  /usr/include/x86_64-linux-gnu/bits/select2.h :
+  /usr/include/x86_64-linux-gnu/sys/sysmacros.h :
+  /usr/include/x86_64-linux-gnu/bits/sysmacros.h :
+  /usr/include/x86_64-linux-gnu/bits/pthreadtypes.h :
+  /usr/include/x86_64-linux-gnu/bits/thread-shared-types.h :
+  /usr/include/x86_64-linux-gnu/bits/pthreadtypes-arch.h :
+  /usr/include/alloca.h /usr/include/x86_64-linux-gnu/bits/stdlib-float.h :
+  /usr/include/x86_64-linux-gnu/bits/stdlib.h /usr/include/string.h :
+  /usr/include/x86_64-linux-gnu/bits/types/locale_t.h :
+  /usr/include/x86_64-linux-gnu/bits/types/__locale_t.h :
+  /usr/include/strings.h :
+  /usr/include/x86_64-linux-gnu/bits/strings_fortified.h :
+  /usr/include/x86_64-linux-gnu/bits/string_fortified.h ../py/mpconfig.h :
+  mpconfigport.h /usr/lib/gcc/x86_64-linux-gnu/7/include/stdint.h :
+  /usr/include/stdint.h /usr/include/x86_64-linux-gnu/bits/wchar.h :
+  /usr/include/x86_64-linux-gnu/bits/stdint-uintn.h ../py/misc.h :
+  /usr/lib/gcc/x86_64-linux-gnu/7/include/stdbool.h ../py/mpstate.h :
+  ../py/mpthread.h ../py/nlr.h :
+  /usr/lib/gcc/x86_64-linux-gnu/7/include-fixed/limits.h :
+  /usr/lib/gcc/x86_64-linux-gnu/7/include-fixed/syslimits.h :
+  /usr/include/limits.h /usr/include/x86_64-linux-gnu/bits/posix1_lim.h :
+  /usr/include/x86_64-linux-gnu/bits/local_lim.h :
+  /usr/include/linux/limits.h :
+  /usr/include/x86_64-linux-gnu/bits/posix2_lim.h /usr/include/assert.h :
+  ../py/obj.h ../py/qstr.h build/genhdr/qstrdefs.generated.h :
+  ../py/mpprint.h ../py/runtime0.h ../py/objlist.h ../py/objexcept.h :
+  ../py/objtuple.h ../py/gc.h :
Binary files MicorpythonOriginal1.12/micropython/mpy-cross/build/py/map.o and micropython1.12_withUlab/micropython/mpy-cross/build/py/map.o differ
diff -crNb MicorpythonOriginal1.12/micropython/mpy-cross/build/py/map.P micropython1.12_withUlab/micropython/mpy-cross/build/py/map.P
*** MicorpythonOriginal1.12/micropython/mpy-cross/build/py/map.P	1970-01-01 02:00:00.000000000 +0200
--- micropython1.12_withUlab/micropython/mpy-cross/build/py/map.P	2020-06-19 18:37:36.667565849 +0200
***************
*** 0 ****
--- 1,114 ----
+ build/py/map.o: ../py/map.c /usr/include/stdc-predef.h \
+  /usr/lib/gcc/x86_64-linux-gnu/7/include/stdint.h /usr/include/stdint.h \
+  /usr/include/x86_64-linux-gnu/bits/libc-header-start.h \
+  /usr/include/features.h /usr/include/x86_64-linux-gnu/sys/cdefs.h \
+  /usr/include/x86_64-linux-gnu/bits/wordsize.h \
+  /usr/include/x86_64-linux-gnu/bits/long-double.h \
+  /usr/include/x86_64-linux-gnu/gnu/stubs.h \
+  /usr/include/x86_64-linux-gnu/gnu/stubs-64.h \
+  /usr/include/x86_64-linux-gnu/bits/types.h \
+  /usr/include/x86_64-linux-gnu/bits/typesizes.h \
+  /usr/include/x86_64-linux-gnu/bits/wchar.h \
+  /usr/include/x86_64-linux-gnu/bits/stdint-intn.h \
+  /usr/include/x86_64-linux-gnu/bits/stdint-uintn.h /usr/include/stdlib.h \
+  /usr/lib/gcc/x86_64-linux-gnu/7/include/stddef.h \
+  /usr/include/x86_64-linux-gnu/bits/waitflags.h \
+  /usr/include/x86_64-linux-gnu/bits/waitstatus.h \
+  /usr/include/x86_64-linux-gnu/bits/floatn.h \
+  /usr/include/x86_64-linux-gnu/bits/floatn-common.h \
+  /usr/include/x86_64-linux-gnu/sys/types.h \
+  /usr/include/x86_64-linux-gnu/bits/types/clock_t.h \
+  /usr/include/x86_64-linux-gnu/bits/types/clockid_t.h \
+  /usr/include/x86_64-linux-gnu/bits/types/time_t.h \
+  /usr/include/x86_64-linux-gnu/bits/types/timer_t.h /usr/include/endian.h \
+  /usr/include/x86_64-linux-gnu/bits/endian.h \
+  /usr/include/x86_64-linux-gnu/bits/byteswap.h \
+  /usr/include/x86_64-linux-gnu/bits/byteswap-16.h \
+  /usr/include/x86_64-linux-gnu/bits/uintn-identity.h \
+  /usr/include/x86_64-linux-gnu/sys/select.h \
+  /usr/include/x86_64-linux-gnu/bits/select.h \
+  /usr/include/x86_64-linux-gnu/bits/types/sigset_t.h \
+  /usr/include/x86_64-linux-gnu/bits/types/__sigset_t.h \
+  /usr/include/x86_64-linux-gnu/bits/types/struct_timeval.h \
+  /usr/include/x86_64-linux-gnu/bits/types/struct_timespec.h \
+  /usr/include/x86_64-linux-gnu/bits/select2.h \
+  /usr/include/x86_64-linux-gnu/sys/sysmacros.h \
+  /usr/include/x86_64-linux-gnu/bits/sysmacros.h \
+  /usr/include/x86_64-linux-gnu/bits/pthreadtypes.h \
+  /usr/include/x86_64-linux-gnu/bits/thread-shared-types.h \
+  /usr/include/x86_64-linux-gnu/bits/pthreadtypes-arch.h \
+  /usr/include/alloca.h /usr/include/x86_64-linux-gnu/bits/stdlib-float.h \
+  /usr/include/x86_64-linux-gnu/bits/stdlib.h /usr/include/string.h \
+  /usr/include/x86_64-linux-gnu/bits/types/locale_t.h \
+  /usr/include/x86_64-linux-gnu/bits/types/__locale_t.h \
+  /usr/include/strings.h \
+  /usr/include/x86_64-linux-gnu/bits/strings_fortified.h \
+  /usr/include/x86_64-linux-gnu/bits/string_fortified.h \
+  /usr/include/assert.h ../py/mpconfig.h mpconfigport.h ../py/misc.h \
+  /usr/lib/gcc/x86_64-linux-gnu/7/include/stdbool.h ../py/runtime.h \
+  ../py/mpstate.h ../py/mpthread.h ../py/nlr.h \
+  /usr/lib/gcc/x86_64-linux-gnu/7/include-fixed/limits.h \
+  /usr/lib/gcc/x86_64-linux-gnu/7/include-fixed/syslimits.h \
+  /usr/include/limits.h /usr/include/x86_64-linux-gnu/bits/posix1_lim.h \
+  /usr/include/x86_64-linux-gnu/bits/local_lim.h \
+  /usr/include/linux/limits.h \
+  /usr/include/x86_64-linux-gnu/bits/posix2_lim.h ../py/obj.h ../py/qstr.h \
+  build/genhdr/qstrdefs.generated.h ../py/mpprint.h ../py/runtime0.h \
+  ../py/objlist.h ../py/objexcept.h ../py/objtuple.h ../py/pystack.h
+ ../py/map.c /usr/include/stdc-predef.h :
+  /usr/lib/gcc/x86_64-linux-gnu/7/include/stdint.h /usr/include/stdint.h :
+  /usr/include/x86_64-linux-gnu/bits/libc-header-start.h :
+  /usr/include/features.h /usr/include/x86_64-linux-gnu/sys/cdefs.h :
+  /usr/include/x86_64-linux-gnu/bits/wordsize.h :
+  /usr/include/x86_64-linux-gnu/bits/long-double.h :
+  /usr/include/x86_64-linux-gnu/gnu/stubs.h :
+  /usr/include/x86_64-linux-gnu/gnu/stubs-64.h :
+  /usr/include/x86_64-linux-gnu/bits/types.h :
+  /usr/include/x86_64-linux-gnu/bits/typesizes.h :
+  /usr/include/x86_64-linux-gnu/bits/wchar.h :
+  /usr/include/x86_64-linux-gnu/bits/stdint-intn.h :
+  /usr/include/x86_64-linux-gnu/bits/stdint-uintn.h /usr/include/stdlib.h :
+  /usr/lib/gcc/x86_64-linux-gnu/7/include/stddef.h :
+  /usr/include/x86_64-linux-gnu/bits/waitflags.h :
+  /usr/include/x86_64-linux-gnu/bits/waitstatus.h :
+  /usr/include/x86_64-linux-gnu/bits/floatn.h :
+  /usr/include/x86_64-linux-gnu/bits/floatn-common.h :
+  /usr/include/x86_64-linux-gnu/sys/types.h :
+  /usr/include/x86_64-linux-gnu/bits/types/clock_t.h :
+  /usr/include/x86_64-linux-gnu/bits/types/clockid_t.h :
+  /usr/include/x86_64-linux-gnu/bits/types/time_t.h :
+  /usr/include/x86_64-linux-gnu/bits/types/timer_t.h /usr/include/endian.h :
+  /usr/include/x86_64-linux-gnu/bits/endian.h :
+  /usr/include/x86_64-linux-gnu/bits/byteswap.h :
+  /usr/include/x86_64-linux-gnu/bits/byteswap-16.h :
+  /usr/include/x86_64-linux-gnu/bits/uintn-identity.h :
+  /usr/include/x86_64-linux-gnu/sys/select.h :
+  /usr/include/x86_64-linux-gnu/bits/select.h :
+  /usr/include/x86_64-linux-gnu/bits/types/sigset_t.h :
+  /usr/include/x86_64-linux-gnu/bits/types/__sigset_t.h :
+  /usr/include/x86_64-linux-gnu/bits/types/struct_timeval.h :
+  /usr/include/x86_64-linux-gnu/bits/types/struct_timespec.h :
+  /usr/include/x86_64-linux-gnu/bits/select2.h :
+  /usr/include/x86_64-linux-gnu/sys/sysmacros.h :
+  /usr/include/x86_64-linux-gnu/bits/sysmacros.h :
+  /usr/include/x86_64-linux-gnu/bits/pthreadtypes.h :
+  /usr/include/x86_64-linux-gnu/bits/thread-shared-types.h :
+  /usr/include/x86_64-linux-gnu/bits/pthreadtypes-arch.h :
+  /usr/include/alloca.h /usr/include/x86_64-linux-gnu/bits/stdlib-float.h :
+  /usr/include/x86_64-linux-gnu/bits/stdlib.h /usr/include/string.h :
+  /usr/include/x86_64-linux-gnu/bits/types/locale_t.h :
+  /usr/include/x86_64-linux-gnu/bits/types/__locale_t.h :
+  /usr/include/strings.h :
+  /usr/include/x86_64-linux-gnu/bits/strings_fortified.h :
+  /usr/include/x86_64-linux-gnu/bits/string_fortified.h :
+  /usr/include/assert.h ../py/mpconfig.h mpconfigport.h ../py/misc.h :
+  /usr/lib/gcc/x86_64-linux-gnu/7/include/stdbool.h ../py/runtime.h :
+  ../py/mpstate.h ../py/mpthread.h ../py/nlr.h :
+  /usr/lib/gcc/x86_64-linux-gnu/7/include-fixed/limits.h :
+  /usr/lib/gcc/x86_64-linux-gnu/7/include-fixed/syslimits.h :
+  /usr/include/limits.h /usr/include/x86_64-linux-gnu/bits/posix1_lim.h :
+  /usr/include/x86_64-linux-gnu/bits/local_lim.h :
+  /usr/include/linux/limits.h :
+  /usr/include/x86_64-linux-gnu/bits/posix2_lim.h ../py/obj.h ../py/qstr.h :
+  build/genhdr/qstrdefs.generated.h ../py/mpprint.h ../py/runtime0.h :
+  ../py/objlist.h ../py/objexcept.h ../py/objtuple.h ../py/pystack.h :
Binary files MicorpythonOriginal1.12/micropython/mpy-cross/build/py/modarray.o and micropython1.12_withUlab/micropython/mpy-cross/build/py/modarray.o differ
diff -crNb MicorpythonOriginal1.12/micropython/mpy-cross/build/py/modarray.P micropython1.12_withUlab/micropython/mpy-cross/build/py/modarray.P
*** MicorpythonOriginal1.12/micropython/mpy-cross/build/py/modarray.P	1970-01-01 02:00:00.000000000 +0200
--- micropython1.12_withUlab/micropython/mpy-cross/build/py/modarray.P	2020-06-19 19:54:02.533489288 +0200
***************
*** 0 ****
--- 1,36 ----
+ build/py/modarray.o: ../py/modarray.c /usr/include/stdc-predef.h \
+  ../py/builtin.h ../py/obj.h ../py/mpconfig.h mpconfigport.h \
+  /usr/include/alloca.h /usr/include/features.h \
+  /usr/include/x86_64-linux-gnu/sys/cdefs.h \
+  /usr/include/x86_64-linux-gnu/bits/wordsize.h \
+  /usr/include/x86_64-linux-gnu/bits/long-double.h \
+  /usr/include/x86_64-linux-gnu/gnu/stubs.h \
+  /usr/include/x86_64-linux-gnu/gnu/stubs-64.h \
+  /usr/lib/gcc/x86_64-linux-gnu/7/include/stddef.h \
+  /usr/lib/gcc/x86_64-linux-gnu/7/include/stdint.h /usr/include/stdint.h \
+  /usr/include/x86_64-linux-gnu/bits/libc-header-start.h \
+  /usr/include/x86_64-linux-gnu/bits/types.h \
+  /usr/include/x86_64-linux-gnu/bits/typesizes.h \
+  /usr/include/x86_64-linux-gnu/bits/wchar.h \
+  /usr/include/x86_64-linux-gnu/bits/stdint-intn.h \
+  /usr/include/x86_64-linux-gnu/bits/stdint-uintn.h ../py/misc.h \
+  /usr/lib/gcc/x86_64-linux-gnu/7/include/stdbool.h ../py/qstr.h \
+  build/genhdr/qstrdefs.generated.h ../py/mpprint.h ../py/runtime0.h
+ ../py/modarray.c /usr/include/stdc-predef.h :
+  ../py/builtin.h ../py/obj.h ../py/mpconfig.h mpconfigport.h :
+  /usr/include/alloca.h /usr/include/features.h :
+  /usr/include/x86_64-linux-gnu/sys/cdefs.h :
+  /usr/include/x86_64-linux-gnu/bits/wordsize.h :
+  /usr/include/x86_64-linux-gnu/bits/long-double.h :
+  /usr/include/x86_64-linux-gnu/gnu/stubs.h :
+  /usr/include/x86_64-linux-gnu/gnu/stubs-64.h :
+  /usr/lib/gcc/x86_64-linux-gnu/7/include/stddef.h :
+  /usr/lib/gcc/x86_64-linux-gnu/7/include/stdint.h /usr/include/stdint.h :
+  /usr/include/x86_64-linux-gnu/bits/libc-header-start.h :
+  /usr/include/x86_64-linux-gnu/bits/types.h :
+  /usr/include/x86_64-linux-gnu/bits/typesizes.h :
+  /usr/include/x86_64-linux-gnu/bits/wchar.h :
+  /usr/include/x86_64-linux-gnu/bits/stdint-intn.h :
+  /usr/include/x86_64-linux-gnu/bits/stdint-uintn.h ../py/misc.h :
+  /usr/lib/gcc/x86_64-linux-gnu/7/include/stdbool.h ../py/qstr.h :
+  build/genhdr/qstrdefs.generated.h ../py/mpprint.h ../py/runtime0.h :
Binary files MicorpythonOriginal1.12/micropython/mpy-cross/build/py/modbuiltins.o and micropython1.12_withUlab/micropython/mpy-cross/build/py/modbuiltins.o differ
diff -crNb MicorpythonOriginal1.12/micropython/mpy-cross/build/py/modbuiltins.P micropython1.12_withUlab/micropython/mpy-cross/build/py/modbuiltins.P
*** MicorpythonOriginal1.12/micropython/mpy-cross/build/py/modbuiltins.P	1970-01-01 02:00:00.000000000 +0200
--- micropython1.12_withUlab/micropython/mpy-cross/build/py/modbuiltins.P	2020-06-19 19:54:02.617488776 +0200
***************
*** 0 ****
--- 1,98 ----
+ build/py/modbuiltins.o: ../py/modbuiltins.c /usr/include/stdc-predef.h \
+  /usr/include/stdio.h \
+  /usr/include/x86_64-linux-gnu/bits/libc-header-start.h \
+  /usr/include/features.h /usr/include/x86_64-linux-gnu/sys/cdefs.h \
+  /usr/include/x86_64-linux-gnu/bits/wordsize.h \
+  /usr/include/x86_64-linux-gnu/bits/long-double.h \
+  /usr/include/x86_64-linux-gnu/gnu/stubs.h \
+  /usr/include/x86_64-linux-gnu/gnu/stubs-64.h \
+  /usr/lib/gcc/x86_64-linux-gnu/7/include/stddef.h \
+  /usr/include/x86_64-linux-gnu/bits/types.h \
+  /usr/include/x86_64-linux-gnu/bits/typesizes.h \
+  /usr/include/x86_64-linux-gnu/bits/types/__FILE.h \
+  /usr/include/x86_64-linux-gnu/bits/types/FILE.h \
+  /usr/include/x86_64-linux-gnu/bits/libio.h \
+  /usr/include/x86_64-linux-gnu/bits/_G_config.h \
+  /usr/include/x86_64-linux-gnu/bits/types/__mbstate_t.h \
+  /usr/lib/gcc/x86_64-linux-gnu/7/include/stdarg.h \
+  /usr/include/x86_64-linux-gnu/bits/stdio_lim.h \
+  /usr/include/x86_64-linux-gnu/bits/sys_errlist.h \
+  /usr/include/x86_64-linux-gnu/bits/stdio2.h /usr/include/assert.h \
+  ../py/smallint.h ../py/mpconfig.h mpconfigport.h /usr/include/alloca.h \
+  /usr/lib/gcc/x86_64-linux-gnu/7/include/stdint.h /usr/include/stdint.h \
+  /usr/include/x86_64-linux-gnu/bits/wchar.h \
+  /usr/include/x86_64-linux-gnu/bits/stdint-intn.h \
+  /usr/include/x86_64-linux-gnu/bits/stdint-uintn.h ../py/misc.h \
+  /usr/lib/gcc/x86_64-linux-gnu/7/include/stdbool.h ../py/objint.h \
+  ../py/mpz.h ../py/obj.h ../py/qstr.h build/genhdr/qstrdefs.generated.h \
+  ../py/mpprint.h ../py/runtime0.h ../py/objstr.h ../py/objtype.h \
+  ../py/runtime.h ../py/mpstate.h ../py/mpthread.h ../py/nlr.h \
+  /usr/lib/gcc/x86_64-linux-gnu/7/include-fixed/limits.h \
+  /usr/lib/gcc/x86_64-linux-gnu/7/include-fixed/syslimits.h \
+  /usr/include/limits.h /usr/include/x86_64-linux-gnu/bits/posix1_lim.h \
+  /usr/include/x86_64-linux-gnu/bits/local_lim.h \
+  /usr/include/linux/limits.h \
+  /usr/include/x86_64-linux-gnu/bits/posix2_lim.h ../py/objlist.h \
+  ../py/objexcept.h ../py/objtuple.h ../py/pystack.h ../py/builtin.h \
+  ../py/stream.h ../py/mperrno.h /usr/include/errno.h \
+  /usr/include/x86_64-linux-gnu/bits/errno.h /usr/include/linux/errno.h \
+  /usr/include/x86_64-linux-gnu/asm/errno.h \
+  /usr/include/asm-generic/errno.h /usr/include/asm-generic/errno-base.h \
+  /usr/include/math.h /usr/include/x86_64-linux-gnu/bits/math-vector.h \
+  /usr/include/x86_64-linux-gnu/bits/libm-simd-decl-stubs.h \
+  /usr/include/x86_64-linux-gnu/bits/floatn.h \
+  /usr/include/x86_64-linux-gnu/bits/floatn-common.h \
+  /usr/include/x86_64-linux-gnu/bits/flt-eval-method.h \
+  /usr/include/x86_64-linux-gnu/bits/fp-logb.h \
+  /usr/include/x86_64-linux-gnu/bits/fp-fast.h \
+  /usr/include/x86_64-linux-gnu/bits/mathcalls-helper-functions.h \
+  /usr/include/x86_64-linux-gnu/bits/mathcalls.h
+ ../py/modbuiltins.c /usr/include/stdc-predef.h :
+  /usr/include/stdio.h :
+  /usr/include/x86_64-linux-gnu/bits/libc-header-start.h :
+  /usr/include/features.h /usr/include/x86_64-linux-gnu/sys/cdefs.h :
+  /usr/include/x86_64-linux-gnu/bits/wordsize.h :
+  /usr/include/x86_64-linux-gnu/bits/long-double.h :
+  /usr/include/x86_64-linux-gnu/gnu/stubs.h :
+  /usr/include/x86_64-linux-gnu/gnu/stubs-64.h :
+  /usr/lib/gcc/x86_64-linux-gnu/7/include/stddef.h :
+  /usr/include/x86_64-linux-gnu/bits/types.h :
+  /usr/include/x86_64-linux-gnu/bits/typesizes.h :
+  /usr/include/x86_64-linux-gnu/bits/types/__FILE.h :
+  /usr/include/x86_64-linux-gnu/bits/types/FILE.h :
+  /usr/include/x86_64-linux-gnu/bits/libio.h :
+  /usr/include/x86_64-linux-gnu/bits/_G_config.h :
+  /usr/include/x86_64-linux-gnu/bits/types/__mbstate_t.h :
+  /usr/lib/gcc/x86_64-linux-gnu/7/include/stdarg.h :
+  /usr/include/x86_64-linux-gnu/bits/stdio_lim.h :
+  /usr/include/x86_64-linux-gnu/bits/sys_errlist.h :
+  /usr/include/x86_64-linux-gnu/bits/stdio2.h /usr/include/assert.h :
+  ../py/smallint.h ../py/mpconfig.h mpconfigport.h /usr/include/alloca.h :
+  /usr/lib/gcc/x86_64-linux-gnu/7/include/stdint.h /usr/include/stdint.h :
+  /usr/include/x86_64-linux-gnu/bits/wchar.h :
+  /usr/include/x86_64-linux-gnu/bits/stdint-intn.h :
+  /usr/include/x86_64-linux-gnu/bits/stdint-uintn.h ../py/misc.h :
+  /usr/lib/gcc/x86_64-linux-gnu/7/include/stdbool.h ../py/objint.h :
+  ../py/mpz.h ../py/obj.h ../py/qstr.h build/genhdr/qstrdefs.generated.h :
+  ../py/mpprint.h ../py/runtime0.h ../py/objstr.h ../py/objtype.h :
+  ../py/runtime.h ../py/mpstate.h ../py/mpthread.h ../py/nlr.h :
+  /usr/lib/gcc/x86_64-linux-gnu/7/include-fixed/limits.h :
+  /usr/lib/gcc/x86_64-linux-gnu/7/include-fixed/syslimits.h :
+  /usr/include/limits.h /usr/include/x86_64-linux-gnu/bits/posix1_lim.h :
+  /usr/include/x86_64-linux-gnu/bits/local_lim.h :
+  /usr/include/linux/limits.h :
+  /usr/include/x86_64-linux-gnu/bits/posix2_lim.h ../py/objlist.h :
+  ../py/objexcept.h ../py/objtuple.h ../py/pystack.h ../py/builtin.h :
+  ../py/stream.h ../py/mperrno.h /usr/include/errno.h :
+  /usr/include/x86_64-linux-gnu/bits/errno.h /usr/include/linux/errno.h :
+  /usr/include/x86_64-linux-gnu/asm/errno.h :
+  /usr/include/asm-generic/errno.h /usr/include/asm-generic/errno-base.h :
+  /usr/include/math.h /usr/include/x86_64-linux-gnu/bits/math-vector.h :
+  /usr/include/x86_64-linux-gnu/bits/libm-simd-decl-stubs.h :
+  /usr/include/x86_64-linux-gnu/bits/floatn.h :
+  /usr/include/x86_64-linux-gnu/bits/floatn-common.h :
+  /usr/include/x86_64-linux-gnu/bits/flt-eval-method.h :
+  /usr/include/x86_64-linux-gnu/bits/fp-logb.h :
+  /usr/include/x86_64-linux-gnu/bits/fp-fast.h :
+  /usr/include/x86_64-linux-gnu/bits/mathcalls-helper-functions.h :
+  /usr/include/x86_64-linux-gnu/bits/mathcalls.h :
Binary files MicorpythonOriginal1.12/micropython/mpy-cross/build/py/modcmath.o and micropython1.12_withUlab/micropython/mpy-cross/build/py/modcmath.o differ
diff -crNb MicorpythonOriginal1.12/micropython/mpy-cross/build/py/modcmath.P micropython1.12_withUlab/micropython/mpy-cross/build/py/modcmath.P
*** MicorpythonOriginal1.12/micropython/mpy-cross/build/py/modcmath.P	1970-01-01 02:00:00.000000000 +0200
--- micropython1.12_withUlab/micropython/mpy-cross/build/py/modcmath.P	2020-06-19 19:54:02.693488311 +0200
***************
*** 0 ****
--- 1,36 ----
+ build/py/modcmath.o: ../py/modcmath.c /usr/include/stdc-predef.h \
+  ../py/builtin.h ../py/obj.h ../py/mpconfig.h mpconfigport.h \
+  /usr/include/alloca.h /usr/include/features.h \
+  /usr/include/x86_64-linux-gnu/sys/cdefs.h \
+  /usr/include/x86_64-linux-gnu/bits/wordsize.h \
+  /usr/include/x86_64-linux-gnu/bits/long-double.h \
+  /usr/include/x86_64-linux-gnu/gnu/stubs.h \
+  /usr/include/x86_64-linux-gnu/gnu/stubs-64.h \
+  /usr/lib/gcc/x86_64-linux-gnu/7/include/stddef.h \
+  /usr/lib/gcc/x86_64-linux-gnu/7/include/stdint.h /usr/include/stdint.h \
+  /usr/include/x86_64-linux-gnu/bits/libc-header-start.h \
+  /usr/include/x86_64-linux-gnu/bits/types.h \
+  /usr/include/x86_64-linux-gnu/bits/typesizes.h \
+  /usr/include/x86_64-linux-gnu/bits/wchar.h \
+  /usr/include/x86_64-linux-gnu/bits/stdint-intn.h \
+  /usr/include/x86_64-linux-gnu/bits/stdint-uintn.h ../py/misc.h \
+  /usr/lib/gcc/x86_64-linux-gnu/7/include/stdbool.h ../py/qstr.h \
+  build/genhdr/qstrdefs.generated.h ../py/mpprint.h ../py/runtime0.h
+ ../py/modcmath.c /usr/include/stdc-predef.h :
+  ../py/builtin.h ../py/obj.h ../py/mpconfig.h mpconfigport.h :
+  /usr/include/alloca.h /usr/include/features.h :
+  /usr/include/x86_64-linux-gnu/sys/cdefs.h :
+  /usr/include/x86_64-linux-gnu/bits/wordsize.h :
+  /usr/include/x86_64-linux-gnu/bits/long-double.h :
+  /usr/include/x86_64-linux-gnu/gnu/stubs.h :
+  /usr/include/x86_64-linux-gnu/gnu/stubs-64.h :
+  /usr/lib/gcc/x86_64-linux-gnu/7/include/stddef.h :
+  /usr/lib/gcc/x86_64-linux-gnu/7/include/stdint.h /usr/include/stdint.h :
+  /usr/include/x86_64-linux-gnu/bits/libc-header-start.h :
+  /usr/include/x86_64-linux-gnu/bits/types.h :
+  /usr/include/x86_64-linux-gnu/bits/typesizes.h :
+  /usr/include/x86_64-linux-gnu/bits/wchar.h :
+  /usr/include/x86_64-linux-gnu/bits/stdint-intn.h :
+  /usr/include/x86_64-linux-gnu/bits/stdint-uintn.h ../py/misc.h :
+  /usr/lib/gcc/x86_64-linux-gnu/7/include/stdbool.h ../py/qstr.h :
+  build/genhdr/qstrdefs.generated.h ../py/mpprint.h ../py/runtime0.h :
Binary files MicorpythonOriginal1.12/micropython/mpy-cross/build/py/modcollections.o and micropython1.12_withUlab/micropython/mpy-cross/build/py/modcollections.o differ
diff -crNb MicorpythonOriginal1.12/micropython/mpy-cross/build/py/modcollections.P micropython1.12_withUlab/micropython/mpy-cross/build/py/modcollections.P
*** MicorpythonOriginal1.12/micropython/mpy-cross/build/py/modcollections.P	1970-01-01 02:00:00.000000000 +0200
--- micropython1.12_withUlab/micropython/mpy-cross/build/py/modcollections.P	2020-06-19 19:54:02.637488653 +0200
***************
*** 0 ****
--- 1,36 ----
+ build/py/modcollections.o: ../py/modcollections.c \
+  /usr/include/stdc-predef.h ../py/builtin.h ../py/obj.h ../py/mpconfig.h \
+  mpconfigport.h /usr/include/alloca.h /usr/include/features.h \
+  /usr/include/x86_64-linux-gnu/sys/cdefs.h \
+  /usr/include/x86_64-linux-gnu/bits/wordsize.h \
+  /usr/include/x86_64-linux-gnu/bits/long-double.h \
+  /usr/include/x86_64-linux-gnu/gnu/stubs.h \
+  /usr/include/x86_64-linux-gnu/gnu/stubs-64.h \
+  /usr/lib/gcc/x86_64-linux-gnu/7/include/stddef.h \
+  /usr/lib/gcc/x86_64-linux-gnu/7/include/stdint.h /usr/include/stdint.h \
+  /usr/include/x86_64-linux-gnu/bits/libc-header-start.h \
+  /usr/include/x86_64-linux-gnu/bits/types.h \
+  /usr/include/x86_64-linux-gnu/bits/typesizes.h \
+  /usr/include/x86_64-linux-gnu/bits/wchar.h \
+  /usr/include/x86_64-linux-gnu/bits/stdint-intn.h \
+  /usr/include/x86_64-linux-gnu/bits/stdint-uintn.h ../py/misc.h \
+  /usr/lib/gcc/x86_64-linux-gnu/7/include/stdbool.h ../py/qstr.h \
+  build/genhdr/qstrdefs.generated.h ../py/mpprint.h ../py/runtime0.h
+ ../py/modcollections.c :
+  /usr/include/stdc-predef.h ../py/builtin.h ../py/obj.h ../py/mpconfig.h :
+  mpconfigport.h /usr/include/alloca.h /usr/include/features.h :
+  /usr/include/x86_64-linux-gnu/sys/cdefs.h :
+  /usr/include/x86_64-linux-gnu/bits/wordsize.h :
+  /usr/include/x86_64-linux-gnu/bits/long-double.h :
+  /usr/include/x86_64-linux-gnu/gnu/stubs.h :
+  /usr/include/x86_64-linux-gnu/gnu/stubs-64.h :
+  /usr/lib/gcc/x86_64-linux-gnu/7/include/stddef.h :
+  /usr/lib/gcc/x86_64-linux-gnu/7/include/stdint.h /usr/include/stdint.h :
+  /usr/include/x86_64-linux-gnu/bits/libc-header-start.h :
+  /usr/include/x86_64-linux-gnu/bits/types.h :
+  /usr/include/x86_64-linux-gnu/bits/typesizes.h :
+  /usr/include/x86_64-linux-gnu/bits/wchar.h :
+  /usr/include/x86_64-linux-gnu/bits/stdint-intn.h :
+  /usr/include/x86_64-linux-gnu/bits/stdint-uintn.h ../py/misc.h :
+  /usr/lib/gcc/x86_64-linux-gnu/7/include/stdbool.h ../py/qstr.h :
+  build/genhdr/qstrdefs.generated.h ../py/mpprint.h ../py/runtime0.h :
Binary files MicorpythonOriginal1.12/micropython/mpy-cross/build/py/modgc.o and micropython1.12_withUlab/micropython/mpy-cross/build/py/modgc.o differ
diff -crNb MicorpythonOriginal1.12/micropython/mpy-cross/build/py/modgc.P micropython1.12_withUlab/micropython/mpy-cross/build/py/modgc.P
*** MicorpythonOriginal1.12/micropython/mpy-cross/build/py/modgc.P	1970-01-01 02:00:00.000000000 +0200
--- micropython1.12_withUlab/micropython/mpy-cross/build/py/modgc.P	2020-06-19 18:37:38.975516532 +0200
***************
*** 0 ****
--- 1,52 ----
+ build/py/modgc.o: ../py/modgc.c /usr/include/stdc-predef.h \
+  ../py/mpstate.h /usr/lib/gcc/x86_64-linux-gnu/7/include/stdint.h \
+  /usr/include/stdint.h \
+  /usr/include/x86_64-linux-gnu/bits/libc-header-start.h \
+  /usr/include/features.h /usr/include/x86_64-linux-gnu/sys/cdefs.h \
+  /usr/include/x86_64-linux-gnu/bits/wordsize.h \
+  /usr/include/x86_64-linux-gnu/bits/long-double.h \
+  /usr/include/x86_64-linux-gnu/gnu/stubs.h \
+  /usr/include/x86_64-linux-gnu/gnu/stubs-64.h \
+  /usr/include/x86_64-linux-gnu/bits/types.h \
+  /usr/include/x86_64-linux-gnu/bits/typesizes.h \
+  /usr/include/x86_64-linux-gnu/bits/wchar.h \
+  /usr/include/x86_64-linux-gnu/bits/stdint-intn.h \
+  /usr/include/x86_64-linux-gnu/bits/stdint-uintn.h ../py/mpconfig.h \
+  mpconfigport.h /usr/include/alloca.h \
+  /usr/lib/gcc/x86_64-linux-gnu/7/include/stddef.h ../py/mpthread.h \
+  ../py/misc.h /usr/lib/gcc/x86_64-linux-gnu/7/include/stdbool.h \
+  ../py/nlr.h /usr/lib/gcc/x86_64-linux-gnu/7/include-fixed/limits.h \
+  /usr/lib/gcc/x86_64-linux-gnu/7/include-fixed/syslimits.h \
+  /usr/include/limits.h /usr/include/x86_64-linux-gnu/bits/posix1_lim.h \
+  /usr/include/x86_64-linux-gnu/bits/local_lim.h \
+  /usr/include/linux/limits.h \
+  /usr/include/x86_64-linux-gnu/bits/posix2_lim.h /usr/include/assert.h \
+  ../py/obj.h ../py/qstr.h build/genhdr/qstrdefs.generated.h \
+  ../py/mpprint.h ../py/runtime0.h ../py/objlist.h ../py/objexcept.h \
+  ../py/objtuple.h ../py/gc.h
+ ../py/modgc.c /usr/include/stdc-predef.h :
+  ../py/mpstate.h /usr/lib/gcc/x86_64-linux-gnu/7/include/stdint.h :
+  /usr/include/stdint.h :
+  /usr/include/x86_64-linux-gnu/bits/libc-header-start.h :
+  /usr/include/features.h /usr/include/x86_64-linux-gnu/sys/cdefs.h :
+  /usr/include/x86_64-linux-gnu/bits/wordsize.h :
+  /usr/include/x86_64-linux-gnu/bits/long-double.h :
+  /usr/include/x86_64-linux-gnu/gnu/stubs.h :
+  /usr/include/x86_64-linux-gnu/gnu/stubs-64.h :
+  /usr/include/x86_64-linux-gnu/bits/types.h :
+  /usr/include/x86_64-linux-gnu/bits/typesizes.h :
+  /usr/include/x86_64-linux-gnu/bits/wchar.h :
+  /usr/include/x86_64-linux-gnu/bits/stdint-intn.h :
+  /usr/include/x86_64-linux-gnu/bits/stdint-uintn.h ../py/mpconfig.h :
+  mpconfigport.h /usr/include/alloca.h :
+  /usr/lib/gcc/x86_64-linux-gnu/7/include/stddef.h ../py/mpthread.h :
+  ../py/misc.h /usr/lib/gcc/x86_64-linux-gnu/7/include/stdbool.h :
+  ../py/nlr.h /usr/lib/gcc/x86_64-linux-gnu/7/include-fixed/limits.h :
+  /usr/lib/gcc/x86_64-linux-gnu/7/include-fixed/syslimits.h :
+  /usr/include/limits.h /usr/include/x86_64-linux-gnu/bits/posix1_lim.h :
+  /usr/include/x86_64-linux-gnu/bits/local_lim.h :
+  /usr/include/linux/limits.h :
+  /usr/include/x86_64-linux-gnu/bits/posix2_lim.h /usr/include/assert.h :
+  ../py/obj.h ../py/qstr.h build/genhdr/qstrdefs.generated.h :
+  ../py/mpprint.h ../py/runtime0.h ../py/objlist.h ../py/objexcept.h :
+  ../py/objtuple.h ../py/gc.h :
Binary files MicorpythonOriginal1.12/micropython/mpy-cross/build/py/modio.o and micropython1.12_withUlab/micropython/mpy-cross/build/py/modio.o differ
diff -crNb MicorpythonOriginal1.12/micropython/mpy-cross/build/py/modio.P micropython1.12_withUlab/micropython/mpy-cross/build/py/modio.P
*** MicorpythonOriginal1.12/micropython/mpy-cross/build/py/modio.P	1970-01-01 02:00:00.000000000 +0200
--- micropython1.12_withUlab/micropython/mpy-cross/build/py/modio.P	2020-06-19 19:54:02.657488531 +0200
***************
*** 0 ****
--- 1,72 ----
+ build/py/modio.o: ../py/modio.c /usr/include/stdc-predef.h \
+  /usr/include/assert.h /usr/include/features.h \
+  /usr/include/x86_64-linux-gnu/sys/cdefs.h \
+  /usr/include/x86_64-linux-gnu/bits/wordsize.h \
+  /usr/include/x86_64-linux-gnu/bits/long-double.h \
+  /usr/include/x86_64-linux-gnu/gnu/stubs.h \
+  /usr/include/x86_64-linux-gnu/gnu/stubs-64.h /usr/include/string.h \
+  /usr/include/x86_64-linux-gnu/bits/libc-header-start.h \
+  /usr/lib/gcc/x86_64-linux-gnu/7/include/stddef.h \
+  /usr/include/x86_64-linux-gnu/bits/types/locale_t.h \
+  /usr/include/x86_64-linux-gnu/bits/types/__locale_t.h \
+  /usr/include/strings.h \
+  /usr/include/x86_64-linux-gnu/bits/strings_fortified.h \
+  /usr/include/x86_64-linux-gnu/bits/string_fortified.h ../py/runtime.h \
+  ../py/mpstate.h /usr/lib/gcc/x86_64-linux-gnu/7/include/stdint.h \
+  /usr/include/stdint.h /usr/include/x86_64-linux-gnu/bits/types.h \
+  /usr/include/x86_64-linux-gnu/bits/typesizes.h \
+  /usr/include/x86_64-linux-gnu/bits/wchar.h \
+  /usr/include/x86_64-linux-gnu/bits/stdint-intn.h \
+  /usr/include/x86_64-linux-gnu/bits/stdint-uintn.h ../py/mpconfig.h \
+  mpconfigport.h /usr/include/alloca.h ../py/mpthread.h ../py/misc.h \
+  /usr/lib/gcc/x86_64-linux-gnu/7/include/stdbool.h ../py/nlr.h \
+  /usr/lib/gcc/x86_64-linux-gnu/7/include-fixed/limits.h \
+  /usr/lib/gcc/x86_64-linux-gnu/7/include-fixed/syslimits.h \
+  /usr/include/limits.h /usr/include/x86_64-linux-gnu/bits/posix1_lim.h \
+  /usr/include/x86_64-linux-gnu/bits/local_lim.h \
+  /usr/include/linux/limits.h \
+  /usr/include/x86_64-linux-gnu/bits/posix2_lim.h ../py/obj.h ../py/qstr.h \
+  build/genhdr/qstrdefs.generated.h ../py/mpprint.h ../py/runtime0.h \
+  ../py/objlist.h ../py/objexcept.h ../py/objtuple.h ../py/pystack.h \
+  ../py/builtin.h ../py/stream.h ../py/mperrno.h /usr/include/errno.h \
+  /usr/include/x86_64-linux-gnu/bits/errno.h /usr/include/linux/errno.h \
+  /usr/include/x86_64-linux-gnu/asm/errno.h \
+  /usr/include/asm-generic/errno.h /usr/include/asm-generic/errno-base.h \
+  ../py/binary.h ../py/objarray.h ../py/objstringio.h ../py/frozenmod.h \
+  ../py/lexer.h ../py/reader.h
+ ../py/modio.c /usr/include/stdc-predef.h :
+  /usr/include/assert.h /usr/include/features.h :
+  /usr/include/x86_64-linux-gnu/sys/cdefs.h :
+  /usr/include/x86_64-linux-gnu/bits/wordsize.h :
+  /usr/include/x86_64-linux-gnu/bits/long-double.h :
+  /usr/include/x86_64-linux-gnu/gnu/stubs.h :
+  /usr/include/x86_64-linux-gnu/gnu/stubs-64.h /usr/include/string.h :
+  /usr/include/x86_64-linux-gnu/bits/libc-header-start.h :
+  /usr/lib/gcc/x86_64-linux-gnu/7/include/stddef.h :
+  /usr/include/x86_64-linux-gnu/bits/types/locale_t.h :
+  /usr/include/x86_64-linux-gnu/bits/types/__locale_t.h :
+  /usr/include/strings.h :
+  /usr/include/x86_64-linux-gnu/bits/strings_fortified.h :
+  /usr/include/x86_64-linux-gnu/bits/string_fortified.h ../py/runtime.h :
+  ../py/mpstate.h /usr/lib/gcc/x86_64-linux-gnu/7/include/stdint.h :
+  /usr/include/stdint.h /usr/include/x86_64-linux-gnu/bits/types.h :
+  /usr/include/x86_64-linux-gnu/bits/typesizes.h :
+  /usr/include/x86_64-linux-gnu/bits/wchar.h :
+  /usr/include/x86_64-linux-gnu/bits/stdint-intn.h :
+  /usr/include/x86_64-linux-gnu/bits/stdint-uintn.h ../py/mpconfig.h :
+  mpconfigport.h /usr/include/alloca.h ../py/mpthread.h ../py/misc.h :
+  /usr/lib/gcc/x86_64-linux-gnu/7/include/stdbool.h ../py/nlr.h :
+  /usr/lib/gcc/x86_64-linux-gnu/7/include-fixed/limits.h :
+  /usr/lib/gcc/x86_64-linux-gnu/7/include-fixed/syslimits.h :
+  /usr/include/limits.h /usr/include/x86_64-linux-gnu/bits/posix1_lim.h :
+  /usr/include/x86_64-linux-gnu/bits/local_lim.h :
+  /usr/include/linux/limits.h :
+  /usr/include/x86_64-linux-gnu/bits/posix2_lim.h ../py/obj.h ../py/qstr.h :
+  build/genhdr/qstrdefs.generated.h ../py/mpprint.h ../py/runtime0.h :
+  ../py/objlist.h ../py/objexcept.h ../py/objtuple.h ../py/pystack.h :
+  ../py/builtin.h ../py/stream.h ../py/mperrno.h /usr/include/errno.h :
+  /usr/include/x86_64-linux-gnu/bits/errno.h /usr/include/linux/errno.h :
+  /usr/include/x86_64-linux-gnu/asm/errno.h :
+  /usr/include/asm-generic/errno.h /usr/include/asm-generic/errno-base.h :
+  ../py/binary.h ../py/objarray.h ../py/objstringio.h ../py/frozenmod.h :
+  ../py/lexer.h ../py/reader.h :
Binary files MicorpythonOriginal1.12/micropython/mpy-cross/build/py/modmath.o and micropython1.12_withUlab/micropython/mpy-cross/build/py/modmath.o differ
diff -crNb MicorpythonOriginal1.12/micropython/mpy-cross/build/py/modmath.P micropython1.12_withUlab/micropython/mpy-cross/build/py/modmath.P
*** MicorpythonOriginal1.12/micropython/mpy-cross/build/py/modmath.P	1970-01-01 02:00:00.000000000 +0200
--- micropython1.12_withUlab/micropython/mpy-cross/build/py/modmath.P	2020-06-19 19:54:02.673488434 +0200
***************
*** 0 ****
--- 1,52 ----
+ build/py/modmath.o: ../py/modmath.c /usr/include/stdc-predef.h \
+  ../py/builtin.h ../py/obj.h ../py/mpconfig.h mpconfigport.h \
+  /usr/include/alloca.h /usr/include/features.h \
+  /usr/include/x86_64-linux-gnu/sys/cdefs.h \
+  /usr/include/x86_64-linux-gnu/bits/wordsize.h \
+  /usr/include/x86_64-linux-gnu/bits/long-double.h \
+  /usr/include/x86_64-linux-gnu/gnu/stubs.h \
+  /usr/include/x86_64-linux-gnu/gnu/stubs-64.h \
+  /usr/lib/gcc/x86_64-linux-gnu/7/include/stddef.h \
+  /usr/lib/gcc/x86_64-linux-gnu/7/include/stdint.h /usr/include/stdint.h \
+  /usr/include/x86_64-linux-gnu/bits/libc-header-start.h \
+  /usr/include/x86_64-linux-gnu/bits/types.h \
+  /usr/include/x86_64-linux-gnu/bits/typesizes.h \
+  /usr/include/x86_64-linux-gnu/bits/wchar.h \
+  /usr/include/x86_64-linux-gnu/bits/stdint-intn.h \
+  /usr/include/x86_64-linux-gnu/bits/stdint-uintn.h ../py/misc.h \
+  /usr/lib/gcc/x86_64-linux-gnu/7/include/stdbool.h ../py/qstr.h \
+  build/genhdr/qstrdefs.generated.h ../py/mpprint.h ../py/runtime0.h \
+  ../py/runtime.h ../py/mpstate.h ../py/mpthread.h ../py/nlr.h \
+  /usr/lib/gcc/x86_64-linux-gnu/7/include-fixed/limits.h \
+  /usr/lib/gcc/x86_64-linux-gnu/7/include-fixed/syslimits.h \
+  /usr/include/limits.h /usr/include/x86_64-linux-gnu/bits/posix1_lim.h \
+  /usr/include/x86_64-linux-gnu/bits/local_lim.h \
+  /usr/include/linux/limits.h \
+  /usr/include/x86_64-linux-gnu/bits/posix2_lim.h /usr/include/assert.h \
+  ../py/objlist.h ../py/objexcept.h ../py/objtuple.h ../py/pystack.h
+ ../py/modmath.c /usr/include/stdc-predef.h :
+  ../py/builtin.h ../py/obj.h ../py/mpconfig.h mpconfigport.h :
+  /usr/include/alloca.h /usr/include/features.h :
+  /usr/include/x86_64-linux-gnu/sys/cdefs.h :
+  /usr/include/x86_64-linux-gnu/bits/wordsize.h :
+  /usr/include/x86_64-linux-gnu/bits/long-double.h :
+  /usr/include/x86_64-linux-gnu/gnu/stubs.h :
+  /usr/include/x86_64-linux-gnu/gnu/stubs-64.h :
+  /usr/lib/gcc/x86_64-linux-gnu/7/include/stddef.h :
+  /usr/lib/gcc/x86_64-linux-gnu/7/include/stdint.h /usr/include/stdint.h :
+  /usr/include/x86_64-linux-gnu/bits/libc-header-start.h :
+  /usr/include/x86_64-linux-gnu/bits/types.h :
+  /usr/include/x86_64-linux-gnu/bits/typesizes.h :
+  /usr/include/x86_64-linux-gnu/bits/wchar.h :
+  /usr/include/x86_64-linux-gnu/bits/stdint-intn.h :
+  /usr/include/x86_64-linux-gnu/bits/stdint-uintn.h ../py/misc.h :
+  /usr/lib/gcc/x86_64-linux-gnu/7/include/stdbool.h ../py/qstr.h :
+  build/genhdr/qstrdefs.generated.h ../py/mpprint.h ../py/runtime0.h :
+  ../py/runtime.h ../py/mpstate.h ../py/mpthread.h ../py/nlr.h :
+  /usr/lib/gcc/x86_64-linux-gnu/7/include-fixed/limits.h :
+  /usr/lib/gcc/x86_64-linux-gnu/7/include-fixed/syslimits.h :
+  /usr/include/limits.h /usr/include/x86_64-linux-gnu/bits/posix1_lim.h :
+  /usr/include/x86_64-linux-gnu/bits/local_lim.h :
+  /usr/include/linux/limits.h :
+  /usr/include/x86_64-linux-gnu/bits/posix2_lim.h /usr/include/assert.h :
+  ../py/objlist.h ../py/objexcept.h ../py/objtuple.h ../py/pystack.h :
Binary files MicorpythonOriginal1.12/micropython/mpy-cross/build/py/modmicropython.o and micropython1.12_withUlab/micropython/mpy-cross/build/py/modmicropython.o differ
diff -crNb MicorpythonOriginal1.12/micropython/mpy-cross/build/py/modmicropython.P micropython1.12_withUlab/micropython/mpy-cross/build/py/modmicropython.P
*** MicorpythonOriginal1.12/micropython/mpy-cross/build/py/modmicropython.P	1970-01-01 02:00:00.000000000 +0200
--- micropython1.12_withUlab/micropython/mpy-cross/build/py/modmicropython.P	2020-06-19 19:54:02.721488141 +0200
***************
*** 0 ****
--- 1,72 ----
+ build/py/modmicropython.o: ../py/modmicropython.c \
+  /usr/include/stdc-predef.h /usr/include/stdio.h \
+  /usr/include/x86_64-linux-gnu/bits/libc-header-start.h \
+  /usr/include/features.h /usr/include/x86_64-linux-gnu/sys/cdefs.h \
+  /usr/include/x86_64-linux-gnu/bits/wordsize.h \
+  /usr/include/x86_64-linux-gnu/bits/long-double.h \
+  /usr/include/x86_64-linux-gnu/gnu/stubs.h \
+  /usr/include/x86_64-linux-gnu/gnu/stubs-64.h \
+  /usr/lib/gcc/x86_64-linux-gnu/7/include/stddef.h \
+  /usr/include/x86_64-linux-gnu/bits/types.h \
+  /usr/include/x86_64-linux-gnu/bits/typesizes.h \
+  /usr/include/x86_64-linux-gnu/bits/types/__FILE.h \
+  /usr/include/x86_64-linux-gnu/bits/types/FILE.h \
+  /usr/include/x86_64-linux-gnu/bits/libio.h \
+  /usr/include/x86_64-linux-gnu/bits/_G_config.h \
+  /usr/include/x86_64-linux-gnu/bits/types/__mbstate_t.h \
+  /usr/lib/gcc/x86_64-linux-gnu/7/include/stdarg.h \
+  /usr/include/x86_64-linux-gnu/bits/stdio_lim.h \
+  /usr/include/x86_64-linux-gnu/bits/sys_errlist.h \
+  /usr/include/x86_64-linux-gnu/bits/stdio2.h ../py/builtin.h ../py/obj.h \
+  ../py/mpconfig.h mpconfigport.h /usr/include/alloca.h \
+  /usr/lib/gcc/x86_64-linux-gnu/7/include/stdint.h /usr/include/stdint.h \
+  /usr/include/x86_64-linux-gnu/bits/wchar.h \
+  /usr/include/x86_64-linux-gnu/bits/stdint-intn.h \
+  /usr/include/x86_64-linux-gnu/bits/stdint-uintn.h ../py/misc.h \
+  /usr/lib/gcc/x86_64-linux-gnu/7/include/stdbool.h ../py/qstr.h \
+  build/genhdr/qstrdefs.generated.h ../py/mpprint.h ../py/runtime0.h \
+  ../py/stackctrl.h ../py/runtime.h ../py/mpstate.h ../py/mpthread.h \
+  ../py/nlr.h /usr/lib/gcc/x86_64-linux-gnu/7/include-fixed/limits.h \
+  /usr/lib/gcc/x86_64-linux-gnu/7/include-fixed/syslimits.h \
+  /usr/include/limits.h /usr/include/x86_64-linux-gnu/bits/posix1_lim.h \
+  /usr/include/x86_64-linux-gnu/bits/local_lim.h \
+  /usr/include/linux/limits.h \
+  /usr/include/x86_64-linux-gnu/bits/posix2_lim.h /usr/include/assert.h \
+  ../py/objlist.h ../py/objexcept.h ../py/objtuple.h ../py/pystack.h \
+  ../py/gc.h ../py/mphal.h mphalport.h
+ ../py/modmicropython.c :
+  /usr/include/stdc-predef.h /usr/include/stdio.h :
+  /usr/include/x86_64-linux-gnu/bits/libc-header-start.h :
+  /usr/include/features.h /usr/include/x86_64-linux-gnu/sys/cdefs.h :
+  /usr/include/x86_64-linux-gnu/bits/wordsize.h :
+  /usr/include/x86_64-linux-gnu/bits/long-double.h :
+  /usr/include/x86_64-linux-gnu/gnu/stubs.h :
+  /usr/include/x86_64-linux-gnu/gnu/stubs-64.h :
+  /usr/lib/gcc/x86_64-linux-gnu/7/include/stddef.h :
+  /usr/include/x86_64-linux-gnu/bits/types.h :
+  /usr/include/x86_64-linux-gnu/bits/typesizes.h :
+  /usr/include/x86_64-linux-gnu/bits/types/__FILE.h :
+  /usr/include/x86_64-linux-gnu/bits/types/FILE.h :
+  /usr/include/x86_64-linux-gnu/bits/libio.h :
+  /usr/include/x86_64-linux-gnu/bits/_G_config.h :
+  /usr/include/x86_64-linux-gnu/bits/types/__mbstate_t.h :
+  /usr/lib/gcc/x86_64-linux-gnu/7/include/stdarg.h :
+  /usr/include/x86_64-linux-gnu/bits/stdio_lim.h :
+  /usr/include/x86_64-linux-gnu/bits/sys_errlist.h :
+  /usr/include/x86_64-linux-gnu/bits/stdio2.h ../py/builtin.h ../py/obj.h :
+  ../py/mpconfig.h mpconfigport.h /usr/include/alloca.h :
+  /usr/lib/gcc/x86_64-linux-gnu/7/include/stdint.h /usr/include/stdint.h :
+  /usr/include/x86_64-linux-gnu/bits/wchar.h :
+  /usr/include/x86_64-linux-gnu/bits/stdint-intn.h :
+  /usr/include/x86_64-linux-gnu/bits/stdint-uintn.h ../py/misc.h :
+  /usr/lib/gcc/x86_64-linux-gnu/7/include/stdbool.h ../py/qstr.h :
+  build/genhdr/qstrdefs.generated.h ../py/mpprint.h ../py/runtime0.h :
+  ../py/stackctrl.h ../py/runtime.h ../py/mpstate.h ../py/mpthread.h :
+  ../py/nlr.h /usr/lib/gcc/x86_64-linux-gnu/7/include-fixed/limits.h :
+  /usr/lib/gcc/x86_64-linux-gnu/7/include-fixed/syslimits.h :
+  /usr/include/limits.h /usr/include/x86_64-linux-gnu/bits/posix1_lim.h :
+  /usr/include/x86_64-linux-gnu/bits/local_lim.h :
+  /usr/include/linux/limits.h :
+  /usr/include/x86_64-linux-gnu/bits/posix2_lim.h /usr/include/assert.h :
+  ../py/objlist.h ../py/objexcept.h ../py/objtuple.h ../py/pystack.h :
+  ../py/gc.h ../py/mphal.h mphalport.h :
Binary files MicorpythonOriginal1.12/micropython/mpy-cross/build/py/modstruct.o and micropython1.12_withUlab/micropython/mpy-cross/build/py/modstruct.o differ
diff -crNb MicorpythonOriginal1.12/micropython/mpy-cross/build/py/modstruct.P micropython1.12_withUlab/micropython/mpy-cross/build/py/modstruct.P
*** MicorpythonOriginal1.12/micropython/mpy-cross/build/py/modstruct.P	1970-01-01 02:00:00.000000000 +0200
--- micropython1.12_withUlab/micropython/mpy-cross/build/py/modstruct.P	2020-06-19 19:54:02.773487824 +0200
***************
*** 0 ****
--- 1,64 ----
+ build/py/modstruct.o: ../py/modstruct.c /usr/include/stdc-predef.h \
+  /usr/include/assert.h /usr/include/features.h \
+  /usr/include/x86_64-linux-gnu/sys/cdefs.h \
+  /usr/include/x86_64-linux-gnu/bits/wordsize.h \
+  /usr/include/x86_64-linux-gnu/bits/long-double.h \
+  /usr/include/x86_64-linux-gnu/gnu/stubs.h \
+  /usr/include/x86_64-linux-gnu/gnu/stubs-64.h /usr/include/string.h \
+  /usr/include/x86_64-linux-gnu/bits/libc-header-start.h \
+  /usr/lib/gcc/x86_64-linux-gnu/7/include/stddef.h \
+  /usr/include/x86_64-linux-gnu/bits/types/locale_t.h \
+  /usr/include/x86_64-linux-gnu/bits/types/__locale_t.h \
+  /usr/include/strings.h \
+  /usr/include/x86_64-linux-gnu/bits/strings_fortified.h \
+  /usr/include/x86_64-linux-gnu/bits/string_fortified.h ../py/runtime.h \
+  ../py/mpstate.h /usr/lib/gcc/x86_64-linux-gnu/7/include/stdint.h \
+  /usr/include/stdint.h /usr/include/x86_64-linux-gnu/bits/types.h \
+  /usr/include/x86_64-linux-gnu/bits/typesizes.h \
+  /usr/include/x86_64-linux-gnu/bits/wchar.h \
+  /usr/include/x86_64-linux-gnu/bits/stdint-intn.h \
+  /usr/include/x86_64-linux-gnu/bits/stdint-uintn.h ../py/mpconfig.h \
+  mpconfigport.h /usr/include/alloca.h ../py/mpthread.h ../py/misc.h \
+  /usr/lib/gcc/x86_64-linux-gnu/7/include/stdbool.h ../py/nlr.h \
+  /usr/lib/gcc/x86_64-linux-gnu/7/include-fixed/limits.h \
+  /usr/lib/gcc/x86_64-linux-gnu/7/include-fixed/syslimits.h \
+  /usr/include/limits.h /usr/include/x86_64-linux-gnu/bits/posix1_lim.h \
+  /usr/include/x86_64-linux-gnu/bits/local_lim.h \
+  /usr/include/linux/limits.h \
+  /usr/include/x86_64-linux-gnu/bits/posix2_lim.h ../py/obj.h ../py/qstr.h \
+  build/genhdr/qstrdefs.generated.h ../py/mpprint.h ../py/runtime0.h \
+  ../py/objlist.h ../py/objexcept.h ../py/objtuple.h ../py/pystack.h \
+  ../py/builtin.h ../py/binary.h ../py/parsenum.h ../py/lexer.h \
+  ../py/reader.h
+ ../py/modstruct.c /usr/include/stdc-predef.h :
+  /usr/include/assert.h /usr/include/features.h :
+  /usr/include/x86_64-linux-gnu/sys/cdefs.h :
+  /usr/include/x86_64-linux-gnu/bits/wordsize.h :
+  /usr/include/x86_64-linux-gnu/bits/long-double.h :
+  /usr/include/x86_64-linux-gnu/gnu/stubs.h :
+  /usr/include/x86_64-linux-gnu/gnu/stubs-64.h /usr/include/string.h :
+  /usr/include/x86_64-linux-gnu/bits/libc-header-start.h :
+  /usr/lib/gcc/x86_64-linux-gnu/7/include/stddef.h :
+  /usr/include/x86_64-linux-gnu/bits/types/locale_t.h :
+  /usr/include/x86_64-linux-gnu/bits/types/__locale_t.h :
+  /usr/include/strings.h :
+  /usr/include/x86_64-linux-gnu/bits/strings_fortified.h :
+  /usr/include/x86_64-linux-gnu/bits/string_fortified.h ../py/runtime.h :
+  ../py/mpstate.h /usr/lib/gcc/x86_64-linux-gnu/7/include/stdint.h :
+  /usr/include/stdint.h /usr/include/x86_64-linux-gnu/bits/types.h :
+  /usr/include/x86_64-linux-gnu/bits/typesizes.h :
+  /usr/include/x86_64-linux-gnu/bits/wchar.h :
+  /usr/include/x86_64-linux-gnu/bits/stdint-intn.h :
+  /usr/include/x86_64-linux-gnu/bits/stdint-uintn.h ../py/mpconfig.h :
+  mpconfigport.h /usr/include/alloca.h ../py/mpthread.h ../py/misc.h :
+  /usr/lib/gcc/x86_64-linux-gnu/7/include/stdbool.h ../py/nlr.h :
+  /usr/lib/gcc/x86_64-linux-gnu/7/include-fixed/limits.h :
+  /usr/lib/gcc/x86_64-linux-gnu/7/include-fixed/syslimits.h :
+  /usr/include/limits.h /usr/include/x86_64-linux-gnu/bits/posix1_lim.h :
+  /usr/include/x86_64-linux-gnu/bits/local_lim.h :
+  /usr/include/linux/limits.h :
+  /usr/include/x86_64-linux-gnu/bits/posix2_lim.h ../py/obj.h ../py/qstr.h :
+  build/genhdr/qstrdefs.generated.h ../py/mpprint.h ../py/runtime0.h :
+  ../py/objlist.h ../py/objexcept.h ../py/objtuple.h ../py/pystack.h :
+  ../py/builtin.h ../py/binary.h ../py/parsenum.h ../py/lexer.h :
+  ../py/reader.h :
Binary files MicorpythonOriginal1.12/micropython/mpy-cross/build/py/modsys.o and micropython1.12_withUlab/micropython/mpy-cross/build/py/modsys.o differ
diff -crNb MicorpythonOriginal1.12/micropython/mpy-cross/build/py/modsys.P micropython1.12_withUlab/micropython/mpy-cross/build/py/modsys.P
*** MicorpythonOriginal1.12/micropython/mpy-cross/build/py/modsys.P	1970-01-01 02:00:00.000000000 +0200
--- micropython1.12_withUlab/micropython/mpy-cross/build/py/modsys.P	2020-06-19 19:54:02.793487702 +0200
***************
*** 0 ****
--- 1,64 ----
+ build/py/modsys.o: ../py/modsys.c /usr/include/stdc-predef.h \
+  ../py/builtin.h ../py/obj.h ../py/mpconfig.h mpconfigport.h \
+  /usr/include/alloca.h /usr/include/features.h \
+  /usr/include/x86_64-linux-gnu/sys/cdefs.h \
+  /usr/include/x86_64-linux-gnu/bits/wordsize.h \
+  /usr/include/x86_64-linux-gnu/bits/long-double.h \
+  /usr/include/x86_64-linux-gnu/gnu/stubs.h \
+  /usr/include/x86_64-linux-gnu/gnu/stubs-64.h \
+  /usr/lib/gcc/x86_64-linux-gnu/7/include/stddef.h \
+  /usr/lib/gcc/x86_64-linux-gnu/7/include/stdint.h /usr/include/stdint.h \
+  /usr/include/x86_64-linux-gnu/bits/libc-header-start.h \
+  /usr/include/x86_64-linux-gnu/bits/types.h \
+  /usr/include/x86_64-linux-gnu/bits/typesizes.h \
+  /usr/include/x86_64-linux-gnu/bits/wchar.h \
+  /usr/include/x86_64-linux-gnu/bits/stdint-intn.h \
+  /usr/include/x86_64-linux-gnu/bits/stdint-uintn.h ../py/misc.h \
+  /usr/lib/gcc/x86_64-linux-gnu/7/include/stdbool.h ../py/qstr.h \
+  build/genhdr/qstrdefs.generated.h ../py/mpprint.h ../py/runtime0.h \
+  ../py/objlist.h ../py/objtuple.h ../py/objstr.h ../py/objint.h \
+  ../py/mpz.h ../py/objtype.h ../py/stream.h ../py/mperrno.h \
+  /usr/include/errno.h /usr/include/x86_64-linux-gnu/bits/errno.h \
+  /usr/include/linux/errno.h /usr/include/x86_64-linux-gnu/asm/errno.h \
+  /usr/include/asm-generic/errno.h /usr/include/asm-generic/errno-base.h \
+  ../py/smallint.h ../py/runtime.h ../py/mpstate.h ../py/mpthread.h \
+  ../py/nlr.h /usr/lib/gcc/x86_64-linux-gnu/7/include-fixed/limits.h \
+  /usr/lib/gcc/x86_64-linux-gnu/7/include-fixed/syslimits.h \
+  /usr/include/limits.h /usr/include/x86_64-linux-gnu/bits/posix1_lim.h \
+  /usr/include/x86_64-linux-gnu/bits/local_lim.h \
+  /usr/include/linux/limits.h \
+  /usr/include/x86_64-linux-gnu/bits/posix2_lim.h /usr/include/assert.h \
+  ../py/objexcept.h ../py/pystack.h ../py/persistentcode.h ../py/reader.h \
+  ../py/emitglue.h ../py/bc.h ../py/objfun.h
+ ../py/modsys.c /usr/include/stdc-predef.h :
+  ../py/builtin.h ../py/obj.h ../py/mpconfig.h mpconfigport.h :
+  /usr/include/alloca.h /usr/include/features.h :
+  /usr/include/x86_64-linux-gnu/sys/cdefs.h :
+  /usr/include/x86_64-linux-gnu/bits/wordsize.h :
+  /usr/include/x86_64-linux-gnu/bits/long-double.h :
+  /usr/include/x86_64-linux-gnu/gnu/stubs.h :
+  /usr/include/x86_64-linux-gnu/gnu/stubs-64.h :
+  /usr/lib/gcc/x86_64-linux-gnu/7/include/stddef.h :
+  /usr/lib/gcc/x86_64-linux-gnu/7/include/stdint.h /usr/include/stdint.h :
+  /usr/include/x86_64-linux-gnu/bits/libc-header-start.h :
+  /usr/include/x86_64-linux-gnu/bits/types.h :
+  /usr/include/x86_64-linux-gnu/bits/typesizes.h :
+  /usr/include/x86_64-linux-gnu/bits/wchar.h :
+  /usr/include/x86_64-linux-gnu/bits/stdint-intn.h :
+  /usr/include/x86_64-linux-gnu/bits/stdint-uintn.h ../py/misc.h :
+  /usr/lib/gcc/x86_64-linux-gnu/7/include/stdbool.h ../py/qstr.h :
+  build/genhdr/qstrdefs.generated.h ../py/mpprint.h ../py/runtime0.h :
+  ../py/objlist.h ../py/objtuple.h ../py/objstr.h ../py/objint.h :
+  ../py/mpz.h ../py/objtype.h ../py/stream.h ../py/mperrno.h :
+  /usr/include/errno.h /usr/include/x86_64-linux-gnu/bits/errno.h :
+  /usr/include/linux/errno.h /usr/include/x86_64-linux-gnu/asm/errno.h :
+  /usr/include/asm-generic/errno.h /usr/include/asm-generic/errno-base.h :
+  ../py/smallint.h ../py/runtime.h ../py/mpstate.h ../py/mpthread.h :
+  ../py/nlr.h /usr/lib/gcc/x86_64-linux-gnu/7/include-fixed/limits.h :
+  /usr/lib/gcc/x86_64-linux-gnu/7/include-fixed/syslimits.h :
+  /usr/include/limits.h /usr/include/x86_64-linux-gnu/bits/posix1_lim.h :
+  /usr/include/x86_64-linux-gnu/bits/local_lim.h :
+  /usr/include/linux/limits.h :
+  /usr/include/x86_64-linux-gnu/bits/posix2_lim.h /usr/include/assert.h :
+  ../py/objexcept.h ../py/pystack.h ../py/persistentcode.h ../py/reader.h :
+  ../py/emitglue.h ../py/bc.h ../py/objfun.h :
Binary files MicorpythonOriginal1.12/micropython/mpy-cross/build/py/modthread.o and micropython1.12_withUlab/micropython/mpy-cross/build/py/modthread.o differ
diff -crNb MicorpythonOriginal1.12/micropython/mpy-cross/build/py/modthread.P micropython1.12_withUlab/micropython/mpy-cross/build/py/modthread.P
*** MicorpythonOriginal1.12/micropython/mpy-cross/build/py/modthread.P	1970-01-01 02:00:00.000000000 +0200
--- micropython1.12_withUlab/micropython/mpy-cross/build/py/modthread.P	2020-06-19 18:37:39.179512194 +0200
***************
*** 0 ****
--- 1,80 ----
+ build/py/modthread.o: ../py/modthread.c /usr/include/stdc-predef.h \
+  /usr/include/stdio.h \
+  /usr/include/x86_64-linux-gnu/bits/libc-header-start.h \
+  /usr/include/features.h /usr/include/x86_64-linux-gnu/sys/cdefs.h \
+  /usr/include/x86_64-linux-gnu/bits/wordsize.h \
+  /usr/include/x86_64-linux-gnu/bits/long-double.h \
+  /usr/include/x86_64-linux-gnu/gnu/stubs.h \
+  /usr/include/x86_64-linux-gnu/gnu/stubs-64.h \
+  /usr/lib/gcc/x86_64-linux-gnu/7/include/stddef.h \
+  /usr/include/x86_64-linux-gnu/bits/types.h \
+  /usr/include/x86_64-linux-gnu/bits/typesizes.h \
+  /usr/include/x86_64-linux-gnu/bits/types/__FILE.h \
+  /usr/include/x86_64-linux-gnu/bits/types/FILE.h \
+  /usr/include/x86_64-linux-gnu/bits/libio.h \
+  /usr/include/x86_64-linux-gnu/bits/_G_config.h \
+  /usr/include/x86_64-linux-gnu/bits/types/__mbstate_t.h \
+  /usr/lib/gcc/x86_64-linux-gnu/7/include/stdarg.h \
+  /usr/include/x86_64-linux-gnu/bits/stdio_lim.h \
+  /usr/include/x86_64-linux-gnu/bits/sys_errlist.h \
+  /usr/include/x86_64-linux-gnu/bits/stdio2.h /usr/include/string.h \
+  /usr/include/x86_64-linux-gnu/bits/types/locale_t.h \
+  /usr/include/x86_64-linux-gnu/bits/types/__locale_t.h \
+  /usr/include/strings.h \
+  /usr/include/x86_64-linux-gnu/bits/strings_fortified.h \
+  /usr/include/x86_64-linux-gnu/bits/string_fortified.h ../py/runtime.h \
+  ../py/mpstate.h /usr/lib/gcc/x86_64-linux-gnu/7/include/stdint.h \
+  /usr/include/stdint.h /usr/include/x86_64-linux-gnu/bits/wchar.h \
+  /usr/include/x86_64-linux-gnu/bits/stdint-intn.h \
+  /usr/include/x86_64-linux-gnu/bits/stdint-uintn.h ../py/mpconfig.h \
+  mpconfigport.h /usr/include/alloca.h ../py/mpthread.h ../py/misc.h \
+  /usr/lib/gcc/x86_64-linux-gnu/7/include/stdbool.h ../py/nlr.h \
+  /usr/lib/gcc/x86_64-linux-gnu/7/include-fixed/limits.h \
+  /usr/lib/gcc/x86_64-linux-gnu/7/include-fixed/syslimits.h \
+  /usr/include/limits.h /usr/include/x86_64-linux-gnu/bits/posix1_lim.h \
+  /usr/include/x86_64-linux-gnu/bits/local_lim.h \
+  /usr/include/linux/limits.h \
+  /usr/include/x86_64-linux-gnu/bits/posix2_lim.h /usr/include/assert.h \
+  ../py/obj.h ../py/qstr.h build/genhdr/qstrdefs.generated.h \
+  ../py/mpprint.h ../py/runtime0.h ../py/objlist.h ../py/objexcept.h \
+  ../py/objtuple.h ../py/pystack.h ../py/stackctrl.h
+ ../py/modthread.c /usr/include/stdc-predef.h :
+  /usr/include/stdio.h :
+  /usr/include/x86_64-linux-gnu/bits/libc-header-start.h :
+  /usr/include/features.h /usr/include/x86_64-linux-gnu/sys/cdefs.h :
+  /usr/include/x86_64-linux-gnu/bits/wordsize.h :
+  /usr/include/x86_64-linux-gnu/bits/long-double.h :
+  /usr/include/x86_64-linux-gnu/gnu/stubs.h :
+  /usr/include/x86_64-linux-gnu/gnu/stubs-64.h :
+  /usr/lib/gcc/x86_64-linux-gnu/7/include/stddef.h :
+  /usr/include/x86_64-linux-gnu/bits/types.h :
+  /usr/include/x86_64-linux-gnu/bits/typesizes.h :
+  /usr/include/x86_64-linux-gnu/bits/types/__FILE.h :
+  /usr/include/x86_64-linux-gnu/bits/types/FILE.h :
+  /usr/include/x86_64-linux-gnu/bits/libio.h :
+  /usr/include/x86_64-linux-gnu/bits/_G_config.h :
+  /usr/include/x86_64-linux-gnu/bits/types/__mbstate_t.h :
+  /usr/lib/gcc/x86_64-linux-gnu/7/include/stdarg.h :
+  /usr/include/x86_64-linux-gnu/bits/stdio_lim.h :
+  /usr/include/x86_64-linux-gnu/bits/sys_errlist.h :
+  /usr/include/x86_64-linux-gnu/bits/stdio2.h /usr/include/string.h :
+  /usr/include/x86_64-linux-gnu/bits/types/locale_t.h :
+  /usr/include/x86_64-linux-gnu/bits/types/__locale_t.h :
+  /usr/include/strings.h :
+  /usr/include/x86_64-linux-gnu/bits/strings_fortified.h :
+  /usr/include/x86_64-linux-gnu/bits/string_fortified.h ../py/runtime.h :
+  ../py/mpstate.h /usr/lib/gcc/x86_64-linux-gnu/7/include/stdint.h :
+  /usr/include/stdint.h /usr/include/x86_64-linux-gnu/bits/wchar.h :
+  /usr/include/x86_64-linux-gnu/bits/stdint-intn.h :
+  /usr/include/x86_64-linux-gnu/bits/stdint-uintn.h ../py/mpconfig.h :
+  mpconfigport.h /usr/include/alloca.h ../py/mpthread.h ../py/misc.h :
+  /usr/lib/gcc/x86_64-linux-gnu/7/include/stdbool.h ../py/nlr.h :
+  /usr/lib/gcc/x86_64-linux-gnu/7/include-fixed/limits.h :
+  /usr/lib/gcc/x86_64-linux-gnu/7/include-fixed/syslimits.h :
+  /usr/include/limits.h /usr/include/x86_64-linux-gnu/bits/posix1_lim.h :
+  /usr/include/x86_64-linux-gnu/bits/local_lim.h :
+  /usr/include/linux/limits.h :
+  /usr/include/x86_64-linux-gnu/bits/posix2_lim.h /usr/include/assert.h :
+  ../py/obj.h ../py/qstr.h build/genhdr/qstrdefs.generated.h :
+  ../py/mpprint.h ../py/runtime0.h ../py/objlist.h ../py/objexcept.h :
+  ../py/objtuple.h ../py/pystack.h ../py/stackctrl.h :
Binary files MicorpythonOriginal1.12/micropython/mpy-cross/build/py/moduerrno.o and micropython1.12_withUlab/micropython/mpy-cross/build/py/moduerrno.o differ
diff -crNb MicorpythonOriginal1.12/micropython/mpy-cross/build/py/moduerrno.P micropython1.12_withUlab/micropython/mpy-cross/build/py/moduerrno.P
*** MicorpythonOriginal1.12/micropython/mpy-cross/build/py/moduerrno.P	1970-01-01 02:00:00.000000000 +0200
--- micropython1.12_withUlab/micropython/mpy-cross/build/py/moduerrno.P	2020-06-19 18:37:39.155512703 +0200
***************
*** 0 ****
--- 1,54 ----
+ build/py/moduerrno.o: ../py/moduerrno.c /usr/include/stdc-predef.h \
+  /usr/include/assert.h /usr/include/features.h \
+  /usr/include/x86_64-linux-gnu/sys/cdefs.h \
+  /usr/include/x86_64-linux-gnu/bits/wordsize.h \
+  /usr/include/x86_64-linux-gnu/bits/long-double.h \
+  /usr/include/x86_64-linux-gnu/gnu/stubs.h \
+  /usr/include/x86_64-linux-gnu/gnu/stubs-64.h /usr/include/string.h \
+  /usr/include/x86_64-linux-gnu/bits/libc-header-start.h \
+  /usr/lib/gcc/x86_64-linux-gnu/7/include/stddef.h \
+  /usr/include/x86_64-linux-gnu/bits/types/locale_t.h \
+  /usr/include/x86_64-linux-gnu/bits/types/__locale_t.h \
+  /usr/include/strings.h \
+  /usr/include/x86_64-linux-gnu/bits/strings_fortified.h \
+  /usr/include/x86_64-linux-gnu/bits/string_fortified.h ../py/obj.h \
+  ../py/mpconfig.h mpconfigport.h /usr/include/alloca.h \
+  /usr/lib/gcc/x86_64-linux-gnu/7/include/stdint.h /usr/include/stdint.h \
+  /usr/include/x86_64-linux-gnu/bits/types.h \
+  /usr/include/x86_64-linux-gnu/bits/typesizes.h \
+  /usr/include/x86_64-linux-gnu/bits/wchar.h \
+  /usr/include/x86_64-linux-gnu/bits/stdint-intn.h \
+  /usr/include/x86_64-linux-gnu/bits/stdint-uintn.h ../py/misc.h \
+  /usr/lib/gcc/x86_64-linux-gnu/7/include/stdbool.h ../py/qstr.h \
+  build/genhdr/qstrdefs.generated.h ../py/mpprint.h ../py/runtime0.h \
+  ../py/mperrno.h /usr/include/errno.h \
+  /usr/include/x86_64-linux-gnu/bits/errno.h /usr/include/linux/errno.h \
+  /usr/include/x86_64-linux-gnu/asm/errno.h \
+  /usr/include/asm-generic/errno.h /usr/include/asm-generic/errno-base.h
+ ../py/moduerrno.c /usr/include/stdc-predef.h :
+  /usr/include/assert.h /usr/include/features.h :
+  /usr/include/x86_64-linux-gnu/sys/cdefs.h :
+  /usr/include/x86_64-linux-gnu/bits/wordsize.h :
+  /usr/include/x86_64-linux-gnu/bits/long-double.h :
+  /usr/include/x86_64-linux-gnu/gnu/stubs.h :
+  /usr/include/x86_64-linux-gnu/gnu/stubs-64.h /usr/include/string.h :
+  /usr/include/x86_64-linux-gnu/bits/libc-header-start.h :
+  /usr/lib/gcc/x86_64-linux-gnu/7/include/stddef.h :
+  /usr/include/x86_64-linux-gnu/bits/types/locale_t.h :
+  /usr/include/x86_64-linux-gnu/bits/types/__locale_t.h :
+  /usr/include/strings.h :
+  /usr/include/x86_64-linux-gnu/bits/strings_fortified.h :
+  /usr/include/x86_64-linux-gnu/bits/string_fortified.h ../py/obj.h :
+  ../py/mpconfig.h mpconfigport.h /usr/include/alloca.h :
+  /usr/lib/gcc/x86_64-linux-gnu/7/include/stdint.h /usr/include/stdint.h :
+  /usr/include/x86_64-linux-gnu/bits/types.h :
+  /usr/include/x86_64-linux-gnu/bits/typesizes.h :
+  /usr/include/x86_64-linux-gnu/bits/wchar.h :
+  /usr/include/x86_64-linux-gnu/bits/stdint-intn.h :
+  /usr/include/x86_64-linux-gnu/bits/stdint-uintn.h ../py/misc.h :
+  /usr/lib/gcc/x86_64-linux-gnu/7/include/stdbool.h ../py/qstr.h :
+  build/genhdr/qstrdefs.generated.h ../py/mpprint.h ../py/runtime0.h :
+  ../py/mperrno.h /usr/include/errno.h :
+  /usr/include/x86_64-linux-gnu/bits/errno.h /usr/include/linux/errno.h :
+  /usr/include/x86_64-linux-gnu/asm/errno.h :
+  /usr/include/asm-generic/errno.h /usr/include/asm-generic/errno-base.h :
Binary files MicorpythonOriginal1.12/micropython/mpy-cross/build/py/mpfile.o and micropython1.12_withUlab/micropython/mpy-cross/build/py/mpfile.o differ
diff -crNb MicorpythonOriginal1.12/micropython/mpy-cross/build/py/mpfile.P micropython1.12_withUlab/micropython/mpy-cross/build/py/mpfile.P
*** MicorpythonOriginal1.12/micropython/mpy-cross/build/py/mpfile.P	1970-01-01 02:00:00.000000000 +0200
--- micropython1.12_withUlab/micropython/mpy-cross/build/py/mpfile.P	2020-06-19 19:54:02.053492216 +0200
***************
*** 0 ****
--- 1,106 ----
+ build/py/mpfile.o: ../py/mpfile.c /usr/include/stdc-predef.h \
+  ../py/mpfile.h ../py/obj.h ../py/mpconfig.h mpconfigport.h \
+  /usr/include/alloca.h /usr/include/features.h \
+  /usr/include/x86_64-linux-gnu/sys/cdefs.h \
+  /usr/include/x86_64-linux-gnu/bits/wordsize.h \
+  /usr/include/x86_64-linux-gnu/bits/long-double.h \
+  /usr/include/x86_64-linux-gnu/gnu/stubs.h \
+  /usr/include/x86_64-linux-gnu/gnu/stubs-64.h \
+  /usr/lib/gcc/x86_64-linux-gnu/7/include/stddef.h \
+  /usr/lib/gcc/x86_64-linux-gnu/7/include/stdint.h /usr/include/stdint.h \
+  /usr/include/x86_64-linux-gnu/bits/libc-header-start.h \
+  /usr/include/x86_64-linux-gnu/bits/types.h \
+  /usr/include/x86_64-linux-gnu/bits/typesizes.h \
+  /usr/include/x86_64-linux-gnu/bits/wchar.h \
+  /usr/include/x86_64-linux-gnu/bits/stdint-intn.h \
+  /usr/include/x86_64-linux-gnu/bits/stdint-uintn.h ../py/misc.h \
+  /usr/lib/gcc/x86_64-linux-gnu/7/include/stdbool.h ../py/qstr.h \
+  build/genhdr/qstrdefs.generated.h ../py/mpprint.h ../py/runtime0.h \
+  /usr/include/x86_64-linux-gnu/sys/types.h \
+  /usr/include/x86_64-linux-gnu/bits/types/clock_t.h \
+  /usr/include/x86_64-linux-gnu/bits/types/clockid_t.h \
+  /usr/include/x86_64-linux-gnu/bits/types/time_t.h \
+  /usr/include/x86_64-linux-gnu/bits/types/timer_t.h /usr/include/endian.h \
+  /usr/include/x86_64-linux-gnu/bits/endian.h \
+  /usr/include/x86_64-linux-gnu/bits/byteswap.h \
+  /usr/include/x86_64-linux-gnu/bits/byteswap-16.h \
+  /usr/include/x86_64-linux-gnu/bits/uintn-identity.h \
+  /usr/include/x86_64-linux-gnu/sys/select.h \
+  /usr/include/x86_64-linux-gnu/bits/select.h \
+  /usr/include/x86_64-linux-gnu/bits/types/sigset_t.h \
+  /usr/include/x86_64-linux-gnu/bits/types/__sigset_t.h \
+  /usr/include/x86_64-linux-gnu/bits/types/struct_timeval.h \
+  /usr/include/x86_64-linux-gnu/bits/types/struct_timespec.h \
+  /usr/include/x86_64-linux-gnu/bits/select2.h \
+  /usr/include/x86_64-linux-gnu/sys/sysmacros.h \
+  /usr/include/x86_64-linux-gnu/bits/sysmacros.h \
+  /usr/include/x86_64-linux-gnu/bits/pthreadtypes.h \
+  /usr/include/x86_64-linux-gnu/bits/thread-shared-types.h \
+  /usr/include/x86_64-linux-gnu/bits/pthreadtypes-arch.h ../py/builtin.h \
+  ../py/runtime.h ../py/mpstate.h ../py/mpthread.h ../py/nlr.h \
+  /usr/lib/gcc/x86_64-linux-gnu/7/include-fixed/limits.h \
+  /usr/lib/gcc/x86_64-linux-gnu/7/include-fixed/syslimits.h \
+  /usr/include/limits.h /usr/include/x86_64-linux-gnu/bits/posix1_lim.h \
+  /usr/include/x86_64-linux-gnu/bits/local_lim.h \
+  /usr/include/linux/limits.h \
+  /usr/include/x86_64-linux-gnu/bits/posix2_lim.h /usr/include/assert.h \
+  ../py/objlist.h ../py/objexcept.h ../py/objtuple.h ../py/pystack.h \
+  /usr/include/string.h \
+  /usr/include/x86_64-linux-gnu/bits/types/locale_t.h \
+  /usr/include/x86_64-linux-gnu/bits/types/__locale_t.h \
+  /usr/include/strings.h \
+  /usr/include/x86_64-linux-gnu/bits/strings_fortified.h \
+  /usr/include/x86_64-linux-gnu/bits/string_fortified.h
+ ../py/mpfile.c /usr/include/stdc-predef.h :
+  ../py/mpfile.h ../py/obj.h ../py/mpconfig.h mpconfigport.h :
+  /usr/include/alloca.h /usr/include/features.h :
+  /usr/include/x86_64-linux-gnu/sys/cdefs.h :
+  /usr/include/x86_64-linux-gnu/bits/wordsize.h :
+  /usr/include/x86_64-linux-gnu/bits/long-double.h :
+  /usr/include/x86_64-linux-gnu/gnu/stubs.h :
+  /usr/include/x86_64-linux-gnu/gnu/stubs-64.h :
+  /usr/lib/gcc/x86_64-linux-gnu/7/include/stddef.h :
+  /usr/lib/gcc/x86_64-linux-gnu/7/include/stdint.h /usr/include/stdint.h :
+  /usr/include/x86_64-linux-gnu/bits/libc-header-start.h :
+  /usr/include/x86_64-linux-gnu/bits/types.h :
+  /usr/include/x86_64-linux-gnu/bits/typesizes.h :
+  /usr/include/x86_64-linux-gnu/bits/wchar.h :
+  /usr/include/x86_64-linux-gnu/bits/stdint-intn.h :
+  /usr/include/x86_64-linux-gnu/bits/stdint-uintn.h ../py/misc.h :
+  /usr/lib/gcc/x86_64-linux-gnu/7/include/stdbool.h ../py/qstr.h :
+  build/genhdr/qstrdefs.generated.h ../py/mpprint.h ../py/runtime0.h :
+  /usr/include/x86_64-linux-gnu/sys/types.h :
+  /usr/include/x86_64-linux-gnu/bits/types/clock_t.h :
+  /usr/include/x86_64-linux-gnu/bits/types/clockid_t.h :
+  /usr/include/x86_64-linux-gnu/bits/types/time_t.h :
+  /usr/include/x86_64-linux-gnu/bits/types/timer_t.h /usr/include/endian.h :
+  /usr/include/x86_64-linux-gnu/bits/endian.h :
+  /usr/include/x86_64-linux-gnu/bits/byteswap.h :
+  /usr/include/x86_64-linux-gnu/bits/byteswap-16.h :
+  /usr/include/x86_64-linux-gnu/bits/uintn-identity.h :
+  /usr/include/x86_64-linux-gnu/sys/select.h :
+  /usr/include/x86_64-linux-gnu/bits/select.h :
+  /usr/include/x86_64-linux-gnu/bits/types/sigset_t.h :
+  /usr/include/x86_64-linux-gnu/bits/types/__sigset_t.h :
+  /usr/include/x86_64-linux-gnu/bits/types/struct_timeval.h :
+  /usr/include/x86_64-linux-gnu/bits/types/struct_timespec.h :
+  /usr/include/x86_64-linux-gnu/bits/select2.h :
+  /usr/include/x86_64-linux-gnu/sys/sysmacros.h :
+  /usr/include/x86_64-linux-gnu/bits/sysmacros.h :
+  /usr/include/x86_64-linux-gnu/bits/pthreadtypes.h :
+  /usr/include/x86_64-linux-gnu/bits/thread-shared-types.h :
+  /usr/include/x86_64-linux-gnu/bits/pthreadtypes-arch.h ../py/builtin.h :
+  ../py/runtime.h ../py/mpstate.h ../py/mpthread.h ../py/nlr.h :
+  /usr/lib/gcc/x86_64-linux-gnu/7/include-fixed/limits.h :
+  /usr/lib/gcc/x86_64-linux-gnu/7/include-fixed/syslimits.h :
+  /usr/include/limits.h /usr/include/x86_64-linux-gnu/bits/posix1_lim.h :
+  /usr/include/x86_64-linux-gnu/bits/local_lim.h :
+  /usr/include/linux/limits.h :
+  /usr/include/x86_64-linux-gnu/bits/posix2_lim.h /usr/include/assert.h :
+  ../py/objlist.h ../py/objexcept.h ../py/objtuple.h ../py/pystack.h :
+  /usr/include/string.h :
+  /usr/include/x86_64-linux-gnu/bits/types/locale_t.h :
+  /usr/include/x86_64-linux-gnu/bits/types/__locale_t.h :
+  /usr/include/strings.h :
+  /usr/include/x86_64-linux-gnu/bits/strings_fortified.h :
+  /usr/include/x86_64-linux-gnu/bits/string_fortified.h :
Binary files MicorpythonOriginal1.12/micropython/mpy-cross/build/py/mpprint.o and micropython1.12_withUlab/micropython/mpy-cross/build/py/mpprint.o differ
diff -crNb MicorpythonOriginal1.12/micropython/mpy-cross/build/py/mpprint.P micropython1.12_withUlab/micropython/mpy-cross/build/py/mpprint.P
*** MicorpythonOriginal1.12/micropython/mpy-cross/build/py/mpprint.P	1970-01-01 02:00:00.000000000 +0200
--- micropython1.12_withUlab/micropython/mpy-cross/build/py/mpprint.P	2020-06-19 18:37:33.187640823 +0200
***************
*** 0 ****
--- 1,82 ----
+ build/py/mpprint.o: ../py/mpprint.c /usr/include/stdc-predef.h \
+  /usr/include/assert.h /usr/include/features.h \
+  /usr/include/x86_64-linux-gnu/sys/cdefs.h \
+  /usr/include/x86_64-linux-gnu/bits/wordsize.h \
+  /usr/include/x86_64-linux-gnu/bits/long-double.h \
+  /usr/include/x86_64-linux-gnu/gnu/stubs.h \
+  /usr/include/x86_64-linux-gnu/gnu/stubs-64.h \
+  /usr/lib/gcc/x86_64-linux-gnu/7/include/stdarg.h \
+  /usr/lib/gcc/x86_64-linux-gnu/7/include/stdint.h /usr/include/stdint.h \
+  /usr/include/x86_64-linux-gnu/bits/libc-header-start.h \
+  /usr/include/x86_64-linux-gnu/bits/types.h \
+  /usr/include/x86_64-linux-gnu/bits/typesizes.h \
+  /usr/include/x86_64-linux-gnu/bits/wchar.h \
+  /usr/include/x86_64-linux-gnu/bits/stdint-intn.h \
+  /usr/include/x86_64-linux-gnu/bits/stdint-uintn.h /usr/include/stdio.h \
+  /usr/lib/gcc/x86_64-linux-gnu/7/include/stddef.h \
+  /usr/include/x86_64-linux-gnu/bits/types/__FILE.h \
+  /usr/include/x86_64-linux-gnu/bits/types/FILE.h \
+  /usr/include/x86_64-linux-gnu/bits/libio.h \
+  /usr/include/x86_64-linux-gnu/bits/_G_config.h \
+  /usr/include/x86_64-linux-gnu/bits/types/__mbstate_t.h \
+  /usr/include/x86_64-linux-gnu/bits/stdio_lim.h \
+  /usr/include/x86_64-linux-gnu/bits/sys_errlist.h \
+  /usr/include/x86_64-linux-gnu/bits/stdio2.h /usr/include/string.h \
+  /usr/include/x86_64-linux-gnu/bits/types/locale_t.h \
+  /usr/include/x86_64-linux-gnu/bits/types/__locale_t.h \
+  /usr/include/strings.h \
+  /usr/include/x86_64-linux-gnu/bits/strings_fortified.h \
+  /usr/include/x86_64-linux-gnu/bits/string_fortified.h ../py/mphal.h \
+  ../py/mpconfig.h mpconfigport.h /usr/include/alloca.h mphalport.h \
+  ../py/mpprint.h ../py/obj.h ../py/misc.h \
+  /usr/lib/gcc/x86_64-linux-gnu/7/include/stdbool.h ../py/qstr.h \
+  build/genhdr/qstrdefs.generated.h ../py/runtime0.h ../py/objint.h \
+  ../py/mpz.h ../py/runtime.h ../py/mpstate.h ../py/mpthread.h ../py/nlr.h \
+  /usr/lib/gcc/x86_64-linux-gnu/7/include-fixed/limits.h \
+  /usr/lib/gcc/x86_64-linux-gnu/7/include-fixed/syslimits.h \
+  /usr/include/limits.h /usr/include/x86_64-linux-gnu/bits/posix1_lim.h \
+  /usr/include/x86_64-linux-gnu/bits/local_lim.h \
+  /usr/include/linux/limits.h \
+  /usr/include/x86_64-linux-gnu/bits/posix2_lim.h ../py/objlist.h \
+  ../py/objexcept.h ../py/objtuple.h ../py/pystack.h ../py/formatfloat.h
+ ../py/mpprint.c /usr/include/stdc-predef.h :
+  /usr/include/assert.h /usr/include/features.h :
+  /usr/include/x86_64-linux-gnu/sys/cdefs.h :
+  /usr/include/x86_64-linux-gnu/bits/wordsize.h :
+  /usr/include/x86_64-linux-gnu/bits/long-double.h :
+  /usr/include/x86_64-linux-gnu/gnu/stubs.h :
+  /usr/include/x86_64-linux-gnu/gnu/stubs-64.h :
+  /usr/lib/gcc/x86_64-linux-gnu/7/include/stdarg.h :
+  /usr/lib/gcc/x86_64-linux-gnu/7/include/stdint.h /usr/include/stdint.h :
+  /usr/include/x86_64-linux-gnu/bits/libc-header-start.h :
+  /usr/include/x86_64-linux-gnu/bits/types.h :
+  /usr/include/x86_64-linux-gnu/bits/typesizes.h :
+  /usr/include/x86_64-linux-gnu/bits/wchar.h :
+  /usr/include/x86_64-linux-gnu/bits/stdint-intn.h :
+  /usr/include/x86_64-linux-gnu/bits/stdint-uintn.h /usr/include/stdio.h :
+  /usr/lib/gcc/x86_64-linux-gnu/7/include/stddef.h :
+  /usr/include/x86_64-linux-gnu/bits/types/__FILE.h :
+  /usr/include/x86_64-linux-gnu/bits/types/FILE.h :
+  /usr/include/x86_64-linux-gnu/bits/libio.h :
+  /usr/include/x86_64-linux-gnu/bits/_G_config.h :
+  /usr/include/x86_64-linux-gnu/bits/types/__mbstate_t.h :
+  /usr/include/x86_64-linux-gnu/bits/stdio_lim.h :
+  /usr/include/x86_64-linux-gnu/bits/sys_errlist.h :
+  /usr/include/x86_64-linux-gnu/bits/stdio2.h /usr/include/string.h :
+  /usr/include/x86_64-linux-gnu/bits/types/locale_t.h :
+  /usr/include/x86_64-linux-gnu/bits/types/__locale_t.h :
+  /usr/include/strings.h :
+  /usr/include/x86_64-linux-gnu/bits/strings_fortified.h :
+  /usr/include/x86_64-linux-gnu/bits/string_fortified.h ../py/mphal.h :
+  ../py/mpconfig.h mpconfigport.h /usr/include/alloca.h mphalport.h :
+  ../py/mpprint.h ../py/obj.h ../py/misc.h :
+  /usr/lib/gcc/x86_64-linux-gnu/7/include/stdbool.h ../py/qstr.h :
+  build/genhdr/qstrdefs.generated.h ../py/runtime0.h ../py/objint.h :
+  ../py/mpz.h ../py/runtime.h ../py/mpstate.h ../py/mpthread.h ../py/nlr.h :
+  /usr/lib/gcc/x86_64-linux-gnu/7/include-fixed/limits.h :
+  /usr/lib/gcc/x86_64-linux-gnu/7/include-fixed/syslimits.h :
+  /usr/include/limits.h /usr/include/x86_64-linux-gnu/bits/posix1_lim.h :
+  /usr/include/x86_64-linux-gnu/bits/local_lim.h :
+  /usr/include/linux/limits.h :
+  /usr/include/x86_64-linux-gnu/bits/posix2_lim.h ../py/objlist.h :
+  ../py/objexcept.h ../py/objtuple.h ../py/pystack.h ../py/formatfloat.h :
Binary files MicorpythonOriginal1.12/micropython/mpy-cross/build/py/mpstate.o and micropython1.12_withUlab/micropython/mpy-cross/build/py/mpstate.o differ
diff -crNb MicorpythonOriginal1.12/micropython/mpy-cross/build/py/mpstate.P micropython1.12_withUlab/micropython/mpy-cross/build/py/mpstate.P
*** MicorpythonOriginal1.12/micropython/mpy-cross/build/py/mpstate.P	1970-01-01 02:00:00.000000000 +0200
--- micropython1.12_withUlab/micropython/mpy-cross/build/py/mpstate.P	2020-06-19 18:37:32.667652093 +0200
***************
*** 0 ****
--- 1,52 ----
+ build/py/mpstate.o: ../py/mpstate.c /usr/include/stdc-predef.h \
+  ../py/mpstate.h /usr/lib/gcc/x86_64-linux-gnu/7/include/stdint.h \
+  /usr/include/stdint.h \
+  /usr/include/x86_64-linux-gnu/bits/libc-header-start.h \
+  /usr/include/features.h /usr/include/x86_64-linux-gnu/sys/cdefs.h \
+  /usr/include/x86_64-linux-gnu/bits/wordsize.h \
+  /usr/include/x86_64-linux-gnu/bits/long-double.h \
+  /usr/include/x86_64-linux-gnu/gnu/stubs.h \
+  /usr/include/x86_64-linux-gnu/gnu/stubs-64.h \
+  /usr/include/x86_64-linux-gnu/bits/types.h \
+  /usr/include/x86_64-linux-gnu/bits/typesizes.h \
+  /usr/include/x86_64-linux-gnu/bits/wchar.h \
+  /usr/include/x86_64-linux-gnu/bits/stdint-intn.h \
+  /usr/include/x86_64-linux-gnu/bits/stdint-uintn.h ../py/mpconfig.h \
+  mpconfigport.h /usr/include/alloca.h \
+  /usr/lib/gcc/x86_64-linux-gnu/7/include/stddef.h ../py/mpthread.h \
+  ../py/misc.h /usr/lib/gcc/x86_64-linux-gnu/7/include/stdbool.h \
+  ../py/nlr.h /usr/lib/gcc/x86_64-linux-gnu/7/include-fixed/limits.h \
+  /usr/lib/gcc/x86_64-linux-gnu/7/include-fixed/syslimits.h \
+  /usr/include/limits.h /usr/include/x86_64-linux-gnu/bits/posix1_lim.h \
+  /usr/include/x86_64-linux-gnu/bits/local_lim.h \
+  /usr/include/linux/limits.h \
+  /usr/include/x86_64-linux-gnu/bits/posix2_lim.h /usr/include/assert.h \
+  ../py/obj.h ../py/qstr.h build/genhdr/qstrdefs.generated.h \
+  ../py/mpprint.h ../py/runtime0.h ../py/objlist.h ../py/objexcept.h \
+  ../py/objtuple.h
+ ../py/mpstate.c /usr/include/stdc-predef.h :
+  ../py/mpstate.h /usr/lib/gcc/x86_64-linux-gnu/7/include/stdint.h :
+  /usr/include/stdint.h :
+  /usr/include/x86_64-linux-gnu/bits/libc-header-start.h :
+  /usr/include/features.h /usr/include/x86_64-linux-gnu/sys/cdefs.h :
+  /usr/include/x86_64-linux-gnu/bits/wordsize.h :
+  /usr/include/x86_64-linux-gnu/bits/long-double.h :
+  /usr/include/x86_64-linux-gnu/gnu/stubs.h :
+  /usr/include/x86_64-linux-gnu/gnu/stubs-64.h :
+  /usr/include/x86_64-linux-gnu/bits/types.h :
+  /usr/include/x86_64-linux-gnu/bits/typesizes.h :
+  /usr/include/x86_64-linux-gnu/bits/wchar.h :
+  /usr/include/x86_64-linux-gnu/bits/stdint-intn.h :
+  /usr/include/x86_64-linux-gnu/bits/stdint-uintn.h ../py/mpconfig.h :
+  mpconfigport.h /usr/include/alloca.h :
+  /usr/lib/gcc/x86_64-linux-gnu/7/include/stddef.h ../py/mpthread.h :
+  ../py/misc.h /usr/lib/gcc/x86_64-linux-gnu/7/include/stdbool.h :
+  ../py/nlr.h /usr/lib/gcc/x86_64-linux-gnu/7/include-fixed/limits.h :
+  /usr/lib/gcc/x86_64-linux-gnu/7/include-fixed/syslimits.h :
+  /usr/include/limits.h /usr/include/x86_64-linux-gnu/bits/posix1_lim.h :
+  /usr/include/x86_64-linux-gnu/bits/local_lim.h :
+  /usr/include/linux/limits.h :
+  /usr/include/x86_64-linux-gnu/bits/posix2_lim.h /usr/include/assert.h :
+  ../py/obj.h ../py/qstr.h build/genhdr/qstrdefs.generated.h :
+  ../py/mpprint.h ../py/runtime0.h ../py/objlist.h ../py/objexcept.h :
+  ../py/objtuple.h :
Binary files MicorpythonOriginal1.12/micropython/mpy-cross/build/py/mpz.o and micropython1.12_withUlab/micropython/mpy-cross/build/py/mpz.o differ
diff -crNb MicorpythonOriginal1.12/micropython/mpy-cross/build/py/mpz.P micropython1.12_withUlab/micropython/mpy-cross/build/py/mpz.P
*** MicorpythonOriginal1.12/micropython/mpy-cross/build/py/mpz.P	1970-01-01 02:00:00.000000000 +0200
--- micropython1.12_withUlab/micropython/mpy-cross/build/py/mpz.P	2020-06-14 15:06:49.647514407 +0200
***************
*** 0 ****
--- 1,46 ----
+ build/py/mpz.o: ../py/mpz.c /usr/include/stdc-predef.h \
+  /usr/include/string.h \
+  /usr/include/x86_64-linux-gnu/bits/libc-header-start.h \
+  /usr/include/features.h /usr/include/x86_64-linux-gnu/sys/cdefs.h \
+  /usr/include/x86_64-linux-gnu/bits/wordsize.h \
+  /usr/include/x86_64-linux-gnu/bits/long-double.h \
+  /usr/include/x86_64-linux-gnu/gnu/stubs.h \
+  /usr/include/x86_64-linux-gnu/gnu/stubs-64.h \
+  /usr/lib/gcc/x86_64-linux-gnu/7/include/stddef.h \
+  /usr/include/x86_64-linux-gnu/bits/types/locale_t.h \
+  /usr/include/x86_64-linux-gnu/bits/types/__locale_t.h \
+  /usr/include/strings.h \
+  /usr/include/x86_64-linux-gnu/bits/strings_fortified.h \
+  /usr/include/x86_64-linux-gnu/bits/string_fortified.h \
+  /usr/include/assert.h ../py/mpz.h \
+  /usr/lib/gcc/x86_64-linux-gnu/7/include/stdint.h /usr/include/stdint.h \
+  /usr/include/x86_64-linux-gnu/bits/types.h \
+  /usr/include/x86_64-linux-gnu/bits/typesizes.h \
+  /usr/include/x86_64-linux-gnu/bits/wchar.h \
+  /usr/include/x86_64-linux-gnu/bits/stdint-intn.h \
+  /usr/include/x86_64-linux-gnu/bits/stdint-uintn.h ../py/mpconfig.h \
+  mpconfigport.h /usr/include/alloca.h ../py/misc.h \
+  /usr/lib/gcc/x86_64-linux-gnu/7/include/stdbool.h
+ ../py/mpz.c /usr/include/stdc-predef.h :
+  /usr/include/string.h :
+  /usr/include/x86_64-linux-gnu/bits/libc-header-start.h :
+  /usr/include/features.h /usr/include/x86_64-linux-gnu/sys/cdefs.h :
+  /usr/include/x86_64-linux-gnu/bits/wordsize.h :
+  /usr/include/x86_64-linux-gnu/bits/long-double.h :
+  /usr/include/x86_64-linux-gnu/gnu/stubs.h :
+  /usr/include/x86_64-linux-gnu/gnu/stubs-64.h :
+  /usr/lib/gcc/x86_64-linux-gnu/7/include/stddef.h :
+  /usr/include/x86_64-linux-gnu/bits/types/locale_t.h :
+  /usr/include/x86_64-linux-gnu/bits/types/__locale_t.h :
+  /usr/include/strings.h :
+  /usr/include/x86_64-linux-gnu/bits/strings_fortified.h :
+  /usr/include/x86_64-linux-gnu/bits/string_fortified.h :
+  /usr/include/assert.h ../py/mpz.h :
+  /usr/lib/gcc/x86_64-linux-gnu/7/include/stdint.h /usr/include/stdint.h :
+  /usr/include/x86_64-linux-gnu/bits/types.h :
+  /usr/include/x86_64-linux-gnu/bits/typesizes.h :
+  /usr/include/x86_64-linux-gnu/bits/wchar.h :
+  /usr/include/x86_64-linux-gnu/bits/stdint-intn.h :
+  /usr/include/x86_64-linux-gnu/bits/stdint-uintn.h ../py/mpconfig.h :
+  mpconfigport.h /usr/include/alloca.h ../py/misc.h :
+  /usr/lib/gcc/x86_64-linux-gnu/7/include/stdbool.h :
Binary files MicorpythonOriginal1.12/micropython/mpy-cross/build/py/nativeglue.o and micropython1.12_withUlab/micropython/mpy-cross/build/py/nativeglue.o differ
diff -crNb MicorpythonOriginal1.12/micropython/mpy-cross/build/py/nativeglue.P micropython1.12_withUlab/micropython/mpy-cross/build/py/nativeglue.P
*** MicorpythonOriginal1.12/micropython/mpy-cross/build/py/nativeglue.P	1970-01-01 02:00:00.000000000 +0200
--- micropython1.12_withUlab/micropython/mpy-cross/build/py/nativeglue.P	2020-06-19 18:37:36.491569623 +0200
***************
*** 0 ****
--- 1,92 ----
+ build/py/nativeglue.o: ../py/nativeglue.c /usr/include/stdc-predef.h \
+  /usr/lib/gcc/x86_64-linux-gnu/7/include/stdarg.h /usr/include/stdio.h \
+  /usr/include/x86_64-linux-gnu/bits/libc-header-start.h \
+  /usr/include/features.h /usr/include/x86_64-linux-gnu/sys/cdefs.h \
+  /usr/include/x86_64-linux-gnu/bits/wordsize.h \
+  /usr/include/x86_64-linux-gnu/bits/long-double.h \
+  /usr/include/x86_64-linux-gnu/gnu/stubs.h \
+  /usr/include/x86_64-linux-gnu/gnu/stubs-64.h \
+  /usr/lib/gcc/x86_64-linux-gnu/7/include/stddef.h \
+  /usr/include/x86_64-linux-gnu/bits/types.h \
+  /usr/include/x86_64-linux-gnu/bits/typesizes.h \
+  /usr/include/x86_64-linux-gnu/bits/types/__FILE.h \
+  /usr/include/x86_64-linux-gnu/bits/types/FILE.h \
+  /usr/include/x86_64-linux-gnu/bits/libio.h \
+  /usr/include/x86_64-linux-gnu/bits/_G_config.h \
+  /usr/include/x86_64-linux-gnu/bits/types/__mbstate_t.h \
+  /usr/include/x86_64-linux-gnu/bits/stdio_lim.h \
+  /usr/include/x86_64-linux-gnu/bits/sys_errlist.h \
+  /usr/include/x86_64-linux-gnu/bits/stdio2.h /usr/include/string.h \
+  /usr/include/x86_64-linux-gnu/bits/types/locale_t.h \
+  /usr/include/x86_64-linux-gnu/bits/types/__locale_t.h \
+  /usr/include/strings.h \
+  /usr/include/x86_64-linux-gnu/bits/strings_fortified.h \
+  /usr/include/x86_64-linux-gnu/bits/string_fortified.h \
+  /usr/include/assert.h ../py/runtime.h ../py/mpstate.h \
+  /usr/lib/gcc/x86_64-linux-gnu/7/include/stdint.h /usr/include/stdint.h \
+  /usr/include/x86_64-linux-gnu/bits/wchar.h \
+  /usr/include/x86_64-linux-gnu/bits/stdint-intn.h \
+  /usr/include/x86_64-linux-gnu/bits/stdint-uintn.h ../py/mpconfig.h \
+  mpconfigport.h /usr/include/alloca.h ../py/mpthread.h ../py/misc.h \
+  /usr/lib/gcc/x86_64-linux-gnu/7/include/stdbool.h ../py/nlr.h \
+  /usr/lib/gcc/x86_64-linux-gnu/7/include-fixed/limits.h \
+  /usr/lib/gcc/x86_64-linux-gnu/7/include-fixed/syslimits.h \
+  /usr/include/limits.h /usr/include/x86_64-linux-gnu/bits/posix1_lim.h \
+  /usr/include/x86_64-linux-gnu/bits/local_lim.h \
+  /usr/include/linux/limits.h \
+  /usr/include/x86_64-linux-gnu/bits/posix2_lim.h ../py/obj.h ../py/qstr.h \
+  build/genhdr/qstrdefs.generated.h ../py/mpprint.h ../py/runtime0.h \
+  ../py/objlist.h ../py/objexcept.h ../py/objtuple.h ../py/pystack.h \
+  ../py/smallint.h ../py/nativeglue.h ../py/persistentcode.h \
+  ../py/reader.h ../py/emitglue.h ../py/bc.h ../py/objfun.h ../py/stream.h \
+  ../py/mperrno.h /usr/include/errno.h \
+  /usr/include/x86_64-linux-gnu/bits/errno.h /usr/include/linux/errno.h \
+  /usr/include/x86_64-linux-gnu/asm/errno.h \
+  /usr/include/asm-generic/errno.h /usr/include/asm-generic/errno-base.h \
+  ../py/gc.h
+ ../py/nativeglue.c /usr/include/stdc-predef.h :
+  /usr/lib/gcc/x86_64-linux-gnu/7/include/stdarg.h /usr/include/stdio.h :
+  /usr/include/x86_64-linux-gnu/bits/libc-header-start.h :
+  /usr/include/features.h /usr/include/x86_64-linux-gnu/sys/cdefs.h :
+  /usr/include/x86_64-linux-gnu/bits/wordsize.h :
+  /usr/include/x86_64-linux-gnu/bits/long-double.h :
+  /usr/include/x86_64-linux-gnu/gnu/stubs.h :
+  /usr/include/x86_64-linux-gnu/gnu/stubs-64.h :
+  /usr/lib/gcc/x86_64-linux-gnu/7/include/stddef.h :
+  /usr/include/x86_64-linux-gnu/bits/types.h :
+  /usr/include/x86_64-linux-gnu/bits/typesizes.h :
+  /usr/include/x86_64-linux-gnu/bits/types/__FILE.h :
+  /usr/include/x86_64-linux-gnu/bits/types/FILE.h :
+  /usr/include/x86_64-linux-gnu/bits/libio.h :
+  /usr/include/x86_64-linux-gnu/bits/_G_config.h :
+  /usr/include/x86_64-linux-gnu/bits/types/__mbstate_t.h :
+  /usr/include/x86_64-linux-gnu/bits/stdio_lim.h :
+  /usr/include/x86_64-linux-gnu/bits/sys_errlist.h :
+  /usr/include/x86_64-linux-gnu/bits/stdio2.h /usr/include/string.h :
+  /usr/include/x86_64-linux-gnu/bits/types/locale_t.h :
+  /usr/include/x86_64-linux-gnu/bits/types/__locale_t.h :
+  /usr/include/strings.h :
+  /usr/include/x86_64-linux-gnu/bits/strings_fortified.h :
+  /usr/include/x86_64-linux-gnu/bits/string_fortified.h :
+  /usr/include/assert.h ../py/runtime.h ../py/mpstate.h :
+  /usr/lib/gcc/x86_64-linux-gnu/7/include/stdint.h /usr/include/stdint.h :
+  /usr/include/x86_64-linux-gnu/bits/wchar.h :
+  /usr/include/x86_64-linux-gnu/bits/stdint-intn.h :
+  /usr/include/x86_64-linux-gnu/bits/stdint-uintn.h ../py/mpconfig.h :
+  mpconfigport.h /usr/include/alloca.h ../py/mpthread.h ../py/misc.h :
+  /usr/lib/gcc/x86_64-linux-gnu/7/include/stdbool.h ../py/nlr.h :
+  /usr/lib/gcc/x86_64-linux-gnu/7/include-fixed/limits.h :
+  /usr/lib/gcc/x86_64-linux-gnu/7/include-fixed/syslimits.h :
+  /usr/include/limits.h /usr/include/x86_64-linux-gnu/bits/posix1_lim.h :
+  /usr/include/x86_64-linux-gnu/bits/local_lim.h :
+  /usr/include/linux/limits.h :
+  /usr/include/x86_64-linux-gnu/bits/posix2_lim.h ../py/obj.h ../py/qstr.h :
+  build/genhdr/qstrdefs.generated.h ../py/mpprint.h ../py/runtime0.h :
+  ../py/objlist.h ../py/objexcept.h ../py/objtuple.h ../py/pystack.h :
+  ../py/smallint.h ../py/nativeglue.h ../py/persistentcode.h :
+  ../py/reader.h ../py/emitglue.h ../py/bc.h ../py/objfun.h ../py/stream.h :
+  ../py/mperrno.h /usr/include/errno.h :
+  /usr/include/x86_64-linux-gnu/bits/errno.h /usr/include/linux/errno.h :
+  /usr/include/x86_64-linux-gnu/asm/errno.h :
+  /usr/include/asm-generic/errno.h /usr/include/asm-generic/errno-base.h :
+  ../py/gc.h :
Binary files MicorpythonOriginal1.12/micropython/mpy-cross/build/py/nlr.o and micropython1.12_withUlab/micropython/mpy-cross/build/py/nlr.o differ
diff -crNb MicorpythonOriginal1.12/micropython/mpy-cross/build/py/nlr.P micropython1.12_withUlab/micropython/mpy-cross/build/py/nlr.P
*** MicorpythonOriginal1.12/micropython/mpy-cross/build/py/nlr.P	1970-01-01 02:00:00.000000000 +0200
--- micropython1.12_withUlab/micropython/mpy-cross/build/py/nlr.P	2020-06-19 18:37:32.707651225 +0200
***************
*** 0 ****
--- 1,50 ----
+ build/py/nlr.o: ../py/nlr.c /usr/include/stdc-predef.h ../py/mpstate.h \
+  /usr/lib/gcc/x86_64-linux-gnu/7/include/stdint.h /usr/include/stdint.h \
+  /usr/include/x86_64-linux-gnu/bits/libc-header-start.h \
+  /usr/include/features.h /usr/include/x86_64-linux-gnu/sys/cdefs.h \
+  /usr/include/x86_64-linux-gnu/bits/wordsize.h \
+  /usr/include/x86_64-linux-gnu/bits/long-double.h \
+  /usr/include/x86_64-linux-gnu/gnu/stubs.h \
+  /usr/include/x86_64-linux-gnu/gnu/stubs-64.h \
+  /usr/include/x86_64-linux-gnu/bits/types.h \
+  /usr/include/x86_64-linux-gnu/bits/typesizes.h \
+  /usr/include/x86_64-linux-gnu/bits/wchar.h \
+  /usr/include/x86_64-linux-gnu/bits/stdint-intn.h \
+  /usr/include/x86_64-linux-gnu/bits/stdint-uintn.h ../py/mpconfig.h \
+  mpconfigport.h /usr/include/alloca.h \
+  /usr/lib/gcc/x86_64-linux-gnu/7/include/stddef.h ../py/mpthread.h \
+  ../py/misc.h /usr/lib/gcc/x86_64-linux-gnu/7/include/stdbool.h \
+  ../py/nlr.h /usr/lib/gcc/x86_64-linux-gnu/7/include-fixed/limits.h \
+  /usr/lib/gcc/x86_64-linux-gnu/7/include-fixed/syslimits.h \
+  /usr/include/limits.h /usr/include/x86_64-linux-gnu/bits/posix1_lim.h \
+  /usr/include/x86_64-linux-gnu/bits/local_lim.h \
+  /usr/include/linux/limits.h \
+  /usr/include/x86_64-linux-gnu/bits/posix2_lim.h /usr/include/assert.h \
+  ../py/obj.h ../py/qstr.h build/genhdr/qstrdefs.generated.h \
+  ../py/mpprint.h ../py/runtime0.h ../py/objlist.h ../py/objexcept.h \
+  ../py/objtuple.h
+ ../py/nlr.c /usr/include/stdc-predef.h ../py/mpstate.h :
+  /usr/lib/gcc/x86_64-linux-gnu/7/include/stdint.h /usr/include/stdint.h :
+  /usr/include/x86_64-linux-gnu/bits/libc-header-start.h :
+  /usr/include/features.h /usr/include/x86_64-linux-gnu/sys/cdefs.h :
+  /usr/include/x86_64-linux-gnu/bits/wordsize.h :
+  /usr/include/x86_64-linux-gnu/bits/long-double.h :
+  /usr/include/x86_64-linux-gnu/gnu/stubs.h :
+  /usr/include/x86_64-linux-gnu/gnu/stubs-64.h :
+  /usr/include/x86_64-linux-gnu/bits/types.h :
+  /usr/include/x86_64-linux-gnu/bits/typesizes.h :
+  /usr/include/x86_64-linux-gnu/bits/wchar.h :
+  /usr/include/x86_64-linux-gnu/bits/stdint-intn.h :
+  /usr/include/x86_64-linux-gnu/bits/stdint-uintn.h ../py/mpconfig.h :
+  mpconfigport.h /usr/include/alloca.h :
+  /usr/lib/gcc/x86_64-linux-gnu/7/include/stddef.h ../py/mpthread.h :
+  ../py/misc.h /usr/lib/gcc/x86_64-linux-gnu/7/include/stdbool.h :
+  ../py/nlr.h /usr/lib/gcc/x86_64-linux-gnu/7/include-fixed/limits.h :
+  /usr/lib/gcc/x86_64-linux-gnu/7/include-fixed/syslimits.h :
+  /usr/include/limits.h /usr/include/x86_64-linux-gnu/bits/posix1_lim.h :
+  /usr/include/x86_64-linux-gnu/bits/local_lim.h :
+  /usr/include/linux/limits.h :
+  /usr/include/x86_64-linux-gnu/bits/posix2_lim.h /usr/include/assert.h :
+  ../py/obj.h ../py/qstr.h build/genhdr/qstrdefs.generated.h :
+  ../py/mpprint.h ../py/runtime0.h ../py/objlist.h ../py/objexcept.h :
+  ../py/objtuple.h :
Binary files MicorpythonOriginal1.12/micropython/mpy-cross/build/py/nlrpowerpc.o and micropython1.12_withUlab/micropython/mpy-cross/build/py/nlrpowerpc.o differ
diff -crNb MicorpythonOriginal1.12/micropython/mpy-cross/build/py/nlrpowerpc.P micropython1.12_withUlab/micropython/mpy-cross/build/py/nlrpowerpc.P
*** MicorpythonOriginal1.12/micropython/mpy-cross/build/py/nlrpowerpc.P	1970-01-01 02:00:00.000000000 +0200
--- micropython1.12_withUlab/micropython/mpy-cross/build/py/nlrpowerpc.P	2020-06-19 18:37:32.787649490 +0200
***************
*** 0 ****
--- 1,52 ----
+ build/py/nlrpowerpc.o: ../py/nlrpowerpc.c /usr/include/stdc-predef.h \
+  ../py/mpstate.h /usr/lib/gcc/x86_64-linux-gnu/7/include/stdint.h \
+  /usr/include/stdint.h \
+  /usr/include/x86_64-linux-gnu/bits/libc-header-start.h \
+  /usr/include/features.h /usr/include/x86_64-linux-gnu/sys/cdefs.h \
+  /usr/include/x86_64-linux-gnu/bits/wordsize.h \
+  /usr/include/x86_64-linux-gnu/bits/long-double.h \
+  /usr/include/x86_64-linux-gnu/gnu/stubs.h \
+  /usr/include/x86_64-linux-gnu/gnu/stubs-64.h \
+  /usr/include/x86_64-linux-gnu/bits/types.h \
+  /usr/include/x86_64-linux-gnu/bits/typesizes.h \
+  /usr/include/x86_64-linux-gnu/bits/wchar.h \
+  /usr/include/x86_64-linux-gnu/bits/stdint-intn.h \
+  /usr/include/x86_64-linux-gnu/bits/stdint-uintn.h ../py/mpconfig.h \
+  mpconfigport.h /usr/include/alloca.h \
+  /usr/lib/gcc/x86_64-linux-gnu/7/include/stddef.h ../py/mpthread.h \
+  ../py/misc.h /usr/lib/gcc/x86_64-linux-gnu/7/include/stdbool.h \
+  ../py/nlr.h /usr/lib/gcc/x86_64-linux-gnu/7/include-fixed/limits.h \
+  /usr/lib/gcc/x86_64-linux-gnu/7/include-fixed/syslimits.h \
+  /usr/include/limits.h /usr/include/x86_64-linux-gnu/bits/posix1_lim.h \
+  /usr/include/x86_64-linux-gnu/bits/local_lim.h \
+  /usr/include/linux/limits.h \
+  /usr/include/x86_64-linux-gnu/bits/posix2_lim.h /usr/include/assert.h \
+  ../py/obj.h ../py/qstr.h build/genhdr/qstrdefs.generated.h \
+  ../py/mpprint.h ../py/runtime0.h ../py/objlist.h ../py/objexcept.h \
+  ../py/objtuple.h
+ ../py/nlrpowerpc.c /usr/include/stdc-predef.h :
+  ../py/mpstate.h /usr/lib/gcc/x86_64-linux-gnu/7/include/stdint.h :
+  /usr/include/stdint.h :
+  /usr/include/x86_64-linux-gnu/bits/libc-header-start.h :
+  /usr/include/features.h /usr/include/x86_64-linux-gnu/sys/cdefs.h :
+  /usr/include/x86_64-linux-gnu/bits/wordsize.h :
+  /usr/include/x86_64-linux-gnu/bits/long-double.h :
+  /usr/include/x86_64-linux-gnu/gnu/stubs.h :
+  /usr/include/x86_64-linux-gnu/gnu/stubs-64.h :
+  /usr/include/x86_64-linux-gnu/bits/types.h :
+  /usr/include/x86_64-linux-gnu/bits/typesizes.h :
+  /usr/include/x86_64-linux-gnu/bits/wchar.h :
+  /usr/include/x86_64-linux-gnu/bits/stdint-intn.h :
+  /usr/include/x86_64-linux-gnu/bits/stdint-uintn.h ../py/mpconfig.h :
+  mpconfigport.h /usr/include/alloca.h :
+  /usr/lib/gcc/x86_64-linux-gnu/7/include/stddef.h ../py/mpthread.h :
+  ../py/misc.h /usr/lib/gcc/x86_64-linux-gnu/7/include/stdbool.h :
+  ../py/nlr.h /usr/lib/gcc/x86_64-linux-gnu/7/include-fixed/limits.h :
+  /usr/lib/gcc/x86_64-linux-gnu/7/include-fixed/syslimits.h :
+  /usr/include/limits.h /usr/include/x86_64-linux-gnu/bits/posix1_lim.h :
+  /usr/include/x86_64-linux-gnu/bits/local_lim.h :
+  /usr/include/linux/limits.h :
+  /usr/include/x86_64-linux-gnu/bits/posix2_lim.h /usr/include/assert.h :
+  ../py/obj.h ../py/qstr.h build/genhdr/qstrdefs.generated.h :
+  ../py/mpprint.h ../py/runtime0.h ../py/objlist.h ../py/objexcept.h :
+  ../py/objtuple.h :
Binary files MicorpythonOriginal1.12/micropython/mpy-cross/build/py/nlrsetjmp.o and micropython1.12_withUlab/micropython/mpy-cross/build/py/nlrsetjmp.o differ
diff -crNb MicorpythonOriginal1.12/micropython/mpy-cross/build/py/nlrsetjmp.P micropython1.12_withUlab/micropython/mpy-cross/build/py/nlrsetjmp.P
*** MicorpythonOriginal1.12/micropython/mpy-cross/build/py/nlrsetjmp.P	1970-01-01 02:00:00.000000000 +0200
--- micropython1.12_withUlab/micropython/mpy-cross/build/py/nlrsetjmp.P	2020-06-19 18:37:32.831648535 +0200
***************
*** 0 ****
--- 1,52 ----
+ build/py/nlrsetjmp.o: ../py/nlrsetjmp.c /usr/include/stdc-predef.h \
+  ../py/mpstate.h /usr/lib/gcc/x86_64-linux-gnu/7/include/stdint.h \
+  /usr/include/stdint.h \
+  /usr/include/x86_64-linux-gnu/bits/libc-header-start.h \
+  /usr/include/features.h /usr/include/x86_64-linux-gnu/sys/cdefs.h \
+  /usr/include/x86_64-linux-gnu/bits/wordsize.h \
+  /usr/include/x86_64-linux-gnu/bits/long-double.h \
+  /usr/include/x86_64-linux-gnu/gnu/stubs.h \
+  /usr/include/x86_64-linux-gnu/gnu/stubs-64.h \
+  /usr/include/x86_64-linux-gnu/bits/types.h \
+  /usr/include/x86_64-linux-gnu/bits/typesizes.h \
+  /usr/include/x86_64-linux-gnu/bits/wchar.h \
+  /usr/include/x86_64-linux-gnu/bits/stdint-intn.h \
+  /usr/include/x86_64-linux-gnu/bits/stdint-uintn.h ../py/mpconfig.h \
+  mpconfigport.h /usr/include/alloca.h \
+  /usr/lib/gcc/x86_64-linux-gnu/7/include/stddef.h ../py/mpthread.h \
+  ../py/misc.h /usr/lib/gcc/x86_64-linux-gnu/7/include/stdbool.h \
+  ../py/nlr.h /usr/lib/gcc/x86_64-linux-gnu/7/include-fixed/limits.h \
+  /usr/lib/gcc/x86_64-linux-gnu/7/include-fixed/syslimits.h \
+  /usr/include/limits.h /usr/include/x86_64-linux-gnu/bits/posix1_lim.h \
+  /usr/include/x86_64-linux-gnu/bits/local_lim.h \
+  /usr/include/linux/limits.h \
+  /usr/include/x86_64-linux-gnu/bits/posix2_lim.h /usr/include/assert.h \
+  ../py/obj.h ../py/qstr.h build/genhdr/qstrdefs.generated.h \
+  ../py/mpprint.h ../py/runtime0.h ../py/objlist.h ../py/objexcept.h \
+  ../py/objtuple.h
+ ../py/nlrsetjmp.c /usr/include/stdc-predef.h :
+  ../py/mpstate.h /usr/lib/gcc/x86_64-linux-gnu/7/include/stdint.h :
+  /usr/include/stdint.h :
+  /usr/include/x86_64-linux-gnu/bits/libc-header-start.h :
+  /usr/include/features.h /usr/include/x86_64-linux-gnu/sys/cdefs.h :
+  /usr/include/x86_64-linux-gnu/bits/wordsize.h :
+  /usr/include/x86_64-linux-gnu/bits/long-double.h :
+  /usr/include/x86_64-linux-gnu/gnu/stubs.h :
+  /usr/include/x86_64-linux-gnu/gnu/stubs-64.h :
+  /usr/include/x86_64-linux-gnu/bits/types.h :
+  /usr/include/x86_64-linux-gnu/bits/typesizes.h :
+  /usr/include/x86_64-linux-gnu/bits/wchar.h :
+  /usr/include/x86_64-linux-gnu/bits/stdint-intn.h :
+  /usr/include/x86_64-linux-gnu/bits/stdint-uintn.h ../py/mpconfig.h :
+  mpconfigport.h /usr/include/alloca.h :
+  /usr/lib/gcc/x86_64-linux-gnu/7/include/stddef.h ../py/mpthread.h :
+  ../py/misc.h /usr/lib/gcc/x86_64-linux-gnu/7/include/stdbool.h :
+  ../py/nlr.h /usr/lib/gcc/x86_64-linux-gnu/7/include-fixed/limits.h :
+  /usr/lib/gcc/x86_64-linux-gnu/7/include-fixed/syslimits.h :
+  /usr/include/limits.h /usr/include/x86_64-linux-gnu/bits/posix1_lim.h :
+  /usr/include/x86_64-linux-gnu/bits/local_lim.h :
+  /usr/include/linux/limits.h :
+  /usr/include/x86_64-linux-gnu/bits/posix2_lim.h /usr/include/assert.h :
+  ../py/obj.h ../py/qstr.h build/genhdr/qstrdefs.generated.h :
+  ../py/mpprint.h ../py/runtime0.h ../py/objlist.h ../py/objexcept.h :
+  ../py/objtuple.h :
Binary files MicorpythonOriginal1.12/micropython/mpy-cross/build/py/nlrthumb.o and micropython1.12_withUlab/micropython/mpy-cross/build/py/nlrthumb.o differ
diff -crNb MicorpythonOriginal1.12/micropython/mpy-cross/build/py/nlrthumb.P micropython1.12_withUlab/micropython/mpy-cross/build/py/nlrthumb.P
*** MicorpythonOriginal1.12/micropython/mpy-cross/build/py/nlrthumb.P	1970-01-01 02:00:00.000000000 +0200
--- micropython1.12_withUlab/micropython/mpy-cross/build/py/nlrthumb.P	2020-06-19 18:37:32.767649923 +0200
***************
*** 0 ****
--- 1,52 ----
+ build/py/nlrthumb.o: ../py/nlrthumb.c /usr/include/stdc-predef.h \
+  ../py/mpstate.h /usr/lib/gcc/x86_64-linux-gnu/7/include/stdint.h \
+  /usr/include/stdint.h \
+  /usr/include/x86_64-linux-gnu/bits/libc-header-start.h \
+  /usr/include/features.h /usr/include/x86_64-linux-gnu/sys/cdefs.h \
+  /usr/include/x86_64-linux-gnu/bits/wordsize.h \
+  /usr/include/x86_64-linux-gnu/bits/long-double.h \
+  /usr/include/x86_64-linux-gnu/gnu/stubs.h \
+  /usr/include/x86_64-linux-gnu/gnu/stubs-64.h \
+  /usr/include/x86_64-linux-gnu/bits/types.h \
+  /usr/include/x86_64-linux-gnu/bits/typesizes.h \
+  /usr/include/x86_64-linux-gnu/bits/wchar.h \
+  /usr/include/x86_64-linux-gnu/bits/stdint-intn.h \
+  /usr/include/x86_64-linux-gnu/bits/stdint-uintn.h ../py/mpconfig.h \
+  mpconfigport.h /usr/include/alloca.h \
+  /usr/lib/gcc/x86_64-linux-gnu/7/include/stddef.h ../py/mpthread.h \
+  ../py/misc.h /usr/lib/gcc/x86_64-linux-gnu/7/include/stdbool.h \
+  ../py/nlr.h /usr/lib/gcc/x86_64-linux-gnu/7/include-fixed/limits.h \
+  /usr/lib/gcc/x86_64-linux-gnu/7/include-fixed/syslimits.h \
+  /usr/include/limits.h /usr/include/x86_64-linux-gnu/bits/posix1_lim.h \
+  /usr/include/x86_64-linux-gnu/bits/local_lim.h \
+  /usr/include/linux/limits.h \
+  /usr/include/x86_64-linux-gnu/bits/posix2_lim.h /usr/include/assert.h \
+  ../py/obj.h ../py/qstr.h build/genhdr/qstrdefs.generated.h \
+  ../py/mpprint.h ../py/runtime0.h ../py/objlist.h ../py/objexcept.h \
+  ../py/objtuple.h
+ ../py/nlrthumb.c /usr/include/stdc-predef.h :
+  ../py/mpstate.h /usr/lib/gcc/x86_64-linux-gnu/7/include/stdint.h :
+  /usr/include/stdint.h :
+  /usr/include/x86_64-linux-gnu/bits/libc-header-start.h :
+  /usr/include/features.h /usr/include/x86_64-linux-gnu/sys/cdefs.h :
+  /usr/include/x86_64-linux-gnu/bits/wordsize.h :
+  /usr/include/x86_64-linux-gnu/bits/long-double.h :
+  /usr/include/x86_64-linux-gnu/gnu/stubs.h :
+  /usr/include/x86_64-linux-gnu/gnu/stubs-64.h :
+  /usr/include/x86_64-linux-gnu/bits/types.h :
+  /usr/include/x86_64-linux-gnu/bits/typesizes.h :
+  /usr/include/x86_64-linux-gnu/bits/wchar.h :
+  /usr/include/x86_64-linux-gnu/bits/stdint-intn.h :
+  /usr/include/x86_64-linux-gnu/bits/stdint-uintn.h ../py/mpconfig.h :
+  mpconfigport.h /usr/include/alloca.h :
+  /usr/lib/gcc/x86_64-linux-gnu/7/include/stddef.h ../py/mpthread.h :
+  ../py/misc.h /usr/lib/gcc/x86_64-linux-gnu/7/include/stdbool.h :
+  ../py/nlr.h /usr/lib/gcc/x86_64-linux-gnu/7/include-fixed/limits.h :
+  /usr/lib/gcc/x86_64-linux-gnu/7/include-fixed/syslimits.h :
+  /usr/include/limits.h /usr/include/x86_64-linux-gnu/bits/posix1_lim.h :
+  /usr/include/x86_64-linux-gnu/bits/local_lim.h :
+  /usr/include/linux/limits.h :
+  /usr/include/x86_64-linux-gnu/bits/posix2_lim.h /usr/include/assert.h :
+  ../py/obj.h ../py/qstr.h build/genhdr/qstrdefs.generated.h :
+  ../py/mpprint.h ../py/runtime0.h ../py/objlist.h ../py/objexcept.h :
+  ../py/objtuple.h :
Binary files MicorpythonOriginal1.12/micropython/mpy-cross/build/py/nlrx64.o and micropython1.12_withUlab/micropython/mpy-cross/build/py/nlrx64.o differ
diff -crNb MicorpythonOriginal1.12/micropython/mpy-cross/build/py/nlrx64.P micropython1.12_withUlab/micropython/mpy-cross/build/py/nlrx64.P
*** MicorpythonOriginal1.12/micropython/mpy-cross/build/py/nlrx64.P	1970-01-01 02:00:00.000000000 +0200
--- micropython1.12_withUlab/micropython/mpy-cross/build/py/nlrx64.P	2020-06-19 18:37:32.751650271 +0200
***************
*** 0 ****
--- 1,52 ----
+ build/py/nlrx64.o: ../py/nlrx64.c /usr/include/stdc-predef.h \
+  ../py/mpstate.h /usr/lib/gcc/x86_64-linux-gnu/7/include/stdint.h \
+  /usr/include/stdint.h \
+  /usr/include/x86_64-linux-gnu/bits/libc-header-start.h \
+  /usr/include/features.h /usr/include/x86_64-linux-gnu/sys/cdefs.h \
+  /usr/include/x86_64-linux-gnu/bits/wordsize.h \
+  /usr/include/x86_64-linux-gnu/bits/long-double.h \
+  /usr/include/x86_64-linux-gnu/gnu/stubs.h \
+  /usr/include/x86_64-linux-gnu/gnu/stubs-64.h \
+  /usr/include/x86_64-linux-gnu/bits/types.h \
+  /usr/include/x86_64-linux-gnu/bits/typesizes.h \
+  /usr/include/x86_64-linux-gnu/bits/wchar.h \
+  /usr/include/x86_64-linux-gnu/bits/stdint-intn.h \
+  /usr/include/x86_64-linux-gnu/bits/stdint-uintn.h ../py/mpconfig.h \
+  mpconfigport.h /usr/include/alloca.h \
+  /usr/lib/gcc/x86_64-linux-gnu/7/include/stddef.h ../py/mpthread.h \
+  ../py/misc.h /usr/lib/gcc/x86_64-linux-gnu/7/include/stdbool.h \
+  ../py/nlr.h /usr/lib/gcc/x86_64-linux-gnu/7/include-fixed/limits.h \
+  /usr/lib/gcc/x86_64-linux-gnu/7/include-fixed/syslimits.h \
+  /usr/include/limits.h /usr/include/x86_64-linux-gnu/bits/posix1_lim.h \
+  /usr/include/x86_64-linux-gnu/bits/local_lim.h \
+  /usr/include/linux/limits.h \
+  /usr/include/x86_64-linux-gnu/bits/posix2_lim.h /usr/include/assert.h \
+  ../py/obj.h ../py/qstr.h build/genhdr/qstrdefs.generated.h \
+  ../py/mpprint.h ../py/runtime0.h ../py/objlist.h ../py/objexcept.h \
+  ../py/objtuple.h
+ ../py/nlrx64.c /usr/include/stdc-predef.h :
+  ../py/mpstate.h /usr/lib/gcc/x86_64-linux-gnu/7/include/stdint.h :
+  /usr/include/stdint.h :
+  /usr/include/x86_64-linux-gnu/bits/libc-header-start.h :
+  /usr/include/features.h /usr/include/x86_64-linux-gnu/sys/cdefs.h :
+  /usr/include/x86_64-linux-gnu/bits/wordsize.h :
+  /usr/include/x86_64-linux-gnu/bits/long-double.h :
+  /usr/include/x86_64-linux-gnu/gnu/stubs.h :
+  /usr/include/x86_64-linux-gnu/gnu/stubs-64.h :
+  /usr/include/x86_64-linux-gnu/bits/types.h :
+  /usr/include/x86_64-linux-gnu/bits/typesizes.h :
+  /usr/include/x86_64-linux-gnu/bits/wchar.h :
+  /usr/include/x86_64-linux-gnu/bits/stdint-intn.h :
+  /usr/include/x86_64-linux-gnu/bits/stdint-uintn.h ../py/mpconfig.h :
+  mpconfigport.h /usr/include/alloca.h :
+  /usr/lib/gcc/x86_64-linux-gnu/7/include/stddef.h ../py/mpthread.h :
+  ../py/misc.h /usr/lib/gcc/x86_64-linux-gnu/7/include/stdbool.h :
+  ../py/nlr.h /usr/lib/gcc/x86_64-linux-gnu/7/include-fixed/limits.h :
+  /usr/lib/gcc/x86_64-linux-gnu/7/include-fixed/syslimits.h :
+  /usr/include/limits.h /usr/include/x86_64-linux-gnu/bits/posix1_lim.h :
+  /usr/include/x86_64-linux-gnu/bits/local_lim.h :
+  /usr/include/linux/limits.h :
+  /usr/include/x86_64-linux-gnu/bits/posix2_lim.h /usr/include/assert.h :
+  ../py/obj.h ../py/qstr.h build/genhdr/qstrdefs.generated.h :
+  ../py/mpprint.h ../py/runtime0.h ../py/objlist.h ../py/objexcept.h :
+  ../py/objtuple.h :
Binary files MicorpythonOriginal1.12/micropython/mpy-cross/build/py/nlrx86.o and micropython1.12_withUlab/micropython/mpy-cross/build/py/nlrx86.o differ
diff -crNb MicorpythonOriginal1.12/micropython/mpy-cross/build/py/nlrx86.P micropython1.12_withUlab/micropython/mpy-cross/build/py/nlrx86.P
*** MicorpythonOriginal1.12/micropython/mpy-cross/build/py/nlrx86.P	1970-01-01 02:00:00.000000000 +0200
--- micropython1.12_withUlab/micropython/mpy-cross/build/py/nlrx86.P	2020-06-19 18:37:32.723650878 +0200
***************
*** 0 ****
--- 1,52 ----
+ build/py/nlrx86.o: ../py/nlrx86.c /usr/include/stdc-predef.h \
+  ../py/mpstate.h /usr/lib/gcc/x86_64-linux-gnu/7/include/stdint.h \
+  /usr/include/stdint.h \
+  /usr/include/x86_64-linux-gnu/bits/libc-header-start.h \
+  /usr/include/features.h /usr/include/x86_64-linux-gnu/sys/cdefs.h \
+  /usr/include/x86_64-linux-gnu/bits/wordsize.h \
+  /usr/include/x86_64-linux-gnu/bits/long-double.h \
+  /usr/include/x86_64-linux-gnu/gnu/stubs.h \
+  /usr/include/x86_64-linux-gnu/gnu/stubs-64.h \
+  /usr/include/x86_64-linux-gnu/bits/types.h \
+  /usr/include/x86_64-linux-gnu/bits/typesizes.h \
+  /usr/include/x86_64-linux-gnu/bits/wchar.h \
+  /usr/include/x86_64-linux-gnu/bits/stdint-intn.h \
+  /usr/include/x86_64-linux-gnu/bits/stdint-uintn.h ../py/mpconfig.h \
+  mpconfigport.h /usr/include/alloca.h \
+  /usr/lib/gcc/x86_64-linux-gnu/7/include/stddef.h ../py/mpthread.h \
+  ../py/misc.h /usr/lib/gcc/x86_64-linux-gnu/7/include/stdbool.h \
+  ../py/nlr.h /usr/lib/gcc/x86_64-linux-gnu/7/include-fixed/limits.h \
+  /usr/lib/gcc/x86_64-linux-gnu/7/include-fixed/syslimits.h \
+  /usr/include/limits.h /usr/include/x86_64-linux-gnu/bits/posix1_lim.h \
+  /usr/include/x86_64-linux-gnu/bits/local_lim.h \
+  /usr/include/linux/limits.h \
+  /usr/include/x86_64-linux-gnu/bits/posix2_lim.h /usr/include/assert.h \
+  ../py/obj.h ../py/qstr.h build/genhdr/qstrdefs.generated.h \
+  ../py/mpprint.h ../py/runtime0.h ../py/objlist.h ../py/objexcept.h \
+  ../py/objtuple.h
+ ../py/nlrx86.c /usr/include/stdc-predef.h :
+  ../py/mpstate.h /usr/lib/gcc/x86_64-linux-gnu/7/include/stdint.h :
+  /usr/include/stdint.h :
+  /usr/include/x86_64-linux-gnu/bits/libc-header-start.h :
+  /usr/include/features.h /usr/include/x86_64-linux-gnu/sys/cdefs.h :
+  /usr/include/x86_64-linux-gnu/bits/wordsize.h :
+  /usr/include/x86_64-linux-gnu/bits/long-double.h :
+  /usr/include/x86_64-linux-gnu/gnu/stubs.h :
+  /usr/include/x86_64-linux-gnu/gnu/stubs-64.h :
+  /usr/include/x86_64-linux-gnu/bits/types.h :
+  /usr/include/x86_64-linux-gnu/bits/typesizes.h :
+  /usr/include/x86_64-linux-gnu/bits/wchar.h :
+  /usr/include/x86_64-linux-gnu/bits/stdint-intn.h :
+  /usr/include/x86_64-linux-gnu/bits/stdint-uintn.h ../py/mpconfig.h :
+  mpconfigport.h /usr/include/alloca.h :
+  /usr/lib/gcc/x86_64-linux-gnu/7/include/stddef.h ../py/mpthread.h :
+  ../py/misc.h /usr/lib/gcc/x86_64-linux-gnu/7/include/stdbool.h :
+  ../py/nlr.h /usr/lib/gcc/x86_64-linux-gnu/7/include-fixed/limits.h :
+  /usr/lib/gcc/x86_64-linux-gnu/7/include-fixed/syslimits.h :
+  /usr/include/limits.h /usr/include/x86_64-linux-gnu/bits/posix1_lim.h :
+  /usr/include/x86_64-linux-gnu/bits/local_lim.h :
+  /usr/include/linux/limits.h :
+  /usr/include/x86_64-linux-gnu/bits/posix2_lim.h /usr/include/assert.h :
+  ../py/obj.h ../py/qstr.h build/genhdr/qstrdefs.generated.h :
+  ../py/mpprint.h ../py/runtime0.h ../py/objlist.h ../py/objexcept.h :
+  ../py/objtuple.h :
Binary files MicorpythonOriginal1.12/micropython/mpy-cross/build/py/nlrxtensa.o and micropython1.12_withUlab/micropython/mpy-cross/build/py/nlrxtensa.o differ
diff -crNb MicorpythonOriginal1.12/micropython/mpy-cross/build/py/nlrxtensa.P micropython1.12_withUlab/micropython/mpy-cross/build/py/nlrxtensa.P
*** MicorpythonOriginal1.12/micropython/mpy-cross/build/py/nlrxtensa.P	1970-01-01 02:00:00.000000000 +0200
--- micropython1.12_withUlab/micropython/mpy-cross/build/py/nlrxtensa.P	2020-06-19 18:37:32.811648969 +0200
***************
*** 0 ****
--- 1,52 ----
+ build/py/nlrxtensa.o: ../py/nlrxtensa.c /usr/include/stdc-predef.h \
+  ../py/mpstate.h /usr/lib/gcc/x86_64-linux-gnu/7/include/stdint.h \
+  /usr/include/stdint.h \
+  /usr/include/x86_64-linux-gnu/bits/libc-header-start.h \
+  /usr/include/features.h /usr/include/x86_64-linux-gnu/sys/cdefs.h \
+  /usr/include/x86_64-linux-gnu/bits/wordsize.h \
+  /usr/include/x86_64-linux-gnu/bits/long-double.h \
+  /usr/include/x86_64-linux-gnu/gnu/stubs.h \
+  /usr/include/x86_64-linux-gnu/gnu/stubs-64.h \
+  /usr/include/x86_64-linux-gnu/bits/types.h \
+  /usr/include/x86_64-linux-gnu/bits/typesizes.h \
+  /usr/include/x86_64-linux-gnu/bits/wchar.h \
+  /usr/include/x86_64-linux-gnu/bits/stdint-intn.h \
+  /usr/include/x86_64-linux-gnu/bits/stdint-uintn.h ../py/mpconfig.h \
+  mpconfigport.h /usr/include/alloca.h \
+  /usr/lib/gcc/x86_64-linux-gnu/7/include/stddef.h ../py/mpthread.h \
+  ../py/misc.h /usr/lib/gcc/x86_64-linux-gnu/7/include/stdbool.h \
+  ../py/nlr.h /usr/lib/gcc/x86_64-linux-gnu/7/include-fixed/limits.h \
+  /usr/lib/gcc/x86_64-linux-gnu/7/include-fixed/syslimits.h \
+  /usr/include/limits.h /usr/include/x86_64-linux-gnu/bits/posix1_lim.h \
+  /usr/include/x86_64-linux-gnu/bits/local_lim.h \
+  /usr/include/linux/limits.h \
+  /usr/include/x86_64-linux-gnu/bits/posix2_lim.h /usr/include/assert.h \
+  ../py/obj.h ../py/qstr.h build/genhdr/qstrdefs.generated.h \
+  ../py/mpprint.h ../py/runtime0.h ../py/objlist.h ../py/objexcept.h \
+  ../py/objtuple.h
+ ../py/nlrxtensa.c /usr/include/stdc-predef.h :
+  ../py/mpstate.h /usr/lib/gcc/x86_64-linux-gnu/7/include/stdint.h :
+  /usr/include/stdint.h :
+  /usr/include/x86_64-linux-gnu/bits/libc-header-start.h :
+  /usr/include/features.h /usr/include/x86_64-linux-gnu/sys/cdefs.h :
+  /usr/include/x86_64-linux-gnu/bits/wordsize.h :
+  /usr/include/x86_64-linux-gnu/bits/long-double.h :
+  /usr/include/x86_64-linux-gnu/gnu/stubs.h :
+  /usr/include/x86_64-linux-gnu/gnu/stubs-64.h :
+  /usr/include/x86_64-linux-gnu/bits/types.h :
+  /usr/include/x86_64-linux-gnu/bits/typesizes.h :
+  /usr/include/x86_64-linux-gnu/bits/wchar.h :
+  /usr/include/x86_64-linux-gnu/bits/stdint-intn.h :
+  /usr/include/x86_64-linux-gnu/bits/stdint-uintn.h ../py/mpconfig.h :
+  mpconfigport.h /usr/include/alloca.h :
+  /usr/lib/gcc/x86_64-linux-gnu/7/include/stddef.h ../py/mpthread.h :
+  ../py/misc.h /usr/lib/gcc/x86_64-linux-gnu/7/include/stdbool.h :
+  ../py/nlr.h /usr/lib/gcc/x86_64-linux-gnu/7/include-fixed/limits.h :
+  /usr/lib/gcc/x86_64-linux-gnu/7/include-fixed/syslimits.h :
+  /usr/include/limits.h /usr/include/x86_64-linux-gnu/bits/posix1_lim.h :
+  /usr/include/x86_64-linux-gnu/bits/local_lim.h :
+  /usr/include/linux/limits.h :
+  /usr/include/x86_64-linux-gnu/bits/posix2_lim.h /usr/include/assert.h :
+  ../py/obj.h ../py/qstr.h build/genhdr/qstrdefs.generated.h :
+  ../py/mpprint.h ../py/runtime0.h ../py/objlist.h ../py/objexcept.h :
+  ../py/objtuple.h :
Binary files MicorpythonOriginal1.12/micropython/mpy-cross/build/py/objarray.o and micropython1.12_withUlab/micropython/mpy-cross/build/py/objarray.o differ
diff -crNb MicorpythonOriginal1.12/micropython/mpy-cross/build/py/objarray.P micropython1.12_withUlab/micropython/mpy-cross/build/py/objarray.P
*** MicorpythonOriginal1.12/micropython/mpy-cross/build/py/objarray.P	1970-01-01 02:00:00.000000000 +0200
--- micropython1.12_withUlab/micropython/mpy-cross/build/py/objarray.P	2020-06-19 18:37:36.799563018 +0200
***************
*** 0 ****
--- 1,64 ----
+ build/py/objarray.o: ../py/objarray.c /usr/include/stdc-predef.h \
+  /usr/include/string.h \
+  /usr/include/x86_64-linux-gnu/bits/libc-header-start.h \
+  /usr/include/features.h /usr/include/x86_64-linux-gnu/sys/cdefs.h \
+  /usr/include/x86_64-linux-gnu/bits/wordsize.h \
+  /usr/include/x86_64-linux-gnu/bits/long-double.h \
+  /usr/include/x86_64-linux-gnu/gnu/stubs.h \
+  /usr/include/x86_64-linux-gnu/gnu/stubs-64.h \
+  /usr/lib/gcc/x86_64-linux-gnu/7/include/stddef.h \
+  /usr/include/x86_64-linux-gnu/bits/types/locale_t.h \
+  /usr/include/x86_64-linux-gnu/bits/types/__locale_t.h \
+  /usr/include/strings.h \
+  /usr/include/x86_64-linux-gnu/bits/strings_fortified.h \
+  /usr/include/x86_64-linux-gnu/bits/string_fortified.h \
+  /usr/include/assert.h /usr/lib/gcc/x86_64-linux-gnu/7/include/stdint.h \
+  /usr/include/stdint.h /usr/include/x86_64-linux-gnu/bits/types.h \
+  /usr/include/x86_64-linux-gnu/bits/typesizes.h \
+  /usr/include/x86_64-linux-gnu/bits/wchar.h \
+  /usr/include/x86_64-linux-gnu/bits/stdint-intn.h \
+  /usr/include/x86_64-linux-gnu/bits/stdint-uintn.h ../py/runtime.h \
+  ../py/mpstate.h ../py/mpconfig.h mpconfigport.h /usr/include/alloca.h \
+  ../py/mpthread.h ../py/misc.h \
+  /usr/lib/gcc/x86_64-linux-gnu/7/include/stdbool.h ../py/nlr.h \
+  /usr/lib/gcc/x86_64-linux-gnu/7/include-fixed/limits.h \
+  /usr/lib/gcc/x86_64-linux-gnu/7/include-fixed/syslimits.h \
+  /usr/include/limits.h /usr/include/x86_64-linux-gnu/bits/posix1_lim.h \
+  /usr/include/x86_64-linux-gnu/bits/local_lim.h \
+  /usr/include/linux/limits.h \
+  /usr/include/x86_64-linux-gnu/bits/posix2_lim.h ../py/obj.h ../py/qstr.h \
+  build/genhdr/qstrdefs.generated.h ../py/mpprint.h ../py/runtime0.h \
+  ../py/objlist.h ../py/objexcept.h ../py/objtuple.h ../py/pystack.h \
+  ../py/binary.h ../py/objstr.h ../py/objarray.h
+ ../py/objarray.c /usr/include/stdc-predef.h :
+  /usr/include/string.h :
+  /usr/include/x86_64-linux-gnu/bits/libc-header-start.h :
+  /usr/include/features.h /usr/include/x86_64-linux-gnu/sys/cdefs.h :
+  /usr/include/x86_64-linux-gnu/bits/wordsize.h :
+  /usr/include/x86_64-linux-gnu/bits/long-double.h :
+  /usr/include/x86_64-linux-gnu/gnu/stubs.h :
+  /usr/include/x86_64-linux-gnu/gnu/stubs-64.h :
+  /usr/lib/gcc/x86_64-linux-gnu/7/include/stddef.h :
+  /usr/include/x86_64-linux-gnu/bits/types/locale_t.h :
+  /usr/include/x86_64-linux-gnu/bits/types/__locale_t.h :
+  /usr/include/strings.h :
+  /usr/include/x86_64-linux-gnu/bits/strings_fortified.h :
+  /usr/include/x86_64-linux-gnu/bits/string_fortified.h :
+  /usr/include/assert.h /usr/lib/gcc/x86_64-linux-gnu/7/include/stdint.h :
+  /usr/include/stdint.h /usr/include/x86_64-linux-gnu/bits/types.h :
+  /usr/include/x86_64-linux-gnu/bits/typesizes.h :
+  /usr/include/x86_64-linux-gnu/bits/wchar.h :
+  /usr/include/x86_64-linux-gnu/bits/stdint-intn.h :
+  /usr/include/x86_64-linux-gnu/bits/stdint-uintn.h ../py/runtime.h :
+  ../py/mpstate.h ../py/mpconfig.h mpconfigport.h /usr/include/alloca.h :
+  ../py/mpthread.h ../py/misc.h :
+  /usr/lib/gcc/x86_64-linux-gnu/7/include/stdbool.h ../py/nlr.h :
+  /usr/lib/gcc/x86_64-linux-gnu/7/include-fixed/limits.h :
+  /usr/lib/gcc/x86_64-linux-gnu/7/include-fixed/syslimits.h :
+  /usr/include/limits.h /usr/include/x86_64-linux-gnu/bits/posix1_lim.h :
+  /usr/include/x86_64-linux-gnu/bits/local_lim.h :
+  /usr/include/linux/limits.h :
+  /usr/include/x86_64-linux-gnu/bits/posix2_lim.h ../py/obj.h ../py/qstr.h :
+  build/genhdr/qstrdefs.generated.h ../py/mpprint.h ../py/runtime0.h :
+  ../py/objlist.h ../py/objexcept.h ../py/objtuple.h ../py/pystack.h :
+  ../py/binary.h ../py/objstr.h ../py/objarray.h :
Binary files MicorpythonOriginal1.12/micropython/mpy-cross/build/py/objattrtuple.o and micropython1.12_withUlab/micropython/mpy-cross/build/py/objattrtuple.o differ
diff -crNb MicorpythonOriginal1.12/micropython/mpy-cross/build/py/objattrtuple.P micropython1.12_withUlab/micropython/mpy-cross/build/py/objattrtuple.P
*** MicorpythonOriginal1.12/micropython/mpy-cross/build/py/objattrtuple.P	1970-01-01 02:00:00.000000000 +0200
--- micropython1.12_withUlab/micropython/mpy-cross/build/py/objattrtuple.P	2020-06-19 18:37:36.815562675 +0200
***************
*** 0 ****
--- 1,36 ----
+ build/py/objattrtuple.o: ../py/objattrtuple.c /usr/include/stdc-predef.h \
+  ../py/objtuple.h ../py/obj.h ../py/mpconfig.h mpconfigport.h \
+  /usr/include/alloca.h /usr/include/features.h \
+  /usr/include/x86_64-linux-gnu/sys/cdefs.h \
+  /usr/include/x86_64-linux-gnu/bits/wordsize.h \
+  /usr/include/x86_64-linux-gnu/bits/long-double.h \
+  /usr/include/x86_64-linux-gnu/gnu/stubs.h \
+  /usr/include/x86_64-linux-gnu/gnu/stubs-64.h \
+  /usr/lib/gcc/x86_64-linux-gnu/7/include/stddef.h \
+  /usr/lib/gcc/x86_64-linux-gnu/7/include/stdint.h /usr/include/stdint.h \
+  /usr/include/x86_64-linux-gnu/bits/libc-header-start.h \
+  /usr/include/x86_64-linux-gnu/bits/types.h \
+  /usr/include/x86_64-linux-gnu/bits/typesizes.h \
+  /usr/include/x86_64-linux-gnu/bits/wchar.h \
+  /usr/include/x86_64-linux-gnu/bits/stdint-intn.h \
+  /usr/include/x86_64-linux-gnu/bits/stdint-uintn.h ../py/misc.h \
+  /usr/lib/gcc/x86_64-linux-gnu/7/include/stdbool.h ../py/qstr.h \
+  build/genhdr/qstrdefs.generated.h ../py/mpprint.h ../py/runtime0.h
+ ../py/objattrtuple.c /usr/include/stdc-predef.h :
+  ../py/objtuple.h ../py/obj.h ../py/mpconfig.h mpconfigport.h :
+  /usr/include/alloca.h /usr/include/features.h :
+  /usr/include/x86_64-linux-gnu/sys/cdefs.h :
+  /usr/include/x86_64-linux-gnu/bits/wordsize.h :
+  /usr/include/x86_64-linux-gnu/bits/long-double.h :
+  /usr/include/x86_64-linux-gnu/gnu/stubs.h :
+  /usr/include/x86_64-linux-gnu/gnu/stubs-64.h :
+  /usr/lib/gcc/x86_64-linux-gnu/7/include/stddef.h :
+  /usr/lib/gcc/x86_64-linux-gnu/7/include/stdint.h /usr/include/stdint.h :
+  /usr/include/x86_64-linux-gnu/bits/libc-header-start.h :
+  /usr/include/x86_64-linux-gnu/bits/types.h :
+  /usr/include/x86_64-linux-gnu/bits/typesizes.h :
+  /usr/include/x86_64-linux-gnu/bits/wchar.h :
+  /usr/include/x86_64-linux-gnu/bits/stdint-intn.h :
+  /usr/include/x86_64-linux-gnu/bits/stdint-uintn.h ../py/misc.h :
+  /usr/lib/gcc/x86_64-linux-gnu/7/include/stdbool.h ../py/qstr.h :
+  build/genhdr/qstrdefs.generated.h ../py/mpprint.h ../py/runtime0.h :
Binary files MicorpythonOriginal1.12/micropython/mpy-cross/build/py/objbool.o and micropython1.12_withUlab/micropython/mpy-cross/build/py/objbool.o differ
diff -crNb MicorpythonOriginal1.12/micropython/mpy-cross/build/py/objbool.P micropython1.12_withUlab/micropython/mpy-cross/build/py/objbool.P
*** MicorpythonOriginal1.12/micropython/mpy-cross/build/py/objbool.P	1970-01-01 02:00:00.000000000 +0200
--- micropython1.12_withUlab/micropython/mpy-cross/build/py/objbool.P	2020-06-19 18:37:36.843562075 +0200
***************
*** 0 ****
--- 1,106 ----
+ build/py/objbool.o: ../py/objbool.c /usr/include/stdc-predef.h \
+  /usr/include/stdlib.h \
+  /usr/include/x86_64-linux-gnu/bits/libc-header-start.h \
+  /usr/include/features.h /usr/include/x86_64-linux-gnu/sys/cdefs.h \
+  /usr/include/x86_64-linux-gnu/bits/wordsize.h \
+  /usr/include/x86_64-linux-gnu/bits/long-double.h \
+  /usr/include/x86_64-linux-gnu/gnu/stubs.h \
+  /usr/include/x86_64-linux-gnu/gnu/stubs-64.h \
+  /usr/lib/gcc/x86_64-linux-gnu/7/include/stddef.h \
+  /usr/include/x86_64-linux-gnu/bits/waitflags.h \
+  /usr/include/x86_64-linux-gnu/bits/waitstatus.h \
+  /usr/include/x86_64-linux-gnu/bits/floatn.h \
+  /usr/include/x86_64-linux-gnu/bits/floatn-common.h \
+  /usr/include/x86_64-linux-gnu/sys/types.h \
+  /usr/include/x86_64-linux-gnu/bits/types.h \
+  /usr/include/x86_64-linux-gnu/bits/typesizes.h \
+  /usr/include/x86_64-linux-gnu/bits/types/clock_t.h \
+  /usr/include/x86_64-linux-gnu/bits/types/clockid_t.h \
+  /usr/include/x86_64-linux-gnu/bits/types/time_t.h \
+  /usr/include/x86_64-linux-gnu/bits/types/timer_t.h \
+  /usr/include/x86_64-linux-gnu/bits/stdint-intn.h /usr/include/endian.h \
+  /usr/include/x86_64-linux-gnu/bits/endian.h \
+  /usr/include/x86_64-linux-gnu/bits/byteswap.h \
+  /usr/include/x86_64-linux-gnu/bits/byteswap-16.h \
+  /usr/include/x86_64-linux-gnu/bits/uintn-identity.h \
+  /usr/include/x86_64-linux-gnu/sys/select.h \
+  /usr/include/x86_64-linux-gnu/bits/select.h \
+  /usr/include/x86_64-linux-gnu/bits/types/sigset_t.h \
+  /usr/include/x86_64-linux-gnu/bits/types/__sigset_t.h \
+  /usr/include/x86_64-linux-gnu/bits/types/struct_timeval.h \
+  /usr/include/x86_64-linux-gnu/bits/types/struct_timespec.h \
+  /usr/include/x86_64-linux-gnu/bits/select2.h \
+  /usr/include/x86_64-linux-gnu/sys/sysmacros.h \
+  /usr/include/x86_64-linux-gnu/bits/sysmacros.h \
+  /usr/include/x86_64-linux-gnu/bits/pthreadtypes.h \
+  /usr/include/x86_64-linux-gnu/bits/thread-shared-types.h \
+  /usr/include/x86_64-linux-gnu/bits/pthreadtypes-arch.h \
+  /usr/include/alloca.h /usr/include/x86_64-linux-gnu/bits/stdlib-float.h \
+  /usr/include/x86_64-linux-gnu/bits/stdlib.h ../py/runtime.h \
+  ../py/mpstate.h /usr/lib/gcc/x86_64-linux-gnu/7/include/stdint.h \
+  /usr/include/stdint.h /usr/include/x86_64-linux-gnu/bits/wchar.h \
+  /usr/include/x86_64-linux-gnu/bits/stdint-uintn.h ../py/mpconfig.h \
+  mpconfigport.h ../py/mpthread.h ../py/misc.h \
+  /usr/lib/gcc/x86_64-linux-gnu/7/include/stdbool.h ../py/nlr.h \
+  /usr/lib/gcc/x86_64-linux-gnu/7/include-fixed/limits.h \
+  /usr/lib/gcc/x86_64-linux-gnu/7/include-fixed/syslimits.h \
+  /usr/include/limits.h /usr/include/x86_64-linux-gnu/bits/posix1_lim.h \
+  /usr/include/x86_64-linux-gnu/bits/local_lim.h \
+  /usr/include/linux/limits.h \
+  /usr/include/x86_64-linux-gnu/bits/posix2_lim.h /usr/include/assert.h \
+  ../py/obj.h ../py/qstr.h build/genhdr/qstrdefs.generated.h \
+  ../py/mpprint.h ../py/runtime0.h ../py/objlist.h ../py/objexcept.h \
+  ../py/objtuple.h ../py/pystack.h
+ ../py/objbool.c /usr/include/stdc-predef.h :
+  /usr/include/stdlib.h :
+  /usr/include/x86_64-linux-gnu/bits/libc-header-start.h :
+  /usr/include/features.h /usr/include/x86_64-linux-gnu/sys/cdefs.h :
+  /usr/include/x86_64-linux-gnu/bits/wordsize.h :
+  /usr/include/x86_64-linux-gnu/bits/long-double.h :
+  /usr/include/x86_64-linux-gnu/gnu/stubs.h :
+  /usr/include/x86_64-linux-gnu/gnu/stubs-64.h :
+  /usr/lib/gcc/x86_64-linux-gnu/7/include/stddef.h :
+  /usr/include/x86_64-linux-gnu/bits/waitflags.h :
+  /usr/include/x86_64-linux-gnu/bits/waitstatus.h :
+  /usr/include/x86_64-linux-gnu/bits/floatn.h :
+  /usr/include/x86_64-linux-gnu/bits/floatn-common.h :
+  /usr/include/x86_64-linux-gnu/sys/types.h :
+  /usr/include/x86_64-linux-gnu/bits/types.h :
+  /usr/include/x86_64-linux-gnu/bits/typesizes.h :
+  /usr/include/x86_64-linux-gnu/bits/types/clock_t.h :
+  /usr/include/x86_64-linux-gnu/bits/types/clockid_t.h :
+  /usr/include/x86_64-linux-gnu/bits/types/time_t.h :
+  /usr/include/x86_64-linux-gnu/bits/types/timer_t.h :
+  /usr/include/x86_64-linux-gnu/bits/stdint-intn.h /usr/include/endian.h :
+  /usr/include/x86_64-linux-gnu/bits/endian.h :
+  /usr/include/x86_64-linux-gnu/bits/byteswap.h :
+  /usr/include/x86_64-linux-gnu/bits/byteswap-16.h :
+  /usr/include/x86_64-linux-gnu/bits/uintn-identity.h :
+  /usr/include/x86_64-linux-gnu/sys/select.h :
+  /usr/include/x86_64-linux-gnu/bits/select.h :
+  /usr/include/x86_64-linux-gnu/bits/types/sigset_t.h :
+  /usr/include/x86_64-linux-gnu/bits/types/__sigset_t.h :
+  /usr/include/x86_64-linux-gnu/bits/types/struct_timeval.h :
+  /usr/include/x86_64-linux-gnu/bits/types/struct_timespec.h :
+  /usr/include/x86_64-linux-gnu/bits/select2.h :
+  /usr/include/x86_64-linux-gnu/sys/sysmacros.h :
+  /usr/include/x86_64-linux-gnu/bits/sysmacros.h :
+  /usr/include/x86_64-linux-gnu/bits/pthreadtypes.h :
+  /usr/include/x86_64-linux-gnu/bits/thread-shared-types.h :
+  /usr/include/x86_64-linux-gnu/bits/pthreadtypes-arch.h :
+  /usr/include/alloca.h /usr/include/x86_64-linux-gnu/bits/stdlib-float.h :
+  /usr/include/x86_64-linux-gnu/bits/stdlib.h ../py/runtime.h :
+  ../py/mpstate.h /usr/lib/gcc/x86_64-linux-gnu/7/include/stdint.h :
+  /usr/include/stdint.h /usr/include/x86_64-linux-gnu/bits/wchar.h :
+  /usr/include/x86_64-linux-gnu/bits/stdint-uintn.h ../py/mpconfig.h :
+  mpconfigport.h ../py/mpthread.h ../py/misc.h :
+  /usr/lib/gcc/x86_64-linux-gnu/7/include/stdbool.h ../py/nlr.h :
+  /usr/lib/gcc/x86_64-linux-gnu/7/include-fixed/limits.h :
+  /usr/lib/gcc/x86_64-linux-gnu/7/include-fixed/syslimits.h :
+  /usr/include/limits.h /usr/include/x86_64-linux-gnu/bits/posix1_lim.h :
+  /usr/include/x86_64-linux-gnu/bits/local_lim.h :
+  /usr/include/linux/limits.h :
+  /usr/include/x86_64-linux-gnu/bits/posix2_lim.h /usr/include/assert.h :
+  ../py/obj.h ../py/qstr.h build/genhdr/qstrdefs.generated.h :
+  ../py/mpprint.h ../py/runtime0.h ../py/objlist.h ../py/objexcept.h :
+  ../py/objtuple.h ../py/pystack.h :
Binary files MicorpythonOriginal1.12/micropython/mpy-cross/build/py/objboundmeth.o and micropython1.12_withUlab/micropython/mpy-cross/build/py/objboundmeth.o differ
diff -crNb MicorpythonOriginal1.12/micropython/mpy-cross/build/py/objboundmeth.P micropython1.12_withUlab/micropython/mpy-cross/build/py/objboundmeth.P
*** MicorpythonOriginal1.12/micropython/mpy-cross/build/py/objboundmeth.P	1970-01-01 02:00:00.000000000 +0200
--- micropython1.12_withUlab/micropython/mpy-cross/build/py/objboundmeth.P	2020-06-19 18:37:36.871561474 +0200
***************
*** 0 ****
--- 1,62 ----
+ build/py/objboundmeth.o: ../py/objboundmeth.c /usr/include/stdc-predef.h \
+  /usr/include/string.h \
+  /usr/include/x86_64-linux-gnu/bits/libc-header-start.h \
+  /usr/include/features.h /usr/include/x86_64-linux-gnu/sys/cdefs.h \
+  /usr/include/x86_64-linux-gnu/bits/wordsize.h \
+  /usr/include/x86_64-linux-gnu/bits/long-double.h \
+  /usr/include/x86_64-linux-gnu/gnu/stubs.h \
+  /usr/include/x86_64-linux-gnu/gnu/stubs-64.h \
+  /usr/lib/gcc/x86_64-linux-gnu/7/include/stddef.h \
+  /usr/include/x86_64-linux-gnu/bits/types/locale_t.h \
+  /usr/include/x86_64-linux-gnu/bits/types/__locale_t.h \
+  /usr/include/strings.h \
+  /usr/include/x86_64-linux-gnu/bits/strings_fortified.h \
+  /usr/include/x86_64-linux-gnu/bits/string_fortified.h ../py/obj.h \
+  ../py/mpconfig.h mpconfigport.h /usr/include/alloca.h \
+  /usr/lib/gcc/x86_64-linux-gnu/7/include/stdint.h /usr/include/stdint.h \
+  /usr/include/x86_64-linux-gnu/bits/types.h \
+  /usr/include/x86_64-linux-gnu/bits/typesizes.h \
+  /usr/include/x86_64-linux-gnu/bits/wchar.h \
+  /usr/include/x86_64-linux-gnu/bits/stdint-intn.h \
+  /usr/include/x86_64-linux-gnu/bits/stdint-uintn.h ../py/misc.h \
+  /usr/lib/gcc/x86_64-linux-gnu/7/include/stdbool.h ../py/qstr.h \
+  build/genhdr/qstrdefs.generated.h ../py/mpprint.h ../py/runtime0.h \
+  ../py/runtime.h ../py/mpstate.h ../py/mpthread.h ../py/nlr.h \
+  /usr/lib/gcc/x86_64-linux-gnu/7/include-fixed/limits.h \
+  /usr/lib/gcc/x86_64-linux-gnu/7/include-fixed/syslimits.h \
+  /usr/include/limits.h /usr/include/x86_64-linux-gnu/bits/posix1_lim.h \
+  /usr/include/x86_64-linux-gnu/bits/local_lim.h \
+  /usr/include/linux/limits.h \
+  /usr/include/x86_64-linux-gnu/bits/posix2_lim.h /usr/include/assert.h \
+  ../py/objlist.h ../py/objexcept.h ../py/objtuple.h ../py/pystack.h
+ ../py/objboundmeth.c /usr/include/stdc-predef.h :
+  /usr/include/string.h :
+  /usr/include/x86_64-linux-gnu/bits/libc-header-start.h :
+  /usr/include/features.h /usr/include/x86_64-linux-gnu/sys/cdefs.h :
+  /usr/include/x86_64-linux-gnu/bits/wordsize.h :
+  /usr/include/x86_64-linux-gnu/bits/long-double.h :
+  /usr/include/x86_64-linux-gnu/gnu/stubs.h :
+  /usr/include/x86_64-linux-gnu/gnu/stubs-64.h :
+  /usr/lib/gcc/x86_64-linux-gnu/7/include/stddef.h :
+  /usr/include/x86_64-linux-gnu/bits/types/locale_t.h :
+  /usr/include/x86_64-linux-gnu/bits/types/__locale_t.h :
+  /usr/include/strings.h :
+  /usr/include/x86_64-linux-gnu/bits/strings_fortified.h :
+  /usr/include/x86_64-linux-gnu/bits/string_fortified.h ../py/obj.h :
+  ../py/mpconfig.h mpconfigport.h /usr/include/alloca.h :
+  /usr/lib/gcc/x86_64-linux-gnu/7/include/stdint.h /usr/include/stdint.h :
+  /usr/include/x86_64-linux-gnu/bits/types.h :
+  /usr/include/x86_64-linux-gnu/bits/typesizes.h :
+  /usr/include/x86_64-linux-gnu/bits/wchar.h :
+  /usr/include/x86_64-linux-gnu/bits/stdint-intn.h :
+  /usr/include/x86_64-linux-gnu/bits/stdint-uintn.h ../py/misc.h :
+  /usr/lib/gcc/x86_64-linux-gnu/7/include/stdbool.h ../py/qstr.h :
+  build/genhdr/qstrdefs.generated.h ../py/mpprint.h ../py/runtime0.h :
+  ../py/runtime.h ../py/mpstate.h ../py/mpthread.h ../py/nlr.h :
+  /usr/lib/gcc/x86_64-linux-gnu/7/include-fixed/limits.h :
+  /usr/lib/gcc/x86_64-linux-gnu/7/include-fixed/syslimits.h :
+  /usr/include/limits.h /usr/include/x86_64-linux-gnu/bits/posix1_lim.h :
+  /usr/include/x86_64-linux-gnu/bits/local_lim.h :
+  /usr/include/linux/limits.h :
+  /usr/include/x86_64-linux-gnu/bits/posix2_lim.h /usr/include/assert.h :
+  ../py/objlist.h ../py/objexcept.h ../py/objtuple.h ../py/pystack.h :
Binary files MicorpythonOriginal1.12/micropython/mpy-cross/build/py/objcell.o and micropython1.12_withUlab/micropython/mpy-cross/build/py/objcell.o differ
diff -crNb MicorpythonOriginal1.12/micropython/mpy-cross/build/py/objcell.P micropython1.12_withUlab/micropython/mpy-cross/build/py/objcell.P
*** MicorpythonOriginal1.12/micropython/mpy-cross/build/py/objcell.P	1970-01-01 02:00:00.000000000 +0200
--- micropython1.12_withUlab/micropython/mpy-cross/build/py/objcell.P	2020-06-19 18:37:36.899560874 +0200
***************
*** 0 ****
--- 1,34 ----
+ build/py/objcell.o: ../py/objcell.c /usr/include/stdc-predef.h \
+  ../py/obj.h ../py/mpconfig.h mpconfigport.h /usr/include/alloca.h \
+  /usr/include/features.h /usr/include/x86_64-linux-gnu/sys/cdefs.h \
+  /usr/include/x86_64-linux-gnu/bits/wordsize.h \
+  /usr/include/x86_64-linux-gnu/bits/long-double.h \
+  /usr/include/x86_64-linux-gnu/gnu/stubs.h \
+  /usr/include/x86_64-linux-gnu/gnu/stubs-64.h \
+  /usr/lib/gcc/x86_64-linux-gnu/7/include/stddef.h \
+  /usr/lib/gcc/x86_64-linux-gnu/7/include/stdint.h /usr/include/stdint.h \
+  /usr/include/x86_64-linux-gnu/bits/libc-header-start.h \
+  /usr/include/x86_64-linux-gnu/bits/types.h \
+  /usr/include/x86_64-linux-gnu/bits/typesizes.h \
+  /usr/include/x86_64-linux-gnu/bits/wchar.h \
+  /usr/include/x86_64-linux-gnu/bits/stdint-intn.h \
+  /usr/include/x86_64-linux-gnu/bits/stdint-uintn.h ../py/misc.h \
+  /usr/lib/gcc/x86_64-linux-gnu/7/include/stdbool.h ../py/qstr.h \
+  build/genhdr/qstrdefs.generated.h ../py/mpprint.h ../py/runtime0.h
+ ../py/objcell.c /usr/include/stdc-predef.h :
+  ../py/obj.h ../py/mpconfig.h mpconfigport.h /usr/include/alloca.h :
+  /usr/include/features.h /usr/include/x86_64-linux-gnu/sys/cdefs.h :
+  /usr/include/x86_64-linux-gnu/bits/wordsize.h :
+  /usr/include/x86_64-linux-gnu/bits/long-double.h :
+  /usr/include/x86_64-linux-gnu/gnu/stubs.h :
+  /usr/include/x86_64-linux-gnu/gnu/stubs-64.h :
+  /usr/lib/gcc/x86_64-linux-gnu/7/include/stddef.h :
+  /usr/lib/gcc/x86_64-linux-gnu/7/include/stdint.h /usr/include/stdint.h :
+  /usr/include/x86_64-linux-gnu/bits/libc-header-start.h :
+  /usr/include/x86_64-linux-gnu/bits/types.h :
+  /usr/include/x86_64-linux-gnu/bits/typesizes.h :
+  /usr/include/x86_64-linux-gnu/bits/wchar.h :
+  /usr/include/x86_64-linux-gnu/bits/stdint-intn.h :
+  /usr/include/x86_64-linux-gnu/bits/stdint-uintn.h ../py/misc.h :
+  /usr/lib/gcc/x86_64-linux-gnu/7/include/stdbool.h ../py/qstr.h :
+  build/genhdr/qstrdefs.generated.h ../py/mpprint.h ../py/runtime0.h :
Binary files MicorpythonOriginal1.12/micropython/mpy-cross/build/py/objclosure.o and micropython1.12_withUlab/micropython/mpy-cross/build/py/objclosure.o differ
diff -crNb MicorpythonOriginal1.12/micropython/mpy-cross/build/py/objclosure.P micropython1.12_withUlab/micropython/mpy-cross/build/py/objclosure.P
*** MicorpythonOriginal1.12/micropython/mpy-cross/build/py/objclosure.P	1970-01-01 02:00:00.000000000 +0200
--- micropython1.12_withUlab/micropython/mpy-cross/build/py/objclosure.P	2020-06-19 18:37:36.931560187 +0200
***************
*** 0 ****
--- 1,62 ----
+ build/py/objclosure.o: ../py/objclosure.c /usr/include/stdc-predef.h \
+  /usr/include/string.h \
+  /usr/include/x86_64-linux-gnu/bits/libc-header-start.h \
+  /usr/include/features.h /usr/include/x86_64-linux-gnu/sys/cdefs.h \
+  /usr/include/x86_64-linux-gnu/bits/wordsize.h \
+  /usr/include/x86_64-linux-gnu/bits/long-double.h \
+  /usr/include/x86_64-linux-gnu/gnu/stubs.h \
+  /usr/include/x86_64-linux-gnu/gnu/stubs-64.h \
+  /usr/lib/gcc/x86_64-linux-gnu/7/include/stddef.h \
+  /usr/include/x86_64-linux-gnu/bits/types/locale_t.h \
+  /usr/include/x86_64-linux-gnu/bits/types/__locale_t.h \
+  /usr/include/strings.h \
+  /usr/include/x86_64-linux-gnu/bits/strings_fortified.h \
+  /usr/include/x86_64-linux-gnu/bits/string_fortified.h ../py/obj.h \
+  ../py/mpconfig.h mpconfigport.h /usr/include/alloca.h \
+  /usr/lib/gcc/x86_64-linux-gnu/7/include/stdint.h /usr/include/stdint.h \
+  /usr/include/x86_64-linux-gnu/bits/types.h \
+  /usr/include/x86_64-linux-gnu/bits/typesizes.h \
+  /usr/include/x86_64-linux-gnu/bits/wchar.h \
+  /usr/include/x86_64-linux-gnu/bits/stdint-intn.h \
+  /usr/include/x86_64-linux-gnu/bits/stdint-uintn.h ../py/misc.h \
+  /usr/lib/gcc/x86_64-linux-gnu/7/include/stdbool.h ../py/qstr.h \
+  build/genhdr/qstrdefs.generated.h ../py/mpprint.h ../py/runtime0.h \
+  ../py/runtime.h ../py/mpstate.h ../py/mpthread.h ../py/nlr.h \
+  /usr/lib/gcc/x86_64-linux-gnu/7/include-fixed/limits.h \
+  /usr/lib/gcc/x86_64-linux-gnu/7/include-fixed/syslimits.h \
+  /usr/include/limits.h /usr/include/x86_64-linux-gnu/bits/posix1_lim.h \
+  /usr/include/x86_64-linux-gnu/bits/local_lim.h \
+  /usr/include/linux/limits.h \
+  /usr/include/x86_64-linux-gnu/bits/posix2_lim.h /usr/include/assert.h \
+  ../py/objlist.h ../py/objexcept.h ../py/objtuple.h ../py/pystack.h
+ ../py/objclosure.c /usr/include/stdc-predef.h :
+  /usr/include/string.h :
+  /usr/include/x86_64-linux-gnu/bits/libc-header-start.h :
+  /usr/include/features.h /usr/include/x86_64-linux-gnu/sys/cdefs.h :
+  /usr/include/x86_64-linux-gnu/bits/wordsize.h :
+  /usr/include/x86_64-linux-gnu/bits/long-double.h :
+  /usr/include/x86_64-linux-gnu/gnu/stubs.h :
+  /usr/include/x86_64-linux-gnu/gnu/stubs-64.h :
+  /usr/lib/gcc/x86_64-linux-gnu/7/include/stddef.h :
+  /usr/include/x86_64-linux-gnu/bits/types/locale_t.h :
+  /usr/include/x86_64-linux-gnu/bits/types/__locale_t.h :
+  /usr/include/strings.h :
+  /usr/include/x86_64-linux-gnu/bits/strings_fortified.h :
+  /usr/include/x86_64-linux-gnu/bits/string_fortified.h ../py/obj.h :
+  ../py/mpconfig.h mpconfigport.h /usr/include/alloca.h :
+  /usr/lib/gcc/x86_64-linux-gnu/7/include/stdint.h /usr/include/stdint.h :
+  /usr/include/x86_64-linux-gnu/bits/types.h :
+  /usr/include/x86_64-linux-gnu/bits/typesizes.h :
+  /usr/include/x86_64-linux-gnu/bits/wchar.h :
+  /usr/include/x86_64-linux-gnu/bits/stdint-intn.h :
+  /usr/include/x86_64-linux-gnu/bits/stdint-uintn.h ../py/misc.h :
+  /usr/lib/gcc/x86_64-linux-gnu/7/include/stdbool.h ../py/qstr.h :
+  build/genhdr/qstrdefs.generated.h ../py/mpprint.h ../py/runtime0.h :
+  ../py/runtime.h ../py/mpstate.h ../py/mpthread.h ../py/nlr.h :
+  /usr/lib/gcc/x86_64-linux-gnu/7/include-fixed/limits.h :
+  /usr/lib/gcc/x86_64-linux-gnu/7/include-fixed/syslimits.h :
+  /usr/include/limits.h /usr/include/x86_64-linux-gnu/bits/posix1_lim.h :
+  /usr/include/x86_64-linux-gnu/bits/local_lim.h :
+  /usr/include/linux/limits.h :
+  /usr/include/x86_64-linux-gnu/bits/posix2_lim.h /usr/include/assert.h :
+  ../py/objlist.h ../py/objexcept.h ../py/objtuple.h ../py/pystack.h :
Binary files MicorpythonOriginal1.12/micropython/mpy-cross/build/py/objcomplex.o and micropython1.12_withUlab/micropython/mpy-cross/build/py/objcomplex.o differ
diff -crNb MicorpythonOriginal1.12/micropython/mpy-cross/build/py/objcomplex.P micropython1.12_withUlab/micropython/mpy-cross/build/py/objcomplex.P
*** MicorpythonOriginal1.12/micropython/mpy-cross/build/py/objcomplex.P	1970-01-01 02:00:00.000000000 +0200
--- micropython1.12_withUlab/micropython/mpy-cross/build/py/objcomplex.P	2020-06-19 18:37:36.987558986 +0200
***************
*** 0 ****
--- 1,142 ----
+ build/py/objcomplex.o: ../py/objcomplex.c /usr/include/stdc-predef.h \
+  /usr/include/stdlib.h \
+  /usr/include/x86_64-linux-gnu/bits/libc-header-start.h \
+  /usr/include/features.h /usr/include/x86_64-linux-gnu/sys/cdefs.h \
+  /usr/include/x86_64-linux-gnu/bits/wordsize.h \
+  /usr/include/x86_64-linux-gnu/bits/long-double.h \
+  /usr/include/x86_64-linux-gnu/gnu/stubs.h \
+  /usr/include/x86_64-linux-gnu/gnu/stubs-64.h \
+  /usr/lib/gcc/x86_64-linux-gnu/7/include/stddef.h \
+  /usr/include/x86_64-linux-gnu/bits/waitflags.h \
+  /usr/include/x86_64-linux-gnu/bits/waitstatus.h \
+  /usr/include/x86_64-linux-gnu/bits/floatn.h \
+  /usr/include/x86_64-linux-gnu/bits/floatn-common.h \
+  /usr/include/x86_64-linux-gnu/sys/types.h \
+  /usr/include/x86_64-linux-gnu/bits/types.h \
+  /usr/include/x86_64-linux-gnu/bits/typesizes.h \
+  /usr/include/x86_64-linux-gnu/bits/types/clock_t.h \
+  /usr/include/x86_64-linux-gnu/bits/types/clockid_t.h \
+  /usr/include/x86_64-linux-gnu/bits/types/time_t.h \
+  /usr/include/x86_64-linux-gnu/bits/types/timer_t.h \
+  /usr/include/x86_64-linux-gnu/bits/stdint-intn.h /usr/include/endian.h \
+  /usr/include/x86_64-linux-gnu/bits/endian.h \
+  /usr/include/x86_64-linux-gnu/bits/byteswap.h \
+  /usr/include/x86_64-linux-gnu/bits/byteswap-16.h \
+  /usr/include/x86_64-linux-gnu/bits/uintn-identity.h \
+  /usr/include/x86_64-linux-gnu/sys/select.h \
+  /usr/include/x86_64-linux-gnu/bits/select.h \
+  /usr/include/x86_64-linux-gnu/bits/types/sigset_t.h \
+  /usr/include/x86_64-linux-gnu/bits/types/__sigset_t.h \
+  /usr/include/x86_64-linux-gnu/bits/types/struct_timeval.h \
+  /usr/include/x86_64-linux-gnu/bits/types/struct_timespec.h \
+  /usr/include/x86_64-linux-gnu/bits/select2.h \
+  /usr/include/x86_64-linux-gnu/sys/sysmacros.h \
+  /usr/include/x86_64-linux-gnu/bits/sysmacros.h \
+  /usr/include/x86_64-linux-gnu/bits/pthreadtypes.h \
+  /usr/include/x86_64-linux-gnu/bits/thread-shared-types.h \
+  /usr/include/x86_64-linux-gnu/bits/pthreadtypes-arch.h \
+  /usr/include/alloca.h /usr/include/x86_64-linux-gnu/bits/stdlib-float.h \
+  /usr/include/x86_64-linux-gnu/bits/stdlib.h /usr/include/stdio.h \
+  /usr/include/x86_64-linux-gnu/bits/types/__FILE.h \
+  /usr/include/x86_64-linux-gnu/bits/types/FILE.h \
+  /usr/include/x86_64-linux-gnu/bits/libio.h \
+  /usr/include/x86_64-linux-gnu/bits/_G_config.h \
+  /usr/include/x86_64-linux-gnu/bits/types/__mbstate_t.h \
+  /usr/lib/gcc/x86_64-linux-gnu/7/include/stdarg.h \
+  /usr/include/x86_64-linux-gnu/bits/stdio_lim.h \
+  /usr/include/x86_64-linux-gnu/bits/sys_errlist.h \
+  /usr/include/x86_64-linux-gnu/bits/stdio2.h /usr/include/assert.h \
+  ../py/parsenum.h ../py/mpconfig.h mpconfigport.h \
+  /usr/lib/gcc/x86_64-linux-gnu/7/include/stdint.h /usr/include/stdint.h \
+  /usr/include/x86_64-linux-gnu/bits/wchar.h \
+  /usr/include/x86_64-linux-gnu/bits/stdint-uintn.h ../py/lexer.h \
+  ../py/qstr.h ../py/misc.h \
+  /usr/lib/gcc/x86_64-linux-gnu/7/include/stdbool.h \
+  build/genhdr/qstrdefs.generated.h ../py/reader.h ../py/obj.h \
+  ../py/mpprint.h ../py/runtime0.h ../py/runtime.h ../py/mpstate.h \
+  ../py/mpthread.h ../py/nlr.h \
+  /usr/lib/gcc/x86_64-linux-gnu/7/include-fixed/limits.h \
+  /usr/lib/gcc/x86_64-linux-gnu/7/include-fixed/syslimits.h \
+  /usr/include/limits.h /usr/include/x86_64-linux-gnu/bits/posix1_lim.h \
+  /usr/include/x86_64-linux-gnu/bits/local_lim.h \
+  /usr/include/linux/limits.h \
+  /usr/include/x86_64-linux-gnu/bits/posix2_lim.h ../py/objlist.h \
+  ../py/objexcept.h ../py/objtuple.h ../py/pystack.h /usr/include/math.h \
+  /usr/include/x86_64-linux-gnu/bits/math-vector.h \
+  /usr/include/x86_64-linux-gnu/bits/libm-simd-decl-stubs.h \
+  /usr/include/x86_64-linux-gnu/bits/flt-eval-method.h \
+  /usr/include/x86_64-linux-gnu/bits/fp-logb.h \
+  /usr/include/x86_64-linux-gnu/bits/fp-fast.h \
+  /usr/include/x86_64-linux-gnu/bits/mathcalls-helper-functions.h \
+  /usr/include/x86_64-linux-gnu/bits/mathcalls.h ../py/formatfloat.h
+ ../py/objcomplex.c /usr/include/stdc-predef.h :
+  /usr/include/stdlib.h :
+  /usr/include/x86_64-linux-gnu/bits/libc-header-start.h :
+  /usr/include/features.h /usr/include/x86_64-linux-gnu/sys/cdefs.h :
+  /usr/include/x86_64-linux-gnu/bits/wordsize.h :
+  /usr/include/x86_64-linux-gnu/bits/long-double.h :
+  /usr/include/x86_64-linux-gnu/gnu/stubs.h :
+  /usr/include/x86_64-linux-gnu/gnu/stubs-64.h :
+  /usr/lib/gcc/x86_64-linux-gnu/7/include/stddef.h :
+  /usr/include/x86_64-linux-gnu/bits/waitflags.h :
+  /usr/include/x86_64-linux-gnu/bits/waitstatus.h :
+  /usr/include/x86_64-linux-gnu/bits/floatn.h :
+  /usr/include/x86_64-linux-gnu/bits/floatn-common.h :
+  /usr/include/x86_64-linux-gnu/sys/types.h :
+  /usr/include/x86_64-linux-gnu/bits/types.h :
+  /usr/include/x86_64-linux-gnu/bits/typesizes.h :
+  /usr/include/x86_64-linux-gnu/bits/types/clock_t.h :
+  /usr/include/x86_64-linux-gnu/bits/types/clockid_t.h :
+  /usr/include/x86_64-linux-gnu/bits/types/time_t.h :
+  /usr/include/x86_64-linux-gnu/bits/types/timer_t.h :
+  /usr/include/x86_64-linux-gnu/bits/stdint-intn.h /usr/include/endian.h :
+  /usr/include/x86_64-linux-gnu/bits/endian.h :
+  /usr/include/x86_64-linux-gnu/bits/byteswap.h :
+  /usr/include/x86_64-linux-gnu/bits/byteswap-16.h :
+  /usr/include/x86_64-linux-gnu/bits/uintn-identity.h :
+  /usr/include/x86_64-linux-gnu/sys/select.h :
+  /usr/include/x86_64-linux-gnu/bits/select.h :
+  /usr/include/x86_64-linux-gnu/bits/types/sigset_t.h :
+  /usr/include/x86_64-linux-gnu/bits/types/__sigset_t.h :
+  /usr/include/x86_64-linux-gnu/bits/types/struct_timeval.h :
+  /usr/include/x86_64-linux-gnu/bits/types/struct_timespec.h :
+  /usr/include/x86_64-linux-gnu/bits/select2.h :
+  /usr/include/x86_64-linux-gnu/sys/sysmacros.h :
+  /usr/include/x86_64-linux-gnu/bits/sysmacros.h :
+  /usr/include/x86_64-linux-gnu/bits/pthreadtypes.h :
+  /usr/include/x86_64-linux-gnu/bits/thread-shared-types.h :
+  /usr/include/x86_64-linux-gnu/bits/pthreadtypes-arch.h :
+  /usr/include/alloca.h /usr/include/x86_64-linux-gnu/bits/stdlib-float.h :
+  /usr/include/x86_64-linux-gnu/bits/stdlib.h /usr/include/stdio.h :
+  /usr/include/x86_64-linux-gnu/bits/types/__FILE.h :
+  /usr/include/x86_64-linux-gnu/bits/types/FILE.h :
+  /usr/include/x86_64-linux-gnu/bits/libio.h :
+  /usr/include/x86_64-linux-gnu/bits/_G_config.h :
+  /usr/include/x86_64-linux-gnu/bits/types/__mbstate_t.h :
+  /usr/lib/gcc/x86_64-linux-gnu/7/include/stdarg.h :
+  /usr/include/x86_64-linux-gnu/bits/stdio_lim.h :
+  /usr/include/x86_64-linux-gnu/bits/sys_errlist.h :
+  /usr/include/x86_64-linux-gnu/bits/stdio2.h /usr/include/assert.h :
+  ../py/parsenum.h ../py/mpconfig.h mpconfigport.h :
+  /usr/lib/gcc/x86_64-linux-gnu/7/include/stdint.h /usr/include/stdint.h :
+  /usr/include/x86_64-linux-gnu/bits/wchar.h :
+  /usr/include/x86_64-linux-gnu/bits/stdint-uintn.h ../py/lexer.h :
+  ../py/qstr.h ../py/misc.h :
+  /usr/lib/gcc/x86_64-linux-gnu/7/include/stdbool.h :
+  build/genhdr/qstrdefs.generated.h ../py/reader.h ../py/obj.h :
+  ../py/mpprint.h ../py/runtime0.h ../py/runtime.h ../py/mpstate.h :
+  ../py/mpthread.h ../py/nlr.h :
+  /usr/lib/gcc/x86_64-linux-gnu/7/include-fixed/limits.h :
+  /usr/lib/gcc/x86_64-linux-gnu/7/include-fixed/syslimits.h :
+  /usr/include/limits.h /usr/include/x86_64-linux-gnu/bits/posix1_lim.h :
+  /usr/include/x86_64-linux-gnu/bits/local_lim.h :
+  /usr/include/linux/limits.h :
+  /usr/include/x86_64-linux-gnu/bits/posix2_lim.h ../py/objlist.h :
+  ../py/objexcept.h ../py/objtuple.h ../py/pystack.h /usr/include/math.h :
+  /usr/include/x86_64-linux-gnu/bits/math-vector.h :
+  /usr/include/x86_64-linux-gnu/bits/libm-simd-decl-stubs.h :
+  /usr/include/x86_64-linux-gnu/bits/flt-eval-method.h :
+  /usr/include/x86_64-linux-gnu/bits/fp-logb.h :
+  /usr/include/x86_64-linux-gnu/bits/fp-fast.h :
+  /usr/include/x86_64-linux-gnu/bits/mathcalls-helper-functions.h :
+  /usr/include/x86_64-linux-gnu/bits/mathcalls.h ../py/formatfloat.h :
Binary files MicorpythonOriginal1.12/micropython/mpy-cross/build/py/objdeque.o and micropython1.12_withUlab/micropython/mpy-cross/build/py/objdeque.o differ
diff -crNb MicorpythonOriginal1.12/micropython/mpy-cross/build/py/objdeque.P micropython1.12_withUlab/micropython/mpy-cross/build/py/objdeque.P
*** MicorpythonOriginal1.12/micropython/mpy-cross/build/py/objdeque.P	1970-01-01 02:00:00.000000000 +0200
--- micropython1.12_withUlab/micropython/mpy-cross/build/py/objdeque.P	2020-06-14 15:06:53.803484902 +0200
***************
*** 0 ****
--- 1,54 ----
+ build/py/objdeque.o: ../py/objdeque.c /usr/include/stdc-predef.h \
+  /usr/include/unistd.h /usr/include/features.h \
+  /usr/include/x86_64-linux-gnu/sys/cdefs.h \
+  /usr/include/x86_64-linux-gnu/bits/wordsize.h \
+  /usr/include/x86_64-linux-gnu/bits/long-double.h \
+  /usr/include/x86_64-linux-gnu/gnu/stubs.h \
+  /usr/include/x86_64-linux-gnu/gnu/stubs-64.h \
+  /usr/include/x86_64-linux-gnu/bits/posix_opt.h \
+  /usr/include/x86_64-linux-gnu/bits/environments.h \
+  /usr/include/x86_64-linux-gnu/bits/types.h \
+  /usr/include/x86_64-linux-gnu/bits/typesizes.h \
+  /usr/lib/gcc/x86_64-linux-gnu/7/include/stddef.h \
+  /usr/include/x86_64-linux-gnu/bits/confname.h \
+  /usr/include/x86_64-linux-gnu/bits/getopt_posix.h \
+  /usr/include/x86_64-linux-gnu/bits/getopt_core.h \
+  /usr/include/x86_64-linux-gnu/bits/unistd.h /usr/include/string.h \
+  /usr/include/x86_64-linux-gnu/bits/libc-header-start.h \
+  /usr/include/x86_64-linux-gnu/bits/types/locale_t.h \
+  /usr/include/x86_64-linux-gnu/bits/types/__locale_t.h \
+  /usr/include/strings.h \
+  /usr/include/x86_64-linux-gnu/bits/strings_fortified.h \
+  /usr/include/x86_64-linux-gnu/bits/string_fortified.h ../py/mpconfig.h \
+  mpconfigport.h /usr/include/alloca.h \
+  /usr/lib/gcc/x86_64-linux-gnu/7/include/stdint.h /usr/include/stdint.h \
+  /usr/include/x86_64-linux-gnu/bits/wchar.h \
+  /usr/include/x86_64-linux-gnu/bits/stdint-intn.h \
+  /usr/include/x86_64-linux-gnu/bits/stdint-uintn.h
+ ../py/objdeque.c /usr/include/stdc-predef.h :
+  /usr/include/unistd.h /usr/include/features.h :
+  /usr/include/x86_64-linux-gnu/sys/cdefs.h :
+  /usr/include/x86_64-linux-gnu/bits/wordsize.h :
+  /usr/include/x86_64-linux-gnu/bits/long-double.h :
+  /usr/include/x86_64-linux-gnu/gnu/stubs.h :
+  /usr/include/x86_64-linux-gnu/gnu/stubs-64.h :
+  /usr/include/x86_64-linux-gnu/bits/posix_opt.h :
+  /usr/include/x86_64-linux-gnu/bits/environments.h :
+  /usr/include/x86_64-linux-gnu/bits/types.h :
+  /usr/include/x86_64-linux-gnu/bits/typesizes.h :
+  /usr/lib/gcc/x86_64-linux-gnu/7/include/stddef.h :
+  /usr/include/x86_64-linux-gnu/bits/confname.h :
+  /usr/include/x86_64-linux-gnu/bits/getopt_posix.h :
+  /usr/include/x86_64-linux-gnu/bits/getopt_core.h :
+  /usr/include/x86_64-linux-gnu/bits/unistd.h /usr/include/string.h :
+  /usr/include/x86_64-linux-gnu/bits/libc-header-start.h :
+  /usr/include/x86_64-linux-gnu/bits/types/locale_t.h :
+  /usr/include/x86_64-linux-gnu/bits/types/__locale_t.h :
+  /usr/include/strings.h :
+  /usr/include/x86_64-linux-gnu/bits/strings_fortified.h :
+  /usr/include/x86_64-linux-gnu/bits/string_fortified.h ../py/mpconfig.h :
+  mpconfigport.h /usr/include/alloca.h :
+  /usr/lib/gcc/x86_64-linux-gnu/7/include/stdint.h /usr/include/stdint.h :
+  /usr/include/x86_64-linux-gnu/bits/wchar.h :
+  /usr/include/x86_64-linux-gnu/bits/stdint-intn.h :
+  /usr/include/x86_64-linux-gnu/bits/stdint-uintn.h :
Binary files MicorpythonOriginal1.12/micropython/mpy-cross/build/py/objdict.o and micropython1.12_withUlab/micropython/mpy-cross/build/py/objdict.o differ
diff -crNb MicorpythonOriginal1.12/micropython/mpy-cross/build/py/objdict.P micropython1.12_withUlab/micropython/mpy-cross/build/py/objdict.P
*** MicorpythonOriginal1.12/micropython/mpy-cross/build/py/objdict.P	1970-01-01 02:00:00.000000000 +0200
--- micropython1.12_withUlab/micropython/mpy-cross/build/py/objdict.P	2020-06-19 19:54:02.273490874 +0200
***************
*** 0 ****
--- 1,64 ----
+ build/py/objdict.o: ../py/objdict.c /usr/include/stdc-predef.h \
+  /usr/include/string.h \
+  /usr/include/x86_64-linux-gnu/bits/libc-header-start.h \
+  /usr/include/features.h /usr/include/x86_64-linux-gnu/sys/cdefs.h \
+  /usr/include/x86_64-linux-gnu/bits/wordsize.h \
+  /usr/include/x86_64-linux-gnu/bits/long-double.h \
+  /usr/include/x86_64-linux-gnu/gnu/stubs.h \
+  /usr/include/x86_64-linux-gnu/gnu/stubs-64.h \
+  /usr/lib/gcc/x86_64-linux-gnu/7/include/stddef.h \
+  /usr/include/x86_64-linux-gnu/bits/types/locale_t.h \
+  /usr/include/x86_64-linux-gnu/bits/types/__locale_t.h \
+  /usr/include/strings.h \
+  /usr/include/x86_64-linux-gnu/bits/strings_fortified.h \
+  /usr/include/x86_64-linux-gnu/bits/string_fortified.h \
+  /usr/include/assert.h ../py/runtime.h ../py/mpstate.h \
+  /usr/lib/gcc/x86_64-linux-gnu/7/include/stdint.h /usr/include/stdint.h \
+  /usr/include/x86_64-linux-gnu/bits/types.h \
+  /usr/include/x86_64-linux-gnu/bits/typesizes.h \
+  /usr/include/x86_64-linux-gnu/bits/wchar.h \
+  /usr/include/x86_64-linux-gnu/bits/stdint-intn.h \
+  /usr/include/x86_64-linux-gnu/bits/stdint-uintn.h ../py/mpconfig.h \
+  mpconfigport.h /usr/include/alloca.h ../py/mpthread.h ../py/misc.h \
+  /usr/lib/gcc/x86_64-linux-gnu/7/include/stdbool.h ../py/nlr.h \
+  /usr/lib/gcc/x86_64-linux-gnu/7/include-fixed/limits.h \
+  /usr/lib/gcc/x86_64-linux-gnu/7/include-fixed/syslimits.h \
+  /usr/include/limits.h /usr/include/x86_64-linux-gnu/bits/posix1_lim.h \
+  /usr/include/x86_64-linux-gnu/bits/local_lim.h \
+  /usr/include/linux/limits.h \
+  /usr/include/x86_64-linux-gnu/bits/posix2_lim.h ../py/obj.h ../py/qstr.h \
+  build/genhdr/qstrdefs.generated.h ../py/mpprint.h ../py/runtime0.h \
+  ../py/objlist.h ../py/objexcept.h ../py/objtuple.h ../py/pystack.h \
+  ../py/builtin.h ../py/objtype.h ../py/objstr.h
+ ../py/objdict.c /usr/include/stdc-predef.h :
+  /usr/include/string.h :
+  /usr/include/x86_64-linux-gnu/bits/libc-header-start.h :
+  /usr/include/features.h /usr/include/x86_64-linux-gnu/sys/cdefs.h :
+  /usr/include/x86_64-linux-gnu/bits/wordsize.h :
+  /usr/include/x86_64-linux-gnu/bits/long-double.h :
+  /usr/include/x86_64-linux-gnu/gnu/stubs.h :
+  /usr/include/x86_64-linux-gnu/gnu/stubs-64.h :
+  /usr/lib/gcc/x86_64-linux-gnu/7/include/stddef.h :
+  /usr/include/x86_64-linux-gnu/bits/types/locale_t.h :
+  /usr/include/x86_64-linux-gnu/bits/types/__locale_t.h :
+  /usr/include/strings.h :
+  /usr/include/x86_64-linux-gnu/bits/strings_fortified.h :
+  /usr/include/x86_64-linux-gnu/bits/string_fortified.h :
+  /usr/include/assert.h ../py/runtime.h ../py/mpstate.h :
+  /usr/lib/gcc/x86_64-linux-gnu/7/include/stdint.h /usr/include/stdint.h :
+  /usr/include/x86_64-linux-gnu/bits/types.h :
+  /usr/include/x86_64-linux-gnu/bits/typesizes.h :
+  /usr/include/x86_64-linux-gnu/bits/wchar.h :
+  /usr/include/x86_64-linux-gnu/bits/stdint-intn.h :
+  /usr/include/x86_64-linux-gnu/bits/stdint-uintn.h ../py/mpconfig.h :
+  mpconfigport.h /usr/include/alloca.h ../py/mpthread.h ../py/misc.h :
+  /usr/lib/gcc/x86_64-linux-gnu/7/include/stdbool.h ../py/nlr.h :
+  /usr/lib/gcc/x86_64-linux-gnu/7/include-fixed/limits.h :
+  /usr/lib/gcc/x86_64-linux-gnu/7/include-fixed/syslimits.h :
+  /usr/include/limits.h /usr/include/x86_64-linux-gnu/bits/posix1_lim.h :
+  /usr/include/x86_64-linux-gnu/bits/local_lim.h :
+  /usr/include/linux/limits.h :
+  /usr/include/x86_64-linux-gnu/bits/posix2_lim.h ../py/obj.h ../py/qstr.h :
+  build/genhdr/qstrdefs.generated.h ../py/mpprint.h ../py/runtime0.h :
+  ../py/objlist.h ../py/objexcept.h ../py/objtuple.h ../py/pystack.h :
+  ../py/builtin.h ../py/objtype.h ../py/objstr.h :
Binary files MicorpythonOriginal1.12/micropython/mpy-cross/build/py/objenumerate.o and micropython1.12_withUlab/micropython/mpy-cross/build/py/objenumerate.o differ
diff -crNb MicorpythonOriginal1.12/micropython/mpy-cross/build/py/objenumerate.P micropython1.12_withUlab/micropython/mpy-cross/build/py/objenumerate.P
*** MicorpythonOriginal1.12/micropython/mpy-cross/build/py/objenumerate.P	1970-01-01 02:00:00.000000000 +0200
--- micropython1.12_withUlab/micropython/mpy-cross/build/py/objenumerate.P	2020-06-19 18:37:37.091556762 +0200
***************
*** 0 ****
--- 1,106 ----
+ build/py/objenumerate.o: ../py/objenumerate.c /usr/include/stdc-predef.h \
+  /usr/include/stdlib.h \
+  /usr/include/x86_64-linux-gnu/bits/libc-header-start.h \
+  /usr/include/features.h /usr/include/x86_64-linux-gnu/sys/cdefs.h \
+  /usr/include/x86_64-linux-gnu/bits/wordsize.h \
+  /usr/include/x86_64-linux-gnu/bits/long-double.h \
+  /usr/include/x86_64-linux-gnu/gnu/stubs.h \
+  /usr/include/x86_64-linux-gnu/gnu/stubs-64.h \
+  /usr/lib/gcc/x86_64-linux-gnu/7/include/stddef.h \
+  /usr/include/x86_64-linux-gnu/bits/waitflags.h \
+  /usr/include/x86_64-linux-gnu/bits/waitstatus.h \
+  /usr/include/x86_64-linux-gnu/bits/floatn.h \
+  /usr/include/x86_64-linux-gnu/bits/floatn-common.h \
+  /usr/include/x86_64-linux-gnu/sys/types.h \
+  /usr/include/x86_64-linux-gnu/bits/types.h \
+  /usr/include/x86_64-linux-gnu/bits/typesizes.h \
+  /usr/include/x86_64-linux-gnu/bits/types/clock_t.h \
+  /usr/include/x86_64-linux-gnu/bits/types/clockid_t.h \
+  /usr/include/x86_64-linux-gnu/bits/types/time_t.h \
+  /usr/include/x86_64-linux-gnu/bits/types/timer_t.h \
+  /usr/include/x86_64-linux-gnu/bits/stdint-intn.h /usr/include/endian.h \
+  /usr/include/x86_64-linux-gnu/bits/endian.h \
+  /usr/include/x86_64-linux-gnu/bits/byteswap.h \
+  /usr/include/x86_64-linux-gnu/bits/byteswap-16.h \
+  /usr/include/x86_64-linux-gnu/bits/uintn-identity.h \
+  /usr/include/x86_64-linux-gnu/sys/select.h \
+  /usr/include/x86_64-linux-gnu/bits/select.h \
+  /usr/include/x86_64-linux-gnu/bits/types/sigset_t.h \
+  /usr/include/x86_64-linux-gnu/bits/types/__sigset_t.h \
+  /usr/include/x86_64-linux-gnu/bits/types/struct_timeval.h \
+  /usr/include/x86_64-linux-gnu/bits/types/struct_timespec.h \
+  /usr/include/x86_64-linux-gnu/bits/select2.h \
+  /usr/include/x86_64-linux-gnu/sys/sysmacros.h \
+  /usr/include/x86_64-linux-gnu/bits/sysmacros.h \
+  /usr/include/x86_64-linux-gnu/bits/pthreadtypes.h \
+  /usr/include/x86_64-linux-gnu/bits/thread-shared-types.h \
+  /usr/include/x86_64-linux-gnu/bits/pthreadtypes-arch.h \
+  /usr/include/alloca.h /usr/include/x86_64-linux-gnu/bits/stdlib-float.h \
+  /usr/include/x86_64-linux-gnu/bits/stdlib.h /usr/include/assert.h \
+  ../py/runtime.h ../py/mpstate.h \
+  /usr/lib/gcc/x86_64-linux-gnu/7/include/stdint.h /usr/include/stdint.h \
+  /usr/include/x86_64-linux-gnu/bits/wchar.h \
+  /usr/include/x86_64-linux-gnu/bits/stdint-uintn.h ../py/mpconfig.h \
+  mpconfigport.h ../py/mpthread.h ../py/misc.h \
+  /usr/lib/gcc/x86_64-linux-gnu/7/include/stdbool.h ../py/nlr.h \
+  /usr/lib/gcc/x86_64-linux-gnu/7/include-fixed/limits.h \
+  /usr/lib/gcc/x86_64-linux-gnu/7/include-fixed/syslimits.h \
+  /usr/include/limits.h /usr/include/x86_64-linux-gnu/bits/posix1_lim.h \
+  /usr/include/x86_64-linux-gnu/bits/local_lim.h \
+  /usr/include/linux/limits.h \
+  /usr/include/x86_64-linux-gnu/bits/posix2_lim.h ../py/obj.h ../py/qstr.h \
+  build/genhdr/qstrdefs.generated.h ../py/mpprint.h ../py/runtime0.h \
+  ../py/objlist.h ../py/objexcept.h ../py/objtuple.h ../py/pystack.h
+ ../py/objenumerate.c /usr/include/stdc-predef.h :
+  /usr/include/stdlib.h :
+  /usr/include/x86_64-linux-gnu/bits/libc-header-start.h :
+  /usr/include/features.h /usr/include/x86_64-linux-gnu/sys/cdefs.h :
+  /usr/include/x86_64-linux-gnu/bits/wordsize.h :
+  /usr/include/x86_64-linux-gnu/bits/long-double.h :
+  /usr/include/x86_64-linux-gnu/gnu/stubs.h :
+  /usr/include/x86_64-linux-gnu/gnu/stubs-64.h :
+  /usr/lib/gcc/x86_64-linux-gnu/7/include/stddef.h :
+  /usr/include/x86_64-linux-gnu/bits/waitflags.h :
+  /usr/include/x86_64-linux-gnu/bits/waitstatus.h :
+  /usr/include/x86_64-linux-gnu/bits/floatn.h :
+  /usr/include/x86_64-linux-gnu/bits/floatn-common.h :
+  /usr/include/x86_64-linux-gnu/sys/types.h :
+  /usr/include/x86_64-linux-gnu/bits/types.h :
+  /usr/include/x86_64-linux-gnu/bits/typesizes.h :
+  /usr/include/x86_64-linux-gnu/bits/types/clock_t.h :
+  /usr/include/x86_64-linux-gnu/bits/types/clockid_t.h :
+  /usr/include/x86_64-linux-gnu/bits/types/time_t.h :
+  /usr/include/x86_64-linux-gnu/bits/types/timer_t.h :
+  /usr/include/x86_64-linux-gnu/bits/stdint-intn.h /usr/include/endian.h :
+  /usr/include/x86_64-linux-gnu/bits/endian.h :
+  /usr/include/x86_64-linux-gnu/bits/byteswap.h :
+  /usr/include/x86_64-linux-gnu/bits/byteswap-16.h :
+  /usr/include/x86_64-linux-gnu/bits/uintn-identity.h :
+  /usr/include/x86_64-linux-gnu/sys/select.h :
+  /usr/include/x86_64-linux-gnu/bits/select.h :
+  /usr/include/x86_64-linux-gnu/bits/types/sigset_t.h :
+  /usr/include/x86_64-linux-gnu/bits/types/__sigset_t.h :
+  /usr/include/x86_64-linux-gnu/bits/types/struct_timeval.h :
+  /usr/include/x86_64-linux-gnu/bits/types/struct_timespec.h :
+  /usr/include/x86_64-linux-gnu/bits/select2.h :
+  /usr/include/x86_64-linux-gnu/sys/sysmacros.h :
+  /usr/include/x86_64-linux-gnu/bits/sysmacros.h :
+  /usr/include/x86_64-linux-gnu/bits/pthreadtypes.h :
+  /usr/include/x86_64-linux-gnu/bits/thread-shared-types.h :
+  /usr/include/x86_64-linux-gnu/bits/pthreadtypes-arch.h :
+  /usr/include/alloca.h /usr/include/x86_64-linux-gnu/bits/stdlib-float.h :
+  /usr/include/x86_64-linux-gnu/bits/stdlib.h /usr/include/assert.h :
+  ../py/runtime.h ../py/mpstate.h :
+  /usr/lib/gcc/x86_64-linux-gnu/7/include/stdint.h /usr/include/stdint.h :
+  /usr/include/x86_64-linux-gnu/bits/wchar.h :
+  /usr/include/x86_64-linux-gnu/bits/stdint-uintn.h ../py/mpconfig.h :
+  mpconfigport.h ../py/mpthread.h ../py/misc.h :
+  /usr/lib/gcc/x86_64-linux-gnu/7/include/stdbool.h ../py/nlr.h :
+  /usr/lib/gcc/x86_64-linux-gnu/7/include-fixed/limits.h :
+  /usr/lib/gcc/x86_64-linux-gnu/7/include-fixed/syslimits.h :
+  /usr/include/limits.h /usr/include/x86_64-linux-gnu/bits/posix1_lim.h :
+  /usr/include/x86_64-linux-gnu/bits/local_lim.h :
+  /usr/include/linux/limits.h :
+  /usr/include/x86_64-linux-gnu/bits/posix2_lim.h ../py/obj.h ../py/qstr.h :
+  build/genhdr/qstrdefs.generated.h ../py/mpprint.h ../py/runtime0.h :
+  ../py/objlist.h ../py/objexcept.h ../py/objtuple.h ../py/pystack.h :
Binary files MicorpythonOriginal1.12/micropython/mpy-cross/build/py/objexcept.o and micropython1.12_withUlab/micropython/mpy-cross/build/py/objexcept.o differ
diff -crNb MicorpythonOriginal1.12/micropython/mpy-cross/build/py/objexcept.P micropython1.12_withUlab/micropython/mpy-cross/build/py/objexcept.P
*** MicorpythonOriginal1.12/micropython/mpy-cross/build/py/objexcept.P	1970-01-01 02:00:00.000000000 +0200
--- micropython1.12_withUlab/micropython/mpy-cross/build/py/objexcept.P	2020-06-19 18:37:37.151555478 +0200
***************
*** 0 ****
--- 1,88 ----
+ build/py/objexcept.o: ../py/objexcept.c /usr/include/stdc-predef.h \
+  /usr/include/string.h \
+  /usr/include/x86_64-linux-gnu/bits/libc-header-start.h \
+  /usr/include/features.h /usr/include/x86_64-linux-gnu/sys/cdefs.h \
+  /usr/include/x86_64-linux-gnu/bits/wordsize.h \
+  /usr/include/x86_64-linux-gnu/bits/long-double.h \
+  /usr/include/x86_64-linux-gnu/gnu/stubs.h \
+  /usr/include/x86_64-linux-gnu/gnu/stubs-64.h \
+  /usr/lib/gcc/x86_64-linux-gnu/7/include/stddef.h \
+  /usr/include/x86_64-linux-gnu/bits/types/locale_t.h \
+  /usr/include/x86_64-linux-gnu/bits/types/__locale_t.h \
+  /usr/include/strings.h \
+  /usr/include/x86_64-linux-gnu/bits/strings_fortified.h \
+  /usr/include/x86_64-linux-gnu/bits/string_fortified.h \
+  /usr/lib/gcc/x86_64-linux-gnu/7/include/stdarg.h /usr/include/assert.h \
+  /usr/include/stdio.h /usr/include/x86_64-linux-gnu/bits/types.h \
+  /usr/include/x86_64-linux-gnu/bits/typesizes.h \
+  /usr/include/x86_64-linux-gnu/bits/types/__FILE.h \
+  /usr/include/x86_64-linux-gnu/bits/types/FILE.h \
+  /usr/include/x86_64-linux-gnu/bits/libio.h \
+  /usr/include/x86_64-linux-gnu/bits/_G_config.h \
+  /usr/include/x86_64-linux-gnu/bits/types/__mbstate_t.h \
+  /usr/include/x86_64-linux-gnu/bits/stdio_lim.h \
+  /usr/include/x86_64-linux-gnu/bits/sys_errlist.h \
+  /usr/include/x86_64-linux-gnu/bits/stdio2.h ../py/objlist.h ../py/obj.h \
+  ../py/mpconfig.h mpconfigport.h /usr/include/alloca.h \
+  /usr/lib/gcc/x86_64-linux-gnu/7/include/stdint.h /usr/include/stdint.h \
+  /usr/include/x86_64-linux-gnu/bits/wchar.h \
+  /usr/include/x86_64-linux-gnu/bits/stdint-intn.h \
+  /usr/include/x86_64-linux-gnu/bits/stdint-uintn.h ../py/misc.h \
+  /usr/lib/gcc/x86_64-linux-gnu/7/include/stdbool.h ../py/qstr.h \
+  build/genhdr/qstrdefs.generated.h ../py/mpprint.h ../py/runtime0.h \
+  ../py/objstr.h ../py/objtuple.h ../py/objtype.h ../py/runtime.h \
+  ../py/mpstate.h ../py/mpthread.h ../py/nlr.h \
+  /usr/lib/gcc/x86_64-linux-gnu/7/include-fixed/limits.h \
+  /usr/lib/gcc/x86_64-linux-gnu/7/include-fixed/syslimits.h \
+  /usr/include/limits.h /usr/include/x86_64-linux-gnu/bits/posix1_lim.h \
+  /usr/include/x86_64-linux-gnu/bits/local_lim.h \
+  /usr/include/linux/limits.h \
+  /usr/include/x86_64-linux-gnu/bits/posix2_lim.h ../py/objexcept.h \
+  ../py/pystack.h ../py/gc.h ../py/mperrno.h /usr/include/errno.h \
+  /usr/include/x86_64-linux-gnu/bits/errno.h /usr/include/linux/errno.h \
+  /usr/include/x86_64-linux-gnu/asm/errno.h \
+  /usr/include/asm-generic/errno.h /usr/include/asm-generic/errno-base.h
+ ../py/objexcept.c /usr/include/stdc-predef.h :
+  /usr/include/string.h :
+  /usr/include/x86_64-linux-gnu/bits/libc-header-start.h :
+  /usr/include/features.h /usr/include/x86_64-linux-gnu/sys/cdefs.h :
+  /usr/include/x86_64-linux-gnu/bits/wordsize.h :
+  /usr/include/x86_64-linux-gnu/bits/long-double.h :
+  /usr/include/x86_64-linux-gnu/gnu/stubs.h :
+  /usr/include/x86_64-linux-gnu/gnu/stubs-64.h :
+  /usr/lib/gcc/x86_64-linux-gnu/7/include/stddef.h :
+  /usr/include/x86_64-linux-gnu/bits/types/locale_t.h :
+  /usr/include/x86_64-linux-gnu/bits/types/__locale_t.h :
+  /usr/include/strings.h :
+  /usr/include/x86_64-linux-gnu/bits/strings_fortified.h :
+  /usr/include/x86_64-linux-gnu/bits/string_fortified.h :
+  /usr/lib/gcc/x86_64-linux-gnu/7/include/stdarg.h /usr/include/assert.h :
+  /usr/include/stdio.h /usr/include/x86_64-linux-gnu/bits/types.h :
+  /usr/include/x86_64-linux-gnu/bits/typesizes.h :
+  /usr/include/x86_64-linux-gnu/bits/types/__FILE.h :
+  /usr/include/x86_64-linux-gnu/bits/types/FILE.h :
+  /usr/include/x86_64-linux-gnu/bits/libio.h :
+  /usr/include/x86_64-linux-gnu/bits/_G_config.h :
+  /usr/include/x86_64-linux-gnu/bits/types/__mbstate_t.h :
+  /usr/include/x86_64-linux-gnu/bits/stdio_lim.h :
+  /usr/include/x86_64-linux-gnu/bits/sys_errlist.h :
+  /usr/include/x86_64-linux-gnu/bits/stdio2.h ../py/objlist.h ../py/obj.h :
+  ../py/mpconfig.h mpconfigport.h /usr/include/alloca.h :
+  /usr/lib/gcc/x86_64-linux-gnu/7/include/stdint.h /usr/include/stdint.h :
+  /usr/include/x86_64-linux-gnu/bits/wchar.h :
+  /usr/include/x86_64-linux-gnu/bits/stdint-intn.h :
+  /usr/include/x86_64-linux-gnu/bits/stdint-uintn.h ../py/misc.h :
+  /usr/lib/gcc/x86_64-linux-gnu/7/include/stdbool.h ../py/qstr.h :
+  build/genhdr/qstrdefs.generated.h ../py/mpprint.h ../py/runtime0.h :
+  ../py/objstr.h ../py/objtuple.h ../py/objtype.h ../py/runtime.h :
+  ../py/mpstate.h ../py/mpthread.h ../py/nlr.h :
+  /usr/lib/gcc/x86_64-linux-gnu/7/include-fixed/limits.h :
+  /usr/lib/gcc/x86_64-linux-gnu/7/include-fixed/syslimits.h :
+  /usr/include/limits.h /usr/include/x86_64-linux-gnu/bits/posix1_lim.h :
+  /usr/include/x86_64-linux-gnu/bits/local_lim.h :
+  /usr/include/linux/limits.h :
+  /usr/include/x86_64-linux-gnu/bits/posix2_lim.h ../py/objexcept.h :
+  ../py/pystack.h ../py/gc.h ../py/mperrno.h /usr/include/errno.h :
+  /usr/include/x86_64-linux-gnu/bits/errno.h /usr/include/linux/errno.h :
+  /usr/include/x86_64-linux-gnu/asm/errno.h :
+  /usr/include/asm-generic/errno.h /usr/include/asm-generic/errno-base.h :
Binary files MicorpythonOriginal1.12/micropython/mpy-cross/build/py/objfilter.o and micropython1.12_withUlab/micropython/mpy-cross/build/py/objfilter.o differ
diff -crNb MicorpythonOriginal1.12/micropython/mpy-cross/build/py/objfilter.P micropython1.12_withUlab/micropython/mpy-cross/build/py/objfilter.P
*** MicorpythonOriginal1.12/micropython/mpy-cross/build/py/objfilter.P	1970-01-01 02:00:00.000000000 +0200
--- micropython1.12_withUlab/micropython/mpy-cross/build/py/objfilter.P	2020-06-19 18:37:37.179554880 +0200
***************
*** 0 ****
--- 1,52 ----
+ build/py/objfilter.o: ../py/objfilter.c /usr/include/stdc-predef.h \
+  ../py/runtime.h ../py/mpstate.h \
+  /usr/lib/gcc/x86_64-linux-gnu/7/include/stdint.h /usr/include/stdint.h \
+  /usr/include/x86_64-linux-gnu/bits/libc-header-start.h \
+  /usr/include/features.h /usr/include/x86_64-linux-gnu/sys/cdefs.h \
+  /usr/include/x86_64-linux-gnu/bits/wordsize.h \
+  /usr/include/x86_64-linux-gnu/bits/long-double.h \
+  /usr/include/x86_64-linux-gnu/gnu/stubs.h \
+  /usr/include/x86_64-linux-gnu/gnu/stubs-64.h \
+  /usr/include/x86_64-linux-gnu/bits/types.h \
+  /usr/include/x86_64-linux-gnu/bits/typesizes.h \
+  /usr/include/x86_64-linux-gnu/bits/wchar.h \
+  /usr/include/x86_64-linux-gnu/bits/stdint-intn.h \
+  /usr/include/x86_64-linux-gnu/bits/stdint-uintn.h ../py/mpconfig.h \
+  mpconfigport.h /usr/include/alloca.h \
+  /usr/lib/gcc/x86_64-linux-gnu/7/include/stddef.h ../py/mpthread.h \
+  ../py/misc.h /usr/lib/gcc/x86_64-linux-gnu/7/include/stdbool.h \
+  ../py/nlr.h /usr/lib/gcc/x86_64-linux-gnu/7/include-fixed/limits.h \
+  /usr/lib/gcc/x86_64-linux-gnu/7/include-fixed/syslimits.h \
+  /usr/include/limits.h /usr/include/x86_64-linux-gnu/bits/posix1_lim.h \
+  /usr/include/x86_64-linux-gnu/bits/local_lim.h \
+  /usr/include/linux/limits.h \
+  /usr/include/x86_64-linux-gnu/bits/posix2_lim.h /usr/include/assert.h \
+  ../py/obj.h ../py/qstr.h build/genhdr/qstrdefs.generated.h \
+  ../py/mpprint.h ../py/runtime0.h ../py/objlist.h ../py/objexcept.h \
+  ../py/objtuple.h ../py/pystack.h
+ ../py/objfilter.c /usr/include/stdc-predef.h :
+  ../py/runtime.h ../py/mpstate.h :
+  /usr/lib/gcc/x86_64-linux-gnu/7/include/stdint.h /usr/include/stdint.h :
+  /usr/include/x86_64-linux-gnu/bits/libc-header-start.h :
+  /usr/include/features.h /usr/include/x86_64-linux-gnu/sys/cdefs.h :
+  /usr/include/x86_64-linux-gnu/bits/wordsize.h :
+  /usr/include/x86_64-linux-gnu/bits/long-double.h :
+  /usr/include/x86_64-linux-gnu/gnu/stubs.h :
+  /usr/include/x86_64-linux-gnu/gnu/stubs-64.h :
+  /usr/include/x86_64-linux-gnu/bits/types.h :
+  /usr/include/x86_64-linux-gnu/bits/typesizes.h :
+  /usr/include/x86_64-linux-gnu/bits/wchar.h :
+  /usr/include/x86_64-linux-gnu/bits/stdint-intn.h :
+  /usr/include/x86_64-linux-gnu/bits/stdint-uintn.h ../py/mpconfig.h :
+  mpconfigport.h /usr/include/alloca.h :
+  /usr/lib/gcc/x86_64-linux-gnu/7/include/stddef.h ../py/mpthread.h :
+  ../py/misc.h /usr/lib/gcc/x86_64-linux-gnu/7/include/stdbool.h :
+  ../py/nlr.h /usr/lib/gcc/x86_64-linux-gnu/7/include-fixed/limits.h :
+  /usr/lib/gcc/x86_64-linux-gnu/7/include-fixed/syslimits.h :
+  /usr/include/limits.h /usr/include/x86_64-linux-gnu/bits/posix1_lim.h :
+  /usr/include/x86_64-linux-gnu/bits/local_lim.h :
+  /usr/include/linux/limits.h :
+  /usr/include/x86_64-linux-gnu/bits/posix2_lim.h /usr/include/assert.h :
+  ../py/obj.h ../py/qstr.h build/genhdr/qstrdefs.generated.h :
+  ../py/mpprint.h ../py/runtime0.h ../py/objlist.h ../py/objexcept.h :
+  ../py/objtuple.h ../py/pystack.h :
Binary files MicorpythonOriginal1.12/micropython/mpy-cross/build/py/objfloat.o and micropython1.12_withUlab/micropython/mpy-cross/build/py/objfloat.o differ
diff -crNb MicorpythonOriginal1.12/micropython/mpy-cross/build/py/objfloat.P micropython1.12_withUlab/micropython/mpy-cross/build/py/objfloat.P
*** MicorpythonOriginal1.12/micropython/mpy-cross/build/py/objfloat.P	1970-01-01 02:00:00.000000000 +0200
--- micropython1.12_withUlab/micropython/mpy-cross/build/py/objfloat.P	2020-06-19 18:37:37.235553682 +0200
***************
*** 0 ****
--- 1,152 ----
+ build/py/objfloat.o: ../py/objfloat.c /usr/include/stdc-predef.h \
+  /usr/include/stdlib.h \
+  /usr/include/x86_64-linux-gnu/bits/libc-header-start.h \
+  /usr/include/features.h /usr/include/x86_64-linux-gnu/sys/cdefs.h \
+  /usr/include/x86_64-linux-gnu/bits/wordsize.h \
+  /usr/include/x86_64-linux-gnu/bits/long-double.h \
+  /usr/include/x86_64-linux-gnu/gnu/stubs.h \
+  /usr/include/x86_64-linux-gnu/gnu/stubs-64.h \
+  /usr/lib/gcc/x86_64-linux-gnu/7/include/stddef.h \
+  /usr/include/x86_64-linux-gnu/bits/waitflags.h \
+  /usr/include/x86_64-linux-gnu/bits/waitstatus.h \
+  /usr/include/x86_64-linux-gnu/bits/floatn.h \
+  /usr/include/x86_64-linux-gnu/bits/floatn-common.h \
+  /usr/include/x86_64-linux-gnu/sys/types.h \
+  /usr/include/x86_64-linux-gnu/bits/types.h \
+  /usr/include/x86_64-linux-gnu/bits/typesizes.h \
+  /usr/include/x86_64-linux-gnu/bits/types/clock_t.h \
+  /usr/include/x86_64-linux-gnu/bits/types/clockid_t.h \
+  /usr/include/x86_64-linux-gnu/bits/types/time_t.h \
+  /usr/include/x86_64-linux-gnu/bits/types/timer_t.h \
+  /usr/include/x86_64-linux-gnu/bits/stdint-intn.h /usr/include/endian.h \
+  /usr/include/x86_64-linux-gnu/bits/endian.h \
+  /usr/include/x86_64-linux-gnu/bits/byteswap.h \
+  /usr/include/x86_64-linux-gnu/bits/byteswap-16.h \
+  /usr/include/x86_64-linux-gnu/bits/uintn-identity.h \
+  /usr/include/x86_64-linux-gnu/sys/select.h \
+  /usr/include/x86_64-linux-gnu/bits/select.h \
+  /usr/include/x86_64-linux-gnu/bits/types/sigset_t.h \
+  /usr/include/x86_64-linux-gnu/bits/types/__sigset_t.h \
+  /usr/include/x86_64-linux-gnu/bits/types/struct_timeval.h \
+  /usr/include/x86_64-linux-gnu/bits/types/struct_timespec.h \
+  /usr/include/x86_64-linux-gnu/bits/select2.h \
+  /usr/include/x86_64-linux-gnu/sys/sysmacros.h \
+  /usr/include/x86_64-linux-gnu/bits/sysmacros.h \
+  /usr/include/x86_64-linux-gnu/bits/pthreadtypes.h \
+  /usr/include/x86_64-linux-gnu/bits/thread-shared-types.h \
+  /usr/include/x86_64-linux-gnu/bits/pthreadtypes-arch.h \
+  /usr/include/alloca.h /usr/include/x86_64-linux-gnu/bits/stdlib-float.h \
+  /usr/include/x86_64-linux-gnu/bits/stdlib.h /usr/include/stdio.h \
+  /usr/include/x86_64-linux-gnu/bits/types/__FILE.h \
+  /usr/include/x86_64-linux-gnu/bits/types/FILE.h \
+  /usr/include/x86_64-linux-gnu/bits/libio.h \
+  /usr/include/x86_64-linux-gnu/bits/_G_config.h \
+  /usr/include/x86_64-linux-gnu/bits/types/__mbstate_t.h \
+  /usr/lib/gcc/x86_64-linux-gnu/7/include/stdarg.h \
+  /usr/include/x86_64-linux-gnu/bits/stdio_lim.h \
+  /usr/include/x86_64-linux-gnu/bits/sys_errlist.h \
+  /usr/include/x86_64-linux-gnu/bits/stdio2.h /usr/include/string.h \
+  /usr/include/x86_64-linux-gnu/bits/types/locale_t.h \
+  /usr/include/x86_64-linux-gnu/bits/types/__locale_t.h \
+  /usr/include/strings.h \
+  /usr/include/x86_64-linux-gnu/bits/strings_fortified.h \
+  /usr/include/x86_64-linux-gnu/bits/string_fortified.h \
+  /usr/include/assert.h ../py/parsenum.h ../py/mpconfig.h mpconfigport.h \
+  /usr/lib/gcc/x86_64-linux-gnu/7/include/stdint.h /usr/include/stdint.h \
+  /usr/include/x86_64-linux-gnu/bits/wchar.h \
+  /usr/include/x86_64-linux-gnu/bits/stdint-uintn.h ../py/lexer.h \
+  ../py/qstr.h ../py/misc.h \
+  /usr/lib/gcc/x86_64-linux-gnu/7/include/stdbool.h \
+  build/genhdr/qstrdefs.generated.h ../py/reader.h ../py/obj.h \
+  ../py/mpprint.h ../py/runtime0.h ../py/runtime.h ../py/mpstate.h \
+  ../py/mpthread.h ../py/nlr.h \
+  /usr/lib/gcc/x86_64-linux-gnu/7/include-fixed/limits.h \
+  /usr/lib/gcc/x86_64-linux-gnu/7/include-fixed/syslimits.h \
+  /usr/include/limits.h /usr/include/x86_64-linux-gnu/bits/posix1_lim.h \
+  /usr/include/x86_64-linux-gnu/bits/local_lim.h \
+  /usr/include/linux/limits.h \
+  /usr/include/x86_64-linux-gnu/bits/posix2_lim.h ../py/objlist.h \
+  ../py/objexcept.h ../py/objtuple.h ../py/pystack.h /usr/include/math.h \
+  /usr/include/x86_64-linux-gnu/bits/math-vector.h \
+  /usr/include/x86_64-linux-gnu/bits/libm-simd-decl-stubs.h \
+  /usr/include/x86_64-linux-gnu/bits/flt-eval-method.h \
+  /usr/include/x86_64-linux-gnu/bits/fp-logb.h \
+  /usr/include/x86_64-linux-gnu/bits/fp-fast.h \
+  /usr/include/x86_64-linux-gnu/bits/mathcalls-helper-functions.h \
+  /usr/include/x86_64-linux-gnu/bits/mathcalls.h ../py/formatfloat.h
+ ../py/objfloat.c /usr/include/stdc-predef.h :
+  /usr/include/stdlib.h :
+  /usr/include/x86_64-linux-gnu/bits/libc-header-start.h :
+  /usr/include/features.h /usr/include/x86_64-linux-gnu/sys/cdefs.h :
+  /usr/include/x86_64-linux-gnu/bits/wordsize.h :
+  /usr/include/x86_64-linux-gnu/bits/long-double.h :
+  /usr/include/x86_64-linux-gnu/gnu/stubs.h :
+  /usr/include/x86_64-linux-gnu/gnu/stubs-64.h :
+  /usr/lib/gcc/x86_64-linux-gnu/7/include/stddef.h :
+  /usr/include/x86_64-linux-gnu/bits/waitflags.h :
+  /usr/include/x86_64-linux-gnu/bits/waitstatus.h :
+  /usr/include/x86_64-linux-gnu/bits/floatn.h :
+  /usr/include/x86_64-linux-gnu/bits/floatn-common.h :
+  /usr/include/x86_64-linux-gnu/sys/types.h :
+  /usr/include/x86_64-linux-gnu/bits/types.h :
+  /usr/include/x86_64-linux-gnu/bits/typesizes.h :
+  /usr/include/x86_64-linux-gnu/bits/types/clock_t.h :
+  /usr/include/x86_64-linux-gnu/bits/types/clockid_t.h :
+  /usr/include/x86_64-linux-gnu/bits/types/time_t.h :
+  /usr/include/x86_64-linux-gnu/bits/types/timer_t.h :
+  /usr/include/x86_64-linux-gnu/bits/stdint-intn.h /usr/include/endian.h :
+  /usr/include/x86_64-linux-gnu/bits/endian.h :
+  /usr/include/x86_64-linux-gnu/bits/byteswap.h :
+  /usr/include/x86_64-linux-gnu/bits/byteswap-16.h :
+  /usr/include/x86_64-linux-gnu/bits/uintn-identity.h :
+  /usr/include/x86_64-linux-gnu/sys/select.h :
+  /usr/include/x86_64-linux-gnu/bits/select.h :
+  /usr/include/x86_64-linux-gnu/bits/types/sigset_t.h :
+  /usr/include/x86_64-linux-gnu/bits/types/__sigset_t.h :
+  /usr/include/x86_64-linux-gnu/bits/types/struct_timeval.h :
+  /usr/include/x86_64-linux-gnu/bits/types/struct_timespec.h :
+  /usr/include/x86_64-linux-gnu/bits/select2.h :
+  /usr/include/x86_64-linux-gnu/sys/sysmacros.h :
+  /usr/include/x86_64-linux-gnu/bits/sysmacros.h :
+  /usr/include/x86_64-linux-gnu/bits/pthreadtypes.h :
+  /usr/include/x86_64-linux-gnu/bits/thread-shared-types.h :
+  /usr/include/x86_64-linux-gnu/bits/pthreadtypes-arch.h :
+  /usr/include/alloca.h /usr/include/x86_64-linux-gnu/bits/stdlib-float.h :
+  /usr/include/x86_64-linux-gnu/bits/stdlib.h /usr/include/stdio.h :
+  /usr/include/x86_64-linux-gnu/bits/types/__FILE.h :
+  /usr/include/x86_64-linux-gnu/bits/types/FILE.h :
+  /usr/include/x86_64-linux-gnu/bits/libio.h :
+  /usr/include/x86_64-linux-gnu/bits/_G_config.h :
+  /usr/include/x86_64-linux-gnu/bits/types/__mbstate_t.h :
+  /usr/lib/gcc/x86_64-linux-gnu/7/include/stdarg.h :
+  /usr/include/x86_64-linux-gnu/bits/stdio_lim.h :
+  /usr/include/x86_64-linux-gnu/bits/sys_errlist.h :
+  /usr/include/x86_64-linux-gnu/bits/stdio2.h /usr/include/string.h :
+  /usr/include/x86_64-linux-gnu/bits/types/locale_t.h :
+  /usr/include/x86_64-linux-gnu/bits/types/__locale_t.h :
+  /usr/include/strings.h :
+  /usr/include/x86_64-linux-gnu/bits/strings_fortified.h :
+  /usr/include/x86_64-linux-gnu/bits/string_fortified.h :
+  /usr/include/assert.h ../py/parsenum.h ../py/mpconfig.h mpconfigport.h :
+  /usr/lib/gcc/x86_64-linux-gnu/7/include/stdint.h /usr/include/stdint.h :
+  /usr/include/x86_64-linux-gnu/bits/wchar.h :
+  /usr/include/x86_64-linux-gnu/bits/stdint-uintn.h ../py/lexer.h :
+  ../py/qstr.h ../py/misc.h :
+  /usr/lib/gcc/x86_64-linux-gnu/7/include/stdbool.h :
+  build/genhdr/qstrdefs.generated.h ../py/reader.h ../py/obj.h :
+  ../py/mpprint.h ../py/runtime0.h ../py/runtime.h ../py/mpstate.h :
+  ../py/mpthread.h ../py/nlr.h :
+  /usr/lib/gcc/x86_64-linux-gnu/7/include-fixed/limits.h :
+  /usr/lib/gcc/x86_64-linux-gnu/7/include-fixed/syslimits.h :
+  /usr/include/limits.h /usr/include/x86_64-linux-gnu/bits/posix1_lim.h :
+  /usr/include/x86_64-linux-gnu/bits/local_lim.h :
+  /usr/include/linux/limits.h :
+  /usr/include/x86_64-linux-gnu/bits/posix2_lim.h ../py/objlist.h :
+  ../py/objexcept.h ../py/objtuple.h ../py/pystack.h /usr/include/math.h :
+  /usr/include/x86_64-linux-gnu/bits/math-vector.h :
+  /usr/include/x86_64-linux-gnu/bits/libm-simd-decl-stubs.h :
+  /usr/include/x86_64-linux-gnu/bits/flt-eval-method.h :
+  /usr/include/x86_64-linux-gnu/bits/fp-logb.h :
+  /usr/include/x86_64-linux-gnu/bits/fp-fast.h :
+  /usr/include/x86_64-linux-gnu/bits/mathcalls-helper-functions.h :
+  /usr/include/x86_64-linux-gnu/bits/mathcalls.h ../py/formatfloat.h :
Binary files MicorpythonOriginal1.12/micropython/mpy-cross/build/py/objfun.o and micropython1.12_withUlab/micropython/mpy-cross/build/py/objfun.o differ
diff -crNb MicorpythonOriginal1.12/micropython/mpy-cross/build/py/objfun.P micropython1.12_withUlab/micropython/mpy-cross/build/py/objfun.P
*** MicorpythonOriginal1.12/micropython/mpy-cross/build/py/objfun.P	1970-01-01 02:00:00.000000000 +0200
--- micropython1.12_withUlab/micropython/mpy-cross/build/py/objfun.P	2020-06-19 18:37:37.295552399 +0200
***************
*** 0 ****
--- 1,64 ----
+ build/py/objfun.o: ../py/objfun.c /usr/include/stdc-predef.h \
+  /usr/include/string.h \
+  /usr/include/x86_64-linux-gnu/bits/libc-header-start.h \
+  /usr/include/features.h /usr/include/x86_64-linux-gnu/sys/cdefs.h \
+  /usr/include/x86_64-linux-gnu/bits/wordsize.h \
+  /usr/include/x86_64-linux-gnu/bits/long-double.h \
+  /usr/include/x86_64-linux-gnu/gnu/stubs.h \
+  /usr/include/x86_64-linux-gnu/gnu/stubs-64.h \
+  /usr/lib/gcc/x86_64-linux-gnu/7/include/stddef.h \
+  /usr/include/x86_64-linux-gnu/bits/types/locale_t.h \
+  /usr/include/x86_64-linux-gnu/bits/types/__locale_t.h \
+  /usr/include/strings.h \
+  /usr/include/x86_64-linux-gnu/bits/strings_fortified.h \
+  /usr/include/x86_64-linux-gnu/bits/string_fortified.h \
+  /usr/include/assert.h ../py/objtuple.h ../py/obj.h ../py/mpconfig.h \
+  mpconfigport.h /usr/include/alloca.h \
+  /usr/lib/gcc/x86_64-linux-gnu/7/include/stdint.h /usr/include/stdint.h \
+  /usr/include/x86_64-linux-gnu/bits/types.h \
+  /usr/include/x86_64-linux-gnu/bits/typesizes.h \
+  /usr/include/x86_64-linux-gnu/bits/wchar.h \
+  /usr/include/x86_64-linux-gnu/bits/stdint-intn.h \
+  /usr/include/x86_64-linux-gnu/bits/stdint-uintn.h ../py/misc.h \
+  /usr/lib/gcc/x86_64-linux-gnu/7/include/stdbool.h ../py/qstr.h \
+  build/genhdr/qstrdefs.generated.h ../py/mpprint.h ../py/runtime0.h \
+  ../py/objfun.h ../py/runtime.h ../py/mpstate.h ../py/mpthread.h \
+  ../py/nlr.h /usr/lib/gcc/x86_64-linux-gnu/7/include-fixed/limits.h \
+  /usr/lib/gcc/x86_64-linux-gnu/7/include-fixed/syslimits.h \
+  /usr/include/limits.h /usr/include/x86_64-linux-gnu/bits/posix1_lim.h \
+  /usr/include/x86_64-linux-gnu/bits/local_lim.h \
+  /usr/include/linux/limits.h \
+  /usr/include/x86_64-linux-gnu/bits/posix2_lim.h ../py/objlist.h \
+  ../py/objexcept.h ../py/pystack.h ../py/bc.h ../py/stackctrl.h
+ ../py/objfun.c /usr/include/stdc-predef.h :
+  /usr/include/string.h :
+  /usr/include/x86_64-linux-gnu/bits/libc-header-start.h :
+  /usr/include/features.h /usr/include/x86_64-linux-gnu/sys/cdefs.h :
+  /usr/include/x86_64-linux-gnu/bits/wordsize.h :
+  /usr/include/x86_64-linux-gnu/bits/long-double.h :
+  /usr/include/x86_64-linux-gnu/gnu/stubs.h :
+  /usr/include/x86_64-linux-gnu/gnu/stubs-64.h :
+  /usr/lib/gcc/x86_64-linux-gnu/7/include/stddef.h :
+  /usr/include/x86_64-linux-gnu/bits/types/locale_t.h :
+  /usr/include/x86_64-linux-gnu/bits/types/__locale_t.h :
+  /usr/include/strings.h :
+  /usr/include/x86_64-linux-gnu/bits/strings_fortified.h :
+  /usr/include/x86_64-linux-gnu/bits/string_fortified.h :
+  /usr/include/assert.h ../py/objtuple.h ../py/obj.h ../py/mpconfig.h :
+  mpconfigport.h /usr/include/alloca.h :
+  /usr/lib/gcc/x86_64-linux-gnu/7/include/stdint.h /usr/include/stdint.h :
+  /usr/include/x86_64-linux-gnu/bits/types.h :
+  /usr/include/x86_64-linux-gnu/bits/typesizes.h :
+  /usr/include/x86_64-linux-gnu/bits/wchar.h :
+  /usr/include/x86_64-linux-gnu/bits/stdint-intn.h :
+  /usr/include/x86_64-linux-gnu/bits/stdint-uintn.h ../py/misc.h :
+  /usr/lib/gcc/x86_64-linux-gnu/7/include/stdbool.h ../py/qstr.h :
+  build/genhdr/qstrdefs.generated.h ../py/mpprint.h ../py/runtime0.h :
+  ../py/objfun.h ../py/runtime.h ../py/mpstate.h ../py/mpthread.h :
+  ../py/nlr.h /usr/lib/gcc/x86_64-linux-gnu/7/include-fixed/limits.h :
+  /usr/lib/gcc/x86_64-linux-gnu/7/include-fixed/syslimits.h :
+  /usr/include/limits.h /usr/include/x86_64-linux-gnu/bits/posix1_lim.h :
+  /usr/include/x86_64-linux-gnu/bits/local_lim.h :
+  /usr/include/linux/limits.h :
+  /usr/include/x86_64-linux-gnu/bits/posix2_lim.h ../py/objlist.h :
+  ../py/objexcept.h ../py/pystack.h ../py/bc.h ../py/stackctrl.h :
Binary files MicorpythonOriginal1.12/micropython/mpy-cross/build/py/objgenerator.o and micropython1.12_withUlab/micropython/mpy-cross/build/py/objgenerator.o differ
diff -crNb MicorpythonOriginal1.12/micropython/mpy-cross/build/py/objgenerator.P micropython1.12_withUlab/micropython/mpy-cross/build/py/objgenerator.P
*** MicorpythonOriginal1.12/micropython/mpy-cross/build/py/objgenerator.P	1970-01-01 02:00:00.000000000 +0200
--- micropython1.12_withUlab/micropython/mpy-cross/build/py/objgenerator.P	2020-06-19 18:37:37.351551201 +0200
***************
*** 0 ****
--- 1,110 ----
+ build/py/objgenerator.o: ../py/objgenerator.c /usr/include/stdc-predef.h \
+  /usr/include/stdlib.h \
+  /usr/include/x86_64-linux-gnu/bits/libc-header-start.h \
+  /usr/include/features.h /usr/include/x86_64-linux-gnu/sys/cdefs.h \
+  /usr/include/x86_64-linux-gnu/bits/wordsize.h \
+  /usr/include/x86_64-linux-gnu/bits/long-double.h \
+  /usr/include/x86_64-linux-gnu/gnu/stubs.h \
+  /usr/include/x86_64-linux-gnu/gnu/stubs-64.h \
+  /usr/lib/gcc/x86_64-linux-gnu/7/include/stddef.h \
+  /usr/include/x86_64-linux-gnu/bits/waitflags.h \
+  /usr/include/x86_64-linux-gnu/bits/waitstatus.h \
+  /usr/include/x86_64-linux-gnu/bits/floatn.h \
+  /usr/include/x86_64-linux-gnu/bits/floatn-common.h \
+  /usr/include/x86_64-linux-gnu/sys/types.h \
+  /usr/include/x86_64-linux-gnu/bits/types.h \
+  /usr/include/x86_64-linux-gnu/bits/typesizes.h \
+  /usr/include/x86_64-linux-gnu/bits/types/clock_t.h \
+  /usr/include/x86_64-linux-gnu/bits/types/clockid_t.h \
+  /usr/include/x86_64-linux-gnu/bits/types/time_t.h \
+  /usr/include/x86_64-linux-gnu/bits/types/timer_t.h \
+  /usr/include/x86_64-linux-gnu/bits/stdint-intn.h /usr/include/endian.h \
+  /usr/include/x86_64-linux-gnu/bits/endian.h \
+  /usr/include/x86_64-linux-gnu/bits/byteswap.h \
+  /usr/include/x86_64-linux-gnu/bits/byteswap-16.h \
+  /usr/include/x86_64-linux-gnu/bits/uintn-identity.h \
+  /usr/include/x86_64-linux-gnu/sys/select.h \
+  /usr/include/x86_64-linux-gnu/bits/select.h \
+  /usr/include/x86_64-linux-gnu/bits/types/sigset_t.h \
+  /usr/include/x86_64-linux-gnu/bits/types/__sigset_t.h \
+  /usr/include/x86_64-linux-gnu/bits/types/struct_timeval.h \
+  /usr/include/x86_64-linux-gnu/bits/types/struct_timespec.h \
+  /usr/include/x86_64-linux-gnu/bits/select2.h \
+  /usr/include/x86_64-linux-gnu/sys/sysmacros.h \
+  /usr/include/x86_64-linux-gnu/bits/sysmacros.h \
+  /usr/include/x86_64-linux-gnu/bits/pthreadtypes.h \
+  /usr/include/x86_64-linux-gnu/bits/thread-shared-types.h \
+  /usr/include/x86_64-linux-gnu/bits/pthreadtypes-arch.h \
+  /usr/include/alloca.h /usr/include/x86_64-linux-gnu/bits/stdlib-float.h \
+  /usr/include/x86_64-linux-gnu/bits/stdlib.h /usr/include/assert.h \
+  ../py/runtime.h ../py/mpstate.h \
+  /usr/lib/gcc/x86_64-linux-gnu/7/include/stdint.h /usr/include/stdint.h \
+  /usr/include/x86_64-linux-gnu/bits/wchar.h \
+  /usr/include/x86_64-linux-gnu/bits/stdint-uintn.h ../py/mpconfig.h \
+  mpconfigport.h ../py/mpthread.h ../py/misc.h \
+  /usr/lib/gcc/x86_64-linux-gnu/7/include/stdbool.h ../py/nlr.h \
+  /usr/lib/gcc/x86_64-linux-gnu/7/include-fixed/limits.h \
+  /usr/lib/gcc/x86_64-linux-gnu/7/include-fixed/syslimits.h \
+  /usr/include/limits.h /usr/include/x86_64-linux-gnu/bits/posix1_lim.h \
+  /usr/include/x86_64-linux-gnu/bits/local_lim.h \
+  /usr/include/linux/limits.h \
+  /usr/include/x86_64-linux-gnu/bits/posix2_lim.h ../py/obj.h ../py/qstr.h \
+  build/genhdr/qstrdefs.generated.h ../py/mpprint.h ../py/runtime0.h \
+  ../py/objlist.h ../py/objexcept.h ../py/objtuple.h ../py/pystack.h \
+  ../py/bc.h ../py/objfun.h ../py/objstr.h ../py/objgenerator.h \
+  ../py/stackctrl.h
+ ../py/objgenerator.c /usr/include/stdc-predef.h :
+  /usr/include/stdlib.h :
+  /usr/include/x86_64-linux-gnu/bits/libc-header-start.h :
+  /usr/include/features.h /usr/include/x86_64-linux-gnu/sys/cdefs.h :
+  /usr/include/x86_64-linux-gnu/bits/wordsize.h :
+  /usr/include/x86_64-linux-gnu/bits/long-double.h :
+  /usr/include/x86_64-linux-gnu/gnu/stubs.h :
+  /usr/include/x86_64-linux-gnu/gnu/stubs-64.h :
+  /usr/lib/gcc/x86_64-linux-gnu/7/include/stddef.h :
+  /usr/include/x86_64-linux-gnu/bits/waitflags.h :
+  /usr/include/x86_64-linux-gnu/bits/waitstatus.h :
+  /usr/include/x86_64-linux-gnu/bits/floatn.h :
+  /usr/include/x86_64-linux-gnu/bits/floatn-common.h :
+  /usr/include/x86_64-linux-gnu/sys/types.h :
+  /usr/include/x86_64-linux-gnu/bits/types.h :
+  /usr/include/x86_64-linux-gnu/bits/typesizes.h :
+  /usr/include/x86_64-linux-gnu/bits/types/clock_t.h :
+  /usr/include/x86_64-linux-gnu/bits/types/clockid_t.h :
+  /usr/include/x86_64-linux-gnu/bits/types/time_t.h :
+  /usr/include/x86_64-linux-gnu/bits/types/timer_t.h :
+  /usr/include/x86_64-linux-gnu/bits/stdint-intn.h /usr/include/endian.h :
+  /usr/include/x86_64-linux-gnu/bits/endian.h :
+  /usr/include/x86_64-linux-gnu/bits/byteswap.h :
+  /usr/include/x86_64-linux-gnu/bits/byteswap-16.h :
+  /usr/include/x86_64-linux-gnu/bits/uintn-identity.h :
+  /usr/include/x86_64-linux-gnu/sys/select.h :
+  /usr/include/x86_64-linux-gnu/bits/select.h :
+  /usr/include/x86_64-linux-gnu/bits/types/sigset_t.h :
+  /usr/include/x86_64-linux-gnu/bits/types/__sigset_t.h :
+  /usr/include/x86_64-linux-gnu/bits/types/struct_timeval.h :
+  /usr/include/x86_64-linux-gnu/bits/types/struct_timespec.h :
+  /usr/include/x86_64-linux-gnu/bits/select2.h :
+  /usr/include/x86_64-linux-gnu/sys/sysmacros.h :
+  /usr/include/x86_64-linux-gnu/bits/sysmacros.h :
+  /usr/include/x86_64-linux-gnu/bits/pthreadtypes.h :
+  /usr/include/x86_64-linux-gnu/bits/thread-shared-types.h :
+  /usr/include/x86_64-linux-gnu/bits/pthreadtypes-arch.h :
+  /usr/include/alloca.h /usr/include/x86_64-linux-gnu/bits/stdlib-float.h :
+  /usr/include/x86_64-linux-gnu/bits/stdlib.h /usr/include/assert.h :
+  ../py/runtime.h ../py/mpstate.h :
+  /usr/lib/gcc/x86_64-linux-gnu/7/include/stdint.h /usr/include/stdint.h :
+  /usr/include/x86_64-linux-gnu/bits/wchar.h :
+  /usr/include/x86_64-linux-gnu/bits/stdint-uintn.h ../py/mpconfig.h :
+  mpconfigport.h ../py/mpthread.h ../py/misc.h :
+  /usr/lib/gcc/x86_64-linux-gnu/7/include/stdbool.h ../py/nlr.h :
+  /usr/lib/gcc/x86_64-linux-gnu/7/include-fixed/limits.h :
+  /usr/lib/gcc/x86_64-linux-gnu/7/include-fixed/syslimits.h :
+  /usr/include/limits.h /usr/include/x86_64-linux-gnu/bits/posix1_lim.h :
+  /usr/include/x86_64-linux-gnu/bits/local_lim.h :
+  /usr/include/linux/limits.h :
+  /usr/include/x86_64-linux-gnu/bits/posix2_lim.h ../py/obj.h ../py/qstr.h :
+  build/genhdr/qstrdefs.generated.h ../py/mpprint.h ../py/runtime0.h :
+  ../py/objlist.h ../py/objexcept.h ../py/objtuple.h ../py/pystack.h :
+  ../py/bc.h ../py/objfun.h ../py/objstr.h ../py/objgenerator.h :
+  ../py/stackctrl.h :
Binary files MicorpythonOriginal1.12/micropython/mpy-cross/build/py/objgetitemiter.o and micropython1.12_withUlab/micropython/mpy-cross/build/py/objgetitemiter.o differ
diff -crNb MicorpythonOriginal1.12/micropython/mpy-cross/build/py/objgetitemiter.P micropython1.12_withUlab/micropython/mpy-cross/build/py/objgetitemiter.P
*** MicorpythonOriginal1.12/micropython/mpy-cross/build/py/objgetitemiter.P	1970-01-01 02:00:00.000000000 +0200
--- micropython1.12_withUlab/micropython/mpy-cross/build/py/objgetitemiter.P	2020-06-19 18:37:37.383550517 +0200
***************
*** 0 ****
--- 1,106 ----
+ build/py/objgetitemiter.o: ../py/objgetitemiter.c \
+  /usr/include/stdc-predef.h /usr/include/stdlib.h \
+  /usr/include/x86_64-linux-gnu/bits/libc-header-start.h \
+  /usr/include/features.h /usr/include/x86_64-linux-gnu/sys/cdefs.h \
+  /usr/include/x86_64-linux-gnu/bits/wordsize.h \
+  /usr/include/x86_64-linux-gnu/bits/long-double.h \
+  /usr/include/x86_64-linux-gnu/gnu/stubs.h \
+  /usr/include/x86_64-linux-gnu/gnu/stubs-64.h \
+  /usr/lib/gcc/x86_64-linux-gnu/7/include/stddef.h \
+  /usr/include/x86_64-linux-gnu/bits/waitflags.h \
+  /usr/include/x86_64-linux-gnu/bits/waitstatus.h \
+  /usr/include/x86_64-linux-gnu/bits/floatn.h \
+  /usr/include/x86_64-linux-gnu/bits/floatn-common.h \
+  /usr/include/x86_64-linux-gnu/sys/types.h \
+  /usr/include/x86_64-linux-gnu/bits/types.h \
+  /usr/include/x86_64-linux-gnu/bits/typesizes.h \
+  /usr/include/x86_64-linux-gnu/bits/types/clock_t.h \
+  /usr/include/x86_64-linux-gnu/bits/types/clockid_t.h \
+  /usr/include/x86_64-linux-gnu/bits/types/time_t.h \
+  /usr/include/x86_64-linux-gnu/bits/types/timer_t.h \
+  /usr/include/x86_64-linux-gnu/bits/stdint-intn.h /usr/include/endian.h \
+  /usr/include/x86_64-linux-gnu/bits/endian.h \
+  /usr/include/x86_64-linux-gnu/bits/byteswap.h \
+  /usr/include/x86_64-linux-gnu/bits/byteswap-16.h \
+  /usr/include/x86_64-linux-gnu/bits/uintn-identity.h \
+  /usr/include/x86_64-linux-gnu/sys/select.h \
+  /usr/include/x86_64-linux-gnu/bits/select.h \
+  /usr/include/x86_64-linux-gnu/bits/types/sigset_t.h \
+  /usr/include/x86_64-linux-gnu/bits/types/__sigset_t.h \
+  /usr/include/x86_64-linux-gnu/bits/types/struct_timeval.h \
+  /usr/include/x86_64-linux-gnu/bits/types/struct_timespec.h \
+  /usr/include/x86_64-linux-gnu/bits/select2.h \
+  /usr/include/x86_64-linux-gnu/sys/sysmacros.h \
+  /usr/include/x86_64-linux-gnu/bits/sysmacros.h \
+  /usr/include/x86_64-linux-gnu/bits/pthreadtypes.h \
+  /usr/include/x86_64-linux-gnu/bits/thread-shared-types.h \
+  /usr/include/x86_64-linux-gnu/bits/pthreadtypes-arch.h \
+  /usr/include/alloca.h /usr/include/x86_64-linux-gnu/bits/stdlib-float.h \
+  /usr/include/x86_64-linux-gnu/bits/stdlib.h ../py/runtime.h \
+  ../py/mpstate.h /usr/lib/gcc/x86_64-linux-gnu/7/include/stdint.h \
+  /usr/include/stdint.h /usr/include/x86_64-linux-gnu/bits/wchar.h \
+  /usr/include/x86_64-linux-gnu/bits/stdint-uintn.h ../py/mpconfig.h \
+  mpconfigport.h ../py/mpthread.h ../py/misc.h \
+  /usr/lib/gcc/x86_64-linux-gnu/7/include/stdbool.h ../py/nlr.h \
+  /usr/lib/gcc/x86_64-linux-gnu/7/include-fixed/limits.h \
+  /usr/lib/gcc/x86_64-linux-gnu/7/include-fixed/syslimits.h \
+  /usr/include/limits.h /usr/include/x86_64-linux-gnu/bits/posix1_lim.h \
+  /usr/include/x86_64-linux-gnu/bits/local_lim.h \
+  /usr/include/linux/limits.h \
+  /usr/include/x86_64-linux-gnu/bits/posix2_lim.h /usr/include/assert.h \
+  ../py/obj.h ../py/qstr.h build/genhdr/qstrdefs.generated.h \
+  ../py/mpprint.h ../py/runtime0.h ../py/objlist.h ../py/objexcept.h \
+  ../py/objtuple.h ../py/pystack.h
+ ../py/objgetitemiter.c :
+  /usr/include/stdc-predef.h /usr/include/stdlib.h :
+  /usr/include/x86_64-linux-gnu/bits/libc-header-start.h :
+  /usr/include/features.h /usr/include/x86_64-linux-gnu/sys/cdefs.h :
+  /usr/include/x86_64-linux-gnu/bits/wordsize.h :
+  /usr/include/x86_64-linux-gnu/bits/long-double.h :
+  /usr/include/x86_64-linux-gnu/gnu/stubs.h :
+  /usr/include/x86_64-linux-gnu/gnu/stubs-64.h :
+  /usr/lib/gcc/x86_64-linux-gnu/7/include/stddef.h :
+  /usr/include/x86_64-linux-gnu/bits/waitflags.h :
+  /usr/include/x86_64-linux-gnu/bits/waitstatus.h :
+  /usr/include/x86_64-linux-gnu/bits/floatn.h :
+  /usr/include/x86_64-linux-gnu/bits/floatn-common.h :
+  /usr/include/x86_64-linux-gnu/sys/types.h :
+  /usr/include/x86_64-linux-gnu/bits/types.h :
+  /usr/include/x86_64-linux-gnu/bits/typesizes.h :
+  /usr/include/x86_64-linux-gnu/bits/types/clock_t.h :
+  /usr/include/x86_64-linux-gnu/bits/types/clockid_t.h :
+  /usr/include/x86_64-linux-gnu/bits/types/time_t.h :
+  /usr/include/x86_64-linux-gnu/bits/types/timer_t.h :
+  /usr/include/x86_64-linux-gnu/bits/stdint-intn.h /usr/include/endian.h :
+  /usr/include/x86_64-linux-gnu/bits/endian.h :
+  /usr/include/x86_64-linux-gnu/bits/byteswap.h :
+  /usr/include/x86_64-linux-gnu/bits/byteswap-16.h :
+  /usr/include/x86_64-linux-gnu/bits/uintn-identity.h :
+  /usr/include/x86_64-linux-gnu/sys/select.h :
+  /usr/include/x86_64-linux-gnu/bits/select.h :
+  /usr/include/x86_64-linux-gnu/bits/types/sigset_t.h :
+  /usr/include/x86_64-linux-gnu/bits/types/__sigset_t.h :
+  /usr/include/x86_64-linux-gnu/bits/types/struct_timeval.h :
+  /usr/include/x86_64-linux-gnu/bits/types/struct_timespec.h :
+  /usr/include/x86_64-linux-gnu/bits/select2.h :
+  /usr/include/x86_64-linux-gnu/sys/sysmacros.h :
+  /usr/include/x86_64-linux-gnu/bits/sysmacros.h :
+  /usr/include/x86_64-linux-gnu/bits/pthreadtypes.h :
+  /usr/include/x86_64-linux-gnu/bits/thread-shared-types.h :
+  /usr/include/x86_64-linux-gnu/bits/pthreadtypes-arch.h :
+  /usr/include/alloca.h /usr/include/x86_64-linux-gnu/bits/stdlib-float.h :
+  /usr/include/x86_64-linux-gnu/bits/stdlib.h ../py/runtime.h :
+  ../py/mpstate.h /usr/lib/gcc/x86_64-linux-gnu/7/include/stdint.h :
+  /usr/include/stdint.h /usr/include/x86_64-linux-gnu/bits/wchar.h :
+  /usr/include/x86_64-linux-gnu/bits/stdint-uintn.h ../py/mpconfig.h :
+  mpconfigport.h ../py/mpthread.h ../py/misc.h :
+  /usr/lib/gcc/x86_64-linux-gnu/7/include/stdbool.h ../py/nlr.h :
+  /usr/lib/gcc/x86_64-linux-gnu/7/include-fixed/limits.h :
+  /usr/lib/gcc/x86_64-linux-gnu/7/include-fixed/syslimits.h :
+  /usr/include/limits.h /usr/include/x86_64-linux-gnu/bits/posix1_lim.h :
+  /usr/include/x86_64-linux-gnu/bits/local_lim.h :
+  /usr/include/linux/limits.h :
+  /usr/include/x86_64-linux-gnu/bits/posix2_lim.h /usr/include/assert.h :
+  ../py/obj.h ../py/qstr.h build/genhdr/qstrdefs.generated.h :
+  ../py/mpprint.h ../py/runtime0.h ../py/objlist.h ../py/objexcept.h :
+  ../py/objtuple.h ../py/pystack.h :
Binary files MicorpythonOriginal1.12/micropython/mpy-cross/build/py/objint_longlong.o and micropython1.12_withUlab/micropython/mpy-cross/build/py/objint_longlong.o differ
diff -crNb MicorpythonOriginal1.12/micropython/mpy-cross/build/py/objint_longlong.P micropython1.12_withUlab/micropython/mpy-cross/build/py/objint_longlong.P
*** MicorpythonOriginal1.12/micropython/mpy-cross/build/py/objint_longlong.P	1970-01-01 02:00:00.000000000 +0200
--- micropython1.12_withUlab/micropython/mpy-cross/build/py/objint_longlong.P	2020-06-19 18:37:37.471548635 +0200
***************
*** 0 ****
--- 1,132 ----
+ build/py/objint_longlong.o: ../py/objint_longlong.c \
+  /usr/include/stdc-predef.h /usr/include/stdlib.h \
+  /usr/include/x86_64-linux-gnu/bits/libc-header-start.h \
+  /usr/include/features.h /usr/include/x86_64-linux-gnu/sys/cdefs.h \
+  /usr/include/x86_64-linux-gnu/bits/wordsize.h \
+  /usr/include/x86_64-linux-gnu/bits/long-double.h \
+  /usr/include/x86_64-linux-gnu/gnu/stubs.h \
+  /usr/include/x86_64-linux-gnu/gnu/stubs-64.h \
+  /usr/lib/gcc/x86_64-linux-gnu/7/include/stddef.h \
+  /usr/include/x86_64-linux-gnu/bits/waitflags.h \
+  /usr/include/x86_64-linux-gnu/bits/waitstatus.h \
+  /usr/include/x86_64-linux-gnu/bits/floatn.h \
+  /usr/include/x86_64-linux-gnu/bits/floatn-common.h \
+  /usr/include/x86_64-linux-gnu/sys/types.h \
+  /usr/include/x86_64-linux-gnu/bits/types.h \
+  /usr/include/x86_64-linux-gnu/bits/typesizes.h \
+  /usr/include/x86_64-linux-gnu/bits/types/clock_t.h \
+  /usr/include/x86_64-linux-gnu/bits/types/clockid_t.h \
+  /usr/include/x86_64-linux-gnu/bits/types/time_t.h \
+  /usr/include/x86_64-linux-gnu/bits/types/timer_t.h \
+  /usr/include/x86_64-linux-gnu/bits/stdint-intn.h /usr/include/endian.h \
+  /usr/include/x86_64-linux-gnu/bits/endian.h \
+  /usr/include/x86_64-linux-gnu/bits/byteswap.h \
+  /usr/include/x86_64-linux-gnu/bits/byteswap-16.h \
+  /usr/include/x86_64-linux-gnu/bits/uintn-identity.h \
+  /usr/include/x86_64-linux-gnu/sys/select.h \
+  /usr/include/x86_64-linux-gnu/bits/select.h \
+  /usr/include/x86_64-linux-gnu/bits/types/sigset_t.h \
+  /usr/include/x86_64-linux-gnu/bits/types/__sigset_t.h \
+  /usr/include/x86_64-linux-gnu/bits/types/struct_timeval.h \
+  /usr/include/x86_64-linux-gnu/bits/types/struct_timespec.h \
+  /usr/include/x86_64-linux-gnu/bits/select2.h \
+  /usr/include/x86_64-linux-gnu/sys/sysmacros.h \
+  /usr/include/x86_64-linux-gnu/bits/sysmacros.h \
+  /usr/include/x86_64-linux-gnu/bits/pthreadtypes.h \
+  /usr/include/x86_64-linux-gnu/bits/thread-shared-types.h \
+  /usr/include/x86_64-linux-gnu/bits/pthreadtypes-arch.h \
+  /usr/include/alloca.h /usr/include/x86_64-linux-gnu/bits/stdlib-float.h \
+  /usr/include/x86_64-linux-gnu/bits/stdlib.h /usr/include/string.h \
+  /usr/include/x86_64-linux-gnu/bits/types/locale_t.h \
+  /usr/include/x86_64-linux-gnu/bits/types/__locale_t.h \
+  /usr/include/strings.h \
+  /usr/include/x86_64-linux-gnu/bits/strings_fortified.h \
+  /usr/include/x86_64-linux-gnu/bits/string_fortified.h ../py/smallint.h \
+  ../py/mpconfig.h mpconfigport.h \
+  /usr/lib/gcc/x86_64-linux-gnu/7/include/stdint.h /usr/include/stdint.h \
+  /usr/include/x86_64-linux-gnu/bits/wchar.h \
+  /usr/include/x86_64-linux-gnu/bits/stdint-uintn.h ../py/misc.h \
+  /usr/lib/gcc/x86_64-linux-gnu/7/include/stdbool.h ../py/objint.h \
+  ../py/mpz.h ../py/obj.h ../py/qstr.h build/genhdr/qstrdefs.generated.h \
+  ../py/mpprint.h ../py/runtime0.h ../py/runtime.h ../py/mpstate.h \
+  ../py/mpthread.h ../py/nlr.h \
+  /usr/lib/gcc/x86_64-linux-gnu/7/include-fixed/limits.h \
+  /usr/lib/gcc/x86_64-linux-gnu/7/include-fixed/syslimits.h \
+  /usr/include/limits.h /usr/include/x86_64-linux-gnu/bits/posix1_lim.h \
+  /usr/include/x86_64-linux-gnu/bits/local_lim.h \
+  /usr/include/linux/limits.h \
+  /usr/include/x86_64-linux-gnu/bits/posix2_lim.h /usr/include/assert.h \
+  ../py/objlist.h ../py/objexcept.h ../py/objtuple.h ../py/pystack.h \
+  /usr/include/math.h /usr/include/x86_64-linux-gnu/bits/math-vector.h \
+  /usr/include/x86_64-linux-gnu/bits/libm-simd-decl-stubs.h \
+  /usr/include/x86_64-linux-gnu/bits/flt-eval-method.h \
+  /usr/include/x86_64-linux-gnu/bits/fp-logb.h \
+  /usr/include/x86_64-linux-gnu/bits/fp-fast.h \
+  /usr/include/x86_64-linux-gnu/bits/mathcalls-helper-functions.h \
+  /usr/include/x86_64-linux-gnu/bits/mathcalls.h
+ ../py/objint_longlong.c :
+  /usr/include/stdc-predef.h /usr/include/stdlib.h :
+  /usr/include/x86_64-linux-gnu/bits/libc-header-start.h :
+  /usr/include/features.h /usr/include/x86_64-linux-gnu/sys/cdefs.h :
+  /usr/include/x86_64-linux-gnu/bits/wordsize.h :
+  /usr/include/x86_64-linux-gnu/bits/long-double.h :
+  /usr/include/x86_64-linux-gnu/gnu/stubs.h :
+  /usr/include/x86_64-linux-gnu/gnu/stubs-64.h :
+  /usr/lib/gcc/x86_64-linux-gnu/7/include/stddef.h :
+  /usr/include/x86_64-linux-gnu/bits/waitflags.h :
+  /usr/include/x86_64-linux-gnu/bits/waitstatus.h :
+  /usr/include/x86_64-linux-gnu/bits/floatn.h :
+  /usr/include/x86_64-linux-gnu/bits/floatn-common.h :
+  /usr/include/x86_64-linux-gnu/sys/types.h :
+  /usr/include/x86_64-linux-gnu/bits/types.h :
+  /usr/include/x86_64-linux-gnu/bits/typesizes.h :
+  /usr/include/x86_64-linux-gnu/bits/types/clock_t.h :
+  /usr/include/x86_64-linux-gnu/bits/types/clockid_t.h :
+  /usr/include/x86_64-linux-gnu/bits/types/time_t.h :
+  /usr/include/x86_64-linux-gnu/bits/types/timer_t.h :
+  /usr/include/x86_64-linux-gnu/bits/stdint-intn.h /usr/include/endian.h :
+  /usr/include/x86_64-linux-gnu/bits/endian.h :
+  /usr/include/x86_64-linux-gnu/bits/byteswap.h :
+  /usr/include/x86_64-linux-gnu/bits/byteswap-16.h :
+  /usr/include/x86_64-linux-gnu/bits/uintn-identity.h :
+  /usr/include/x86_64-linux-gnu/sys/select.h :
+  /usr/include/x86_64-linux-gnu/bits/select.h :
+  /usr/include/x86_64-linux-gnu/bits/types/sigset_t.h :
+  /usr/include/x86_64-linux-gnu/bits/types/__sigset_t.h :
+  /usr/include/x86_64-linux-gnu/bits/types/struct_timeval.h :
+  /usr/include/x86_64-linux-gnu/bits/types/struct_timespec.h :
+  /usr/include/x86_64-linux-gnu/bits/select2.h :
+  /usr/include/x86_64-linux-gnu/sys/sysmacros.h :
+  /usr/include/x86_64-linux-gnu/bits/sysmacros.h :
+  /usr/include/x86_64-linux-gnu/bits/pthreadtypes.h :
+  /usr/include/x86_64-linux-gnu/bits/thread-shared-types.h :
+  /usr/include/x86_64-linux-gnu/bits/pthreadtypes-arch.h :
+  /usr/include/alloca.h /usr/include/x86_64-linux-gnu/bits/stdlib-float.h :
+  /usr/include/x86_64-linux-gnu/bits/stdlib.h /usr/include/string.h :
+  /usr/include/x86_64-linux-gnu/bits/types/locale_t.h :
+  /usr/include/x86_64-linux-gnu/bits/types/__locale_t.h :
+  /usr/include/strings.h :
+  /usr/include/x86_64-linux-gnu/bits/strings_fortified.h :
+  /usr/include/x86_64-linux-gnu/bits/string_fortified.h ../py/smallint.h :
+  ../py/mpconfig.h mpconfigport.h :
+  /usr/lib/gcc/x86_64-linux-gnu/7/include/stdint.h /usr/include/stdint.h :
+  /usr/include/x86_64-linux-gnu/bits/wchar.h :
+  /usr/include/x86_64-linux-gnu/bits/stdint-uintn.h ../py/misc.h :
+  /usr/lib/gcc/x86_64-linux-gnu/7/include/stdbool.h ../py/objint.h :
+  ../py/mpz.h ../py/obj.h ../py/qstr.h build/genhdr/qstrdefs.generated.h :
+  ../py/mpprint.h ../py/runtime0.h ../py/runtime.h ../py/mpstate.h :
+  ../py/mpthread.h ../py/nlr.h :
+  /usr/lib/gcc/x86_64-linux-gnu/7/include-fixed/limits.h :
+  /usr/lib/gcc/x86_64-linux-gnu/7/include-fixed/syslimits.h :
+  /usr/include/limits.h /usr/include/x86_64-linux-gnu/bits/posix1_lim.h :
+  /usr/include/x86_64-linux-gnu/bits/local_lim.h :
+  /usr/include/linux/limits.h :
+  /usr/include/x86_64-linux-gnu/bits/posix2_lim.h /usr/include/assert.h :
+  ../py/objlist.h ../py/objexcept.h ../py/objtuple.h ../py/pystack.h :
+  /usr/include/math.h /usr/include/x86_64-linux-gnu/bits/math-vector.h :
+  /usr/include/x86_64-linux-gnu/bits/libm-simd-decl-stubs.h :
+  /usr/include/x86_64-linux-gnu/bits/flt-eval-method.h :
+  /usr/include/x86_64-linux-gnu/bits/fp-logb.h :
+  /usr/include/x86_64-linux-gnu/bits/fp-fast.h :
+  /usr/include/x86_64-linux-gnu/bits/mathcalls-helper-functions.h :
+  /usr/include/x86_64-linux-gnu/bits/mathcalls.h :
Binary files MicorpythonOriginal1.12/micropython/mpy-cross/build/py/objint_mpz.o and micropython1.12_withUlab/micropython/mpy-cross/build/py/objint_mpz.o differ
diff -crNb MicorpythonOriginal1.12/micropython/mpy-cross/build/py/objint_mpz.P micropython1.12_withUlab/micropython/mpy-cross/build/py/objint_mpz.P
*** MicorpythonOriginal1.12/micropython/mpy-cross/build/py/objint_mpz.P	1970-01-01 02:00:00.000000000 +0200
--- micropython1.12_withUlab/micropython/mpy-cross/build/py/objint_mpz.P	2020-06-19 18:37:37.535547267 +0200
***************
*** 0 ****
--- 1,100 ----
+ build/py/objint_mpz.o: ../py/objint_mpz.c /usr/include/stdc-predef.h \
+  /usr/include/string.h \
+  /usr/include/x86_64-linux-gnu/bits/libc-header-start.h \
+  /usr/include/features.h /usr/include/x86_64-linux-gnu/sys/cdefs.h \
+  /usr/include/x86_64-linux-gnu/bits/wordsize.h \
+  /usr/include/x86_64-linux-gnu/bits/long-double.h \
+  /usr/include/x86_64-linux-gnu/gnu/stubs.h \
+  /usr/include/x86_64-linux-gnu/gnu/stubs-64.h \
+  /usr/lib/gcc/x86_64-linux-gnu/7/include/stddef.h \
+  /usr/include/x86_64-linux-gnu/bits/types/locale_t.h \
+  /usr/include/x86_64-linux-gnu/bits/types/__locale_t.h \
+  /usr/include/strings.h \
+  /usr/include/x86_64-linux-gnu/bits/strings_fortified.h \
+  /usr/include/x86_64-linux-gnu/bits/string_fortified.h \
+  /usr/include/stdio.h /usr/include/x86_64-linux-gnu/bits/types.h \
+  /usr/include/x86_64-linux-gnu/bits/typesizes.h \
+  /usr/include/x86_64-linux-gnu/bits/types/__FILE.h \
+  /usr/include/x86_64-linux-gnu/bits/types/FILE.h \
+  /usr/include/x86_64-linux-gnu/bits/libio.h \
+  /usr/include/x86_64-linux-gnu/bits/_G_config.h \
+  /usr/include/x86_64-linux-gnu/bits/types/__mbstate_t.h \
+  /usr/lib/gcc/x86_64-linux-gnu/7/include/stdarg.h \
+  /usr/include/x86_64-linux-gnu/bits/stdio_lim.h \
+  /usr/include/x86_64-linux-gnu/bits/sys_errlist.h \
+  /usr/include/x86_64-linux-gnu/bits/stdio2.h /usr/include/assert.h \
+  ../py/parsenumbase.h ../py/mpconfig.h mpconfigport.h \
+  /usr/include/alloca.h /usr/lib/gcc/x86_64-linux-gnu/7/include/stdint.h \
+  /usr/include/stdint.h /usr/include/x86_64-linux-gnu/bits/wchar.h \
+  /usr/include/x86_64-linux-gnu/bits/stdint-intn.h \
+  /usr/include/x86_64-linux-gnu/bits/stdint-uintn.h ../py/smallint.h \
+  ../py/misc.h /usr/lib/gcc/x86_64-linux-gnu/7/include/stdbool.h \
+  ../py/objint.h ../py/mpz.h ../py/obj.h ../py/qstr.h \
+  build/genhdr/qstrdefs.generated.h ../py/mpprint.h ../py/runtime0.h \
+  ../py/runtime.h ../py/mpstate.h ../py/mpthread.h ../py/nlr.h \
+  /usr/lib/gcc/x86_64-linux-gnu/7/include-fixed/limits.h \
+  /usr/lib/gcc/x86_64-linux-gnu/7/include-fixed/syslimits.h \
+  /usr/include/limits.h /usr/include/x86_64-linux-gnu/bits/posix1_lim.h \
+  /usr/include/x86_64-linux-gnu/bits/local_lim.h \
+  /usr/include/linux/limits.h \
+  /usr/include/x86_64-linux-gnu/bits/posix2_lim.h ../py/objlist.h \
+  ../py/objexcept.h ../py/objtuple.h ../py/pystack.h /usr/include/math.h \
+  /usr/include/x86_64-linux-gnu/bits/math-vector.h \
+  /usr/include/x86_64-linux-gnu/bits/libm-simd-decl-stubs.h \
+  /usr/include/x86_64-linux-gnu/bits/floatn.h \
+  /usr/include/x86_64-linux-gnu/bits/floatn-common.h \
+  /usr/include/x86_64-linux-gnu/bits/flt-eval-method.h \
+  /usr/include/x86_64-linux-gnu/bits/fp-logb.h \
+  /usr/include/x86_64-linux-gnu/bits/fp-fast.h \
+  /usr/include/x86_64-linux-gnu/bits/mathcalls-helper-functions.h \
+  /usr/include/x86_64-linux-gnu/bits/mathcalls.h
+ ../py/objint_mpz.c /usr/include/stdc-predef.h :
+  /usr/include/string.h :
+  /usr/include/x86_64-linux-gnu/bits/libc-header-start.h :
+  /usr/include/features.h /usr/include/x86_64-linux-gnu/sys/cdefs.h :
+  /usr/include/x86_64-linux-gnu/bits/wordsize.h :
+  /usr/include/x86_64-linux-gnu/bits/long-double.h :
+  /usr/include/x86_64-linux-gnu/gnu/stubs.h :
+  /usr/include/x86_64-linux-gnu/gnu/stubs-64.h :
+  /usr/lib/gcc/x86_64-linux-gnu/7/include/stddef.h :
+  /usr/include/x86_64-linux-gnu/bits/types/locale_t.h :
+  /usr/include/x86_64-linux-gnu/bits/types/__locale_t.h :
+  /usr/include/strings.h :
+  /usr/include/x86_64-linux-gnu/bits/strings_fortified.h :
+  /usr/include/x86_64-linux-gnu/bits/string_fortified.h :
+  /usr/include/stdio.h /usr/include/x86_64-linux-gnu/bits/types.h :
+  /usr/include/x86_64-linux-gnu/bits/typesizes.h :
+  /usr/include/x86_64-linux-gnu/bits/types/__FILE.h :
+  /usr/include/x86_64-linux-gnu/bits/types/FILE.h :
+  /usr/include/x86_64-linux-gnu/bits/libio.h :
+  /usr/include/x86_64-linux-gnu/bits/_G_config.h :
+  /usr/include/x86_64-linux-gnu/bits/types/__mbstate_t.h :
+  /usr/lib/gcc/x86_64-linux-gnu/7/include/stdarg.h :
+  /usr/include/x86_64-linux-gnu/bits/stdio_lim.h :
+  /usr/include/x86_64-linux-gnu/bits/sys_errlist.h :
+  /usr/include/x86_64-linux-gnu/bits/stdio2.h /usr/include/assert.h :
+  ../py/parsenumbase.h ../py/mpconfig.h mpconfigport.h :
+  /usr/include/alloca.h /usr/lib/gcc/x86_64-linux-gnu/7/include/stdint.h :
+  /usr/include/stdint.h /usr/include/x86_64-linux-gnu/bits/wchar.h :
+  /usr/include/x86_64-linux-gnu/bits/stdint-intn.h :
+  /usr/include/x86_64-linux-gnu/bits/stdint-uintn.h ../py/smallint.h :
+  ../py/misc.h /usr/lib/gcc/x86_64-linux-gnu/7/include/stdbool.h :
+  ../py/objint.h ../py/mpz.h ../py/obj.h ../py/qstr.h :
+  build/genhdr/qstrdefs.generated.h ../py/mpprint.h ../py/runtime0.h :
+  ../py/runtime.h ../py/mpstate.h ../py/mpthread.h ../py/nlr.h :
+  /usr/lib/gcc/x86_64-linux-gnu/7/include-fixed/limits.h :
+  /usr/lib/gcc/x86_64-linux-gnu/7/include-fixed/syslimits.h :
+  /usr/include/limits.h /usr/include/x86_64-linux-gnu/bits/posix1_lim.h :
+  /usr/include/x86_64-linux-gnu/bits/local_lim.h :
+  /usr/include/linux/limits.h :
+  /usr/include/x86_64-linux-gnu/bits/posix2_lim.h ../py/objlist.h :
+  ../py/objexcept.h ../py/objtuple.h ../py/pystack.h /usr/include/math.h :
+  /usr/include/x86_64-linux-gnu/bits/math-vector.h :
+  /usr/include/x86_64-linux-gnu/bits/libm-simd-decl-stubs.h :
+  /usr/include/x86_64-linux-gnu/bits/floatn.h :
+  /usr/include/x86_64-linux-gnu/bits/floatn-common.h :
+  /usr/include/x86_64-linux-gnu/bits/flt-eval-method.h :
+  /usr/include/x86_64-linux-gnu/bits/fp-logb.h :
+  /usr/include/x86_64-linux-gnu/bits/fp-fast.h :
+  /usr/include/x86_64-linux-gnu/bits/mathcalls-helper-functions.h :
+  /usr/include/x86_64-linux-gnu/bits/mathcalls.h :
Binary files MicorpythonOriginal1.12/micropython/mpy-cross/build/py/objint.o and micropython1.12_withUlab/micropython/mpy-cross/build/py/objint.o differ
diff -crNb MicorpythonOriginal1.12/micropython/mpy-cross/build/py/objint.P micropython1.12_withUlab/micropython/mpy-cross/build/py/objint.P
*** MicorpythonOriginal1.12/micropython/mpy-cross/build/py/objint.P	1970-01-01 02:00:00.000000000 +0200
--- micropython1.12_withUlab/micropython/mpy-cross/build/py/objint.P	2020-06-19 18:37:37.443549234 +0200
***************
*** 0 ****
--- 1,138 ----
+ build/py/objint.o: ../py/objint.c /usr/include/stdc-predef.h \
+  /usr/include/stdlib.h \
+  /usr/include/x86_64-linux-gnu/bits/libc-header-start.h \
+  /usr/include/features.h /usr/include/x86_64-linux-gnu/sys/cdefs.h \
+  /usr/include/x86_64-linux-gnu/bits/wordsize.h \
+  /usr/include/x86_64-linux-gnu/bits/long-double.h \
+  /usr/include/x86_64-linux-gnu/gnu/stubs.h \
+  /usr/include/x86_64-linux-gnu/gnu/stubs-64.h \
+  /usr/lib/gcc/x86_64-linux-gnu/7/include/stddef.h \
+  /usr/include/x86_64-linux-gnu/bits/waitflags.h \
+  /usr/include/x86_64-linux-gnu/bits/waitstatus.h \
+  /usr/include/x86_64-linux-gnu/bits/floatn.h \
+  /usr/include/x86_64-linux-gnu/bits/floatn-common.h \
+  /usr/include/x86_64-linux-gnu/sys/types.h \
+  /usr/include/x86_64-linux-gnu/bits/types.h \
+  /usr/include/x86_64-linux-gnu/bits/typesizes.h \
+  /usr/include/x86_64-linux-gnu/bits/types/clock_t.h \
+  /usr/include/x86_64-linux-gnu/bits/types/clockid_t.h \
+  /usr/include/x86_64-linux-gnu/bits/types/time_t.h \
+  /usr/include/x86_64-linux-gnu/bits/types/timer_t.h \
+  /usr/include/x86_64-linux-gnu/bits/stdint-intn.h /usr/include/endian.h \
+  /usr/include/x86_64-linux-gnu/bits/endian.h \
+  /usr/include/x86_64-linux-gnu/bits/byteswap.h \
+  /usr/include/x86_64-linux-gnu/bits/byteswap-16.h \
+  /usr/include/x86_64-linux-gnu/bits/uintn-identity.h \
+  /usr/include/x86_64-linux-gnu/sys/select.h \
+  /usr/include/x86_64-linux-gnu/bits/select.h \
+  /usr/include/x86_64-linux-gnu/bits/types/sigset_t.h \
+  /usr/include/x86_64-linux-gnu/bits/types/__sigset_t.h \
+  /usr/include/x86_64-linux-gnu/bits/types/struct_timeval.h \
+  /usr/include/x86_64-linux-gnu/bits/types/struct_timespec.h \
+  /usr/include/x86_64-linux-gnu/bits/select2.h \
+  /usr/include/x86_64-linux-gnu/sys/sysmacros.h \
+  /usr/include/x86_64-linux-gnu/bits/sysmacros.h \
+  /usr/include/x86_64-linux-gnu/bits/pthreadtypes.h \
+  /usr/include/x86_64-linux-gnu/bits/thread-shared-types.h \
+  /usr/include/x86_64-linux-gnu/bits/pthreadtypes-arch.h \
+  /usr/include/alloca.h /usr/include/x86_64-linux-gnu/bits/stdlib-float.h \
+  /usr/include/x86_64-linux-gnu/bits/stdlib.h /usr/include/assert.h \
+  /usr/include/string.h \
+  /usr/include/x86_64-linux-gnu/bits/types/locale_t.h \
+  /usr/include/x86_64-linux-gnu/bits/types/__locale_t.h \
+  /usr/include/strings.h \
+  /usr/include/x86_64-linux-gnu/bits/strings_fortified.h \
+  /usr/include/x86_64-linux-gnu/bits/string_fortified.h ../py/parsenum.h \
+  ../py/mpconfig.h mpconfigport.h \
+  /usr/lib/gcc/x86_64-linux-gnu/7/include/stdint.h /usr/include/stdint.h \
+  /usr/include/x86_64-linux-gnu/bits/wchar.h \
+  /usr/include/x86_64-linux-gnu/bits/stdint-uintn.h ../py/lexer.h \
+  ../py/qstr.h ../py/misc.h \
+  /usr/lib/gcc/x86_64-linux-gnu/7/include/stdbool.h \
+  build/genhdr/qstrdefs.generated.h ../py/reader.h ../py/obj.h \
+  ../py/mpprint.h ../py/runtime0.h ../py/smallint.h ../py/objint.h \
+  ../py/mpz.h ../py/objstr.h ../py/runtime.h ../py/mpstate.h \
+  ../py/mpthread.h ../py/nlr.h \
+  /usr/lib/gcc/x86_64-linux-gnu/7/include-fixed/limits.h \
+  /usr/lib/gcc/x86_64-linux-gnu/7/include-fixed/syslimits.h \
+  /usr/include/limits.h /usr/include/x86_64-linux-gnu/bits/posix1_lim.h \
+  /usr/include/x86_64-linux-gnu/bits/local_lim.h \
+  /usr/include/linux/limits.h \
+  /usr/include/x86_64-linux-gnu/bits/posix2_lim.h ../py/objlist.h \
+  ../py/objexcept.h ../py/objtuple.h ../py/pystack.h ../py/binary.h \
+  /usr/include/math.h /usr/include/x86_64-linux-gnu/bits/math-vector.h \
+  /usr/include/x86_64-linux-gnu/bits/libm-simd-decl-stubs.h \
+  /usr/include/x86_64-linux-gnu/bits/flt-eval-method.h \
+  /usr/include/x86_64-linux-gnu/bits/fp-logb.h \
+  /usr/include/x86_64-linux-gnu/bits/fp-fast.h \
+  /usr/include/x86_64-linux-gnu/bits/mathcalls-helper-functions.h \
+  /usr/include/x86_64-linux-gnu/bits/mathcalls.h
+ ../py/objint.c /usr/include/stdc-predef.h :
+  /usr/include/stdlib.h :
+  /usr/include/x86_64-linux-gnu/bits/libc-header-start.h :
+  /usr/include/features.h /usr/include/x86_64-linux-gnu/sys/cdefs.h :
+  /usr/include/x86_64-linux-gnu/bits/wordsize.h :
+  /usr/include/x86_64-linux-gnu/bits/long-double.h :
+  /usr/include/x86_64-linux-gnu/gnu/stubs.h :
+  /usr/include/x86_64-linux-gnu/gnu/stubs-64.h :
+  /usr/lib/gcc/x86_64-linux-gnu/7/include/stddef.h :
+  /usr/include/x86_64-linux-gnu/bits/waitflags.h :
+  /usr/include/x86_64-linux-gnu/bits/waitstatus.h :
+  /usr/include/x86_64-linux-gnu/bits/floatn.h :
+  /usr/include/x86_64-linux-gnu/bits/floatn-common.h :
+  /usr/include/x86_64-linux-gnu/sys/types.h :
+  /usr/include/x86_64-linux-gnu/bits/types.h :
+  /usr/include/x86_64-linux-gnu/bits/typesizes.h :
+  /usr/include/x86_64-linux-gnu/bits/types/clock_t.h :
+  /usr/include/x86_64-linux-gnu/bits/types/clockid_t.h :
+  /usr/include/x86_64-linux-gnu/bits/types/time_t.h :
+  /usr/include/x86_64-linux-gnu/bits/types/timer_t.h :
+  /usr/include/x86_64-linux-gnu/bits/stdint-intn.h /usr/include/endian.h :
+  /usr/include/x86_64-linux-gnu/bits/endian.h :
+  /usr/include/x86_64-linux-gnu/bits/byteswap.h :
+  /usr/include/x86_64-linux-gnu/bits/byteswap-16.h :
+  /usr/include/x86_64-linux-gnu/bits/uintn-identity.h :
+  /usr/include/x86_64-linux-gnu/sys/select.h :
+  /usr/include/x86_64-linux-gnu/bits/select.h :
+  /usr/include/x86_64-linux-gnu/bits/types/sigset_t.h :
+  /usr/include/x86_64-linux-gnu/bits/types/__sigset_t.h :
+  /usr/include/x86_64-linux-gnu/bits/types/struct_timeval.h :
+  /usr/include/x86_64-linux-gnu/bits/types/struct_timespec.h :
+  /usr/include/x86_64-linux-gnu/bits/select2.h :
+  /usr/include/x86_64-linux-gnu/sys/sysmacros.h :
+  /usr/include/x86_64-linux-gnu/bits/sysmacros.h :
+  /usr/include/x86_64-linux-gnu/bits/pthreadtypes.h :
+  /usr/include/x86_64-linux-gnu/bits/thread-shared-types.h :
+  /usr/include/x86_64-linux-gnu/bits/pthreadtypes-arch.h :
+  /usr/include/alloca.h /usr/include/x86_64-linux-gnu/bits/stdlib-float.h :
+  /usr/include/x86_64-linux-gnu/bits/stdlib.h /usr/include/assert.h :
+  /usr/include/string.h :
+  /usr/include/x86_64-linux-gnu/bits/types/locale_t.h :
+  /usr/include/x86_64-linux-gnu/bits/types/__locale_t.h :
+  /usr/include/strings.h :
+  /usr/include/x86_64-linux-gnu/bits/strings_fortified.h :
+  /usr/include/x86_64-linux-gnu/bits/string_fortified.h ../py/parsenum.h :
+  ../py/mpconfig.h mpconfigport.h :
+  /usr/lib/gcc/x86_64-linux-gnu/7/include/stdint.h /usr/include/stdint.h :
+  /usr/include/x86_64-linux-gnu/bits/wchar.h :
+  /usr/include/x86_64-linux-gnu/bits/stdint-uintn.h ../py/lexer.h :
+  ../py/qstr.h ../py/misc.h :
+  /usr/lib/gcc/x86_64-linux-gnu/7/include/stdbool.h :
+  build/genhdr/qstrdefs.generated.h ../py/reader.h ../py/obj.h :
+  ../py/mpprint.h ../py/runtime0.h ../py/smallint.h ../py/objint.h :
+  ../py/mpz.h ../py/objstr.h ../py/runtime.h ../py/mpstate.h :
+  ../py/mpthread.h ../py/nlr.h :
+  /usr/lib/gcc/x86_64-linux-gnu/7/include-fixed/limits.h :
+  /usr/lib/gcc/x86_64-linux-gnu/7/include-fixed/syslimits.h :
+  /usr/include/limits.h /usr/include/x86_64-linux-gnu/bits/posix1_lim.h :
+  /usr/include/x86_64-linux-gnu/bits/local_lim.h :
+  /usr/include/linux/limits.h :
+  /usr/include/x86_64-linux-gnu/bits/posix2_lim.h ../py/objlist.h :
+  ../py/objexcept.h ../py/objtuple.h ../py/pystack.h ../py/binary.h :
+  /usr/include/math.h /usr/include/x86_64-linux-gnu/bits/math-vector.h :
+  /usr/include/x86_64-linux-gnu/bits/libm-simd-decl-stubs.h :
+  /usr/include/x86_64-linux-gnu/bits/flt-eval-method.h :
+  /usr/include/x86_64-linux-gnu/bits/fp-logb.h :
+  /usr/include/x86_64-linux-gnu/bits/fp-fast.h :
+  /usr/include/x86_64-linux-gnu/bits/mathcalls-helper-functions.h :
+  /usr/include/x86_64-linux-gnu/bits/mathcalls.h :
Binary files MicorpythonOriginal1.12/micropython/mpy-cross/build/py/objlist.o and micropython1.12_withUlab/micropython/mpy-cross/build/py/objlist.o differ
diff -crNb MicorpythonOriginal1.12/micropython/mpy-cross/build/py/objlist.P micropython1.12_withUlab/micropython/mpy-cross/build/py/objlist.P
*** MicorpythonOriginal1.12/micropython/mpy-cross/build/py/objlist.P	1970-01-01 02:00:00.000000000 +0200
--- micropython1.12_withUlab/micropython/mpy-cross/build/py/objlist.P	2020-06-19 18:37:37.619545470 +0200
***************
*** 0 ****
--- 1,64 ----
+ build/py/objlist.o: ../py/objlist.c /usr/include/stdc-predef.h \
+  /usr/include/string.h \
+  /usr/include/x86_64-linux-gnu/bits/libc-header-start.h \
+  /usr/include/features.h /usr/include/x86_64-linux-gnu/sys/cdefs.h \
+  /usr/include/x86_64-linux-gnu/bits/wordsize.h \
+  /usr/include/x86_64-linux-gnu/bits/long-double.h \
+  /usr/include/x86_64-linux-gnu/gnu/stubs.h \
+  /usr/include/x86_64-linux-gnu/gnu/stubs-64.h \
+  /usr/lib/gcc/x86_64-linux-gnu/7/include/stddef.h \
+  /usr/include/x86_64-linux-gnu/bits/types/locale_t.h \
+  /usr/include/x86_64-linux-gnu/bits/types/__locale_t.h \
+  /usr/include/strings.h \
+  /usr/include/x86_64-linux-gnu/bits/strings_fortified.h \
+  /usr/include/x86_64-linux-gnu/bits/string_fortified.h \
+  /usr/include/assert.h ../py/objlist.h ../py/obj.h ../py/mpconfig.h \
+  mpconfigport.h /usr/include/alloca.h \
+  /usr/lib/gcc/x86_64-linux-gnu/7/include/stdint.h /usr/include/stdint.h \
+  /usr/include/x86_64-linux-gnu/bits/types.h \
+  /usr/include/x86_64-linux-gnu/bits/typesizes.h \
+  /usr/include/x86_64-linux-gnu/bits/wchar.h \
+  /usr/include/x86_64-linux-gnu/bits/stdint-intn.h \
+  /usr/include/x86_64-linux-gnu/bits/stdint-uintn.h ../py/misc.h \
+  /usr/lib/gcc/x86_64-linux-gnu/7/include/stdbool.h ../py/qstr.h \
+  build/genhdr/qstrdefs.generated.h ../py/mpprint.h ../py/runtime0.h \
+  ../py/runtime.h ../py/mpstate.h ../py/mpthread.h ../py/nlr.h \
+  /usr/lib/gcc/x86_64-linux-gnu/7/include-fixed/limits.h \
+  /usr/lib/gcc/x86_64-linux-gnu/7/include-fixed/syslimits.h \
+  /usr/include/limits.h /usr/include/x86_64-linux-gnu/bits/posix1_lim.h \
+  /usr/include/x86_64-linux-gnu/bits/local_lim.h \
+  /usr/include/linux/limits.h \
+  /usr/include/x86_64-linux-gnu/bits/posix2_lim.h ../py/objexcept.h \
+  ../py/objtuple.h ../py/pystack.h ../py/stackctrl.h
+ ../py/objlist.c /usr/include/stdc-predef.h :
+  /usr/include/string.h :
+  /usr/include/x86_64-linux-gnu/bits/libc-header-start.h :
+  /usr/include/features.h /usr/include/x86_64-linux-gnu/sys/cdefs.h :
+  /usr/include/x86_64-linux-gnu/bits/wordsize.h :
+  /usr/include/x86_64-linux-gnu/bits/long-double.h :
+  /usr/include/x86_64-linux-gnu/gnu/stubs.h :
+  /usr/include/x86_64-linux-gnu/gnu/stubs-64.h :
+  /usr/lib/gcc/x86_64-linux-gnu/7/include/stddef.h :
+  /usr/include/x86_64-linux-gnu/bits/types/locale_t.h :
+  /usr/include/x86_64-linux-gnu/bits/types/__locale_t.h :
+  /usr/include/strings.h :
+  /usr/include/x86_64-linux-gnu/bits/strings_fortified.h :
+  /usr/include/x86_64-linux-gnu/bits/string_fortified.h :
+  /usr/include/assert.h ../py/objlist.h ../py/obj.h ../py/mpconfig.h :
+  mpconfigport.h /usr/include/alloca.h :
+  /usr/lib/gcc/x86_64-linux-gnu/7/include/stdint.h /usr/include/stdint.h :
+  /usr/include/x86_64-linux-gnu/bits/types.h :
+  /usr/include/x86_64-linux-gnu/bits/typesizes.h :
+  /usr/include/x86_64-linux-gnu/bits/wchar.h :
+  /usr/include/x86_64-linux-gnu/bits/stdint-intn.h :
+  /usr/include/x86_64-linux-gnu/bits/stdint-uintn.h ../py/misc.h :
+  /usr/lib/gcc/x86_64-linux-gnu/7/include/stdbool.h ../py/qstr.h :
+  build/genhdr/qstrdefs.generated.h ../py/mpprint.h ../py/runtime0.h :
+  ../py/runtime.h ../py/mpstate.h ../py/mpthread.h ../py/nlr.h :
+  /usr/lib/gcc/x86_64-linux-gnu/7/include-fixed/limits.h :
+  /usr/lib/gcc/x86_64-linux-gnu/7/include-fixed/syslimits.h :
+  /usr/include/limits.h /usr/include/x86_64-linux-gnu/bits/posix1_lim.h :
+  /usr/include/x86_64-linux-gnu/bits/local_lim.h :
+  /usr/include/linux/limits.h :
+  /usr/include/x86_64-linux-gnu/bits/posix2_lim.h ../py/objexcept.h :
+  ../py/objtuple.h ../py/pystack.h ../py/stackctrl.h :
Binary files MicorpythonOriginal1.12/micropython/mpy-cross/build/py/objmap.o and micropython1.12_withUlab/micropython/mpy-cross/build/py/objmap.o differ
diff -crNb MicorpythonOriginal1.12/micropython/mpy-cross/build/py/objmap.P micropython1.12_withUlab/micropython/mpy-cross/build/py/objmap.P
*** MicorpythonOriginal1.12/micropython/mpy-cross/build/py/objmap.P	1970-01-01 02:00:00.000000000 +0200
--- micropython1.12_withUlab/micropython/mpy-cross/build/py/objmap.P	2020-06-19 18:37:37.647544872 +0200
***************
*** 0 ****
--- 1,106 ----
+ build/py/objmap.o: ../py/objmap.c /usr/include/stdc-predef.h \
+  /usr/include/stdlib.h \
+  /usr/include/x86_64-linux-gnu/bits/libc-header-start.h \
+  /usr/include/features.h /usr/include/x86_64-linux-gnu/sys/cdefs.h \
+  /usr/include/x86_64-linux-gnu/bits/wordsize.h \
+  /usr/include/x86_64-linux-gnu/bits/long-double.h \
+  /usr/include/x86_64-linux-gnu/gnu/stubs.h \
+  /usr/include/x86_64-linux-gnu/gnu/stubs-64.h \
+  /usr/lib/gcc/x86_64-linux-gnu/7/include/stddef.h \
+  /usr/include/x86_64-linux-gnu/bits/waitflags.h \
+  /usr/include/x86_64-linux-gnu/bits/waitstatus.h \
+  /usr/include/x86_64-linux-gnu/bits/floatn.h \
+  /usr/include/x86_64-linux-gnu/bits/floatn-common.h \
+  /usr/include/x86_64-linux-gnu/sys/types.h \
+  /usr/include/x86_64-linux-gnu/bits/types.h \
+  /usr/include/x86_64-linux-gnu/bits/typesizes.h \
+  /usr/include/x86_64-linux-gnu/bits/types/clock_t.h \
+  /usr/include/x86_64-linux-gnu/bits/types/clockid_t.h \
+  /usr/include/x86_64-linux-gnu/bits/types/time_t.h \
+  /usr/include/x86_64-linux-gnu/bits/types/timer_t.h \
+  /usr/include/x86_64-linux-gnu/bits/stdint-intn.h /usr/include/endian.h \
+  /usr/include/x86_64-linux-gnu/bits/endian.h \
+  /usr/include/x86_64-linux-gnu/bits/byteswap.h \
+  /usr/include/x86_64-linux-gnu/bits/byteswap-16.h \
+  /usr/include/x86_64-linux-gnu/bits/uintn-identity.h \
+  /usr/include/x86_64-linux-gnu/sys/select.h \
+  /usr/include/x86_64-linux-gnu/bits/select.h \
+  /usr/include/x86_64-linux-gnu/bits/types/sigset_t.h \
+  /usr/include/x86_64-linux-gnu/bits/types/__sigset_t.h \
+  /usr/include/x86_64-linux-gnu/bits/types/struct_timeval.h \
+  /usr/include/x86_64-linux-gnu/bits/types/struct_timespec.h \
+  /usr/include/x86_64-linux-gnu/bits/select2.h \
+  /usr/include/x86_64-linux-gnu/sys/sysmacros.h \
+  /usr/include/x86_64-linux-gnu/bits/sysmacros.h \
+  /usr/include/x86_64-linux-gnu/bits/pthreadtypes.h \
+  /usr/include/x86_64-linux-gnu/bits/thread-shared-types.h \
+  /usr/include/x86_64-linux-gnu/bits/pthreadtypes-arch.h \
+  /usr/include/alloca.h /usr/include/x86_64-linux-gnu/bits/stdlib-float.h \
+  /usr/include/x86_64-linux-gnu/bits/stdlib.h /usr/include/assert.h \
+  ../py/runtime.h ../py/mpstate.h \
+  /usr/lib/gcc/x86_64-linux-gnu/7/include/stdint.h /usr/include/stdint.h \
+  /usr/include/x86_64-linux-gnu/bits/wchar.h \
+  /usr/include/x86_64-linux-gnu/bits/stdint-uintn.h ../py/mpconfig.h \
+  mpconfigport.h ../py/mpthread.h ../py/misc.h \
+  /usr/lib/gcc/x86_64-linux-gnu/7/include/stdbool.h ../py/nlr.h \
+  /usr/lib/gcc/x86_64-linux-gnu/7/include-fixed/limits.h \
+  /usr/lib/gcc/x86_64-linux-gnu/7/include-fixed/syslimits.h \
+  /usr/include/limits.h /usr/include/x86_64-linux-gnu/bits/posix1_lim.h \
+  /usr/include/x86_64-linux-gnu/bits/local_lim.h \
+  /usr/include/linux/limits.h \
+  /usr/include/x86_64-linux-gnu/bits/posix2_lim.h ../py/obj.h ../py/qstr.h \
+  build/genhdr/qstrdefs.generated.h ../py/mpprint.h ../py/runtime0.h \
+  ../py/objlist.h ../py/objexcept.h ../py/objtuple.h ../py/pystack.h
+ ../py/objmap.c /usr/include/stdc-predef.h :
+  /usr/include/stdlib.h :
+  /usr/include/x86_64-linux-gnu/bits/libc-header-start.h :
+  /usr/include/features.h /usr/include/x86_64-linux-gnu/sys/cdefs.h :
+  /usr/include/x86_64-linux-gnu/bits/wordsize.h :
+  /usr/include/x86_64-linux-gnu/bits/long-double.h :
+  /usr/include/x86_64-linux-gnu/gnu/stubs.h :
+  /usr/include/x86_64-linux-gnu/gnu/stubs-64.h :
+  /usr/lib/gcc/x86_64-linux-gnu/7/include/stddef.h :
+  /usr/include/x86_64-linux-gnu/bits/waitflags.h :
+  /usr/include/x86_64-linux-gnu/bits/waitstatus.h :
+  /usr/include/x86_64-linux-gnu/bits/floatn.h :
+  /usr/include/x86_64-linux-gnu/bits/floatn-common.h :
+  /usr/include/x86_64-linux-gnu/sys/types.h :
+  /usr/include/x86_64-linux-gnu/bits/types.h :
+  /usr/include/x86_64-linux-gnu/bits/typesizes.h :
+  /usr/include/x86_64-linux-gnu/bits/types/clock_t.h :
+  /usr/include/x86_64-linux-gnu/bits/types/clockid_t.h :
+  /usr/include/x86_64-linux-gnu/bits/types/time_t.h :
+  /usr/include/x86_64-linux-gnu/bits/types/timer_t.h :
+  /usr/include/x86_64-linux-gnu/bits/stdint-intn.h /usr/include/endian.h :
+  /usr/include/x86_64-linux-gnu/bits/endian.h :
+  /usr/include/x86_64-linux-gnu/bits/byteswap.h :
+  /usr/include/x86_64-linux-gnu/bits/byteswap-16.h :
+  /usr/include/x86_64-linux-gnu/bits/uintn-identity.h :
+  /usr/include/x86_64-linux-gnu/sys/select.h :
+  /usr/include/x86_64-linux-gnu/bits/select.h :
+  /usr/include/x86_64-linux-gnu/bits/types/sigset_t.h :
+  /usr/include/x86_64-linux-gnu/bits/types/__sigset_t.h :
+  /usr/include/x86_64-linux-gnu/bits/types/struct_timeval.h :
+  /usr/include/x86_64-linux-gnu/bits/types/struct_timespec.h :
+  /usr/include/x86_64-linux-gnu/bits/select2.h :
+  /usr/include/x86_64-linux-gnu/sys/sysmacros.h :
+  /usr/include/x86_64-linux-gnu/bits/sysmacros.h :
+  /usr/include/x86_64-linux-gnu/bits/pthreadtypes.h :
+  /usr/include/x86_64-linux-gnu/bits/thread-shared-types.h :
+  /usr/include/x86_64-linux-gnu/bits/pthreadtypes-arch.h :
+  /usr/include/alloca.h /usr/include/x86_64-linux-gnu/bits/stdlib-float.h :
+  /usr/include/x86_64-linux-gnu/bits/stdlib.h /usr/include/assert.h :
+  ../py/runtime.h ../py/mpstate.h :
+  /usr/lib/gcc/x86_64-linux-gnu/7/include/stdint.h /usr/include/stdint.h :
+  /usr/include/x86_64-linux-gnu/bits/wchar.h :
+  /usr/include/x86_64-linux-gnu/bits/stdint-uintn.h ../py/mpconfig.h :
+  mpconfigport.h ../py/mpthread.h ../py/misc.h :
+  /usr/lib/gcc/x86_64-linux-gnu/7/include/stdbool.h ../py/nlr.h :
+  /usr/lib/gcc/x86_64-linux-gnu/7/include-fixed/limits.h :
+  /usr/lib/gcc/x86_64-linux-gnu/7/include-fixed/syslimits.h :
+  /usr/include/limits.h /usr/include/x86_64-linux-gnu/bits/posix1_lim.h :
+  /usr/include/x86_64-linux-gnu/bits/local_lim.h :
+  /usr/include/linux/limits.h :
+  /usr/include/x86_64-linux-gnu/bits/posix2_lim.h ../py/obj.h ../py/qstr.h :
+  build/genhdr/qstrdefs.generated.h ../py/mpprint.h ../py/runtime0.h :
+  ../py/objlist.h ../py/objexcept.h ../py/objtuple.h ../py/pystack.h :
Binary files MicorpythonOriginal1.12/micropython/mpy-cross/build/py/objmodule.o and micropython1.12_withUlab/micropython/mpy-cross/build/py/objmodule.o differ
diff -crNb MicorpythonOriginal1.12/micropython/mpy-cross/build/py/objmodule.P micropython1.12_withUlab/micropython/mpy-cross/build/py/objmodule.P
*** MicorpythonOriginal1.12/micropython/mpy-cross/build/py/objmodule.P	1970-01-01 02:00:00.000000000 +0200
--- micropython1.12_withUlab/micropython/mpy-cross/build/py/objmodule.P	2020-06-19 19:54:02.313490630 +0200
***************
*** 0 ****
--- 1,118 ----
+ build/py/objmodule.o: ../py/objmodule.c /usr/include/stdc-predef.h \
+  /usr/include/stdlib.h \
+  /usr/include/x86_64-linux-gnu/bits/libc-header-start.h \
+  /usr/include/features.h /usr/include/x86_64-linux-gnu/sys/cdefs.h \
+  /usr/include/x86_64-linux-gnu/bits/wordsize.h \
+  /usr/include/x86_64-linux-gnu/bits/long-double.h \
+  /usr/include/x86_64-linux-gnu/gnu/stubs.h \
+  /usr/include/x86_64-linux-gnu/gnu/stubs-64.h \
+  /usr/lib/gcc/x86_64-linux-gnu/7/include/stddef.h \
+  /usr/include/x86_64-linux-gnu/bits/waitflags.h \
+  /usr/include/x86_64-linux-gnu/bits/waitstatus.h \
+  /usr/include/x86_64-linux-gnu/bits/floatn.h \
+  /usr/include/x86_64-linux-gnu/bits/floatn-common.h \
+  /usr/include/x86_64-linux-gnu/sys/types.h \
+  /usr/include/x86_64-linux-gnu/bits/types.h \
+  /usr/include/x86_64-linux-gnu/bits/typesizes.h \
+  /usr/include/x86_64-linux-gnu/bits/types/clock_t.h \
+  /usr/include/x86_64-linux-gnu/bits/types/clockid_t.h \
+  /usr/include/x86_64-linux-gnu/bits/types/time_t.h \
+  /usr/include/x86_64-linux-gnu/bits/types/timer_t.h \
+  /usr/include/x86_64-linux-gnu/bits/stdint-intn.h /usr/include/endian.h \
+  /usr/include/x86_64-linux-gnu/bits/endian.h \
+  /usr/include/x86_64-linux-gnu/bits/byteswap.h \
+  /usr/include/x86_64-linux-gnu/bits/byteswap-16.h \
+  /usr/include/x86_64-linux-gnu/bits/uintn-identity.h \
+  /usr/include/x86_64-linux-gnu/sys/select.h \
+  /usr/include/x86_64-linux-gnu/bits/select.h \
+  /usr/include/x86_64-linux-gnu/bits/types/sigset_t.h \
+  /usr/include/x86_64-linux-gnu/bits/types/__sigset_t.h \
+  /usr/include/x86_64-linux-gnu/bits/types/struct_timeval.h \
+  /usr/include/x86_64-linux-gnu/bits/types/struct_timespec.h \
+  /usr/include/x86_64-linux-gnu/bits/select2.h \
+  /usr/include/x86_64-linux-gnu/sys/sysmacros.h \
+  /usr/include/x86_64-linux-gnu/bits/sysmacros.h \
+  /usr/include/x86_64-linux-gnu/bits/pthreadtypes.h \
+  /usr/include/x86_64-linux-gnu/bits/thread-shared-types.h \
+  /usr/include/x86_64-linux-gnu/bits/pthreadtypes-arch.h \
+  /usr/include/alloca.h /usr/include/x86_64-linux-gnu/bits/stdlib-float.h \
+  /usr/include/x86_64-linux-gnu/bits/stdlib.h /usr/include/string.h \
+  /usr/include/x86_64-linux-gnu/bits/types/locale_t.h \
+  /usr/include/x86_64-linux-gnu/bits/types/__locale_t.h \
+  /usr/include/strings.h \
+  /usr/include/x86_64-linux-gnu/bits/strings_fortified.h \
+  /usr/include/x86_64-linux-gnu/bits/string_fortified.h \
+  /usr/include/assert.h ../py/objmodule.h ../py/obj.h ../py/mpconfig.h \
+  mpconfigport.h /usr/lib/gcc/x86_64-linux-gnu/7/include/stdint.h \
+  /usr/include/stdint.h /usr/include/x86_64-linux-gnu/bits/wchar.h \
+  /usr/include/x86_64-linux-gnu/bits/stdint-uintn.h ../py/misc.h \
+  /usr/lib/gcc/x86_64-linux-gnu/7/include/stdbool.h ../py/qstr.h \
+  build/genhdr/qstrdefs.generated.h ../py/mpprint.h ../py/runtime0.h \
+  ../py/runtime.h ../py/mpstate.h ../py/mpthread.h ../py/nlr.h \
+  /usr/lib/gcc/x86_64-linux-gnu/7/include-fixed/limits.h \
+  /usr/lib/gcc/x86_64-linux-gnu/7/include-fixed/syslimits.h \
+  /usr/include/limits.h /usr/include/x86_64-linux-gnu/bits/posix1_lim.h \
+  /usr/include/x86_64-linux-gnu/bits/local_lim.h \
+  /usr/include/linux/limits.h \
+  /usr/include/x86_64-linux-gnu/bits/posix2_lim.h ../py/objlist.h \
+  ../py/objexcept.h ../py/objtuple.h ../py/pystack.h ../py/builtin.h \
+  build/genhdr/moduledefs.h
+ ../py/objmodule.c /usr/include/stdc-predef.h :
+  /usr/include/stdlib.h :
+  /usr/include/x86_64-linux-gnu/bits/libc-header-start.h :
+  /usr/include/features.h /usr/include/x86_64-linux-gnu/sys/cdefs.h :
+  /usr/include/x86_64-linux-gnu/bits/wordsize.h :
+  /usr/include/x86_64-linux-gnu/bits/long-double.h :
+  /usr/include/x86_64-linux-gnu/gnu/stubs.h :
+  /usr/include/x86_64-linux-gnu/gnu/stubs-64.h :
+  /usr/lib/gcc/x86_64-linux-gnu/7/include/stddef.h :
+  /usr/include/x86_64-linux-gnu/bits/waitflags.h :
+  /usr/include/x86_64-linux-gnu/bits/waitstatus.h :
+  /usr/include/x86_64-linux-gnu/bits/floatn.h :
+  /usr/include/x86_64-linux-gnu/bits/floatn-common.h :
+  /usr/include/x86_64-linux-gnu/sys/types.h :
+  /usr/include/x86_64-linux-gnu/bits/types.h :
+  /usr/include/x86_64-linux-gnu/bits/typesizes.h :
+  /usr/include/x86_64-linux-gnu/bits/types/clock_t.h :
+  /usr/include/x86_64-linux-gnu/bits/types/clockid_t.h :
+  /usr/include/x86_64-linux-gnu/bits/types/time_t.h :
+  /usr/include/x86_64-linux-gnu/bits/types/timer_t.h :
+  /usr/include/x86_64-linux-gnu/bits/stdint-intn.h /usr/include/endian.h :
+  /usr/include/x86_64-linux-gnu/bits/endian.h :
+  /usr/include/x86_64-linux-gnu/bits/byteswap.h :
+  /usr/include/x86_64-linux-gnu/bits/byteswap-16.h :
+  /usr/include/x86_64-linux-gnu/bits/uintn-identity.h :
+  /usr/include/x86_64-linux-gnu/sys/select.h :
+  /usr/include/x86_64-linux-gnu/bits/select.h :
+  /usr/include/x86_64-linux-gnu/bits/types/sigset_t.h :
+  /usr/include/x86_64-linux-gnu/bits/types/__sigset_t.h :
+  /usr/include/x86_64-linux-gnu/bits/types/struct_timeval.h :
+  /usr/include/x86_64-linux-gnu/bits/types/struct_timespec.h :
+  /usr/include/x86_64-linux-gnu/bits/select2.h :
+  /usr/include/x86_64-linux-gnu/sys/sysmacros.h :
+  /usr/include/x86_64-linux-gnu/bits/sysmacros.h :
+  /usr/include/x86_64-linux-gnu/bits/pthreadtypes.h :
+  /usr/include/x86_64-linux-gnu/bits/thread-shared-types.h :
+  /usr/include/x86_64-linux-gnu/bits/pthreadtypes-arch.h :
+  /usr/include/alloca.h /usr/include/x86_64-linux-gnu/bits/stdlib-float.h :
+  /usr/include/x86_64-linux-gnu/bits/stdlib.h /usr/include/string.h :
+  /usr/include/x86_64-linux-gnu/bits/types/locale_t.h :
+  /usr/include/x86_64-linux-gnu/bits/types/__locale_t.h :
+  /usr/include/strings.h :
+  /usr/include/x86_64-linux-gnu/bits/strings_fortified.h :
+  /usr/include/x86_64-linux-gnu/bits/string_fortified.h :
+  /usr/include/assert.h ../py/objmodule.h ../py/obj.h ../py/mpconfig.h :
+  mpconfigport.h /usr/lib/gcc/x86_64-linux-gnu/7/include/stdint.h :
+  /usr/include/stdint.h /usr/include/x86_64-linux-gnu/bits/wchar.h :
+  /usr/include/x86_64-linux-gnu/bits/stdint-uintn.h ../py/misc.h :
+  /usr/lib/gcc/x86_64-linux-gnu/7/include/stdbool.h ../py/qstr.h :
+  build/genhdr/qstrdefs.generated.h ../py/mpprint.h ../py/runtime0.h :
+  ../py/runtime.h ../py/mpstate.h ../py/mpthread.h ../py/nlr.h :
+  /usr/lib/gcc/x86_64-linux-gnu/7/include-fixed/limits.h :
+  /usr/lib/gcc/x86_64-linux-gnu/7/include-fixed/syslimits.h :
+  /usr/include/limits.h /usr/include/x86_64-linux-gnu/bits/posix1_lim.h :
+  /usr/include/x86_64-linux-gnu/bits/local_lim.h :
+  /usr/include/linux/limits.h :
+  /usr/include/x86_64-linux-gnu/bits/posix2_lim.h ../py/objlist.h :
+  ../py/objexcept.h ../py/objtuple.h ../py/pystack.h ../py/builtin.h :
+  build/genhdr/moduledefs.h :
Binary files MicorpythonOriginal1.12/micropython/mpy-cross/build/py/objnamedtuple.o and micropython1.12_withUlab/micropython/mpy-cross/build/py/objnamedtuple.o differ
diff -crNb MicorpythonOriginal1.12/micropython/mpy-cross/build/py/objnamedtuple.P micropython1.12_withUlab/micropython/mpy-cross/build/py/objnamedtuple.P
*** MicorpythonOriginal1.12/micropython/mpy-cross/build/py/objnamedtuple.P	1970-01-01 02:00:00.000000000 +0200
--- micropython1.12_withUlab/micropython/mpy-cross/build/py/objnamedtuple.P	2020-06-19 18:37:37.819541193 +0200
***************
*** 0 ****
--- 1,64 ----
+ build/py/objnamedtuple.o: ../py/objnamedtuple.c \
+  /usr/include/stdc-predef.h /usr/include/string.h \
+  /usr/include/x86_64-linux-gnu/bits/libc-header-start.h \
+  /usr/include/features.h /usr/include/x86_64-linux-gnu/sys/cdefs.h \
+  /usr/include/x86_64-linux-gnu/bits/wordsize.h \
+  /usr/include/x86_64-linux-gnu/bits/long-double.h \
+  /usr/include/x86_64-linux-gnu/gnu/stubs.h \
+  /usr/include/x86_64-linux-gnu/gnu/stubs-64.h \
+  /usr/lib/gcc/x86_64-linux-gnu/7/include/stddef.h \
+  /usr/include/x86_64-linux-gnu/bits/types/locale_t.h \
+  /usr/include/x86_64-linux-gnu/bits/types/__locale_t.h \
+  /usr/include/strings.h \
+  /usr/include/x86_64-linux-gnu/bits/strings_fortified.h \
+  /usr/include/x86_64-linux-gnu/bits/string_fortified.h ../py/objtuple.h \
+  ../py/obj.h ../py/mpconfig.h mpconfigport.h /usr/include/alloca.h \
+  /usr/lib/gcc/x86_64-linux-gnu/7/include/stdint.h /usr/include/stdint.h \
+  /usr/include/x86_64-linux-gnu/bits/types.h \
+  /usr/include/x86_64-linux-gnu/bits/typesizes.h \
+  /usr/include/x86_64-linux-gnu/bits/wchar.h \
+  /usr/include/x86_64-linux-gnu/bits/stdint-intn.h \
+  /usr/include/x86_64-linux-gnu/bits/stdint-uintn.h ../py/misc.h \
+  /usr/lib/gcc/x86_64-linux-gnu/7/include/stdbool.h ../py/qstr.h \
+  build/genhdr/qstrdefs.generated.h ../py/mpprint.h ../py/runtime0.h \
+  ../py/runtime.h ../py/mpstate.h ../py/mpthread.h ../py/nlr.h \
+  /usr/lib/gcc/x86_64-linux-gnu/7/include-fixed/limits.h \
+  /usr/lib/gcc/x86_64-linux-gnu/7/include-fixed/syslimits.h \
+  /usr/include/limits.h /usr/include/x86_64-linux-gnu/bits/posix1_lim.h \
+  /usr/include/x86_64-linux-gnu/bits/local_lim.h \
+  /usr/include/linux/limits.h \
+  /usr/include/x86_64-linux-gnu/bits/posix2_lim.h /usr/include/assert.h \
+  ../py/objlist.h ../py/objexcept.h ../py/pystack.h ../py/objstr.h \
+  ../py/objnamedtuple.h
+ ../py/objnamedtuple.c :
+  /usr/include/stdc-predef.h /usr/include/string.h :
+  /usr/include/x86_64-linux-gnu/bits/libc-header-start.h :
+  /usr/include/features.h /usr/include/x86_64-linux-gnu/sys/cdefs.h :
+  /usr/include/x86_64-linux-gnu/bits/wordsize.h :
+  /usr/include/x86_64-linux-gnu/bits/long-double.h :
+  /usr/include/x86_64-linux-gnu/gnu/stubs.h :
+  /usr/include/x86_64-linux-gnu/gnu/stubs-64.h :
+  /usr/lib/gcc/x86_64-linux-gnu/7/include/stddef.h :
+  /usr/include/x86_64-linux-gnu/bits/types/locale_t.h :
+  /usr/include/x86_64-linux-gnu/bits/types/__locale_t.h :
+  /usr/include/strings.h :
+  /usr/include/x86_64-linux-gnu/bits/strings_fortified.h :
+  /usr/include/x86_64-linux-gnu/bits/string_fortified.h ../py/objtuple.h :
+  ../py/obj.h ../py/mpconfig.h mpconfigport.h /usr/include/alloca.h :
+  /usr/lib/gcc/x86_64-linux-gnu/7/include/stdint.h /usr/include/stdint.h :
+  /usr/include/x86_64-linux-gnu/bits/types.h :
+  /usr/include/x86_64-linux-gnu/bits/typesizes.h :
+  /usr/include/x86_64-linux-gnu/bits/wchar.h :
+  /usr/include/x86_64-linux-gnu/bits/stdint-intn.h :
+  /usr/include/x86_64-linux-gnu/bits/stdint-uintn.h ../py/misc.h :
+  /usr/lib/gcc/x86_64-linux-gnu/7/include/stdbool.h ../py/qstr.h :
+  build/genhdr/qstrdefs.generated.h ../py/mpprint.h ../py/runtime0.h :
+  ../py/runtime.h ../py/mpstate.h ../py/mpthread.h ../py/nlr.h :
+  /usr/lib/gcc/x86_64-linux-gnu/7/include-fixed/limits.h :
+  /usr/lib/gcc/x86_64-linux-gnu/7/include-fixed/syslimits.h :
+  /usr/include/limits.h /usr/include/x86_64-linux-gnu/bits/posix1_lim.h :
+  /usr/include/x86_64-linux-gnu/bits/local_lim.h :
+  /usr/include/linux/limits.h :
+  /usr/include/x86_64-linux-gnu/bits/posix2_lim.h /usr/include/assert.h :
+  ../py/objlist.h ../py/objexcept.h ../py/pystack.h ../py/objstr.h :
+  ../py/objnamedtuple.h :
Binary files MicorpythonOriginal1.12/micropython/mpy-cross/build/py/objnone.o and micropython1.12_withUlab/micropython/mpy-cross/build/py/objnone.o differ
diff -crNb MicorpythonOriginal1.12/micropython/mpy-cross/build/py/objnone.P micropython1.12_withUlab/micropython/mpy-cross/build/py/objnone.P
*** MicorpythonOriginal1.12/micropython/mpy-cross/build/py/objnone.P	1970-01-01 02:00:00.000000000 +0200
--- micropython1.12_withUlab/micropython/mpy-cross/build/py/objnone.P	2020-06-19 18:37:37.799541621 +0200
***************
*** 0 ****
--- 1,88 ----
+ build/py/objnone.o: ../py/objnone.c /usr/include/stdc-predef.h \
+  /usr/include/stdlib.h \
+  /usr/include/x86_64-linux-gnu/bits/libc-header-start.h \
+  /usr/include/features.h /usr/include/x86_64-linux-gnu/sys/cdefs.h \
+  /usr/include/x86_64-linux-gnu/bits/wordsize.h \
+  /usr/include/x86_64-linux-gnu/bits/long-double.h \
+  /usr/include/x86_64-linux-gnu/gnu/stubs.h \
+  /usr/include/x86_64-linux-gnu/gnu/stubs-64.h \
+  /usr/lib/gcc/x86_64-linux-gnu/7/include/stddef.h \
+  /usr/include/x86_64-linux-gnu/bits/waitflags.h \
+  /usr/include/x86_64-linux-gnu/bits/waitstatus.h \
+  /usr/include/x86_64-linux-gnu/bits/floatn.h \
+  /usr/include/x86_64-linux-gnu/bits/floatn-common.h \
+  /usr/include/x86_64-linux-gnu/sys/types.h \
+  /usr/include/x86_64-linux-gnu/bits/types.h \
+  /usr/include/x86_64-linux-gnu/bits/typesizes.h \
+  /usr/include/x86_64-linux-gnu/bits/types/clock_t.h \
+  /usr/include/x86_64-linux-gnu/bits/types/clockid_t.h \
+  /usr/include/x86_64-linux-gnu/bits/types/time_t.h \
+  /usr/include/x86_64-linux-gnu/bits/types/timer_t.h \
+  /usr/include/x86_64-linux-gnu/bits/stdint-intn.h /usr/include/endian.h \
+  /usr/include/x86_64-linux-gnu/bits/endian.h \
+  /usr/include/x86_64-linux-gnu/bits/byteswap.h \
+  /usr/include/x86_64-linux-gnu/bits/byteswap-16.h \
+  /usr/include/x86_64-linux-gnu/bits/uintn-identity.h \
+  /usr/include/x86_64-linux-gnu/sys/select.h \
+  /usr/include/x86_64-linux-gnu/bits/select.h \
+  /usr/include/x86_64-linux-gnu/bits/types/sigset_t.h \
+  /usr/include/x86_64-linux-gnu/bits/types/__sigset_t.h \
+  /usr/include/x86_64-linux-gnu/bits/types/struct_timeval.h \
+  /usr/include/x86_64-linux-gnu/bits/types/struct_timespec.h \
+  /usr/include/x86_64-linux-gnu/bits/select2.h \
+  /usr/include/x86_64-linux-gnu/sys/sysmacros.h \
+  /usr/include/x86_64-linux-gnu/bits/sysmacros.h \
+  /usr/include/x86_64-linux-gnu/bits/pthreadtypes.h \
+  /usr/include/x86_64-linux-gnu/bits/thread-shared-types.h \
+  /usr/include/x86_64-linux-gnu/bits/pthreadtypes-arch.h \
+  /usr/include/alloca.h /usr/include/x86_64-linux-gnu/bits/stdlib-float.h \
+  /usr/include/x86_64-linux-gnu/bits/stdlib.h ../py/obj.h ../py/mpconfig.h \
+  mpconfigport.h /usr/lib/gcc/x86_64-linux-gnu/7/include/stdint.h \
+  /usr/include/stdint.h /usr/include/x86_64-linux-gnu/bits/wchar.h \
+  /usr/include/x86_64-linux-gnu/bits/stdint-uintn.h ../py/misc.h \
+  /usr/lib/gcc/x86_64-linux-gnu/7/include/stdbool.h ../py/qstr.h \
+  build/genhdr/qstrdefs.generated.h ../py/mpprint.h ../py/runtime0.h
+ ../py/objnone.c /usr/include/stdc-predef.h :
+  /usr/include/stdlib.h :
+  /usr/include/x86_64-linux-gnu/bits/libc-header-start.h :
+  /usr/include/features.h /usr/include/x86_64-linux-gnu/sys/cdefs.h :
+  /usr/include/x86_64-linux-gnu/bits/wordsize.h :
+  /usr/include/x86_64-linux-gnu/bits/long-double.h :
+  /usr/include/x86_64-linux-gnu/gnu/stubs.h :
+  /usr/include/x86_64-linux-gnu/gnu/stubs-64.h :
+  /usr/lib/gcc/x86_64-linux-gnu/7/include/stddef.h :
+  /usr/include/x86_64-linux-gnu/bits/waitflags.h :
+  /usr/include/x86_64-linux-gnu/bits/waitstatus.h :
+  /usr/include/x86_64-linux-gnu/bits/floatn.h :
+  /usr/include/x86_64-linux-gnu/bits/floatn-common.h :
+  /usr/include/x86_64-linux-gnu/sys/types.h :
+  /usr/include/x86_64-linux-gnu/bits/types.h :
+  /usr/include/x86_64-linux-gnu/bits/typesizes.h :
+  /usr/include/x86_64-linux-gnu/bits/types/clock_t.h :
+  /usr/include/x86_64-linux-gnu/bits/types/clockid_t.h :
+  /usr/include/x86_64-linux-gnu/bits/types/time_t.h :
+  /usr/include/x86_64-linux-gnu/bits/types/timer_t.h :
+  /usr/include/x86_64-linux-gnu/bits/stdint-intn.h /usr/include/endian.h :
+  /usr/include/x86_64-linux-gnu/bits/endian.h :
+  /usr/include/x86_64-linux-gnu/bits/byteswap.h :
+  /usr/include/x86_64-linux-gnu/bits/byteswap-16.h :
+  /usr/include/x86_64-linux-gnu/bits/uintn-identity.h :
+  /usr/include/x86_64-linux-gnu/sys/select.h :
+  /usr/include/x86_64-linux-gnu/bits/select.h :
+  /usr/include/x86_64-linux-gnu/bits/types/sigset_t.h :
+  /usr/include/x86_64-linux-gnu/bits/types/__sigset_t.h :
+  /usr/include/x86_64-linux-gnu/bits/types/struct_timeval.h :
+  /usr/include/x86_64-linux-gnu/bits/types/struct_timespec.h :
+  /usr/include/x86_64-linux-gnu/bits/select2.h :
+  /usr/include/x86_64-linux-gnu/sys/sysmacros.h :
+  /usr/include/x86_64-linux-gnu/bits/sysmacros.h :
+  /usr/include/x86_64-linux-gnu/bits/pthreadtypes.h :
+  /usr/include/x86_64-linux-gnu/bits/thread-shared-types.h :
+  /usr/include/x86_64-linux-gnu/bits/pthreadtypes-arch.h :
+  /usr/include/alloca.h /usr/include/x86_64-linux-gnu/bits/stdlib-float.h :
+  /usr/include/x86_64-linux-gnu/bits/stdlib.h ../py/obj.h ../py/mpconfig.h :
+  mpconfigport.h /usr/lib/gcc/x86_64-linux-gnu/7/include/stdint.h :
+  /usr/include/stdint.h /usr/include/x86_64-linux-gnu/bits/wchar.h :
+  /usr/include/x86_64-linux-gnu/bits/stdint-uintn.h ../py/misc.h :
+  /usr/lib/gcc/x86_64-linux-gnu/7/include/stdbool.h ../py/qstr.h :
+  build/genhdr/qstrdefs.generated.h ../py/mpprint.h ../py/runtime0.h :
Binary files MicorpythonOriginal1.12/micropython/mpy-cross/build/py/obj.o and micropython1.12_withUlab/micropython/mpy-cross/build/py/obj.o differ
Binary files MicorpythonOriginal1.12/micropython/mpy-cross/build/py/objobject.o and micropython1.12_withUlab/micropython/mpy-cross/build/py/objobject.o differ
diff -crNb MicorpythonOriginal1.12/micropython/mpy-cross/build/py/objobject.P micropython1.12_withUlab/micropython/mpy-cross/build/py/objobject.P
*** MicorpythonOriginal1.12/micropython/mpy-cross/build/py/objobject.P	1970-01-01 02:00:00.000000000 +0200
--- micropython1.12_withUlab/micropython/mpy-cross/build/py/objobject.P	2020-06-19 18:37:37.715543417 +0200
***************
*** 0 ****
--- 1,106 ----
+ build/py/objobject.o: ../py/objobject.c /usr/include/stdc-predef.h \
+  /usr/include/stdlib.h \
+  /usr/include/x86_64-linux-gnu/bits/libc-header-start.h \
+  /usr/include/features.h /usr/include/x86_64-linux-gnu/sys/cdefs.h \
+  /usr/include/x86_64-linux-gnu/bits/wordsize.h \
+  /usr/include/x86_64-linux-gnu/bits/long-double.h \
+  /usr/include/x86_64-linux-gnu/gnu/stubs.h \
+  /usr/include/x86_64-linux-gnu/gnu/stubs-64.h \
+  /usr/lib/gcc/x86_64-linux-gnu/7/include/stddef.h \
+  /usr/include/x86_64-linux-gnu/bits/waitflags.h \
+  /usr/include/x86_64-linux-gnu/bits/waitstatus.h \
+  /usr/include/x86_64-linux-gnu/bits/floatn.h \
+  /usr/include/x86_64-linux-gnu/bits/floatn-common.h \
+  /usr/include/x86_64-linux-gnu/sys/types.h \
+  /usr/include/x86_64-linux-gnu/bits/types.h \
+  /usr/include/x86_64-linux-gnu/bits/typesizes.h \
+  /usr/include/x86_64-linux-gnu/bits/types/clock_t.h \
+  /usr/include/x86_64-linux-gnu/bits/types/clockid_t.h \
+  /usr/include/x86_64-linux-gnu/bits/types/time_t.h \
+  /usr/include/x86_64-linux-gnu/bits/types/timer_t.h \
+  /usr/include/x86_64-linux-gnu/bits/stdint-intn.h /usr/include/endian.h \
+  /usr/include/x86_64-linux-gnu/bits/endian.h \
+  /usr/include/x86_64-linux-gnu/bits/byteswap.h \
+  /usr/include/x86_64-linux-gnu/bits/byteswap-16.h \
+  /usr/include/x86_64-linux-gnu/bits/uintn-identity.h \
+  /usr/include/x86_64-linux-gnu/sys/select.h \
+  /usr/include/x86_64-linux-gnu/bits/select.h \
+  /usr/include/x86_64-linux-gnu/bits/types/sigset_t.h \
+  /usr/include/x86_64-linux-gnu/bits/types/__sigset_t.h \
+  /usr/include/x86_64-linux-gnu/bits/types/struct_timeval.h \
+  /usr/include/x86_64-linux-gnu/bits/types/struct_timespec.h \
+  /usr/include/x86_64-linux-gnu/bits/select2.h \
+  /usr/include/x86_64-linux-gnu/sys/sysmacros.h \
+  /usr/include/x86_64-linux-gnu/bits/sysmacros.h \
+  /usr/include/x86_64-linux-gnu/bits/pthreadtypes.h \
+  /usr/include/x86_64-linux-gnu/bits/thread-shared-types.h \
+  /usr/include/x86_64-linux-gnu/bits/pthreadtypes-arch.h \
+  /usr/include/alloca.h /usr/include/x86_64-linux-gnu/bits/stdlib-float.h \
+  /usr/include/x86_64-linux-gnu/bits/stdlib.h ../py/objtype.h ../py/obj.h \
+  ../py/mpconfig.h mpconfigport.h \
+  /usr/lib/gcc/x86_64-linux-gnu/7/include/stdint.h /usr/include/stdint.h \
+  /usr/include/x86_64-linux-gnu/bits/wchar.h \
+  /usr/include/x86_64-linux-gnu/bits/stdint-uintn.h ../py/misc.h \
+  /usr/lib/gcc/x86_64-linux-gnu/7/include/stdbool.h ../py/qstr.h \
+  build/genhdr/qstrdefs.generated.h ../py/mpprint.h ../py/runtime0.h \
+  ../py/runtime.h ../py/mpstate.h ../py/mpthread.h ../py/nlr.h \
+  /usr/lib/gcc/x86_64-linux-gnu/7/include-fixed/limits.h \
+  /usr/lib/gcc/x86_64-linux-gnu/7/include-fixed/syslimits.h \
+  /usr/include/limits.h /usr/include/x86_64-linux-gnu/bits/posix1_lim.h \
+  /usr/include/x86_64-linux-gnu/bits/local_lim.h \
+  /usr/include/linux/limits.h \
+  /usr/include/x86_64-linux-gnu/bits/posix2_lim.h /usr/include/assert.h \
+  ../py/objlist.h ../py/objexcept.h ../py/objtuple.h ../py/pystack.h
+ ../py/objobject.c /usr/include/stdc-predef.h :
+  /usr/include/stdlib.h :
+  /usr/include/x86_64-linux-gnu/bits/libc-header-start.h :
+  /usr/include/features.h /usr/include/x86_64-linux-gnu/sys/cdefs.h :
+  /usr/include/x86_64-linux-gnu/bits/wordsize.h :
+  /usr/include/x86_64-linux-gnu/bits/long-double.h :
+  /usr/include/x86_64-linux-gnu/gnu/stubs.h :
+  /usr/include/x86_64-linux-gnu/gnu/stubs-64.h :
+  /usr/lib/gcc/x86_64-linux-gnu/7/include/stddef.h :
+  /usr/include/x86_64-linux-gnu/bits/waitflags.h :
+  /usr/include/x86_64-linux-gnu/bits/waitstatus.h :
+  /usr/include/x86_64-linux-gnu/bits/floatn.h :
+  /usr/include/x86_64-linux-gnu/bits/floatn-common.h :
+  /usr/include/x86_64-linux-gnu/sys/types.h :
+  /usr/include/x86_64-linux-gnu/bits/types.h :
+  /usr/include/x86_64-linux-gnu/bits/typesizes.h :
+  /usr/include/x86_64-linux-gnu/bits/types/clock_t.h :
+  /usr/include/x86_64-linux-gnu/bits/types/clockid_t.h :
+  /usr/include/x86_64-linux-gnu/bits/types/time_t.h :
+  /usr/include/x86_64-linux-gnu/bits/types/timer_t.h :
+  /usr/include/x86_64-linux-gnu/bits/stdint-intn.h /usr/include/endian.h :
+  /usr/include/x86_64-linux-gnu/bits/endian.h :
+  /usr/include/x86_64-linux-gnu/bits/byteswap.h :
+  /usr/include/x86_64-linux-gnu/bits/byteswap-16.h :
+  /usr/include/x86_64-linux-gnu/bits/uintn-identity.h :
+  /usr/include/x86_64-linux-gnu/sys/select.h :
+  /usr/include/x86_64-linux-gnu/bits/select.h :
+  /usr/include/x86_64-linux-gnu/bits/types/sigset_t.h :
+  /usr/include/x86_64-linux-gnu/bits/types/__sigset_t.h :
+  /usr/include/x86_64-linux-gnu/bits/types/struct_timeval.h :
+  /usr/include/x86_64-linux-gnu/bits/types/struct_timespec.h :
+  /usr/include/x86_64-linux-gnu/bits/select2.h :
+  /usr/include/x86_64-linux-gnu/sys/sysmacros.h :
+  /usr/include/x86_64-linux-gnu/bits/sysmacros.h :
+  /usr/include/x86_64-linux-gnu/bits/pthreadtypes.h :
+  /usr/include/x86_64-linux-gnu/bits/thread-shared-types.h :
+  /usr/include/x86_64-linux-gnu/bits/pthreadtypes-arch.h :
+  /usr/include/alloca.h /usr/include/x86_64-linux-gnu/bits/stdlib-float.h :
+  /usr/include/x86_64-linux-gnu/bits/stdlib.h ../py/objtype.h ../py/obj.h :
+  ../py/mpconfig.h mpconfigport.h :
+  /usr/lib/gcc/x86_64-linux-gnu/7/include/stdint.h /usr/include/stdint.h :
+  /usr/include/x86_64-linux-gnu/bits/wchar.h :
+  /usr/include/x86_64-linux-gnu/bits/stdint-uintn.h ../py/misc.h :
+  /usr/lib/gcc/x86_64-linux-gnu/7/include/stdbool.h ../py/qstr.h :
+  build/genhdr/qstrdefs.generated.h ../py/mpprint.h ../py/runtime0.h :
+  ../py/runtime.h ../py/mpstate.h ../py/mpthread.h ../py/nlr.h :
+  /usr/lib/gcc/x86_64-linux-gnu/7/include-fixed/limits.h :
+  /usr/lib/gcc/x86_64-linux-gnu/7/include-fixed/syslimits.h :
+  /usr/include/limits.h /usr/include/x86_64-linux-gnu/bits/posix1_lim.h :
+  /usr/include/x86_64-linux-gnu/bits/local_lim.h :
+  /usr/include/linux/limits.h :
+  /usr/include/x86_64-linux-gnu/bits/posix2_lim.h /usr/include/assert.h :
+  ../py/objlist.h ../py/objexcept.h ../py/objtuple.h ../py/pystack.h :
diff -crNb MicorpythonOriginal1.12/micropython/mpy-cross/build/py/obj.P micropython1.12_withUlab/micropython/mpy-cross/build/py/obj.P
*** MicorpythonOriginal1.12/micropython/mpy-cross/build/py/obj.P	1970-01-01 02:00:00.000000000 +0200
--- micropython1.12_withUlab/micropython/mpy-cross/build/py/obj.P	2020-06-19 18:37:36.739564305 +0200
***************
*** 0 ****
--- 1,78 ----
+ build/py/obj.o: ../py/obj.c /usr/include/stdc-predef.h \
+  /usr/lib/gcc/x86_64-linux-gnu/7/include/stdint.h /usr/include/stdint.h \
+  /usr/include/x86_64-linux-gnu/bits/libc-header-start.h \
+  /usr/include/features.h /usr/include/x86_64-linux-gnu/sys/cdefs.h \
+  /usr/include/x86_64-linux-gnu/bits/wordsize.h \
+  /usr/include/x86_64-linux-gnu/bits/long-double.h \
+  /usr/include/x86_64-linux-gnu/gnu/stubs.h \
+  /usr/include/x86_64-linux-gnu/gnu/stubs-64.h \
+  /usr/include/x86_64-linux-gnu/bits/types.h \
+  /usr/include/x86_64-linux-gnu/bits/typesizes.h \
+  /usr/include/x86_64-linux-gnu/bits/wchar.h \
+  /usr/include/x86_64-linux-gnu/bits/stdint-intn.h \
+  /usr/include/x86_64-linux-gnu/bits/stdint-uintn.h /usr/include/stdio.h \
+  /usr/lib/gcc/x86_64-linux-gnu/7/include/stddef.h \
+  /usr/include/x86_64-linux-gnu/bits/types/__FILE.h \
+  /usr/include/x86_64-linux-gnu/bits/types/FILE.h \
+  /usr/include/x86_64-linux-gnu/bits/libio.h \
+  /usr/include/x86_64-linux-gnu/bits/_G_config.h \
+  /usr/include/x86_64-linux-gnu/bits/types/__mbstate_t.h \
+  /usr/lib/gcc/x86_64-linux-gnu/7/include/stdarg.h \
+  /usr/include/x86_64-linux-gnu/bits/stdio_lim.h \
+  /usr/include/x86_64-linux-gnu/bits/sys_errlist.h \
+  /usr/include/x86_64-linux-gnu/bits/stdio2.h /usr/include/assert.h \
+  ../py/obj.h ../py/mpconfig.h mpconfigport.h /usr/include/alloca.h \
+  ../py/misc.h /usr/lib/gcc/x86_64-linux-gnu/7/include/stdbool.h \
+  ../py/qstr.h build/genhdr/qstrdefs.generated.h ../py/mpprint.h \
+  ../py/runtime0.h ../py/objtype.h ../py/objint.h ../py/mpz.h \
+  ../py/objstr.h ../py/runtime.h ../py/mpstate.h ../py/mpthread.h \
+  ../py/nlr.h /usr/lib/gcc/x86_64-linux-gnu/7/include-fixed/limits.h \
+  /usr/lib/gcc/x86_64-linux-gnu/7/include-fixed/syslimits.h \
+  /usr/include/limits.h /usr/include/x86_64-linux-gnu/bits/posix1_lim.h \
+  /usr/include/x86_64-linux-gnu/bits/local_lim.h \
+  /usr/include/linux/limits.h \
+  /usr/include/x86_64-linux-gnu/bits/posix2_lim.h ../py/objlist.h \
+  ../py/objexcept.h ../py/objtuple.h ../py/pystack.h ../py/stackctrl.h \
+  ../py/stream.h ../py/mperrno.h /usr/include/errno.h \
+  /usr/include/x86_64-linux-gnu/bits/errno.h /usr/include/linux/errno.h \
+  /usr/include/x86_64-linux-gnu/asm/errno.h \
+  /usr/include/asm-generic/errno.h /usr/include/asm-generic/errno-base.h
+ ../py/obj.c /usr/include/stdc-predef.h :
+  /usr/lib/gcc/x86_64-linux-gnu/7/include/stdint.h /usr/include/stdint.h :
+  /usr/include/x86_64-linux-gnu/bits/libc-header-start.h :
+  /usr/include/features.h /usr/include/x86_64-linux-gnu/sys/cdefs.h :
+  /usr/include/x86_64-linux-gnu/bits/wordsize.h :
+  /usr/include/x86_64-linux-gnu/bits/long-double.h :
+  /usr/include/x86_64-linux-gnu/gnu/stubs.h :
+  /usr/include/x86_64-linux-gnu/gnu/stubs-64.h :
+  /usr/include/x86_64-linux-gnu/bits/types.h :
+  /usr/include/x86_64-linux-gnu/bits/typesizes.h :
+  /usr/include/x86_64-linux-gnu/bits/wchar.h :
+  /usr/include/x86_64-linux-gnu/bits/stdint-intn.h :
+  /usr/include/x86_64-linux-gnu/bits/stdint-uintn.h /usr/include/stdio.h :
+  /usr/lib/gcc/x86_64-linux-gnu/7/include/stddef.h :
+  /usr/include/x86_64-linux-gnu/bits/types/__FILE.h :
+  /usr/include/x86_64-linux-gnu/bits/types/FILE.h :
+  /usr/include/x86_64-linux-gnu/bits/libio.h :
+  /usr/include/x86_64-linux-gnu/bits/_G_config.h :
+  /usr/include/x86_64-linux-gnu/bits/types/__mbstate_t.h :
+  /usr/lib/gcc/x86_64-linux-gnu/7/include/stdarg.h :
+  /usr/include/x86_64-linux-gnu/bits/stdio_lim.h :
+  /usr/include/x86_64-linux-gnu/bits/sys_errlist.h :
+  /usr/include/x86_64-linux-gnu/bits/stdio2.h /usr/include/assert.h :
+  ../py/obj.h ../py/mpconfig.h mpconfigport.h /usr/include/alloca.h :
+  ../py/misc.h /usr/lib/gcc/x86_64-linux-gnu/7/include/stdbool.h :
+  ../py/qstr.h build/genhdr/qstrdefs.generated.h ../py/mpprint.h :
+  ../py/runtime0.h ../py/objtype.h ../py/objint.h ../py/mpz.h :
+  ../py/objstr.h ../py/runtime.h ../py/mpstate.h ../py/mpthread.h :
+  ../py/nlr.h /usr/lib/gcc/x86_64-linux-gnu/7/include-fixed/limits.h :
+  /usr/lib/gcc/x86_64-linux-gnu/7/include-fixed/syslimits.h :
+  /usr/include/limits.h /usr/include/x86_64-linux-gnu/bits/posix1_lim.h :
+  /usr/include/x86_64-linux-gnu/bits/local_lim.h :
+  /usr/include/linux/limits.h :
+  /usr/include/x86_64-linux-gnu/bits/posix2_lim.h ../py/objlist.h :
+  ../py/objexcept.h ../py/objtuple.h ../py/pystack.h ../py/stackctrl.h :
+  ../py/stream.h ../py/mperrno.h /usr/include/errno.h :
+  /usr/include/x86_64-linux-gnu/bits/errno.h /usr/include/linux/errno.h :
+  /usr/include/x86_64-linux-gnu/asm/errno.h :
+  /usr/include/asm-generic/errno.h /usr/include/asm-generic/errno-base.h :
Binary files MicorpythonOriginal1.12/micropython/mpy-cross/build/py/objpolyiter.o and micropython1.12_withUlab/micropython/mpy-cross/build/py/objpolyiter.o differ
diff -crNb MicorpythonOriginal1.12/micropython/mpy-cross/build/py/objpolyiter.P micropython1.12_withUlab/micropython/mpy-cross/build/py/objpolyiter.P
*** MicorpythonOriginal1.12/micropython/mpy-cross/build/py/objpolyiter.P	1970-01-01 02:00:00.000000000 +0200
--- micropython1.12_withUlab/micropython/mpy-cross/build/py/objpolyiter.P	2020-06-19 18:37:37.739542904 +0200
***************
*** 0 ****
--- 1,106 ----
+ build/py/objpolyiter.o: ../py/objpolyiter.c /usr/include/stdc-predef.h \
+  /usr/include/stdlib.h \
+  /usr/include/x86_64-linux-gnu/bits/libc-header-start.h \
+  /usr/include/features.h /usr/include/x86_64-linux-gnu/sys/cdefs.h \
+  /usr/include/x86_64-linux-gnu/bits/wordsize.h \
+  /usr/include/x86_64-linux-gnu/bits/long-double.h \
+  /usr/include/x86_64-linux-gnu/gnu/stubs.h \
+  /usr/include/x86_64-linux-gnu/gnu/stubs-64.h \
+  /usr/lib/gcc/x86_64-linux-gnu/7/include/stddef.h \
+  /usr/include/x86_64-linux-gnu/bits/waitflags.h \
+  /usr/include/x86_64-linux-gnu/bits/waitstatus.h \
+  /usr/include/x86_64-linux-gnu/bits/floatn.h \
+  /usr/include/x86_64-linux-gnu/bits/floatn-common.h \
+  /usr/include/x86_64-linux-gnu/sys/types.h \
+  /usr/include/x86_64-linux-gnu/bits/types.h \
+  /usr/include/x86_64-linux-gnu/bits/typesizes.h \
+  /usr/include/x86_64-linux-gnu/bits/types/clock_t.h \
+  /usr/include/x86_64-linux-gnu/bits/types/clockid_t.h \
+  /usr/include/x86_64-linux-gnu/bits/types/time_t.h \
+  /usr/include/x86_64-linux-gnu/bits/types/timer_t.h \
+  /usr/include/x86_64-linux-gnu/bits/stdint-intn.h /usr/include/endian.h \
+  /usr/include/x86_64-linux-gnu/bits/endian.h \
+  /usr/include/x86_64-linux-gnu/bits/byteswap.h \
+  /usr/include/x86_64-linux-gnu/bits/byteswap-16.h \
+  /usr/include/x86_64-linux-gnu/bits/uintn-identity.h \
+  /usr/include/x86_64-linux-gnu/sys/select.h \
+  /usr/include/x86_64-linux-gnu/bits/select.h \
+  /usr/include/x86_64-linux-gnu/bits/types/sigset_t.h \
+  /usr/include/x86_64-linux-gnu/bits/types/__sigset_t.h \
+  /usr/include/x86_64-linux-gnu/bits/types/struct_timeval.h \
+  /usr/include/x86_64-linux-gnu/bits/types/struct_timespec.h \
+  /usr/include/x86_64-linux-gnu/bits/select2.h \
+  /usr/include/x86_64-linux-gnu/sys/sysmacros.h \
+  /usr/include/x86_64-linux-gnu/bits/sysmacros.h \
+  /usr/include/x86_64-linux-gnu/bits/pthreadtypes.h \
+  /usr/include/x86_64-linux-gnu/bits/thread-shared-types.h \
+  /usr/include/x86_64-linux-gnu/bits/pthreadtypes-arch.h \
+  /usr/include/alloca.h /usr/include/x86_64-linux-gnu/bits/stdlib-float.h \
+  /usr/include/x86_64-linux-gnu/bits/stdlib.h ../py/runtime.h \
+  ../py/mpstate.h /usr/lib/gcc/x86_64-linux-gnu/7/include/stdint.h \
+  /usr/include/stdint.h /usr/include/x86_64-linux-gnu/bits/wchar.h \
+  /usr/include/x86_64-linux-gnu/bits/stdint-uintn.h ../py/mpconfig.h \
+  mpconfigport.h ../py/mpthread.h ../py/misc.h \
+  /usr/lib/gcc/x86_64-linux-gnu/7/include/stdbool.h ../py/nlr.h \
+  /usr/lib/gcc/x86_64-linux-gnu/7/include-fixed/limits.h \
+  /usr/lib/gcc/x86_64-linux-gnu/7/include-fixed/syslimits.h \
+  /usr/include/limits.h /usr/include/x86_64-linux-gnu/bits/posix1_lim.h \
+  /usr/include/x86_64-linux-gnu/bits/local_lim.h \
+  /usr/include/linux/limits.h \
+  /usr/include/x86_64-linux-gnu/bits/posix2_lim.h /usr/include/assert.h \
+  ../py/obj.h ../py/qstr.h build/genhdr/qstrdefs.generated.h \
+  ../py/mpprint.h ../py/runtime0.h ../py/objlist.h ../py/objexcept.h \
+  ../py/objtuple.h ../py/pystack.h
+ ../py/objpolyiter.c /usr/include/stdc-predef.h :
+  /usr/include/stdlib.h :
+  /usr/include/x86_64-linux-gnu/bits/libc-header-start.h :
+  /usr/include/features.h /usr/include/x86_64-linux-gnu/sys/cdefs.h :
+  /usr/include/x86_64-linux-gnu/bits/wordsize.h :
+  /usr/include/x86_64-linux-gnu/bits/long-double.h :
+  /usr/include/x86_64-linux-gnu/gnu/stubs.h :
+  /usr/include/x86_64-linux-gnu/gnu/stubs-64.h :
+  /usr/lib/gcc/x86_64-linux-gnu/7/include/stddef.h :
+  /usr/include/x86_64-linux-gnu/bits/waitflags.h :
+  /usr/include/x86_64-linux-gnu/bits/waitstatus.h :
+  /usr/include/x86_64-linux-gnu/bits/floatn.h :
+  /usr/include/x86_64-linux-gnu/bits/floatn-common.h :
+  /usr/include/x86_64-linux-gnu/sys/types.h :
+  /usr/include/x86_64-linux-gnu/bits/types.h :
+  /usr/include/x86_64-linux-gnu/bits/typesizes.h :
+  /usr/include/x86_64-linux-gnu/bits/types/clock_t.h :
+  /usr/include/x86_64-linux-gnu/bits/types/clockid_t.h :
+  /usr/include/x86_64-linux-gnu/bits/types/time_t.h :
+  /usr/include/x86_64-linux-gnu/bits/types/timer_t.h :
+  /usr/include/x86_64-linux-gnu/bits/stdint-intn.h /usr/include/endian.h :
+  /usr/include/x86_64-linux-gnu/bits/endian.h :
+  /usr/include/x86_64-linux-gnu/bits/byteswap.h :
+  /usr/include/x86_64-linux-gnu/bits/byteswap-16.h :
+  /usr/include/x86_64-linux-gnu/bits/uintn-identity.h :
+  /usr/include/x86_64-linux-gnu/sys/select.h :
+  /usr/include/x86_64-linux-gnu/bits/select.h :
+  /usr/include/x86_64-linux-gnu/bits/types/sigset_t.h :
+  /usr/include/x86_64-linux-gnu/bits/types/__sigset_t.h :
+  /usr/include/x86_64-linux-gnu/bits/types/struct_timeval.h :
+  /usr/include/x86_64-linux-gnu/bits/types/struct_timespec.h :
+  /usr/include/x86_64-linux-gnu/bits/select2.h :
+  /usr/include/x86_64-linux-gnu/sys/sysmacros.h :
+  /usr/include/x86_64-linux-gnu/bits/sysmacros.h :
+  /usr/include/x86_64-linux-gnu/bits/pthreadtypes.h :
+  /usr/include/x86_64-linux-gnu/bits/thread-shared-types.h :
+  /usr/include/x86_64-linux-gnu/bits/pthreadtypes-arch.h :
+  /usr/include/alloca.h /usr/include/x86_64-linux-gnu/bits/stdlib-float.h :
+  /usr/include/x86_64-linux-gnu/bits/stdlib.h ../py/runtime.h :
+  ../py/mpstate.h /usr/lib/gcc/x86_64-linux-gnu/7/include/stdint.h :
+  /usr/include/stdint.h /usr/include/x86_64-linux-gnu/bits/wchar.h :
+  /usr/include/x86_64-linux-gnu/bits/stdint-uintn.h ../py/mpconfig.h :
+  mpconfigport.h ../py/mpthread.h ../py/misc.h :
+  /usr/lib/gcc/x86_64-linux-gnu/7/include/stdbool.h ../py/nlr.h :
+  /usr/lib/gcc/x86_64-linux-gnu/7/include-fixed/limits.h :
+  /usr/lib/gcc/x86_64-linux-gnu/7/include-fixed/syslimits.h :
+  /usr/include/limits.h /usr/include/x86_64-linux-gnu/bits/posix1_lim.h :
+  /usr/include/x86_64-linux-gnu/bits/local_lim.h :
+  /usr/include/linux/limits.h :
+  /usr/include/x86_64-linux-gnu/bits/posix2_lim.h /usr/include/assert.h :
+  ../py/obj.h ../py/qstr.h build/genhdr/qstrdefs.generated.h :
+  ../py/mpprint.h ../py/runtime0.h ../py/objlist.h ../py/objexcept.h :
+  ../py/objtuple.h ../py/pystack.h :
Binary files MicorpythonOriginal1.12/micropython/mpy-cross/build/py/objproperty.o and micropython1.12_withUlab/micropython/mpy-cross/build/py/objproperty.o differ
diff -crNb MicorpythonOriginal1.12/micropython/mpy-cross/build/py/objproperty.P micropython1.12_withUlab/micropython/mpy-cross/build/py/objproperty.P
*** MicorpythonOriginal1.12/micropython/mpy-cross/build/py/objproperty.P	1970-01-01 02:00:00.000000000 +0200
--- micropython1.12_withUlab/micropython/mpy-cross/build/py/objproperty.P	2020-06-19 18:37:37.771542220 +0200
***************
*** 0 ****
--- 1,106 ----
+ build/py/objproperty.o: ../py/objproperty.c /usr/include/stdc-predef.h \
+  /usr/include/stdlib.h \
+  /usr/include/x86_64-linux-gnu/bits/libc-header-start.h \
+  /usr/include/features.h /usr/include/x86_64-linux-gnu/sys/cdefs.h \
+  /usr/include/x86_64-linux-gnu/bits/wordsize.h \
+  /usr/include/x86_64-linux-gnu/bits/long-double.h \
+  /usr/include/x86_64-linux-gnu/gnu/stubs.h \
+  /usr/include/x86_64-linux-gnu/gnu/stubs-64.h \
+  /usr/lib/gcc/x86_64-linux-gnu/7/include/stddef.h \
+  /usr/include/x86_64-linux-gnu/bits/waitflags.h \
+  /usr/include/x86_64-linux-gnu/bits/waitstatus.h \
+  /usr/include/x86_64-linux-gnu/bits/floatn.h \
+  /usr/include/x86_64-linux-gnu/bits/floatn-common.h \
+  /usr/include/x86_64-linux-gnu/sys/types.h \
+  /usr/include/x86_64-linux-gnu/bits/types.h \
+  /usr/include/x86_64-linux-gnu/bits/typesizes.h \
+  /usr/include/x86_64-linux-gnu/bits/types/clock_t.h \
+  /usr/include/x86_64-linux-gnu/bits/types/clockid_t.h \
+  /usr/include/x86_64-linux-gnu/bits/types/time_t.h \
+  /usr/include/x86_64-linux-gnu/bits/types/timer_t.h \
+  /usr/include/x86_64-linux-gnu/bits/stdint-intn.h /usr/include/endian.h \
+  /usr/include/x86_64-linux-gnu/bits/endian.h \
+  /usr/include/x86_64-linux-gnu/bits/byteswap.h \
+  /usr/include/x86_64-linux-gnu/bits/byteswap-16.h \
+  /usr/include/x86_64-linux-gnu/bits/uintn-identity.h \
+  /usr/include/x86_64-linux-gnu/sys/select.h \
+  /usr/include/x86_64-linux-gnu/bits/select.h \
+  /usr/include/x86_64-linux-gnu/bits/types/sigset_t.h \
+  /usr/include/x86_64-linux-gnu/bits/types/__sigset_t.h \
+  /usr/include/x86_64-linux-gnu/bits/types/struct_timeval.h \
+  /usr/include/x86_64-linux-gnu/bits/types/struct_timespec.h \
+  /usr/include/x86_64-linux-gnu/bits/select2.h \
+  /usr/include/x86_64-linux-gnu/sys/sysmacros.h \
+  /usr/include/x86_64-linux-gnu/bits/sysmacros.h \
+  /usr/include/x86_64-linux-gnu/bits/pthreadtypes.h \
+  /usr/include/x86_64-linux-gnu/bits/thread-shared-types.h \
+  /usr/include/x86_64-linux-gnu/bits/pthreadtypes-arch.h \
+  /usr/include/alloca.h /usr/include/x86_64-linux-gnu/bits/stdlib-float.h \
+  /usr/include/x86_64-linux-gnu/bits/stdlib.h /usr/include/assert.h \
+  ../py/runtime.h ../py/mpstate.h \
+  /usr/lib/gcc/x86_64-linux-gnu/7/include/stdint.h /usr/include/stdint.h \
+  /usr/include/x86_64-linux-gnu/bits/wchar.h \
+  /usr/include/x86_64-linux-gnu/bits/stdint-uintn.h ../py/mpconfig.h \
+  mpconfigport.h ../py/mpthread.h ../py/misc.h \
+  /usr/lib/gcc/x86_64-linux-gnu/7/include/stdbool.h ../py/nlr.h \
+  /usr/lib/gcc/x86_64-linux-gnu/7/include-fixed/limits.h \
+  /usr/lib/gcc/x86_64-linux-gnu/7/include-fixed/syslimits.h \
+  /usr/include/limits.h /usr/include/x86_64-linux-gnu/bits/posix1_lim.h \
+  /usr/include/x86_64-linux-gnu/bits/local_lim.h \
+  /usr/include/linux/limits.h \
+  /usr/include/x86_64-linux-gnu/bits/posix2_lim.h ../py/obj.h ../py/qstr.h \
+  build/genhdr/qstrdefs.generated.h ../py/mpprint.h ../py/runtime0.h \
+  ../py/objlist.h ../py/objexcept.h ../py/objtuple.h ../py/pystack.h
+ ../py/objproperty.c /usr/include/stdc-predef.h :
+  /usr/include/stdlib.h :
+  /usr/include/x86_64-linux-gnu/bits/libc-header-start.h :
+  /usr/include/features.h /usr/include/x86_64-linux-gnu/sys/cdefs.h :
+  /usr/include/x86_64-linux-gnu/bits/wordsize.h :
+  /usr/include/x86_64-linux-gnu/bits/long-double.h :
+  /usr/include/x86_64-linux-gnu/gnu/stubs.h :
+  /usr/include/x86_64-linux-gnu/gnu/stubs-64.h :
+  /usr/lib/gcc/x86_64-linux-gnu/7/include/stddef.h :
+  /usr/include/x86_64-linux-gnu/bits/waitflags.h :
+  /usr/include/x86_64-linux-gnu/bits/waitstatus.h :
+  /usr/include/x86_64-linux-gnu/bits/floatn.h :
+  /usr/include/x86_64-linux-gnu/bits/floatn-common.h :
+  /usr/include/x86_64-linux-gnu/sys/types.h :
+  /usr/include/x86_64-linux-gnu/bits/types.h :
+  /usr/include/x86_64-linux-gnu/bits/typesizes.h :
+  /usr/include/x86_64-linux-gnu/bits/types/clock_t.h :
+  /usr/include/x86_64-linux-gnu/bits/types/clockid_t.h :
+  /usr/include/x86_64-linux-gnu/bits/types/time_t.h :
+  /usr/include/x86_64-linux-gnu/bits/types/timer_t.h :
+  /usr/include/x86_64-linux-gnu/bits/stdint-intn.h /usr/include/endian.h :
+  /usr/include/x86_64-linux-gnu/bits/endian.h :
+  /usr/include/x86_64-linux-gnu/bits/byteswap.h :
+  /usr/include/x86_64-linux-gnu/bits/byteswap-16.h :
+  /usr/include/x86_64-linux-gnu/bits/uintn-identity.h :
+  /usr/include/x86_64-linux-gnu/sys/select.h :
+  /usr/include/x86_64-linux-gnu/bits/select.h :
+  /usr/include/x86_64-linux-gnu/bits/types/sigset_t.h :
+  /usr/include/x86_64-linux-gnu/bits/types/__sigset_t.h :
+  /usr/include/x86_64-linux-gnu/bits/types/struct_timeval.h :
+  /usr/include/x86_64-linux-gnu/bits/types/struct_timespec.h :
+  /usr/include/x86_64-linux-gnu/bits/select2.h :
+  /usr/include/x86_64-linux-gnu/sys/sysmacros.h :
+  /usr/include/x86_64-linux-gnu/bits/sysmacros.h :
+  /usr/include/x86_64-linux-gnu/bits/pthreadtypes.h :
+  /usr/include/x86_64-linux-gnu/bits/thread-shared-types.h :
+  /usr/include/x86_64-linux-gnu/bits/pthreadtypes-arch.h :
+  /usr/include/alloca.h /usr/include/x86_64-linux-gnu/bits/stdlib-float.h :
+  /usr/include/x86_64-linux-gnu/bits/stdlib.h /usr/include/assert.h :
+  ../py/runtime.h ../py/mpstate.h :
+  /usr/lib/gcc/x86_64-linux-gnu/7/include/stdint.h /usr/include/stdint.h :
+  /usr/include/x86_64-linux-gnu/bits/wchar.h :
+  /usr/include/x86_64-linux-gnu/bits/stdint-uintn.h ../py/mpconfig.h :
+  mpconfigport.h ../py/mpthread.h ../py/misc.h :
+  /usr/lib/gcc/x86_64-linux-gnu/7/include/stdbool.h ../py/nlr.h :
+  /usr/lib/gcc/x86_64-linux-gnu/7/include-fixed/limits.h :
+  /usr/lib/gcc/x86_64-linux-gnu/7/include-fixed/syslimits.h :
+  /usr/include/limits.h /usr/include/x86_64-linux-gnu/bits/posix1_lim.h :
+  /usr/include/x86_64-linux-gnu/bits/local_lim.h :
+  /usr/include/linux/limits.h :
+  /usr/include/x86_64-linux-gnu/bits/posix2_lim.h ../py/obj.h ../py/qstr.h :
+  build/genhdr/qstrdefs.generated.h ../py/mpprint.h ../py/runtime0.h :
+  ../py/objlist.h ../py/objexcept.h ../py/objtuple.h ../py/pystack.h :
Binary files MicorpythonOriginal1.12/micropython/mpy-cross/build/py/objrange.o and micropython1.12_withUlab/micropython/mpy-cross/build/py/objrange.o differ
diff -crNb MicorpythonOriginal1.12/micropython/mpy-cross/build/py/objrange.P micropython1.12_withUlab/micropython/mpy-cross/build/py/objrange.P
*** MicorpythonOriginal1.12/micropython/mpy-cross/build/py/objrange.P	1970-01-01 02:00:00.000000000 +0200
--- micropython1.12_withUlab/micropython/mpy-cross/build/py/objrange.P	2020-06-19 18:37:37.863540252 +0200
***************
*** 0 ****
--- 1,106 ----
+ build/py/objrange.o: ../py/objrange.c /usr/include/stdc-predef.h \
+  /usr/include/stdlib.h \
+  /usr/include/x86_64-linux-gnu/bits/libc-header-start.h \
+  /usr/include/features.h /usr/include/x86_64-linux-gnu/sys/cdefs.h \
+  /usr/include/x86_64-linux-gnu/bits/wordsize.h \
+  /usr/include/x86_64-linux-gnu/bits/long-double.h \
+  /usr/include/x86_64-linux-gnu/gnu/stubs.h \
+  /usr/include/x86_64-linux-gnu/gnu/stubs-64.h \
+  /usr/lib/gcc/x86_64-linux-gnu/7/include/stddef.h \
+  /usr/include/x86_64-linux-gnu/bits/waitflags.h \
+  /usr/include/x86_64-linux-gnu/bits/waitstatus.h \
+  /usr/include/x86_64-linux-gnu/bits/floatn.h \
+  /usr/include/x86_64-linux-gnu/bits/floatn-common.h \
+  /usr/include/x86_64-linux-gnu/sys/types.h \
+  /usr/include/x86_64-linux-gnu/bits/types.h \
+  /usr/include/x86_64-linux-gnu/bits/typesizes.h \
+  /usr/include/x86_64-linux-gnu/bits/types/clock_t.h \
+  /usr/include/x86_64-linux-gnu/bits/types/clockid_t.h \
+  /usr/include/x86_64-linux-gnu/bits/types/time_t.h \
+  /usr/include/x86_64-linux-gnu/bits/types/timer_t.h \
+  /usr/include/x86_64-linux-gnu/bits/stdint-intn.h /usr/include/endian.h \
+  /usr/include/x86_64-linux-gnu/bits/endian.h \
+  /usr/include/x86_64-linux-gnu/bits/byteswap.h \
+  /usr/include/x86_64-linux-gnu/bits/byteswap-16.h \
+  /usr/include/x86_64-linux-gnu/bits/uintn-identity.h \
+  /usr/include/x86_64-linux-gnu/sys/select.h \
+  /usr/include/x86_64-linux-gnu/bits/select.h \
+  /usr/include/x86_64-linux-gnu/bits/types/sigset_t.h \
+  /usr/include/x86_64-linux-gnu/bits/types/__sigset_t.h \
+  /usr/include/x86_64-linux-gnu/bits/types/struct_timeval.h \
+  /usr/include/x86_64-linux-gnu/bits/types/struct_timespec.h \
+  /usr/include/x86_64-linux-gnu/bits/select2.h \
+  /usr/include/x86_64-linux-gnu/sys/sysmacros.h \
+  /usr/include/x86_64-linux-gnu/bits/sysmacros.h \
+  /usr/include/x86_64-linux-gnu/bits/pthreadtypes.h \
+  /usr/include/x86_64-linux-gnu/bits/thread-shared-types.h \
+  /usr/include/x86_64-linux-gnu/bits/pthreadtypes-arch.h \
+  /usr/include/alloca.h /usr/include/x86_64-linux-gnu/bits/stdlib-float.h \
+  /usr/include/x86_64-linux-gnu/bits/stdlib.h ../py/runtime.h \
+  ../py/mpstate.h /usr/lib/gcc/x86_64-linux-gnu/7/include/stdint.h \
+  /usr/include/stdint.h /usr/include/x86_64-linux-gnu/bits/wchar.h \
+  /usr/include/x86_64-linux-gnu/bits/stdint-uintn.h ../py/mpconfig.h \
+  mpconfigport.h ../py/mpthread.h ../py/misc.h \
+  /usr/lib/gcc/x86_64-linux-gnu/7/include/stdbool.h ../py/nlr.h \
+  /usr/lib/gcc/x86_64-linux-gnu/7/include-fixed/limits.h \
+  /usr/lib/gcc/x86_64-linux-gnu/7/include-fixed/syslimits.h \
+  /usr/include/limits.h /usr/include/x86_64-linux-gnu/bits/posix1_lim.h \
+  /usr/include/x86_64-linux-gnu/bits/local_lim.h \
+  /usr/include/linux/limits.h \
+  /usr/include/x86_64-linux-gnu/bits/posix2_lim.h /usr/include/assert.h \
+  ../py/obj.h ../py/qstr.h build/genhdr/qstrdefs.generated.h \
+  ../py/mpprint.h ../py/runtime0.h ../py/objlist.h ../py/objexcept.h \
+  ../py/objtuple.h ../py/pystack.h
+ ../py/objrange.c /usr/include/stdc-predef.h :
+  /usr/include/stdlib.h :
+  /usr/include/x86_64-linux-gnu/bits/libc-header-start.h :
+  /usr/include/features.h /usr/include/x86_64-linux-gnu/sys/cdefs.h :
+  /usr/include/x86_64-linux-gnu/bits/wordsize.h :
+  /usr/include/x86_64-linux-gnu/bits/long-double.h :
+  /usr/include/x86_64-linux-gnu/gnu/stubs.h :
+  /usr/include/x86_64-linux-gnu/gnu/stubs-64.h :
+  /usr/lib/gcc/x86_64-linux-gnu/7/include/stddef.h :
+  /usr/include/x86_64-linux-gnu/bits/waitflags.h :
+  /usr/include/x86_64-linux-gnu/bits/waitstatus.h :
+  /usr/include/x86_64-linux-gnu/bits/floatn.h :
+  /usr/include/x86_64-linux-gnu/bits/floatn-common.h :
+  /usr/include/x86_64-linux-gnu/sys/types.h :
+  /usr/include/x86_64-linux-gnu/bits/types.h :
+  /usr/include/x86_64-linux-gnu/bits/typesizes.h :
+  /usr/include/x86_64-linux-gnu/bits/types/clock_t.h :
+  /usr/include/x86_64-linux-gnu/bits/types/clockid_t.h :
+  /usr/include/x86_64-linux-gnu/bits/types/time_t.h :
+  /usr/include/x86_64-linux-gnu/bits/types/timer_t.h :
+  /usr/include/x86_64-linux-gnu/bits/stdint-intn.h /usr/include/endian.h :
+  /usr/include/x86_64-linux-gnu/bits/endian.h :
+  /usr/include/x86_64-linux-gnu/bits/byteswap.h :
+  /usr/include/x86_64-linux-gnu/bits/byteswap-16.h :
+  /usr/include/x86_64-linux-gnu/bits/uintn-identity.h :
+  /usr/include/x86_64-linux-gnu/sys/select.h :
+  /usr/include/x86_64-linux-gnu/bits/select.h :
+  /usr/include/x86_64-linux-gnu/bits/types/sigset_t.h :
+  /usr/include/x86_64-linux-gnu/bits/types/__sigset_t.h :
+  /usr/include/x86_64-linux-gnu/bits/types/struct_timeval.h :
+  /usr/include/x86_64-linux-gnu/bits/types/struct_timespec.h :
+  /usr/include/x86_64-linux-gnu/bits/select2.h :
+  /usr/include/x86_64-linux-gnu/sys/sysmacros.h :
+  /usr/include/x86_64-linux-gnu/bits/sysmacros.h :
+  /usr/include/x86_64-linux-gnu/bits/pthreadtypes.h :
+  /usr/include/x86_64-linux-gnu/bits/thread-shared-types.h :
+  /usr/include/x86_64-linux-gnu/bits/pthreadtypes-arch.h :
+  /usr/include/alloca.h /usr/include/x86_64-linux-gnu/bits/stdlib-float.h :
+  /usr/include/x86_64-linux-gnu/bits/stdlib.h ../py/runtime.h :
+  ../py/mpstate.h /usr/lib/gcc/x86_64-linux-gnu/7/include/stdint.h :
+  /usr/include/stdint.h /usr/include/x86_64-linux-gnu/bits/wchar.h :
+  /usr/include/x86_64-linux-gnu/bits/stdint-uintn.h ../py/mpconfig.h :
+  mpconfigport.h ../py/mpthread.h ../py/misc.h :
+  /usr/lib/gcc/x86_64-linux-gnu/7/include/stdbool.h ../py/nlr.h :
+  /usr/lib/gcc/x86_64-linux-gnu/7/include-fixed/limits.h :
+  /usr/lib/gcc/x86_64-linux-gnu/7/include-fixed/syslimits.h :
+  /usr/include/limits.h /usr/include/x86_64-linux-gnu/bits/posix1_lim.h :
+  /usr/include/x86_64-linux-gnu/bits/local_lim.h :
+  /usr/include/linux/limits.h :
+  /usr/include/x86_64-linux-gnu/bits/posix2_lim.h /usr/include/assert.h :
+  ../py/obj.h ../py/qstr.h build/genhdr/qstrdefs.generated.h :
+  ../py/mpprint.h ../py/runtime0.h ../py/objlist.h ../py/objexcept.h :
+  ../py/objtuple.h ../py/pystack.h :
Binary files MicorpythonOriginal1.12/micropython/mpy-cross/build/py/objreversed.o and micropython1.12_withUlab/micropython/mpy-cross/build/py/objreversed.o differ
diff -crNb MicorpythonOriginal1.12/micropython/mpy-cross/build/py/objreversed.P micropython1.12_withUlab/micropython/mpy-cross/build/py/objreversed.P
*** MicorpythonOriginal1.12/micropython/mpy-cross/build/py/objreversed.P	1970-01-01 02:00:00.000000000 +0200
--- micropython1.12_withUlab/micropython/mpy-cross/build/py/objreversed.P	2020-06-19 18:37:37.891539654 +0200
***************
*** 0 ****
--- 1,106 ----
+ build/py/objreversed.o: ../py/objreversed.c /usr/include/stdc-predef.h \
+  /usr/include/stdlib.h \
+  /usr/include/x86_64-linux-gnu/bits/libc-header-start.h \
+  /usr/include/features.h /usr/include/x86_64-linux-gnu/sys/cdefs.h \
+  /usr/include/x86_64-linux-gnu/bits/wordsize.h \
+  /usr/include/x86_64-linux-gnu/bits/long-double.h \
+  /usr/include/x86_64-linux-gnu/gnu/stubs.h \
+  /usr/include/x86_64-linux-gnu/gnu/stubs-64.h \
+  /usr/lib/gcc/x86_64-linux-gnu/7/include/stddef.h \
+  /usr/include/x86_64-linux-gnu/bits/waitflags.h \
+  /usr/include/x86_64-linux-gnu/bits/waitstatus.h \
+  /usr/include/x86_64-linux-gnu/bits/floatn.h \
+  /usr/include/x86_64-linux-gnu/bits/floatn-common.h \
+  /usr/include/x86_64-linux-gnu/sys/types.h \
+  /usr/include/x86_64-linux-gnu/bits/types.h \
+  /usr/include/x86_64-linux-gnu/bits/typesizes.h \
+  /usr/include/x86_64-linux-gnu/bits/types/clock_t.h \
+  /usr/include/x86_64-linux-gnu/bits/types/clockid_t.h \
+  /usr/include/x86_64-linux-gnu/bits/types/time_t.h \
+  /usr/include/x86_64-linux-gnu/bits/types/timer_t.h \
+  /usr/include/x86_64-linux-gnu/bits/stdint-intn.h /usr/include/endian.h \
+  /usr/include/x86_64-linux-gnu/bits/endian.h \
+  /usr/include/x86_64-linux-gnu/bits/byteswap.h \
+  /usr/include/x86_64-linux-gnu/bits/byteswap-16.h \
+  /usr/include/x86_64-linux-gnu/bits/uintn-identity.h \
+  /usr/include/x86_64-linux-gnu/sys/select.h \
+  /usr/include/x86_64-linux-gnu/bits/select.h \
+  /usr/include/x86_64-linux-gnu/bits/types/sigset_t.h \
+  /usr/include/x86_64-linux-gnu/bits/types/__sigset_t.h \
+  /usr/include/x86_64-linux-gnu/bits/types/struct_timeval.h \
+  /usr/include/x86_64-linux-gnu/bits/types/struct_timespec.h \
+  /usr/include/x86_64-linux-gnu/bits/select2.h \
+  /usr/include/x86_64-linux-gnu/sys/sysmacros.h \
+  /usr/include/x86_64-linux-gnu/bits/sysmacros.h \
+  /usr/include/x86_64-linux-gnu/bits/pthreadtypes.h \
+  /usr/include/x86_64-linux-gnu/bits/thread-shared-types.h \
+  /usr/include/x86_64-linux-gnu/bits/pthreadtypes-arch.h \
+  /usr/include/alloca.h /usr/include/x86_64-linux-gnu/bits/stdlib-float.h \
+  /usr/include/x86_64-linux-gnu/bits/stdlib.h /usr/include/assert.h \
+  ../py/runtime.h ../py/mpstate.h \
+  /usr/lib/gcc/x86_64-linux-gnu/7/include/stdint.h /usr/include/stdint.h \
+  /usr/include/x86_64-linux-gnu/bits/wchar.h \
+  /usr/include/x86_64-linux-gnu/bits/stdint-uintn.h ../py/mpconfig.h \
+  mpconfigport.h ../py/mpthread.h ../py/misc.h \
+  /usr/lib/gcc/x86_64-linux-gnu/7/include/stdbool.h ../py/nlr.h \
+  /usr/lib/gcc/x86_64-linux-gnu/7/include-fixed/limits.h \
+  /usr/lib/gcc/x86_64-linux-gnu/7/include-fixed/syslimits.h \
+  /usr/include/limits.h /usr/include/x86_64-linux-gnu/bits/posix1_lim.h \
+  /usr/include/x86_64-linux-gnu/bits/local_lim.h \
+  /usr/include/linux/limits.h \
+  /usr/include/x86_64-linux-gnu/bits/posix2_lim.h ../py/obj.h ../py/qstr.h \
+  build/genhdr/qstrdefs.generated.h ../py/mpprint.h ../py/runtime0.h \
+  ../py/objlist.h ../py/objexcept.h ../py/objtuple.h ../py/pystack.h
+ ../py/objreversed.c /usr/include/stdc-predef.h :
+  /usr/include/stdlib.h :
+  /usr/include/x86_64-linux-gnu/bits/libc-header-start.h :
+  /usr/include/features.h /usr/include/x86_64-linux-gnu/sys/cdefs.h :
+  /usr/include/x86_64-linux-gnu/bits/wordsize.h :
+  /usr/include/x86_64-linux-gnu/bits/long-double.h :
+  /usr/include/x86_64-linux-gnu/gnu/stubs.h :
+  /usr/include/x86_64-linux-gnu/gnu/stubs-64.h :
+  /usr/lib/gcc/x86_64-linux-gnu/7/include/stddef.h :
+  /usr/include/x86_64-linux-gnu/bits/waitflags.h :
+  /usr/include/x86_64-linux-gnu/bits/waitstatus.h :
+  /usr/include/x86_64-linux-gnu/bits/floatn.h :
+  /usr/include/x86_64-linux-gnu/bits/floatn-common.h :
+  /usr/include/x86_64-linux-gnu/sys/types.h :
+  /usr/include/x86_64-linux-gnu/bits/types.h :
+  /usr/include/x86_64-linux-gnu/bits/typesizes.h :
+  /usr/include/x86_64-linux-gnu/bits/types/clock_t.h :
+  /usr/include/x86_64-linux-gnu/bits/types/clockid_t.h :
+  /usr/include/x86_64-linux-gnu/bits/types/time_t.h :
+  /usr/include/x86_64-linux-gnu/bits/types/timer_t.h :
+  /usr/include/x86_64-linux-gnu/bits/stdint-intn.h /usr/include/endian.h :
+  /usr/include/x86_64-linux-gnu/bits/endian.h :
+  /usr/include/x86_64-linux-gnu/bits/byteswap.h :
+  /usr/include/x86_64-linux-gnu/bits/byteswap-16.h :
+  /usr/include/x86_64-linux-gnu/bits/uintn-identity.h :
+  /usr/include/x86_64-linux-gnu/sys/select.h :
+  /usr/include/x86_64-linux-gnu/bits/select.h :
+  /usr/include/x86_64-linux-gnu/bits/types/sigset_t.h :
+  /usr/include/x86_64-linux-gnu/bits/types/__sigset_t.h :
+  /usr/include/x86_64-linux-gnu/bits/types/struct_timeval.h :
+  /usr/include/x86_64-linux-gnu/bits/types/struct_timespec.h :
+  /usr/include/x86_64-linux-gnu/bits/select2.h :
+  /usr/include/x86_64-linux-gnu/sys/sysmacros.h :
+  /usr/include/x86_64-linux-gnu/bits/sysmacros.h :
+  /usr/include/x86_64-linux-gnu/bits/pthreadtypes.h :
+  /usr/include/x86_64-linux-gnu/bits/thread-shared-types.h :
+  /usr/include/x86_64-linux-gnu/bits/pthreadtypes-arch.h :
+  /usr/include/alloca.h /usr/include/x86_64-linux-gnu/bits/stdlib-float.h :
+  /usr/include/x86_64-linux-gnu/bits/stdlib.h /usr/include/assert.h :
+  ../py/runtime.h ../py/mpstate.h :
+  /usr/lib/gcc/x86_64-linux-gnu/7/include/stdint.h /usr/include/stdint.h :
+  /usr/include/x86_64-linux-gnu/bits/wchar.h :
+  /usr/include/x86_64-linux-gnu/bits/stdint-uintn.h ../py/mpconfig.h :
+  mpconfigport.h ../py/mpthread.h ../py/misc.h :
+  /usr/lib/gcc/x86_64-linux-gnu/7/include/stdbool.h ../py/nlr.h :
+  /usr/lib/gcc/x86_64-linux-gnu/7/include-fixed/limits.h :
+  /usr/lib/gcc/x86_64-linux-gnu/7/include-fixed/syslimits.h :
+  /usr/include/limits.h /usr/include/x86_64-linux-gnu/bits/posix1_lim.h :
+  /usr/include/x86_64-linux-gnu/bits/local_lim.h :
+  /usr/include/linux/limits.h :
+  /usr/include/x86_64-linux-gnu/bits/posix2_lim.h ../py/obj.h ../py/qstr.h :
+  build/genhdr/qstrdefs.generated.h ../py/mpprint.h ../py/runtime0.h :
+  ../py/objlist.h ../py/objexcept.h ../py/objtuple.h ../py/pystack.h :
Binary files MicorpythonOriginal1.12/micropython/mpy-cross/build/py/objset.o and micropython1.12_withUlab/micropython/mpy-cross/build/py/objset.o differ
diff -crNb MicorpythonOriginal1.12/micropython/mpy-cross/build/py/objset.P micropython1.12_withUlab/micropython/mpy-cross/build/py/objset.P
*** MicorpythonOriginal1.12/micropython/mpy-cross/build/py/objset.P	1970-01-01 02:00:00.000000000 +0200
--- micropython1.12_withUlab/micropython/mpy-cross/build/py/objset.P	2020-06-19 19:54:02.385490190 +0200
***************
*** 0 ****
--- 1,62 ----
+ build/py/objset.o: ../py/objset.c /usr/include/stdc-predef.h \
+  /usr/lib/gcc/x86_64-linux-gnu/7/include/stdbool.h /usr/include/string.h \
+  /usr/include/x86_64-linux-gnu/bits/libc-header-start.h \
+  /usr/include/features.h /usr/include/x86_64-linux-gnu/sys/cdefs.h \
+  /usr/include/x86_64-linux-gnu/bits/wordsize.h \
+  /usr/include/x86_64-linux-gnu/bits/long-double.h \
+  /usr/include/x86_64-linux-gnu/gnu/stubs.h \
+  /usr/include/x86_64-linux-gnu/gnu/stubs-64.h \
+  /usr/lib/gcc/x86_64-linux-gnu/7/include/stddef.h \
+  /usr/include/x86_64-linux-gnu/bits/types/locale_t.h \
+  /usr/include/x86_64-linux-gnu/bits/types/__locale_t.h \
+  /usr/include/strings.h \
+  /usr/include/x86_64-linux-gnu/bits/strings_fortified.h \
+  /usr/include/x86_64-linux-gnu/bits/string_fortified.h \
+  /usr/include/assert.h ../py/runtime.h ../py/mpstate.h \
+  /usr/lib/gcc/x86_64-linux-gnu/7/include/stdint.h /usr/include/stdint.h \
+  /usr/include/x86_64-linux-gnu/bits/types.h \
+  /usr/include/x86_64-linux-gnu/bits/typesizes.h \
+  /usr/include/x86_64-linux-gnu/bits/wchar.h \
+  /usr/include/x86_64-linux-gnu/bits/stdint-intn.h \
+  /usr/include/x86_64-linux-gnu/bits/stdint-uintn.h ../py/mpconfig.h \
+  mpconfigport.h /usr/include/alloca.h ../py/mpthread.h ../py/misc.h \
+  ../py/nlr.h /usr/lib/gcc/x86_64-linux-gnu/7/include-fixed/limits.h \
+  /usr/lib/gcc/x86_64-linux-gnu/7/include-fixed/syslimits.h \
+  /usr/include/limits.h /usr/include/x86_64-linux-gnu/bits/posix1_lim.h \
+  /usr/include/x86_64-linux-gnu/bits/local_lim.h \
+  /usr/include/linux/limits.h \
+  /usr/include/x86_64-linux-gnu/bits/posix2_lim.h ../py/obj.h ../py/qstr.h \
+  build/genhdr/qstrdefs.generated.h ../py/mpprint.h ../py/runtime0.h \
+  ../py/objlist.h ../py/objexcept.h ../py/objtuple.h ../py/pystack.h \
+  ../py/builtin.h
+ ../py/objset.c /usr/include/stdc-predef.h :
+  /usr/lib/gcc/x86_64-linux-gnu/7/include/stdbool.h /usr/include/string.h :
+  /usr/include/x86_64-linux-gnu/bits/libc-header-start.h :
+  /usr/include/features.h /usr/include/x86_64-linux-gnu/sys/cdefs.h :
+  /usr/include/x86_64-linux-gnu/bits/wordsize.h :
+  /usr/include/x86_64-linux-gnu/bits/long-double.h :
+  /usr/include/x86_64-linux-gnu/gnu/stubs.h :
+  /usr/include/x86_64-linux-gnu/gnu/stubs-64.h :
+  /usr/lib/gcc/x86_64-linux-gnu/7/include/stddef.h :
+  /usr/include/x86_64-linux-gnu/bits/types/locale_t.h :
+  /usr/include/x86_64-linux-gnu/bits/types/__locale_t.h :
+  /usr/include/strings.h :
+  /usr/include/x86_64-linux-gnu/bits/strings_fortified.h :
+  /usr/include/x86_64-linux-gnu/bits/string_fortified.h :
+  /usr/include/assert.h ../py/runtime.h ../py/mpstate.h :
+  /usr/lib/gcc/x86_64-linux-gnu/7/include/stdint.h /usr/include/stdint.h :
+  /usr/include/x86_64-linux-gnu/bits/types.h :
+  /usr/include/x86_64-linux-gnu/bits/typesizes.h :
+  /usr/include/x86_64-linux-gnu/bits/wchar.h :
+  /usr/include/x86_64-linux-gnu/bits/stdint-intn.h :
+  /usr/include/x86_64-linux-gnu/bits/stdint-uintn.h ../py/mpconfig.h :
+  mpconfigport.h /usr/include/alloca.h ../py/mpthread.h ../py/misc.h :
+  ../py/nlr.h /usr/lib/gcc/x86_64-linux-gnu/7/include-fixed/limits.h :
+  /usr/lib/gcc/x86_64-linux-gnu/7/include-fixed/syslimits.h :
+  /usr/include/limits.h /usr/include/x86_64-linux-gnu/bits/posix1_lim.h :
+  /usr/include/x86_64-linux-gnu/bits/local_lim.h :
+  /usr/include/linux/limits.h :
+  /usr/include/x86_64-linux-gnu/bits/posix2_lim.h ../py/obj.h ../py/qstr.h :
+  build/genhdr/qstrdefs.generated.h ../py/mpprint.h ../py/runtime0.h :
+  ../py/objlist.h ../py/objexcept.h ../py/objtuple.h ../py/pystack.h :
+  ../py/builtin.h :
Binary files MicorpythonOriginal1.12/micropython/mpy-cross/build/py/objsingleton.o and micropython1.12_withUlab/micropython/mpy-cross/build/py/objsingleton.o differ
diff -crNb MicorpythonOriginal1.12/micropython/mpy-cross/build/py/objsingleton.P micropython1.12_withUlab/micropython/mpy-cross/build/py/objsingleton.P
*** MicorpythonOriginal1.12/micropython/mpy-cross/build/py/objsingleton.P	1970-01-01 02:00:00.000000000 +0200
--- micropython1.12_withUlab/micropython/mpy-cross/build/py/objsingleton.P	2020-06-19 18:37:37.983537686 +0200
***************
*** 0 ****
--- 1,90 ----
+ build/py/objsingleton.o: ../py/objsingleton.c /usr/include/stdc-predef.h \
+  /usr/include/stdlib.h \
+  /usr/include/x86_64-linux-gnu/bits/libc-header-start.h \
+  /usr/include/features.h /usr/include/x86_64-linux-gnu/sys/cdefs.h \
+  /usr/include/x86_64-linux-gnu/bits/wordsize.h \
+  /usr/include/x86_64-linux-gnu/bits/long-double.h \
+  /usr/include/x86_64-linux-gnu/gnu/stubs.h \
+  /usr/include/x86_64-linux-gnu/gnu/stubs-64.h \
+  /usr/lib/gcc/x86_64-linux-gnu/7/include/stddef.h \
+  /usr/include/x86_64-linux-gnu/bits/waitflags.h \
+  /usr/include/x86_64-linux-gnu/bits/waitstatus.h \
+  /usr/include/x86_64-linux-gnu/bits/floatn.h \
+  /usr/include/x86_64-linux-gnu/bits/floatn-common.h \
+  /usr/include/x86_64-linux-gnu/sys/types.h \
+  /usr/include/x86_64-linux-gnu/bits/types.h \
+  /usr/include/x86_64-linux-gnu/bits/typesizes.h \
+  /usr/include/x86_64-linux-gnu/bits/types/clock_t.h \
+  /usr/include/x86_64-linux-gnu/bits/types/clockid_t.h \
+  /usr/include/x86_64-linux-gnu/bits/types/time_t.h \
+  /usr/include/x86_64-linux-gnu/bits/types/timer_t.h \
+  /usr/include/x86_64-linux-gnu/bits/stdint-intn.h /usr/include/endian.h \
+  /usr/include/x86_64-linux-gnu/bits/endian.h \
+  /usr/include/x86_64-linux-gnu/bits/byteswap.h \
+  /usr/include/x86_64-linux-gnu/bits/byteswap-16.h \
+  /usr/include/x86_64-linux-gnu/bits/uintn-identity.h \
+  /usr/include/x86_64-linux-gnu/sys/select.h \
+  /usr/include/x86_64-linux-gnu/bits/select.h \
+  /usr/include/x86_64-linux-gnu/bits/types/sigset_t.h \
+  /usr/include/x86_64-linux-gnu/bits/types/__sigset_t.h \
+  /usr/include/x86_64-linux-gnu/bits/types/struct_timeval.h \
+  /usr/include/x86_64-linux-gnu/bits/types/struct_timespec.h \
+  /usr/include/x86_64-linux-gnu/bits/select2.h \
+  /usr/include/x86_64-linux-gnu/sys/sysmacros.h \
+  /usr/include/x86_64-linux-gnu/bits/sysmacros.h \
+  /usr/include/x86_64-linux-gnu/bits/pthreadtypes.h \
+  /usr/include/x86_64-linux-gnu/bits/thread-shared-types.h \
+  /usr/include/x86_64-linux-gnu/bits/pthreadtypes-arch.h \
+  /usr/include/alloca.h /usr/include/x86_64-linux-gnu/bits/stdlib-float.h \
+  /usr/include/x86_64-linux-gnu/bits/stdlib.h /usr/include/assert.h \
+  ../py/obj.h ../py/mpconfig.h mpconfigport.h \
+  /usr/lib/gcc/x86_64-linux-gnu/7/include/stdint.h /usr/include/stdint.h \
+  /usr/include/x86_64-linux-gnu/bits/wchar.h \
+  /usr/include/x86_64-linux-gnu/bits/stdint-uintn.h ../py/misc.h \
+  /usr/lib/gcc/x86_64-linux-gnu/7/include/stdbool.h ../py/qstr.h \
+  build/genhdr/qstrdefs.generated.h ../py/mpprint.h ../py/runtime0.h
+ ../py/objsingleton.c /usr/include/stdc-predef.h :
+  /usr/include/stdlib.h :
+  /usr/include/x86_64-linux-gnu/bits/libc-header-start.h :
+  /usr/include/features.h /usr/include/x86_64-linux-gnu/sys/cdefs.h :
+  /usr/include/x86_64-linux-gnu/bits/wordsize.h :
+  /usr/include/x86_64-linux-gnu/bits/long-double.h :
+  /usr/include/x86_64-linux-gnu/gnu/stubs.h :
+  /usr/include/x86_64-linux-gnu/gnu/stubs-64.h :
+  /usr/lib/gcc/x86_64-linux-gnu/7/include/stddef.h :
+  /usr/include/x86_64-linux-gnu/bits/waitflags.h :
+  /usr/include/x86_64-linux-gnu/bits/waitstatus.h :
+  /usr/include/x86_64-linux-gnu/bits/floatn.h :
+  /usr/include/x86_64-linux-gnu/bits/floatn-common.h :
+  /usr/include/x86_64-linux-gnu/sys/types.h :
+  /usr/include/x86_64-linux-gnu/bits/types.h :
+  /usr/include/x86_64-linux-gnu/bits/typesizes.h :
+  /usr/include/x86_64-linux-gnu/bits/types/clock_t.h :
+  /usr/include/x86_64-linux-gnu/bits/types/clockid_t.h :
+  /usr/include/x86_64-linux-gnu/bits/types/time_t.h :
+  /usr/include/x86_64-linux-gnu/bits/types/timer_t.h :
+  /usr/include/x86_64-linux-gnu/bits/stdint-intn.h /usr/include/endian.h :
+  /usr/include/x86_64-linux-gnu/bits/endian.h :
+  /usr/include/x86_64-linux-gnu/bits/byteswap.h :
+  /usr/include/x86_64-linux-gnu/bits/byteswap-16.h :
+  /usr/include/x86_64-linux-gnu/bits/uintn-identity.h :
+  /usr/include/x86_64-linux-gnu/sys/select.h :
+  /usr/include/x86_64-linux-gnu/bits/select.h :
+  /usr/include/x86_64-linux-gnu/bits/types/sigset_t.h :
+  /usr/include/x86_64-linux-gnu/bits/types/__sigset_t.h :
+  /usr/include/x86_64-linux-gnu/bits/types/struct_timeval.h :
+  /usr/include/x86_64-linux-gnu/bits/types/struct_timespec.h :
+  /usr/include/x86_64-linux-gnu/bits/select2.h :
+  /usr/include/x86_64-linux-gnu/sys/sysmacros.h :
+  /usr/include/x86_64-linux-gnu/bits/sysmacros.h :
+  /usr/include/x86_64-linux-gnu/bits/pthreadtypes.h :
+  /usr/include/x86_64-linux-gnu/bits/thread-shared-types.h :
+  /usr/include/x86_64-linux-gnu/bits/pthreadtypes-arch.h :
+  /usr/include/alloca.h /usr/include/x86_64-linux-gnu/bits/stdlib-float.h :
+  /usr/include/x86_64-linux-gnu/bits/stdlib.h /usr/include/assert.h :
+  ../py/obj.h ../py/mpconfig.h mpconfigport.h :
+  /usr/lib/gcc/x86_64-linux-gnu/7/include/stdint.h /usr/include/stdint.h :
+  /usr/include/x86_64-linux-gnu/bits/wchar.h :
+  /usr/include/x86_64-linux-gnu/bits/stdint-uintn.h ../py/misc.h :
+  /usr/lib/gcc/x86_64-linux-gnu/7/include/stdbool.h ../py/qstr.h :
+  build/genhdr/qstrdefs.generated.h ../py/mpprint.h ../py/runtime0.h :
Binary files MicorpythonOriginal1.12/micropython/mpy-cross/build/py/objslice.o and micropython1.12_withUlab/micropython/mpy-cross/build/py/objslice.o differ
diff -crNb MicorpythonOriginal1.12/micropython/mpy-cross/build/py/objslice.P micropython1.12_withUlab/micropython/mpy-cross/build/py/objslice.P
*** MicorpythonOriginal1.12/micropython/mpy-cross/build/py/objslice.P	1970-01-01 02:00:00.000000000 +0200
--- micropython1.12_withUlab/micropython/mpy-cross/build/py/objslice.P	2020-06-19 18:37:38.011537088 +0200
***************
*** 0 ****
--- 1,90 ----
+ build/py/objslice.o: ../py/objslice.c /usr/include/stdc-predef.h \
+  /usr/include/stdlib.h \
+  /usr/include/x86_64-linux-gnu/bits/libc-header-start.h \
+  /usr/include/features.h /usr/include/x86_64-linux-gnu/sys/cdefs.h \
+  /usr/include/x86_64-linux-gnu/bits/wordsize.h \
+  /usr/include/x86_64-linux-gnu/bits/long-double.h \
+  /usr/include/x86_64-linux-gnu/gnu/stubs.h \
+  /usr/include/x86_64-linux-gnu/gnu/stubs-64.h \
+  /usr/lib/gcc/x86_64-linux-gnu/7/include/stddef.h \
+  /usr/include/x86_64-linux-gnu/bits/waitflags.h \
+  /usr/include/x86_64-linux-gnu/bits/waitstatus.h \
+  /usr/include/x86_64-linux-gnu/bits/floatn.h \
+  /usr/include/x86_64-linux-gnu/bits/floatn-common.h \
+  /usr/include/x86_64-linux-gnu/sys/types.h \
+  /usr/include/x86_64-linux-gnu/bits/types.h \
+  /usr/include/x86_64-linux-gnu/bits/typesizes.h \
+  /usr/include/x86_64-linux-gnu/bits/types/clock_t.h \
+  /usr/include/x86_64-linux-gnu/bits/types/clockid_t.h \
+  /usr/include/x86_64-linux-gnu/bits/types/time_t.h \
+  /usr/include/x86_64-linux-gnu/bits/types/timer_t.h \
+  /usr/include/x86_64-linux-gnu/bits/stdint-intn.h /usr/include/endian.h \
+  /usr/include/x86_64-linux-gnu/bits/endian.h \
+  /usr/include/x86_64-linux-gnu/bits/byteswap.h \
+  /usr/include/x86_64-linux-gnu/bits/byteswap-16.h \
+  /usr/include/x86_64-linux-gnu/bits/uintn-identity.h \
+  /usr/include/x86_64-linux-gnu/sys/select.h \
+  /usr/include/x86_64-linux-gnu/bits/select.h \
+  /usr/include/x86_64-linux-gnu/bits/types/sigset_t.h \
+  /usr/include/x86_64-linux-gnu/bits/types/__sigset_t.h \
+  /usr/include/x86_64-linux-gnu/bits/types/struct_timeval.h \
+  /usr/include/x86_64-linux-gnu/bits/types/struct_timespec.h \
+  /usr/include/x86_64-linux-gnu/bits/select2.h \
+  /usr/include/x86_64-linux-gnu/sys/sysmacros.h \
+  /usr/include/x86_64-linux-gnu/bits/sysmacros.h \
+  /usr/include/x86_64-linux-gnu/bits/pthreadtypes.h \
+  /usr/include/x86_64-linux-gnu/bits/thread-shared-types.h \
+  /usr/include/x86_64-linux-gnu/bits/pthreadtypes-arch.h \
+  /usr/include/alloca.h /usr/include/x86_64-linux-gnu/bits/stdlib-float.h \
+  /usr/include/x86_64-linux-gnu/bits/stdlib.h /usr/include/assert.h \
+  ../py/obj.h ../py/mpconfig.h mpconfigport.h \
+  /usr/lib/gcc/x86_64-linux-gnu/7/include/stdint.h /usr/include/stdint.h \
+  /usr/include/x86_64-linux-gnu/bits/wchar.h \
+  /usr/include/x86_64-linux-gnu/bits/stdint-uintn.h ../py/misc.h \
+  /usr/lib/gcc/x86_64-linux-gnu/7/include/stdbool.h ../py/qstr.h \
+  build/genhdr/qstrdefs.generated.h ../py/mpprint.h ../py/runtime0.h
+ ../py/objslice.c /usr/include/stdc-predef.h :
+  /usr/include/stdlib.h :
+  /usr/include/x86_64-linux-gnu/bits/libc-header-start.h :
+  /usr/include/features.h /usr/include/x86_64-linux-gnu/sys/cdefs.h :
+  /usr/include/x86_64-linux-gnu/bits/wordsize.h :
+  /usr/include/x86_64-linux-gnu/bits/long-double.h :
+  /usr/include/x86_64-linux-gnu/gnu/stubs.h :
+  /usr/include/x86_64-linux-gnu/gnu/stubs-64.h :
+  /usr/lib/gcc/x86_64-linux-gnu/7/include/stddef.h :
+  /usr/include/x86_64-linux-gnu/bits/waitflags.h :
+  /usr/include/x86_64-linux-gnu/bits/waitstatus.h :
+  /usr/include/x86_64-linux-gnu/bits/floatn.h :
+  /usr/include/x86_64-linux-gnu/bits/floatn-common.h :
+  /usr/include/x86_64-linux-gnu/sys/types.h :
+  /usr/include/x86_64-linux-gnu/bits/types.h :
+  /usr/include/x86_64-linux-gnu/bits/typesizes.h :
+  /usr/include/x86_64-linux-gnu/bits/types/clock_t.h :
+  /usr/include/x86_64-linux-gnu/bits/types/clockid_t.h :
+  /usr/include/x86_64-linux-gnu/bits/types/time_t.h :
+  /usr/include/x86_64-linux-gnu/bits/types/timer_t.h :
+  /usr/include/x86_64-linux-gnu/bits/stdint-intn.h /usr/include/endian.h :
+  /usr/include/x86_64-linux-gnu/bits/endian.h :
+  /usr/include/x86_64-linux-gnu/bits/byteswap.h :
+  /usr/include/x86_64-linux-gnu/bits/byteswap-16.h :
+  /usr/include/x86_64-linux-gnu/bits/uintn-identity.h :
+  /usr/include/x86_64-linux-gnu/sys/select.h :
+  /usr/include/x86_64-linux-gnu/bits/select.h :
+  /usr/include/x86_64-linux-gnu/bits/types/sigset_t.h :
+  /usr/include/x86_64-linux-gnu/bits/types/__sigset_t.h :
+  /usr/include/x86_64-linux-gnu/bits/types/struct_timeval.h :
+  /usr/include/x86_64-linux-gnu/bits/types/struct_timespec.h :
+  /usr/include/x86_64-linux-gnu/bits/select2.h :
+  /usr/include/x86_64-linux-gnu/sys/sysmacros.h :
+  /usr/include/x86_64-linux-gnu/bits/sysmacros.h :
+  /usr/include/x86_64-linux-gnu/bits/pthreadtypes.h :
+  /usr/include/x86_64-linux-gnu/bits/thread-shared-types.h :
+  /usr/include/x86_64-linux-gnu/bits/pthreadtypes-arch.h :
+  /usr/include/alloca.h /usr/include/x86_64-linux-gnu/bits/stdlib-float.h :
+  /usr/include/x86_64-linux-gnu/bits/stdlib.h /usr/include/assert.h :
+  ../py/obj.h ../py/mpconfig.h mpconfigport.h :
+  /usr/lib/gcc/x86_64-linux-gnu/7/include/stdint.h /usr/include/stdint.h :
+  /usr/include/x86_64-linux-gnu/bits/wchar.h :
+  /usr/include/x86_64-linux-gnu/bits/stdint-uintn.h ../py/misc.h :
+  /usr/lib/gcc/x86_64-linux-gnu/7/include/stdbool.h ../py/qstr.h :
+  build/genhdr/qstrdefs.generated.h ../py/mpprint.h ../py/runtime0.h :
Binary files MicorpythonOriginal1.12/micropython/mpy-cross/build/py/objstringio.o and micropython1.12_withUlab/micropython/mpy-cross/build/py/objstringio.o differ
diff -crNb MicorpythonOriginal1.12/micropython/mpy-cross/build/py/objstringio.P micropython1.12_withUlab/micropython/mpy-cross/build/py/objstringio.P
*** MicorpythonOriginal1.12/micropython/mpy-cross/build/py/objstringio.P	1970-01-01 02:00:00.000000000 +0200
--- micropython1.12_withUlab/micropython/mpy-cross/build/py/objstringio.P	2020-06-19 18:37:38.323530435 +0200
***************
*** 0 ****
--- 1,88 ----
+ build/py/objstringio.o: ../py/objstringio.c /usr/include/stdc-predef.h \
+  /usr/include/stdio.h \
+  /usr/include/x86_64-linux-gnu/bits/libc-header-start.h \
+  /usr/include/features.h /usr/include/x86_64-linux-gnu/sys/cdefs.h \
+  /usr/include/x86_64-linux-gnu/bits/wordsize.h \
+  /usr/include/x86_64-linux-gnu/bits/long-double.h \
+  /usr/include/x86_64-linux-gnu/gnu/stubs.h \
+  /usr/include/x86_64-linux-gnu/gnu/stubs-64.h \
+  /usr/lib/gcc/x86_64-linux-gnu/7/include/stddef.h \
+  /usr/include/x86_64-linux-gnu/bits/types.h \
+  /usr/include/x86_64-linux-gnu/bits/typesizes.h \
+  /usr/include/x86_64-linux-gnu/bits/types/__FILE.h \
+  /usr/include/x86_64-linux-gnu/bits/types/FILE.h \
+  /usr/include/x86_64-linux-gnu/bits/libio.h \
+  /usr/include/x86_64-linux-gnu/bits/_G_config.h \
+  /usr/include/x86_64-linux-gnu/bits/types/__mbstate_t.h \
+  /usr/lib/gcc/x86_64-linux-gnu/7/include/stdarg.h \
+  /usr/include/x86_64-linux-gnu/bits/stdio_lim.h \
+  /usr/include/x86_64-linux-gnu/bits/sys_errlist.h \
+  /usr/include/x86_64-linux-gnu/bits/stdio2.h /usr/include/string.h \
+  /usr/include/x86_64-linux-gnu/bits/types/locale_t.h \
+  /usr/include/x86_64-linux-gnu/bits/types/__locale_t.h \
+  /usr/include/strings.h \
+  /usr/include/x86_64-linux-gnu/bits/strings_fortified.h \
+  /usr/include/x86_64-linux-gnu/bits/string_fortified.h ../py/objstr.h \
+  ../py/obj.h ../py/mpconfig.h mpconfigport.h /usr/include/alloca.h \
+  /usr/lib/gcc/x86_64-linux-gnu/7/include/stdint.h /usr/include/stdint.h \
+  /usr/include/x86_64-linux-gnu/bits/wchar.h \
+  /usr/include/x86_64-linux-gnu/bits/stdint-intn.h \
+  /usr/include/x86_64-linux-gnu/bits/stdint-uintn.h ../py/misc.h \
+  /usr/lib/gcc/x86_64-linux-gnu/7/include/stdbool.h ../py/qstr.h \
+  build/genhdr/qstrdefs.generated.h ../py/mpprint.h ../py/runtime0.h \
+  ../py/objstringio.h ../py/runtime.h ../py/mpstate.h ../py/mpthread.h \
+  ../py/nlr.h /usr/lib/gcc/x86_64-linux-gnu/7/include-fixed/limits.h \
+  /usr/lib/gcc/x86_64-linux-gnu/7/include-fixed/syslimits.h \
+  /usr/include/limits.h /usr/include/x86_64-linux-gnu/bits/posix1_lim.h \
+  /usr/include/x86_64-linux-gnu/bits/local_lim.h \
+  /usr/include/linux/limits.h \
+  /usr/include/x86_64-linux-gnu/bits/posix2_lim.h /usr/include/assert.h \
+  ../py/objlist.h ../py/objexcept.h ../py/objtuple.h ../py/pystack.h \
+  ../py/stream.h ../py/mperrno.h /usr/include/errno.h \
+  /usr/include/x86_64-linux-gnu/bits/errno.h /usr/include/linux/errno.h \
+  /usr/include/x86_64-linux-gnu/asm/errno.h \
+  /usr/include/asm-generic/errno.h /usr/include/asm-generic/errno-base.h
+ ../py/objstringio.c /usr/include/stdc-predef.h :
+  /usr/include/stdio.h :
+  /usr/include/x86_64-linux-gnu/bits/libc-header-start.h :
+  /usr/include/features.h /usr/include/x86_64-linux-gnu/sys/cdefs.h :
+  /usr/include/x86_64-linux-gnu/bits/wordsize.h :
+  /usr/include/x86_64-linux-gnu/bits/long-double.h :
+  /usr/include/x86_64-linux-gnu/gnu/stubs.h :
+  /usr/include/x86_64-linux-gnu/gnu/stubs-64.h :
+  /usr/lib/gcc/x86_64-linux-gnu/7/include/stddef.h :
+  /usr/include/x86_64-linux-gnu/bits/types.h :
+  /usr/include/x86_64-linux-gnu/bits/typesizes.h :
+  /usr/include/x86_64-linux-gnu/bits/types/__FILE.h :
+  /usr/include/x86_64-linux-gnu/bits/types/FILE.h :
+  /usr/include/x86_64-linux-gnu/bits/libio.h :
+  /usr/include/x86_64-linux-gnu/bits/_G_config.h :
+  /usr/include/x86_64-linux-gnu/bits/types/__mbstate_t.h :
+  /usr/lib/gcc/x86_64-linux-gnu/7/include/stdarg.h :
+  /usr/include/x86_64-linux-gnu/bits/stdio_lim.h :
+  /usr/include/x86_64-linux-gnu/bits/sys_errlist.h :
+  /usr/include/x86_64-linux-gnu/bits/stdio2.h /usr/include/string.h :
+  /usr/include/x86_64-linux-gnu/bits/types/locale_t.h :
+  /usr/include/x86_64-linux-gnu/bits/types/__locale_t.h :
+  /usr/include/strings.h :
+  /usr/include/x86_64-linux-gnu/bits/strings_fortified.h :
+  /usr/include/x86_64-linux-gnu/bits/string_fortified.h ../py/objstr.h :
+  ../py/obj.h ../py/mpconfig.h mpconfigport.h /usr/include/alloca.h :
+  /usr/lib/gcc/x86_64-linux-gnu/7/include/stdint.h /usr/include/stdint.h :
+  /usr/include/x86_64-linux-gnu/bits/wchar.h :
+  /usr/include/x86_64-linux-gnu/bits/stdint-intn.h :
+  /usr/include/x86_64-linux-gnu/bits/stdint-uintn.h ../py/misc.h :
+  /usr/lib/gcc/x86_64-linux-gnu/7/include/stdbool.h ../py/qstr.h :
+  build/genhdr/qstrdefs.generated.h ../py/mpprint.h ../py/runtime0.h :
+  ../py/objstringio.h ../py/runtime.h ../py/mpstate.h ../py/mpthread.h :
+  ../py/nlr.h /usr/lib/gcc/x86_64-linux-gnu/7/include-fixed/limits.h :
+  /usr/lib/gcc/x86_64-linux-gnu/7/include-fixed/syslimits.h :
+  /usr/include/limits.h /usr/include/x86_64-linux-gnu/bits/posix1_lim.h :
+  /usr/include/x86_64-linux-gnu/bits/local_lim.h :
+  /usr/include/linux/limits.h :
+  /usr/include/x86_64-linux-gnu/bits/posix2_lim.h /usr/include/assert.h :
+  ../py/objlist.h ../py/objexcept.h ../py/objtuple.h ../py/pystack.h :
+  ../py/stream.h ../py/mperrno.h /usr/include/errno.h :
+  /usr/include/x86_64-linux-gnu/bits/errno.h /usr/include/linux/errno.h :
+  /usr/include/x86_64-linux-gnu/asm/errno.h :
+  /usr/include/asm-generic/errno.h /usr/include/asm-generic/errno-base.h :
Binary files MicorpythonOriginal1.12/micropython/mpy-cross/build/py/objstr.o and micropython1.12_withUlab/micropython/mpy-cross/build/py/objstr.o differ
diff -crNb MicorpythonOriginal1.12/micropython/mpy-cross/build/py/objstr.P micropython1.12_withUlab/micropython/mpy-cross/build/py/objstr.P
*** MicorpythonOriginal1.12/micropython/mpy-cross/build/py/objstr.P	1970-01-01 02:00:00.000000000 +0200
--- micropython1.12_withUlab/micropython/mpy-cross/build/py/objstr.P	2020-06-19 18:37:38.247532056 +0200
***************
*** 0 ****
--- 1,64 ----
+ build/py/objstr.o: ../py/objstr.c /usr/include/stdc-predef.h \
+  /usr/include/string.h \
+  /usr/include/x86_64-linux-gnu/bits/libc-header-start.h \
+  /usr/include/features.h /usr/include/x86_64-linux-gnu/sys/cdefs.h \
+  /usr/include/x86_64-linux-gnu/bits/wordsize.h \
+  /usr/include/x86_64-linux-gnu/bits/long-double.h \
+  /usr/include/x86_64-linux-gnu/gnu/stubs.h \
+  /usr/include/x86_64-linux-gnu/gnu/stubs-64.h \
+  /usr/lib/gcc/x86_64-linux-gnu/7/include/stddef.h \
+  /usr/include/x86_64-linux-gnu/bits/types/locale_t.h \
+  /usr/include/x86_64-linux-gnu/bits/types/__locale_t.h \
+  /usr/include/strings.h \
+  /usr/include/x86_64-linux-gnu/bits/strings_fortified.h \
+  /usr/include/x86_64-linux-gnu/bits/string_fortified.h \
+  /usr/include/assert.h ../py/unicode.h ../py/mpconfig.h mpconfigport.h \
+  /usr/include/alloca.h /usr/lib/gcc/x86_64-linux-gnu/7/include/stdint.h \
+  /usr/include/stdint.h /usr/include/x86_64-linux-gnu/bits/types.h \
+  /usr/include/x86_64-linux-gnu/bits/typesizes.h \
+  /usr/include/x86_64-linux-gnu/bits/wchar.h \
+  /usr/include/x86_64-linux-gnu/bits/stdint-intn.h \
+  /usr/include/x86_64-linux-gnu/bits/stdint-uintn.h ../py/misc.h \
+  /usr/lib/gcc/x86_64-linux-gnu/7/include/stdbool.h ../py/objstr.h \
+  ../py/obj.h ../py/qstr.h build/genhdr/qstrdefs.generated.h \
+  ../py/mpprint.h ../py/runtime0.h ../py/objlist.h ../py/runtime.h \
+  ../py/mpstate.h ../py/mpthread.h ../py/nlr.h \
+  /usr/lib/gcc/x86_64-linux-gnu/7/include-fixed/limits.h \
+  /usr/lib/gcc/x86_64-linux-gnu/7/include-fixed/syslimits.h \
+  /usr/include/limits.h /usr/include/x86_64-linux-gnu/bits/posix1_lim.h \
+  /usr/include/x86_64-linux-gnu/bits/local_lim.h \
+  /usr/include/linux/limits.h \
+  /usr/include/x86_64-linux-gnu/bits/posix2_lim.h ../py/objexcept.h \
+  ../py/objtuple.h ../py/pystack.h ../py/stackctrl.h
+ ../py/objstr.c /usr/include/stdc-predef.h :
+  /usr/include/string.h :
+  /usr/include/x86_64-linux-gnu/bits/libc-header-start.h :
+  /usr/include/features.h /usr/include/x86_64-linux-gnu/sys/cdefs.h :
+  /usr/include/x86_64-linux-gnu/bits/wordsize.h :
+  /usr/include/x86_64-linux-gnu/bits/long-double.h :
+  /usr/include/x86_64-linux-gnu/gnu/stubs.h :
+  /usr/include/x86_64-linux-gnu/gnu/stubs-64.h :
+  /usr/lib/gcc/x86_64-linux-gnu/7/include/stddef.h :
+  /usr/include/x86_64-linux-gnu/bits/types/locale_t.h :
+  /usr/include/x86_64-linux-gnu/bits/types/__locale_t.h :
+  /usr/include/strings.h :
+  /usr/include/x86_64-linux-gnu/bits/strings_fortified.h :
+  /usr/include/x86_64-linux-gnu/bits/string_fortified.h :
+  /usr/include/assert.h ../py/unicode.h ../py/mpconfig.h mpconfigport.h :
+  /usr/include/alloca.h /usr/lib/gcc/x86_64-linux-gnu/7/include/stdint.h :
+  /usr/include/stdint.h /usr/include/x86_64-linux-gnu/bits/types.h :
+  /usr/include/x86_64-linux-gnu/bits/typesizes.h :
+  /usr/include/x86_64-linux-gnu/bits/wchar.h :
+  /usr/include/x86_64-linux-gnu/bits/stdint-intn.h :
+  /usr/include/x86_64-linux-gnu/bits/stdint-uintn.h ../py/misc.h :
+  /usr/lib/gcc/x86_64-linux-gnu/7/include/stdbool.h ../py/objstr.h :
+  ../py/obj.h ../py/qstr.h build/genhdr/qstrdefs.generated.h :
+  ../py/mpprint.h ../py/runtime0.h ../py/objlist.h ../py/runtime.h :
+  ../py/mpstate.h ../py/mpthread.h ../py/nlr.h :
+  /usr/lib/gcc/x86_64-linux-gnu/7/include-fixed/limits.h :
+  /usr/lib/gcc/x86_64-linux-gnu/7/include-fixed/syslimits.h :
+  /usr/include/limits.h /usr/include/x86_64-linux-gnu/bits/posix1_lim.h :
+  /usr/include/x86_64-linux-gnu/bits/local_lim.h :
+  /usr/include/linux/limits.h :
+  /usr/include/x86_64-linux-gnu/bits/posix2_lim.h ../py/objexcept.h :
+  ../py/objtuple.h ../py/pystack.h ../py/stackctrl.h :
Binary files MicorpythonOriginal1.12/micropython/mpy-cross/build/py/objstrunicode.o and micropython1.12_withUlab/micropython/mpy-cross/build/py/objstrunicode.o differ
diff -crNb MicorpythonOriginal1.12/micropython/mpy-cross/build/py/objstrunicode.P micropython1.12_withUlab/micropython/mpy-cross/build/py/objstrunicode.P
*** MicorpythonOriginal1.12/micropython/mpy-cross/build/py/objstrunicode.P	1970-01-01 02:00:00.000000000 +0200
--- micropython1.12_withUlab/micropython/mpy-cross/build/py/objstrunicode.P	2020-06-19 18:37:38.299530946 +0200
***************
*** 0 ****
--- 1,64 ----
+ build/py/objstrunicode.o: ../py/objstrunicode.c \
+  /usr/include/stdc-predef.h /usr/include/string.h \
+  /usr/include/x86_64-linux-gnu/bits/libc-header-start.h \
+  /usr/include/features.h /usr/include/x86_64-linux-gnu/sys/cdefs.h \
+  /usr/include/x86_64-linux-gnu/bits/wordsize.h \
+  /usr/include/x86_64-linux-gnu/bits/long-double.h \
+  /usr/include/x86_64-linux-gnu/gnu/stubs.h \
+  /usr/include/x86_64-linux-gnu/gnu/stubs-64.h \
+  /usr/lib/gcc/x86_64-linux-gnu/7/include/stddef.h \
+  /usr/include/x86_64-linux-gnu/bits/types/locale_t.h \
+  /usr/include/x86_64-linux-gnu/bits/types/__locale_t.h \
+  /usr/include/strings.h \
+  /usr/include/x86_64-linux-gnu/bits/strings_fortified.h \
+  /usr/include/x86_64-linux-gnu/bits/string_fortified.h \
+  /usr/include/assert.h ../py/objstr.h ../py/obj.h ../py/mpconfig.h \
+  mpconfigport.h /usr/include/alloca.h \
+  /usr/lib/gcc/x86_64-linux-gnu/7/include/stdint.h /usr/include/stdint.h \
+  /usr/include/x86_64-linux-gnu/bits/types.h \
+  /usr/include/x86_64-linux-gnu/bits/typesizes.h \
+  /usr/include/x86_64-linux-gnu/bits/wchar.h \
+  /usr/include/x86_64-linux-gnu/bits/stdint-intn.h \
+  /usr/include/x86_64-linux-gnu/bits/stdint-uintn.h ../py/misc.h \
+  /usr/lib/gcc/x86_64-linux-gnu/7/include/stdbool.h ../py/qstr.h \
+  build/genhdr/qstrdefs.generated.h ../py/mpprint.h ../py/runtime0.h \
+  ../py/objlist.h ../py/runtime.h ../py/mpstate.h ../py/mpthread.h \
+  ../py/nlr.h /usr/lib/gcc/x86_64-linux-gnu/7/include-fixed/limits.h \
+  /usr/lib/gcc/x86_64-linux-gnu/7/include-fixed/syslimits.h \
+  /usr/include/limits.h /usr/include/x86_64-linux-gnu/bits/posix1_lim.h \
+  /usr/include/x86_64-linux-gnu/bits/local_lim.h \
+  /usr/include/linux/limits.h \
+  /usr/include/x86_64-linux-gnu/bits/posix2_lim.h ../py/objexcept.h \
+  ../py/objtuple.h ../py/pystack.h
+ ../py/objstrunicode.c :
+  /usr/include/stdc-predef.h /usr/include/string.h :
+  /usr/include/x86_64-linux-gnu/bits/libc-header-start.h :
+  /usr/include/features.h /usr/include/x86_64-linux-gnu/sys/cdefs.h :
+  /usr/include/x86_64-linux-gnu/bits/wordsize.h :
+  /usr/include/x86_64-linux-gnu/bits/long-double.h :
+  /usr/include/x86_64-linux-gnu/gnu/stubs.h :
+  /usr/include/x86_64-linux-gnu/gnu/stubs-64.h :
+  /usr/lib/gcc/x86_64-linux-gnu/7/include/stddef.h :
+  /usr/include/x86_64-linux-gnu/bits/types/locale_t.h :
+  /usr/include/x86_64-linux-gnu/bits/types/__locale_t.h :
+  /usr/include/strings.h :
+  /usr/include/x86_64-linux-gnu/bits/strings_fortified.h :
+  /usr/include/x86_64-linux-gnu/bits/string_fortified.h :
+  /usr/include/assert.h ../py/objstr.h ../py/obj.h ../py/mpconfig.h :
+  mpconfigport.h /usr/include/alloca.h :
+  /usr/lib/gcc/x86_64-linux-gnu/7/include/stdint.h /usr/include/stdint.h :
+  /usr/include/x86_64-linux-gnu/bits/types.h :
+  /usr/include/x86_64-linux-gnu/bits/typesizes.h :
+  /usr/include/x86_64-linux-gnu/bits/wchar.h :
+  /usr/include/x86_64-linux-gnu/bits/stdint-intn.h :
+  /usr/include/x86_64-linux-gnu/bits/stdint-uintn.h ../py/misc.h :
+  /usr/lib/gcc/x86_64-linux-gnu/7/include/stdbool.h ../py/qstr.h :
+  build/genhdr/qstrdefs.generated.h ../py/mpprint.h ../py/runtime0.h :
+  ../py/objlist.h ../py/runtime.h ../py/mpstate.h ../py/mpthread.h :
+  ../py/nlr.h /usr/lib/gcc/x86_64-linux-gnu/7/include-fixed/limits.h :
+  /usr/lib/gcc/x86_64-linux-gnu/7/include-fixed/syslimits.h :
+  /usr/include/limits.h /usr/include/x86_64-linux-gnu/bits/posix1_lim.h :
+  /usr/include/x86_64-linux-gnu/bits/local_lim.h :
+  /usr/include/linux/limits.h :
+  /usr/include/x86_64-linux-gnu/bits/posix2_lim.h ../py/objexcept.h :
+  ../py/objtuple.h ../py/pystack.h :
Binary files MicorpythonOriginal1.12/micropython/mpy-cross/build/py/objtuple.o and micropython1.12_withUlab/micropython/mpy-cross/build/py/objtuple.o differ
diff -crNb MicorpythonOriginal1.12/micropython/mpy-cross/build/py/objtuple.P micropython1.12_withUlab/micropython/mpy-cross/build/py/objtuple.P
*** MicorpythonOriginal1.12/micropython/mpy-cross/build/py/objtuple.P	1970-01-01 02:00:00.000000000 +0200
--- micropython1.12_withUlab/micropython/mpy-cross/build/py/objtuple.P	2020-06-19 18:37:38.375529326 +0200
***************
*** 0 ****
--- 1,64 ----
+ build/py/objtuple.o: ../py/objtuple.c /usr/include/stdc-predef.h \
+  /usr/include/string.h \
+  /usr/include/x86_64-linux-gnu/bits/libc-header-start.h \
+  /usr/include/features.h /usr/include/x86_64-linux-gnu/sys/cdefs.h \
+  /usr/include/x86_64-linux-gnu/bits/wordsize.h \
+  /usr/include/x86_64-linux-gnu/bits/long-double.h \
+  /usr/include/x86_64-linux-gnu/gnu/stubs.h \
+  /usr/include/x86_64-linux-gnu/gnu/stubs-64.h \
+  /usr/lib/gcc/x86_64-linux-gnu/7/include/stddef.h \
+  /usr/include/x86_64-linux-gnu/bits/types/locale_t.h \
+  /usr/include/x86_64-linux-gnu/bits/types/__locale_t.h \
+  /usr/include/strings.h \
+  /usr/include/x86_64-linux-gnu/bits/strings_fortified.h \
+  /usr/include/x86_64-linux-gnu/bits/string_fortified.h \
+  /usr/include/assert.h ../py/objtuple.h ../py/obj.h ../py/mpconfig.h \
+  mpconfigport.h /usr/include/alloca.h \
+  /usr/lib/gcc/x86_64-linux-gnu/7/include/stdint.h /usr/include/stdint.h \
+  /usr/include/x86_64-linux-gnu/bits/types.h \
+  /usr/include/x86_64-linux-gnu/bits/typesizes.h \
+  /usr/include/x86_64-linux-gnu/bits/wchar.h \
+  /usr/include/x86_64-linux-gnu/bits/stdint-intn.h \
+  /usr/include/x86_64-linux-gnu/bits/stdint-uintn.h ../py/misc.h \
+  /usr/lib/gcc/x86_64-linux-gnu/7/include/stdbool.h ../py/qstr.h \
+  build/genhdr/qstrdefs.generated.h ../py/mpprint.h ../py/runtime0.h \
+  ../py/runtime.h ../py/mpstate.h ../py/mpthread.h ../py/nlr.h \
+  /usr/lib/gcc/x86_64-linux-gnu/7/include-fixed/limits.h \
+  /usr/lib/gcc/x86_64-linux-gnu/7/include-fixed/syslimits.h \
+  /usr/include/limits.h /usr/include/x86_64-linux-gnu/bits/posix1_lim.h \
+  /usr/include/x86_64-linux-gnu/bits/local_lim.h \
+  /usr/include/linux/limits.h \
+  /usr/include/x86_64-linux-gnu/bits/posix2_lim.h ../py/objlist.h \
+  ../py/objexcept.h ../py/pystack.h
+ ../py/objtuple.c /usr/include/stdc-predef.h :
+  /usr/include/string.h :
+  /usr/include/x86_64-linux-gnu/bits/libc-header-start.h :
+  /usr/include/features.h /usr/include/x86_64-linux-gnu/sys/cdefs.h :
+  /usr/include/x86_64-linux-gnu/bits/wordsize.h :
+  /usr/include/x86_64-linux-gnu/bits/long-double.h :
+  /usr/include/x86_64-linux-gnu/gnu/stubs.h :
+  /usr/include/x86_64-linux-gnu/gnu/stubs-64.h :
+  /usr/lib/gcc/x86_64-linux-gnu/7/include/stddef.h :
+  /usr/include/x86_64-linux-gnu/bits/types/locale_t.h :
+  /usr/include/x86_64-linux-gnu/bits/types/__locale_t.h :
+  /usr/include/strings.h :
+  /usr/include/x86_64-linux-gnu/bits/strings_fortified.h :
+  /usr/include/x86_64-linux-gnu/bits/string_fortified.h :
+  /usr/include/assert.h ../py/objtuple.h ../py/obj.h ../py/mpconfig.h :
+  mpconfigport.h /usr/include/alloca.h :
+  /usr/lib/gcc/x86_64-linux-gnu/7/include/stdint.h /usr/include/stdint.h :
+  /usr/include/x86_64-linux-gnu/bits/types.h :
+  /usr/include/x86_64-linux-gnu/bits/typesizes.h :
+  /usr/include/x86_64-linux-gnu/bits/wchar.h :
+  /usr/include/x86_64-linux-gnu/bits/stdint-intn.h :
+  /usr/include/x86_64-linux-gnu/bits/stdint-uintn.h ../py/misc.h :
+  /usr/lib/gcc/x86_64-linux-gnu/7/include/stdbool.h ../py/qstr.h :
+  build/genhdr/qstrdefs.generated.h ../py/mpprint.h ../py/runtime0.h :
+  ../py/runtime.h ../py/mpstate.h ../py/mpthread.h ../py/nlr.h :
+  /usr/lib/gcc/x86_64-linux-gnu/7/include-fixed/limits.h :
+  /usr/lib/gcc/x86_64-linux-gnu/7/include-fixed/syslimits.h :
+  /usr/include/limits.h /usr/include/x86_64-linux-gnu/bits/posix1_lim.h :
+  /usr/include/x86_64-linux-gnu/bits/local_lim.h :
+  /usr/include/linux/limits.h :
+  /usr/include/x86_64-linux-gnu/bits/posix2_lim.h ../py/objlist.h :
+  ../py/objexcept.h ../py/pystack.h :
Binary files MicorpythonOriginal1.12/micropython/mpy-cross/build/py/objtype.o and micropython1.12_withUlab/micropython/mpy-cross/build/py/objtype.o differ
diff -crNb MicorpythonOriginal1.12/micropython/mpy-cross/build/py/objtype.P micropython1.12_withUlab/micropython/mpy-cross/build/py/objtype.P
*** MicorpythonOriginal1.12/micropython/mpy-cross/build/py/objtype.P	1970-01-01 02:00:00.000000000 +0200
--- micropython1.12_withUlab/micropython/mpy-cross/build/py/objtype.P	2020-06-19 18:37:38.503526597 +0200
***************
*** 0 ****
--- 1,82 ----
+ build/py/objtype.o: ../py/objtype.c /usr/include/stdc-predef.h \
+  /usr/include/stdio.h \
+  /usr/include/x86_64-linux-gnu/bits/libc-header-start.h \
+  /usr/include/features.h /usr/include/x86_64-linux-gnu/sys/cdefs.h \
+  /usr/include/x86_64-linux-gnu/bits/wordsize.h \
+  /usr/include/x86_64-linux-gnu/bits/long-double.h \
+  /usr/include/x86_64-linux-gnu/gnu/stubs.h \
+  /usr/include/x86_64-linux-gnu/gnu/stubs-64.h \
+  /usr/lib/gcc/x86_64-linux-gnu/7/include/stddef.h \
+  /usr/include/x86_64-linux-gnu/bits/types.h \
+  /usr/include/x86_64-linux-gnu/bits/typesizes.h \
+  /usr/include/x86_64-linux-gnu/bits/types/__FILE.h \
+  /usr/include/x86_64-linux-gnu/bits/types/FILE.h \
+  /usr/include/x86_64-linux-gnu/bits/libio.h \
+  /usr/include/x86_64-linux-gnu/bits/_G_config.h \
+  /usr/include/x86_64-linux-gnu/bits/types/__mbstate_t.h \
+  /usr/lib/gcc/x86_64-linux-gnu/7/include/stdarg.h \
+  /usr/include/x86_64-linux-gnu/bits/stdio_lim.h \
+  /usr/include/x86_64-linux-gnu/bits/sys_errlist.h \
+  /usr/include/x86_64-linux-gnu/bits/stdio2.h /usr/include/string.h \
+  /usr/include/x86_64-linux-gnu/bits/types/locale_t.h \
+  /usr/include/x86_64-linux-gnu/bits/types/__locale_t.h \
+  /usr/include/strings.h \
+  /usr/include/x86_64-linux-gnu/bits/strings_fortified.h \
+  /usr/include/x86_64-linux-gnu/bits/string_fortified.h \
+  /usr/include/assert.h ../py/objtype.h ../py/obj.h ../py/mpconfig.h \
+  mpconfigport.h /usr/include/alloca.h \
+  /usr/lib/gcc/x86_64-linux-gnu/7/include/stdint.h /usr/include/stdint.h \
+  /usr/include/x86_64-linux-gnu/bits/wchar.h \
+  /usr/include/x86_64-linux-gnu/bits/stdint-intn.h \
+  /usr/include/x86_64-linux-gnu/bits/stdint-uintn.h ../py/misc.h \
+  /usr/lib/gcc/x86_64-linux-gnu/7/include/stdbool.h ../py/qstr.h \
+  build/genhdr/qstrdefs.generated.h ../py/mpprint.h ../py/runtime0.h \
+  ../py/runtime.h ../py/mpstate.h ../py/mpthread.h ../py/nlr.h \
+  /usr/lib/gcc/x86_64-linux-gnu/7/include-fixed/limits.h \
+  /usr/lib/gcc/x86_64-linux-gnu/7/include-fixed/syslimits.h \
+  /usr/include/limits.h /usr/include/x86_64-linux-gnu/bits/posix1_lim.h \
+  /usr/include/x86_64-linux-gnu/bits/local_lim.h \
+  /usr/include/linux/limits.h \
+  /usr/include/x86_64-linux-gnu/bits/posix2_lim.h ../py/objlist.h \
+  ../py/objexcept.h ../py/objtuple.h ../py/pystack.h
+ ../py/objtype.c /usr/include/stdc-predef.h :
+  /usr/include/stdio.h :
+  /usr/include/x86_64-linux-gnu/bits/libc-header-start.h :
+  /usr/include/features.h /usr/include/x86_64-linux-gnu/sys/cdefs.h :
+  /usr/include/x86_64-linux-gnu/bits/wordsize.h :
+  /usr/include/x86_64-linux-gnu/bits/long-double.h :
+  /usr/include/x86_64-linux-gnu/gnu/stubs.h :
+  /usr/include/x86_64-linux-gnu/gnu/stubs-64.h :
+  /usr/lib/gcc/x86_64-linux-gnu/7/include/stddef.h :
+  /usr/include/x86_64-linux-gnu/bits/types.h :
+  /usr/include/x86_64-linux-gnu/bits/typesizes.h :
+  /usr/include/x86_64-linux-gnu/bits/types/__FILE.h :
+  /usr/include/x86_64-linux-gnu/bits/types/FILE.h :
+  /usr/include/x86_64-linux-gnu/bits/libio.h :
+  /usr/include/x86_64-linux-gnu/bits/_G_config.h :
+  /usr/include/x86_64-linux-gnu/bits/types/__mbstate_t.h :
+  /usr/lib/gcc/x86_64-linux-gnu/7/include/stdarg.h :
+  /usr/include/x86_64-linux-gnu/bits/stdio_lim.h :
+  /usr/include/x86_64-linux-gnu/bits/sys_errlist.h :
+  /usr/include/x86_64-linux-gnu/bits/stdio2.h /usr/include/string.h :
+  /usr/include/x86_64-linux-gnu/bits/types/locale_t.h :
+  /usr/include/x86_64-linux-gnu/bits/types/__locale_t.h :
+  /usr/include/strings.h :
+  /usr/include/x86_64-linux-gnu/bits/strings_fortified.h :
+  /usr/include/x86_64-linux-gnu/bits/string_fortified.h :
+  /usr/include/assert.h ../py/objtype.h ../py/obj.h ../py/mpconfig.h :
+  mpconfigport.h /usr/include/alloca.h :
+  /usr/lib/gcc/x86_64-linux-gnu/7/include/stdint.h /usr/include/stdint.h :
+  /usr/include/x86_64-linux-gnu/bits/wchar.h :
+  /usr/include/x86_64-linux-gnu/bits/stdint-intn.h :
+  /usr/include/x86_64-linux-gnu/bits/stdint-uintn.h ../py/misc.h :
+  /usr/lib/gcc/x86_64-linux-gnu/7/include/stdbool.h ../py/qstr.h :
+  build/genhdr/qstrdefs.generated.h ../py/mpprint.h ../py/runtime0.h :
+  ../py/runtime.h ../py/mpstate.h ../py/mpthread.h ../py/nlr.h :
+  /usr/lib/gcc/x86_64-linux-gnu/7/include-fixed/limits.h :
+  /usr/lib/gcc/x86_64-linux-gnu/7/include-fixed/syslimits.h :
+  /usr/include/limits.h /usr/include/x86_64-linux-gnu/bits/posix1_lim.h :
+  /usr/include/x86_64-linux-gnu/bits/local_lim.h :
+  /usr/include/linux/limits.h :
+  /usr/include/x86_64-linux-gnu/bits/posix2_lim.h ../py/objlist.h :
+  ../py/objexcept.h ../py/objtuple.h ../py/pystack.h :
Binary files MicorpythonOriginal1.12/micropython/mpy-cross/build/py/objzip.o and micropython1.12_withUlab/micropython/mpy-cross/build/py/objzip.o differ
diff -crNb MicorpythonOriginal1.12/micropython/mpy-cross/build/py/objzip.P micropython1.12_withUlab/micropython/mpy-cross/build/py/objzip.P
*** MicorpythonOriginal1.12/micropython/mpy-cross/build/py/objzip.P	1970-01-01 02:00:00.000000000 +0200
--- micropython1.12_withUlab/micropython/mpy-cross/build/py/objzip.P	2020-06-19 18:37:38.531526000 +0200
***************
*** 0 ****
--- 1,106 ----
+ build/py/objzip.o: ../py/objzip.c /usr/include/stdc-predef.h \
+  /usr/include/stdlib.h \
+  /usr/include/x86_64-linux-gnu/bits/libc-header-start.h \
+  /usr/include/features.h /usr/include/x86_64-linux-gnu/sys/cdefs.h \
+  /usr/include/x86_64-linux-gnu/bits/wordsize.h \
+  /usr/include/x86_64-linux-gnu/bits/long-double.h \
+  /usr/include/x86_64-linux-gnu/gnu/stubs.h \
+  /usr/include/x86_64-linux-gnu/gnu/stubs-64.h \
+  /usr/lib/gcc/x86_64-linux-gnu/7/include/stddef.h \
+  /usr/include/x86_64-linux-gnu/bits/waitflags.h \
+  /usr/include/x86_64-linux-gnu/bits/waitstatus.h \
+  /usr/include/x86_64-linux-gnu/bits/floatn.h \
+  /usr/include/x86_64-linux-gnu/bits/floatn-common.h \
+  /usr/include/x86_64-linux-gnu/sys/types.h \
+  /usr/include/x86_64-linux-gnu/bits/types.h \
+  /usr/include/x86_64-linux-gnu/bits/typesizes.h \
+  /usr/include/x86_64-linux-gnu/bits/types/clock_t.h \
+  /usr/include/x86_64-linux-gnu/bits/types/clockid_t.h \
+  /usr/include/x86_64-linux-gnu/bits/types/time_t.h \
+  /usr/include/x86_64-linux-gnu/bits/types/timer_t.h \
+  /usr/include/x86_64-linux-gnu/bits/stdint-intn.h /usr/include/endian.h \
+  /usr/include/x86_64-linux-gnu/bits/endian.h \
+  /usr/include/x86_64-linux-gnu/bits/byteswap.h \
+  /usr/include/x86_64-linux-gnu/bits/byteswap-16.h \
+  /usr/include/x86_64-linux-gnu/bits/uintn-identity.h \
+  /usr/include/x86_64-linux-gnu/sys/select.h \
+  /usr/include/x86_64-linux-gnu/bits/select.h \
+  /usr/include/x86_64-linux-gnu/bits/types/sigset_t.h \
+  /usr/include/x86_64-linux-gnu/bits/types/__sigset_t.h \
+  /usr/include/x86_64-linux-gnu/bits/types/struct_timeval.h \
+  /usr/include/x86_64-linux-gnu/bits/types/struct_timespec.h \
+  /usr/include/x86_64-linux-gnu/bits/select2.h \
+  /usr/include/x86_64-linux-gnu/sys/sysmacros.h \
+  /usr/include/x86_64-linux-gnu/bits/sysmacros.h \
+  /usr/include/x86_64-linux-gnu/bits/pthreadtypes.h \
+  /usr/include/x86_64-linux-gnu/bits/thread-shared-types.h \
+  /usr/include/x86_64-linux-gnu/bits/pthreadtypes-arch.h \
+  /usr/include/alloca.h /usr/include/x86_64-linux-gnu/bits/stdlib-float.h \
+  /usr/include/x86_64-linux-gnu/bits/stdlib.h /usr/include/assert.h \
+  ../py/objtuple.h ../py/obj.h ../py/mpconfig.h mpconfigport.h \
+  /usr/lib/gcc/x86_64-linux-gnu/7/include/stdint.h /usr/include/stdint.h \
+  /usr/include/x86_64-linux-gnu/bits/wchar.h \
+  /usr/include/x86_64-linux-gnu/bits/stdint-uintn.h ../py/misc.h \
+  /usr/lib/gcc/x86_64-linux-gnu/7/include/stdbool.h ../py/qstr.h \
+  build/genhdr/qstrdefs.generated.h ../py/mpprint.h ../py/runtime0.h \
+  ../py/runtime.h ../py/mpstate.h ../py/mpthread.h ../py/nlr.h \
+  /usr/lib/gcc/x86_64-linux-gnu/7/include-fixed/limits.h \
+  /usr/lib/gcc/x86_64-linux-gnu/7/include-fixed/syslimits.h \
+  /usr/include/limits.h /usr/include/x86_64-linux-gnu/bits/posix1_lim.h \
+  /usr/include/x86_64-linux-gnu/bits/local_lim.h \
+  /usr/include/linux/limits.h \
+  /usr/include/x86_64-linux-gnu/bits/posix2_lim.h ../py/objlist.h \
+  ../py/objexcept.h ../py/pystack.h
+ ../py/objzip.c /usr/include/stdc-predef.h :
+  /usr/include/stdlib.h :
+  /usr/include/x86_64-linux-gnu/bits/libc-header-start.h :
+  /usr/include/features.h /usr/include/x86_64-linux-gnu/sys/cdefs.h :
+  /usr/include/x86_64-linux-gnu/bits/wordsize.h :
+  /usr/include/x86_64-linux-gnu/bits/long-double.h :
+  /usr/include/x86_64-linux-gnu/gnu/stubs.h :
+  /usr/include/x86_64-linux-gnu/gnu/stubs-64.h :
+  /usr/lib/gcc/x86_64-linux-gnu/7/include/stddef.h :
+  /usr/include/x86_64-linux-gnu/bits/waitflags.h :
+  /usr/include/x86_64-linux-gnu/bits/waitstatus.h :
+  /usr/include/x86_64-linux-gnu/bits/floatn.h :
+  /usr/include/x86_64-linux-gnu/bits/floatn-common.h :
+  /usr/include/x86_64-linux-gnu/sys/types.h :
+  /usr/include/x86_64-linux-gnu/bits/types.h :
+  /usr/include/x86_64-linux-gnu/bits/typesizes.h :
+  /usr/include/x86_64-linux-gnu/bits/types/clock_t.h :
+  /usr/include/x86_64-linux-gnu/bits/types/clockid_t.h :
+  /usr/include/x86_64-linux-gnu/bits/types/time_t.h :
+  /usr/include/x86_64-linux-gnu/bits/types/timer_t.h :
+  /usr/include/x86_64-linux-gnu/bits/stdint-intn.h /usr/include/endian.h :
+  /usr/include/x86_64-linux-gnu/bits/endian.h :
+  /usr/include/x86_64-linux-gnu/bits/byteswap.h :
+  /usr/include/x86_64-linux-gnu/bits/byteswap-16.h :
+  /usr/include/x86_64-linux-gnu/bits/uintn-identity.h :
+  /usr/include/x86_64-linux-gnu/sys/select.h :
+  /usr/include/x86_64-linux-gnu/bits/select.h :
+  /usr/include/x86_64-linux-gnu/bits/types/sigset_t.h :
+  /usr/include/x86_64-linux-gnu/bits/types/__sigset_t.h :
+  /usr/include/x86_64-linux-gnu/bits/types/struct_timeval.h :
+  /usr/include/x86_64-linux-gnu/bits/types/struct_timespec.h :
+  /usr/include/x86_64-linux-gnu/bits/select2.h :
+  /usr/include/x86_64-linux-gnu/sys/sysmacros.h :
+  /usr/include/x86_64-linux-gnu/bits/sysmacros.h :
+  /usr/include/x86_64-linux-gnu/bits/pthreadtypes.h :
+  /usr/include/x86_64-linux-gnu/bits/thread-shared-types.h :
+  /usr/include/x86_64-linux-gnu/bits/pthreadtypes-arch.h :
+  /usr/include/alloca.h /usr/include/x86_64-linux-gnu/bits/stdlib-float.h :
+  /usr/include/x86_64-linux-gnu/bits/stdlib.h /usr/include/assert.h :
+  ../py/objtuple.h ../py/obj.h ../py/mpconfig.h mpconfigport.h :
+  /usr/lib/gcc/x86_64-linux-gnu/7/include/stdint.h /usr/include/stdint.h :
+  /usr/include/x86_64-linux-gnu/bits/wchar.h :
+  /usr/include/x86_64-linux-gnu/bits/stdint-uintn.h ../py/misc.h :
+  /usr/lib/gcc/x86_64-linux-gnu/7/include/stdbool.h ../py/qstr.h :
+  build/genhdr/qstrdefs.generated.h ../py/mpprint.h ../py/runtime0.h :
+  ../py/runtime.h ../py/mpstate.h ../py/mpthread.h ../py/nlr.h :
+  /usr/lib/gcc/x86_64-linux-gnu/7/include-fixed/limits.h :
+  /usr/lib/gcc/x86_64-linux-gnu/7/include-fixed/syslimits.h :
+  /usr/include/limits.h /usr/include/x86_64-linux-gnu/bits/posix1_lim.h :
+  /usr/include/x86_64-linux-gnu/bits/local_lim.h :
+  /usr/include/linux/limits.h :
+  /usr/include/x86_64-linux-gnu/bits/posix2_lim.h ../py/objlist.h :
+  ../py/objexcept.h ../py/pystack.h :
Binary files MicorpythonOriginal1.12/micropython/mpy-cross/build/py/opmethods.o and micropython1.12_withUlab/micropython/mpy-cross/build/py/opmethods.o differ
diff -crNb MicorpythonOriginal1.12/micropython/mpy-cross/build/py/opmethods.P micropython1.12_withUlab/micropython/mpy-cross/build/py/opmethods.P
*** MicorpythonOriginal1.12/micropython/mpy-cross/build/py/opmethods.P	1970-01-01 02:00:00.000000000 +0200
--- micropython1.12_withUlab/micropython/mpy-cross/build/py/opmethods.P	2020-06-19 19:54:02.413490020 +0200
***************
*** 0 ****
--- 1,36 ----
+ build/py/opmethods.o: ../py/opmethods.c /usr/include/stdc-predef.h \
+  ../py/obj.h ../py/mpconfig.h mpconfigport.h /usr/include/alloca.h \
+  /usr/include/features.h /usr/include/x86_64-linux-gnu/sys/cdefs.h \
+  /usr/include/x86_64-linux-gnu/bits/wordsize.h \
+  /usr/include/x86_64-linux-gnu/bits/long-double.h \
+  /usr/include/x86_64-linux-gnu/gnu/stubs.h \
+  /usr/include/x86_64-linux-gnu/gnu/stubs-64.h \
+  /usr/lib/gcc/x86_64-linux-gnu/7/include/stddef.h \
+  /usr/lib/gcc/x86_64-linux-gnu/7/include/stdint.h /usr/include/stdint.h \
+  /usr/include/x86_64-linux-gnu/bits/libc-header-start.h \
+  /usr/include/x86_64-linux-gnu/bits/types.h \
+  /usr/include/x86_64-linux-gnu/bits/typesizes.h \
+  /usr/include/x86_64-linux-gnu/bits/wchar.h \
+  /usr/include/x86_64-linux-gnu/bits/stdint-intn.h \
+  /usr/include/x86_64-linux-gnu/bits/stdint-uintn.h ../py/misc.h \
+  /usr/lib/gcc/x86_64-linux-gnu/7/include/stdbool.h ../py/qstr.h \
+  build/genhdr/qstrdefs.generated.h ../py/mpprint.h ../py/runtime0.h \
+  ../py/builtin.h
+ ../py/opmethods.c /usr/include/stdc-predef.h :
+  ../py/obj.h ../py/mpconfig.h mpconfigport.h /usr/include/alloca.h :
+  /usr/include/features.h /usr/include/x86_64-linux-gnu/sys/cdefs.h :
+  /usr/include/x86_64-linux-gnu/bits/wordsize.h :
+  /usr/include/x86_64-linux-gnu/bits/long-double.h :
+  /usr/include/x86_64-linux-gnu/gnu/stubs.h :
+  /usr/include/x86_64-linux-gnu/gnu/stubs-64.h :
+  /usr/lib/gcc/x86_64-linux-gnu/7/include/stddef.h :
+  /usr/lib/gcc/x86_64-linux-gnu/7/include/stdint.h /usr/include/stdint.h :
+  /usr/include/x86_64-linux-gnu/bits/libc-header-start.h :
+  /usr/include/x86_64-linux-gnu/bits/types.h :
+  /usr/include/x86_64-linux-gnu/bits/typesizes.h :
+  /usr/include/x86_64-linux-gnu/bits/wchar.h :
+  /usr/include/x86_64-linux-gnu/bits/stdint-intn.h :
+  /usr/include/x86_64-linux-gnu/bits/stdint-uintn.h ../py/misc.h :
+  /usr/lib/gcc/x86_64-linux-gnu/7/include/stdbool.h ../py/qstr.h :
+  build/genhdr/qstrdefs.generated.h ../py/mpprint.h ../py/runtime0.h :
+  ../py/builtin.h :
Binary files MicorpythonOriginal1.12/micropython/mpy-cross/build/py/pairheap.o and micropython1.12_withUlab/micropython/mpy-cross/build/py/pairheap.o differ
diff -crNb MicorpythonOriginal1.12/micropython/mpy-cross/build/py/pairheap.P micropython1.12_withUlab/micropython/mpy-cross/build/py/pairheap.P
*** MicorpythonOriginal1.12/micropython/mpy-cross/build/py/pairheap.P	1970-01-01 02:00:00.000000000 +0200
--- micropython1.12_withUlab/micropython/mpy-cross/build/py/pairheap.P	2020-06-19 20:01:44.595671230 +0200
***************
*** 0 ****
--- 1,36 ----
+ build/py/pairheap.o: ../py/pairheap.c /usr/include/stdc-predef.h \
+  ../py/pairheap.h /usr/include/assert.h /usr/include/features.h \
+  /usr/include/x86_64-linux-gnu/sys/cdefs.h \
+  /usr/include/x86_64-linux-gnu/bits/wordsize.h \
+  /usr/include/x86_64-linux-gnu/bits/long-double.h \
+  /usr/include/x86_64-linux-gnu/gnu/stubs.h \
+  /usr/include/x86_64-linux-gnu/gnu/stubs-64.h ../py/obj.h \
+  ../py/mpconfig.h mpconfigport.h /usr/include/alloca.h \
+  /usr/lib/gcc/x86_64-linux-gnu/7/include/stddef.h \
+  /usr/lib/gcc/x86_64-linux-gnu/7/include/stdint.h /usr/include/stdint.h \
+  /usr/include/x86_64-linux-gnu/bits/libc-header-start.h \
+  /usr/include/x86_64-linux-gnu/bits/types.h \
+  /usr/include/x86_64-linux-gnu/bits/typesizes.h \
+  /usr/include/x86_64-linux-gnu/bits/wchar.h \
+  /usr/include/x86_64-linux-gnu/bits/stdint-intn.h \
+  /usr/include/x86_64-linux-gnu/bits/stdint-uintn.h ../py/misc.h \
+  /usr/lib/gcc/x86_64-linux-gnu/7/include/stdbool.h ../py/qstr.h \
+  build/genhdr/qstrdefs.generated.h ../py/mpprint.h ../py/runtime0.h
+ ../py/pairheap.c /usr/include/stdc-predef.h :
+  ../py/pairheap.h /usr/include/assert.h /usr/include/features.h :
+  /usr/include/x86_64-linux-gnu/sys/cdefs.h :
+  /usr/include/x86_64-linux-gnu/bits/wordsize.h :
+  /usr/include/x86_64-linux-gnu/bits/long-double.h :
+  /usr/include/x86_64-linux-gnu/gnu/stubs.h :
+  /usr/include/x86_64-linux-gnu/gnu/stubs-64.h ../py/obj.h :
+  ../py/mpconfig.h mpconfigport.h /usr/include/alloca.h :
+  /usr/lib/gcc/x86_64-linux-gnu/7/include/stddef.h :
+  /usr/lib/gcc/x86_64-linux-gnu/7/include/stdint.h /usr/include/stdint.h :
+  /usr/include/x86_64-linux-gnu/bits/libc-header-start.h :
+  /usr/include/x86_64-linux-gnu/bits/types.h :
+  /usr/include/x86_64-linux-gnu/bits/typesizes.h :
+  /usr/include/x86_64-linux-gnu/bits/wchar.h :
+  /usr/include/x86_64-linux-gnu/bits/stdint-intn.h :
+  /usr/include/x86_64-linux-gnu/bits/stdint-uintn.h ../py/misc.h :
+  /usr/lib/gcc/x86_64-linux-gnu/7/include/stdbool.h ../py/qstr.h :
+  build/genhdr/qstrdefs.generated.h ../py/mpprint.h ../py/runtime0.h :
Binary files MicorpythonOriginal1.12/micropython/mpy-cross/build/py/parsenumbase.o and micropython1.12_withUlab/micropython/mpy-cross/build/py/parsenumbase.o differ
diff -crNb MicorpythonOriginal1.12/micropython/mpy-cross/build/py/parsenumbase.P micropython1.12_withUlab/micropython/mpy-cross/build/py/parsenumbase.P
*** MicorpythonOriginal1.12/micropython/mpy-cross/build/py/parsenumbase.P	1970-01-01 02:00:00.000000000 +0200
--- micropython1.12_withUlab/micropython/mpy-cross/build/py/parsenumbase.P	2020-06-14 15:06:52.839491747 +0200
***************
*** 0 ****
--- 1,32 ----
+ build/py/parsenumbase.o: ../py/parsenumbase.c /usr/include/stdc-predef.h \
+  ../py/mpconfig.h mpconfigport.h /usr/include/alloca.h \
+  /usr/include/features.h /usr/include/x86_64-linux-gnu/sys/cdefs.h \
+  /usr/include/x86_64-linux-gnu/bits/wordsize.h \
+  /usr/include/x86_64-linux-gnu/bits/long-double.h \
+  /usr/include/x86_64-linux-gnu/gnu/stubs.h \
+  /usr/include/x86_64-linux-gnu/gnu/stubs-64.h \
+  /usr/lib/gcc/x86_64-linux-gnu/7/include/stddef.h \
+  /usr/lib/gcc/x86_64-linux-gnu/7/include/stdint.h /usr/include/stdint.h \
+  /usr/include/x86_64-linux-gnu/bits/libc-header-start.h \
+  /usr/include/x86_64-linux-gnu/bits/types.h \
+  /usr/include/x86_64-linux-gnu/bits/typesizes.h \
+  /usr/include/x86_64-linux-gnu/bits/wchar.h \
+  /usr/include/x86_64-linux-gnu/bits/stdint-intn.h \
+  /usr/include/x86_64-linux-gnu/bits/stdint-uintn.h ../py/misc.h \
+  /usr/lib/gcc/x86_64-linux-gnu/7/include/stdbool.h ../py/parsenumbase.h
+ ../py/parsenumbase.c /usr/include/stdc-predef.h :
+  ../py/mpconfig.h mpconfigport.h /usr/include/alloca.h :
+  /usr/include/features.h /usr/include/x86_64-linux-gnu/sys/cdefs.h :
+  /usr/include/x86_64-linux-gnu/bits/wordsize.h :
+  /usr/include/x86_64-linux-gnu/bits/long-double.h :
+  /usr/include/x86_64-linux-gnu/gnu/stubs.h :
+  /usr/include/x86_64-linux-gnu/gnu/stubs-64.h :
+  /usr/lib/gcc/x86_64-linux-gnu/7/include/stddef.h :
+  /usr/lib/gcc/x86_64-linux-gnu/7/include/stdint.h /usr/include/stdint.h :
+  /usr/include/x86_64-linux-gnu/bits/libc-header-start.h :
+  /usr/include/x86_64-linux-gnu/bits/types.h :
+  /usr/include/x86_64-linux-gnu/bits/typesizes.h :
+  /usr/include/x86_64-linux-gnu/bits/wchar.h :
+  /usr/include/x86_64-linux-gnu/bits/stdint-intn.h :
+  /usr/include/x86_64-linux-gnu/bits/stdint-uintn.h ../py/misc.h :
+  /usr/lib/gcc/x86_64-linux-gnu/7/include/stdbool.h ../py/parsenumbase.h :
Binary files MicorpythonOriginal1.12/micropython/mpy-cross/build/py/parsenum.o and micropython1.12_withUlab/micropython/mpy-cross/build/py/parsenum.o differ
diff -crNb MicorpythonOriginal1.12/micropython/mpy-cross/build/py/parsenum.P micropython1.12_withUlab/micropython/mpy-cross/build/py/parsenum.P
*** MicorpythonOriginal1.12/micropython/mpy-cross/build/py/parsenum.P	1970-01-01 02:00:00.000000000 +0200
--- micropython1.12_withUlab/micropython/mpy-cross/build/py/parsenum.P	2020-06-19 18:37:36.147577001 +0200
***************
*** 0 ****
--- 1,120 ----
+ build/py/parsenum.o: ../py/parsenum.c /usr/include/stdc-predef.h \
+  /usr/lib/gcc/x86_64-linux-gnu/7/include/stdbool.h /usr/include/stdlib.h \
+  /usr/include/x86_64-linux-gnu/bits/libc-header-start.h \
+  /usr/include/features.h /usr/include/x86_64-linux-gnu/sys/cdefs.h \
+  /usr/include/x86_64-linux-gnu/bits/wordsize.h \
+  /usr/include/x86_64-linux-gnu/bits/long-double.h \
+  /usr/include/x86_64-linux-gnu/gnu/stubs.h \
+  /usr/include/x86_64-linux-gnu/gnu/stubs-64.h \
+  /usr/lib/gcc/x86_64-linux-gnu/7/include/stddef.h \
+  /usr/include/x86_64-linux-gnu/bits/waitflags.h \
+  /usr/include/x86_64-linux-gnu/bits/waitstatus.h \
+  /usr/include/x86_64-linux-gnu/bits/floatn.h \
+  /usr/include/x86_64-linux-gnu/bits/floatn-common.h \
+  /usr/include/x86_64-linux-gnu/sys/types.h \
+  /usr/include/x86_64-linux-gnu/bits/types.h \
+  /usr/include/x86_64-linux-gnu/bits/typesizes.h \
+  /usr/include/x86_64-linux-gnu/bits/types/clock_t.h \
+  /usr/include/x86_64-linux-gnu/bits/types/clockid_t.h \
+  /usr/include/x86_64-linux-gnu/bits/types/time_t.h \
+  /usr/include/x86_64-linux-gnu/bits/types/timer_t.h \
+  /usr/include/x86_64-linux-gnu/bits/stdint-intn.h /usr/include/endian.h \
+  /usr/include/x86_64-linux-gnu/bits/endian.h \
+  /usr/include/x86_64-linux-gnu/bits/byteswap.h \
+  /usr/include/x86_64-linux-gnu/bits/byteswap-16.h \
+  /usr/include/x86_64-linux-gnu/bits/uintn-identity.h \
+  /usr/include/x86_64-linux-gnu/sys/select.h \
+  /usr/include/x86_64-linux-gnu/bits/select.h \
+  /usr/include/x86_64-linux-gnu/bits/types/sigset_t.h \
+  /usr/include/x86_64-linux-gnu/bits/types/__sigset_t.h \
+  /usr/include/x86_64-linux-gnu/bits/types/struct_timeval.h \
+  /usr/include/x86_64-linux-gnu/bits/types/struct_timespec.h \
+  /usr/include/x86_64-linux-gnu/bits/select2.h \
+  /usr/include/x86_64-linux-gnu/sys/sysmacros.h \
+  /usr/include/x86_64-linux-gnu/bits/sysmacros.h \
+  /usr/include/x86_64-linux-gnu/bits/pthreadtypes.h \
+  /usr/include/x86_64-linux-gnu/bits/thread-shared-types.h \
+  /usr/include/x86_64-linux-gnu/bits/pthreadtypes-arch.h \
+  /usr/include/alloca.h /usr/include/x86_64-linux-gnu/bits/stdlib-float.h \
+  /usr/include/x86_64-linux-gnu/bits/stdlib.h ../py/runtime.h \
+  ../py/mpstate.h /usr/lib/gcc/x86_64-linux-gnu/7/include/stdint.h \
+  /usr/include/stdint.h /usr/include/x86_64-linux-gnu/bits/wchar.h \
+  /usr/include/x86_64-linux-gnu/bits/stdint-uintn.h ../py/mpconfig.h \
+  mpconfigport.h ../py/mpthread.h ../py/misc.h ../py/nlr.h \
+  /usr/lib/gcc/x86_64-linux-gnu/7/include-fixed/limits.h \
+  /usr/lib/gcc/x86_64-linux-gnu/7/include-fixed/syslimits.h \
+  /usr/include/limits.h /usr/include/x86_64-linux-gnu/bits/posix1_lim.h \
+  /usr/include/x86_64-linux-gnu/bits/local_lim.h \
+  /usr/include/linux/limits.h \
+  /usr/include/x86_64-linux-gnu/bits/posix2_lim.h /usr/include/assert.h \
+  ../py/obj.h ../py/qstr.h build/genhdr/qstrdefs.generated.h \
+  ../py/mpprint.h ../py/runtime0.h ../py/objlist.h ../py/objexcept.h \
+  ../py/objtuple.h ../py/pystack.h ../py/parsenumbase.h ../py/parsenum.h \
+  ../py/lexer.h ../py/reader.h ../py/smallint.h /usr/include/math.h \
+  /usr/include/x86_64-linux-gnu/bits/math-vector.h \
+  /usr/include/x86_64-linux-gnu/bits/libm-simd-decl-stubs.h \
+  /usr/include/x86_64-linux-gnu/bits/flt-eval-method.h \
+  /usr/include/x86_64-linux-gnu/bits/fp-logb.h \
+  /usr/include/x86_64-linux-gnu/bits/fp-fast.h \
+  /usr/include/x86_64-linux-gnu/bits/mathcalls-helper-functions.h \
+  /usr/include/x86_64-linux-gnu/bits/mathcalls.h
+ ../py/parsenum.c /usr/include/stdc-predef.h :
+  /usr/lib/gcc/x86_64-linux-gnu/7/include/stdbool.h /usr/include/stdlib.h :
+  /usr/include/x86_64-linux-gnu/bits/libc-header-start.h :
+  /usr/include/features.h /usr/include/x86_64-linux-gnu/sys/cdefs.h :
+  /usr/include/x86_64-linux-gnu/bits/wordsize.h :
+  /usr/include/x86_64-linux-gnu/bits/long-double.h :
+  /usr/include/x86_64-linux-gnu/gnu/stubs.h :
+  /usr/include/x86_64-linux-gnu/gnu/stubs-64.h :
+  /usr/lib/gcc/x86_64-linux-gnu/7/include/stddef.h :
+  /usr/include/x86_64-linux-gnu/bits/waitflags.h :
+  /usr/include/x86_64-linux-gnu/bits/waitstatus.h :
+  /usr/include/x86_64-linux-gnu/bits/floatn.h :
+  /usr/include/x86_64-linux-gnu/bits/floatn-common.h :
+  /usr/include/x86_64-linux-gnu/sys/types.h :
+  /usr/include/x86_64-linux-gnu/bits/types.h :
+  /usr/include/x86_64-linux-gnu/bits/typesizes.h :
+  /usr/include/x86_64-linux-gnu/bits/types/clock_t.h :
+  /usr/include/x86_64-linux-gnu/bits/types/clockid_t.h :
+  /usr/include/x86_64-linux-gnu/bits/types/time_t.h :
+  /usr/include/x86_64-linux-gnu/bits/types/timer_t.h :
+  /usr/include/x86_64-linux-gnu/bits/stdint-intn.h /usr/include/endian.h :
+  /usr/include/x86_64-linux-gnu/bits/endian.h :
+  /usr/include/x86_64-linux-gnu/bits/byteswap.h :
+  /usr/include/x86_64-linux-gnu/bits/byteswap-16.h :
+  /usr/include/x86_64-linux-gnu/bits/uintn-identity.h :
+  /usr/include/x86_64-linux-gnu/sys/select.h :
+  /usr/include/x86_64-linux-gnu/bits/select.h :
+  /usr/include/x86_64-linux-gnu/bits/types/sigset_t.h :
+  /usr/include/x86_64-linux-gnu/bits/types/__sigset_t.h :
+  /usr/include/x86_64-linux-gnu/bits/types/struct_timeval.h :
+  /usr/include/x86_64-linux-gnu/bits/types/struct_timespec.h :
+  /usr/include/x86_64-linux-gnu/bits/select2.h :
+  /usr/include/x86_64-linux-gnu/sys/sysmacros.h :
+  /usr/include/x86_64-linux-gnu/bits/sysmacros.h :
+  /usr/include/x86_64-linux-gnu/bits/pthreadtypes.h :
+  /usr/include/x86_64-linux-gnu/bits/thread-shared-types.h :
+  /usr/include/x86_64-linux-gnu/bits/pthreadtypes-arch.h :
+  /usr/include/alloca.h /usr/include/x86_64-linux-gnu/bits/stdlib-float.h :
+  /usr/include/x86_64-linux-gnu/bits/stdlib.h ../py/runtime.h :
+  ../py/mpstate.h /usr/lib/gcc/x86_64-linux-gnu/7/include/stdint.h :
+  /usr/include/stdint.h /usr/include/x86_64-linux-gnu/bits/wchar.h :
+  /usr/include/x86_64-linux-gnu/bits/stdint-uintn.h ../py/mpconfig.h :
+  mpconfigport.h ../py/mpthread.h ../py/misc.h ../py/nlr.h :
+  /usr/lib/gcc/x86_64-linux-gnu/7/include-fixed/limits.h :
+  /usr/lib/gcc/x86_64-linux-gnu/7/include-fixed/syslimits.h :
+  /usr/include/limits.h /usr/include/x86_64-linux-gnu/bits/posix1_lim.h :
+  /usr/include/x86_64-linux-gnu/bits/local_lim.h :
+  /usr/include/linux/limits.h :
+  /usr/include/x86_64-linux-gnu/bits/posix2_lim.h /usr/include/assert.h :
+  ../py/obj.h ../py/qstr.h build/genhdr/qstrdefs.generated.h :
+  ../py/mpprint.h ../py/runtime0.h ../py/objlist.h ../py/objexcept.h :
+  ../py/objtuple.h ../py/pystack.h ../py/parsenumbase.h ../py/parsenum.h :
+  ../py/lexer.h ../py/reader.h ../py/smallint.h /usr/include/math.h :
+  /usr/include/x86_64-linux-gnu/bits/math-vector.h :
+  /usr/include/x86_64-linux-gnu/bits/libm-simd-decl-stubs.h :
+  /usr/include/x86_64-linux-gnu/bits/flt-eval-method.h :
+  /usr/include/x86_64-linux-gnu/bits/fp-logb.h :
+  /usr/include/x86_64-linux-gnu/bits/fp-fast.h :
+  /usr/include/x86_64-linux-gnu/bits/mathcalls-helper-functions.h :
+  /usr/include/x86_64-linux-gnu/bits/mathcalls.h :
Binary files MicorpythonOriginal1.12/micropython/mpy-cross/build/py/parse.o and micropython1.12_withUlab/micropython/mpy-cross/build/py/parse.o differ
diff -crNb MicorpythonOriginal1.12/micropython/mpy-cross/build/py/parse.P micropython1.12_withUlab/micropython/mpy-cross/build/py/parse.P
*** MicorpythonOriginal1.12/micropython/mpy-cross/build/py/parse.P	1970-01-01 02:00:00.000000000 +0200
--- micropython1.12_withUlab/micropython/mpy-cross/build/py/parse.P	2020-06-19 19:54:02.013492461 +0200
***************
*** 0 ****
--- 1,96 ----
+ build/py/parse.o: ../py/parse.c /usr/include/stdc-predef.h \
+  /usr/lib/gcc/x86_64-linux-gnu/7/include/stdbool.h \
+  /usr/lib/gcc/x86_64-linux-gnu/7/include/stdint.h /usr/include/stdint.h \
+  /usr/include/x86_64-linux-gnu/bits/libc-header-start.h \
+  /usr/include/features.h /usr/include/x86_64-linux-gnu/sys/cdefs.h \
+  /usr/include/x86_64-linux-gnu/bits/wordsize.h \
+  /usr/include/x86_64-linux-gnu/bits/long-double.h \
+  /usr/include/x86_64-linux-gnu/gnu/stubs.h \
+  /usr/include/x86_64-linux-gnu/gnu/stubs-64.h \
+  /usr/include/x86_64-linux-gnu/bits/types.h \
+  /usr/include/x86_64-linux-gnu/bits/typesizes.h \
+  /usr/include/x86_64-linux-gnu/bits/wchar.h \
+  /usr/include/x86_64-linux-gnu/bits/stdint-intn.h \
+  /usr/include/x86_64-linux-gnu/bits/stdint-uintn.h /usr/include/stdio.h \
+  /usr/lib/gcc/x86_64-linux-gnu/7/include/stddef.h \
+  /usr/include/x86_64-linux-gnu/bits/types/__FILE.h \
+  /usr/include/x86_64-linux-gnu/bits/types/FILE.h \
+  /usr/include/x86_64-linux-gnu/bits/libio.h \
+  /usr/include/x86_64-linux-gnu/bits/_G_config.h \
+  /usr/include/x86_64-linux-gnu/bits/types/__mbstate_t.h \
+  /usr/lib/gcc/x86_64-linux-gnu/7/include/stdarg.h \
+  /usr/include/x86_64-linux-gnu/bits/stdio_lim.h \
+  /usr/include/x86_64-linux-gnu/bits/sys_errlist.h \
+  /usr/include/x86_64-linux-gnu/bits/stdio2.h /usr/include/unistd.h \
+  /usr/include/x86_64-linux-gnu/bits/posix_opt.h \
+  /usr/include/x86_64-linux-gnu/bits/environments.h \
+  /usr/include/x86_64-linux-gnu/bits/confname.h \
+  /usr/include/x86_64-linux-gnu/bits/getopt_posix.h \
+  /usr/include/x86_64-linux-gnu/bits/getopt_core.h \
+  /usr/include/x86_64-linux-gnu/bits/unistd.h /usr/include/assert.h \
+  /usr/include/string.h \
+  /usr/include/x86_64-linux-gnu/bits/types/locale_t.h \
+  /usr/include/x86_64-linux-gnu/bits/types/__locale_t.h \
+  /usr/include/strings.h \
+  /usr/include/x86_64-linux-gnu/bits/strings_fortified.h \
+  /usr/include/x86_64-linux-gnu/bits/string_fortified.h ../py/lexer.h \
+  ../py/mpconfig.h mpconfigport.h /usr/include/alloca.h ../py/qstr.h \
+  ../py/misc.h build/genhdr/qstrdefs.generated.h ../py/reader.h \
+  ../py/obj.h ../py/mpprint.h ../py/runtime0.h ../py/parse.h \
+  ../py/parsenum.h ../py/runtime.h ../py/mpstate.h ../py/mpthread.h \
+  ../py/nlr.h /usr/lib/gcc/x86_64-linux-gnu/7/include-fixed/limits.h \
+  /usr/lib/gcc/x86_64-linux-gnu/7/include-fixed/syslimits.h \
+  /usr/include/limits.h /usr/include/x86_64-linux-gnu/bits/posix1_lim.h \
+  /usr/include/x86_64-linux-gnu/bits/local_lim.h \
+  /usr/include/linux/limits.h \
+  /usr/include/x86_64-linux-gnu/bits/posix2_lim.h ../py/objlist.h \
+  ../py/objexcept.h ../py/objtuple.h ../py/pystack.h ../py/objint.h \
+  ../py/mpz.h ../py/objstr.h ../py/builtin.h ../py/grammar.h
+ ../py/parse.c /usr/include/stdc-predef.h :
+  /usr/lib/gcc/x86_64-linux-gnu/7/include/stdbool.h :
+  /usr/lib/gcc/x86_64-linux-gnu/7/include/stdint.h /usr/include/stdint.h :
+  /usr/include/x86_64-linux-gnu/bits/libc-header-start.h :
+  /usr/include/features.h /usr/include/x86_64-linux-gnu/sys/cdefs.h :
+  /usr/include/x86_64-linux-gnu/bits/wordsize.h :
+  /usr/include/x86_64-linux-gnu/bits/long-double.h :
+  /usr/include/x86_64-linux-gnu/gnu/stubs.h :
+  /usr/include/x86_64-linux-gnu/gnu/stubs-64.h :
+  /usr/include/x86_64-linux-gnu/bits/types.h :
+  /usr/include/x86_64-linux-gnu/bits/typesizes.h :
+  /usr/include/x86_64-linux-gnu/bits/wchar.h :
+  /usr/include/x86_64-linux-gnu/bits/stdint-intn.h :
+  /usr/include/x86_64-linux-gnu/bits/stdint-uintn.h /usr/include/stdio.h :
+  /usr/lib/gcc/x86_64-linux-gnu/7/include/stddef.h :
+  /usr/include/x86_64-linux-gnu/bits/types/__FILE.h :
+  /usr/include/x86_64-linux-gnu/bits/types/FILE.h :
+  /usr/include/x86_64-linux-gnu/bits/libio.h :
+  /usr/include/x86_64-linux-gnu/bits/_G_config.h :
+  /usr/include/x86_64-linux-gnu/bits/types/__mbstate_t.h :
+  /usr/lib/gcc/x86_64-linux-gnu/7/include/stdarg.h :
+  /usr/include/x86_64-linux-gnu/bits/stdio_lim.h :
+  /usr/include/x86_64-linux-gnu/bits/sys_errlist.h :
+  /usr/include/x86_64-linux-gnu/bits/stdio2.h /usr/include/unistd.h :
+  /usr/include/x86_64-linux-gnu/bits/posix_opt.h :
+  /usr/include/x86_64-linux-gnu/bits/environments.h :
+  /usr/include/x86_64-linux-gnu/bits/confname.h :
+  /usr/include/x86_64-linux-gnu/bits/getopt_posix.h :
+  /usr/include/x86_64-linux-gnu/bits/getopt_core.h :
+  /usr/include/x86_64-linux-gnu/bits/unistd.h /usr/include/assert.h :
+  /usr/include/string.h :
+  /usr/include/x86_64-linux-gnu/bits/types/locale_t.h :
+  /usr/include/x86_64-linux-gnu/bits/types/__locale_t.h :
+  /usr/include/strings.h :
+  /usr/include/x86_64-linux-gnu/bits/strings_fortified.h :
+  /usr/include/x86_64-linux-gnu/bits/string_fortified.h ../py/lexer.h :
+  ../py/mpconfig.h mpconfigport.h /usr/include/alloca.h ../py/qstr.h :
+  ../py/misc.h build/genhdr/qstrdefs.generated.h ../py/reader.h :
+  ../py/obj.h ../py/mpprint.h ../py/runtime0.h ../py/parse.h :
+  ../py/parsenum.h ../py/runtime.h ../py/mpstate.h ../py/mpthread.h :
+  ../py/nlr.h /usr/lib/gcc/x86_64-linux-gnu/7/include-fixed/limits.h :
+  /usr/lib/gcc/x86_64-linux-gnu/7/include-fixed/syslimits.h :
+  /usr/include/limits.h /usr/include/x86_64-linux-gnu/bits/posix1_lim.h :
+  /usr/include/x86_64-linux-gnu/bits/local_lim.h :
+  /usr/include/linux/limits.h :
+  /usr/include/x86_64-linux-gnu/bits/posix2_lim.h ../py/objlist.h :
+  ../py/objexcept.h ../py/objtuple.h ../py/pystack.h ../py/objint.h :
+  ../py/mpz.h ../py/objstr.h ../py/builtin.h ../py/grammar.h :
Binary files MicorpythonOriginal1.12/micropython/mpy-cross/build/py/persistentcode.o and micropython1.12_withUlab/micropython/mpy-cross/build/py/persistentcode.o differ
diff -crNb MicorpythonOriginal1.12/micropython/mpy-cross/build/py/persistentcode.P micropython1.12_withUlab/micropython/mpy-cross/build/py/persistentcode.P
*** MicorpythonOriginal1.12/micropython/mpy-cross/build/py/persistentcode.P	1970-01-01 02:00:00.000000000 +0200
--- micropython1.12_withUlab/micropython/mpy-cross/build/py/persistentcode.P	2020-06-19 18:37:36.255574685 +0200
***************
*** 0 ****
--- 1,120 ----
+ build/py/persistentcode.o: ../py/persistentcode.c \
+  /usr/include/stdc-predef.h \
+  /usr/lib/gcc/x86_64-linux-gnu/7/include/stdint.h /usr/include/stdint.h \
+  /usr/include/x86_64-linux-gnu/bits/libc-header-start.h \
+  /usr/include/features.h /usr/include/x86_64-linux-gnu/sys/cdefs.h \
+  /usr/include/x86_64-linux-gnu/bits/wordsize.h \
+  /usr/include/x86_64-linux-gnu/bits/long-double.h \
+  /usr/include/x86_64-linux-gnu/gnu/stubs.h \
+  /usr/include/x86_64-linux-gnu/gnu/stubs-64.h \
+  /usr/include/x86_64-linux-gnu/bits/types.h \
+  /usr/include/x86_64-linux-gnu/bits/typesizes.h \
+  /usr/include/x86_64-linux-gnu/bits/wchar.h \
+  /usr/include/x86_64-linux-gnu/bits/stdint-intn.h \
+  /usr/include/x86_64-linux-gnu/bits/stdint-uintn.h /usr/include/stdio.h \
+  /usr/lib/gcc/x86_64-linux-gnu/7/include/stddef.h \
+  /usr/include/x86_64-linux-gnu/bits/types/__FILE.h \
+  /usr/include/x86_64-linux-gnu/bits/types/FILE.h \
+  /usr/include/x86_64-linux-gnu/bits/libio.h \
+  /usr/include/x86_64-linux-gnu/bits/_G_config.h \
+  /usr/include/x86_64-linux-gnu/bits/types/__mbstate_t.h \
+  /usr/lib/gcc/x86_64-linux-gnu/7/include/stdarg.h \
+  /usr/include/x86_64-linux-gnu/bits/stdio_lim.h \
+  /usr/include/x86_64-linux-gnu/bits/sys_errlist.h \
+  /usr/include/x86_64-linux-gnu/bits/stdio2.h /usr/include/string.h \
+  /usr/include/x86_64-linux-gnu/bits/types/locale_t.h \
+  /usr/include/x86_64-linux-gnu/bits/types/__locale_t.h \
+  /usr/include/strings.h \
+  /usr/include/x86_64-linux-gnu/bits/strings_fortified.h \
+  /usr/include/x86_64-linux-gnu/bits/string_fortified.h \
+  /usr/include/assert.h ../py/reader.h ../py/obj.h ../py/mpconfig.h \
+  mpconfigport.h /usr/include/alloca.h ../py/misc.h \
+  /usr/lib/gcc/x86_64-linux-gnu/7/include/stdbool.h ../py/qstr.h \
+  build/genhdr/qstrdefs.generated.h ../py/mpprint.h ../py/runtime0.h \
+  ../py/nativeglue.h ../py/persistentcode.h ../py/emitglue.h ../py/bc.h \
+  ../py/runtime.h ../py/mpstate.h ../py/mpthread.h ../py/nlr.h \
+  /usr/lib/gcc/x86_64-linux-gnu/7/include-fixed/limits.h \
+  /usr/lib/gcc/x86_64-linux-gnu/7/include-fixed/syslimits.h \
+  /usr/include/limits.h /usr/include/x86_64-linux-gnu/bits/posix1_lim.h \
+  /usr/include/x86_64-linux-gnu/bits/local_lim.h \
+  /usr/include/linux/limits.h \
+  /usr/include/x86_64-linux-gnu/bits/posix2_lim.h ../py/objlist.h \
+  ../py/objexcept.h ../py/objtuple.h ../py/pystack.h ../py/objfun.h \
+  ../py/stream.h ../py/mperrno.h /usr/include/errno.h \
+  /usr/include/x86_64-linux-gnu/bits/errno.h /usr/include/linux/errno.h \
+  /usr/include/x86_64-linux-gnu/asm/errno.h \
+  /usr/include/asm-generic/errno.h /usr/include/asm-generic/errno-base.h \
+  ../py/bc0.h ../py/objstr.h ../py/smallint.h /usr/include/unistd.h \
+  /usr/include/x86_64-linux-gnu/bits/posix_opt.h \
+  /usr/include/x86_64-linux-gnu/bits/environments.h \
+  /usr/include/x86_64-linux-gnu/bits/confname.h \
+  /usr/include/x86_64-linux-gnu/bits/getopt_posix.h \
+  /usr/include/x86_64-linux-gnu/bits/getopt_core.h \
+  /usr/include/x86_64-linux-gnu/bits/unistd.h \
+  /usr/include/x86_64-linux-gnu/sys/stat.h \
+  /usr/include/x86_64-linux-gnu/bits/types/struct_timespec.h \
+  /usr/include/x86_64-linux-gnu/bits/types/time_t.h \
+  /usr/include/x86_64-linux-gnu/bits/stat.h /usr/include/fcntl.h \
+  /usr/include/x86_64-linux-gnu/bits/fcntl.h \
+  /usr/include/x86_64-linux-gnu/bits/fcntl-linux.h \
+  /usr/include/x86_64-linux-gnu/bits/fcntl2.h
+ ../py/persistentcode.c :
+  /usr/include/stdc-predef.h :
+  /usr/lib/gcc/x86_64-linux-gnu/7/include/stdint.h /usr/include/stdint.h :
+  /usr/include/x86_64-linux-gnu/bits/libc-header-start.h :
+  /usr/include/features.h /usr/include/x86_64-linux-gnu/sys/cdefs.h :
+  /usr/include/x86_64-linux-gnu/bits/wordsize.h :
+  /usr/include/x86_64-linux-gnu/bits/long-double.h :
+  /usr/include/x86_64-linux-gnu/gnu/stubs.h :
+  /usr/include/x86_64-linux-gnu/gnu/stubs-64.h :
+  /usr/include/x86_64-linux-gnu/bits/types.h :
+  /usr/include/x86_64-linux-gnu/bits/typesizes.h :
+  /usr/include/x86_64-linux-gnu/bits/wchar.h :
+  /usr/include/x86_64-linux-gnu/bits/stdint-intn.h :
+  /usr/include/x86_64-linux-gnu/bits/stdint-uintn.h /usr/include/stdio.h :
+  /usr/lib/gcc/x86_64-linux-gnu/7/include/stddef.h :
+  /usr/include/x86_64-linux-gnu/bits/types/__FILE.h :
+  /usr/include/x86_64-linux-gnu/bits/types/FILE.h :
+  /usr/include/x86_64-linux-gnu/bits/libio.h :
+  /usr/include/x86_64-linux-gnu/bits/_G_config.h :
+  /usr/include/x86_64-linux-gnu/bits/types/__mbstate_t.h :
+  /usr/lib/gcc/x86_64-linux-gnu/7/include/stdarg.h :
+  /usr/include/x86_64-linux-gnu/bits/stdio_lim.h :
+  /usr/include/x86_64-linux-gnu/bits/sys_errlist.h :
+  /usr/include/x86_64-linux-gnu/bits/stdio2.h /usr/include/string.h :
+  /usr/include/x86_64-linux-gnu/bits/types/locale_t.h :
+  /usr/include/x86_64-linux-gnu/bits/types/__locale_t.h :
+  /usr/include/strings.h :
+  /usr/include/x86_64-linux-gnu/bits/strings_fortified.h :
+  /usr/include/x86_64-linux-gnu/bits/string_fortified.h :
+  /usr/include/assert.h ../py/reader.h ../py/obj.h ../py/mpconfig.h :
+  mpconfigport.h /usr/include/alloca.h ../py/misc.h :
+  /usr/lib/gcc/x86_64-linux-gnu/7/include/stdbool.h ../py/qstr.h :
+  build/genhdr/qstrdefs.generated.h ../py/mpprint.h ../py/runtime0.h :
+  ../py/nativeglue.h ../py/persistentcode.h ../py/emitglue.h ../py/bc.h :
+  ../py/runtime.h ../py/mpstate.h ../py/mpthread.h ../py/nlr.h :
+  /usr/lib/gcc/x86_64-linux-gnu/7/include-fixed/limits.h :
+  /usr/lib/gcc/x86_64-linux-gnu/7/include-fixed/syslimits.h :
+  /usr/include/limits.h /usr/include/x86_64-linux-gnu/bits/posix1_lim.h :
+  /usr/include/x86_64-linux-gnu/bits/local_lim.h :
+  /usr/include/linux/limits.h :
+  /usr/include/x86_64-linux-gnu/bits/posix2_lim.h ../py/objlist.h :
+  ../py/objexcept.h ../py/objtuple.h ../py/pystack.h ../py/objfun.h :
+  ../py/stream.h ../py/mperrno.h /usr/include/errno.h :
+  /usr/include/x86_64-linux-gnu/bits/errno.h /usr/include/linux/errno.h :
+  /usr/include/x86_64-linux-gnu/asm/errno.h :
+  /usr/include/asm-generic/errno.h /usr/include/asm-generic/errno-base.h :
+  ../py/bc0.h ../py/objstr.h ../py/smallint.h /usr/include/unistd.h :
+  /usr/include/x86_64-linux-gnu/bits/posix_opt.h :
+  /usr/include/x86_64-linux-gnu/bits/environments.h :
+  /usr/include/x86_64-linux-gnu/bits/confname.h :
+  /usr/include/x86_64-linux-gnu/bits/getopt_posix.h :
+  /usr/include/x86_64-linux-gnu/bits/getopt_core.h :
+  /usr/include/x86_64-linux-gnu/bits/unistd.h :
+  /usr/include/x86_64-linux-gnu/sys/stat.h :
+  /usr/include/x86_64-linux-gnu/bits/types/struct_timespec.h :
+  /usr/include/x86_64-linux-gnu/bits/types/time_t.h :
+  /usr/include/x86_64-linux-gnu/bits/stat.h /usr/include/fcntl.h :
+  /usr/include/x86_64-linux-gnu/bits/fcntl.h :
+  /usr/include/x86_64-linux-gnu/bits/fcntl-linux.h :
+  /usr/include/x86_64-linux-gnu/bits/fcntl2.h :
Binary files MicorpythonOriginal1.12/micropython/mpy-cross/build/py/profile.o and micropython1.12_withUlab/micropython/mpy-cross/build/py/profile.o differ
diff -crNb MicorpythonOriginal1.12/micropython/mpy-cross/build/py/profile.P micropython1.12_withUlab/micropython/mpy-cross/build/py/profile.P
*** MicorpythonOriginal1.12/micropython/mpy-cross/build/py/profile.P	1970-01-01 02:00:00.000000000 +0200
--- micropython1.12_withUlab/micropython/mpy-cross/build/py/profile.P	2020-06-19 18:37:36.607567136 +0200
***************
*** 0 ****
--- 1,54 ----
+ build/py/profile.o: ../py/profile.c /usr/include/stdc-predef.h \
+  ../py/profile.h ../py/emitglue.h ../py/obj.h ../py/mpconfig.h \
+  mpconfigport.h /usr/include/alloca.h /usr/include/features.h \
+  /usr/include/x86_64-linux-gnu/sys/cdefs.h \
+  /usr/include/x86_64-linux-gnu/bits/wordsize.h \
+  /usr/include/x86_64-linux-gnu/bits/long-double.h \
+  /usr/include/x86_64-linux-gnu/gnu/stubs.h \
+  /usr/include/x86_64-linux-gnu/gnu/stubs-64.h \
+  /usr/lib/gcc/x86_64-linux-gnu/7/include/stddef.h \
+  /usr/lib/gcc/x86_64-linux-gnu/7/include/stdint.h /usr/include/stdint.h \
+  /usr/include/x86_64-linux-gnu/bits/libc-header-start.h \
+  /usr/include/x86_64-linux-gnu/bits/types.h \
+  /usr/include/x86_64-linux-gnu/bits/typesizes.h \
+  /usr/include/x86_64-linux-gnu/bits/wchar.h \
+  /usr/include/x86_64-linux-gnu/bits/stdint-intn.h \
+  /usr/include/x86_64-linux-gnu/bits/stdint-uintn.h ../py/misc.h \
+  /usr/lib/gcc/x86_64-linux-gnu/7/include/stdbool.h ../py/qstr.h \
+  build/genhdr/qstrdefs.generated.h ../py/mpprint.h ../py/runtime0.h \
+  ../py/bc.h ../py/runtime.h ../py/mpstate.h ../py/mpthread.h ../py/nlr.h \
+  /usr/lib/gcc/x86_64-linux-gnu/7/include-fixed/limits.h \
+  /usr/lib/gcc/x86_64-linux-gnu/7/include-fixed/syslimits.h \
+  /usr/include/limits.h /usr/include/x86_64-linux-gnu/bits/posix1_lim.h \
+  /usr/include/x86_64-linux-gnu/bits/local_lim.h \
+  /usr/include/linux/limits.h \
+  /usr/include/x86_64-linux-gnu/bits/posix2_lim.h /usr/include/assert.h \
+  ../py/objlist.h ../py/objexcept.h ../py/objtuple.h ../py/pystack.h \
+  ../py/objfun.h ../py/bc0.h ../py/gc.h
+ ../py/profile.c /usr/include/stdc-predef.h :
+  ../py/profile.h ../py/emitglue.h ../py/obj.h ../py/mpconfig.h :
+  mpconfigport.h /usr/include/alloca.h /usr/include/features.h :
+  /usr/include/x86_64-linux-gnu/sys/cdefs.h :
+  /usr/include/x86_64-linux-gnu/bits/wordsize.h :
+  /usr/include/x86_64-linux-gnu/bits/long-double.h :
+  /usr/include/x86_64-linux-gnu/gnu/stubs.h :
+  /usr/include/x86_64-linux-gnu/gnu/stubs-64.h :
+  /usr/lib/gcc/x86_64-linux-gnu/7/include/stddef.h :
+  /usr/lib/gcc/x86_64-linux-gnu/7/include/stdint.h /usr/include/stdint.h :
+  /usr/include/x86_64-linux-gnu/bits/libc-header-start.h :
+  /usr/include/x86_64-linux-gnu/bits/types.h :
+  /usr/include/x86_64-linux-gnu/bits/typesizes.h :
+  /usr/include/x86_64-linux-gnu/bits/wchar.h :
+  /usr/include/x86_64-linux-gnu/bits/stdint-intn.h :
+  /usr/include/x86_64-linux-gnu/bits/stdint-uintn.h ../py/misc.h :
+  /usr/lib/gcc/x86_64-linux-gnu/7/include/stdbool.h ../py/qstr.h :
+  build/genhdr/qstrdefs.generated.h ../py/mpprint.h ../py/runtime0.h :
+  ../py/bc.h ../py/runtime.h ../py/mpstate.h ../py/mpthread.h ../py/nlr.h :
+  /usr/lib/gcc/x86_64-linux-gnu/7/include-fixed/limits.h :
+  /usr/lib/gcc/x86_64-linux-gnu/7/include-fixed/syslimits.h :
+  /usr/include/limits.h /usr/include/x86_64-linux-gnu/bits/posix1_lim.h :
+  /usr/include/x86_64-linux-gnu/bits/local_lim.h :
+  /usr/include/linux/limits.h :
+  /usr/include/x86_64-linux-gnu/bits/posix2_lim.h /usr/include/assert.h :
+  ../py/objlist.h ../py/objexcept.h ../py/objtuple.h ../py/pystack.h :
+  ../py/objfun.h ../py/bc0.h ../py/gc.h :
Binary files MicorpythonOriginal1.12/micropython/mpy-cross/build/py/pystack.o and micropython1.12_withUlab/micropython/mpy-cross/build/py/pystack.o differ
diff -crNb MicorpythonOriginal1.12/micropython/mpy-cross/build/py/pystack.P micropython1.12_withUlab/micropython/mpy-cross/build/py/pystack.P
*** MicorpythonOriginal1.12/micropython/mpy-cross/build/py/pystack.P	1970-01-01 02:00:00.000000000 +0200
--- micropython1.12_withUlab/micropython/mpy-cross/build/py/pystack.P	2020-06-19 18:37:32.995644976 +0200
***************
*** 0 ****
--- 1,70 ----
+ build/py/pystack.o: ../py/pystack.c /usr/include/stdc-predef.h \
+  /usr/include/stdio.h \
+  /usr/include/x86_64-linux-gnu/bits/libc-header-start.h \
+  /usr/include/features.h /usr/include/x86_64-linux-gnu/sys/cdefs.h \
+  /usr/include/x86_64-linux-gnu/bits/wordsize.h \
+  /usr/include/x86_64-linux-gnu/bits/long-double.h \
+  /usr/include/x86_64-linux-gnu/gnu/stubs.h \
+  /usr/include/x86_64-linux-gnu/gnu/stubs-64.h \
+  /usr/lib/gcc/x86_64-linux-gnu/7/include/stddef.h \
+  /usr/include/x86_64-linux-gnu/bits/types.h \
+  /usr/include/x86_64-linux-gnu/bits/typesizes.h \
+  /usr/include/x86_64-linux-gnu/bits/types/__FILE.h \
+  /usr/include/x86_64-linux-gnu/bits/types/FILE.h \
+  /usr/include/x86_64-linux-gnu/bits/libio.h \
+  /usr/include/x86_64-linux-gnu/bits/_G_config.h \
+  /usr/include/x86_64-linux-gnu/bits/types/__mbstate_t.h \
+  /usr/lib/gcc/x86_64-linux-gnu/7/include/stdarg.h \
+  /usr/include/x86_64-linux-gnu/bits/stdio_lim.h \
+  /usr/include/x86_64-linux-gnu/bits/sys_errlist.h \
+  /usr/include/x86_64-linux-gnu/bits/stdio2.h ../py/runtime.h \
+  ../py/mpstate.h /usr/lib/gcc/x86_64-linux-gnu/7/include/stdint.h \
+  /usr/include/stdint.h /usr/include/x86_64-linux-gnu/bits/wchar.h \
+  /usr/include/x86_64-linux-gnu/bits/stdint-intn.h \
+  /usr/include/x86_64-linux-gnu/bits/stdint-uintn.h ../py/mpconfig.h \
+  mpconfigport.h /usr/include/alloca.h ../py/mpthread.h ../py/misc.h \
+  /usr/lib/gcc/x86_64-linux-gnu/7/include/stdbool.h ../py/nlr.h \
+  /usr/lib/gcc/x86_64-linux-gnu/7/include-fixed/limits.h \
+  /usr/lib/gcc/x86_64-linux-gnu/7/include-fixed/syslimits.h \
+  /usr/include/limits.h /usr/include/x86_64-linux-gnu/bits/posix1_lim.h \
+  /usr/include/x86_64-linux-gnu/bits/local_lim.h \
+  /usr/include/linux/limits.h \
+  /usr/include/x86_64-linux-gnu/bits/posix2_lim.h /usr/include/assert.h \
+  ../py/obj.h ../py/qstr.h build/genhdr/qstrdefs.generated.h \
+  ../py/mpprint.h ../py/runtime0.h ../py/objlist.h ../py/objexcept.h \
+  ../py/objtuple.h ../py/pystack.h
+ ../py/pystack.c /usr/include/stdc-predef.h :
+  /usr/include/stdio.h :
+  /usr/include/x86_64-linux-gnu/bits/libc-header-start.h :
+  /usr/include/features.h /usr/include/x86_64-linux-gnu/sys/cdefs.h :
+  /usr/include/x86_64-linux-gnu/bits/wordsize.h :
+  /usr/include/x86_64-linux-gnu/bits/long-double.h :
+  /usr/include/x86_64-linux-gnu/gnu/stubs.h :
+  /usr/include/x86_64-linux-gnu/gnu/stubs-64.h :
+  /usr/lib/gcc/x86_64-linux-gnu/7/include/stddef.h :
+  /usr/include/x86_64-linux-gnu/bits/types.h :
+  /usr/include/x86_64-linux-gnu/bits/typesizes.h :
+  /usr/include/x86_64-linux-gnu/bits/types/__FILE.h :
+  /usr/include/x86_64-linux-gnu/bits/types/FILE.h :
+  /usr/include/x86_64-linux-gnu/bits/libio.h :
+  /usr/include/x86_64-linux-gnu/bits/_G_config.h :
+  /usr/include/x86_64-linux-gnu/bits/types/__mbstate_t.h :
+  /usr/lib/gcc/x86_64-linux-gnu/7/include/stdarg.h :
+  /usr/include/x86_64-linux-gnu/bits/stdio_lim.h :
+  /usr/include/x86_64-linux-gnu/bits/sys_errlist.h :
+  /usr/include/x86_64-linux-gnu/bits/stdio2.h ../py/runtime.h :
+  ../py/mpstate.h /usr/lib/gcc/x86_64-linux-gnu/7/include/stdint.h :
+  /usr/include/stdint.h /usr/include/x86_64-linux-gnu/bits/wchar.h :
+  /usr/include/x86_64-linux-gnu/bits/stdint-intn.h :
+  /usr/include/x86_64-linux-gnu/bits/stdint-uintn.h ../py/mpconfig.h :
+  mpconfigport.h /usr/include/alloca.h ../py/mpthread.h ../py/misc.h :
+  /usr/lib/gcc/x86_64-linux-gnu/7/include/stdbool.h ../py/nlr.h :
+  /usr/lib/gcc/x86_64-linux-gnu/7/include-fixed/limits.h :
+  /usr/lib/gcc/x86_64-linux-gnu/7/include-fixed/syslimits.h :
+  /usr/include/limits.h /usr/include/x86_64-linux-gnu/bits/posix1_lim.h :
+  /usr/include/x86_64-linux-gnu/bits/local_lim.h :
+  /usr/include/linux/limits.h :
+  /usr/include/x86_64-linux-gnu/bits/posix2_lim.h /usr/include/assert.h :
+  ../py/obj.h ../py/qstr.h build/genhdr/qstrdefs.generated.h :
+  ../py/mpprint.h ../py/runtime0.h ../py/objlist.h ../py/objexcept.h :
+  ../py/objtuple.h ../py/pystack.h :
Binary files MicorpythonOriginal1.12/micropython/mpy-cross/build/py/qstr.o and micropython1.12_withUlab/micropython/mpy-cross/build/py/qstr.o differ
diff -crNb MicorpythonOriginal1.12/micropython/mpy-cross/build/py/qstr.P micropython1.12_withUlab/micropython/mpy-cross/build/py/qstr.P
*** MicorpythonOriginal1.12/micropython/mpy-cross/build/py/qstr.P	1970-01-01 02:00:00.000000000 +0200
--- micropython1.12_withUlab/micropython/mpy-cross/build/py/qstr.P	2020-06-19 18:37:33.047643851 +0200
***************
*** 0 ****
--- 1,80 ----
+ build/py/qstr.o: ../py/qstr.c /usr/include/stdc-predef.h \
+  /usr/include/assert.h /usr/include/features.h \
+  /usr/include/x86_64-linux-gnu/sys/cdefs.h \
+  /usr/include/x86_64-linux-gnu/bits/wordsize.h \
+  /usr/include/x86_64-linux-gnu/bits/long-double.h \
+  /usr/include/x86_64-linux-gnu/gnu/stubs.h \
+  /usr/include/x86_64-linux-gnu/gnu/stubs-64.h /usr/include/string.h \
+  /usr/include/x86_64-linux-gnu/bits/libc-header-start.h \
+  /usr/lib/gcc/x86_64-linux-gnu/7/include/stddef.h \
+  /usr/include/x86_64-linux-gnu/bits/types/locale_t.h \
+  /usr/include/x86_64-linux-gnu/bits/types/__locale_t.h \
+  /usr/include/strings.h \
+  /usr/include/x86_64-linux-gnu/bits/strings_fortified.h \
+  /usr/include/x86_64-linux-gnu/bits/string_fortified.h \
+  /usr/include/stdio.h /usr/include/x86_64-linux-gnu/bits/types.h \
+  /usr/include/x86_64-linux-gnu/bits/typesizes.h \
+  /usr/include/x86_64-linux-gnu/bits/types/__FILE.h \
+  /usr/include/x86_64-linux-gnu/bits/types/FILE.h \
+  /usr/include/x86_64-linux-gnu/bits/libio.h \
+  /usr/include/x86_64-linux-gnu/bits/_G_config.h \
+  /usr/include/x86_64-linux-gnu/bits/types/__mbstate_t.h \
+  /usr/lib/gcc/x86_64-linux-gnu/7/include/stdarg.h \
+  /usr/include/x86_64-linux-gnu/bits/stdio_lim.h \
+  /usr/include/x86_64-linux-gnu/bits/sys_errlist.h \
+  /usr/include/x86_64-linux-gnu/bits/stdio2.h ../py/mpstate.h \
+  /usr/lib/gcc/x86_64-linux-gnu/7/include/stdint.h /usr/include/stdint.h \
+  /usr/include/x86_64-linux-gnu/bits/wchar.h \
+  /usr/include/x86_64-linux-gnu/bits/stdint-intn.h \
+  /usr/include/x86_64-linux-gnu/bits/stdint-uintn.h ../py/mpconfig.h \
+  mpconfigport.h /usr/include/alloca.h ../py/mpthread.h ../py/misc.h \
+  /usr/lib/gcc/x86_64-linux-gnu/7/include/stdbool.h ../py/nlr.h \
+  /usr/lib/gcc/x86_64-linux-gnu/7/include-fixed/limits.h \
+  /usr/lib/gcc/x86_64-linux-gnu/7/include-fixed/syslimits.h \
+  /usr/include/limits.h /usr/include/x86_64-linux-gnu/bits/posix1_lim.h \
+  /usr/include/x86_64-linux-gnu/bits/local_lim.h \
+  /usr/include/linux/limits.h \
+  /usr/include/x86_64-linux-gnu/bits/posix2_lim.h ../py/obj.h ../py/qstr.h \
+  build/genhdr/qstrdefs.generated.h ../py/mpprint.h ../py/runtime0.h \
+  ../py/objlist.h ../py/objexcept.h ../py/objtuple.h ../py/gc.h \
+  ../py/runtime.h ../py/pystack.h
+ ../py/qstr.c /usr/include/stdc-predef.h :
+  /usr/include/assert.h /usr/include/features.h :
+  /usr/include/x86_64-linux-gnu/sys/cdefs.h :
+  /usr/include/x86_64-linux-gnu/bits/wordsize.h :
+  /usr/include/x86_64-linux-gnu/bits/long-double.h :
+  /usr/include/x86_64-linux-gnu/gnu/stubs.h :
+  /usr/include/x86_64-linux-gnu/gnu/stubs-64.h /usr/include/string.h :
+  /usr/include/x86_64-linux-gnu/bits/libc-header-start.h :
+  /usr/lib/gcc/x86_64-linux-gnu/7/include/stddef.h :
+  /usr/include/x86_64-linux-gnu/bits/types/locale_t.h :
+  /usr/include/x86_64-linux-gnu/bits/types/__locale_t.h :
+  /usr/include/strings.h :
+  /usr/include/x86_64-linux-gnu/bits/strings_fortified.h :
+  /usr/include/x86_64-linux-gnu/bits/string_fortified.h :
+  /usr/include/stdio.h /usr/include/x86_64-linux-gnu/bits/types.h :
+  /usr/include/x86_64-linux-gnu/bits/typesizes.h :
+  /usr/include/x86_64-linux-gnu/bits/types/__FILE.h :
+  /usr/include/x86_64-linux-gnu/bits/types/FILE.h :
+  /usr/include/x86_64-linux-gnu/bits/libio.h :
+  /usr/include/x86_64-linux-gnu/bits/_G_config.h :
+  /usr/include/x86_64-linux-gnu/bits/types/__mbstate_t.h :
+  /usr/lib/gcc/x86_64-linux-gnu/7/include/stdarg.h :
+  /usr/include/x86_64-linux-gnu/bits/stdio_lim.h :
+  /usr/include/x86_64-linux-gnu/bits/sys_errlist.h :
+  /usr/include/x86_64-linux-gnu/bits/stdio2.h ../py/mpstate.h :
+  /usr/lib/gcc/x86_64-linux-gnu/7/include/stdint.h /usr/include/stdint.h :
+  /usr/include/x86_64-linux-gnu/bits/wchar.h :
+  /usr/include/x86_64-linux-gnu/bits/stdint-intn.h :
+  /usr/include/x86_64-linux-gnu/bits/stdint-uintn.h ../py/mpconfig.h :
+  mpconfigport.h /usr/include/alloca.h ../py/mpthread.h ../py/misc.h :
+  /usr/lib/gcc/x86_64-linux-gnu/7/include/stdbool.h ../py/nlr.h :
+  /usr/lib/gcc/x86_64-linux-gnu/7/include-fixed/limits.h :
+  /usr/lib/gcc/x86_64-linux-gnu/7/include-fixed/syslimits.h :
+  /usr/include/limits.h /usr/include/x86_64-linux-gnu/bits/posix1_lim.h :
+  /usr/include/x86_64-linux-gnu/bits/local_lim.h :
+  /usr/include/linux/limits.h :
+  /usr/include/x86_64-linux-gnu/bits/posix2_lim.h ../py/obj.h ../py/qstr.h :
+  build/genhdr/qstrdefs.generated.h ../py/mpprint.h ../py/runtime0.h :
+  ../py/objlist.h ../py/objexcept.h ../py/objtuple.h ../py/gc.h :
+  ../py/runtime.h ../py/pystack.h :
Binary files MicorpythonOriginal1.12/micropython/mpy-cross/build/py/reader.o and micropython1.12_withUlab/micropython/mpy-cross/build/py/reader.o differ
diff -crNb MicorpythonOriginal1.12/micropython/mpy-cross/build/py/reader.P micropython1.12_withUlab/micropython/mpy-cross/build/py/reader.P
*** MicorpythonOriginal1.12/micropython/mpy-cross/build/py/reader.P	1970-01-01 02:00:00.000000000 +0200
--- micropython1.12_withUlab/micropython/mpy-cross/build/py/reader.P	2020-06-19 18:37:33.235639784 +0200
***************
*** 0 ****
--- 1,104 ----
+ build/py/reader.o: ../py/reader.c /usr/include/stdc-predef.h \
+  /usr/include/stdio.h \
+  /usr/include/x86_64-linux-gnu/bits/libc-header-start.h \
+  /usr/include/features.h /usr/include/x86_64-linux-gnu/sys/cdefs.h \
+  /usr/include/x86_64-linux-gnu/bits/wordsize.h \
+  /usr/include/x86_64-linux-gnu/bits/long-double.h \
+  /usr/include/x86_64-linux-gnu/gnu/stubs.h \
+  /usr/include/x86_64-linux-gnu/gnu/stubs-64.h \
+  /usr/lib/gcc/x86_64-linux-gnu/7/include/stddef.h \
+  /usr/include/x86_64-linux-gnu/bits/types.h \
+  /usr/include/x86_64-linux-gnu/bits/typesizes.h \
+  /usr/include/x86_64-linux-gnu/bits/types/__FILE.h \
+  /usr/include/x86_64-linux-gnu/bits/types/FILE.h \
+  /usr/include/x86_64-linux-gnu/bits/libio.h \
+  /usr/include/x86_64-linux-gnu/bits/_G_config.h \
+  /usr/include/x86_64-linux-gnu/bits/types/__mbstate_t.h \
+  /usr/lib/gcc/x86_64-linux-gnu/7/include/stdarg.h \
+  /usr/include/x86_64-linux-gnu/bits/stdio_lim.h \
+  /usr/include/x86_64-linux-gnu/bits/sys_errlist.h \
+  /usr/include/x86_64-linux-gnu/bits/stdio2.h /usr/include/assert.h \
+  ../py/runtime.h ../py/mpstate.h \
+  /usr/lib/gcc/x86_64-linux-gnu/7/include/stdint.h /usr/include/stdint.h \
+  /usr/include/x86_64-linux-gnu/bits/wchar.h \
+  /usr/include/x86_64-linux-gnu/bits/stdint-intn.h \
+  /usr/include/x86_64-linux-gnu/bits/stdint-uintn.h ../py/mpconfig.h \
+  mpconfigport.h /usr/include/alloca.h ../py/mpthread.h ../py/misc.h \
+  /usr/lib/gcc/x86_64-linux-gnu/7/include/stdbool.h ../py/nlr.h \
+  /usr/lib/gcc/x86_64-linux-gnu/7/include-fixed/limits.h \
+  /usr/lib/gcc/x86_64-linux-gnu/7/include-fixed/syslimits.h \
+  /usr/include/limits.h /usr/include/x86_64-linux-gnu/bits/posix1_lim.h \
+  /usr/include/x86_64-linux-gnu/bits/local_lim.h \
+  /usr/include/linux/limits.h \
+  /usr/include/x86_64-linux-gnu/bits/posix2_lim.h ../py/obj.h ../py/qstr.h \
+  build/genhdr/qstrdefs.generated.h ../py/mpprint.h ../py/runtime0.h \
+  ../py/objlist.h ../py/objexcept.h ../py/objtuple.h ../py/pystack.h \
+  ../py/mperrno.h /usr/include/errno.h \
+  /usr/include/x86_64-linux-gnu/bits/errno.h /usr/include/linux/errno.h \
+  /usr/include/x86_64-linux-gnu/asm/errno.h \
+  /usr/include/asm-generic/errno.h /usr/include/asm-generic/errno-base.h \
+  ../py/reader.h /usr/include/x86_64-linux-gnu/sys/stat.h \
+  /usr/include/x86_64-linux-gnu/bits/types/struct_timespec.h \
+  /usr/include/x86_64-linux-gnu/bits/types/time_t.h \
+  /usr/include/x86_64-linux-gnu/bits/stat.h /usr/include/fcntl.h \
+  /usr/include/x86_64-linux-gnu/bits/fcntl.h \
+  /usr/include/x86_64-linux-gnu/bits/fcntl-linux.h \
+  /usr/include/x86_64-linux-gnu/bits/fcntl2.h /usr/include/unistd.h \
+  /usr/include/x86_64-linux-gnu/bits/posix_opt.h \
+  /usr/include/x86_64-linux-gnu/bits/environments.h \
+  /usr/include/x86_64-linux-gnu/bits/confname.h \
+  /usr/include/x86_64-linux-gnu/bits/getopt_posix.h \
+  /usr/include/x86_64-linux-gnu/bits/getopt_core.h \
+  /usr/include/x86_64-linux-gnu/bits/unistd.h
+ ../py/reader.c /usr/include/stdc-predef.h :
+  /usr/include/stdio.h :
+  /usr/include/x86_64-linux-gnu/bits/libc-header-start.h :
+  /usr/include/features.h /usr/include/x86_64-linux-gnu/sys/cdefs.h :
+  /usr/include/x86_64-linux-gnu/bits/wordsize.h :
+  /usr/include/x86_64-linux-gnu/bits/long-double.h :
+  /usr/include/x86_64-linux-gnu/gnu/stubs.h :
+  /usr/include/x86_64-linux-gnu/gnu/stubs-64.h :
+  /usr/lib/gcc/x86_64-linux-gnu/7/include/stddef.h :
+  /usr/include/x86_64-linux-gnu/bits/types.h :
+  /usr/include/x86_64-linux-gnu/bits/typesizes.h :
+  /usr/include/x86_64-linux-gnu/bits/types/__FILE.h :
+  /usr/include/x86_64-linux-gnu/bits/types/FILE.h :
+  /usr/include/x86_64-linux-gnu/bits/libio.h :
+  /usr/include/x86_64-linux-gnu/bits/_G_config.h :
+  /usr/include/x86_64-linux-gnu/bits/types/__mbstate_t.h :
+  /usr/lib/gcc/x86_64-linux-gnu/7/include/stdarg.h :
+  /usr/include/x86_64-linux-gnu/bits/stdio_lim.h :
+  /usr/include/x86_64-linux-gnu/bits/sys_errlist.h :
+  /usr/include/x86_64-linux-gnu/bits/stdio2.h /usr/include/assert.h :
+  ../py/runtime.h ../py/mpstate.h :
+  /usr/lib/gcc/x86_64-linux-gnu/7/include/stdint.h /usr/include/stdint.h :
+  /usr/include/x86_64-linux-gnu/bits/wchar.h :
+  /usr/include/x86_64-linux-gnu/bits/stdint-intn.h :
+  /usr/include/x86_64-linux-gnu/bits/stdint-uintn.h ../py/mpconfig.h :
+  mpconfigport.h /usr/include/alloca.h ../py/mpthread.h ../py/misc.h :
+  /usr/lib/gcc/x86_64-linux-gnu/7/include/stdbool.h ../py/nlr.h :
+  /usr/lib/gcc/x86_64-linux-gnu/7/include-fixed/limits.h :
+  /usr/lib/gcc/x86_64-linux-gnu/7/include-fixed/syslimits.h :
+  /usr/include/limits.h /usr/include/x86_64-linux-gnu/bits/posix1_lim.h :
+  /usr/include/x86_64-linux-gnu/bits/local_lim.h :
+  /usr/include/linux/limits.h :
+  /usr/include/x86_64-linux-gnu/bits/posix2_lim.h ../py/obj.h ../py/qstr.h :
+  build/genhdr/qstrdefs.generated.h ../py/mpprint.h ../py/runtime0.h :
+  ../py/objlist.h ../py/objexcept.h ../py/objtuple.h ../py/pystack.h :
+  ../py/mperrno.h /usr/include/errno.h :
+  /usr/include/x86_64-linux-gnu/bits/errno.h /usr/include/linux/errno.h :
+  /usr/include/x86_64-linux-gnu/asm/errno.h :
+  /usr/include/asm-generic/errno.h /usr/include/asm-generic/errno-base.h :
+  ../py/reader.h /usr/include/x86_64-linux-gnu/sys/stat.h :
+  /usr/include/x86_64-linux-gnu/bits/types/struct_timespec.h :
+  /usr/include/x86_64-linux-gnu/bits/types/time_t.h :
+  /usr/include/x86_64-linux-gnu/bits/stat.h /usr/include/fcntl.h :
+  /usr/include/x86_64-linux-gnu/bits/fcntl.h :
+  /usr/include/x86_64-linux-gnu/bits/fcntl-linux.h :
+  /usr/include/x86_64-linux-gnu/bits/fcntl2.h /usr/include/unistd.h :
+  /usr/include/x86_64-linux-gnu/bits/posix_opt.h :
+  /usr/include/x86_64-linux-gnu/bits/environments.h :
+  /usr/include/x86_64-linux-gnu/bits/confname.h :
+  /usr/include/x86_64-linux-gnu/bits/getopt_posix.h :
+  /usr/include/x86_64-linux-gnu/bits/getopt_core.h :
+  /usr/include/x86_64-linux-gnu/bits/unistd.h :
Binary files MicorpythonOriginal1.12/micropython/mpy-cross/build/py/repl.o and micropython1.12_withUlab/micropython/mpy-cross/build/py/repl.o differ
diff -crNb MicorpythonOriginal1.12/micropython/mpy-cross/build/py/repl.P micropython1.12_withUlab/micropython/mpy-cross/build/py/repl.P
*** MicorpythonOriginal1.12/micropython/mpy-cross/build/py/repl.P	1970-01-01 02:00:00.000000000 +0200
--- micropython1.12_withUlab/micropython/mpy-cross/build/py/repl.P	2020-06-19 19:54:02.813487579 +0200
***************
*** 0 ****
--- 1,64 ----
+ build/py/repl.o: ../py/repl.c /usr/include/stdc-predef.h \
+  /usr/include/string.h \
+  /usr/include/x86_64-linux-gnu/bits/libc-header-start.h \
+  /usr/include/features.h /usr/include/x86_64-linux-gnu/sys/cdefs.h \
+  /usr/include/x86_64-linux-gnu/bits/wordsize.h \
+  /usr/include/x86_64-linux-gnu/bits/long-double.h \
+  /usr/include/x86_64-linux-gnu/gnu/stubs.h \
+  /usr/include/x86_64-linux-gnu/gnu/stubs-64.h \
+  /usr/lib/gcc/x86_64-linux-gnu/7/include/stddef.h \
+  /usr/include/x86_64-linux-gnu/bits/types/locale_t.h \
+  /usr/include/x86_64-linux-gnu/bits/types/__locale_t.h \
+  /usr/include/strings.h \
+  /usr/include/x86_64-linux-gnu/bits/strings_fortified.h \
+  /usr/include/x86_64-linux-gnu/bits/string_fortified.h ../py/obj.h \
+  ../py/mpconfig.h mpconfigport.h /usr/include/alloca.h \
+  /usr/lib/gcc/x86_64-linux-gnu/7/include/stdint.h /usr/include/stdint.h \
+  /usr/include/x86_64-linux-gnu/bits/types.h \
+  /usr/include/x86_64-linux-gnu/bits/typesizes.h \
+  /usr/include/x86_64-linux-gnu/bits/wchar.h \
+  /usr/include/x86_64-linux-gnu/bits/stdint-intn.h \
+  /usr/include/x86_64-linux-gnu/bits/stdint-uintn.h ../py/misc.h \
+  /usr/lib/gcc/x86_64-linux-gnu/7/include/stdbool.h ../py/qstr.h \
+  build/genhdr/qstrdefs.generated.h ../py/mpprint.h ../py/runtime0.h \
+  ../py/runtime.h ../py/mpstate.h ../py/mpthread.h ../py/nlr.h \
+  /usr/lib/gcc/x86_64-linux-gnu/7/include-fixed/limits.h \
+  /usr/lib/gcc/x86_64-linux-gnu/7/include-fixed/syslimits.h \
+  /usr/include/limits.h /usr/include/x86_64-linux-gnu/bits/posix1_lim.h \
+  /usr/include/x86_64-linux-gnu/bits/local_lim.h \
+  /usr/include/linux/limits.h \
+  /usr/include/x86_64-linux-gnu/bits/posix2_lim.h /usr/include/assert.h \
+  ../py/objlist.h ../py/objexcept.h ../py/objtuple.h ../py/pystack.h \
+  ../py/builtin.h ../py/repl.h
+ ../py/repl.c /usr/include/stdc-predef.h :
+  /usr/include/string.h :
+  /usr/include/x86_64-linux-gnu/bits/libc-header-start.h :
+  /usr/include/features.h /usr/include/x86_64-linux-gnu/sys/cdefs.h :
+  /usr/include/x86_64-linux-gnu/bits/wordsize.h :
+  /usr/include/x86_64-linux-gnu/bits/long-double.h :
+  /usr/include/x86_64-linux-gnu/gnu/stubs.h :
+  /usr/include/x86_64-linux-gnu/gnu/stubs-64.h :
+  /usr/lib/gcc/x86_64-linux-gnu/7/include/stddef.h :
+  /usr/include/x86_64-linux-gnu/bits/types/locale_t.h :
+  /usr/include/x86_64-linux-gnu/bits/types/__locale_t.h :
+  /usr/include/strings.h :
+  /usr/include/x86_64-linux-gnu/bits/strings_fortified.h :
+  /usr/include/x86_64-linux-gnu/bits/string_fortified.h ../py/obj.h :
+  ../py/mpconfig.h mpconfigport.h /usr/include/alloca.h :
+  /usr/lib/gcc/x86_64-linux-gnu/7/include/stdint.h /usr/include/stdint.h :
+  /usr/include/x86_64-linux-gnu/bits/types.h :
+  /usr/include/x86_64-linux-gnu/bits/typesizes.h :
+  /usr/include/x86_64-linux-gnu/bits/wchar.h :
+  /usr/include/x86_64-linux-gnu/bits/stdint-intn.h :
+  /usr/include/x86_64-linux-gnu/bits/stdint-uintn.h ../py/misc.h :
+  /usr/lib/gcc/x86_64-linux-gnu/7/include/stdbool.h ../py/qstr.h :
+  build/genhdr/qstrdefs.generated.h ../py/mpprint.h ../py/runtime0.h :
+  ../py/runtime.h ../py/mpstate.h ../py/mpthread.h ../py/nlr.h :
+  /usr/lib/gcc/x86_64-linux-gnu/7/include-fixed/limits.h :
+  /usr/lib/gcc/x86_64-linux-gnu/7/include-fixed/syslimits.h :
+  /usr/include/limits.h /usr/include/x86_64-linux-gnu/bits/posix1_lim.h :
+  /usr/include/x86_64-linux-gnu/bits/local_lim.h :
+  /usr/include/linux/limits.h :
+  /usr/include/x86_64-linux-gnu/bits/posix2_lim.h /usr/include/assert.h :
+  ../py/objlist.h ../py/objexcept.h ../py/objtuple.h ../py/pystack.h :
+  ../py/builtin.h ../py/repl.h :
Binary files MicorpythonOriginal1.12/micropython/mpy-cross/build/py/ringbuf.o and micropython1.12_withUlab/micropython/mpy-cross/build/py/ringbuf.o differ
diff -crNb MicorpythonOriginal1.12/micropython/mpy-cross/build/py/ringbuf.P micropython1.12_withUlab/micropython/mpy-cross/build/py/ringbuf.P
*** MicorpythonOriginal1.12/micropython/mpy-cross/build/py/ringbuf.P	1970-01-01 02:00:00.000000000 +0200
--- micropython1.12_withUlab/micropython/mpy-cross/build/py/ringbuf.P	2020-06-14 15:06:53.267488708 +0200
***************
*** 0 ****
--- 1,28 ----
+ build/py/ringbuf.o: ../py/ringbuf.c /usr/include/stdc-predef.h \
+  ../py/ringbuf.h /usr/lib/gcc/x86_64-linux-gnu/7/include/stddef.h \
+  /usr/lib/gcc/x86_64-linux-gnu/7/include/stdint.h /usr/include/stdint.h \
+  /usr/include/x86_64-linux-gnu/bits/libc-header-start.h \
+  /usr/include/features.h /usr/include/x86_64-linux-gnu/sys/cdefs.h \
+  /usr/include/x86_64-linux-gnu/bits/wordsize.h \
+  /usr/include/x86_64-linux-gnu/bits/long-double.h \
+  /usr/include/x86_64-linux-gnu/gnu/stubs.h \
+  /usr/include/x86_64-linux-gnu/gnu/stubs-64.h \
+  /usr/include/x86_64-linux-gnu/bits/types.h \
+  /usr/include/x86_64-linux-gnu/bits/typesizes.h \
+  /usr/include/x86_64-linux-gnu/bits/wchar.h \
+  /usr/include/x86_64-linux-gnu/bits/stdint-intn.h \
+  /usr/include/x86_64-linux-gnu/bits/stdint-uintn.h
+ ../py/ringbuf.c /usr/include/stdc-predef.h :
+  ../py/ringbuf.h /usr/lib/gcc/x86_64-linux-gnu/7/include/stddef.h :
+  /usr/lib/gcc/x86_64-linux-gnu/7/include/stdint.h /usr/include/stdint.h :
+  /usr/include/x86_64-linux-gnu/bits/libc-header-start.h :
+  /usr/include/features.h /usr/include/x86_64-linux-gnu/sys/cdefs.h :
+  /usr/include/x86_64-linux-gnu/bits/wordsize.h :
+  /usr/include/x86_64-linux-gnu/bits/long-double.h :
+  /usr/include/x86_64-linux-gnu/gnu/stubs.h :
+  /usr/include/x86_64-linux-gnu/gnu/stubs-64.h :
+  /usr/include/x86_64-linux-gnu/bits/types.h :
+  /usr/include/x86_64-linux-gnu/bits/typesizes.h :
+  /usr/include/x86_64-linux-gnu/bits/wchar.h :
+  /usr/include/x86_64-linux-gnu/bits/stdint-intn.h :
+  /usr/include/x86_64-linux-gnu/bits/stdint-uintn.h :
Binary files MicorpythonOriginal1.12/micropython/mpy-cross/build/py/runtime.o and micropython1.12_withUlab/micropython/mpy-cross/build/py/runtime.o differ
diff -crNb MicorpythonOriginal1.12/micropython/mpy-cross/build/py/runtime.P micropython1.12_withUlab/micropython/mpy-cross/build/py/runtime.P
*** MicorpythonOriginal1.12/micropython/mpy-cross/build/py/runtime.P	1970-01-01 02:00:00.000000000 +0200
--- micropython1.12_withUlab/micropython/mpy-cross/build/py/runtime.P	2020-06-19 19:54:02.201491314 +0200
***************
*** 0 ****
--- 1,90 ----
+ build/py/runtime.o: ../py/runtime.c /usr/include/stdc-predef.h \
+  /usr/include/stdio.h \
+  /usr/include/x86_64-linux-gnu/bits/libc-header-start.h \
+  /usr/include/features.h /usr/include/x86_64-linux-gnu/sys/cdefs.h \
+  /usr/include/x86_64-linux-gnu/bits/wordsize.h \
+  /usr/include/x86_64-linux-gnu/bits/long-double.h \
+  /usr/include/x86_64-linux-gnu/gnu/stubs.h \
+  /usr/include/x86_64-linux-gnu/gnu/stubs-64.h \
+  /usr/lib/gcc/x86_64-linux-gnu/7/include/stddef.h \
+  /usr/include/x86_64-linux-gnu/bits/types.h \
+  /usr/include/x86_64-linux-gnu/bits/typesizes.h \
+  /usr/include/x86_64-linux-gnu/bits/types/__FILE.h \
+  /usr/include/x86_64-linux-gnu/bits/types/FILE.h \
+  /usr/include/x86_64-linux-gnu/bits/libio.h \
+  /usr/include/x86_64-linux-gnu/bits/_G_config.h \
+  /usr/include/x86_64-linux-gnu/bits/types/__mbstate_t.h \
+  /usr/lib/gcc/x86_64-linux-gnu/7/include/stdarg.h \
+  /usr/include/x86_64-linux-gnu/bits/stdio_lim.h \
+  /usr/include/x86_64-linux-gnu/bits/sys_errlist.h \
+  /usr/include/x86_64-linux-gnu/bits/stdio2.h /usr/include/string.h \
+  /usr/include/x86_64-linux-gnu/bits/types/locale_t.h \
+  /usr/include/x86_64-linux-gnu/bits/types/__locale_t.h \
+  /usr/include/strings.h \
+  /usr/include/x86_64-linux-gnu/bits/strings_fortified.h \
+  /usr/include/x86_64-linux-gnu/bits/string_fortified.h \
+  /usr/include/assert.h ../py/parsenum.h ../py/mpconfig.h mpconfigport.h \
+  /usr/include/alloca.h /usr/lib/gcc/x86_64-linux-gnu/7/include/stdint.h \
+  /usr/include/stdint.h /usr/include/x86_64-linux-gnu/bits/wchar.h \
+  /usr/include/x86_64-linux-gnu/bits/stdint-intn.h \
+  /usr/include/x86_64-linux-gnu/bits/stdint-uintn.h ../py/lexer.h \
+  ../py/qstr.h ../py/misc.h \
+  /usr/lib/gcc/x86_64-linux-gnu/7/include/stdbool.h \
+  build/genhdr/qstrdefs.generated.h ../py/reader.h ../py/obj.h \
+  ../py/mpprint.h ../py/runtime0.h ../py/compile.h ../py/parse.h \
+  ../py/emitglue.h ../py/bc.h ../py/runtime.h ../py/mpstate.h \
+  ../py/mpthread.h ../py/nlr.h \
+  /usr/lib/gcc/x86_64-linux-gnu/7/include-fixed/limits.h \
+  /usr/lib/gcc/x86_64-linux-gnu/7/include-fixed/syslimits.h \
+  /usr/include/limits.h /usr/include/x86_64-linux-gnu/bits/posix1_lim.h \
+  /usr/include/x86_64-linux-gnu/bits/local_lim.h \
+  /usr/include/linux/limits.h \
+  /usr/include/x86_64-linux-gnu/bits/posix2_lim.h ../py/objlist.h \
+  ../py/objexcept.h ../py/objtuple.h ../py/pystack.h ../py/objfun.h \
+  ../py/objstr.h ../py/objmodule.h ../py/objgenerator.h ../py/smallint.h \
+  ../py/builtin.h ../py/stackctrl.h ../py/gc.h
+ ../py/runtime.c /usr/include/stdc-predef.h :
+  /usr/include/stdio.h :
+  /usr/include/x86_64-linux-gnu/bits/libc-header-start.h :
+  /usr/include/features.h /usr/include/x86_64-linux-gnu/sys/cdefs.h :
+  /usr/include/x86_64-linux-gnu/bits/wordsize.h :
+  /usr/include/x86_64-linux-gnu/bits/long-double.h :
+  /usr/include/x86_64-linux-gnu/gnu/stubs.h :
+  /usr/include/x86_64-linux-gnu/gnu/stubs-64.h :
+  /usr/lib/gcc/x86_64-linux-gnu/7/include/stddef.h :
+  /usr/include/x86_64-linux-gnu/bits/types.h :
+  /usr/include/x86_64-linux-gnu/bits/typesizes.h :
+  /usr/include/x86_64-linux-gnu/bits/types/__FILE.h :
+  /usr/include/x86_64-linux-gnu/bits/types/FILE.h :
+  /usr/include/x86_64-linux-gnu/bits/libio.h :
+  /usr/include/x86_64-linux-gnu/bits/_G_config.h :
+  /usr/include/x86_64-linux-gnu/bits/types/__mbstate_t.h :
+  /usr/lib/gcc/x86_64-linux-gnu/7/include/stdarg.h :
+  /usr/include/x86_64-linux-gnu/bits/stdio_lim.h :
+  /usr/include/x86_64-linux-gnu/bits/sys_errlist.h :
+  /usr/include/x86_64-linux-gnu/bits/stdio2.h /usr/include/string.h :
+  /usr/include/x86_64-linux-gnu/bits/types/locale_t.h :
+  /usr/include/x86_64-linux-gnu/bits/types/__locale_t.h :
+  /usr/include/strings.h :
+  /usr/include/x86_64-linux-gnu/bits/strings_fortified.h :
+  /usr/include/x86_64-linux-gnu/bits/string_fortified.h :
+  /usr/include/assert.h ../py/parsenum.h ../py/mpconfig.h mpconfigport.h :
+  /usr/include/alloca.h /usr/lib/gcc/x86_64-linux-gnu/7/include/stdint.h :
+  /usr/include/stdint.h /usr/include/x86_64-linux-gnu/bits/wchar.h :
+  /usr/include/x86_64-linux-gnu/bits/stdint-intn.h :
+  /usr/include/x86_64-linux-gnu/bits/stdint-uintn.h ../py/lexer.h :
+  ../py/qstr.h ../py/misc.h :
+  /usr/lib/gcc/x86_64-linux-gnu/7/include/stdbool.h :
+  build/genhdr/qstrdefs.generated.h ../py/reader.h ../py/obj.h :
+  ../py/mpprint.h ../py/runtime0.h ../py/compile.h ../py/parse.h :
+  ../py/emitglue.h ../py/bc.h ../py/runtime.h ../py/mpstate.h :
+  ../py/mpthread.h ../py/nlr.h :
+  /usr/lib/gcc/x86_64-linux-gnu/7/include-fixed/limits.h :
+  /usr/lib/gcc/x86_64-linux-gnu/7/include-fixed/syslimits.h :
+  /usr/include/limits.h /usr/include/x86_64-linux-gnu/bits/posix1_lim.h :
+  /usr/include/x86_64-linux-gnu/bits/local_lim.h :
+  /usr/include/linux/limits.h :
+  /usr/include/x86_64-linux-gnu/bits/posix2_lim.h ../py/objlist.h :
+  ../py/objexcept.h ../py/objtuple.h ../py/pystack.h ../py/objfun.h :
+  ../py/objstr.h ../py/objmodule.h ../py/objgenerator.h ../py/smallint.h :
+  ../py/builtin.h ../py/stackctrl.h ../py/gc.h :
Binary files MicorpythonOriginal1.12/micropython/mpy-cross/build/py/runtime_utils.o and micropython1.12_withUlab/micropython/mpy-cross/build/py/runtime_utils.o differ
diff -crNb MicorpythonOriginal1.12/micropython/mpy-cross/build/py/runtime_utils.P micropython1.12_withUlab/micropython/mpy-cross/build/py/runtime_utils.P
*** MicorpythonOriginal1.12/micropython/mpy-cross/build/py/runtime_utils.P	1970-01-01 02:00:00.000000000 +0200
--- micropython1.12_withUlab/micropython/mpy-cross/build/py/runtime_utils.P	2020-06-19 18:37:36.431570911 +0200
***************
*** 0 ****
--- 1,52 ----
+ build/py/runtime_utils.o: ../py/runtime_utils.c \
+  /usr/include/stdc-predef.h ../py/runtime.h ../py/mpstate.h \
+  /usr/lib/gcc/x86_64-linux-gnu/7/include/stdint.h /usr/include/stdint.h \
+  /usr/include/x86_64-linux-gnu/bits/libc-header-start.h \
+  /usr/include/features.h /usr/include/x86_64-linux-gnu/sys/cdefs.h \
+  /usr/include/x86_64-linux-gnu/bits/wordsize.h \
+  /usr/include/x86_64-linux-gnu/bits/long-double.h \
+  /usr/include/x86_64-linux-gnu/gnu/stubs.h \
+  /usr/include/x86_64-linux-gnu/gnu/stubs-64.h \
+  /usr/include/x86_64-linux-gnu/bits/types.h \
+  /usr/include/x86_64-linux-gnu/bits/typesizes.h \
+  /usr/include/x86_64-linux-gnu/bits/wchar.h \
+  /usr/include/x86_64-linux-gnu/bits/stdint-intn.h \
+  /usr/include/x86_64-linux-gnu/bits/stdint-uintn.h ../py/mpconfig.h \
+  mpconfigport.h /usr/include/alloca.h \
+  /usr/lib/gcc/x86_64-linux-gnu/7/include/stddef.h ../py/mpthread.h \
+  ../py/misc.h /usr/lib/gcc/x86_64-linux-gnu/7/include/stdbool.h \
+  ../py/nlr.h /usr/lib/gcc/x86_64-linux-gnu/7/include-fixed/limits.h \
+  /usr/lib/gcc/x86_64-linux-gnu/7/include-fixed/syslimits.h \
+  /usr/include/limits.h /usr/include/x86_64-linux-gnu/bits/posix1_lim.h \
+  /usr/include/x86_64-linux-gnu/bits/local_lim.h \
+  /usr/include/linux/limits.h \
+  /usr/include/x86_64-linux-gnu/bits/posix2_lim.h /usr/include/assert.h \
+  ../py/obj.h ../py/qstr.h build/genhdr/qstrdefs.generated.h \
+  ../py/mpprint.h ../py/runtime0.h ../py/objlist.h ../py/objexcept.h \
+  ../py/objtuple.h ../py/pystack.h
+ ../py/runtime_utils.c :
+  /usr/include/stdc-predef.h ../py/runtime.h ../py/mpstate.h :
+  /usr/lib/gcc/x86_64-linux-gnu/7/include/stdint.h /usr/include/stdint.h :
+  /usr/include/x86_64-linux-gnu/bits/libc-header-start.h :
+  /usr/include/features.h /usr/include/x86_64-linux-gnu/sys/cdefs.h :
+  /usr/include/x86_64-linux-gnu/bits/wordsize.h :
+  /usr/include/x86_64-linux-gnu/bits/long-double.h :
+  /usr/include/x86_64-linux-gnu/gnu/stubs.h :
+  /usr/include/x86_64-linux-gnu/gnu/stubs-64.h :
+  /usr/include/x86_64-linux-gnu/bits/types.h :
+  /usr/include/x86_64-linux-gnu/bits/typesizes.h :
+  /usr/include/x86_64-linux-gnu/bits/wchar.h :
+  /usr/include/x86_64-linux-gnu/bits/stdint-intn.h :
+  /usr/include/x86_64-linux-gnu/bits/stdint-uintn.h ../py/mpconfig.h :
+  mpconfigport.h /usr/include/alloca.h :
+  /usr/lib/gcc/x86_64-linux-gnu/7/include/stddef.h ../py/mpthread.h :
+  ../py/misc.h /usr/lib/gcc/x86_64-linux-gnu/7/include/stdbool.h :
+  ../py/nlr.h /usr/lib/gcc/x86_64-linux-gnu/7/include-fixed/limits.h :
+  /usr/lib/gcc/x86_64-linux-gnu/7/include-fixed/syslimits.h :
+  /usr/include/limits.h /usr/include/x86_64-linux-gnu/bits/posix1_lim.h :
+  /usr/include/x86_64-linux-gnu/bits/local_lim.h :
+  /usr/include/linux/limits.h :
+  /usr/include/x86_64-linux-gnu/bits/posix2_lim.h /usr/include/assert.h :
+  ../py/obj.h ../py/qstr.h build/genhdr/qstrdefs.generated.h :
+  ../py/mpprint.h ../py/runtime0.h ../py/objlist.h ../py/objexcept.h :
+  ../py/objtuple.h ../py/pystack.h :
Binary files MicorpythonOriginal1.12/micropython/mpy-cross/build/py/scheduler.o and micropython1.12_withUlab/micropython/mpy-cross/build/py/scheduler.o differ
diff -crNb MicorpythonOriginal1.12/micropython/mpy-cross/build/py/scheduler.P micropython1.12_withUlab/micropython/mpy-cross/build/py/scheduler.P
*** MicorpythonOriginal1.12/micropython/mpy-cross/build/py/scheduler.P	1970-01-01 02:00:00.000000000 +0200
--- micropython1.12_withUlab/micropython/mpy-cross/build/py/scheduler.P	2020-06-19 18:37:36.459570310 +0200
***************
*** 0 ****
--- 1,70 ----
+ build/py/scheduler.o: ../py/scheduler.c /usr/include/stdc-predef.h \
+  /usr/include/stdio.h \
+  /usr/include/x86_64-linux-gnu/bits/libc-header-start.h \
+  /usr/include/features.h /usr/include/x86_64-linux-gnu/sys/cdefs.h \
+  /usr/include/x86_64-linux-gnu/bits/wordsize.h \
+  /usr/include/x86_64-linux-gnu/bits/long-double.h \
+  /usr/include/x86_64-linux-gnu/gnu/stubs.h \
+  /usr/include/x86_64-linux-gnu/gnu/stubs-64.h \
+  /usr/lib/gcc/x86_64-linux-gnu/7/include/stddef.h \
+  /usr/include/x86_64-linux-gnu/bits/types.h \
+  /usr/include/x86_64-linux-gnu/bits/typesizes.h \
+  /usr/include/x86_64-linux-gnu/bits/types/__FILE.h \
+  /usr/include/x86_64-linux-gnu/bits/types/FILE.h \
+  /usr/include/x86_64-linux-gnu/bits/libio.h \
+  /usr/include/x86_64-linux-gnu/bits/_G_config.h \
+  /usr/include/x86_64-linux-gnu/bits/types/__mbstate_t.h \
+  /usr/lib/gcc/x86_64-linux-gnu/7/include/stdarg.h \
+  /usr/include/x86_64-linux-gnu/bits/stdio_lim.h \
+  /usr/include/x86_64-linux-gnu/bits/sys_errlist.h \
+  /usr/include/x86_64-linux-gnu/bits/stdio2.h ../py/runtime.h \
+  ../py/mpstate.h /usr/lib/gcc/x86_64-linux-gnu/7/include/stdint.h \
+  /usr/include/stdint.h /usr/include/x86_64-linux-gnu/bits/wchar.h \
+  /usr/include/x86_64-linux-gnu/bits/stdint-intn.h \
+  /usr/include/x86_64-linux-gnu/bits/stdint-uintn.h ../py/mpconfig.h \
+  mpconfigport.h /usr/include/alloca.h ../py/mpthread.h ../py/misc.h \
+  /usr/lib/gcc/x86_64-linux-gnu/7/include/stdbool.h ../py/nlr.h \
+  /usr/lib/gcc/x86_64-linux-gnu/7/include-fixed/limits.h \
+  /usr/lib/gcc/x86_64-linux-gnu/7/include-fixed/syslimits.h \
+  /usr/include/limits.h /usr/include/x86_64-linux-gnu/bits/posix1_lim.h \
+  /usr/include/x86_64-linux-gnu/bits/local_lim.h \
+  /usr/include/linux/limits.h \
+  /usr/include/x86_64-linux-gnu/bits/posix2_lim.h /usr/include/assert.h \
+  ../py/obj.h ../py/qstr.h build/genhdr/qstrdefs.generated.h \
+  ../py/mpprint.h ../py/runtime0.h ../py/objlist.h ../py/objexcept.h \
+  ../py/objtuple.h ../py/pystack.h
+ ../py/scheduler.c /usr/include/stdc-predef.h :
+  /usr/include/stdio.h :
+  /usr/include/x86_64-linux-gnu/bits/libc-header-start.h :
+  /usr/include/features.h /usr/include/x86_64-linux-gnu/sys/cdefs.h :
+  /usr/include/x86_64-linux-gnu/bits/wordsize.h :
+  /usr/include/x86_64-linux-gnu/bits/long-double.h :
+  /usr/include/x86_64-linux-gnu/gnu/stubs.h :
+  /usr/include/x86_64-linux-gnu/gnu/stubs-64.h :
+  /usr/lib/gcc/x86_64-linux-gnu/7/include/stddef.h :
+  /usr/include/x86_64-linux-gnu/bits/types.h :
+  /usr/include/x86_64-linux-gnu/bits/typesizes.h :
+  /usr/include/x86_64-linux-gnu/bits/types/__FILE.h :
+  /usr/include/x86_64-linux-gnu/bits/types/FILE.h :
+  /usr/include/x86_64-linux-gnu/bits/libio.h :
+  /usr/include/x86_64-linux-gnu/bits/_G_config.h :
+  /usr/include/x86_64-linux-gnu/bits/types/__mbstate_t.h :
+  /usr/lib/gcc/x86_64-linux-gnu/7/include/stdarg.h :
+  /usr/include/x86_64-linux-gnu/bits/stdio_lim.h :
+  /usr/include/x86_64-linux-gnu/bits/sys_errlist.h :
+  /usr/include/x86_64-linux-gnu/bits/stdio2.h ../py/runtime.h :
+  ../py/mpstate.h /usr/lib/gcc/x86_64-linux-gnu/7/include/stdint.h :
+  /usr/include/stdint.h /usr/include/x86_64-linux-gnu/bits/wchar.h :
+  /usr/include/x86_64-linux-gnu/bits/stdint-intn.h :
+  /usr/include/x86_64-linux-gnu/bits/stdint-uintn.h ../py/mpconfig.h :
+  mpconfigport.h /usr/include/alloca.h ../py/mpthread.h ../py/misc.h :
+  /usr/lib/gcc/x86_64-linux-gnu/7/include/stdbool.h ../py/nlr.h :
+  /usr/lib/gcc/x86_64-linux-gnu/7/include-fixed/limits.h :
+  /usr/lib/gcc/x86_64-linux-gnu/7/include-fixed/syslimits.h :
+  /usr/include/limits.h /usr/include/x86_64-linux-gnu/bits/posix1_lim.h :
+  /usr/include/x86_64-linux-gnu/bits/local_lim.h :
+  /usr/include/linux/limits.h :
+  /usr/include/x86_64-linux-gnu/bits/posix2_lim.h /usr/include/assert.h :
+  ../py/obj.h ../py/qstr.h build/genhdr/qstrdefs.generated.h :
+  ../py/mpprint.h ../py/runtime0.h ../py/objlist.h ../py/objexcept.h :
+  ../py/objtuple.h ../py/pystack.h :
Binary files MicorpythonOriginal1.12/micropython/mpy-cross/build/py/scope.o and micropython1.12_withUlab/micropython/mpy-cross/build/py/scope.o differ
diff -crNb MicorpythonOriginal1.12/micropython/mpy-cross/build/py/scope.P micropython1.12_withUlab/micropython/mpy-cross/build/py/scope.P
*** MicorpythonOriginal1.12/micropython/mpy-cross/build/py/scope.P	1970-01-01 02:00:00.000000000 +0200
--- micropython1.12_withUlab/micropython/mpy-cross/build/py/scope.P	2020-06-19 18:37:33.483634419 +0200
***************
*** 0 ****
--- 1,54 ----
+ build/py/scope.o: ../py/scope.c /usr/include/stdc-predef.h \
+  /usr/include/assert.h /usr/include/features.h \
+  /usr/include/x86_64-linux-gnu/sys/cdefs.h \
+  /usr/include/x86_64-linux-gnu/bits/wordsize.h \
+  /usr/include/x86_64-linux-gnu/bits/long-double.h \
+  /usr/include/x86_64-linux-gnu/gnu/stubs.h \
+  /usr/include/x86_64-linux-gnu/gnu/stubs-64.h ../py/scope.h ../py/parse.h \
+  /usr/lib/gcc/x86_64-linux-gnu/7/include/stddef.h \
+  /usr/lib/gcc/x86_64-linux-gnu/7/include/stdint.h /usr/include/stdint.h \
+  /usr/include/x86_64-linux-gnu/bits/libc-header-start.h \
+  /usr/include/x86_64-linux-gnu/bits/types.h \
+  /usr/include/x86_64-linux-gnu/bits/typesizes.h \
+  /usr/include/x86_64-linux-gnu/bits/wchar.h \
+  /usr/include/x86_64-linux-gnu/bits/stdint-intn.h \
+  /usr/include/x86_64-linux-gnu/bits/stdint-uintn.h ../py/obj.h \
+  ../py/mpconfig.h mpconfigport.h /usr/include/alloca.h ../py/misc.h \
+  /usr/lib/gcc/x86_64-linux-gnu/7/include/stdbool.h ../py/qstr.h \
+  build/genhdr/qstrdefs.generated.h ../py/mpprint.h ../py/runtime0.h \
+  ../py/emitglue.h ../py/bc.h ../py/runtime.h ../py/mpstate.h \
+  ../py/mpthread.h ../py/nlr.h \
+  /usr/lib/gcc/x86_64-linux-gnu/7/include-fixed/limits.h \
+  /usr/lib/gcc/x86_64-linux-gnu/7/include-fixed/syslimits.h \
+  /usr/include/limits.h /usr/include/x86_64-linux-gnu/bits/posix1_lim.h \
+  /usr/include/x86_64-linux-gnu/bits/local_lim.h \
+  /usr/include/linux/limits.h \
+  /usr/include/x86_64-linux-gnu/bits/posix2_lim.h ../py/objlist.h \
+  ../py/objexcept.h ../py/objtuple.h ../py/pystack.h ../py/objfun.h
+ ../py/scope.c /usr/include/stdc-predef.h :
+  /usr/include/assert.h /usr/include/features.h :
+  /usr/include/x86_64-linux-gnu/sys/cdefs.h :
+  /usr/include/x86_64-linux-gnu/bits/wordsize.h :
+  /usr/include/x86_64-linux-gnu/bits/long-double.h :
+  /usr/include/x86_64-linux-gnu/gnu/stubs.h :
+  /usr/include/x86_64-linux-gnu/gnu/stubs-64.h ../py/scope.h ../py/parse.h :
+  /usr/lib/gcc/x86_64-linux-gnu/7/include/stddef.h :
+  /usr/lib/gcc/x86_64-linux-gnu/7/include/stdint.h /usr/include/stdint.h :
+  /usr/include/x86_64-linux-gnu/bits/libc-header-start.h :
+  /usr/include/x86_64-linux-gnu/bits/types.h :
+  /usr/include/x86_64-linux-gnu/bits/typesizes.h :
+  /usr/include/x86_64-linux-gnu/bits/wchar.h :
+  /usr/include/x86_64-linux-gnu/bits/stdint-intn.h :
+  /usr/include/x86_64-linux-gnu/bits/stdint-uintn.h ../py/obj.h :
+  ../py/mpconfig.h mpconfigport.h /usr/include/alloca.h ../py/misc.h :
+  /usr/lib/gcc/x86_64-linux-gnu/7/include/stdbool.h ../py/qstr.h :
+  build/genhdr/qstrdefs.generated.h ../py/mpprint.h ../py/runtime0.h :
+  ../py/emitglue.h ../py/bc.h ../py/runtime.h ../py/mpstate.h :
+  ../py/mpthread.h ../py/nlr.h :
+  /usr/lib/gcc/x86_64-linux-gnu/7/include-fixed/limits.h :
+  /usr/lib/gcc/x86_64-linux-gnu/7/include-fixed/syslimits.h :
+  /usr/include/limits.h /usr/include/x86_64-linux-gnu/bits/posix1_lim.h :
+  /usr/include/x86_64-linux-gnu/bits/local_lim.h :
+  /usr/include/linux/limits.h :
+  /usr/include/x86_64-linux-gnu/bits/posix2_lim.h ../py/objlist.h :
+  ../py/objexcept.h ../py/objtuple.h ../py/pystack.h ../py/objfun.h :
Binary files MicorpythonOriginal1.12/micropython/mpy-cross/build/py/sequence.o and micropython1.12_withUlab/micropython/mpy-cross/build/py/sequence.o differ
diff -crNb MicorpythonOriginal1.12/micropython/mpy-cross/build/py/sequence.P micropython1.12_withUlab/micropython/mpy-cross/build/py/sequence.P
*** MicorpythonOriginal1.12/micropython/mpy-cross/build/py/sequence.P	1970-01-01 02:00:00.000000000 +0200
--- micropython1.12_withUlab/micropython/mpy-cross/build/py/sequence.P	2020-06-19 18:37:38.607524380 +0200
***************
*** 0 ****
--- 1,62 ----
+ build/py/sequence.o: ../py/sequence.c /usr/include/stdc-predef.h \
+  /usr/include/string.h \
+  /usr/include/x86_64-linux-gnu/bits/libc-header-start.h \
+  /usr/include/features.h /usr/include/x86_64-linux-gnu/sys/cdefs.h \
+  /usr/include/x86_64-linux-gnu/bits/wordsize.h \
+  /usr/include/x86_64-linux-gnu/bits/long-double.h \
+  /usr/include/x86_64-linux-gnu/gnu/stubs.h \
+  /usr/include/x86_64-linux-gnu/gnu/stubs-64.h \
+  /usr/lib/gcc/x86_64-linux-gnu/7/include/stddef.h \
+  /usr/include/x86_64-linux-gnu/bits/types/locale_t.h \
+  /usr/include/x86_64-linux-gnu/bits/types/__locale_t.h \
+  /usr/include/strings.h \
+  /usr/include/x86_64-linux-gnu/bits/strings_fortified.h \
+  /usr/include/x86_64-linux-gnu/bits/string_fortified.h ../py/runtime.h \
+  ../py/mpstate.h /usr/lib/gcc/x86_64-linux-gnu/7/include/stdint.h \
+  /usr/include/stdint.h /usr/include/x86_64-linux-gnu/bits/types.h \
+  /usr/include/x86_64-linux-gnu/bits/typesizes.h \
+  /usr/include/x86_64-linux-gnu/bits/wchar.h \
+  /usr/include/x86_64-linux-gnu/bits/stdint-intn.h \
+  /usr/include/x86_64-linux-gnu/bits/stdint-uintn.h ../py/mpconfig.h \
+  mpconfigport.h /usr/include/alloca.h ../py/mpthread.h ../py/misc.h \
+  /usr/lib/gcc/x86_64-linux-gnu/7/include/stdbool.h ../py/nlr.h \
+  /usr/lib/gcc/x86_64-linux-gnu/7/include-fixed/limits.h \
+  /usr/lib/gcc/x86_64-linux-gnu/7/include-fixed/syslimits.h \
+  /usr/include/limits.h /usr/include/x86_64-linux-gnu/bits/posix1_lim.h \
+  /usr/include/x86_64-linux-gnu/bits/local_lim.h \
+  /usr/include/linux/limits.h \
+  /usr/include/x86_64-linux-gnu/bits/posix2_lim.h /usr/include/assert.h \
+  ../py/obj.h ../py/qstr.h build/genhdr/qstrdefs.generated.h \
+  ../py/mpprint.h ../py/runtime0.h ../py/objlist.h ../py/objexcept.h \
+  ../py/objtuple.h ../py/pystack.h
+ ../py/sequence.c /usr/include/stdc-predef.h :
+  /usr/include/string.h :
+  /usr/include/x86_64-linux-gnu/bits/libc-header-start.h :
+  /usr/include/features.h /usr/include/x86_64-linux-gnu/sys/cdefs.h :
+  /usr/include/x86_64-linux-gnu/bits/wordsize.h :
+  /usr/include/x86_64-linux-gnu/bits/long-double.h :
+  /usr/include/x86_64-linux-gnu/gnu/stubs.h :
+  /usr/include/x86_64-linux-gnu/gnu/stubs-64.h :
+  /usr/lib/gcc/x86_64-linux-gnu/7/include/stddef.h :
+  /usr/include/x86_64-linux-gnu/bits/types/locale_t.h :
+  /usr/include/x86_64-linux-gnu/bits/types/__locale_t.h :
+  /usr/include/strings.h :
+  /usr/include/x86_64-linux-gnu/bits/strings_fortified.h :
+  /usr/include/x86_64-linux-gnu/bits/string_fortified.h ../py/runtime.h :
+  ../py/mpstate.h /usr/lib/gcc/x86_64-linux-gnu/7/include/stdint.h :
+  /usr/include/stdint.h /usr/include/x86_64-linux-gnu/bits/types.h :
+  /usr/include/x86_64-linux-gnu/bits/typesizes.h :
+  /usr/include/x86_64-linux-gnu/bits/wchar.h :
+  /usr/include/x86_64-linux-gnu/bits/stdint-intn.h :
+  /usr/include/x86_64-linux-gnu/bits/stdint-uintn.h ../py/mpconfig.h :
+  mpconfigport.h /usr/include/alloca.h ../py/mpthread.h ../py/misc.h :
+  /usr/lib/gcc/x86_64-linux-gnu/7/include/stdbool.h ../py/nlr.h :
+  /usr/lib/gcc/x86_64-linux-gnu/7/include-fixed/limits.h :
+  /usr/lib/gcc/x86_64-linux-gnu/7/include-fixed/syslimits.h :
+  /usr/include/limits.h /usr/include/x86_64-linux-gnu/bits/posix1_lim.h :
+  /usr/include/x86_64-linux-gnu/bits/local_lim.h :
+  /usr/include/linux/limits.h :
+  /usr/include/x86_64-linux-gnu/bits/posix2_lim.h /usr/include/assert.h :
+  ../py/obj.h ../py/qstr.h build/genhdr/qstrdefs.generated.h :
+  ../py/mpprint.h ../py/runtime0.h ../py/objlist.h ../py/objexcept.h :
+  ../py/objtuple.h ../py/pystack.h :
Binary files MicorpythonOriginal1.12/micropython/mpy-cross/build/py/showbc.o and micropython1.12_withUlab/micropython/mpy-cross/build/py/showbc.o differ
diff -crNb MicorpythonOriginal1.12/micropython/mpy-cross/build/py/showbc.P micropython1.12_withUlab/micropython/mpy-cross/build/py/showbc.P
*** MicorpythonOriginal1.12/micropython/mpy-cross/build/py/showbc.P	1970-01-01 02:00:00.000000000 +0200
--- micropython1.12_withUlab/micropython/mpy-cross/build/py/showbc.P	2020-06-19 18:37:39.387507771 +0200
***************
*** 0 ****
--- 1,72 ----
+ build/py/showbc.o: ../py/showbc.c /usr/include/stdc-predef.h \
+  /usr/include/stdio.h \
+  /usr/include/x86_64-linux-gnu/bits/libc-header-start.h \
+  /usr/include/features.h /usr/include/x86_64-linux-gnu/sys/cdefs.h \
+  /usr/include/x86_64-linux-gnu/bits/wordsize.h \
+  /usr/include/x86_64-linux-gnu/bits/long-double.h \
+  /usr/include/x86_64-linux-gnu/gnu/stubs.h \
+  /usr/include/x86_64-linux-gnu/gnu/stubs-64.h \
+  /usr/lib/gcc/x86_64-linux-gnu/7/include/stddef.h \
+  /usr/include/x86_64-linux-gnu/bits/types.h \
+  /usr/include/x86_64-linux-gnu/bits/typesizes.h \
+  /usr/include/x86_64-linux-gnu/bits/types/__FILE.h \
+  /usr/include/x86_64-linux-gnu/bits/types/FILE.h \
+  /usr/include/x86_64-linux-gnu/bits/libio.h \
+  /usr/include/x86_64-linux-gnu/bits/_G_config.h \
+  /usr/include/x86_64-linux-gnu/bits/types/__mbstate_t.h \
+  /usr/lib/gcc/x86_64-linux-gnu/7/include/stdarg.h \
+  /usr/include/x86_64-linux-gnu/bits/stdio_lim.h \
+  /usr/include/x86_64-linux-gnu/bits/sys_errlist.h \
+  /usr/include/x86_64-linux-gnu/bits/stdio2.h /usr/include/assert.h \
+  ../py/bc0.h ../py/bc.h ../py/runtime.h ../py/mpstate.h \
+  /usr/lib/gcc/x86_64-linux-gnu/7/include/stdint.h /usr/include/stdint.h \
+  /usr/include/x86_64-linux-gnu/bits/wchar.h \
+  /usr/include/x86_64-linux-gnu/bits/stdint-intn.h \
+  /usr/include/x86_64-linux-gnu/bits/stdint-uintn.h ../py/mpconfig.h \
+  mpconfigport.h /usr/include/alloca.h ../py/mpthread.h ../py/misc.h \
+  /usr/lib/gcc/x86_64-linux-gnu/7/include/stdbool.h ../py/nlr.h \
+  /usr/lib/gcc/x86_64-linux-gnu/7/include-fixed/limits.h \
+  /usr/lib/gcc/x86_64-linux-gnu/7/include-fixed/syslimits.h \
+  /usr/include/limits.h /usr/include/x86_64-linux-gnu/bits/posix1_lim.h \
+  /usr/include/x86_64-linux-gnu/bits/local_lim.h \
+  /usr/include/linux/limits.h \
+  /usr/include/x86_64-linux-gnu/bits/posix2_lim.h ../py/obj.h ../py/qstr.h \
+  build/genhdr/qstrdefs.generated.h ../py/mpprint.h ../py/runtime0.h \
+  ../py/objlist.h ../py/objexcept.h ../py/objtuple.h ../py/pystack.h \
+  ../py/objfun.h
+ ../py/showbc.c /usr/include/stdc-predef.h :
+  /usr/include/stdio.h :
+  /usr/include/x86_64-linux-gnu/bits/libc-header-start.h :
+  /usr/include/features.h /usr/include/x86_64-linux-gnu/sys/cdefs.h :
+  /usr/include/x86_64-linux-gnu/bits/wordsize.h :
+  /usr/include/x86_64-linux-gnu/bits/long-double.h :
+  /usr/include/x86_64-linux-gnu/gnu/stubs.h :
+  /usr/include/x86_64-linux-gnu/gnu/stubs-64.h :
+  /usr/lib/gcc/x86_64-linux-gnu/7/include/stddef.h :
+  /usr/include/x86_64-linux-gnu/bits/types.h :
+  /usr/include/x86_64-linux-gnu/bits/typesizes.h :
+  /usr/include/x86_64-linux-gnu/bits/types/__FILE.h :
+  /usr/include/x86_64-linux-gnu/bits/types/FILE.h :
+  /usr/include/x86_64-linux-gnu/bits/libio.h :
+  /usr/include/x86_64-linux-gnu/bits/_G_config.h :
+  /usr/include/x86_64-linux-gnu/bits/types/__mbstate_t.h :
+  /usr/lib/gcc/x86_64-linux-gnu/7/include/stdarg.h :
+  /usr/include/x86_64-linux-gnu/bits/stdio_lim.h :
+  /usr/include/x86_64-linux-gnu/bits/sys_errlist.h :
+  /usr/include/x86_64-linux-gnu/bits/stdio2.h /usr/include/assert.h :
+  ../py/bc0.h ../py/bc.h ../py/runtime.h ../py/mpstate.h :
+  /usr/lib/gcc/x86_64-linux-gnu/7/include/stdint.h /usr/include/stdint.h :
+  /usr/include/x86_64-linux-gnu/bits/wchar.h :
+  /usr/include/x86_64-linux-gnu/bits/stdint-intn.h :
+  /usr/include/x86_64-linux-gnu/bits/stdint-uintn.h ../py/mpconfig.h :
+  mpconfigport.h /usr/include/alloca.h ../py/mpthread.h ../py/misc.h :
+  /usr/lib/gcc/x86_64-linux-gnu/7/include/stdbool.h ../py/nlr.h :
+  /usr/lib/gcc/x86_64-linux-gnu/7/include-fixed/limits.h :
+  /usr/lib/gcc/x86_64-linux-gnu/7/include-fixed/syslimits.h :
+  /usr/include/limits.h /usr/include/x86_64-linux-gnu/bits/posix1_lim.h :
+  /usr/include/x86_64-linux-gnu/bits/local_lim.h :
+  /usr/include/linux/limits.h :
+  /usr/include/x86_64-linux-gnu/bits/posix2_lim.h ../py/obj.h ../py/qstr.h :
+  build/genhdr/qstrdefs.generated.h ../py/mpprint.h ../py/runtime0.h :
+  ../py/objlist.h ../py/objexcept.h ../py/objtuple.h ../py/pystack.h :
+  ../py/objfun.h :
Binary files MicorpythonOriginal1.12/micropython/mpy-cross/build/py/smallint.o and micropython1.12_withUlab/micropython/mpy-cross/build/py/smallint.o differ
diff -crNb MicorpythonOriginal1.12/micropython/mpy-cross/build/py/smallint.P micropython1.12_withUlab/micropython/mpy-cross/build/py/smallint.P
*** MicorpythonOriginal1.12/micropython/mpy-cross/build/py/smallint.P	1970-01-01 02:00:00.000000000 +0200
--- micropython1.12_withUlab/micropython/mpy-cross/build/py/smallint.P	2020-06-14 15:06:56.267467407 +0200
***************
*** 0 ****
--- 1,32 ----
+ build/py/smallint.o: ../py/smallint.c /usr/include/stdc-predef.h \
+  ../py/smallint.h ../py/mpconfig.h mpconfigport.h /usr/include/alloca.h \
+  /usr/include/features.h /usr/include/x86_64-linux-gnu/sys/cdefs.h \
+  /usr/include/x86_64-linux-gnu/bits/wordsize.h \
+  /usr/include/x86_64-linux-gnu/bits/long-double.h \
+  /usr/include/x86_64-linux-gnu/gnu/stubs.h \
+  /usr/include/x86_64-linux-gnu/gnu/stubs-64.h \
+  /usr/lib/gcc/x86_64-linux-gnu/7/include/stddef.h \
+  /usr/lib/gcc/x86_64-linux-gnu/7/include/stdint.h /usr/include/stdint.h \
+  /usr/include/x86_64-linux-gnu/bits/libc-header-start.h \
+  /usr/include/x86_64-linux-gnu/bits/types.h \
+  /usr/include/x86_64-linux-gnu/bits/typesizes.h \
+  /usr/include/x86_64-linux-gnu/bits/wchar.h \
+  /usr/include/x86_64-linux-gnu/bits/stdint-intn.h \
+  /usr/include/x86_64-linux-gnu/bits/stdint-uintn.h ../py/misc.h \
+  /usr/lib/gcc/x86_64-linux-gnu/7/include/stdbool.h
+ ../py/smallint.c /usr/include/stdc-predef.h :
+  ../py/smallint.h ../py/mpconfig.h mpconfigport.h /usr/include/alloca.h :
+  /usr/include/features.h /usr/include/x86_64-linux-gnu/sys/cdefs.h :
+  /usr/include/x86_64-linux-gnu/bits/wordsize.h :
+  /usr/include/x86_64-linux-gnu/bits/long-double.h :
+  /usr/include/x86_64-linux-gnu/gnu/stubs.h :
+  /usr/include/x86_64-linux-gnu/gnu/stubs-64.h :
+  /usr/lib/gcc/x86_64-linux-gnu/7/include/stddef.h :
+  /usr/lib/gcc/x86_64-linux-gnu/7/include/stdint.h /usr/include/stdint.h :
+  /usr/include/x86_64-linux-gnu/bits/libc-header-start.h :
+  /usr/include/x86_64-linux-gnu/bits/types.h :
+  /usr/include/x86_64-linux-gnu/bits/typesizes.h :
+  /usr/include/x86_64-linux-gnu/bits/wchar.h :
+  /usr/include/x86_64-linux-gnu/bits/stdint-intn.h :
+  /usr/include/x86_64-linux-gnu/bits/stdint-uintn.h ../py/misc.h :
+  /usr/lib/gcc/x86_64-linux-gnu/7/include/stdbool.h :
Binary files MicorpythonOriginal1.12/micropython/mpy-cross/build/py/stackctrl.o and micropython1.12_withUlab/micropython/mpy-cross/build/py/stackctrl.o differ
diff -crNb MicorpythonOriginal1.12/micropython/mpy-cross/build/py/stackctrl.P micropython1.12_withUlab/micropython/mpy-cross/build/py/stackctrl.P
*** MicorpythonOriginal1.12/micropython/mpy-cross/build/py/stackctrl.P	1970-01-01 02:00:00.000000000 +0200
--- micropython1.12_withUlab/micropython/mpy-cross/build/py/stackctrl.P	2020-06-19 18:37:36.519569023 +0200
***************
*** 0 ****
--- 1,52 ----
+ build/py/stackctrl.o: ../py/stackctrl.c /usr/include/stdc-predef.h \
+  ../py/runtime.h ../py/mpstate.h \
+  /usr/lib/gcc/x86_64-linux-gnu/7/include/stdint.h /usr/include/stdint.h \
+  /usr/include/x86_64-linux-gnu/bits/libc-header-start.h \
+  /usr/include/features.h /usr/include/x86_64-linux-gnu/sys/cdefs.h \
+  /usr/include/x86_64-linux-gnu/bits/wordsize.h \
+  /usr/include/x86_64-linux-gnu/bits/long-double.h \
+  /usr/include/x86_64-linux-gnu/gnu/stubs.h \
+  /usr/include/x86_64-linux-gnu/gnu/stubs-64.h \
+  /usr/include/x86_64-linux-gnu/bits/types.h \
+  /usr/include/x86_64-linux-gnu/bits/typesizes.h \
+  /usr/include/x86_64-linux-gnu/bits/wchar.h \
+  /usr/include/x86_64-linux-gnu/bits/stdint-intn.h \
+  /usr/include/x86_64-linux-gnu/bits/stdint-uintn.h ../py/mpconfig.h \
+  mpconfigport.h /usr/include/alloca.h \
+  /usr/lib/gcc/x86_64-linux-gnu/7/include/stddef.h ../py/mpthread.h \
+  ../py/misc.h /usr/lib/gcc/x86_64-linux-gnu/7/include/stdbool.h \
+  ../py/nlr.h /usr/lib/gcc/x86_64-linux-gnu/7/include-fixed/limits.h \
+  /usr/lib/gcc/x86_64-linux-gnu/7/include-fixed/syslimits.h \
+  /usr/include/limits.h /usr/include/x86_64-linux-gnu/bits/posix1_lim.h \
+  /usr/include/x86_64-linux-gnu/bits/local_lim.h \
+  /usr/include/linux/limits.h \
+  /usr/include/x86_64-linux-gnu/bits/posix2_lim.h /usr/include/assert.h \
+  ../py/obj.h ../py/qstr.h build/genhdr/qstrdefs.generated.h \
+  ../py/mpprint.h ../py/runtime0.h ../py/objlist.h ../py/objexcept.h \
+  ../py/objtuple.h ../py/pystack.h ../py/stackctrl.h
+ ../py/stackctrl.c /usr/include/stdc-predef.h :
+  ../py/runtime.h ../py/mpstate.h :
+  /usr/lib/gcc/x86_64-linux-gnu/7/include/stdint.h /usr/include/stdint.h :
+  /usr/include/x86_64-linux-gnu/bits/libc-header-start.h :
+  /usr/include/features.h /usr/include/x86_64-linux-gnu/sys/cdefs.h :
+  /usr/include/x86_64-linux-gnu/bits/wordsize.h :
+  /usr/include/x86_64-linux-gnu/bits/long-double.h :
+  /usr/include/x86_64-linux-gnu/gnu/stubs.h :
+  /usr/include/x86_64-linux-gnu/gnu/stubs-64.h :
+  /usr/include/x86_64-linux-gnu/bits/types.h :
+  /usr/include/x86_64-linux-gnu/bits/typesizes.h :
+  /usr/include/x86_64-linux-gnu/bits/wchar.h :
+  /usr/include/x86_64-linux-gnu/bits/stdint-intn.h :
+  /usr/include/x86_64-linux-gnu/bits/stdint-uintn.h ../py/mpconfig.h :
+  mpconfigport.h /usr/include/alloca.h :
+  /usr/lib/gcc/x86_64-linux-gnu/7/include/stddef.h ../py/mpthread.h :
+  ../py/misc.h /usr/lib/gcc/x86_64-linux-gnu/7/include/stdbool.h :
+  ../py/nlr.h /usr/lib/gcc/x86_64-linux-gnu/7/include-fixed/limits.h :
+  /usr/lib/gcc/x86_64-linux-gnu/7/include-fixed/syslimits.h :
+  /usr/include/limits.h /usr/include/x86_64-linux-gnu/bits/posix1_lim.h :
+  /usr/include/x86_64-linux-gnu/bits/local_lim.h :
+  /usr/include/linux/limits.h :
+  /usr/include/x86_64-linux-gnu/bits/posix2_lim.h /usr/include/assert.h :
+  ../py/obj.h ../py/qstr.h build/genhdr/qstrdefs.generated.h :
+  ../py/mpprint.h ../py/runtime0.h ../py/objlist.h ../py/objexcept.h :
+  ../py/objtuple.h ../py/pystack.h ../py/stackctrl.h :
Binary files MicorpythonOriginal1.12/micropython/mpy-cross/build/py/stream.o and micropython1.12_withUlab/micropython/mpy-cross/build/py/stream.o differ
diff -crNb MicorpythonOriginal1.12/micropython/mpy-cross/build/py/stream.P micropython1.12_withUlab/micropython/mpy-cross/build/py/stream.P
*** MicorpythonOriginal1.12/micropython/mpy-cross/build/py/stream.P	1970-01-01 02:00:00.000000000 +0200
--- micropython1.12_withUlab/micropython/mpy-cross/build/py/stream.P	2020-06-19 18:37:38.679522844 +0200
***************
*** 0 ****
--- 1,82 ----
+ build/py/stream.o: ../py/stream.c /usr/include/stdc-predef.h \
+  /usr/include/string.h \
+  /usr/include/x86_64-linux-gnu/bits/libc-header-start.h \
+  /usr/include/features.h /usr/include/x86_64-linux-gnu/sys/cdefs.h \
+  /usr/include/x86_64-linux-gnu/bits/wordsize.h \
+  /usr/include/x86_64-linux-gnu/bits/long-double.h \
+  /usr/include/x86_64-linux-gnu/gnu/stubs.h \
+  /usr/include/x86_64-linux-gnu/gnu/stubs-64.h \
+  /usr/lib/gcc/x86_64-linux-gnu/7/include/stddef.h \
+  /usr/include/x86_64-linux-gnu/bits/types/locale_t.h \
+  /usr/include/x86_64-linux-gnu/bits/types/__locale_t.h \
+  /usr/include/strings.h \
+  /usr/include/x86_64-linux-gnu/bits/strings_fortified.h \
+  /usr/include/x86_64-linux-gnu/bits/string_fortified.h \
+  /usr/include/unistd.h /usr/include/x86_64-linux-gnu/bits/posix_opt.h \
+  /usr/include/x86_64-linux-gnu/bits/environments.h \
+  /usr/include/x86_64-linux-gnu/bits/types.h \
+  /usr/include/x86_64-linux-gnu/bits/typesizes.h \
+  /usr/include/x86_64-linux-gnu/bits/confname.h \
+  /usr/include/x86_64-linux-gnu/bits/getopt_posix.h \
+  /usr/include/x86_64-linux-gnu/bits/getopt_core.h \
+  /usr/include/x86_64-linux-gnu/bits/unistd.h ../py/objstr.h ../py/obj.h \
+  ../py/mpconfig.h mpconfigport.h /usr/include/alloca.h \
+  /usr/lib/gcc/x86_64-linux-gnu/7/include/stdint.h /usr/include/stdint.h \
+  /usr/include/x86_64-linux-gnu/bits/wchar.h \
+  /usr/include/x86_64-linux-gnu/bits/stdint-intn.h \
+  /usr/include/x86_64-linux-gnu/bits/stdint-uintn.h ../py/misc.h \
+  /usr/lib/gcc/x86_64-linux-gnu/7/include/stdbool.h ../py/qstr.h \
+  build/genhdr/qstrdefs.generated.h ../py/mpprint.h ../py/runtime0.h \
+  ../py/stream.h ../py/mperrno.h /usr/include/errno.h \
+  /usr/include/x86_64-linux-gnu/bits/errno.h /usr/include/linux/errno.h \
+  /usr/include/x86_64-linux-gnu/asm/errno.h \
+  /usr/include/asm-generic/errno.h /usr/include/asm-generic/errno-base.h \
+  ../py/runtime.h ../py/mpstate.h ../py/mpthread.h ../py/nlr.h \
+  /usr/lib/gcc/x86_64-linux-gnu/7/include-fixed/limits.h \
+  /usr/lib/gcc/x86_64-linux-gnu/7/include-fixed/syslimits.h \
+  /usr/include/limits.h /usr/include/x86_64-linux-gnu/bits/posix1_lim.h \
+  /usr/include/x86_64-linux-gnu/bits/local_lim.h \
+  /usr/include/linux/limits.h \
+  /usr/include/x86_64-linux-gnu/bits/posix2_lim.h /usr/include/assert.h \
+  ../py/objlist.h ../py/objexcept.h ../py/objtuple.h ../py/pystack.h
+ ../py/stream.c /usr/include/stdc-predef.h :
+  /usr/include/string.h :
+  /usr/include/x86_64-linux-gnu/bits/libc-header-start.h :
+  /usr/include/features.h /usr/include/x86_64-linux-gnu/sys/cdefs.h :
+  /usr/include/x86_64-linux-gnu/bits/wordsize.h :
+  /usr/include/x86_64-linux-gnu/bits/long-double.h :
+  /usr/include/x86_64-linux-gnu/gnu/stubs.h :
+  /usr/include/x86_64-linux-gnu/gnu/stubs-64.h :
+  /usr/lib/gcc/x86_64-linux-gnu/7/include/stddef.h :
+  /usr/include/x86_64-linux-gnu/bits/types/locale_t.h :
+  /usr/include/x86_64-linux-gnu/bits/types/__locale_t.h :
+  /usr/include/strings.h :
+  /usr/include/x86_64-linux-gnu/bits/strings_fortified.h :
+  /usr/include/x86_64-linux-gnu/bits/string_fortified.h :
+  /usr/include/unistd.h /usr/include/x86_64-linux-gnu/bits/posix_opt.h :
+  /usr/include/x86_64-linux-gnu/bits/environments.h :
+  /usr/include/x86_64-linux-gnu/bits/types.h :
+  /usr/include/x86_64-linux-gnu/bits/typesizes.h :
+  /usr/include/x86_64-linux-gnu/bits/confname.h :
+  /usr/include/x86_64-linux-gnu/bits/getopt_posix.h :
+  /usr/include/x86_64-linux-gnu/bits/getopt_core.h :
+  /usr/include/x86_64-linux-gnu/bits/unistd.h ../py/objstr.h ../py/obj.h :
+  ../py/mpconfig.h mpconfigport.h /usr/include/alloca.h :
+  /usr/lib/gcc/x86_64-linux-gnu/7/include/stdint.h /usr/include/stdint.h :
+  /usr/include/x86_64-linux-gnu/bits/wchar.h :
+  /usr/include/x86_64-linux-gnu/bits/stdint-intn.h :
+  /usr/include/x86_64-linux-gnu/bits/stdint-uintn.h ../py/misc.h :
+  /usr/lib/gcc/x86_64-linux-gnu/7/include/stdbool.h ../py/qstr.h :
+  build/genhdr/qstrdefs.generated.h ../py/mpprint.h ../py/runtime0.h :
+  ../py/stream.h ../py/mperrno.h /usr/include/errno.h :
+  /usr/include/x86_64-linux-gnu/bits/errno.h /usr/include/linux/errno.h :
+  /usr/include/x86_64-linux-gnu/asm/errno.h :
+  /usr/include/asm-generic/errno.h /usr/include/asm-generic/errno-base.h :
+  ../py/runtime.h ../py/mpstate.h ../py/mpthread.h ../py/nlr.h :
+  /usr/lib/gcc/x86_64-linux-gnu/7/include-fixed/limits.h :
+  /usr/lib/gcc/x86_64-linux-gnu/7/include-fixed/syslimits.h :
+  /usr/include/limits.h /usr/include/x86_64-linux-gnu/bits/posix1_lim.h :
+  /usr/include/x86_64-linux-gnu/bits/local_lim.h :
+  /usr/include/linux/limits.h :
+  /usr/include/x86_64-linux-gnu/bits/posix2_lim.h /usr/include/assert.h :
+  ../py/objlist.h ../py/objexcept.h ../py/objtuple.h ../py/pystack.h :
Binary files MicorpythonOriginal1.12/micropython/mpy-cross/build/py/unicode.o and micropython1.12_withUlab/micropython/mpy-cross/build/py/unicode.o differ
diff -crNb MicorpythonOriginal1.12/micropython/mpy-cross/build/py/unicode.P micropython1.12_withUlab/micropython/mpy-cross/build/py/unicode.P
*** MicorpythonOriginal1.12/micropython/mpy-cross/build/py/unicode.P	1970-01-01 02:00:00.000000000 +0200
--- micropython1.12_withUlab/micropython/mpy-cross/build/py/unicode.P	2020-06-14 15:06:49.483515572 +0200
***************
*** 0 ****
--- 1,32 ----
+ build/py/unicode.o: ../py/unicode.c /usr/include/stdc-predef.h \
+  /usr/lib/gcc/x86_64-linux-gnu/7/include/stdint.h /usr/include/stdint.h \
+  /usr/include/x86_64-linux-gnu/bits/libc-header-start.h \
+  /usr/include/features.h /usr/include/x86_64-linux-gnu/sys/cdefs.h \
+  /usr/include/x86_64-linux-gnu/bits/wordsize.h \
+  /usr/include/x86_64-linux-gnu/bits/long-double.h \
+  /usr/include/x86_64-linux-gnu/gnu/stubs.h \
+  /usr/include/x86_64-linux-gnu/gnu/stubs-64.h \
+  /usr/include/x86_64-linux-gnu/bits/types.h \
+  /usr/include/x86_64-linux-gnu/bits/typesizes.h \
+  /usr/include/x86_64-linux-gnu/bits/wchar.h \
+  /usr/include/x86_64-linux-gnu/bits/stdint-intn.h \
+  /usr/include/x86_64-linux-gnu/bits/stdint-uintn.h ../py/unicode.h \
+  ../py/mpconfig.h mpconfigport.h /usr/include/alloca.h \
+  /usr/lib/gcc/x86_64-linux-gnu/7/include/stddef.h ../py/misc.h \
+  /usr/lib/gcc/x86_64-linux-gnu/7/include/stdbool.h
+ ../py/unicode.c /usr/include/stdc-predef.h :
+  /usr/lib/gcc/x86_64-linux-gnu/7/include/stdint.h /usr/include/stdint.h :
+  /usr/include/x86_64-linux-gnu/bits/libc-header-start.h :
+  /usr/include/features.h /usr/include/x86_64-linux-gnu/sys/cdefs.h :
+  /usr/include/x86_64-linux-gnu/bits/wordsize.h :
+  /usr/include/x86_64-linux-gnu/bits/long-double.h :
+  /usr/include/x86_64-linux-gnu/gnu/stubs.h :
+  /usr/include/x86_64-linux-gnu/gnu/stubs-64.h :
+  /usr/include/x86_64-linux-gnu/bits/types.h :
+  /usr/include/x86_64-linux-gnu/bits/typesizes.h :
+  /usr/include/x86_64-linux-gnu/bits/wchar.h :
+  /usr/include/x86_64-linux-gnu/bits/stdint-intn.h :
+  /usr/include/x86_64-linux-gnu/bits/stdint-uintn.h ../py/unicode.h :
+  ../py/mpconfig.h mpconfigport.h /usr/include/alloca.h :
+  /usr/lib/gcc/x86_64-linux-gnu/7/include/stddef.h ../py/misc.h :
+  /usr/lib/gcc/x86_64-linux-gnu/7/include/stdbool.h :
Binary files MicorpythonOriginal1.12/micropython/mpy-cross/build/py/vm.o and micropython1.12_withUlab/micropython/mpy-cross/build/py/vm.o differ
diff -crNb MicorpythonOriginal1.12/micropython/mpy-cross/build/py/vm.P micropython1.12_withUlab/micropython/mpy-cross/build/py/vm.P
*** MicorpythonOriginal1.12/micropython/mpy-cross/build/py/vm.P	1970-01-01 02:00:00.000000000 +0200
--- micropython1.12_withUlab/micropython/mpy-cross/build/py/vm.P	2020-06-19 18:37:39.311509387 +0200
***************
*** 0 ****
--- 1,84 ----
+ build/py/vm.o: ../py/vm.c /usr/include/stdc-predef.h /usr/include/stdio.h \
+  /usr/include/x86_64-linux-gnu/bits/libc-header-start.h \
+  /usr/include/features.h /usr/include/x86_64-linux-gnu/sys/cdefs.h \
+  /usr/include/x86_64-linux-gnu/bits/wordsize.h \
+  /usr/include/x86_64-linux-gnu/bits/long-double.h \
+  /usr/include/x86_64-linux-gnu/gnu/stubs.h \
+  /usr/include/x86_64-linux-gnu/gnu/stubs-64.h \
+  /usr/lib/gcc/x86_64-linux-gnu/7/include/stddef.h \
+  /usr/include/x86_64-linux-gnu/bits/types.h \
+  /usr/include/x86_64-linux-gnu/bits/typesizes.h \
+  /usr/include/x86_64-linux-gnu/bits/types/__FILE.h \
+  /usr/include/x86_64-linux-gnu/bits/types/FILE.h \
+  /usr/include/x86_64-linux-gnu/bits/libio.h \
+  /usr/include/x86_64-linux-gnu/bits/_G_config.h \
+  /usr/include/x86_64-linux-gnu/bits/types/__mbstate_t.h \
+  /usr/lib/gcc/x86_64-linux-gnu/7/include/stdarg.h \
+  /usr/include/x86_64-linux-gnu/bits/stdio_lim.h \
+  /usr/include/x86_64-linux-gnu/bits/sys_errlist.h \
+  /usr/include/x86_64-linux-gnu/bits/stdio.h \
+  /usr/include/x86_64-linux-gnu/bits/stdio2.h /usr/include/string.h \
+  /usr/include/x86_64-linux-gnu/bits/types/locale_t.h \
+  /usr/include/x86_64-linux-gnu/bits/types/__locale_t.h \
+  /usr/include/strings.h \
+  /usr/include/x86_64-linux-gnu/bits/strings_fortified.h \
+  /usr/include/x86_64-linux-gnu/bits/string_fortified.h \
+  /usr/include/assert.h ../py/emitglue.h ../py/obj.h ../py/mpconfig.h \
+  mpconfigport.h /usr/include/alloca.h \
+  /usr/lib/gcc/x86_64-linux-gnu/7/include/stdint.h /usr/include/stdint.h \
+  /usr/include/x86_64-linux-gnu/bits/wchar.h \
+  /usr/include/x86_64-linux-gnu/bits/stdint-intn.h \
+  /usr/include/x86_64-linux-gnu/bits/stdint-uintn.h ../py/misc.h \
+  /usr/lib/gcc/x86_64-linux-gnu/7/include/stdbool.h ../py/qstr.h \
+  build/genhdr/qstrdefs.generated.h ../py/mpprint.h ../py/runtime0.h \
+  ../py/bc.h ../py/runtime.h ../py/mpstate.h ../py/mpthread.h ../py/nlr.h \
+  /usr/lib/gcc/x86_64-linux-gnu/7/include-fixed/limits.h \
+  /usr/lib/gcc/x86_64-linux-gnu/7/include-fixed/syslimits.h \
+  /usr/include/limits.h /usr/include/x86_64-linux-gnu/bits/posix1_lim.h \
+  /usr/include/x86_64-linux-gnu/bits/local_lim.h \
+  /usr/include/linux/limits.h \
+  /usr/include/x86_64-linux-gnu/bits/posix2_lim.h ../py/objlist.h \
+  ../py/objexcept.h ../py/objtuple.h ../py/pystack.h ../py/objfun.h \
+  ../py/objtype.h ../py/bc0.h ../py/profile.h
+ ../py/vm.c /usr/include/stdc-predef.h /usr/include/stdio.h :
+  /usr/include/x86_64-linux-gnu/bits/libc-header-start.h :
+  /usr/include/features.h /usr/include/x86_64-linux-gnu/sys/cdefs.h :
+  /usr/include/x86_64-linux-gnu/bits/wordsize.h :
+  /usr/include/x86_64-linux-gnu/bits/long-double.h :
+  /usr/include/x86_64-linux-gnu/gnu/stubs.h :
+  /usr/include/x86_64-linux-gnu/gnu/stubs-64.h :
+  /usr/lib/gcc/x86_64-linux-gnu/7/include/stddef.h :
+  /usr/include/x86_64-linux-gnu/bits/types.h :
+  /usr/include/x86_64-linux-gnu/bits/typesizes.h :
+  /usr/include/x86_64-linux-gnu/bits/types/__FILE.h :
+  /usr/include/x86_64-linux-gnu/bits/types/FILE.h :
+  /usr/include/x86_64-linux-gnu/bits/libio.h :
+  /usr/include/x86_64-linux-gnu/bits/_G_config.h :
+  /usr/include/x86_64-linux-gnu/bits/types/__mbstate_t.h :
+  /usr/lib/gcc/x86_64-linux-gnu/7/include/stdarg.h :
+  /usr/include/x86_64-linux-gnu/bits/stdio_lim.h :
+  /usr/include/x86_64-linux-gnu/bits/sys_errlist.h :
+  /usr/include/x86_64-linux-gnu/bits/stdio.h :
+  /usr/include/x86_64-linux-gnu/bits/stdio2.h /usr/include/string.h :
+  /usr/include/x86_64-linux-gnu/bits/types/locale_t.h :
+  /usr/include/x86_64-linux-gnu/bits/types/__locale_t.h :
+  /usr/include/strings.h :
+  /usr/include/x86_64-linux-gnu/bits/strings_fortified.h :
+  /usr/include/x86_64-linux-gnu/bits/string_fortified.h :
+  /usr/include/assert.h ../py/emitglue.h ../py/obj.h ../py/mpconfig.h :
+  mpconfigport.h /usr/include/alloca.h :
+  /usr/lib/gcc/x86_64-linux-gnu/7/include/stdint.h /usr/include/stdint.h :
+  /usr/include/x86_64-linux-gnu/bits/wchar.h :
+  /usr/include/x86_64-linux-gnu/bits/stdint-intn.h :
+  /usr/include/x86_64-linux-gnu/bits/stdint-uintn.h ../py/misc.h :
+  /usr/lib/gcc/x86_64-linux-gnu/7/include/stdbool.h ../py/qstr.h :
+  build/genhdr/qstrdefs.generated.h ../py/mpprint.h ../py/runtime0.h :
+  ../py/bc.h ../py/runtime.h ../py/mpstate.h ../py/mpthread.h ../py/nlr.h :
+  /usr/lib/gcc/x86_64-linux-gnu/7/include-fixed/limits.h :
+  /usr/lib/gcc/x86_64-linux-gnu/7/include-fixed/syslimits.h :
+  /usr/include/limits.h /usr/include/x86_64-linux-gnu/bits/posix1_lim.h :
+  /usr/include/x86_64-linux-gnu/bits/local_lim.h :
+  /usr/include/linux/limits.h :
+  /usr/include/x86_64-linux-gnu/bits/posix2_lim.h ../py/objlist.h :
+  ../py/objexcept.h ../py/objtuple.h ../py/pystack.h ../py/objfun.h :
+  ../py/objtype.h ../py/bc0.h ../py/profile.h :
Binary files MicorpythonOriginal1.12/micropython/mpy-cross/build/py/vstr.o and micropython1.12_withUlab/micropython/mpy-cross/build/py/vstr.o differ
diff -crNb MicorpythonOriginal1.12/micropython/mpy-cross/build/py/vstr.P micropython1.12_withUlab/micropython/mpy-cross/build/py/vstr.P
*** MicorpythonOriginal1.12/micropython/mpy-cross/build/py/vstr.P	1970-01-01 02:00:00.000000000 +0200
--- micropython1.12_withUlab/micropython/mpy-cross/build/py/vstr.P	2020-06-19 18:37:33.103642640 +0200
***************
*** 0 ****
--- 1,80 ----
+ build/py/vstr.o: ../py/vstr.c /usr/include/stdc-predef.h \
+  /usr/include/stdio.h \
+  /usr/include/x86_64-linux-gnu/bits/libc-header-start.h \
+  /usr/include/features.h /usr/include/x86_64-linux-gnu/sys/cdefs.h \
+  /usr/include/x86_64-linux-gnu/bits/wordsize.h \
+  /usr/include/x86_64-linux-gnu/bits/long-double.h \
+  /usr/include/x86_64-linux-gnu/gnu/stubs.h \
+  /usr/include/x86_64-linux-gnu/gnu/stubs-64.h \
+  /usr/lib/gcc/x86_64-linux-gnu/7/include/stddef.h \
+  /usr/include/x86_64-linux-gnu/bits/types.h \
+  /usr/include/x86_64-linux-gnu/bits/typesizes.h \
+  /usr/include/x86_64-linux-gnu/bits/types/__FILE.h \
+  /usr/include/x86_64-linux-gnu/bits/types/FILE.h \
+  /usr/include/x86_64-linux-gnu/bits/libio.h \
+  /usr/include/x86_64-linux-gnu/bits/_G_config.h \
+  /usr/include/x86_64-linux-gnu/bits/types/__mbstate_t.h \
+  /usr/lib/gcc/x86_64-linux-gnu/7/include/stdarg.h \
+  /usr/include/x86_64-linux-gnu/bits/stdio_lim.h \
+  /usr/include/x86_64-linux-gnu/bits/sys_errlist.h \
+  /usr/include/x86_64-linux-gnu/bits/stdio2.h /usr/include/string.h \
+  /usr/include/x86_64-linux-gnu/bits/types/locale_t.h \
+  /usr/include/x86_64-linux-gnu/bits/types/__locale_t.h \
+  /usr/include/strings.h \
+  /usr/include/x86_64-linux-gnu/bits/strings_fortified.h \
+  /usr/include/x86_64-linux-gnu/bits/string_fortified.h \
+  /usr/include/assert.h ../py/mpconfig.h mpconfigport.h \
+  /usr/include/alloca.h /usr/lib/gcc/x86_64-linux-gnu/7/include/stdint.h \
+  /usr/include/stdint.h /usr/include/x86_64-linux-gnu/bits/wchar.h \
+  /usr/include/x86_64-linux-gnu/bits/stdint-intn.h \
+  /usr/include/x86_64-linux-gnu/bits/stdint-uintn.h ../py/runtime.h \
+  ../py/mpstate.h ../py/mpthread.h ../py/misc.h \
+  /usr/lib/gcc/x86_64-linux-gnu/7/include/stdbool.h ../py/nlr.h \
+  /usr/lib/gcc/x86_64-linux-gnu/7/include-fixed/limits.h \
+  /usr/lib/gcc/x86_64-linux-gnu/7/include-fixed/syslimits.h \
+  /usr/include/limits.h /usr/include/x86_64-linux-gnu/bits/posix1_lim.h \
+  /usr/include/x86_64-linux-gnu/bits/local_lim.h \
+  /usr/include/linux/limits.h \
+  /usr/include/x86_64-linux-gnu/bits/posix2_lim.h ../py/obj.h ../py/qstr.h \
+  build/genhdr/qstrdefs.generated.h ../py/mpprint.h ../py/runtime0.h \
+  ../py/objlist.h ../py/objexcept.h ../py/objtuple.h ../py/pystack.h
+ ../py/vstr.c /usr/include/stdc-predef.h :
+  /usr/include/stdio.h :
+  /usr/include/x86_64-linux-gnu/bits/libc-header-start.h :
+  /usr/include/features.h /usr/include/x86_64-linux-gnu/sys/cdefs.h :
+  /usr/include/x86_64-linux-gnu/bits/wordsize.h :
+  /usr/include/x86_64-linux-gnu/bits/long-double.h :
+  /usr/include/x86_64-linux-gnu/gnu/stubs.h :
+  /usr/include/x86_64-linux-gnu/gnu/stubs-64.h :
+  /usr/lib/gcc/x86_64-linux-gnu/7/include/stddef.h :
+  /usr/include/x86_64-linux-gnu/bits/types.h :
+  /usr/include/x86_64-linux-gnu/bits/typesizes.h :
+  /usr/include/x86_64-linux-gnu/bits/types/__FILE.h :
+  /usr/include/x86_64-linux-gnu/bits/types/FILE.h :
+  /usr/include/x86_64-linux-gnu/bits/libio.h :
+  /usr/include/x86_64-linux-gnu/bits/_G_config.h :
+  /usr/include/x86_64-linux-gnu/bits/types/__mbstate_t.h :
+  /usr/lib/gcc/x86_64-linux-gnu/7/include/stdarg.h :
+  /usr/include/x86_64-linux-gnu/bits/stdio_lim.h :
+  /usr/include/x86_64-linux-gnu/bits/sys_errlist.h :
+  /usr/include/x86_64-linux-gnu/bits/stdio2.h /usr/include/string.h :
+  /usr/include/x86_64-linux-gnu/bits/types/locale_t.h :
+  /usr/include/x86_64-linux-gnu/bits/types/__locale_t.h :
+  /usr/include/strings.h :
+  /usr/include/x86_64-linux-gnu/bits/strings_fortified.h :
+  /usr/include/x86_64-linux-gnu/bits/string_fortified.h :
+  /usr/include/assert.h ../py/mpconfig.h mpconfigport.h :
+  /usr/include/alloca.h /usr/lib/gcc/x86_64-linux-gnu/7/include/stdint.h :
+  /usr/include/stdint.h /usr/include/x86_64-linux-gnu/bits/wchar.h :
+  /usr/include/x86_64-linux-gnu/bits/stdint-intn.h :
+  /usr/include/x86_64-linux-gnu/bits/stdint-uintn.h ../py/runtime.h :
+  ../py/mpstate.h ../py/mpthread.h ../py/misc.h :
+  /usr/lib/gcc/x86_64-linux-gnu/7/include/stdbool.h ../py/nlr.h :
+  /usr/lib/gcc/x86_64-linux-gnu/7/include-fixed/limits.h :
+  /usr/lib/gcc/x86_64-linux-gnu/7/include-fixed/syslimits.h :
+  /usr/include/limits.h /usr/include/x86_64-linux-gnu/bits/posix1_lim.h :
+  /usr/include/x86_64-linux-gnu/bits/local_lim.h :
+  /usr/include/linux/limits.h :
+  /usr/include/x86_64-linux-gnu/bits/posix2_lim.h ../py/obj.h ../py/qstr.h :
+  build/genhdr/qstrdefs.generated.h ../py/mpprint.h ../py/runtime0.h :
+  ../py/objlist.h ../py/objexcept.h ../py/objtuple.h ../py/pystack.h :
Binary files MicorpythonOriginal1.12/micropython/mpy-cross/build/py/warning.o and micropython1.12_withUlab/micropython/mpy-cross/build/py/warning.o differ
diff -crNb MicorpythonOriginal1.12/micropython/mpy-cross/build/py/warning.P micropython1.12_withUlab/micropython/mpy-cross/build/py/warning.P
*** MicorpythonOriginal1.12/micropython/mpy-cross/build/py/warning.P	1970-01-01 02:00:00.000000000 +0200
--- micropython1.12_withUlab/micropython/mpy-cross/build/py/warning.P	2020-06-19 18:37:36.587567565 +0200
***************
*** 0 ****
--- 1,74 ----
+ build/py/warning.o: ../py/warning.c /usr/include/stdc-predef.h \
+  /usr/lib/gcc/x86_64-linux-gnu/7/include/stdarg.h /usr/include/stdio.h \
+  /usr/include/x86_64-linux-gnu/bits/libc-header-start.h \
+  /usr/include/features.h /usr/include/x86_64-linux-gnu/sys/cdefs.h \
+  /usr/include/x86_64-linux-gnu/bits/wordsize.h \
+  /usr/include/x86_64-linux-gnu/bits/long-double.h \
+  /usr/include/x86_64-linux-gnu/gnu/stubs.h \
+  /usr/include/x86_64-linux-gnu/gnu/stubs-64.h \
+  /usr/lib/gcc/x86_64-linux-gnu/7/include/stddef.h \
+  /usr/include/x86_64-linux-gnu/bits/types.h \
+  /usr/include/x86_64-linux-gnu/bits/typesizes.h \
+  /usr/include/x86_64-linux-gnu/bits/types/__FILE.h \
+  /usr/include/x86_64-linux-gnu/bits/types/FILE.h \
+  /usr/include/x86_64-linux-gnu/bits/libio.h \
+  /usr/include/x86_64-linux-gnu/bits/_G_config.h \
+  /usr/include/x86_64-linux-gnu/bits/types/__mbstate_t.h \
+  /usr/include/x86_64-linux-gnu/bits/stdio_lim.h \
+  /usr/include/x86_64-linux-gnu/bits/sys_errlist.h \
+  /usr/include/x86_64-linux-gnu/bits/stdio2.h ../py/emit.h ../py/lexer.h \
+  /usr/lib/gcc/x86_64-linux-gnu/7/include/stdint.h /usr/include/stdint.h \
+  /usr/include/x86_64-linux-gnu/bits/wchar.h \
+  /usr/include/x86_64-linux-gnu/bits/stdint-intn.h \
+  /usr/include/x86_64-linux-gnu/bits/stdint-uintn.h ../py/mpconfig.h \
+  mpconfigport.h /usr/include/alloca.h ../py/qstr.h ../py/misc.h \
+  /usr/lib/gcc/x86_64-linux-gnu/7/include/stdbool.h \
+  build/genhdr/qstrdefs.generated.h ../py/reader.h ../py/obj.h \
+  ../py/mpprint.h ../py/runtime0.h ../py/scope.h ../py/parse.h \
+  ../py/emitglue.h ../py/bc.h ../py/runtime.h ../py/mpstate.h \
+  ../py/mpthread.h ../py/nlr.h \
+  /usr/lib/gcc/x86_64-linux-gnu/7/include-fixed/limits.h \
+  /usr/lib/gcc/x86_64-linux-gnu/7/include-fixed/syslimits.h \
+  /usr/include/limits.h /usr/include/x86_64-linux-gnu/bits/posix1_lim.h \
+  /usr/include/x86_64-linux-gnu/bits/local_lim.h \
+  /usr/include/linux/limits.h \
+  /usr/include/x86_64-linux-gnu/bits/posix2_lim.h /usr/include/assert.h \
+  ../py/objlist.h ../py/objexcept.h ../py/objtuple.h ../py/pystack.h \
+  ../py/objfun.h
+ ../py/warning.c /usr/include/stdc-predef.h :
+  /usr/lib/gcc/x86_64-linux-gnu/7/include/stdarg.h /usr/include/stdio.h :
+  /usr/include/x86_64-linux-gnu/bits/libc-header-start.h :
+  /usr/include/features.h /usr/include/x86_64-linux-gnu/sys/cdefs.h :
+  /usr/include/x86_64-linux-gnu/bits/wordsize.h :
+  /usr/include/x86_64-linux-gnu/bits/long-double.h :
+  /usr/include/x86_64-linux-gnu/gnu/stubs.h :
+  /usr/include/x86_64-linux-gnu/gnu/stubs-64.h :
+  /usr/lib/gcc/x86_64-linux-gnu/7/include/stddef.h :
+  /usr/include/x86_64-linux-gnu/bits/types.h :
+  /usr/include/x86_64-linux-gnu/bits/typesizes.h :
+  /usr/include/x86_64-linux-gnu/bits/types/__FILE.h :
+  /usr/include/x86_64-linux-gnu/bits/types/FILE.h :
+  /usr/include/x86_64-linux-gnu/bits/libio.h :
+  /usr/include/x86_64-linux-gnu/bits/_G_config.h :
+  /usr/include/x86_64-linux-gnu/bits/types/__mbstate_t.h :
+  /usr/include/x86_64-linux-gnu/bits/stdio_lim.h :
+  /usr/include/x86_64-linux-gnu/bits/sys_errlist.h :
+  /usr/include/x86_64-linux-gnu/bits/stdio2.h ../py/emit.h ../py/lexer.h :
+  /usr/lib/gcc/x86_64-linux-gnu/7/include/stdint.h /usr/include/stdint.h :
+  /usr/include/x86_64-linux-gnu/bits/wchar.h :
+  /usr/include/x86_64-linux-gnu/bits/stdint-intn.h :
+  /usr/include/x86_64-linux-gnu/bits/stdint-uintn.h ../py/mpconfig.h :
+  mpconfigport.h /usr/include/alloca.h ../py/qstr.h ../py/misc.h :
+  /usr/lib/gcc/x86_64-linux-gnu/7/include/stdbool.h :
+  build/genhdr/qstrdefs.generated.h ../py/reader.h ../py/obj.h :
+  ../py/mpprint.h ../py/runtime0.h ../py/scope.h ../py/parse.h :
+  ../py/emitglue.h ../py/bc.h ../py/runtime.h ../py/mpstate.h :
+  ../py/mpthread.h ../py/nlr.h :
+  /usr/lib/gcc/x86_64-linux-gnu/7/include-fixed/limits.h :
+  /usr/lib/gcc/x86_64-linux-gnu/7/include-fixed/syslimits.h :
+  /usr/include/limits.h /usr/include/x86_64-linux-gnu/bits/posix1_lim.h :
+  /usr/include/x86_64-linux-gnu/bits/local_lim.h :
+  /usr/include/linux/limits.h :
+  /usr/include/x86_64-linux-gnu/bits/posix2_lim.h /usr/include/assert.h :
+  ../py/objlist.h ../py/objexcept.h ../py/objtuple.h ../py/pystack.h :
+  ../py/objfun.h :
Binary files MicorpythonOriginal1.12/micropython/mpy-cross/mpy-cross and micropython1.12_withUlab/micropython/mpy-cross/mpy-cross differ
diff -crNb MicorpythonOriginal1.12/micropython/mpy-cross/mpy-cross.map micropython1.12_withUlab/micropython/mpy-cross/mpy-cross.map
*** MicorpythonOriginal1.12/micropython/mpy-cross/mpy-cross.map	1970-01-01 02:00:00.000000000 +0200
--- micropython1.12_withUlab/micropython/mpy-cross/mpy-cross.map	2020-06-19 20:01:44.651671099 +0200
***************
*** 0 ****
--- 1,15281 ----
+ Archive member included to satisfy reference by file (symbol)
+ 
+ /usr/lib/x86_64-linux-gnu/libc_nonshared.a(elf-init.oS)
+                               /usr/lib/gcc/x86_64-linux-gnu/7/../../../x86_64-linux-gnu/Scrt1.o (__libc_csu_init)
+ 
+ As-needed library included to satisfy reference by file (symbol)
+ 
+ libm.so.6                     build/py/objfloat.o (fmod@@GLIBC_2.2.5)
+ libc.so.6                     build/main.o (__printf_chk@@GLIBC_2.3.4)
+ 
+ Allocating common symbols
+ Common symbol       size              file
+ 
+ mp_state_ctx        0x348             build/py/mpstate.o
+ 
+ Discarded input sections
+ 
+  .rodata.cst4   0x0000000000000000        0x4 /usr/lib/gcc/x86_64-linux-gnu/7/../../../x86_64-linux-gnu/Scrt1.o
+  .data          0x0000000000000000        0x4 /usr/lib/gcc/x86_64-linux-gnu/7/../../../x86_64-linux-gnu/Scrt1.o
+  .bss           0x0000000000000000        0x0 /usr/lib/gcc/x86_64-linux-gnu/7/../../../x86_64-linux-gnu/Scrt1.o
+  .note.GNU-stack
+                 0x0000000000000000        0x0 /usr/lib/gcc/x86_64-linux-gnu/7/../../../x86_64-linux-gnu/Scrt1.o
+  .text          0x0000000000000000        0x0 /usr/lib/gcc/x86_64-linux-gnu/7/../../../x86_64-linux-gnu/crti.o
+  .data          0x0000000000000000        0x0 /usr/lib/gcc/x86_64-linux-gnu/7/../../../x86_64-linux-gnu/crti.o
+  .bss           0x0000000000000000        0x0 /usr/lib/gcc/x86_64-linux-gnu/7/../../../x86_64-linux-gnu/crti.o
+  .note.GNU-stack
+                 0x0000000000000000        0x0 /usr/lib/gcc/x86_64-linux-gnu/7/../../../x86_64-linux-gnu/crti.o
+  .data          0x0000000000000000        0x0 /usr/lib/gcc/x86_64-linux-gnu/7/crtbeginS.o
+  .note.GNU-stack
+                 0x0000000000000000        0x0 /usr/lib/gcc/x86_64-linux-gnu/7/crtbeginS.o
+  .text          0x0000000000000000        0x0 build/py/mpstate.o
+  .data          0x0000000000000000        0x0 build/py/mpstate.o
+  .bss           0x0000000000000000        0x0 build/py/mpstate.o
+  .note.GNU-stack
+                 0x0000000000000000        0x0 build/py/mpstate.o
+  .text          0x0000000000000000        0x0 build/py/nlr.o
+  .data          0x0000000000000000        0x0 build/py/nlr.o
+  .bss           0x0000000000000000        0x0 build/py/nlr.o
+  .note.GNU-stack
+                 0x0000000000000000        0x0 build/py/nlr.o
+  .text          0x0000000000000000        0x0 build/py/nlrx86.o
+  .data          0x0000000000000000        0x0 build/py/nlrx86.o
+  .bss           0x0000000000000000        0x0 build/py/nlrx86.o
+  .comment       0x0000000000000000       0x2a build/py/nlrx86.o
+  .note.GNU-stack
+                 0x0000000000000000        0x0 build/py/nlrx86.o
+  .text          0x0000000000000000        0x0 build/py/nlrx64.o
+  .data          0x0000000000000000        0x0 build/py/nlrx64.o
+  .bss           0x0000000000000000        0x0 build/py/nlrx64.o
+  .note.GNU-stack
+                 0x0000000000000000        0x0 build/py/nlrx64.o
+  .text          0x0000000000000000        0x0 build/py/nlrthumb.o
+  .data          0x0000000000000000        0x0 build/py/nlrthumb.o
+  .bss           0x0000000000000000        0x0 build/py/nlrthumb.o
+  .comment       0x0000000000000000       0x2a build/py/nlrthumb.o
+  .note.GNU-stack
+                 0x0000000000000000        0x0 build/py/nlrthumb.o
+  .text          0x0000000000000000        0x0 build/py/nlrpowerpc.o
+  .data          0x0000000000000000        0x0 build/py/nlrpowerpc.o
+  .bss           0x0000000000000000        0x0 build/py/nlrpowerpc.o
+  .comment       0x0000000000000000       0x2a build/py/nlrpowerpc.o
+  .note.GNU-stack
+                 0x0000000000000000        0x0 build/py/nlrpowerpc.o
+  .text          0x0000000000000000        0x0 build/py/nlrxtensa.o
+  .data          0x0000000000000000        0x0 build/py/nlrxtensa.o
+  .bss           0x0000000000000000        0x0 build/py/nlrxtensa.o
+  .comment       0x0000000000000000       0x2a build/py/nlrxtensa.o
+  .note.GNU-stack
+                 0x0000000000000000        0x0 build/py/nlrxtensa.o
+  .text          0x0000000000000000        0x0 build/py/nlrsetjmp.o
+  .data          0x0000000000000000        0x0 build/py/nlrsetjmp.o
+  .bss           0x0000000000000000        0x0 build/py/nlrsetjmp.o
+  .comment       0x0000000000000000       0x2a build/py/nlrsetjmp.o
+  .note.GNU-stack
+                 0x0000000000000000        0x0 build/py/nlrsetjmp.o
+  .text          0x0000000000000000        0x0 build/py/malloc.o
+  .data          0x0000000000000000        0x0 build/py/malloc.o
+  .bss           0x0000000000000000        0x0 build/py/malloc.o
+  .note.GNU-stack
+                 0x0000000000000000        0x0 build/py/malloc.o
+  .text          0x0000000000000000        0x0 build/py/gc.o
+  .data          0x0000000000000000        0x0 build/py/gc.o
+  .bss           0x0000000000000000        0x0 build/py/gc.o
+  .text.gc_lock  0x0000000000000000        0x9 build/py/gc.o
+  .text.gc_unlock
+                 0x0000000000000000        0x9 build/py/gc.o
+  .text.gc_sweep_all
+                 0x0000000000000000       0x17 build/py/gc.o
+  .text.gc_info  0x0000000000000000      0x1a2 build/py/gc.o
+  .text.gc_nbytes
+                 0x0000000000000000       0x8b build/py/gc.o
+  .rodata.gc_dump_info.str1.8
+                 0x0000000000000000       0x6d build/py/gc.o
+  .text.gc_dump_info
+                 0x0000000000000000      0x1a4 build/py/gc.o
+  .rodata.gc_dump_alloc_table.str1.1
+                 0x0000000000000000       0x44 build/py/gc.o
+  .text.gc_dump_alloc_table
+                 0x0000000000000000      0x2a2 build/py/gc.o
+  .note.GNU-stack
+                 0x0000000000000000        0x0 build/py/gc.o
+  .text          0x0000000000000000        0x0 build/py/pystack.o
+  .data          0x0000000000000000        0x0 build/py/pystack.o
+  .bss           0x0000000000000000        0x0 build/py/pystack.o
+  .comment       0x0000000000000000       0x2a build/py/pystack.o
+  .note.GNU-stack
+                 0x0000000000000000        0x0 build/py/pystack.o
+  .text          0x0000000000000000        0x0 build/py/qstr.o
+  .data          0x0000000000000000        0x0 build/py/qstr.o
+  .bss           0x0000000000000000        0x0 build/py/qstr.o
+  .text.qstr_pool_info
+                 0x0000000000000000       0xa4 build/py/qstr.o
+  .note.GNU-stack
+                 0x0000000000000000        0x0 build/py/qstr.o
+  .text          0x0000000000000000        0x0 build/py/vstr.o
+  .data          0x0000000000000000        0x0 build/py/vstr.o
+  .bss           0x0000000000000000        0x0 build/py/vstr.o
+  .text.vstr_ins_blank_bytes.constprop.2
+                 0x0000000000000000       0x47 build/py/vstr.o
+  .text.vstr_init_fixed_buf
+                 0x0000000000000000       0x14 build/py/vstr.o
+  .text.vstr_new
+                 0x0000000000000000       0x2d build/py/vstr.o
+  .text.vstr_free
+                 0x0000000000000000       0x22 build/py/vstr.o
+  .text.vstr_hint_size
+                 0x0000000000000000        0x5 build/py/vstr.o
+  .text.vstr_ins_byte
+                 0x0000000000000000        0xc build/py/vstr.o
+  .text.vstr_ins_char
+                 0x0000000000000000        0xc build/py/vstr.o
+  .text.vstr_cut_out_bytes
+                 0x0000000000000000       0x48 build/py/vstr.o
+  .text.vstr_cut_head_bytes
+                 0x0000000000000000        0xa build/py/vstr.o
+  .text.vstr_vprintf
+                 0x0000000000000000       0x49 build/py/vstr.o
+  .text.vstr_printf
+                 0x0000000000000000       0xb1 build/py/vstr.o
+  .note.GNU-stack
+                 0x0000000000000000        0x0 build/py/vstr.o
+  .text          0x0000000000000000        0x0 build/py/mpprint.o
+  .data          0x0000000000000000        0x0 build/py/mpprint.o
+  .bss           0x0000000000000000        0x0 build/py/mpprint.o
+  .text.plat_print_strn
+                 0x0000000000000000        0x1 build/py/mpprint.o
+  .data.rel.ro.local.mp_plat_print
+                 0x0000000000000000       0x10 build/py/mpprint.o
+  .note.GNU-stack
+                 0x0000000000000000        0x0 build/py/mpprint.o
+  .text          0x0000000000000000        0x0 build/py/unicode.o
+  .data          0x0000000000000000        0x0 build/py/unicode.o
+  .bss           0x0000000000000000        0x0 build/py/unicode.o
+  .text.unichar_isident
+                 0x0000000000000000       0x26 build/py/unicode.o
+  .note.GNU-stack
+                 0x0000000000000000        0x0 build/py/unicode.o
+  .text          0x0000000000000000        0x0 build/py/mpz.o
+  .data          0x0000000000000000        0x0 build/py/mpz.o
+  .bss           0x0000000000000000        0x0 build/py/mpz.o
+  .text.mpz_pow3_inpl
+                 0x0000000000000000      0x138 build/py/mpz.o
+  .text.mpz_as_uint_checked
+                 0x0000000000000000       0x3d build/py/mpz.o
+  .note.GNU-stack
+                 0x0000000000000000        0x0 build/py/mpz.o
+  .text          0x0000000000000000        0x0 build/py/reader.o
+  .data          0x0000000000000000        0x0 build/py/reader.o
+  .bss           0x0000000000000000        0x0 build/py/reader.o
+  .text.mp_reader_mem_readbyte
+                 0x0000000000000000       0x1a build/py/reader.o
+  .text.mp_reader_mem_close
+                 0x0000000000000000       0x1c build/py/reader.o
+  .text.mp_reader_new_mem
+                 0x0000000000000000       0x54 build/py/reader.o
+  .note.GNU-stack
+                 0x0000000000000000        0x0 build/py/reader.o
+  .text          0x0000000000000000        0x0 build/py/lexer.o
+  .data          0x0000000000000000        0x0 build/py/lexer.o
+  .bss           0x0000000000000000        0x0 build/py/lexer.o
+  .text.mp_lexer_new_from_str_len
+                 0x0000000000000000       0x57 build/py/lexer.o
+  .text.mp_lexer_new_from_fd
+                 0x0000000000000000       0x5a build/py/lexer.o
+  .note.GNU-stack
+                 0x0000000000000000        0x0 build/py/lexer.o
+  .text          0x0000000000000000        0x0 build/py/parse.o
+  .data          0x0000000000000000        0x0 build/py/parse.o
+  .bss           0x0000000000000000        0x0 build/py/parse.o
+  .note.GNU-stack
+                 0x0000000000000000        0x0 build/py/parse.o
+  .text          0x0000000000000000        0x0 build/py/scope.o
+  .data          0x0000000000000000        0x0 build/py/scope.o
+  .bss           0x0000000000000000        0x0 build/py/scope.o
+  .note.GNU-stack
+                 0x0000000000000000        0x0 build/py/scope.o
+  .text          0x0000000000000000        0x0 build/py/compile.o
+  .data          0x0000000000000000        0x0 build/py/compile.o
+  .bss           0x0000000000000000        0x0 build/py/compile.o
+  .text.mp_compile
+                 0x0000000000000000       0x19 build/py/compile.o
+  .note.GNU-stack
+                 0x0000000000000000        0x0 build/py/compile.o
+  .text          0x0000000000000000        0x0 build/py/mpfile.o
+  .data          0x0000000000000000        0x0 build/py/mpfile.o
+  .bss           0x0000000000000000        0x0 build/py/mpfile.o
+  .rodata.mp_file_print.str1.1
+                 0x0000000000000000        0xd build/py/mpfile.o
+  .text.mp_file_print
+                 0x0000000000000000       0x11 build/py/mpfile.o
+  .text.mp_file_from_file_obj
+                 0x0000000000000000       0x31 build/py/mpfile.o
+  .text.mp_open  0x0000000000000000       0xa0 build/py/mpfile.o
+  .text.mp_readinto
+                 0x0000000000000000       0x6a build/py/mpfile.o
+  .text.mp_seek  0x0000000000000000       0x55 build/py/mpfile.o
+  .text.mp_tell  0x0000000000000000       0x35 build/py/mpfile.o
+  .text.mp_close
+                 0x0000000000000000       0x32 build/py/mpfile.o
+  .text.mp___del__
+                 0x0000000000000000       0x12 build/py/mpfile.o
+  .data.rel.ro.mp_file_locals_dict
+                 0x0000000000000000       0x20 build/py/mpfile.o
+  .data.rel.ro.local.mp_file_locals_dict_table
+                 0x0000000000000000       0x10 build/py/mpfile.o
+  .data.rel.ro.mp___del___obj
+                 0x0000000000000000       0x10 build/py/mpfile.o
+  .data.rel.ro.mp_file_type
+                 0x0000000000000000       0x78 build/py/mpfile.o
+  .comment       0x0000000000000000       0x2a build/py/mpfile.o
+  .note.GNU-stack
+                 0x0000000000000000        0x0 build/py/mpfile.o
+  .text          0x0000000000000000        0x0 build/py/emitcommon.o
+  .data          0x0000000000000000        0x0 build/py/emitcommon.o
+  .bss           0x0000000000000000        0x0 build/py/emitcommon.o
+  .note.GNU-stack
+                 0x0000000000000000        0x0 build/py/emitcommon.o
+  .text          0x0000000000000000        0x0 build/py/emitbc.o
+  .data          0x0000000000000000        0x0 build/py/emitbc.o
+  .bss           0x0000000000000000        0x0 build/py/emitbc.o
+  .note.GNU-stack
+                 0x0000000000000000        0x0 build/py/emitbc.o
+  .text          0x0000000000000000        0x0 build/py/asmbase.o
+  .data          0x0000000000000000        0x0 build/py/asmbase.o
+  .bss           0x0000000000000000        0x0 build/py/asmbase.o
+  .note.GNU-stack
+                 0x0000000000000000        0x0 build/py/asmbase.o
+  .text          0x0000000000000000        0x0 build/py/asmx64.o
+  .data          0x0000000000000000        0x0 build/py/asmx64.o
+  .bss           0x0000000000000000        0x0 build/py/asmx64.o
+  .text.asm_x64_nop
+                 0x0000000000000000        0xa build/py/asmx64.o
+  .text.asm_x64_push_r64
+                 0x0000000000000000       0x23 build/py/asmx64.o
+  .text.asm_x64_pop_r64
+                 0x0000000000000000       0x23 build/py/asmx64.o
+  .note.GNU-stack
+                 0x0000000000000000        0x0 build/py/asmx64.o
+  .text          0x0000000000000000        0x0 build/py/emitnx64.o
+  .data          0x0000000000000000        0x0 build/py/emitnx64.o
+  .bss           0x0000000000000000        0x0 build/py/emitnx64.o
+  .note.GNU-stack
+                 0x0000000000000000        0x0 build/py/emitnx64.o
+  .text          0x0000000000000000        0x0 build/py/asmx86.o
+  .data          0x0000000000000000        0x0 build/py/asmx86.o
+  .bss           0x0000000000000000        0x0 build/py/asmx86.o
+  .note.GNU-stack
+                 0x0000000000000000        0x0 build/py/asmx86.o
+  .text          0x0000000000000000        0x0 build/py/emitnx86.o
+  .data          0x0000000000000000        0x0 build/py/emitnx86.o
+  .bss           0x0000000000000000        0x0 build/py/emitnx86.o
+  .note.GNU-stack
+                 0x0000000000000000        0x0 build/py/emitnx86.o
+  .text          0x0000000000000000        0x0 build/py/asmthumb.o
+  .data          0x0000000000000000        0x0 build/py/asmthumb.o
+  .bss           0x0000000000000000        0x0 build/py/asmthumb.o
+  .note.GNU-stack
+                 0x0000000000000000        0x0 build/py/asmthumb.o
+  .text          0x0000000000000000        0x0 build/py/emitnthumb.o
+  .data          0x0000000000000000        0x0 build/py/emitnthumb.o
+  .bss           0x0000000000000000        0x0 build/py/emitnthumb.o
+  .note.GNU-stack
+                 0x0000000000000000        0x0 build/py/emitnthumb.o
+  .text          0x0000000000000000        0x0 build/py/emitinlinethumb.o
+  .data          0x0000000000000000        0x0 build/py/emitinlinethumb.o
+  .bss           0x0000000000000000        0x0 build/py/emitinlinethumb.o
+  .note.GNU-stack
+                 0x0000000000000000        0x0 build/py/emitinlinethumb.o
+  .text          0x0000000000000000        0x0 build/py/asmarm.o
+  .data          0x0000000000000000        0x0 build/py/asmarm.o
+  .bss           0x0000000000000000        0x0 build/py/asmarm.o
+  .text.asm_arm_bkpt
+                 0x0000000000000000        0xa build/py/asmarm.o
+  .text.asm_arm_push
+                 0x0000000000000000        0xe build/py/asmarm.o
+  .text.asm_arm_pop
+                 0x0000000000000000        0xe build/py/asmarm.o
+  .note.GNU-stack
+                 0x0000000000000000        0x0 build/py/asmarm.o
+  .text          0x0000000000000000        0x0 build/py/emitnarm.o
+  .data          0x0000000000000000        0x0 build/py/emitnarm.o
+  .bss           0x0000000000000000        0x0 build/py/emitnarm.o
+  .note.GNU-stack
+                 0x0000000000000000        0x0 build/py/emitnarm.o
+  .text          0x0000000000000000        0x0 build/py/asmxtensa.o
+  .data          0x0000000000000000        0x0 build/py/asmxtensa.o
+  .bss           0x0000000000000000        0x0 build/py/asmxtensa.o
+  .note.GNU-stack
+                 0x0000000000000000        0x0 build/py/asmxtensa.o
+  .text          0x0000000000000000        0x0 build/py/emitnxtensa.o
+  .data          0x0000000000000000        0x0 build/py/emitnxtensa.o
+  .bss           0x0000000000000000        0x0 build/py/emitnxtensa.o
+  .note.GNU-stack
+                 0x0000000000000000        0x0 build/py/emitnxtensa.o
+  .text          0x0000000000000000        0x0 build/py/emitinlinextensa.o
+  .data          0x0000000000000000        0x0 build/py/emitinlinextensa.o
+  .bss           0x0000000000000000        0x0 build/py/emitinlinextensa.o
+  .note.GNU-stack
+                 0x0000000000000000        0x0 build/py/emitinlinextensa.o
+  .text          0x0000000000000000        0x0 build/py/emitnxtensawin.o
+  .data          0x0000000000000000        0x0 build/py/emitnxtensawin.o
+  .bss           0x0000000000000000        0x0 build/py/emitnxtensawin.o
+  .note.GNU-stack
+                 0x0000000000000000        0x0 build/py/emitnxtensawin.o
+  .text          0x0000000000000000        0x0 build/py/formatfloat.o
+  .data          0x0000000000000000        0x0 build/py/formatfloat.o
+  .bss           0x0000000000000000        0x0 build/py/formatfloat.o
+  .note.GNU-stack
+                 0x0000000000000000        0x0 build/py/formatfloat.o
+  .text          0x0000000000000000        0x0 build/py/parsenumbase.o
+  .data          0x0000000000000000        0x0 build/py/parsenumbase.o
+  .bss           0x0000000000000000        0x0 build/py/parsenumbase.o
+  .note.GNU-stack
+                 0x0000000000000000        0x0 build/py/parsenumbase.o
+  .text          0x0000000000000000        0x0 build/py/parsenum.o
+  .data          0x0000000000000000        0x0 build/py/parsenum.o
+  .bss           0x0000000000000000        0x0 build/py/parsenum.o
+  .note.GNU-stack
+                 0x0000000000000000        0x0 build/py/parsenum.o
+  .text          0x0000000000000000        0x0 build/py/emitglue.o
+  .data          0x0000000000000000        0x0 build/py/emitglue.o
+  .bss           0x0000000000000000        0x0 build/py/emitglue.o
+  .rodata.mp_make_function_from_raw_code.str1.1
+                 0x0000000000000000       0xb5 build/py/emitglue.o
+  .text.mp_make_function_from_raw_code
+                 0x0000000000000000      0x122 build/py/emitglue.o
+  .text.mp_make_closure_from_raw_code
+                 0x0000000000000000       0x40 build/py/emitglue.o
+  .rodata.__PRETTY_FUNCTION__.4550
+                 0x0000000000000000       0x1f build/py/emitglue.o
+  .note.GNU-stack
+                 0x0000000000000000        0x0 build/py/emitglue.o
+  .text          0x0000000000000000        0x0 build/py/persistentcode.o
+  .data          0x0000000000000000        0x0 build/py/persistentcode.o
+  .bss           0x0000000000000000        0x0 build/py/persistentcode.o
+  .note.GNU-stack
+                 0x0000000000000000        0x0 build/py/persistentcode.o
+  .text          0x0000000000000000        0x0 build/py/runtime.o
+  .data          0x0000000000000000        0x0 build/py/runtime.o
+  .bss           0x0000000000000000        0x0 build/py/runtime.o
+  .rodata.mp_load_global.str1.1
+                 0x0000000000000000       0x18 build/py/runtime.o
+  .text.mp_load_global
+                 0x0000000000000000       0x67 build/py/runtime.o
+  .text.mp_load_name
+                 0x0000000000000000       0x3b build/py/runtime.o
+  .text.mp_load_build_class
+                 0x0000000000000000        0x8 build/py/runtime.o
+  .text.mp_store_name
+                 0x0000000000000000       0x17 build/py/runtime.o
+  .text.mp_delete_name
+                 0x0000000000000000       0x14 build/py/runtime.o
+  .text.mp_store_global
+                 0x0000000000000000       0x17 build/py/runtime.o
+  .text.mp_delete_global
+                 0x0000000000000000       0x14 build/py/runtime.o
+  .text.mp_call_function_0
+                 0x0000000000000000        0xb build/py/runtime.o
+  .text.mp_call_function_2
+                 0x0000000000000000       0x49 build/py/runtime.o
+  .rodata.mp_load_method.str1.1
+                 0x0000000000000000       0x49 build/py/runtime.o
+  .text.mp_load_method
+                 0x0000000000000000       0x78 build/py/runtime.o
+  .text.mp_load_attr
+                 0x0000000000000000       0x51 build/py/runtime.o
+  .text.mp_load_method_protected
+                 0x0000000000000000       0x8c build/py/runtime.o
+  .text.mp_store_attr
+                 0x0000000000000000       0x9b build/py/runtime.o
+  .rodata.mp_call_method_n_kw_var.str1.1
+                 0x0000000000000000       0x29 build/py/runtime.o
+  .text.mp_call_method_n_kw_var
+                 0x0000000000000000      0x42c build/py/runtime.o
+  .rodata.mp_unpack_sequence.str1.1
+                 0x0000000000000000       0x4b build/py/runtime.o
+  .text.mp_unpack_sequence
+                 0x0000000000000000      0x11c build/py/runtime.o
+  .text.mp_unpack_ex
+                 0x0000000000000000      0x1d2 build/py/runtime.o
+  .rodata.mp_make_raise_obj.str1.1
+                 0x0000000000000000       0x2a build/py/runtime.o
+  .text.mp_make_raise_obj
+                 0x0000000000000000       0x41 build/py/runtime.o
+  .rodata.mp_resume.str1.1
+                 0x0000000000000000       0x75 build/py/runtime.o
+  .text.mp_resume
+                 0x0000000000000000      0x1ed build/py/runtime.o
+  .text.mp_import_name
+                 0x0000000000000000       0x62 build/py/runtime.o
+  .rodata.mp_import_from.str1.1
+                 0x0000000000000000       0x16 build/py/runtime.o
+  .text.mp_import_from
+                 0x0000000000000000      0x12f build/py/runtime.o
+  .text.mp_import_all
+                 0x0000000000000000       0x5c build/py/runtime.o
+  .text.mp_parse_compile_execute
+                 0x0000000000000000       0xf2 build/py/runtime.o
+  .rodata.__PRETTY_FUNCTION__.5316
+                 0x0000000000000000        0xa build/py/runtime.o
+  .rodata.__PRETTY_FUNCTION__.5159
+                 0x0000000000000000       0x1e build/py/runtime.o
+  .data.rel.ro.mp_module___main__
+                 0x0000000000000000       0x10 build/py/runtime.o
+  .note.GNU-stack
+                 0x0000000000000000        0x0 build/py/runtime.o
+  .text          0x0000000000000000        0x0 build/py/runtime_utils.o
+  .data          0x0000000000000000        0x0 build/py/runtime_utils.o
+  .bss           0x0000000000000000        0x0 build/py/runtime_utils.o
+  .text.mp_call_function_1_protected
+                 0x0000000000000000       0x77 build/py/runtime_utils.o
+  .text.mp_call_function_2_protected
+                 0x0000000000000000       0x7d build/py/runtime_utils.o
+  .comment       0x0000000000000000       0x2a build/py/runtime_utils.o
+  .note.GNU-stack
+                 0x0000000000000000        0x0 build/py/runtime_utils.o
+  .text          0x0000000000000000        0x0 build/py/scheduler.o
+  .data          0x0000000000000000        0x0 build/py/scheduler.o
+  .bss           0x0000000000000000        0x0 build/py/scheduler.o
+  .text.mp_handle_pending
+                 0x0000000000000000       0x28 build/py/scheduler.o
+  .comment       0x0000000000000000       0x2a build/py/scheduler.o
+  .note.GNU-stack
+                 0x0000000000000000        0x0 build/py/scheduler.o
+  .text          0x0000000000000000        0x0 build/py/nativeglue.o
+  .data          0x0000000000000000        0x0 build/py/nativeglue.o
+  .bss           0x0000000000000000        0x0 build/py/nativeglue.o
+  .text.mp_native_from_obj
+                 0x0000000000000000       0x72 build/py/nativeglue.o
+  .text.mp_native_to_obj
+                 0x0000000000000000       0x35 build/py/nativeglue.o
+  .note.GNU-stack
+                 0x0000000000000000        0x0 build/py/nativeglue.o
+  .text          0x0000000000000000        0x0 build/py/pairheap.o
+  .data          0x0000000000000000        0x0 build/py/pairheap.o
+  .bss           0x0000000000000000        0x0 build/py/pairheap.o
+  .text.mp_pairheap_meld
+                 0x0000000000000000       0x75 build/py/pairheap.o
+  .text.mp_pairheap_pairing
+                 0x0000000000000000       0x73 build/py/pairheap.o
+  .text.mp_pairheap_delete
+                 0x0000000000000000       0xd6 build/py/pairheap.o
+  .comment       0x0000000000000000       0x2a build/py/pairheap.o
+  .note.GNU-stack
+                 0x0000000000000000        0x0 build/py/pairheap.o
+  .text          0x0000000000000000        0x0 build/py/ringbuf.o
+  .data          0x0000000000000000        0x0 build/py/ringbuf.o
+  .bss           0x0000000000000000        0x0 build/py/ringbuf.o
+  .text.ringbuf_peek16
+                 0x0000000000000000       0x37 build/py/ringbuf.o
+  .text.ringbuf_get16
+                 0x0000000000000000       0x24 build/py/ringbuf.o
+  .text.ringbuf_put16
+                 0x0000000000000000       0x51 build/py/ringbuf.o
+  .comment       0x0000000000000000       0x2a build/py/ringbuf.o
+  .note.GNU-stack
+                 0x0000000000000000        0x0 build/py/ringbuf.o
+  .text          0x0000000000000000        0x0 build/py/stackctrl.o
+  .data          0x0000000000000000        0x0 build/py/stackctrl.o
+  .bss           0x0000000000000000        0x0 build/py/stackctrl.o
+  .text.mp_stack_set_top
+                 0x0000000000000000        0x8 build/py/stackctrl.o
+  .text.mp_stack_usage
+                 0x0000000000000000       0x40 build/py/stackctrl.o
+  .note.GNU-stack
+                 0x0000000000000000        0x0 build/py/stackctrl.o
+  .text          0x0000000000000000        0x0 build/py/argcheck.o
+  .data          0x0000000000000000        0x0 build/py/argcheck.o
+  .bss           0x0000000000000000        0x0 build/py/argcheck.o
+  .rodata.mp_arg_error_terse_mismatch.str1.1
+                 0x0000000000000000       0x1c build/py/argcheck.o
+  .text.mp_arg_error_terse_mismatch
+                 0x0000000000000000       0x10 build/py/argcheck.o
+  .note.GNU-stack
+                 0x0000000000000000        0x0 build/py/argcheck.o
+  .text          0x0000000000000000        0x0 build/py/warning.o
+  .data          0x0000000000000000        0x0 build/py/warning.o
+  .bss           0x0000000000000000        0x0 build/py/warning.o
+  .rodata.mp_warning.str1.1
+                 0x0000000000000000        0xd build/py/warning.o
+  .text.mp_warning
+                 0x0000000000000000      0x101 build/py/warning.o
+  .text.mp_emitter_warning
+                 0x0000000000000000        0xf build/py/warning.o
+  .comment       0x0000000000000000       0x2a build/py/warning.o
+  .note.GNU-stack
+                 0x0000000000000000        0x0 build/py/warning.o
+  .text          0x0000000000000000        0x0 build/py/profile.o
+  .data          0x0000000000000000        0x0 build/py/profile.o
+  .bss           0x0000000000000000        0x0 build/py/profile.o
+  .comment       0x0000000000000000       0x2a build/py/profile.o
+  .note.GNU-stack
+                 0x0000000000000000        0x0 build/py/profile.o
+  .text          0x0000000000000000        0x0 build/py/map.o
+  .data          0x0000000000000000        0x0 build/py/map.o
+  .bss           0x0000000000000000        0x0 build/py/map.o
+  .text.mp_set_init
+                 0x0000000000000000       0x22 build/py/map.o
+  .text.mp_set_lookup
+                 0x0000000000000000      0x144 build/py/map.o
+  .text.mp_set_rehash
+                 0x0000000000000000       0x96 build/py/map.o
+  .text.mp_set_remove_first
+                 0x0000000000000000       0x4b build/py/map.o
+  .text.mp_set_clear
+                 0x0000000000000000       0x26 build/py/map.o
+  .rodata.mp_const_empty_map
+                 0x0000000000000000       0x18 build/py/map.o
+  .note.GNU-stack
+                 0x0000000000000000        0x0 build/py/map.o
+  .text          0x0000000000000000        0x0 build/py/obj.o
+  .data          0x0000000000000000        0x0 build/py/obj.o
+  .bss           0x0000000000000000        0x0 build/py/obj.o
+  .text.mp_identity
+                 0x0000000000000000        0x4 build/py/obj.o
+  .text.mp_obj_print
+                 0x0000000000000000       0x11 build/py/obj.o
+  .text.mp_obj_is_callable
+                 0x0000000000000000       0x24 build/py/obj.o
+  .rodata.mp_obj_get_array_fixed_n.str1.1
+                 0x0000000000000000       0x2d build/py/obj.o
+  .text.mp_obj_get_array_fixed_n
+                 0x0000000000000000       0x63 build/py/obj.o
+  .text.mp_obj_id
+                 0x0000000000000000       0x1e build/py/obj.o
+  .rodata.mp_obj_len.str1.1
+                 0x0000000000000000       0x21 build/py/obj.o
+  .text.mp_obj_len
+                 0x0000000000000000       0x38 build/py/obj.o
+  .data.rel.ro.mp_identity_obj
+                 0x0000000000000000       0x10 build/py/obj.o
+  .note.GNU-stack
+                 0x0000000000000000        0x0 build/py/obj.o
+  .text          0x0000000000000000        0x0 build/py/objarray.o
+  .data          0x0000000000000000        0x0 build/py/objarray.o
+  .bss           0x0000000000000000        0x0 build/py/objarray.o
+  .text.array_unary_op
+                 0x0000000000000000       0x31 build/py/objarray.o
+  .text.array_iterator_new
+                 0x0000000000000000       0x22 build/py/objarray.o
+  .text.array_get_buffer
+                 0x0000000000000000       0x3a build/py/objarray.o
+  .rodata.array_extend.str1.1
+                 0x0000000000000000       0xa1 build/py/objarray.o
+  .text.array_extend
+                 0x0000000000000000      0x104 build/py/objarray.o
+  .text.array_append
+                 0x0000000000000000       0xce build/py/objarray.o
+  .text.array_it_iternext
+                 0x0000000000000000       0x2d build/py/objarray.o
+  .text.array_new
+                 0x0000000000000000       0x61 build/py/objarray.o
+  .text.array_binary_op
+                 0x0000000000000000      0x1fa build/py/objarray.o
+  .rodata.array_print.str1.1
+                 0x0000000000000000       0x22 build/py/objarray.o
+  .text.array_print
+                 0x0000000000000000       0xca build/py/objarray.o
+  .rodata.array_subscr.str1.1
+                 0x0000000000000000       0x38 build/py/objarray.o
+  .text.array_subscr
+                 0x0000000000000000      0x12b build/py/objarray.o
+  .text.bytearray_make_new
+                 0x0000000000000000      0x181 build/py/objarray.o
+  .text.mp_obj_new_bytearray
+                 0x0000000000000000       0x29 build/py/objarray.o
+  .text.mp_obj_new_bytearray_by_ref
+                 0x0000000000000000       0x34 build/py/objarray.o
+  .rodata.__PRETTY_FUNCTION__.4035
+                 0x0000000000000000        0xd build/py/objarray.o
+  .rodata.__PRETTY_FUNCTION__.4012
+                 0x0000000000000000        0xd build/py/objarray.o
+  .rodata.__PRETTY_FUNCTION__.4020
+                 0x0000000000000000        0xd build/py/objarray.o
+  .data.rel.ro.array_it_type
+                 0x0000000000000000       0x78 build/py/objarray.o
+  .data.rel.ro.mp_type_bytearray
+                 0x0000000000000000       0x78 build/py/objarray.o
+  .data.rel.ro.array_locals_dict
+                 0x0000000000000000       0x20 build/py/objarray.o
+  .data.rel.ro.array_locals_dict_table
+                 0x0000000000000000       0x30 build/py/objarray.o
+  .data.rel.ro.array_extend_obj
+                 0x0000000000000000       0x10 build/py/objarray.o
+  .data.rel.ro.array_append_obj
+                 0x0000000000000000       0x10 build/py/objarray.o
+  .comment       0x0000000000000000       0x2a build/py/objarray.o
+  .note.GNU-stack
+                 0x0000000000000000        0x0 build/py/objarray.o
+  .text          0x0000000000000000        0x0 build/py/objattrtuple.o
+  .data          0x0000000000000000        0x0 build/py/objattrtuple.o
+  .bss           0x0000000000000000        0x0 build/py/objattrtuple.o
+  .comment       0x0000000000000000       0x2a build/py/objattrtuple.o
+  .note.GNU-stack
+                 0x0000000000000000        0x0 build/py/objattrtuple.o
+  .text          0x0000000000000000        0x0 build/py/objbool.o
+  .data          0x0000000000000000        0x0 build/py/objbool.o
+  .bss           0x0000000000000000        0x0 build/py/objbool.o
+  .note.GNU-stack
+                 0x0000000000000000        0x0 build/py/objbool.o
+  .text          0x0000000000000000        0x0 build/py/objboundmeth.o
+  .data          0x0000000000000000        0x0 build/py/objboundmeth.o
+  .bss           0x0000000000000000        0x0 build/py/objboundmeth.o
+  .rodata.bound_meth_print.str1.1
+                 0x0000000000000000       0x16 build/py/objboundmeth.o
+  .text.bound_meth_print
+                 0x0000000000000000       0x60 build/py/objboundmeth.o
+  .text.bound_meth_call
+                 0x0000000000000000       0x19 build/py/objboundmeth.o
+  .text.mp_obj_new_bound_meth
+                 0x0000000000000000       0x2c build/py/objboundmeth.o
+  .data.rel.ro.mp_type_bound_meth
+                 0x0000000000000000       0x78 build/py/objboundmeth.o
+  .note.GNU-stack
+                 0x0000000000000000        0x0 build/py/objboundmeth.o
+  .text          0x0000000000000000        0x0 build/py/objcell.o
+  .data          0x0000000000000000        0x0 build/py/objcell.o
+  .bss           0x0000000000000000        0x0 build/py/objcell.o
+  .rodata.cell_print.str1.1
+                 0x0000000000000000       0x12 build/py/objcell.o
+  .text.cell_print
+                 0x0000000000000000       0x57 build/py/objcell.o
+  .text.mp_obj_cell_get
+                 0x0000000000000000        0x5 build/py/objcell.o
+  .text.mp_obj_cell_set
+                 0x0000000000000000        0x5 build/py/objcell.o
+  .text.mp_obj_new_cell
+                 0x0000000000000000       0x1e build/py/objcell.o
+  .data.rel.ro.mp_type_cell
+                 0x0000000000000000       0x78 build/py/objcell.o
+  .comment       0x0000000000000000       0x2a build/py/objcell.o
+  .note.GNU-stack
+                 0x0000000000000000        0x0 build/py/objcell.o
+  .text          0x0000000000000000        0x0 build/py/objclosure.o
+  .data          0x0000000000000000        0x0 build/py/objclosure.o
+  .bss           0x0000000000000000        0x0 build/py/objclosure.o
+  .text.closure_call
+                 0x0000000000000000      0x116 build/py/objclosure.o
+  .rodata.closure_print.str1.1
+                 0x0000000000000000       0x29 build/py/objclosure.o
+  .text.closure_print
+                 0x0000000000000000       0xa2 build/py/objclosure.o
+  .text.mp_obj_new_closure
+                 0x0000000000000000       0x4d build/py/objclosure.o
+  .data.rel.ro.closure_type
+                 0x0000000000000000       0x78 build/py/objclosure.o
+  .comment       0x0000000000000000       0x2a build/py/objclosure.o
+  .note.GNU-stack
+                 0x0000000000000000        0x0 build/py/objclosure.o
+  .text          0x0000000000000000        0x0 build/py/objcomplex.o
+  .data          0x0000000000000000        0x0 build/py/objcomplex.o
+  .bss           0x0000000000000000        0x0 build/py/objcomplex.o
+  .note.GNU-stack
+                 0x0000000000000000        0x0 build/py/objcomplex.o
+  .text          0x0000000000000000        0x0 build/py/objdeque.o
+  .data          0x0000000000000000        0x0 build/py/objdeque.o
+  .bss           0x0000000000000000        0x0 build/py/objdeque.o
+  .comment       0x0000000000000000       0x2a build/py/objdeque.o
+  .note.GNU-stack
+                 0x0000000000000000        0x0 build/py/objdeque.o
+  .text          0x0000000000000000        0x0 build/py/objdict.o
+  .data          0x0000000000000000        0x0 build/py/objdict.o
+  .bss           0x0000000000000000        0x0 build/py/objdict.o
+  .text.mp_obj_dict_len
+                 0x0000000000000000        0x9 build/py/objdict.o
+  .note.GNU-stack
+                 0x0000000000000000        0x0 build/py/objdict.o
+  .text          0x0000000000000000        0x0 build/py/objenumerate.o
+  .data          0x0000000000000000        0x0 build/py/objenumerate.o
+  .bss           0x0000000000000000        0x0 build/py/objenumerate.o
+  .text.enumerate_make_new
+                 0x0000000000000000       0x80 build/py/objenumerate.o
+  .rodata.enumerate_iternext.str1.1
+                 0x0000000000000000       0x41 build/py/objenumerate.o
+  .text.enumerate_iternext
+                 0x0000000000000000       0xa3 build/py/objenumerate.o
+  .rodata.allowed_args.4159
+                 0x0000000000000000       0x20 build/py/objenumerate.o
+  .rodata.__PRETTY_FUNCTION__.4169
+                 0x0000000000000000       0x13 build/py/objenumerate.o
+  .data.rel.ro.mp_type_enumerate
+                 0x0000000000000000       0x78 build/py/objenumerate.o
+  .comment       0x0000000000000000       0x2a build/py/objenumerate.o
+  .note.GNU-stack
+                 0x0000000000000000        0x0 build/py/objenumerate.o
+  .text          0x0000000000000000        0x0 build/py/objexcept.o
+  .data          0x0000000000000000        0x0 build/py/objexcept.o
+  .bss           0x0000000000000000        0x0 build/py/objexcept.o
+  .text.mp_obj_exception_clear_traceback
+                 0x0000000000000000       0x4f build/py/objexcept.o
+  .rodata.__PRETTY_FUNCTION__.4638
+                 0x0000000000000000       0x21 build/py/objexcept.o
+  .data.rel.ro.mp_type_NameError
+                 0x0000000000000000       0x78 build/py/objexcept.o
+  .data.rel.ro.mp_type_ImportError
+                 0x0000000000000000       0x78 build/py/objexcept.o
+  .data.rel.ro.mp_type_EOFError
+                 0x0000000000000000       0x78 build/py/objexcept.o
+  .data.rel.ro.mp_type_AssertionError
+                 0x0000000000000000       0x78 build/py/objexcept.o
+  .data.rel.ro.mp_type_StopAsyncIteration
+                 0x0000000000000000       0x78 build/py/objexcept.o
+  .data.rel.ro.mp_type_GeneratorExit
+                 0x0000000000000000       0x78 build/py/objexcept.o
+  .data.rel.ro.mp_type_KeyboardInterrupt
+                 0x0000000000000000       0x78 build/py/objexcept.o
+  .data.rel.ro.mp_type_SystemExit
+                 0x0000000000000000       0x78 build/py/objexcept.o
+  .note.GNU-stack
+                 0x0000000000000000        0x0 build/py/objexcept.o
+  .text          0x0000000000000000        0x0 build/py/objfilter.o
+  .data          0x0000000000000000        0x0 build/py/objfilter.o
+  .bss           0x0000000000000000        0x0 build/py/objfilter.o
+  .text.filter_iternext
+                 0x0000000000000000       0x76 build/py/objfilter.o
+  .text.filter_make_new
+                 0x0000000000000000       0x49 build/py/objfilter.o
+  .data.rel.ro.mp_type_filter
+                 0x0000000000000000       0x78 build/py/objfilter.o
+  .comment       0x0000000000000000       0x2a build/py/objfilter.o
+  .note.GNU-stack
+                 0x0000000000000000        0x0 build/py/objfilter.o
+  .text          0x0000000000000000        0x0 build/py/objfloat.o
+  .data          0x0000000000000000        0x0 build/py/objfloat.o
+  .bss           0x0000000000000000        0x0 build/py/objfloat.o
+  .data.rel.ro.local.mp_const_float_pi_obj
+                 0x0000000000000000       0x10 build/py/objfloat.o
+  .data.rel.ro.local.mp_const_float_e_obj
+                 0x0000000000000000       0x10 build/py/objfloat.o
+  .note.GNU-stack
+                 0x0000000000000000        0x0 build/py/objfloat.o
+  .text          0x0000000000000000        0x0 build/py/objfun.o
+  .data          0x0000000000000000        0x0 build/py/objfun.o
+  .bss           0x0000000000000000        0x0 build/py/objfun.o
+  .text.fun_native_call
+                 0x0000000000000000       0x39 build/py/objfun.o
+  .text.fun_bc_call
+                 0x0000000000000000      0x1a0 build/py/objfun.o
+  .text.convert_obj_for_inline_asm
+                 0x0000000000000000      0x13b build/py/objfun.o
+  .rodata.fun_asm_call.str1.1
+                 0x0000000000000000        0xc build/py/objfun.o
+  .text.fun_asm_call
+                 0x0000000000000000      0x12d build/py/objfun.o
+  .text.mp_obj_code_get_name
+                 0x0000000000000000       0x14 build/py/objfun.o
+  .text.mp_obj_fun_get_name
+                 0x0000000000000000       0x3c build/py/objfun.o
+  .rodata.fun_bc_print.str1.1
+                 0x0000000000000000       0x16 build/py/objfun.o
+  .text.fun_bc_print
+                 0x0000000000000000       0x28 build/py/objfun.o
+  .rodata.mp_obj_new_fun_bc.str1.1
+                 0x0000000000000000       0x2c build/py/objfun.o
+  .text.mp_obj_new_fun_bc
+                 0x0000000000000000       0xb5 build/py/objfun.o
+  .text.mp_obj_new_fun_native
+                 0x0000000000000000       0x15 build/py/objfun.o
+  .text.mp_obj_new_fun_asm
+                 0x0000000000000000       0x32 build/py/objfun.o
+  .rodata.__PRETTY_FUNCTION__.4063
+                 0x0000000000000000        0xd build/py/objfun.o
+  .rodata.__PRETTY_FUNCTION__.4006
+                 0x0000000000000000       0x12 build/py/objfun.o
+  .rodata.__PRETTY_FUNCTION__.3995
+                 0x0000000000000000        0xc build/py/objfun.o
+  .data.rel.ro.mp_type_fun_asm
+                 0x0000000000000000       0x78 build/py/objfun.o
+  .data.rel.ro.mp_type_fun_bc
+                 0x0000000000000000       0x78 build/py/objfun.o
+  .data.rel.ro.mp_type_fun_native
+                 0x0000000000000000       0x78 build/py/objfun.o
+  .note.GNU-stack
+                 0x0000000000000000        0x0 build/py/objfun.o
+  .text          0x0000000000000000        0x0 build/py/objgenerator.o
+  .data          0x0000000000000000        0x0 build/py/objgenerator.o
+  .bss           0x0000000000000000        0x0 build/py/objgenerator.o
+  .text.gen_wrap_call
+                 0x0000000000000000       0xd1 build/py/objgenerator.o
+  .text.native_gen_wrap_call
+                 0x0000000000000000       0xcf build/py/objgenerator.o
+  .rodata.gen_instance_pend_throw.str1.1
+                 0x0000000000000000       0x1c build/py/objgenerator.o
+  .text.gen_instance_pend_throw
+                 0x0000000000000000       0x1e build/py/objgenerator.o
+  .rodata.gen_instance_print.str1.1
+                 0x0000000000000000       0x1e build/py/objgenerator.o
+  .text.gen_instance_print
+                 0x0000000000000000       0x30 build/py/objgenerator.o
+  .text.unlikely.gen_instance_throw.part.0
+                 0x0000000000000000       0x18 build/py/objgenerator.o
+  .rodata.mp_obj_gen_resume.str1.1
+                 0x0000000000000000       0x55 build/py/objgenerator.o
+  .text.mp_obj_gen_resume
+                 0x0000000000000000      0x133 build/py/objgenerator.o
+  .text.gen_resume_and_raise
+                 0x0000000000000000       0x7f build/py/objgenerator.o
+  .text.gen_instance_throw
+                 0x0000000000000000       0x3e build/py/objgenerator.o
+  .text.gen_instance_send
+                 0x0000000000000000       0x17 build/py/objgenerator.o
+  .text.gen_instance_iternext
+                 0x0000000000000000        0xe build/py/objgenerator.o
+  .rodata.gen_instance_close.str1.1
+                 0x0000000000000000       0x20 build/py/objgenerator.o
+  .text.gen_instance_close
+                 0x0000000000000000       0x8f build/py/objgenerator.o
+  .data.rel.ro.mp_type_gen_instance
+                 0x0000000000000000       0x78 build/py/objgenerator.o
+  .data.rel.ro.gen_instance_locals_dict
+                 0x0000000000000000       0x20 build/py/objgenerator.o
+  .data.rel.ro.local.gen_instance_locals_dict_table
+                 0x0000000000000000       0x40 build/py/objgenerator.o
+  .data.rel.ro.gen_instance_pend_throw_obj
+                 0x0000000000000000       0x10 build/py/objgenerator.o
+  .data.rel.ro.gen_instance_close_obj
+                 0x0000000000000000       0x10 build/py/objgenerator.o
+  .data.rel.ro.gen_instance_throw_obj
+                 0x0000000000000000       0x18 build/py/objgenerator.o
+  .data.rel.ro.gen_instance_send_obj
+                 0x0000000000000000       0x10 build/py/objgenerator.o
+  .data.rel.ro.mp_type_native_gen_wrap
+                 0x0000000000000000       0x78 build/py/objgenerator.o
+  .data.rel.ro.mp_type_gen_wrap
+                 0x0000000000000000       0x78 build/py/objgenerator.o
+  .data.rel.ro.mp_const_GeneratorExit_obj
+                 0x0000000000000000       0x20 build/py/objgenerator.o
+  .comment       0x0000000000000000       0x2a build/py/objgenerator.o
+  .note.GNU-stack
+                 0x0000000000000000        0x0 build/py/objgenerator.o
+  .text          0x0000000000000000        0x0 build/py/objgetitemiter.o
+  .data          0x0000000000000000        0x0 build/py/objgetitemiter.o
+  .bss           0x0000000000000000        0x0 build/py/objgetitemiter.o
+  .note.GNU-stack
+                 0x0000000000000000        0x0 build/py/objgetitemiter.o
+  .text          0x0000000000000000        0x0 build/py/objint.o
+  .data          0x0000000000000000        0x0 build/py/objint.o
+  .bss           0x0000000000000000        0x0 build/py/objint.o
+  .note.GNU-stack
+                 0x0000000000000000        0x0 build/py/objint.o
+  .text          0x0000000000000000        0x0 build/py/objint_longlong.o
+  .data          0x0000000000000000        0x0 build/py/objint_longlong.o
+  .bss           0x0000000000000000        0x0 build/py/objint_longlong.o
+  .comment       0x0000000000000000       0x2a build/py/objint_longlong.o
+  .note.GNU-stack
+                 0x0000000000000000        0x0 build/py/objint_longlong.o
+  .text          0x0000000000000000        0x0 build/py/objint_mpz.o
+  .data          0x0000000000000000        0x0 build/py/objint_mpz.o
+  .bss           0x0000000000000000        0x0 build/py/objint_mpz.o
+  .note.GNU-stack
+                 0x0000000000000000        0x0 build/py/objint_mpz.o
+  .text          0x0000000000000000        0x0 build/py/objlist.o
+  .data          0x0000000000000000        0x0 build/py/objlist.o
+  .bss           0x0000000000000000        0x0 build/py/objlist.o
+  .text.mp_obj_list_set_len
+                 0x0000000000000000        0x5 build/py/objlist.o
+  .note.GNU-stack
+                 0x0000000000000000        0x0 build/py/objlist.o
+  .text          0x0000000000000000        0x0 build/py/objmap.o
+  .data          0x0000000000000000        0x0 build/py/objmap.o
+  .bss           0x0000000000000000        0x0 build/py/objmap.o
+  .text.map_iternext
+                 0x0000000000000000       0x5f build/py/objmap.o
+  .text.map_make_new
+                 0x0000000000000000       0x6f build/py/objmap.o
+  .data.rel.ro.mp_type_map
+                 0x0000000000000000       0x78 build/py/objmap.o
+  .comment       0x0000000000000000       0x2a build/py/objmap.o
+  .note.GNU-stack
+                 0x0000000000000000        0x0 build/py/objmap.o
+  .text          0x0000000000000000        0x0 build/py/objmodule.o
+  .data          0x0000000000000000        0x0 build/py/objmodule.o
+  .bss           0x0000000000000000        0x0 build/py/objmodule.o
+  .rodata.module_print.str1.1
+                 0x0000000000000000        0xf build/py/objmodule.o
+  .text.module_print
+                 0x0000000000000000       0x42 build/py/objmodule.o
+  .text.module_attr
+                 0x0000000000000000       0x5b build/py/objmodule.o
+  .text.mp_obj_new_module
+                 0x0000000000000000       0x6e build/py/objmodule.o
+  .text.mp_module_get
+                 0x0000000000000000       0x40 build/py/objmodule.o
+  .text.mp_module_register
+                 0x0000000000000000       0x23 build/py/objmodule.o
+  .data.rel.ro.local.mp_builtin_module_map
+                 0x0000000000000000       0x18 build/py/objmodule.o
+  .data.rel.ro.mp_builtin_module_table
+                 0x0000000000000000       0x40 build/py/objmodule.o
+  .data.rel.ro.mp_type_module
+                 0x0000000000000000       0x78 build/py/objmodule.o
+  .comment       0x0000000000000000       0x2a build/py/objmodule.o
+  .note.GNU-stack
+                 0x0000000000000000        0x0 build/py/objmodule.o
+  .text          0x0000000000000000        0x0 build/py/objobject.o
+  .data          0x0000000000000000        0x0 build/py/objobject.o
+  .bss           0x0000000000000000        0x0 build/py/objobject.o
+  .note.GNU-stack
+                 0x0000000000000000        0x0 build/py/objobject.o
+  .text          0x0000000000000000        0x0 build/py/objpolyiter.o
+  .data          0x0000000000000000        0x0 build/py/objpolyiter.o
+  .bss           0x0000000000000000        0x0 build/py/objpolyiter.o
+  .note.GNU-stack
+                 0x0000000000000000        0x0 build/py/objpolyiter.o
+  .text          0x0000000000000000        0x0 build/py/objproperty.o
+  .data          0x0000000000000000        0x0 build/py/objproperty.o
+  .bss           0x0000000000000000        0x0 build/py/objproperty.o
+  .note.GNU-stack
+                 0x0000000000000000        0x0 build/py/objproperty.o
+  .text          0x0000000000000000        0x0 build/py/objnone.o
+  .data          0x0000000000000000        0x0 build/py/objnone.o
+  .bss           0x0000000000000000        0x0 build/py/objnone.o
+  .note.GNU-stack
+                 0x0000000000000000        0x0 build/py/objnone.o
+  .text          0x0000000000000000        0x0 build/py/objnamedtuple.o
+  .data          0x0000000000000000        0x0 build/py/objnamedtuple.o
+  .bss           0x0000000000000000        0x0 build/py/objnamedtuple.o
+  .comment       0x0000000000000000       0x2a build/py/objnamedtuple.o
+  .note.GNU-stack
+                 0x0000000000000000        0x0 build/py/objnamedtuple.o
+  .text          0x0000000000000000        0x0 build/py/objrange.o
+  .data          0x0000000000000000        0x0 build/py/objrange.o
+  .bss           0x0000000000000000        0x0 build/py/objrange.o
+  .text.range_it_iternext
+                 0x0000000000000000       0x3c build/py/objrange.o
+  .text.range_len
+                 0x0000000000000000       0x2e build/py/objrange.o
+  .text.range_unary_op
+                 0x0000000000000000       0x38 build/py/objrange.o
+  .text.range_getiter
+                 0x0000000000000000       0x26 build/py/objrange.o
+  .text.range_subscr
+                 0x0000000000000000       0xd4 build/py/objrange.o
+  .rodata.range_make_new.str1.1
+                 0x0000000000000000        0xa build/py/objrange.o
+  .text.range_make_new
+                 0x0000000000000000       0x9d build/py/objrange.o
+  .rodata.range_print.str1.1
+                 0x0000000000000000       0x18 build/py/objrange.o
+  .text.range_print
+                 0x0000000000000000       0x53 build/py/objrange.o
+  .text.range_attr
+                 0x0000000000000000       0x40 build/py/objrange.o
+  .data.rel.ro.mp_type_range
+                 0x0000000000000000       0x78 build/py/objrange.o
+  .data.rel.ro.range_it_type
+                 0x0000000000000000       0x78 build/py/objrange.o
+  .comment       0x0000000000000000       0x2a build/py/objrange.o
+  .note.GNU-stack
+                 0x0000000000000000        0x0 build/py/objrange.o
+  .text          0x0000000000000000        0x0 build/py/objreversed.o
+  .data          0x0000000000000000        0x0 build/py/objreversed.o
+  .bss           0x0000000000000000        0x0 build/py/objreversed.o
+  .text.reversed_iternext
+                 0x0000000000000000       0x28 build/py/objreversed.o
+  .text.reversed_make_new
+                 0x0000000000000000       0xab build/py/objreversed.o
+  .data.rel.ro.mp_type_reversed
+                 0x0000000000000000       0x78 build/py/objreversed.o
+  .comment       0x0000000000000000       0x2a build/py/objreversed.o
+  .note.GNU-stack
+                 0x0000000000000000        0x0 build/py/objreversed.o
+  .text          0x0000000000000000        0x0 build/py/objset.o
+  .data          0x0000000000000000        0x0 build/py/objset.o
+  .bss           0x0000000000000000        0x0 build/py/objset.o
+  .text.is_set_or_frozenset
+                 0x0000000000000000       0x1c build/py/objset.o
+  .text.set_getiter
+                 0x0000000000000000       0x25 build/py/objset.o
+  .text.set_unary_op
+                 0x0000000000000000       0x31 build/py/objset.o
+  .text.set_add  0x0000000000000000       0x1b build/py/objset.o
+  .text.set_discard
+                 0x0000000000000000       0x1b build/py/objset.o
+  .text.set_update_int
+                 0x0000000000000000       0x3d build/py/objset.o
+  .text.set_update
+                 0x0000000000000000       0x33 build/py/objset.o
+  .text.set_symmetric_difference_update
+                 0x0000000000000000       0x44 build/py/objset.o
+  .text.set_isdisjoint
+                 0x0000000000000000       0x78 build/py/objset.o
+  .text.set_copy
+                 0x0000000000000000       0x4f build/py/objset.o
+  .text.set_union
+                 0x0000000000000000       0x2a build/py/objset.o
+  .text.set_symmetric_difference
+                 0x0000000000000000       0x28 build/py/objset.o
+  .text.set_clear
+                 0x0000000000000000       0x16 build/py/objset.o
+  .text.set_diff_int
+                 0x0000000000000000       0x84 build/py/objset.o
+  .text.set_diff_update
+                 0x0000000000000000       0x17 build/py/objset.o
+  .text.set_diff
+                 0x0000000000000000        0x7 build/py/objset.o
+  .text.set_remove
+                 0x0000000000000000       0x37 build/py/objset.o
+  .rodata.set_pop.str1.1
+                 0x0000000000000000       0x16 build/py/objset.o
+  .text.set_pop  0x0000000000000000       0x27 build/py/objset.o
+  .rodata.set_print.str1.1
+                 0x0000000000000000        0xd build/py/objset.o
+  .text.set_print
+                 0x0000000000000000       0x9a build/py/objset.o
+  .text.set_it_iternext
+                 0x0000000000000000       0x3b build/py/objset.o
+  .text.mp_obj_new_set
+                 0x0000000000000000       0x61 build/py/objset.o
+  .text.set_intersect_int
+                 0x0000000000000000       0xc3 build/py/objset.o
+  .text.set_intersect_update
+                 0x0000000000000000        0xa build/py/objset.o
+  .text.set_intersect
+                 0x0000000000000000        0x7 build/py/objset.o
+  .text.mp_obj_set_store
+                 0x0000000000000000        0xe build/py/objset.o
+  .text.set_make_new
+                 0x0000000000000000       0x6b build/py/objset.o
+  .text.set_issubset_internal
+                 0x0000000000000000      0x136 build/py/objset.o
+  .text.set_issuperset
+                 0x0000000000000000       0x10 build/py/objset.o
+  .text.set_issubset
+                 0x0000000000000000        0x7 build/py/objset.o
+  .text.set_binary_op
+                 0x0000000000000000      0x16f build/py/objset.o
+  .rodata.set_binary_op
+                 0x0000000000000000       0x74 build/py/objset.o
+  .data.rel.ro.mp_type_set
+                 0x0000000000000000       0x78 build/py/objset.o
+  .data.rel.ro.set_locals_dict
+                 0x0000000000000000       0x20 build/py/objset.o
+  .data.rel.ro.set_locals_dict_table
+                 0x0000000000000000      0x120 build/py/objset.o
+  .data.rel.ro.set_union_obj
+                 0x0000000000000000       0x10 build/py/objset.o
+  .data.rel.ro.set_update_obj
+                 0x0000000000000000       0x18 build/py/objset.o
+  .data.rel.ro.set_symmetric_difference_obj
+                 0x0000000000000000       0x10 build/py/objset.o
+  .data.rel.ro.set_symmetric_difference_update_obj
+                 0x0000000000000000       0x10 build/py/objset.o
+  .data.rel.ro.set_remove_obj
+                 0x0000000000000000       0x10 build/py/objset.o
+  .data.rel.ro.set_pop_obj
+                 0x0000000000000000       0x10 build/py/objset.o
+  .data.rel.ro.set_issuperset_obj
+                 0x0000000000000000       0x10 build/py/objset.o
+  .data.rel.ro.set_issubset_obj
+                 0x0000000000000000       0x10 build/py/objset.o
+  .data.rel.ro.set_isdisjoint_obj
+                 0x0000000000000000       0x10 build/py/objset.o
+  .data.rel.ro.set_intersect_update_obj
+                 0x0000000000000000       0x10 build/py/objset.o
+  .data.rel.ro.set_intersect_obj
+                 0x0000000000000000       0x10 build/py/objset.o
+  .data.rel.ro.set_diff_update_obj
+                 0x0000000000000000       0x18 build/py/objset.o
+  .data.rel.ro.set_diff_obj
+                 0x0000000000000000       0x18 build/py/objset.o
+  .data.rel.ro.set_discard_obj
+                 0x0000000000000000       0x10 build/py/objset.o
+  .data.rel.ro.set_copy_obj
+                 0x0000000000000000       0x10 build/py/objset.o
+  .data.rel.ro.set_clear_obj
+                 0x0000000000000000       0x10 build/py/objset.o
+  .data.rel.ro.set_add_obj
+                 0x0000000000000000       0x10 build/py/objset.o
+  .comment       0x0000000000000000       0x2a build/py/objset.o
+  .note.GNU-stack
+                 0x0000000000000000        0x0 build/py/objset.o
+  .text          0x0000000000000000        0x0 build/py/objsingleton.o
+  .data          0x0000000000000000        0x0 build/py/objsingleton.o
+  .bss           0x0000000000000000        0x0 build/py/objsingleton.o
+  .note.GNU-stack
+                 0x0000000000000000        0x0 build/py/objsingleton.o
+  .text          0x0000000000000000        0x0 build/py/objslice.o
+  .data          0x0000000000000000        0x0 build/py/objslice.o
+  .bss           0x0000000000000000        0x0 build/py/objslice.o
+  .text.mp_obj_new_slice
+                 0x0000000000000000       0x32 build/py/objslice.o
+  .note.GNU-stack
+                 0x0000000000000000        0x0 build/py/objslice.o
+  .text          0x0000000000000000        0x0 build/py/objstr.o
+  .data          0x0000000000000000        0x0 build/py/objstr.o
+  .bss           0x0000000000000000        0x0 build/py/objstr.o
+  .text.mp_obj_str_intern
+                 0x0000000000000000       0x60 build/py/objstr.o
+  .text.mp_obj_str_get_str
+                 0x0000000000000000       0x68 build/py/objstr.o
+  .text.mp_obj_str_intern_checked
+                 0x0000000000000000       0x42 build/py/objstr.o
+  .note.GNU-stack
+                 0x0000000000000000        0x0 build/py/objstr.o
+  .text          0x0000000000000000        0x0 build/py/objstrunicode.o
+  .data          0x0000000000000000        0x0 build/py/objstrunicode.o
+  .bss           0x0000000000000000        0x0 build/py/objstrunicode.o
+  .note.GNU-stack
+                 0x0000000000000000        0x0 build/py/objstrunicode.o
+  .text          0x0000000000000000        0x0 build/py/objstringio.o
+  .data          0x0000000000000000        0x0 build/py/objstringio.o
+  .bss           0x0000000000000000        0x0 build/py/objstringio.o
+  .comment       0x0000000000000000       0x2a build/py/objstringio.o
+  .note.GNU-stack
+                 0x0000000000000000        0x0 build/py/objstringio.o
+  .text          0x0000000000000000        0x0 build/py/objtuple.o
+  .data          0x0000000000000000        0x0 build/py/objtuple.o
+  .bss           0x0000000000000000        0x0 build/py/objtuple.o
+  .rodata.mp_obj_tuple_del.str1.1
+                 0x0000000000000000       0x28 build/py/objtuple.o
+  .text.mp_obj_tuple_del
+                 0x0000000000000000       0x3a build/py/objtuple.o
+  .rodata.__PRETTY_FUNCTION__.3916
+                 0x0000000000000000       0x11 build/py/objtuple.o
+  .note.GNU-stack
+                 0x0000000000000000        0x0 build/py/objtuple.o
+  .text          0x0000000000000000        0x0 build/py/objtype.o
+  .data          0x0000000000000000        0x0 build/py/objtype.o
+  .bss           0x0000000000000000        0x0 build/py/objtype.o
+  .text.super_make_new
+                 0x0000000000000000       0x56 build/py/objtype.o
+  .rodata.super_print.str1.1
+                 0x0000000000000000        0xe build/py/objtype.o
+  .text.super_print
+                 0x0000000000000000       0x55 build/py/objtype.o
+  .rodata.super_attr.str1.1
+                 0x0000000000000000       0x7a build/py/objtype.o
+  .text.super_attr
+                 0x0000000000000000      0x1c1 build/py/objtype.o
+  .text.mp_obj_instance_is_callable
+                 0x0000000000000000       0x7c build/py/objtype.o
+  .text.mp_load_super_method
+                 0x0000000000000000       0x5c build/py/objtype.o
+  .rodata.mp_obj_is_subclass.str1.1
+                 0x0000000000000000       0x39 build/py/objtype.o
+  .text.mp_obj_is_subclass
+                 0x0000000000000000       0xce build/py/objtype.o
+  .rodata.mp_builtin_issubclass.str1.1
+                 0x0000000000000000       0x23 build/py/objtype.o
+  .text.mp_builtin_issubclass
+                 0x0000000000000000       0x27 build/py/objtype.o
+  .text.mp_builtin_isinstance
+                 0x0000000000000000       0x1f build/py/objtype.o
+  .rodata.__PRETTY_FUNCTION__.4667
+                 0x0000000000000000        0xb build/py/objtype.o
+  .data.rel.ro.mp_builtin_isinstance_obj
+                 0x0000000000000000       0x10 build/py/objtype.o
+  .data.rel.ro.mp_builtin_issubclass_obj
+                 0x0000000000000000       0x10 build/py/objtype.o
+  .data.rel.ro.local.mp_type_super
+                 0x0000000000000000       0x78 build/py/objtype.o
+  .note.GNU-stack
+                 0x0000000000000000        0x0 build/py/objtype.o
+  .text          0x0000000000000000        0x0 build/py/objzip.o
+  .data          0x0000000000000000        0x0 build/py/objzip.o
+  .bss           0x0000000000000000        0x0 build/py/objzip.o
+  .text.zip_iternext
+                 0x0000000000000000       0x52 build/py/objzip.o
+  .text.zip_make_new
+                 0x0000000000000000       0x6e build/py/objzip.o
+  .data.rel.ro.mp_type_zip
+                 0x0000000000000000       0x78 build/py/objzip.o
+  .comment       0x0000000000000000       0x2a build/py/objzip.o
+  .note.GNU-stack
+                 0x0000000000000000        0x0 build/py/objzip.o
+  .text          0x0000000000000000        0x0 build/py/opmethods.o
+  .data          0x0000000000000000        0x0 build/py/opmethods.o
+  .bss           0x0000000000000000        0x0 build/py/opmethods.o
+  .text.op_contains
+                 0x0000000000000000       0x25 build/py/opmethods.o
+  .data.rel.ro.mp_op_contains_obj
+                 0x0000000000000000       0x10 build/py/opmethods.o
+  .note.GNU-stack
+                 0x0000000000000000        0x0 build/py/opmethods.o
+  .text          0x0000000000000000        0x0 build/py/sequence.o
+  .data          0x0000000000000000        0x0 build/py/sequence.o
+  .bss           0x0000000000000000        0x0 build/py/sequence.o
+  .note.GNU-stack
+                 0x0000000000000000        0x0 build/py/sequence.o
+  .text          0x0000000000000000        0x0 build/py/stream.o
+  .data          0x0000000000000000        0x0 build/py/stream.o
+  .bss           0x0000000000000000        0x0 build/py/stream.o
+  .text.mp_stream_close
+                 0x0000000000000000       0x59 build/py/stream.o
+  .text.stream_flush
+                 0x0000000000000000       0x59 build/py/stream.o
+  .text.stream_unbuffered_readline
+                 0x0000000000000000      0x10b build/py/stream.o
+  .text.stream_unbuffered_readlines
+                 0x0000000000000000       0x53 build/py/stream.o
+  .text.stream_seek
+                 0x0000000000000000       0xa9 build/py/stream.o
+  .text.stream_tell
+                 0x0000000000000000       0x51 build/py/stream.o
+  .text.stream_ioctl
+                 0x0000000000000000       0xaa build/py/stream.o
+  .text.mp_stream_rw
+                 0x0000000000000000       0x84 build/py/stream.o
+  .text.stream_read_generic
+                 0x0000000000000000      0x275 build/py/stream.o
+  .text.stream_read
+                 0x0000000000000000        0x7 build/py/stream.o
+  .text.stream_read1
+                 0x0000000000000000        0xa build/py/stream.o
+  .text.stream_readinto
+                 0x0000000000000000       0x98 build/py/stream.o
+  .rodata.mp_get_stream_raise.str1.1
+                 0x0000000000000000       0x1f build/py/stream.o
+  .text.mp_get_stream_raise
+                 0x0000000000000000       0x49 build/py/stream.o
+  .text.mp_stream_write
+                 0x0000000000000000       0x53 build/py/stream.o
+  .text.stream_write_method
+                 0x0000000000000000       0xb1 build/py/stream.o
+  .text.stream_write1_method
+                 0x0000000000000000       0x59 build/py/stream.o
+  .text.mp_stream_write_adaptor
+                 0x0000000000000000        0xa build/py/stream.o
+  .text.mp_stream_unbuffered_iter
+                 0x0000000000000000       0x38 build/py/stream.o
+  .data.rel.ro.mp_stream_ioctl_obj
+                 0x0000000000000000       0x18 build/py/stream.o
+  .data.rel.ro.mp_stream_flush_obj
+                 0x0000000000000000       0x10 build/py/stream.o
+  .data.rel.ro.mp_stream_tell_obj
+                 0x0000000000000000       0x10 build/py/stream.o
+  .data.rel.ro.mp_stream_seek_obj
+                 0x0000000000000000       0x18 build/py/stream.o
+  .data.rel.ro.mp_stream_close_obj
+                 0x0000000000000000       0x10 build/py/stream.o
+  .data.rel.ro.mp_stream_unbuffered_readlines_obj
+                 0x0000000000000000       0x10 build/py/stream.o
+  .data.rel.ro.mp_stream_unbuffered_readline_obj
+                 0x0000000000000000       0x18 build/py/stream.o
+  .data.rel.ro.mp_stream_readinto_obj
+                 0x0000000000000000       0x18 build/py/stream.o
+  .data.rel.ro.mp_stream_write1_obj
+                 0x0000000000000000       0x10 build/py/stream.o
+  .data.rel.ro.mp_stream_write_obj
+                 0x0000000000000000       0x18 build/py/stream.o
+  .data.rel.ro.mp_stream_read1_obj
+                 0x0000000000000000       0x18 build/py/stream.o
+  .data.rel.ro.mp_stream_read_obj
+                 0x0000000000000000       0x18 build/py/stream.o
+  .comment       0x0000000000000000       0x2a build/py/stream.o
+  .note.GNU-stack
+                 0x0000000000000000        0x0 build/py/stream.o
+  .text          0x0000000000000000        0x0 build/py/binary.o
+  .data          0x0000000000000000        0x0 build/py/binary.o
+  .bss           0x0000000000000000        0x0 build/py/binary.o
+  .rodata.mp_binary_get_size.str1.1
+                 0x0000000000000000        0xd build/py/binary.o
+  .text.mp_binary_get_size
+                 0x0000000000000000      0x15f build/py/binary.o
+  .text.mp_binary_get_val_array
+                 0x0000000000000000       0xde build/py/binary.o
+  .text.mp_binary_get_int
+                 0x0000000000000000       0x3d build/py/binary.o
+  .text.mp_binary_get_val
+                 0x0000000000000000      0x14b build/py/binary.o
+  .text.mp_binary_set_val
+                 0x0000000000000000      0x12b build/py/binary.o
+  .text.mp_binary_set_val_array_from_int
+                 0x0000000000000000       0x85 build/py/binary.o
+  .text.mp_binary_set_val_array
+                 0x0000000000000000       0xbf build/py/binary.o
+  .note.GNU-stack
+                 0x0000000000000000        0x0 build/py/binary.o
+  .text          0x0000000000000000        0x0 build/py/builtinimport.o
+  .data          0x0000000000000000        0x0 build/py/builtinimport.o
+  .bss           0x0000000000000000        0x0 build/py/builtinimport.o
+  .text.do_load  0x0000000000000000       0x29 build/py/builtinimport.o
+  .rodata.stat_dir_or_file.str1.1
+                 0x0000000000000000        0x4 build/py/builtinimport.o
+  .text.stat_dir_or_file
+                 0x0000000000000000       0x3e build/py/builtinimport.o
+  .rodata.mp_builtin___import__.str1.1
+                 0x0000000000000000       0x71 build/py/builtinimport.o
+  .text.mp_builtin___import__
+                 0x0000000000000000      0x4da build/py/builtinimport.o
+  .text.mp_obj_is_package
+                 0x0000000000000000       0x46 build/py/builtinimport.o
+  .rodata.__PRETTY_FUNCTION__.4925
+                 0x0000000000000000       0x16 build/py/builtinimport.o
+  .data.rel.ro.mp_builtin___import___obj
+                 0x0000000000000000       0x18 build/py/builtinimport.o
+  .comment       0x0000000000000000       0x2a build/py/builtinimport.o
+  .note.GNU-stack
+                 0x0000000000000000        0x0 build/py/builtinimport.o
+  .text          0x0000000000000000        0x0 build/py/builtinevex.o
+  .data          0x0000000000000000        0x0 build/py/builtinevex.o
+  .bss           0x0000000000000000        0x0 build/py/builtinevex.o
+  .text.eval_exec_helper
+                 0x0000000000000000       0xc6 build/py/builtinevex.o
+  .text.mp_builtin_eval
+                 0x0000000000000000        0xa build/py/builtinevex.o
+  .text.mp_builtin_exec
+                 0x0000000000000000        0xa build/py/builtinevex.o
+  .data.rel.ro.mp_builtin_exec_obj
+                 0x0000000000000000       0x18 build/py/builtinevex.o
+  .data.rel.ro.mp_builtin_eval_obj
+                 0x0000000000000000       0x18 build/py/builtinevex.o
+  .comment       0x0000000000000000       0x2a build/py/builtinevex.o
+  .note.GNU-stack
+                 0x0000000000000000        0x0 build/py/builtinevex.o
+  .text          0x0000000000000000        0x0 build/py/builtinhelp.o
+  .data          0x0000000000000000        0x0 build/py/builtinhelp.o
+  .bss           0x0000000000000000        0x0 build/py/builtinhelp.o
+  .comment       0x0000000000000000       0x2a build/py/builtinhelp.o
+  .note.GNU-stack
+                 0x0000000000000000        0x0 build/py/builtinhelp.o
+  .text          0x0000000000000000        0x0 build/py/modarray.o
+  .data          0x0000000000000000        0x0 build/py/modarray.o
+  .bss           0x0000000000000000        0x0 build/py/modarray.o
+  .comment       0x0000000000000000       0x2a build/py/modarray.o
+  .note.GNU-stack
+                 0x0000000000000000        0x0 build/py/modarray.o
+  .text          0x0000000000000000        0x0 build/py/modbuiltins.o
+  .data          0x0000000000000000        0x0 build/py/modbuiltins.o
+  .bss           0x0000000000000000        0x0 build/py/modbuiltins.o
+  .text.mp_builtin_globals
+                 0x0000000000000000        0x8 build/py/modbuiltins.o
+  .text.mp_builtin_locals
+                 0x0000000000000000        0x8 build/py/modbuiltins.o
+  .rodata.mp_builtin___build_class__.str1.1
+                 0x0000000000000000       0x20 build/py/modbuiltins.o
+  .text.mp_builtin___build_class__
+                 0x0000000000000000      0x101 build/py/modbuiltins.o
+  .text.mp_builtin_abs
+                 0x0000000000000000        0xd build/py/modbuiltins.o
+  .text.mp_builtin_hash
+                 0x0000000000000000        0xd build/py/modbuiltins.o
+  .text.mp_builtin_iter
+                 0x0000000000000000        0x7 build/py/modbuiltins.o
+  .text.mp_builtin_all
+                 0x0000000000000000       0x66 build/py/modbuiltins.o
+  .text.mp_builtin_any
+                 0x0000000000000000       0x66 build/py/modbuiltins.o
+  .text.mp_builtin_bin
+                 0x0000000000000000       0x4d build/py/modbuiltins.o
+  .text.mp_builtin_callable
+                 0x0000000000000000       0x1f build/py/modbuiltins.o
+  .rodata.mp_builtin_chr.str1.1
+                 0x0000000000000000       0x21 build/py/modbuiltins.o
+  .text.mp_builtin_chr
+                 0x0000000000000000      0x108 build/py/modbuiltins.o
+  .text.mp_builtin_divmod
+                 0x0000000000000000       0x10 build/py/modbuiltins.o
+  .text.mp_builtin_hex
+                 0x0000000000000000       0x12 build/py/modbuiltins.o
+  .text.mp_builtin_oct
+                 0x0000000000000000       0x12 build/py/modbuiltins.o
+  .text.mp_builtin_sum
+                 0x0000000000000000       0x78 build/py/modbuiltins.o
+  .rodata.mp_builtin_min_max.str1.1
+                 0x0000000000000000       0x19 build/py/modbuiltins.o
+  .text.mp_builtin_min_max
+                 0x0000000000000000      0x16f build/py/modbuiltins.o
+  .text.mp_builtin_max
+                 0x0000000000000000        0xa build/py/modbuiltins.o
+  .text.mp_builtin_min
+                 0x0000000000000000        0x7 build/py/modbuiltins.o
+  .rodata.mp_builtin_ord.str1.1
+                 0x0000000000000000       0x3a build/py/modbuiltins.o
+  .text.mp_builtin_ord
+                 0x0000000000000000       0xb7 build/py/modbuiltins.o
+  .text.mp_builtin_print
+                 0x0000000000000000       0xe7 build/py/modbuiltins.o
+  .text.mp_builtin_repr
+                 0x0000000000000000       0x72 build/py/modbuiltins.o
+  .text.mp_builtin_round
+                 0x0000000000000000       0xa4 build/py/modbuiltins.o
+  .rodata.mp_builtin_sorted.str1.1
+                 0x0000000000000000       0x2b build/py/modbuiltins.o
+  .text.mp_builtin_sorted
+                 0x0000000000000000       0x74 build/py/modbuiltins.o
+  .text.mp_builtin_hasattr
+                 0x0000000000000000       0x65 build/py/modbuiltins.o
+  .text.mp_builtin_getattr
+                 0x0000000000000000       0x92 build/py/modbuiltins.o
+  .text.mp_builtin_setattr
+                 0x0000000000000000       0x32 build/py/modbuiltins.o
+  .text.mp_builtin_delattr
+                 0x0000000000000000        0x7 build/py/modbuiltins.o
+  .text.mp_builtin_dir
+                 0x0000000000000000       0xd9 build/py/modbuiltins.o
+  .rodata.mp_builtin_pow.str1.1
+                 0x0000000000000000       0x1a build/py/modbuiltins.o
+  .text.mp_builtin_pow
+                 0x0000000000000000       0x2e build/py/modbuiltins.o
+  .rodata.mp_builtin___repl_print__.str1.1
+                 0x0000000000000000        0x2 build/py/modbuiltins.o
+  .text.mp_builtin___repl_print__
+                 0x0000000000000000       0x48 build/py/modbuiltins.o
+  .rodata.allowed_args.5791
+                 0x0000000000000000       0x20 build/py/modbuiltins.o
+  .rodata.__PRETTY_FUNCTION__.5641
+                 0x0000000000000000       0x1b build/py/modbuiltins.o
+  .data.rel.ro.mp_module_builtins
+                 0x0000000000000000       0x10 build/py/modbuiltins.o
+  .data.rel.ro.mp_module_builtins_globals
+                 0x0000000000000000       0x20 build/py/modbuiltins.o
+  .data.rel.ro.mp_module_builtins_globals_table
+                 0x0000000000000000      0x5b0 build/py/modbuiltins.o
+  .data.rel.ro.mp_builtin_len_obj
+                 0x0000000000000000       0x10 build/py/modbuiltins.o
+  .data.rel.ro.mp_builtin_id_obj
+                 0x0000000000000000       0x10 build/py/modbuiltins.o
+  .data.rel.ro.mp_builtin_locals_obj
+                 0x0000000000000000       0x10 build/py/modbuiltins.o
+  .data.rel.ro.mp_builtin_globals_obj
+                 0x0000000000000000       0x10 build/py/modbuiltins.o
+  .data.rel.ro.mp_builtin_hasattr_obj
+                 0x0000000000000000       0x10 build/py/modbuiltins.o
+  .data.rel.ro.mp_builtin_delattr_obj
+                 0x0000000000000000       0x10 build/py/modbuiltins.o
+  .data.rel.ro.mp_builtin_setattr_obj
+                 0x0000000000000000       0x10 build/py/modbuiltins.o
+  .data.rel.ro.mp_builtin_getattr_obj
+                 0x0000000000000000       0x18 build/py/modbuiltins.o
+  .data.rel.ro.mp_builtin_sorted_obj
+                 0x0000000000000000       0x18 build/py/modbuiltins.o
+  .data.rel.ro.mp_builtin_sum_obj
+                 0x0000000000000000       0x18 build/py/modbuiltins.o
+  .data.rel.ro.mp_builtin_round_obj
+                 0x0000000000000000       0x18 build/py/modbuiltins.o
+  .data.rel.ro.mp_builtin_repr_obj
+                 0x0000000000000000       0x10 build/py/modbuiltins.o
+  .data.rel.ro.mp_builtin___repl_print___obj
+                 0x0000000000000000       0x10 build/py/modbuiltins.o
+  .data.rel.ro.mp_builtin_print_obj
+                 0x0000000000000000       0x18 build/py/modbuiltins.o
+  .data.rel.ro.mp_builtin_pow_obj
+                 0x0000000000000000       0x18 build/py/modbuiltins.o
+  .data.rel.ro.mp_builtin_ord_obj
+                 0x0000000000000000       0x10 build/py/modbuiltins.o
+  .data.rel.ro.mp_builtin_oct_obj
+                 0x0000000000000000       0x10 build/py/modbuiltins.o
+  .data.rel.ro.mp_builtin_min_obj
+                 0x0000000000000000       0x18 build/py/modbuiltins.o
+  .data.rel.ro.mp_builtin_max_obj
+                 0x0000000000000000       0x18 build/py/modbuiltins.o
+  .data.rel.ro.mp_builtin_iter_obj
+                 0x0000000000000000       0x10 build/py/modbuiltins.o
+  .data.rel.ro.mp_builtin_hex_obj
+                 0x0000000000000000       0x10 build/py/modbuiltins.o
+  .data.rel.ro.mp_builtin_hash_obj
+                 0x0000000000000000       0x10 build/py/modbuiltins.o
+  .data.rel.ro.mp_builtin_divmod_obj
+                 0x0000000000000000       0x10 build/py/modbuiltins.o
+  .data.rel.ro.mp_builtin_dir_obj
+                 0x0000000000000000       0x18 build/py/modbuiltins.o
+  .data.rel.ro.mp_builtin_chr_obj
+                 0x0000000000000000       0x10 build/py/modbuiltins.o
+  .data.rel.ro.mp_builtin_callable_obj
+                 0x0000000000000000       0x10 build/py/modbuiltins.o
+  .data.rel.ro.mp_builtin_bin_obj
+                 0x0000000000000000       0x10 build/py/modbuiltins.o
+  .data.rel.ro.mp_builtin_any_obj
+                 0x0000000000000000       0x10 build/py/modbuiltins.o
+  .data.rel.ro.mp_builtin_all_obj
+                 0x0000000000000000       0x10 build/py/modbuiltins.o
+  .data.rel.ro.mp_builtin_abs_obj
+                 0x0000000000000000       0x10 build/py/modbuiltins.o
+  .data.rel.ro.mp_builtin___build_class___obj
+                 0x0000000000000000       0x18 build/py/modbuiltins.o
+  .rodata.cst8   0x0000000000000000        0x8 build/py/modbuiltins.o
+  .note.GNU-stack
+                 0x0000000000000000        0x0 build/py/modbuiltins.o
+  .text          0x0000000000000000        0x0 build/py/modcollections.o
+  .data          0x0000000000000000        0x0 build/py/modcollections.o
+  .bss           0x0000000000000000        0x0 build/py/modcollections.o
+  .comment       0x0000000000000000       0x2a build/py/modcollections.o
+  .note.GNU-stack
+                 0x0000000000000000        0x0 build/py/modcollections.o
+  .text          0x0000000000000000        0x0 build/py/modgc.o
+  .data          0x0000000000000000        0x0 build/py/modgc.o
+  .bss           0x0000000000000000        0x0 build/py/modgc.o
+  .comment       0x0000000000000000       0x2a build/py/modgc.o
+  .note.GNU-stack
+                 0x0000000000000000        0x0 build/py/modgc.o
+  .text          0x0000000000000000        0x0 build/py/modio.o
+  .data          0x0000000000000000        0x0 build/py/modio.o
+  .bss           0x0000000000000000        0x0 build/py/modio.o
+  .comment       0x0000000000000000       0x2a build/py/modio.o
+  .note.GNU-stack
+                 0x0000000000000000        0x0 build/py/modio.o
+  .text          0x0000000000000000        0x0 build/py/modmath.o
+  .data          0x0000000000000000        0x0 build/py/modmath.o
+  .bss           0x0000000000000000        0x0 build/py/modmath.o
+  .comment       0x0000000000000000       0x2a build/py/modmath.o
+  .note.GNU-stack
+                 0x0000000000000000        0x0 build/py/modmath.o
+  .text          0x0000000000000000        0x0 build/py/modcmath.o
+  .data          0x0000000000000000        0x0 build/py/modcmath.o
+  .bss           0x0000000000000000        0x0 build/py/modcmath.o
+  .comment       0x0000000000000000       0x2a build/py/modcmath.o
+  .note.GNU-stack
+                 0x0000000000000000        0x0 build/py/modcmath.o
+  .text          0x0000000000000000        0x0 build/py/modmicropython.o
+  .data          0x0000000000000000        0x0 build/py/modmicropython.o
+  .bss           0x0000000000000000        0x0 build/py/modmicropython.o
+  .text.mp_micropython_heap_unlock
+                 0x0000000000000000       0x12 build/py/modmicropython.o
+  .text.mp_micropython_heap_lock
+                 0x0000000000000000       0x12 build/py/modmicropython.o
+  .text.mp_micropython_opt_level
+                 0x0000000000000000       0x30 build/py/modmicropython.o
+  .data.rel.ro.mp_module_micropython
+                 0x0000000000000000       0x10 build/py/modmicropython.o
+  .data.rel.ro.mp_module_micropython_globals
+                 0x0000000000000000       0x20 build/py/modmicropython.o
+  .data.rel.ro.mp_module_micropython_globals_table
+                 0x0000000000000000       0x50 build/py/modmicropython.o
+  .data.rel.ro.mp_micropython_heap_unlock_obj
+                 0x0000000000000000       0x10 build/py/modmicropython.o
+  .data.rel.ro.mp_micropython_heap_lock_obj
+                 0x0000000000000000       0x10 build/py/modmicropython.o
+  .data.rel.ro.mp_micropython_opt_level_obj
+                 0x0000000000000000       0x18 build/py/modmicropython.o
+  .comment       0x0000000000000000       0x2a build/py/modmicropython.o
+  .note.GNU-stack
+                 0x0000000000000000        0x0 build/py/modmicropython.o
+  .text          0x0000000000000000        0x0 build/py/modstruct.o
+  .data          0x0000000000000000        0x0 build/py/modstruct.o
+  .bss           0x0000000000000000        0x0 build/py/modstruct.o
+  .text.get_fmt_type
+                 0x0000000000000000       0x23 build/py/modstruct.o
+  .text.get_fmt_num
+                 0x0000000000000000       0x4f build/py/modstruct.o
+  .text.calc_size_items
+                 0x0000000000000000       0xdf build/py/modstruct.o
+  .text.struct_calcsize
+                 0x0000000000000000       0x49 build/py/modstruct.o
+  .rodata.struct_unpack_from.str1.1
+                 0x0000000000000000       0x11 build/py/modstruct.o
+  .text.struct_unpack_from
+                 0x0000000000000000      0x197 build/py/modstruct.o
+  .text.struct_pack_into_internal
+                 0x0000000000000000      0x14a build/py/modstruct.o
+  .text.struct_pack
+                 0x0000000000000000       0x8e build/py/modstruct.o
+  .text.struct_pack_into
+                 0x0000000000000000       0xac build/py/modstruct.o
+  .data.rel.ro.mp_module_ustruct
+                 0x0000000000000000       0x10 build/py/modstruct.o
+  .data.rel.ro.mp_module_struct_globals
+                 0x0000000000000000       0x20 build/py/modstruct.o
+  .data.rel.ro.local.mp_module_struct_globals_table
+                 0x0000000000000000       0x60 build/py/modstruct.o
+  .data.rel.ro.struct_pack_into_obj
+                 0x0000000000000000       0x18 build/py/modstruct.o
+  .data.rel.ro.struct_pack_obj
+                 0x0000000000000000       0x18 build/py/modstruct.o
+  .data.rel.ro.struct_unpack_from_obj
+                 0x0000000000000000       0x18 build/py/modstruct.o
+  .data.rel.ro.struct_calcsize_obj
+                 0x0000000000000000       0x10 build/py/modstruct.o
+  .comment       0x0000000000000000       0x2a build/py/modstruct.o
+  .note.GNU-stack
+                 0x0000000000000000        0x0 build/py/modstruct.o
+  .text          0x0000000000000000        0x0 build/py/modsys.o
+  .data          0x0000000000000000        0x0 build/py/modsys.o
+  .bss           0x0000000000000000        0x0 build/py/modsys.o
+  .comment       0x0000000000000000       0x2a build/py/modsys.o
+  .note.GNU-stack
+                 0x0000000000000000        0x0 build/py/modsys.o
+  .text          0x0000000000000000        0x0 build/py/moduerrno.o
+  .data          0x0000000000000000        0x0 build/py/moduerrno.o
+  .bss           0x0000000000000000        0x0 build/py/moduerrno.o
+  .comment       0x0000000000000000       0x2a build/py/moduerrno.o
+  .note.GNU-stack
+                 0x0000000000000000        0x0 build/py/moduerrno.o
+  .text          0x0000000000000000        0x0 build/py/modthread.o
+  .data          0x0000000000000000        0x0 build/py/modthread.o
+  .bss           0x0000000000000000        0x0 build/py/modthread.o
+  .comment       0x0000000000000000       0x2a build/py/modthread.o
+  .note.GNU-stack
+                 0x0000000000000000        0x0 build/py/modthread.o
+  .text          0x0000000000000000        0x0 build/py/vm.o
+  .data          0x0000000000000000        0x0 build/py/vm.o
+  .bss           0x0000000000000000        0x0 build/py/vm.o
+  .rodata.mp_execute_bytecode.str1.8
+                 0x0000000000000000      0x177 build/py/vm.o
+  .rodata.mp_execute_bytecode.str1.1
+                 0x0000000000000000       0x3e build/py/vm.o
+  .text.mp_execute_bytecode
+                 0x0000000000000000     0x1824 build/py/vm.o
+  .rodata.mp_execute_bytecode
+                 0x0000000000000000      0x168 build/py/vm.o
+  .rodata.__PRETTY_FUNCTION__.4682
+                 0x0000000000000000       0x14 build/py/vm.o
+  .comment       0x0000000000000000       0x2a build/py/vm.o
+  .note.GNU-stack
+                 0x0000000000000000        0x0 build/py/vm.o
+  .text          0x0000000000000000        0x0 build/py/bc.o
+  .data          0x0000000000000000        0x0 build/py/bc.o
+  .bss           0x0000000000000000        0x0 build/py/bc.o
+  .rodata.fun_pos_args_mismatch.str1.1
+                 0x0000000000000000       0x35 build/py/bc.o
+  .text.unlikely.fun_pos_args_mismatch
+                 0x0000000000000000       0x3a build/py/bc.o
+  .rodata.mp_setup_code_state.str1.1
+                 0x0000000000000000       0xd9 build/py/bc.o
+  .text.mp_setup_code_state
+                 0x0000000000000000      0x49e build/py/bc.o
+  .note.GNU-stack
+                 0x0000000000000000        0x0 build/py/bc.o
+  .text          0x0000000000000000        0x0 build/py/showbc.o
+  .data          0x0000000000000000        0x0 build/py/showbc.o
+  .bss           0x0000000000000000        0x0 build/py/showbc.o
+  .comment       0x0000000000000000       0x2a build/py/showbc.o
+  .note.GNU-stack
+                 0x0000000000000000        0x0 build/py/showbc.o
+  .text          0x0000000000000000        0x0 build/py/repl.o
+  .data          0x0000000000000000        0x0 build/py/repl.o
+  .bss           0x0000000000000000        0x0 build/py/repl.o
+  .comment       0x0000000000000000       0x2a build/py/repl.o
+  .note.GNU-stack
+                 0x0000000000000000        0x0 build/py/repl.o
+  .text          0x0000000000000000        0x0 build/py/smallint.o
+  .data          0x0000000000000000        0x0 build/py/smallint.o
+  .bss           0x0000000000000000        0x0 build/py/smallint.o
+  .note.GNU-stack
+                 0x0000000000000000        0x0 build/py/smallint.o
+  .text          0x0000000000000000        0x0 build/py/frozenmod.o
+  .data          0x0000000000000000        0x0 build/py/frozenmod.o
+  .bss           0x0000000000000000        0x0 build/py/frozenmod.o
+  .comment       0x0000000000000000       0x2a build/py/frozenmod.o
+  .note.GNU-stack
+                 0x0000000000000000        0x0 build/py/frozenmod.o
+  .text          0x0000000000000000        0x0 build/main.o
+  .data          0x0000000000000000        0x0 build/main.o
+  .bss           0x0000000000000000        0x0 build/main.o
+  .text.mp_import_stat
+                 0x0000000000000000        0x3 build/main.o
+  .note.GNU-stack
+                 0x0000000000000000        0x0 build/main.o
+  .text          0x0000000000000000        0x0 build/gccollect.o
+  .data          0x0000000000000000        0x0 build/gccollect.o
+  .bss           0x0000000000000000        0x0 build/gccollect.o
+  .note.GNU-stack
+                 0x0000000000000000        0x0 build/gccollect.o
+  .data          0x0000000000000000        0x0 /usr/lib/x86_64-linux-gnu/libc_nonshared.a(elf-init.oS)
+  .bss           0x0000000000000000        0x0 /usr/lib/x86_64-linux-gnu/libc_nonshared.a(elf-init.oS)
+  .note.GNU-stack
+                 0x0000000000000000        0x0 /usr/lib/x86_64-linux-gnu/libc_nonshared.a(elf-init.oS)
+  .text          0x0000000000000000        0x0 /usr/lib/gcc/x86_64-linux-gnu/7/crtendS.o
+  .data          0x0000000000000000        0x0 /usr/lib/gcc/x86_64-linux-gnu/7/crtendS.o
+  .bss           0x0000000000000000        0x0 /usr/lib/gcc/x86_64-linux-gnu/7/crtendS.o
+  .note.GNU-stack
+                 0x0000000000000000        0x0 /usr/lib/gcc/x86_64-linux-gnu/7/crtendS.o
+  .text          0x0000000000000000        0x0 /usr/lib/gcc/x86_64-linux-gnu/7/../../../x86_64-linux-gnu/crtn.o
+  .data          0x0000000000000000        0x0 /usr/lib/gcc/x86_64-linux-gnu/7/../../../x86_64-linux-gnu/crtn.o
+  .bss           0x0000000000000000        0x0 /usr/lib/gcc/x86_64-linux-gnu/7/../../../x86_64-linux-gnu/crtn.o
+  .note.GNU-stack
+                 0x0000000000000000        0x0 /usr/lib/gcc/x86_64-linux-gnu/7/../../../x86_64-linux-gnu/crtn.o
+ 
+ Memory Configuration
+ 
+ Name             Origin             Length             Attributes
+ *default*        0x0000000000000000 0xffffffffffffffff
+ 
+ Linker script and memory map
+ 
+ LOAD /usr/lib/gcc/x86_64-linux-gnu/7/../../../x86_64-linux-gnu/Scrt1.o
+ LOAD /usr/lib/gcc/x86_64-linux-gnu/7/../../../x86_64-linux-gnu/crti.o
+ LOAD /usr/lib/gcc/x86_64-linux-gnu/7/crtbeginS.o
+ LOAD build/py/mpstate.o
+ LOAD build/py/nlr.o
+ LOAD build/py/nlrx86.o
+ LOAD build/py/nlrx64.o
+ LOAD build/py/nlrthumb.o
+ LOAD build/py/nlrpowerpc.o
+ LOAD build/py/nlrxtensa.o
+ LOAD build/py/nlrsetjmp.o
+ LOAD build/py/malloc.o
+ LOAD build/py/gc.o
+ LOAD build/py/pystack.o
+ LOAD build/py/qstr.o
+ LOAD build/py/vstr.o
+ LOAD build/py/mpprint.o
+ LOAD build/py/unicode.o
+ LOAD build/py/mpz.o
+ LOAD build/py/reader.o
+ LOAD build/py/lexer.o
+ LOAD build/py/parse.o
+ LOAD build/py/scope.o
+ LOAD build/py/compile.o
+ LOAD build/py/mpfile.o
+ LOAD build/py/emitcommon.o
+ LOAD build/py/emitbc.o
+ LOAD build/py/asmbase.o
+ LOAD build/py/asmx64.o
+ LOAD build/py/emitnx64.o
+ LOAD build/py/asmx86.o
+ LOAD build/py/emitnx86.o
+ LOAD build/py/asmthumb.o
+ LOAD build/py/emitnthumb.o
+ LOAD build/py/emitinlinethumb.o
+ LOAD build/py/asmarm.o
+ LOAD build/py/emitnarm.o
+ LOAD build/py/asmxtensa.o
+ LOAD build/py/emitnxtensa.o
+ LOAD build/py/emitinlinextensa.o
+ LOAD build/py/emitnxtensawin.o
+ LOAD build/py/formatfloat.o
+ LOAD build/py/parsenumbase.o
+ LOAD build/py/parsenum.o
+ LOAD build/py/emitglue.o
+ LOAD build/py/persistentcode.o
+ LOAD build/py/runtime.o
+ LOAD build/py/runtime_utils.o
+ LOAD build/py/scheduler.o
+ LOAD build/py/nativeglue.o
+ LOAD build/py/pairheap.o
+ LOAD build/py/ringbuf.o
+ LOAD build/py/stackctrl.o
+ LOAD build/py/argcheck.o
+ LOAD build/py/warning.o
+ LOAD build/py/profile.o
+ LOAD build/py/map.o
+ LOAD build/py/obj.o
+ LOAD build/py/objarray.o
+ LOAD build/py/objattrtuple.o
+ LOAD build/py/objbool.o
+ LOAD build/py/objboundmeth.o
+ LOAD build/py/objcell.o
+ LOAD build/py/objclosure.o
+ LOAD build/py/objcomplex.o
+ LOAD build/py/objdeque.o
+ LOAD build/py/objdict.o
+ LOAD build/py/objenumerate.o
+ LOAD build/py/objexcept.o
+ LOAD build/py/objfilter.o
+ LOAD build/py/objfloat.o
+ LOAD build/py/objfun.o
+ LOAD build/py/objgenerator.o
+ LOAD build/py/objgetitemiter.o
+ LOAD build/py/objint.o
+ LOAD build/py/objint_longlong.o
+ LOAD build/py/objint_mpz.o
+ LOAD build/py/objlist.o
+ LOAD build/py/objmap.o
+ LOAD build/py/objmodule.o
+ LOAD build/py/objobject.o
+ LOAD build/py/objpolyiter.o
+ LOAD build/py/objproperty.o
+ LOAD build/py/objnone.o
+ LOAD build/py/objnamedtuple.o
+ LOAD build/py/objrange.o
+ LOAD build/py/objreversed.o
+ LOAD build/py/objset.o
+ LOAD build/py/objsingleton.o
+ LOAD build/py/objslice.o
+ LOAD build/py/objstr.o
+ LOAD build/py/objstrunicode.o
+ LOAD build/py/objstringio.o
+ LOAD build/py/objtuple.o
+ LOAD build/py/objtype.o
+ LOAD build/py/objzip.o
+ LOAD build/py/opmethods.o
+ LOAD build/py/sequence.o
+ LOAD build/py/stream.o
+ LOAD build/py/binary.o
+ LOAD build/py/builtinimport.o
+ LOAD build/py/builtinevex.o
+ LOAD build/py/builtinhelp.o
+ LOAD build/py/modarray.o
+ LOAD build/py/modbuiltins.o
+ LOAD build/py/modcollections.o
+ LOAD build/py/modgc.o
+ LOAD build/py/modio.o
+ LOAD build/py/modmath.o
+ LOAD build/py/modcmath.o
+ LOAD build/py/modmicropython.o
+ LOAD build/py/modstruct.o
+ LOAD build/py/modsys.o
+ LOAD build/py/moduerrno.o
+ LOAD build/py/modthread.o
+ LOAD build/py/vm.o
+ LOAD build/py/bc.o
+ LOAD build/py/showbc.o
+ LOAD build/py/repl.o
+ LOAD build/py/smallint.o
+ LOAD build/py/frozenmod.o
+ LOAD build/main.o
+ LOAD build/gccollect.o
+ LOAD /usr/lib/gcc/x86_64-linux-gnu/7/../../../x86_64-linux-gnu/libm.so
+ START GROUP
+ LOAD /lib/x86_64-linux-gnu/libm.so.6
+ LOAD /usr/lib/x86_64-linux-gnu/libmvec_nonshared.a
+ LOAD /lib/x86_64-linux-gnu/libmvec.so.1
+ END GROUP
+ LOAD /usr/lib/gcc/x86_64-linux-gnu/7/libgcc.a
+ LOAD /usr/lib/gcc/x86_64-linux-gnu/7/libgcc_s.so
+ START GROUP
+ LOAD /usr/lib/gcc/x86_64-linux-gnu/7/libgcc_s.so.1
+ LOAD /usr/lib/gcc/x86_64-linux-gnu/7/libgcc.a
+ END GROUP
+ LOAD /usr/lib/gcc/x86_64-linux-gnu/7/../../../x86_64-linux-gnu/libc.so
+ START GROUP
+ LOAD /lib/x86_64-linux-gnu/libc.so.6
+ LOAD /usr/lib/x86_64-linux-gnu/libc_nonshared.a
+ LOAD /lib/x86_64-linux-gnu/ld-linux-x86-64.so.2
+ END GROUP
+ LOAD /usr/lib/gcc/x86_64-linux-gnu/7/libgcc.a
+ LOAD /usr/lib/gcc/x86_64-linux-gnu/7/libgcc_s.so
+ START GROUP
+ LOAD /usr/lib/gcc/x86_64-linux-gnu/7/libgcc_s.so.1
+ LOAD /usr/lib/gcc/x86_64-linux-gnu/7/libgcc.a
+ END GROUP
+ LOAD /usr/lib/gcc/x86_64-linux-gnu/7/crtendS.o
+ LOAD /usr/lib/gcc/x86_64-linux-gnu/7/../../../x86_64-linux-gnu/crtn.o
+                 [!provide]                        PROVIDE (__executable_start = SEGMENT_START ("text-segment", 0x0))
+                 0x0000000000000238                . = (SEGMENT_START ("text-segment", 0x0) + SIZEOF_HEADERS)
+ 
+ .interp         0x0000000000000238       0x1c
+  *(.interp)
+  .interp        0x0000000000000238       0x1c /usr/lib/gcc/x86_64-linux-gnu/7/../../../x86_64-linux-gnu/Scrt1.o
+ 
+ .note.ABI-tag   0x0000000000000254       0x20
+  .note.ABI-tag  0x0000000000000254       0x20 /usr/lib/gcc/x86_64-linux-gnu/7/../../../x86_64-linux-gnu/Scrt1.o
+ 
+ .note.gnu.build-id
+                 0x0000000000000274       0x24
+  *(.note.gnu.build-id)
+  .note.gnu.build-id
+                 0x0000000000000274       0x24 /usr/lib/gcc/x86_64-linux-gnu/7/../../../x86_64-linux-gnu/Scrt1.o
+ 
+ .hash
+  *(.hash)
+ 
+ .gnu.hash       0x0000000000000298       0x1c
+  *(.gnu.hash)
+  .gnu.hash      0x0000000000000298       0x1c /usr/lib/gcc/x86_64-linux-gnu/7/../../../x86_64-linux-gnu/Scrt1.o
+ 
+ .dynsym         0x00000000000002b8      0x330
+  *(.dynsym)
+  .dynsym        0x00000000000002b8      0x330 /usr/lib/gcc/x86_64-linux-gnu/7/../../../x86_64-linux-gnu/Scrt1.o
+ 
+ .dynstr         0x00000000000005e8      0x17c
+  *(.dynstr)
+  .dynstr        0x00000000000005e8      0x17c /usr/lib/gcc/x86_64-linux-gnu/7/../../../x86_64-linux-gnu/Scrt1.o
+ 
+ .gnu.version    0x0000000000000764       0x44
+  *(.gnu.version)
+  .gnu.version   0x0000000000000764       0x44 /usr/lib/gcc/x86_64-linux-gnu/7/../../../x86_64-linux-gnu/Scrt1.o
+ 
+ .gnu.version_d  0x00000000000007a8        0x0
+  *(.gnu.version_d)
+  .gnu.version_d
+                 0x00000000000007a8        0x0 /usr/lib/gcc/x86_64-linux-gnu/7/../../../x86_64-linux-gnu/Scrt1.o
+ 
+ .gnu.version_r  0x00000000000007a8       0x70
+  *(.gnu.version_r)
+  .gnu.version_r
+                 0x00000000000007a8       0x70 /usr/lib/gcc/x86_64-linux-gnu/7/../../../x86_64-linux-gnu/Scrt1.o
+ 
+ .rela.dyn       0x0000000000000818     0x7bd8
+  *(.rela.init)
+  *(.rela.text .rela.text.* .rela.gnu.linkonce.t.*)
+  .rela.text.nlr_push_tail
+                 0x0000000000000818        0x0 /usr/lib/gcc/x86_64-linux-gnu/7/../../../x86_64-linux-gnu/Scrt1.o
+  .rela.text.nlr_pop
+                 0x0000000000000818        0x0 /usr/lib/gcc/x86_64-linux-gnu/7/../../../x86_64-linux-gnu/Scrt1.o
+  .rela.text.nlr_jump
+                 0x0000000000000818        0x0 /usr/lib/gcc/x86_64-linux-gnu/7/../../../x86_64-linux-gnu/Scrt1.o
+  .rela.text.gc_mark_subtree
+                 0x0000000000000818        0x0 /usr/lib/gcc/x86_64-linux-gnu/7/../../../x86_64-linux-gnu/Scrt1.o
+  .rela.text.gc_free.part.0
+                 0x0000000000000818        0x0 /usr/lib/gcc/x86_64-linux-gnu/7/../../../x86_64-linux-gnu/Scrt1.o
+  .rela.text.gc_init
+                 0x0000000000000818        0x0 /usr/lib/gcc/x86_64-linux-gnu/7/../../../x86_64-linux-gnu/Scrt1.o
+  .rela.text.gc_is_locked
+                 0x0000000000000818        0x0 /usr/lib/gcc/x86_64-linux-gnu/7/../../../x86_64-linux-gnu/Scrt1.o
+  .rela.text.gc_collect_start
+                 0x0000000000000818        0x0 /usr/lib/gcc/x86_64-linux-gnu/7/../../../x86_64-linux-gnu/Scrt1.o
+  .rela.text.gc_collect_root
+                 0x0000000000000818        0x0 /usr/lib/gcc/x86_64-linux-gnu/7/../../../x86_64-linux-gnu/Scrt1.o
+  .rela.text.gc_collect_end
+                 0x0000000000000818        0x0 /usr/lib/gcc/x86_64-linux-gnu/7/../../../x86_64-linux-gnu/Scrt1.o
+  .rela.text.gc_alloc
+                 0x0000000000000818        0x0 /usr/lib/gcc/x86_64-linux-gnu/7/../../../x86_64-linux-gnu/Scrt1.o
+  .rela.text.gc_free
+                 0x0000000000000818        0x0 /usr/lib/gcc/x86_64-linux-gnu/7/../../../x86_64-linux-gnu/Scrt1.o
+  .rela.text.gc_realloc
+                 0x0000000000000818        0x0 /usr/lib/gcc/x86_64-linux-gnu/7/../../../x86_64-linux-gnu/Scrt1.o
+  .rela.text.find_qstr
+                 0x0000000000000818        0x0 /usr/lib/gcc/x86_64-linux-gnu/7/../../../x86_64-linux-gnu/Scrt1.o
+  .rela.text.qstr_init
+                 0x0000000000000818        0x0 /usr/lib/gcc/x86_64-linux-gnu/7/../../../x86_64-linux-gnu/Scrt1.o
+  .rela.text.qstr_find_strn
+                 0x0000000000000818        0x0 /usr/lib/gcc/x86_64-linux-gnu/7/../../../x86_64-linux-gnu/Scrt1.o
+  .rela.text.qstr_from_strn
+                 0x0000000000000818        0x0 /usr/lib/gcc/x86_64-linux-gnu/7/../../../x86_64-linux-gnu/Scrt1.o
+  .rela.text.mp_lexer_to_next
+                 0x0000000000000818        0x0 /usr/lib/gcc/x86_64-linux-gnu/7/../../../x86_64-linux-gnu/Scrt1.o
+  .rela.text.compile_assert_stmt
+                 0x0000000000000818        0x0 /usr/lib/gcc/x86_64-linux-gnu/7/../../../x86_64-linux-gnu/Scrt1.o
+  .rela.text.mp_compile_to_raw_code
+                 0x0000000000000818        0x0 /usr/lib/gcc/x86_64-linux-gnu/7/../../../x86_64-linux-gnu/Scrt1.o
+  .rela.text.mp_emit_bc_set_source_line
+                 0x0000000000000818        0x0 /usr/lib/gcc/x86_64-linux-gnu/7/../../../x86_64-linux-gnu/Scrt1.o
+  .rela.text.mp_init
+                 0x0000000000000818        0x0 /usr/lib/gcc/x86_64-linux-gnu/7/../../../x86_64-linux-gnu/Scrt1.o
+  .rela.text.mp_stack_ctrl_init
+                 0x0000000000000818        0x0 /usr/lib/gcc/x86_64-linux-gnu/7/../../../x86_64-linux-gnu/Scrt1.o
+  .rela.text.mp_stack_set_limit
+                 0x0000000000000818        0x0 /usr/lib/gcc/x86_64-linux-gnu/7/../../../x86_64-linux-gnu/Scrt1.o
+  .rela.text.mp_stack_check
+                 0x0000000000000818        0x0 /usr/lib/gcc/x86_64-linux-gnu/7/../../../x86_64-linux-gnu/Scrt1.o
+  .rela.text.mp_obj_exception_make_new
+                 0x0000000000000818        0x0 /usr/lib/gcc/x86_64-linux-gnu/7/../../../x86_64-linux-gnu/Scrt1.o
+  .rela.text.main_
+                 0x0000000000000818        0x0 /usr/lib/gcc/x86_64-linux-gnu/7/../../../x86_64-linux-gnu/Scrt1.o
+  .rela.text.gc_collect
+                 0x0000000000000818        0x0 /usr/lib/gcc/x86_64-linux-gnu/7/../../../x86_64-linux-gnu/Scrt1.o
+  .rela.text     0x0000000000000818        0x0 /usr/lib/gcc/x86_64-linux-gnu/7/../../../x86_64-linux-gnu/Scrt1.o
+  *(.rela.fini)
+  *(.rela.rodata .rela.rodata.* .rela.gnu.linkonce.r.*)
+  *(.rela.data .rela.data.* .rela.gnu.linkonce.d.*)
+  .rela.data.rel.ro
+                 0x0000000000000818        0x0 /usr/lib/gcc/x86_64-linux-gnu/7/../../../x86_64-linux-gnu/Scrt1.o
+  .rela.data.rel.local
+                 0x0000000000000818       0x18 /usr/lib/gcc/x86_64-linux-gnu/7/../../../x86_64-linux-gnu/Scrt1.o
+  .rela.data.rel.ro.local.mp_qstr_const_pool
+                 0x0000000000000830     0x2010 /usr/lib/gcc/x86_64-linux-gnu/7/../../../x86_64-linux-gnu/Scrt1.o
+  .rela.data.rel.ro.local.tok_kw
+                 0x0000000000002840      0x360 /usr/lib/gcc/x86_64-linux-gnu/7/../../../x86_64-linux-gnu/Scrt1.o
+  .rela.data.rel.ro.local.mp_constants_map
+                 0x0000000000002ba0       0x18 /usr/lib/gcc/x86_64-linux-gnu/7/../../../x86_64-linux-gnu/Scrt1.o
+  .rela.data.rel.ro.local.compile_function
+                 0x0000000000002bb8      0x570 /usr/lib/gcc/x86_64-linux-gnu/7/../../../x86_64-linux-gnu/Scrt1.o
+  .rela.data.rel.ro.emit_asm_table
+                 0x0000000000003128       0xa8 /usr/lib/gcc/x86_64-linux-gnu/7/../../../x86_64-linux-gnu/Scrt1.o
+  .rela.data.rel.ro.emit_native_table
+                 0x00000000000031d0       0xf0 /usr/lib/gcc/x86_64-linux-gnu/7/../../../x86_64-linux-gnu/Scrt1.o
+  .rela.data.rel.ro.local.emit_bc_method_table
+                 0x00000000000032c0      0x510 /usr/lib/gcc/x86_64-linux-gnu/7/../../../x86_64-linux-gnu/Scrt1.o
+  .rela.data.rel.ro.local.emit_native_x64_method_table
+                 0x00000000000037d0      0x540 /usr/lib/gcc/x86_64-linux-gnu/7/../../../x86_64-linux-gnu/Scrt1.o
+  .rela.data.rel.ro.local.emit_native_x86_method_table
+                 0x0000000000003d10      0x540 /usr/lib/gcc/x86_64-linux-gnu/7/../../../x86_64-linux-gnu/Scrt1.o
+  .rela.data.rel.ro.local.emit_native_thumb_method_table
+                 0x0000000000004250      0x540 /usr/lib/gcc/x86_64-linux-gnu/7/../../../x86_64-linux-gnu/Scrt1.o
+  .rela.data.rel.ro.local.emit_inline_thumb_method_table
+                 0x0000000000004790       0xa8 /usr/lib/gcc/x86_64-linux-gnu/7/../../../x86_64-linux-gnu/Scrt1.o
+  .rela.data.rel.ro.local.emit_native_arm_method_table
+                 0x0000000000004838      0x540 /usr/lib/gcc/x86_64-linux-gnu/7/../../../x86_64-linux-gnu/Scrt1.o
+  .rela.data.rel.ro.local.emit_native_xtensa_method_table
+                 0x0000000000004d78      0x540 /usr/lib/gcc/x86_64-linux-gnu/7/../../../x86_64-linux-gnu/Scrt1.o
+  .rela.data.rel.ro.local.emit_inline_xtensa_method_table
+                 0x00000000000052b8       0xa8 /usr/lib/gcc/x86_64-linux-gnu/7/../../../x86_64-linux-gnu/Scrt1.o
+  .rela.data.rel.ro.local.emit_native_xtensawin_method_table
+                 0x0000000000005360      0x540 /usr/lib/gcc/x86_64-linux-gnu/7/../../../x86_64-linux-gnu/Scrt1.o
+  .rela.data.rel.ro.mp_type_checked_fun
+                 0x00000000000058a0       0x30 /usr/lib/gcc/x86_64-linux-gnu/7/../../../x86_64-linux-gnu/Scrt1.o
+  .rela.data.rel.ro.local.mp_const_true_obj
+                 0x00000000000058d0       0x18 /usr/lib/gcc/x86_64-linux-gnu/7/../../../x86_64-linux-gnu/Scrt1.o
+  .rela.data.rel.ro.local.mp_const_false_obj
+                 0x00000000000058e8       0x18 /usr/lib/gcc/x86_64-linux-gnu/7/../../../x86_64-linux-gnu/Scrt1.o
+  .rela.data.rel.ro.mp_type_bool
+                 0x0000000000005900       0x78 /usr/lib/gcc/x86_64-linux-gnu/7/../../../x86_64-linux-gnu/Scrt1.o
+  .rela.data.rel.ro.mp_type_complex
+                 0x0000000000005978       0x90 /usr/lib/gcc/x86_64-linux-gnu/7/../../../x86_64-linux-gnu/Scrt1.o
+  .rela.data.rel.ro.mp_type_dict
+                 0x0000000000005a08       0xc0 /usr/lib/gcc/x86_64-linux-gnu/7/../../../x86_64-linux-gnu/Scrt1.o
+  .rela.data.rel.ro.local.dict_locals_dict
+                 0x0000000000005ac8       0x30 /usr/lib/gcc/x86_64-linux-gnu/7/../../../x86_64-linux-gnu/Scrt1.o
+  .rela.data.rel.ro.dict_locals_dict_table
+                 0x0000000000005af8      0x150 /usr/lib/gcc/x86_64-linux-gnu/7/../../../x86_64-linux-gnu/Scrt1.o
+  .rela.data.rel.ro.dict_values_obj
+                 0x0000000000005c48       0x30 /usr/lib/gcc/x86_64-linux-gnu/7/../../../x86_64-linux-gnu/Scrt1.o
+  .rela.data.rel.ro.dict_keys_obj
+                 0x0000000000005c78       0x30 /usr/lib/gcc/x86_64-linux-gnu/7/../../../x86_64-linux-gnu/Scrt1.o
+  .rela.data.rel.ro.dict_items_obj
+                 0x0000000000005ca8       0x30 /usr/lib/gcc/x86_64-linux-gnu/7/../../../x86_64-linux-gnu/Scrt1.o
+  .rela.data.rel.ro.local.mp_dict_view_names
+                 0x0000000000005cd8       0x48 /usr/lib/gcc/x86_64-linux-gnu/7/../../../x86_64-linux-gnu/Scrt1.o
+  .rela.data.rel.ro.dict_view_it_type
+                 0x0000000000005d20       0x48 /usr/lib/gcc/x86_64-linux-gnu/7/../../../x86_64-linux-gnu/Scrt1.o
+  .rela.data.rel.ro.dict_view_type
+                 0x0000000000005d68       0x60 /usr/lib/gcc/x86_64-linux-gnu/7/../../../x86_64-linux-gnu/Scrt1.o
+  .rela.data.rel.ro.dict_update_obj
+                 0x0000000000005dc8       0x30 /usr/lib/gcc/x86_64-linux-gnu/7/../../../x86_64-linux-gnu/Scrt1.o
+  .rela.data.rel.ro.dict_popitem_obj
+                 0x0000000000005df8       0x30 /usr/lib/gcc/x86_64-linux-gnu/7/../../../x86_64-linux-gnu/Scrt1.o
+  .rela.data.rel.ro.dict_setdefault_obj
+                 0x0000000000005e28       0x30 /usr/lib/gcc/x86_64-linux-gnu/7/../../../x86_64-linux-gnu/Scrt1.o
+  .rela.data.rel.ro.dict_pop_obj
+                 0x0000000000005e58       0x30 /usr/lib/gcc/x86_64-linux-gnu/7/../../../x86_64-linux-gnu/Scrt1.o
+  .rela.data.rel.ro.dict_get_obj
+                 0x0000000000005e88       0x30 /usr/lib/gcc/x86_64-linux-gnu/7/../../../x86_64-linux-gnu/Scrt1.o
+  .rela.data.rel.ro.dict_fromkeys_obj
+                 0x0000000000005eb8       0x30 /usr/lib/gcc/x86_64-linux-gnu/7/../../../x86_64-linux-gnu/Scrt1.o
+  .rela.data.rel.ro.dict_fromkeys_fun_obj
+                 0x0000000000005ee8       0x30 /usr/lib/gcc/x86_64-linux-gnu/7/../../../x86_64-linux-gnu/Scrt1.o
+  .rela.data.rel.ro.dict_copy_obj
+                 0x0000000000005f18       0x30 /usr/lib/gcc/x86_64-linux-gnu/7/../../../x86_64-linux-gnu/Scrt1.o
+  .rela.data.rel.ro.dict_clear_obj
+                 0x0000000000005f48       0x30 /usr/lib/gcc/x86_64-linux-gnu/7/../../../x86_64-linux-gnu/Scrt1.o
+  .rela.data.rel.ro.mp_type_UnicodeError
+                 0x0000000000005f78       0x78 /usr/lib/gcc/x86_64-linux-gnu/7/../../../x86_64-linux-gnu/Scrt1.o
+  .rela.data.rel.ro.mp_type_ValueError
+                 0x0000000000005ff0       0x78 /usr/lib/gcc/x86_64-linux-gnu/7/../../../x86_64-linux-gnu/Scrt1.o
+  .rela.data.rel.ro.mp_type_ViperTypeError
+                 0x0000000000006068       0x78 /usr/lib/gcc/x86_64-linux-gnu/7/../../../x86_64-linux-gnu/Scrt1.o
+  .rela.data.rel.ro.mp_type_TypeError
+                 0x00000000000060e0       0x78 /usr/lib/gcc/x86_64-linux-gnu/7/../../../x86_64-linux-gnu/Scrt1.o
+  .rela.data.rel.ro.mp_type_IndentationError
+                 0x0000000000006158       0x78 /usr/lib/gcc/x86_64-linux-gnu/7/../../../x86_64-linux-gnu/Scrt1.o
+  .rela.data.rel.ro.mp_type_SyntaxError
+                 0x00000000000061d0       0x78 /usr/lib/gcc/x86_64-linux-gnu/7/../../../x86_64-linux-gnu/Scrt1.o
+  .rela.data.rel.ro.mp_type_NotImplementedError
+                 0x0000000000006248       0x78 /usr/lib/gcc/x86_64-linux-gnu/7/../../../x86_64-linux-gnu/Scrt1.o
+  .rela.data.rel.ro.mp_type_RuntimeError
+                 0x00000000000062c0       0x78 /usr/lib/gcc/x86_64-linux-gnu/7/../../../x86_64-linux-gnu/Scrt1.o
+  .rela.data.rel.ro.mp_type_OSError
+                 0x0000000000006338       0x78 /usr/lib/gcc/x86_64-linux-gnu/7/../../../x86_64-linux-gnu/Scrt1.o
+  .rela.data.rel.ro.mp_type_MemoryError
+                 0x00000000000063b0       0x78 /usr/lib/gcc/x86_64-linux-gnu/7/../../../x86_64-linux-gnu/Scrt1.o
+  .rela.data.rel.ro.mp_type_KeyError
+                 0x0000000000006428       0x78 /usr/lib/gcc/x86_64-linux-gnu/7/../../../x86_64-linux-gnu/Scrt1.o
+  .rela.data.rel.ro.mp_type_IndexError
+                 0x00000000000064a0       0x78 /usr/lib/gcc/x86_64-linux-gnu/7/../../../x86_64-linux-gnu/Scrt1.o
+  .rela.data.rel.ro.mp_type_LookupError
+                 0x0000000000006518       0x78 /usr/lib/gcc/x86_64-linux-gnu/7/../../../x86_64-linux-gnu/Scrt1.o
+  .rela.data.rel.ro.mp_type_AttributeError
+                 0x0000000000006590       0x78 /usr/lib/gcc/x86_64-linux-gnu/7/../../../x86_64-linux-gnu/Scrt1.o
+  .rela.data.rel.ro.mp_type_ZeroDivisionError
+                 0x0000000000006608       0x78 /usr/lib/gcc/x86_64-linux-gnu/7/../../../x86_64-linux-gnu/Scrt1.o
+  .rela.data.rel.ro.mp_type_OverflowError
+                 0x0000000000006680       0x78 /usr/lib/gcc/x86_64-linux-gnu/7/../../../x86_64-linux-gnu/Scrt1.o
+  .rela.data.rel.ro.mp_type_ArithmeticError
+                 0x00000000000066f8       0x78 /usr/lib/gcc/x86_64-linux-gnu/7/../../../x86_64-linux-gnu/Scrt1.o
+  .rela.data.rel.ro.mp_type_StopIteration
+                 0x0000000000006770       0x78 /usr/lib/gcc/x86_64-linux-gnu/7/../../../x86_64-linux-gnu/Scrt1.o
+  .rela.data.rel.ro.mp_type_Exception
+                 0x00000000000067e8       0x78 /usr/lib/gcc/x86_64-linux-gnu/7/../../../x86_64-linux-gnu/Scrt1.o
+  .rela.data.rel.ro.mp_type_BaseException
+                 0x0000000000006860       0x60 /usr/lib/gcc/x86_64-linux-gnu/7/../../../x86_64-linux-gnu/Scrt1.o
+  .rela.data.rel.ro.mp_type_float
+                 0x00000000000068c0       0x78 /usr/lib/gcc/x86_64-linux-gnu/7/../../../x86_64-linux-gnu/Scrt1.o
+  .rela.data.rel.ro.mp_type_fun_builtin_var
+                 0x0000000000006938       0x48 /usr/lib/gcc/x86_64-linux-gnu/7/../../../x86_64-linux-gnu/Scrt1.o
+  .rela.data.rel.ro.mp_type_fun_builtin_3
+                 0x0000000000006980       0x48 /usr/lib/gcc/x86_64-linux-gnu/7/../../../x86_64-linux-gnu/Scrt1.o
+  .rela.data.rel.ro.mp_type_fun_builtin_2
+                 0x00000000000069c8       0x48 /usr/lib/gcc/x86_64-linux-gnu/7/../../../x86_64-linux-gnu/Scrt1.o
+  .rela.data.rel.ro.mp_type_fun_builtin_1
+                 0x0000000000006a10       0x48 /usr/lib/gcc/x86_64-linux-gnu/7/../../../x86_64-linux-gnu/Scrt1.o
+  .rela.data.rel.ro.mp_type_fun_builtin_0
+                 0x0000000000006a58       0x48 /usr/lib/gcc/x86_64-linux-gnu/7/../../../x86_64-linux-gnu/Scrt1.o
+  .rela.data.rel.ro.it_type
+                 0x0000000000006aa0       0x48 /usr/lib/gcc/x86_64-linux-gnu/7/../../../x86_64-linux-gnu/Scrt1.o
+  .rela.data.rel.ro.mp_type_int
+                 0x0000000000006ae8       0x90 /usr/lib/gcc/x86_64-linux-gnu/7/../../../x86_64-linux-gnu/Scrt1.o
+  .rela.data.rel.ro.int_locals_dict
+                 0x0000000000006b78       0x30 /usr/lib/gcc/x86_64-linux-gnu/7/../../../x86_64-linux-gnu/Scrt1.o
+  .rela.data.rel.ro.local.int_locals_dict_table
+                 0x0000000000006ba8       0x30 /usr/lib/gcc/x86_64-linux-gnu/7/../../../x86_64-linux-gnu/Scrt1.o
+  .rela.data.rel.ro.int_to_bytes_obj
+                 0x0000000000006bd8       0x30 /usr/lib/gcc/x86_64-linux-gnu/7/../../../x86_64-linux-gnu/Scrt1.o
+  .rela.data.rel.ro.int_from_bytes_obj
+                 0x0000000000006c08       0x30 /usr/lib/gcc/x86_64-linux-gnu/7/../../../x86_64-linux-gnu/Scrt1.o
+  .rela.data.rel.ro.int_from_bytes_fun_obj
+                 0x0000000000006c38       0x30 /usr/lib/gcc/x86_64-linux-gnu/7/../../../x86_64-linux-gnu/Scrt1.o
+  .rela.data.rel.ro.allowed_args.3948
+                 0x0000000000006c68       0x18 /usr/lib/gcc/x86_64-linux-gnu/7/../../../x86_64-linux-gnu/Scrt1.o
+  .rela.data.rel.ro.mp_type_list
+                 0x0000000000006c80       0xc0 /usr/lib/gcc/x86_64-linux-gnu/7/../../../x86_64-linux-gnu/Scrt1.o
+  .rela.data.rel.ro.list_locals_dict
+                 0x0000000000006d40       0x30 /usr/lib/gcc/x86_64-linux-gnu/7/../../../x86_64-linux-gnu/Scrt1.o
+  .rela.data.rel.ro.local.list_locals_dict_table
+                 0x0000000000006d70      0x108 /usr/lib/gcc/x86_64-linux-gnu/7/../../../x86_64-linux-gnu/Scrt1.o
+  .rela.data.rel.ro.list_sort_obj
+                 0x0000000000006e78       0x30 /usr/lib/gcc/x86_64-linux-gnu/7/../../../x86_64-linux-gnu/Scrt1.o
+  .rela.data.rel.ro.list_reverse_obj
+                 0x0000000000006ea8       0x30 /usr/lib/gcc/x86_64-linux-gnu/7/../../../x86_64-linux-gnu/Scrt1.o
+  .rela.data.rel.ro.list_remove_obj
+                 0x0000000000006ed8       0x30 /usr/lib/gcc/x86_64-linux-gnu/7/../../../x86_64-linux-gnu/Scrt1.o
+  .rela.data.rel.ro.list_pop_obj
+                 0x0000000000006f08       0x30 /usr/lib/gcc/x86_64-linux-gnu/7/../../../x86_64-linux-gnu/Scrt1.o
+  .rela.data.rel.ro.list_insert_obj
+                 0x0000000000006f38       0x30 /usr/lib/gcc/x86_64-linux-gnu/7/../../../x86_64-linux-gnu/Scrt1.o
+  .rela.data.rel.ro.list_index_obj
+                 0x0000000000006f68       0x30 /usr/lib/gcc/x86_64-linux-gnu/7/../../../x86_64-linux-gnu/Scrt1.o
+  .rela.data.rel.ro.list_count_obj
+                 0x0000000000006f98       0x30 /usr/lib/gcc/x86_64-linux-gnu/7/../../../x86_64-linux-gnu/Scrt1.o
+  .rela.data.rel.ro.list_copy_obj
+                 0x0000000000006fc8       0x30 /usr/lib/gcc/x86_64-linux-gnu/7/../../../x86_64-linux-gnu/Scrt1.o
+  .rela.data.rel.ro.list_clear_obj
+                 0x0000000000006ff8       0x30 /usr/lib/gcc/x86_64-linux-gnu/7/../../../x86_64-linux-gnu/Scrt1.o
+  .rela.data.rel.ro.list_extend_obj
+                 0x0000000000007028       0x30 /usr/lib/gcc/x86_64-linux-gnu/7/../../../x86_64-linux-gnu/Scrt1.o
+  .rela.data.rel.ro.list_append_obj
+                 0x0000000000007058       0x30 /usr/lib/gcc/x86_64-linux-gnu/7/../../../x86_64-linux-gnu/Scrt1.o
+  .rela.data.rel.ro.mp_type_object
+                 0x0000000000007088       0x48 /usr/lib/gcc/x86_64-linux-gnu/7/../../../x86_64-linux-gnu/Scrt1.o
+  .rela.data.rel.ro.object_locals_dict
+                 0x00000000000070d0       0x30 /usr/lib/gcc/x86_64-linux-gnu/7/../../../x86_64-linux-gnu/Scrt1.o
+  .rela.data.rel.ro.local.object_locals_dict_table
+                 0x0000000000007100       0x30 /usr/lib/gcc/x86_64-linux-gnu/7/../../../x86_64-linux-gnu/Scrt1.o
+  .rela.data.rel.ro.object___new___obj
+                 0x0000000000007130       0x30 /usr/lib/gcc/x86_64-linux-gnu/7/../../../x86_64-linux-gnu/Scrt1.o
+  .rela.data.rel.ro.object___new___fun_obj
+                 0x0000000000007160       0x30 /usr/lib/gcc/x86_64-linux-gnu/7/../../../x86_64-linux-gnu/Scrt1.o
+  .rela.data.rel.ro.object___init___obj
+                 0x0000000000007190       0x30 /usr/lib/gcc/x86_64-linux-gnu/7/../../../x86_64-linux-gnu/Scrt1.o
+  .rela.data.rel.ro.mp_type_polymorph_iter
+                 0x00000000000071c0       0x48 /usr/lib/gcc/x86_64-linux-gnu/7/../../../x86_64-linux-gnu/Scrt1.o
+  .rela.data.rel.ro.allowed_args.4161
+                 0x0000000000007208       0x60 /usr/lib/gcc/x86_64-linux-gnu/7/../../../x86_64-linux-gnu/Scrt1.o
+  .rela.data.rel.ro.mp_type_property
+                 0x0000000000007268       0x48 /usr/lib/gcc/x86_64-linux-gnu/7/../../../x86_64-linux-gnu/Scrt1.o
+  .rela.data.rel.ro.property_locals_dict
+                 0x00000000000072b0       0x30 /usr/lib/gcc/x86_64-linux-gnu/7/../../../x86_64-linux-gnu/Scrt1.o
+  .rela.data.rel.ro.local.property_locals_dict_table
+                 0x00000000000072e0       0x48 /usr/lib/gcc/x86_64-linux-gnu/7/../../../x86_64-linux-gnu/Scrt1.o
+  .rela.data.rel.ro.property_deleter_obj
+                 0x0000000000007328       0x30 /usr/lib/gcc/x86_64-linux-gnu/7/../../../x86_64-linux-gnu/Scrt1.o
+  .rela.data.rel.ro.property_setter_obj
+                 0x0000000000007358       0x30 /usr/lib/gcc/x86_64-linux-gnu/7/../../../x86_64-linux-gnu/Scrt1.o
+  .rela.data.rel.ro.property_getter_obj
+                 0x0000000000007388       0x30 /usr/lib/gcc/x86_64-linux-gnu/7/../../../x86_64-linux-gnu/Scrt1.o
+  .rela.data.rel.ro.local.mp_const_none_obj
+                 0x00000000000073b8       0x18 /usr/lib/gcc/x86_64-linux-gnu/7/../../../x86_64-linux-gnu/Scrt1.o
+  .rela.data.rel.ro.mp_type_NoneType
+                 0x00000000000073d0       0x48 /usr/lib/gcc/x86_64-linux-gnu/7/../../../x86_64-linux-gnu/Scrt1.o
+  .rela.data.rel.ro.local.mp_const_ellipsis_obj
+                 0x0000000000007418       0x18 /usr/lib/gcc/x86_64-linux-gnu/7/../../../x86_64-linux-gnu/Scrt1.o
+  .rela.data.rel.ro.mp_type_singleton
+                 0x0000000000007430       0x30 /usr/lib/gcc/x86_64-linux-gnu/7/../../../x86_64-linux-gnu/Scrt1.o
+  .rela.data.rel.ro.mp_type_slice
+                 0x0000000000007460       0x30 /usr/lib/gcc/x86_64-linux-gnu/7/../../../x86_64-linux-gnu/Scrt1.o
+  .rela.data.rel.ro.local.mp_const_empty_bytes_obj
+                 0x0000000000007490       0x30 /usr/lib/gcc/x86_64-linux-gnu/7/../../../x86_64-linux-gnu/Scrt1.o
+  .rela.data.rel.ro.mp_type_bytes
+                 0x00000000000074c0       0xc0 /usr/lib/gcc/x86_64-linux-gnu/7/../../../x86_64-linux-gnu/Scrt1.o
+  .rela.data.rel.ro.str8_locals_dict
+                 0x0000000000007580       0x30 /usr/lib/gcc/x86_64-linux-gnu/7/../../../x86_64-linux-gnu/Scrt1.o
+  .rela.data.rel.ro.local.str8_locals_dict_table
+                 0x00000000000075b0      0x228 /usr/lib/gcc/x86_64-linux-gnu/7/../../../x86_64-linux-gnu/Scrt1.o
+  .rela.data.rel.ro.str_encode_obj
+                 0x00000000000077d8       0x30 /usr/lib/gcc/x86_64-linux-gnu/7/../../../x86_64-linux-gnu/Scrt1.o
+  .rela.data.rel.ro.bytes_decode_obj
+                 0x0000000000007808       0x30 /usr/lib/gcc/x86_64-linux-gnu/7/../../../x86_64-linux-gnu/Scrt1.o
+  .rela.data.rel.ro.str_islower_obj
+                 0x0000000000007838       0x30 /usr/lib/gcc/x86_64-linux-gnu/7/../../../x86_64-linux-gnu/Scrt1.o
+  .rela.data.rel.ro.str_isupper_obj
+                 0x0000000000007868       0x30 /usr/lib/gcc/x86_64-linux-gnu/7/../../../x86_64-linux-gnu/Scrt1.o
+  .rela.data.rel.ro.str_isdigit_obj
+                 0x0000000000007898       0x30 /usr/lib/gcc/x86_64-linux-gnu/7/../../../x86_64-linux-gnu/Scrt1.o
+  .rela.data.rel.ro.str_isalpha_obj
+                 0x00000000000078c8       0x30 /usr/lib/gcc/x86_64-linux-gnu/7/../../../x86_64-linux-gnu/Scrt1.o
+  .rela.data.rel.ro.str_isspace_obj
+                 0x00000000000078f8       0x30 /usr/lib/gcc/x86_64-linux-gnu/7/../../../x86_64-linux-gnu/Scrt1.o
+  .rela.data.rel.ro.str_upper_obj
+                 0x0000000000007928       0x30 /usr/lib/gcc/x86_64-linux-gnu/7/../../../x86_64-linux-gnu/Scrt1.o
+  .rela.data.rel.ro.str_lower_obj
+                 0x0000000000007958       0x30 /usr/lib/gcc/x86_64-linux-gnu/7/../../../x86_64-linux-gnu/Scrt1.o
+  .rela.data.rel.ro.str_count_obj
+                 0x0000000000007988       0x30 /usr/lib/gcc/x86_64-linux-gnu/7/../../../x86_64-linux-gnu/Scrt1.o
+  .rela.data.rel.ro.str_replace_obj
+                 0x00000000000079b8       0x30 /usr/lib/gcc/x86_64-linux-gnu/7/../../../x86_64-linux-gnu/Scrt1.o
+  .rela.data.rel.ro.str_format_obj
+                 0x00000000000079e8       0x30 /usr/lib/gcc/x86_64-linux-gnu/7/../../../x86_64-linux-gnu/Scrt1.o
+  .rela.data.rel.ro.str_rstrip_obj
+                 0x0000000000007a18       0x30 /usr/lib/gcc/x86_64-linux-gnu/7/../../../x86_64-linux-gnu/Scrt1.o
+  .rela.data.rel.ro.str_lstrip_obj
+                 0x0000000000007a48       0x30 /usr/lib/gcc/x86_64-linux-gnu/7/../../../x86_64-linux-gnu/Scrt1.o
+  .rela.data.rel.ro.str_strip_obj
+                 0x0000000000007a78       0x30 /usr/lib/gcc/x86_64-linux-gnu/7/../../../x86_64-linux-gnu/Scrt1.o
+  .rela.data.rel.ro.str_endswith_obj
+                 0x0000000000007aa8       0x30 /usr/lib/gcc/x86_64-linux-gnu/7/../../../x86_64-linux-gnu/Scrt1.o
+  .rela.data.rel.ro.str_startswith_obj
+                 0x0000000000007ad8       0x30 /usr/lib/gcc/x86_64-linux-gnu/7/../../../x86_64-linux-gnu/Scrt1.o
+  .rela.data.rel.ro.str_rindex_obj
+                 0x0000000000007b08       0x30 /usr/lib/gcc/x86_64-linux-gnu/7/../../../x86_64-linux-gnu/Scrt1.o
+  .rela.data.rel.ro.str_index_obj
+                 0x0000000000007b38       0x30 /usr/lib/gcc/x86_64-linux-gnu/7/../../../x86_64-linux-gnu/Scrt1.o
+  .rela.data.rel.ro.str_rfind_obj
+                 0x0000000000007b68       0x30 /usr/lib/gcc/x86_64-linux-gnu/7/../../../x86_64-linux-gnu/Scrt1.o
+  .rela.data.rel.ro.str_find_obj
+                 0x0000000000007b98       0x30 /usr/lib/gcc/x86_64-linux-gnu/7/../../../x86_64-linux-gnu/Scrt1.o
+  .rela.data.rel.ro.str_rsplit_obj
+                 0x0000000000007bc8       0x30 /usr/lib/gcc/x86_64-linux-gnu/7/../../../x86_64-linux-gnu/Scrt1.o
+  .rela.data.rel.ro.str_split_obj
+                 0x0000000000007bf8       0x30 /usr/lib/gcc/x86_64-linux-gnu/7/../../../x86_64-linux-gnu/Scrt1.o
+  .rela.data.rel.ro.str_join_obj
+                 0x0000000000007c28       0x30 /usr/lib/gcc/x86_64-linux-gnu/7/../../../x86_64-linux-gnu/Scrt1.o
+  .rela.data.rel.ro.mp_type_str
+                 0x0000000000007c58       0xd8 /usr/lib/gcc/x86_64-linux-gnu/7/../../../x86_64-linux-gnu/Scrt1.o
+  .rela.data.rel.ro.struni_locals_dict
+                 0x0000000000007d30       0x30 /usr/lib/gcc/x86_64-linux-gnu/7/../../../x86_64-linux-gnu/Scrt1.o
+  .rela.data.rel.ro.struni_locals_dict_table
+                 0x0000000000007d60      0x228 /usr/lib/gcc/x86_64-linux-gnu/7/../../../x86_64-linux-gnu/Scrt1.o
+  .rela.data.rel.ro.local.mp_const_empty_tuple_obj
+                 0x0000000000007f88       0x18 /usr/lib/gcc/x86_64-linux-gnu/7/../../../x86_64-linux-gnu/Scrt1.o
+  .rela.data.rel.ro.mp_type_tuple
+                 0x0000000000007fa0       0xc0 /usr/lib/gcc/x86_64-linux-gnu/7/../../../x86_64-linux-gnu/Scrt1.o
+  .rela.data.rel.ro.tuple_locals_dict
+                 0x0000000000008060       0x30 /usr/lib/gcc/x86_64-linux-gnu/7/../../../x86_64-linux-gnu/Scrt1.o
+  .rela.data.rel.ro.local.tuple_locals_dict_table
+                 0x0000000000008090       0x30 /usr/lib/gcc/x86_64-linux-gnu/7/../../../x86_64-linux-gnu/Scrt1.o
+  .rela.data.rel.ro.tuple_index_obj
+                 0x00000000000080c0       0x30 /usr/lib/gcc/x86_64-linux-gnu/7/../../../x86_64-linux-gnu/Scrt1.o
+  .rela.data.rel.ro.tuple_count_obj
+                 0x00000000000080f0       0x30 /usr/lib/gcc/x86_64-linux-gnu/7/../../../x86_64-linux-gnu/Scrt1.o
+  .rela.data.rel.ro.local.mp_type_classmethod
+                 0x0000000000008120       0x30 /usr/lib/gcc/x86_64-linux-gnu/7/../../../x86_64-linux-gnu/Scrt1.o
+  .rela.data.rel.ro.local.mp_type_staticmethod
+                 0x0000000000008150       0x30 /usr/lib/gcc/x86_64-linux-gnu/7/../../../x86_64-linux-gnu/Scrt1.o
+  .rela.data.rel.ro.mp_type_type
+                 0x0000000000008180       0x90 /usr/lib/gcc/x86_64-linux-gnu/7/../../../x86_64-linux-gnu/Scrt1.o
+  .rela.data.rel.ro.native_base_init_wrapper_obj
+                 0x0000000000008210       0x30 /usr/lib/gcc/x86_64-linux-gnu/7/../../../x86_64-linux-gnu/Scrt1.o
+  .rela.data.rel.ro.mp_op_delitem_obj
+                 0x0000000000008240       0x30 /usr/lib/gcc/x86_64-linux-gnu/7/../../../x86_64-linux-gnu/Scrt1.o
+  .rela.data.rel.ro.mp_op_setitem_obj
+                 0x0000000000008270       0x30 /usr/lib/gcc/x86_64-linux-gnu/7/../../../x86_64-linux-gnu/Scrt1.o
+  .rela.data.rel.ro.mp_op_getitem_obj
+                 0x00000000000082a0       0x30 /usr/lib/gcc/x86_64-linux-gnu/7/../../../x86_64-linux-gnu/Scrt1.o
+  .rela.data.rel.ro.mp_builtin_next_obj
+                 0x00000000000082d0       0x30 /usr/lib/gcc/x86_64-linux-gnu/7/../../../x86_64-linux-gnu/Scrt1.o
+  .rela.data.rel.ro.local.mp_stderr_print
+                 0x0000000000008300       0x18 /usr/lib/gcc/x86_64-linux-gnu/7/../../../x86_64-linux-gnu/Scrt1.o
+  *(.rela.tdata .rela.tdata.* .rela.gnu.linkonce.td.*)
+  *(.rela.tbss .rela.tbss.* .rela.gnu.linkonce.tb.*)
+  *(.rela.ctors)
+  *(.rela.dtors)
+  *(.rela.got)
+  .rela.got      0x0000000000008318       0xa8 /usr/lib/gcc/x86_64-linux-gnu/7/../../../x86_64-linux-gnu/Scrt1.o
+  *(.rela.bss .rela.bss.* .rela.gnu.linkonce.b.*)
+  .rela.bss      0x00000000000083c0        0x0 /usr/lib/gcc/x86_64-linux-gnu/7/../../../x86_64-linux-gnu/Scrt1.o
+  *(.rela.ldata .rela.ldata.* .rela.gnu.linkonce.l.*)
+  *(.rela.lbss .rela.lbss.* .rela.gnu.linkonce.lb.*)
+  *(.rela.lrodata .rela.lrodata.* .rela.gnu.linkonce.lr.*)
+  *(.rela.ifunc)
+  .rela.ifunc    0x00000000000083c0        0x0 /usr/lib/gcc/x86_64-linux-gnu/7/../../../x86_64-linux-gnu/Scrt1.o
+  .rela.fini_array
+                 0x00000000000083c0       0x18 /usr/lib/gcc/x86_64-linux-gnu/7/../../../x86_64-linux-gnu/Scrt1.o
+  .rela.init_array
+                 0x00000000000083d8       0x18 /usr/lib/gcc/x86_64-linux-gnu/7/../../../x86_64-linux-gnu/Scrt1.o
+ 
+ .rela.plt       0x00000000000083f0      0x2a0
+  *(.rela.plt)
+  .rela.plt      0x00000000000083f0      0x2a0 /usr/lib/gcc/x86_64-linux-gnu/7/../../../x86_64-linux-gnu/Scrt1.o
+                 [!provide]                        PROVIDE (__rela_iplt_start = .)
+  *(.rela.iplt)
+                 [!provide]                        PROVIDE (__rela_iplt_end = .)
+ 
+ .init           0x0000000000008690       0x17
+  *(SORT_NONE(.init))
+  .init          0x0000000000008690       0x12 /usr/lib/gcc/x86_64-linux-gnu/7/../../../x86_64-linux-gnu/crti.o
+                 0x0000000000008690                _init
+  .init          0x00000000000086a2        0x5 /usr/lib/gcc/x86_64-linux-gnu/7/../../../x86_64-linux-gnu/crtn.o
+ 
+ .plt            0x00000000000086b0      0x1d0
+  *(.plt)
+  .plt           0x00000000000086b0      0x1d0 /usr/lib/gcc/x86_64-linux-gnu/7/../../../x86_64-linux-gnu/Scrt1.o
+  *(.iplt)
+ 
+ .plt.got        0x0000000000008880        0x8
+  *(.plt.got)
+  .plt.got       0x0000000000008880        0x8 /usr/lib/gcc/x86_64-linux-gnu/7/../../../x86_64-linux-gnu/Scrt1.o
+ 
+ .plt.sec
+  *(.plt.sec)
+ 
+ .text           0x0000000000008890    0x38e82
+  *(.text.unlikely .text.*_unlikely .text.unlikely.*)
+  .text.unlikely.get_label_dest.part.2
+                 0x0000000000008890       0x23 build/py/asmx64.o
+  .text.unlikely.get_label_dest.part.4
+                 0x00000000000088b3       0x23 build/py/asmx86.o
+  .text.unlikely.raise_exc
+                 0x00000000000088d6       0x29 build/py/parsenum.o
+  .text.unlikely.bad_implicit_conversion
+                 0x00000000000088ff       0x3e build/py/objstr.o
+  *(.text.exit .text.exit.*)
+  *(.text.startup .text.startup.*)
+  .text.startup.main
+                 0x000000000000893d       0x22 build/main.o
+                 0x000000000000893d                main
+  *(.text.hot .text.hot.*)
+  *(.text .stub .text.* .gnu.linkonce.t.*)
+  *fill*         0x000000000000895f        0x1 
+  .text          0x0000000000008960       0x2b /usr/lib/gcc/x86_64-linux-gnu/7/../../../x86_64-linux-gnu/Scrt1.o
+                 0x0000000000008960                _start
+  *fill*         0x000000000000898b        0x5 
+  .text          0x0000000000008990       0xda /usr/lib/gcc/x86_64-linux-gnu/7/crtbeginS.o
+  .text.nlr_push_tail
+                 0x0000000000008a6a       0x14 build/py/nlr.o
+                 0x0000000000008a6a                nlr_push_tail
+  .text.nlr_pop  0x0000000000008a7e       0x12 build/py/nlr.o
+                 0x0000000000008a7e                nlr_pop
+  .text.nlr_push
+                 0x0000000000008a90       0x2c build/py/nlrx64.o
+                 0x0000000000008a90                nlr_push
+  .text.nlr_jump
+                 0x0000000000008abc       0x50 build/py/nlrx64.o
+                 0x0000000000008abc                nlr_jump
+  .text.m_malloc
+                 0x0000000000008b0c       0x1f build/py/malloc.o
+                 0x0000000000008b0c                m_malloc
+  .text.m_malloc_maybe
+                 0x0000000000008b2b        0x7 build/py/malloc.o
+                 0x0000000000008b2b                m_malloc_maybe
+  .text.m_malloc0
+                 0x0000000000008b32        0x5 build/py/malloc.o
+                 0x0000000000008b32                m_malloc0
+  .text.m_realloc
+                 0x0000000000008b37       0x22 build/py/malloc.o
+                 0x0000000000008b37                m_realloc
+  .text.m_realloc_maybe
+                 0x0000000000008b59        0x8 build/py/malloc.o
+                 0x0000000000008b59                m_realloc_maybe
+  .text.m_free   0x0000000000008b61        0x5 build/py/malloc.o
+                 0x0000000000008b61                m_free
+  *fill*         0x0000000000008b66        0xa 
+  .text.gc_mark_subtree
+                 0x0000000000008b70      0x114 build/py/gc.o
+  *fill*         0x0000000000008c84        0xc 
+  .text.gc_free.part.0
+                 0x0000000000008c90      0x10f build/py/gc.o
+  *fill*         0x0000000000008d9f        0x1 
+  .text.gc_init  0x0000000000008da0       0x82 build/py/gc.o
+                 0x0000000000008da0                gc_init
+  *fill*         0x0000000000008e22        0xe 
+  .text.gc_is_locked
+                 0x0000000000008e30        0xc build/py/gc.o
+                 0x0000000000008e30                gc_is_locked
+  *fill*         0x0000000000008e3c        0x4 
+  .text.gc_collect_start
+                 0x0000000000008e40       0xa1 build/py/gc.o
+                 0x0000000000008e40                gc_collect_start
+  *fill*         0x0000000000008ee1        0xf 
+  .text.gc_collect_root
+                 0x0000000000008ef0       0x99 build/py/gc.o
+                 0x0000000000008ef0                gc_collect_root
+  *fill*         0x0000000000008f89        0x7 
+  .text.gc_collect_end
+                 0x0000000000008f90      0x151 build/py/gc.o
+                 0x0000000000008f90                gc_collect_end
+  *fill*         0x00000000000090e1        0xf 
+  .text.gc_alloc
+                 0x00000000000090f0      0x20d build/py/gc.o
+                 0x00000000000090f0                gc_alloc
+  *fill*         0x00000000000092fd        0x3 
+  .text.gc_free  0x0000000000009300       0x1a build/py/gc.o
+                 0x0000000000009300                gc_free
+  *fill*         0x000000000000931a        0x6 
+  .text.gc_realloc
+                 0x0000000000009320      0x300 build/py/gc.o
+                 0x0000000000009320                gc_realloc
+  .text.find_qstr
+                 0x0000000000009620       0x1e build/py/qstr.o
+  .text.qstr_compute_hash
+                 0x000000000000963e       0x29 build/py/qstr.o
+                 0x000000000000963e                qstr_compute_hash
+  .text.qstr_init
+                 0x0000000000009667       0x1a build/py/qstr.o
+                 0x0000000000009667                qstr_init
+  .text.qstr_find_strn
+                 0x0000000000009681       0x94 build/py/qstr.o
+                 0x0000000000009681                qstr_find_strn
+  .text.qstr_from_strn
+                 0x0000000000009715      0x1c2 build/py/qstr.o
+                 0x0000000000009715                qstr_from_strn
+  .text.qstr_from_str
+                 0x00000000000098d7       0x1d build/py/qstr.o
+                 0x00000000000098d7                qstr_from_str
+  .text.qstr_hash
+                 0x00000000000098f4        0x9 build/py/qstr.o
+                 0x00000000000098f4                qstr_hash
+  .text.qstr_len
+                 0x00000000000098fd        0xa build/py/qstr.o
+                 0x00000000000098fd                qstr_len
+  .text.qstr_str
+                 0x0000000000009907        0xa build/py/qstr.o
+                 0x0000000000009907                qstr_str
+  .text.qstr_data
+                 0x0000000000009911       0x11 build/py/qstr.o
+                 0x0000000000009911                qstr_data
+  .text.vstr_ensure_extra
+                 0x0000000000009922       0x4a build/py/vstr.o
+  .text.vstr_add_strn
+                 0x000000000000996c       0x31 build/py/vstr.o
+                 0x000000000000996c                vstr_add_strn
+  .text.vstr_init
+                 0x000000000000999d       0x2b build/py/vstr.o
+                 0x000000000000999d                vstr_init
+  .text.vstr_init_len
+                 0x00000000000099c8       0x1d build/py/vstr.o
+                 0x00000000000099c8                vstr_init_len
+  .text.vstr_init_print
+                 0x00000000000099e5       0x23 build/py/vstr.o
+                 0x00000000000099e5                vstr_init_print
+  .text.vstr_clear
+                 0x0000000000009a08       0x1d build/py/vstr.o
+                 0x0000000000009a08                vstr_clear
+  .text.vstr_extend
+                 0x0000000000009a25       0x43 build/py/vstr.o
+                 0x0000000000009a25                vstr_extend
+  .text.vstr_add_len
+                 0x0000000000009a68       0x27 build/py/vstr.o
+                 0x0000000000009a68                vstr_add_len
+  .text.vstr_null_terminated_str
+                 0x0000000000009a8f       0x29 build/py/vstr.o
+                 0x0000000000009a8f                vstr_null_terminated_str
+  .text.vstr_add_byte
+                 0x0000000000009ab8       0x11 build/py/vstr.o
+                 0x0000000000009ab8                vstr_add_byte
+  .text.vstr_add_char
+                 0x0000000000009ac9       0xda build/py/vstr.o
+                 0x0000000000009ac9                vstr_add_char
+  .text.vstr_add_str
+                 0x0000000000009ba3       0x20 build/py/vstr.o
+                 0x0000000000009ba3                vstr_add_str
+  .text.vstr_cut_tail_bytes
+                 0x0000000000009bc3       0x1b build/py/vstr.o
+                 0x0000000000009bc3                vstr_cut_tail_bytes
+  .text.mp_print_str
+                 0x0000000000009bde       0x2a build/py/mpprint.o
+                 0x0000000000009bde                mp_print_str
+  .text.mp_print_strn
+                 0x0000000000009c08      0x103 build/py/mpprint.o
+                 0x0000000000009c08                mp_print_strn
+  .text.mp_print_int
+                 0x0000000000009d0b      0x133 build/py/mpprint.o
+  .text.mp_print_mp_int
+                 0x0000000000009e3e      0x376 build/py/mpprint.o
+                 0x0000000000009e3e                mp_print_mp_int
+  .text.mp_print_float
+                 0x000000000000a1b4       0xf7 build/py/mpprint.o
+                 0x000000000000a1b4                mp_print_float
+  .text.mp_vprintf
+                 0x000000000000a2ab      0x526 build/py/mpprint.o
+                 0x000000000000a2ab                mp_vprintf
+  .text.mp_printf
+                 0x000000000000a7d1       0xb1 build/py/mpprint.o
+                 0x000000000000a7d1                mp_printf
+  .text.utf8_get_char
+                 0x000000000000a882       0x3a build/py/unicode.o
+                 0x000000000000a882                utf8_get_char
+  .text.utf8_next_char
+                 0x000000000000a8bc       0x14 build/py/unicode.o
+                 0x000000000000a8bc                utf8_next_char
+  .text.utf8_ptr_to_index
+                 0x000000000000a8d0       0x1a build/py/unicode.o
+                 0x000000000000a8d0                utf8_ptr_to_index
+  .text.utf8_charlen
+                 0x000000000000a8ea       0x1d build/py/unicode.o
+                 0x000000000000a8ea                utf8_charlen
+  .text.unichar_isspace
+                 0x000000000000a907       0x1c build/py/unicode.o
+                 0x000000000000a907                unichar_isspace
+  .text.unichar_isalpha
+                 0x000000000000a923       0x1d build/py/unicode.o
+                 0x000000000000a923                unichar_isalpha
+  .text.unichar_isdigit
+                 0x000000000000a940       0x1d build/py/unicode.o
+                 0x000000000000a940                unichar_isdigit
+  .text.unichar_isxdigit
+                 0x000000000000a95d       0x1d build/py/unicode.o
+                 0x000000000000a95d                unichar_isxdigit
+  .text.unichar_isupper
+                 0x000000000000a97a       0x1d build/py/unicode.o
+                 0x000000000000a97a                unichar_isupper
+  .text.unichar_islower
+                 0x000000000000a997       0x1d build/py/unicode.o
+                 0x000000000000a997                unichar_islower
+  .text.unichar_tolower
+                 0x000000000000a9b4       0x11 build/py/unicode.o
+                 0x000000000000a9b4                unichar_tolower
+  .text.unichar_toupper
+                 0x000000000000a9c5       0x11 build/py/unicode.o
+                 0x000000000000a9c5                unichar_toupper
+  .text.unichar_xdigit_value
+                 0x000000000000a9d6       0x11 build/py/unicode.o
+                 0x000000000000a9d6                unichar_xdigit_value
+  .text.utf8_check
+                 0x000000000000a9e7       0x4c build/py/unicode.o
+                 0x000000000000a9e7                utf8_check
+  .text.mpn_remove_trailing_zeros
+                 0x000000000000aa33       0x1a build/py/mpz.o
+  .text.mpn_shr  0x000000000000aa4d       0x4a build/py/mpz.o
+  .text.mpn_add  0x000000000000aa97       0x66 build/py/mpz.o
+  .text.mpn_sub  0x000000000000aafd       0x57 build/py/mpz.o
+  .text.mpn_cmp.part.1
+                 0x000000000000ab54       0x2e build/py/mpz.o
+  .text.mpz_free
+                 0x000000000000ab82       0x1c build/py/mpz.o
+  .text.mpz_need_dig
+                 0x000000000000ab9e       0x6f build/py/mpz.o
+  .text.mpz_clone
+                 0x000000000000ac0d       0x8a build/py/mpz.o
+  .text.mpz_set_from_int.part.5
+                 0x000000000000ac97       0x5c build/py/mpz.o
+  .text.mpz_init_zero
+                 0x000000000000acf3       0x18 build/py/mpz.o
+                 0x000000000000acf3                mpz_init_zero
+  .text.mpz_deinit
+                 0x000000000000ad0b       0x14 build/py/mpz.o
+                 0x000000000000ad0b                mpz_deinit
+  .text.mpz_set  0x000000000000ad1f       0x46 build/py/mpz.o
+                 0x000000000000ad1f                mpz_set
+  .text.mpz_set_from_int
+                 0x000000000000ad65       0x13 build/py/mpz.o
+                 0x000000000000ad65                mpz_set_from_int
+  .text.mpz_init_from_int
+                 0x000000000000ad78        0xf build/py/mpz.o
+                 0x000000000000ad78                mpz_init_from_int
+  .text.mpz_init_fixed_from_int
+                 0x000000000000ad87       0x32 build/py/mpz.o
+                 0x000000000000ad87                mpz_init_fixed_from_int
+  .text.mpz_set_from_ll
+                 0x000000000000adb9       0x63 build/py/mpz.o
+                 0x000000000000adb9                mpz_set_from_ll
+  .text.mpz_set_from_float
+                 0x000000000000ae1c      0x163 build/py/mpz.o
+                 0x000000000000ae1c                mpz_set_from_float
+  .text.mpz_set_from_str
+                 0x000000000000af7f      0x102 build/py/mpz.o
+                 0x000000000000af7f                mpz_set_from_str
+  .text.mpz_set_from_bytes
+                 0x000000000000b081       0xa2 build/py/mpz.o
+                 0x000000000000b081                mpz_set_from_bytes
+  .text.mpz_cmp  0x000000000000b123       0x4d build/py/mpz.o
+                 0x000000000000b123                mpz_cmp
+  .text.mpz_abs_inpl
+                 0x000000000000b170       0x13 build/py/mpz.o
+                 0x000000000000b170                mpz_abs_inpl
+  .text.mpz_neg_inpl
+                 0x000000000000b183       0x20 build/py/mpz.o
+                 0x000000000000b183                mpz_neg_inpl
+  .text.mpz_not_inpl
+                 0x000000000000b1a3       0xd2 build/py/mpz.o
+                 0x000000000000b1a3                mpz_not_inpl
+  .text.mpz_shl_inpl
+                 0x000000000000b275       0xda build/py/mpz.o
+                 0x000000000000b275                mpz_shl_inpl
+  .text.mpz_shr_inpl
+                 0x000000000000b34f      0x134 build/py/mpz.o
+                 0x000000000000b34f                mpz_shr_inpl
+  .text.mpz_add_inpl
+                 0x000000000000b483       0xa7 build/py/mpz.o
+                 0x000000000000b483                mpz_add_inpl
+  .text.mpz_sub_inpl
+                 0x000000000000b52a       0xc1 build/py/mpz.o
+                 0x000000000000b52a                mpz_sub_inpl
+  .text.mpz_and_inpl
+                 0x000000000000b5eb      0x142 build/py/mpz.o
+                 0x000000000000b5eb                mpz_and_inpl
+  .text.mpz_or_inpl
+                 0x000000000000b72d      0x14f build/py/mpz.o
+                 0x000000000000b72d                mpz_or_inpl
+  .text.mpz_xor_inpl
+                 0x000000000000b87c      0x125 build/py/mpz.o
+                 0x000000000000b87c                mpz_xor_inpl
+  .text.mpz_mul_inpl
+                 0x000000000000b9a1      0x146 build/py/mpz.o
+                 0x000000000000b9a1                mpz_mul_inpl
+  .text.mpz_pow_inpl
+                 0x000000000000bae7       0xb3 build/py/mpz.o
+                 0x000000000000bae7                mpz_pow_inpl
+  .text.mpz_divmod_inpl
+                 0x000000000000bb9a      0x3cd build/py/mpz.o
+                 0x000000000000bb9a                mpz_divmod_inpl
+  .text.mpz_hash
+                 0x000000000000bf67       0x2c build/py/mpz.o
+                 0x000000000000bf67                mpz_hash
+  .text.mpz_as_int_checked
+                 0x000000000000bf93       0x3c build/py/mpz.o
+                 0x000000000000bf93                mpz_as_int_checked
+  .text.mpz_as_bytes
+                 0x000000000000bfcf       0x96 build/py/mpz.o
+                 0x000000000000bfcf                mpz_as_bytes
+  .text.mpz_as_float
+                 0x000000000000c065       0x3f build/py/mpz.o
+                 0x000000000000c065                mpz_as_float
+  .text.mpz_as_str_inpl
+                 0x000000000000c0a4      0x1c3 build/py/mpz.o
+                 0x000000000000c0a4                mpz_as_str_inpl
+  .text.mp_reader_posix_close
+                 0x000000000000c267       0x1a build/py/reader.o
+  .text.mp_reader_posix_readbyte
+                 0x000000000000c281       0x61 build/py/reader.o
+  .text.mp_reader_new_file_from_fd
+                 0x000000000000c2e2       0x86 build/py/reader.o
+                 0x000000000000c2e2                mp_reader_new_file_from_fd
+  .text.mp_reader_new_file
+                 0x000000000000c368       0x35 build/py/reader.o
+                 0x000000000000c368                mp_reader_new_file
+  .text.next_char
+                 0x000000000000c39d       0x85 build/py/lexer.o
+  .text.skip_whitespace
+                 0x000000000000c422       0x7f build/py/lexer.o
+  .text.is_string_or_bytes
+                 0x000000000000c4a1       0x64 build/py/lexer.o
+  .text.mp_lexer_to_next
+                 0x000000000000c505      0x7f1 build/py/lexer.o
+                 0x000000000000c505                mp_lexer_to_next
+  .text.mp_lexer_new
+                 0x000000000000ccf6       0xc7 build/py/lexer.o
+                 0x000000000000ccf6                mp_lexer_new
+  .text.mp_lexer_new_from_file
+                 0x000000000000cdbd       0x62 build/py/lexer.o
+                 0x000000000000cdbd                mp_lexer_new_from_file
+  .text.mp_lexer_free
+                 0x000000000000ce1f       0x2f build/py/lexer.o
+                 0x000000000000ce1f                mp_lexer_free
+  .text.parser_alloc
+                 0x000000000000ce4e       0xaf build/py/parse.o
+  .text.push_result_node
+                 0x000000000000cefd       0x48 build/py/parse.o
+  .text.push_rule
+                 0x000000000000cf45       0x7f build/py/parse.o
+  .text.peek_result
+                 0x000000000000cfc4       0x39 build/py/parse.o
+  .text.pop_result
+                 0x000000000000cffd       0x3c build/py/parse.o
+  .text.push_rule_from_arg
+                 0x000000000000d039       0x46 build/py/parse.o
+  .text.push_result_token
+                 0x000000000000d07f      0x183 build/py/parse.o
+  .text.mp_parse_node_is_const_false
+                 0x000000000000d202       0x22 build/py/parse.o
+                 0x000000000000d202                mp_parse_node_is_const_false
+  .text.mp_parse_node_is_const_true
+                 0x000000000000d224       0x22 build/py/parse.o
+                 0x000000000000d224                mp_parse_node_is_const_true
+  .text.mp_parse_node_get_int_maybe
+                 0x000000000000d246       0x4f build/py/parse.o
+                 0x000000000000d246                mp_parse_node_get_int_maybe
+  .text.push_result_rule
+                 0x000000000000d295      0x635 build/py/parse.o
+  .text.mp_parse_node_extract_list
+                 0x000000000000d8ca       0x37 build/py/parse.o
+                 0x000000000000d8ca                mp_parse_node_extract_list
+  .text.mp_parse
+                 0x000000000000d901      0x6b4 build/py/parse.o
+                 0x000000000000d901                mp_parse
+  .text.mp_parse_tree_clear
+                 0x000000000000dfb5       0x1e build/py/parse.o
+                 0x000000000000dfb5                mp_parse_tree_clear
+  .text.scope_new
+                 0x000000000000dfd3       0xa7 build/py/scope.o
+                 0x000000000000dfd3                scope_new
+  .text.scope_free
+                 0x000000000000e07a       0x16 build/py/scope.o
+                 0x000000000000e07a                scope_free
+  .text.scope_find
+                 0x000000000000e090       0x24 build/py/scope.o
+                 0x000000000000e090                scope_find
+  .text.scope_find_or_add_id
+                 0x000000000000e0b4       0x67 build/py/scope.o
+                 0x000000000000e0b4                scope_find_or_add_id
+  .text.scope_find_global
+                 0x000000000000e11b       0x13 build/py/scope.o
+                 0x000000000000e11b                scope_find_global
+  .text.scope_check_to_close_over
+                 0x000000000000e12e       0xbb build/py/scope.o
+                 0x000000000000e12e                scope_check_to_close_over
+  .text.reserve_labels_for_native
+                 0x000000000000e1e9        0xf build/py/compile.o
+  .text.compile_increase_except_level
+                 0x000000000000e1f8       0x2d build/py/compile.o
+  .text.apply_to_single_or_list
+                 0x000000000000e225       0x51 build/py/compile.o
+  .text.compile_del_stmt
+                 0x000000000000e276       0x15 build/py/compile.o
+  .text.compile_import_name
+                 0x000000000000e28b       0x15 build/py/compile.o
+  .text.compile_yield_from
+                 0x000000000000e2a0       0x45 build/py/compile.o
+  .text.compile_await_object_method
+                 0x000000000000e2e5       0x31 build/py/compile.o
+  .text.compile_trailer_period
+                 0x000000000000e316       0x1e build/py/compile.o
+  .text.compile_const_object
+                 0x000000000000e334       0x15 build/py/compile.o
+  .text.scope_new_and_link
+                 0x000000000000e349       0x46 build/py/compile.o
+  .text.close_over_variables_etc
+                 0x000000000000e38f      0x111 build/py/compile.o
+  .text.compile_funcdef_lambdef
+                 0x000000000000e4a0       0x97 build/py/compile.o
+  .text.compile_lambdef
+                 0x000000000000e537       0x43 build/py/compile.o
+  .text.compile_funcdef_helper
+                 0x000000000000e57a       0x46 build/py/compile.o
+  .text.do_import_name
+                 0x000000000000e5c0      0x1e4 build/py/compile.o
+  .text.compile_error_set_line.isra.3
+                 0x000000000000e7a4       0x17 build/py/compile.o
+  .text.compile_decrease_except_level
+                 0x000000000000e7bb       0x4d build/py/compile.o
+  .text.compile_syntax_error
+                 0x000000000000e808       0x36 build/py/compile.o
+  .text.compile_scope_inline_asm
+                 0x000000000000e83e      0x48b build/py/compile.o
+  .text.compile_star_expr
+                 0x000000000000ecc9        0xc build/py/compile.o
+  .text.compile_break_cont_stmt
+                 0x000000000000ecd5       0x70 build/py/compile.o
+  .text.compile_viper_type_annotation
+                 0x000000000000ed45       0x6b build/py/compile.o
+  .text.compile_scope_func_lambda_param
+                 0x000000000000edb0      0x1e9 build/py/compile.o
+  .text.compile_scope_lambda_param
+                 0x000000000000ef99       0x15 build/py/compile.o
+  .text.compile_scope_func_param
+                 0x000000000000efae       0x15 build/py/compile.o
+  .text.compile_load_id
+                 0x000000000000efc3       0x31 build/py/compile.o
+  .text.compile_store_id
+                 0x000000000000eff4       0x29 build/py/compile.o
+  .text.compile_funcdef
+                 0x000000000000f01d       0x1d build/py/compile.o
+  .text.compile_import_from
+                 0x000000000000f03a      0x286 build/py/compile.o
+  .text.compile_dotted_as_name
+                 0x000000000000f2c0       0x72 build/py/compile.o
+  .text.compile_node
+                 0x000000000000f332      0x194 build/py/compile.o
+  .text.c_assign
+                 0x000000000000f4c6      0x370 build/py/compile.o
+  .text.c_assign_tuple
+                 0x000000000000f836      0x13c build/py/compile.o
+  .text.compile_yield_expr
+                 0x000000000000f972       0x7f build/py/compile.o
+  .text.compile_comprehension
+                 0x000000000000f9f1       0xd2 build/py/compile.o
+  .text.compile_trailer_paren_helper
+                 0x000000000000fac3      0x211 build/py/compile.o
+  .text.compile_classdef_helper
+                 0x000000000000fcd4       0x8b build/py/compile.o
+  .text.compile_classdef
+                 0x000000000000fd5f       0x1d build/py/compile.o
+  .text.compile_trailer_paren
+                 0x000000000000fd7c        0xd build/py/compile.o
+  .text.compile_dictorsetmaker_item
+                 0x000000000000fd89       0x24 build/py/compile.o
+  .text.compile_subscript
+                 0x000000000000fdad      0x174 build/py/compile.o
+  .text.compile_trailer_bracket
+                 0x000000000000ff21       0x21 build/py/compile.o
+  .text.c_tuple  0x000000000000ff42       0x67 build/py/compile.o
+  .text.compile_atom_paren
+                 0x000000000000ffa9       0xce build/py/compile.o
+  .text.compile_generic_tuple
+                 0x0000000000010077        0xa build/py/compile.o
+  .text.compile_atom_expr_normal
+                 0x0000000000010081      0x1cd build/py/compile.o
+  .text.compile_term
+                 0x000000000001024e       0x63 build/py/compile.o
+  .text.compile_binary_op
+                 0x00000000000102b1       0x5b build/py/compile.o
+  .text.compile_comparison
+                 0x000000000001030c      0x1d6 build/py/compile.o
+  .text.compile_not_test_2
+                 0x00000000000104e2       0x24 build/py/compile.o
+  .text.compile_or_and_test
+                 0x0000000000010506       0x91 build/py/compile.o
+  .text.compile_funcdef_lambdef_param
+                 0x0000000000010597      0x163 build/py/compile.o
+  .text.compile_with_stmt_helper
+                 0x00000000000106fa       0xcf build/py/compile.o
+  .text.compile_for_stmt
+                 0x00000000000107c9      0x4ed build/py/compile.o
+  .text.compile_async_with_stmt_helper
+                 0x0000000000010cb6      0x384 build/py/compile.o
+  .text.compile_raise_stmt
+                 0x000000000001103a       0x80 build/py/compile.o
+  .text.compile_yield_stmt
+                 0x00000000000110ba       0x1f build/py/compile.o
+  .text.c_del_stmt
+                 0x00000000000110d9      0x288 build/py/compile.o
+  .text.compile_expr_stmt
+                 0x0000000000011361      0x2bd build/py/compile.o
+  .text.compile_decorated
+                 0x000000000001161e      0x2fb build/py/compile.o
+  .text.compile_generic_all_nodes
+                 0x0000000000011919       0x56 build/py/compile.o
+  .text.compile_power
+                 0x000000000001196f       0x20 build/py/compile.o
+  .text.compile_atom_bracket
+                 0x000000000001198f      0x143 build/py/compile.o
+  .text.c_if_cond
+                 0x0000000000011ad2      0x1e3 build/py/compile.o
+  .text.compile_scope_comp_iter
+                 0x0000000000011cb5      0x17c build/py/compile.o
+  .text.compile_scope
+                 0x0000000000011e31      0x4f9 build/py/compile.o
+  .text.compile_test_if_expr
+                 0x000000000001232a       0xbf build/py/compile.o
+  .text.compile_while_stmt
+                 0x00000000000123e9       0xfc build/py/compile.o
+  .text.compile_if_stmt
+                 0x00000000000124e5      0x1cf build/py/compile.o
+  .text.compile_atom_expr_await
+                 0x00000000000126b4       0x2e build/py/compile.o
+  .text.compile_factor_2
+                 0x00000000000126e2       0x62 build/py/compile.o
+  .text.compile_with_stmt
+                 0x0000000000012744       0x7e build/py/compile.o
+  .text.compile_async_stmt
+                 0x00000000000127c2      0x315 build/py/compile.o
+  .text.compile_assert_stmt
+                 0x0000000000012ad7       0x97 build/py/compile.o
+  .text.compile_return_stmt
+                 0x0000000000012b6e       0xb8 build/py/compile.o
+  .text.compile_global_nonlocal_stmt
+                 0x0000000000012c26      0x12c build/py/compile.o
+  .text.compile_atom_brace
+                 0x0000000000012d52      0x267 build/py/compile.o
+  .text.compile_try_except
+                 0x0000000000012fb9      0x2c5 build/py/compile.o
+  .text.compile_try_finally
+                 0x000000000001327e       0xe1 build/py/compile.o
+  .text.compile_try_stmt
+                 0x000000000001335f       0xe1 build/py/compile.o
+  .text.mp_compile_to_raw_code
+                 0x0000000000013440      0x534 build/py/compile.o
+                 0x0000000000013440                mp_compile_to_raw_code
+  .text.mp_emit_common_get_id_for_modification
+                 0x0000000000013974       0x1d build/py/emitcommon.o
+                 0x0000000000013974                mp_emit_common_get_id_for_modification
+  .text.mp_emit_common_id_op
+                 0x0000000000013991       0xb5 build/py/emitcommon.o
+                 0x0000000000013991                mp_emit_common_id_op
+  .text.mp_emit_bc_last_emit_was_return_value
+                 0x0000000000013a46        0x8 build/py/emitbc.o
+                 0x0000000000013a46                mp_emit_bc_last_emit_was_return_value
+  .text.emit_get_cur_to_write_code_info
+                 0x0000000000013a4e       0x4a build/py/emitbc.o
+  .text.emit_write_code_info_byte
+                 0x0000000000013a98       0x11 build/py/emitbc.o
+  .text.emit_write_code_info_qstr
+                 0x0000000000013aa9       0x19 build/py/emitbc.o
+  .text.mp_emit_bc_start_pass
+                 0x0000000000013ac2      0x25c build/py/emitbc.o
+                 0x0000000000013ac2                mp_emit_bc_start_pass
+  .text.mp_emit_bc_adjust_stack_size
+                 0x0000000000013d1e       0x4f build/py/emitbc.o
+                 0x0000000000013d1e                mp_emit_bc_adjust_stack_size
+  .text.mp_emit_bc_for_iter_end
+                 0x0000000000013d6d        0xc build/py/emitbc.o
+                 0x0000000000013d6d                mp_emit_bc_for_iter_end
+  .text.mp_emit_bc_start_except_handler
+                 0x0000000000013d79        0xa build/py/emitbc.o
+                 0x0000000000013d79                mp_emit_bc_start_except_handler
+  .text.mp_emit_bc_end_except_handler
+                 0x0000000000013d83        0xc build/py/emitbc.o
+                 0x0000000000013d83                mp_emit_bc_end_except_handler
+  .text.mp_emit_bc_set_source_line
+                 0x0000000000013d8f      0x10f build/py/emitbc.o
+                 0x0000000000013d8f                mp_emit_bc_set_source_line
+  .text.mp_emit_bc_label_assign
+                 0x0000000000013e9e       0xa4 build/py/emitbc.o
+                 0x0000000000013e9e                mp_emit_bc_label_assign
+  .text.emit_get_cur_to_write_bytecode
+                 0x0000000000013f42       0x4e build/py/emitbc.o
+  .text.emit_write_bytecode_byte
+                 0x0000000000013f90       0x27 build/py/emitbc.o
+  .text.mp_emit_bc_load_null
+                 0x0000000000013fb7        0xf build/py/emitbc.o
+                 0x0000000000013fb7                mp_emit_bc_load_null
+  .text.mp_emit_bc_load_build_class
+                 0x0000000000013fc6        0xf build/py/emitbc.o
+                 0x0000000000013fc6                mp_emit_bc_load_build_class
+  .text.mp_emit_bc_dup_top
+                 0x0000000000013fd5        0xf build/py/emitbc.o
+                 0x0000000000013fd5                mp_emit_bc_dup_top
+  .text.mp_emit_bc_dup_top_two
+                 0x0000000000013fe4        0xf build/py/emitbc.o
+                 0x0000000000013fe4                mp_emit_bc_dup_top_two
+  .text.mp_emit_bc_pop_top
+                 0x0000000000013ff3        0xd build/py/emitbc.o
+                 0x0000000000013ff3                mp_emit_bc_pop_top
+  .text.mp_emit_bc_rot_two
+                 0x0000000000014000        0xc build/py/emitbc.o
+                 0x0000000000014000                mp_emit_bc_rot_two
+  .text.mp_emit_bc_rot_three
+                 0x000000000001400c        0xc build/py/emitbc.o
+                 0x000000000001400c                mp_emit_bc_rot_three
+  .text.mp_emit_bc_end_finally
+                 0x0000000000014018        0xd build/py/emitbc.o
+                 0x0000000000014018                mp_emit_bc_end_finally
+  .text.mp_emit_bc_get_iter
+                 0x0000000000014025       0x1b build/py/emitbc.o
+                 0x0000000000014025                mp_emit_bc_get_iter
+  .text.mp_emit_bc_unary_op
+                 0x0000000000014040        0xd build/py/emitbc.o
+                 0x0000000000014040                mp_emit_bc_unary_op
+  .text.mp_emit_bc_store_map
+                 0x000000000001404d        0xf build/py/emitbc.o
+                 0x000000000001404d                mp_emit_bc_store_map
+  .text.mp_emit_bc_return_value
+                 0x000000000001405c       0x17 build/py/emitbc.o
+                 0x000000000001405c                mp_emit_bc_return_value
+  .text.mp_emit_bc_yield
+                 0x0000000000014073       0x1c build/py/emitbc.o
+                 0x0000000000014073                mp_emit_bc_yield
+  .text.emit_write_bytecode_raw_byte
+                 0x000000000001408f       0x11 build/py/emitbc.o
+  .text.emit_write_bytecode_byte_signed_label
+                 0x00000000000140a0       0x51 build/py/emitbc.o
+  .text.mp_emit_bc_jump
+                 0x00000000000140f1        0xf build/py/emitbc.o
+                 0x00000000000140f1                mp_emit_bc_jump
+  .text.emit_write_bytecode_byte_unsigned_label
+                 0x0000000000014100       0x58 build/py/emitbc.o
+  .text.mp_emit_bc_setup_block
+                 0x0000000000014158       0x16 build/py/emitbc.o
+                 0x0000000000014158                mp_emit_bc_setup_block
+  .text.mp_emit_bc_for_iter
+                 0x000000000001416e       0x12 build/py/emitbc.o
+                 0x000000000001416e                mp_emit_bc_for_iter
+  .text.mp_emit_bc_pop_except_jump
+                 0x0000000000014180        0xf build/py/emitbc.o
+                 0x0000000000014180                mp_emit_bc_pop_except_jump
+  .text.mp_emit_bc_subscr
+                 0x000000000001418f       0x37 build/py/emitbc.o
+                 0x000000000001418f                mp_emit_bc_subscr
+  .text.mp_emit_bc_binary_op
+                 0x00000000000141c6       0x51 build/py/emitbc.o
+                 0x00000000000141c6                mp_emit_bc_binary_op
+  .text.mp_emit_bc_pop_jump_if
+                 0x0000000000014217       0x1a build/py/emitbc.o
+                 0x0000000000014217                mp_emit_bc_pop_jump_if
+  .text.mp_emit_bc_jump_if_or_pop
+                 0x0000000000014231       0x1a build/py/emitbc.o
+                 0x0000000000014231                mp_emit_bc_jump_if_or_pop
+  .text.mp_emit_bc_unwind_jump
+                 0x000000000001424b       0xa3 build/py/emitbc.o
+                 0x000000000001424b                mp_emit_bc_unwind_jump
+  .text.emit_write_bytecode_byte_qstr
+                 0x00000000000142ee       0x5c build/py/emitbc.o
+  .text.mp_emit_bc_import
+                 0x000000000001434a       0x2a build/py/emitbc.o
+                 0x000000000001434a                mp_emit_bc_import
+  .text.mp_emit_bc_load_const_str
+                 0x0000000000014374       0x12 build/py/emitbc.o
+                 0x0000000000014374                mp_emit_bc_load_const_str
+  .text.mp_emit_bc_load_global
+                 0x0000000000014386       0x2d build/py/emitbc.o
+                 0x0000000000014386                mp_emit_bc_load_global
+  .text.mp_emit_bc_load_method
+                 0x00000000000143b3       0x1c build/py/emitbc.o
+                 0x00000000000143b3                mp_emit_bc_load_method
+  .text.mp_emit_bc_attr
+                 0x00000000000143cf       0x64 build/py/emitbc.o
+                 0x00000000000143cf                mp_emit_bc_attr
+  .text.mp_emit_bc_store_global
+                 0x0000000000014433       0x11 build/py/emitbc.o
+                 0x0000000000014433                mp_emit_bc_store_global
+  .text.mp_emit_bc_delete_global
+                 0x0000000000014444       0x10 build/py/emitbc.o
+                 0x0000000000014444                mp_emit_bc_delete_global
+  .text.mp_emit_bc_raise_varargs
+                 0x0000000000014454       0x36 build/py/emitbc.o
+                 0x0000000000014454                mp_emit_bc_raise_varargs
+  .text.mp_emit_bc_end_pass
+                 0x000000000001448a      0x165 build/py/emitbc.o
+                 0x000000000001448a                mp_emit_bc_end_pass
+  .text.mp_emit_bc_load_const_small_int
+                 0x00000000000145ef       0xf3 build/py/emitbc.o
+                 0x00000000000145ef                mp_emit_bc_load_const_small_int
+  .text.emit_write_bytecode_byte_uint
+                 0x00000000000146e2       0x9c build/py/emitbc.o
+  .text.emit_write_bytecode_byte_raw_code
+                 0x000000000001477e       0x47 build/py/emitbc.o
+  .text.mp_emit_bc_make_function
+                 0x00000000000147c5       0x25 build/py/emitbc.o
+                 0x00000000000147c5                mp_emit_bc_make_function
+  .text.mp_emit_bc_make_closure
+                 0x00000000000147ea       0x72 build/py/emitbc.o
+                 0x00000000000147ea                mp_emit_bc_make_closure
+  .text.mp_emit_bc_delete_local
+                 0x000000000001485c       0x12 build/py/emitbc.o
+                 0x000000000001485c                mp_emit_bc_delete_local
+  .text.mp_emit_bc_build
+                 0x000000000001486e       0x1a build/py/emitbc.o
+                 0x000000000001486e                mp_emit_bc_build
+  .text.mp_emit_bc_store_comp
+                 0x0000000000014888       0x3c build/py/emitbc.o
+                 0x0000000000014888                mp_emit_bc_store_comp
+  .text.mp_emit_bc_unpack_sequence
+                 0x00000000000148c4       0x10 build/py/emitbc.o
+                 0x00000000000148c4                mp_emit_bc_unpack_sequence
+  .text.mp_emit_bc_unpack_ex
+                 0x00000000000148d4       0x16 build/py/emitbc.o
+                 0x00000000000148d4                mp_emit_bc_unpack_ex
+  .text.emit_bc_call_function_method_helper
+                 0x00000000000148ea       0x1f build/py/emitbc.o
+  .text.mp_emit_bc_call_function
+                 0x0000000000014909       0x15 build/py/emitbc.o
+                 0x0000000000014909                mp_emit_bc_call_function
+  .text.mp_emit_bc_call_method
+                 0x000000000001491e       0x16 build/py/emitbc.o
+                 0x000000000001491e                mp_emit_bc_call_method
+  .text.mp_emit_bc_load_local
+                 0x0000000000014934       0x30 build/py/emitbc.o
+                 0x0000000000014934                mp_emit_bc_load_local
+  .text.mp_emit_bc_store_local
+                 0x0000000000014964       0x2c build/py/emitbc.o
+                 0x0000000000014964                mp_emit_bc_store_local
+  .text.emit_write_bytecode_byte_obj.constprop.22
+                 0x0000000000014990       0x3d build/py/emitbc.o
+  .text.mp_emit_bc_load_const_tok
+                 0x00000000000149cd       0x22 build/py/emitbc.o
+                 0x00000000000149cd                mp_emit_bc_load_const_tok
+  .text.mp_emit_bc_with_cleanup
+                 0x00000000000149ef       0x45 build/py/emitbc.o
+                 0x00000000000149ef                mp_emit_bc_with_cleanup
+  .text.mp_emit_bc_load_const_obj
+                 0x0000000000014a34        0x5 build/py/emitbc.o
+                 0x0000000000014a34                mp_emit_bc_load_const_obj
+  .text.emit_bc_new
+                 0x0000000000014a39        0xa build/py/emitbc.o
+                 0x0000000000014a39                emit_bc_new
+  .text.emit_bc_set_max_num_labels
+                 0x0000000000014a43       0x1b build/py/emitbc.o
+                 0x0000000000014a43                emit_bc_set_max_num_labels
+  .text.emit_bc_free
+                 0x0000000000014a5e       0x16 build/py/emitbc.o
+                 0x0000000000014a5e                emit_bc_free
+  .text.mp_asm_base_init
+                 0x0000000000014a74       0x1b build/py/asmbase.o
+                 0x0000000000014a74                mp_asm_base_init
+  .text.mp_asm_base_deinit
+                 0x0000000000014a8f       0x1c build/py/asmbase.o
+                 0x0000000000014a8f                mp_asm_base_deinit
+  .text.mp_asm_base_start_pass
+                 0x0000000000014aab       0x6c build/py/asmbase.o
+                 0x0000000000014aab                mp_asm_base_start_pass
+  .text.mp_asm_base_get_cur_to_write_bytes
+                 0x0000000000014b17       0x42 build/py/asmbase.o
+                 0x0000000000014b17                mp_asm_base_get_cur_to_write_bytes
+  .text.mp_asm_base_label_assign
+                 0x0000000000014b59       0x87 build/py/asmbase.o
+                 0x0000000000014b59                mp_asm_base_label_assign
+  .text.mp_asm_base_align
+                 0x0000000000014be0       0x14 build/py/asmbase.o
+                 0x0000000000014be0                mp_asm_base_align
+  .text.mp_asm_base_data
+                 0x0000000000014bf4       0x2e build/py/asmbase.o
+                 0x0000000000014bf4                mp_asm_base_data
+  .text.asm_x64_write_byte_1
+                 0x0000000000014c22       0x16 build/py/asmx64.o
+  .text.asm_x64_write_byte_2
+                 0x0000000000014c38       0x23 build/py/asmx64.o
+  .text.asm_x64_write_byte_3
+                 0x0000000000014c5b       0x29 build/py/asmx64.o
+  .text.asm_x64_generic_r64_r64
+                 0x0000000000014c84       0x38 build/py/asmx64.o
+  .text.asm_x64_write_word32
+                 0x0000000000014cbc       0x27 build/py/asmx64.o
+  .text.asm_x64_write_r64_disp
+                 0x0000000000014ce3       0x99 build/py/asmx64.o
+  .text.asm_x64_sub_r64_i32.constprop.6
+                 0x0000000000014d7c       0x58 build/py/asmx64.o
+  .text.asm_x64_mov_r64_r64
+                 0x0000000000014dd4        0xa build/py/asmx64.o
+                 0x0000000000014dd4                asm_x64_mov_r64_r64
+  .text.asm_x64_mov_r8_to_mem8
+                 0x0000000000014dde       0x68 build/py/asmx64.o
+                 0x0000000000014dde                asm_x64_mov_r8_to_mem8
+  .text.asm_x64_mov_r16_to_mem16
+                 0x0000000000014e46       0x71 build/py/asmx64.o
+                 0x0000000000014e46                asm_x64_mov_r16_to_mem16
+  .text.asm_x64_mov_r32_to_mem32
+                 0x0000000000014eb7       0x68 build/py/asmx64.o
+                 0x0000000000014eb7                asm_x64_mov_r32_to_mem32
+  .text.asm_x64_mov_r64_to_mem64
+                 0x0000000000014f1f       0x4f build/py/asmx64.o
+                 0x0000000000014f1f                asm_x64_mov_r64_to_mem64
+  .text.asm_x64_mov_mem8_to_r64zx
+                 0x0000000000014f6e       0x7a build/py/asmx64.o
+                 0x0000000000014f6e                asm_x64_mov_mem8_to_r64zx
+  .text.asm_x64_mov_mem16_to_r64zx
+                 0x0000000000014fe8       0x7a build/py/asmx64.o
+                 0x0000000000014fe8                asm_x64_mov_mem16_to_r64zx
+  .text.asm_x64_mov_mem32_to_r64zx
+                 0x0000000000015062       0x70 build/py/asmx64.o
+                 0x0000000000015062                asm_x64_mov_mem32_to_r64zx
+  .text.asm_x64_mov_mem64_to_r64
+                 0x00000000000150d2       0x4c build/py/asmx64.o
+                 0x00000000000150d2                asm_x64_mov_mem64_to_r64
+  .text.asm_x64_mov_i32_to_r64
+                 0x000000000001511e       0x41 build/py/asmx64.o
+                 0x000000000001511e                asm_x64_mov_i32_to_r64
+  .text.asm_x64_mov_i64_to_r64
+                 0x000000000001515f       0x81 build/py/asmx64.o
+                 0x000000000001515f                asm_x64_mov_i64_to_r64
+  .text.asm_x64_mov_i64_to_r64_optimised
+                 0x00000000000151e0       0x19 build/py/asmx64.o
+                 0x00000000000151e0                asm_x64_mov_i64_to_r64_optimised
+  .text.asm_x64_and_r64_r64
+                 0x00000000000151f9        0xa build/py/asmx64.o
+                 0x00000000000151f9                asm_x64_and_r64_r64
+  .text.asm_x64_or_r64_r64
+                 0x0000000000015203        0xa build/py/asmx64.o
+                 0x0000000000015203                asm_x64_or_r64_r64
+  .text.asm_x64_xor_r64_r64
+                 0x000000000001520d        0xa build/py/asmx64.o
+                 0x000000000001520d                asm_x64_xor_r64_r64
+  .text.asm_x64_shl_r64_cl
+                 0x0000000000015217        0xf build/py/asmx64.o
+                 0x0000000000015217                asm_x64_shl_r64_cl
+  .text.asm_x64_sar_r64_cl
+                 0x0000000000015226        0xf build/py/asmx64.o
+                 0x0000000000015226                asm_x64_sar_r64_cl
+  .text.asm_x64_add_r64_r64
+                 0x0000000000015235        0xa build/py/asmx64.o
+                 0x0000000000015235                asm_x64_add_r64_r64
+  .text.asm_x64_sub_r64_r64
+                 0x000000000001523f        0xa build/py/asmx64.o
+                 0x000000000001523f                asm_x64_sub_r64_r64
+  .text.asm_x64_mul_r64_r64
+                 0x0000000000015249       0x56 build/py/asmx64.o
+                 0x0000000000015249                asm_x64_mul_r64_r64
+  .text.asm_x64_cmp_r64_with_r64
+                 0x000000000001529f       0x10 build/py/asmx64.o
+                 0x000000000001529f                asm_x64_cmp_r64_with_r64
+  .text.asm_x64_test_r8_with_r8
+                 0x00000000000152af       0x65 build/py/asmx64.o
+                 0x00000000000152af                asm_x64_test_r8_with_r8
+  .text.asm_x64_test_r64_with_r64
+                 0x0000000000015314       0x10 build/py/asmx64.o
+                 0x0000000000015314                asm_x64_test_r64_with_r64
+  .text.asm_x64_setcc_r8
+                 0x0000000000015324       0x41 build/py/asmx64.o
+                 0x0000000000015324                asm_x64_setcc_r8
+  .text.asm_x64_jmp_reg
+                 0x0000000000015365       0x3a build/py/asmx64.o
+                 0x0000000000015365                asm_x64_jmp_reg
+  .text.asm_x64_jmp_label
+                 0x000000000001539f       0x72 build/py/asmx64.o
+                 0x000000000001539f                asm_x64_jmp_label
+  .text.asm_x64_jcc_label
+                 0x0000000000015411       0x7b build/py/asmx64.o
+                 0x0000000000015411                asm_x64_jcc_label
+  .text.asm_x64_entry
+                 0x000000000001548c       0x82 build/py/asmx64.o
+                 0x000000000001548c                asm_x64_entry
+  .text.asm_x64_exit
+                 0x000000000001550e       0x59 build/py/asmx64.o
+                 0x000000000001550e                asm_x64_exit
+  .text.asm_x64_mov_local_to_r64
+                 0x0000000000015567       0x11 build/py/asmx64.o
+                 0x0000000000015567                asm_x64_mov_local_to_r64
+  .text.asm_x64_mov_r64_to_local
+                 0x0000000000015578       0x11 build/py/asmx64.o
+                 0x0000000000015578                asm_x64_mov_r64_to_local
+  .text.asm_x64_mov_local_addr_to_r64
+                 0x0000000000015589       0x6a build/py/asmx64.o
+                 0x0000000000015589                asm_x64_mov_local_addr_to_r64
+  .text.asm_x64_mov_reg_pcrel
+                 0x00000000000155f3       0x57 build/py/asmx64.o
+                 0x00000000000155f3                asm_x64_mov_reg_pcrel
+  .text.asm_x64_call_ind
+                 0x000000000001564a       0x5a build/py/asmx64.o
+                 0x000000000001564a                asm_x64_call_ind
+  .text.emit_native_last_emit_was_return_value
+                 0x00000000000156a4        0x7 build/py/emitnx64.o
+  .text.emit_native_set_source_line
+                 0x00000000000156ab        0x1 build/py/emitnx64.o
+  .text.emit_native_x64_new
+                 0x00000000000156ac       0x7a build/py/emitnx64.o
+                 0x00000000000156ac                emit_native_x64_new
+  .text.emit_native_x64_free
+                 0x0000000000015726       0x42 build/py/emitnx64.o
+                 0x0000000000015726                emit_native_x64_free
+  .text.ensure_extra_stack
+                 0x0000000000015768       0x3a build/py/emitnx64.o
+  .text.emit_native_push_exc_stack
+                 0x00000000000157a2       0xaa build/py/emitnx64.o
+  .text.adjust_stack
+                 0x000000000001584c       0x71 build/py/emitnx64.o
+  .text.emit_native_end_except_handler
+                 0x00000000000158bd        0x9 build/py/emitnx64.o
+  .text.emit_pre_pop_discard
+                 0x00000000000158c6       0x10 build/py/emitnx64.o
+  .text.emit_native_pop_top
+                 0x00000000000158d6        0x5 build/py/emitnx64.o
+  .text.emit_native_for_iter_end
+                 0x00000000000158db       0x13 build/py/emitnx64.o
+  .text.emit_post_push_reg
+                 0x00000000000158ee       0x40 build/py/emitnx64.o
+  .text.emit_post_push_imm
+                 0x000000000001592e       0x42 build/py/emitnx64.o
+  .text.emit_native_load_null
+                 0x0000000000015970       0x10 build/py/emitnx64.o
+  .text.emit_native_load_const_small_int
+                 0x0000000000015980       0x14 build/py/emitnx64.o
+  .text.emit_native_adjust_stack_size
+                 0x0000000000015994       0x5e build/py/emitnx64.o
+  .text.emit_native_leave_exc_stack
+                 0x00000000000159f2       0x8c build/py/emitnx64.o
+  .text.emit_native_start_except_handler
+                 0x0000000000015a7e       0x2e build/py/emitnx64.o
+  .text.emit_native_mov_reg_state
+                 0x0000000000015aac       0x33 build/py/emitnx64.o
+  .text.emit_load_reg_with_ptr
+                 0x0000000000015adf       0x79 build/py/emitnx64.o
+  .text.emit_native_mov_state_reg
+                 0x0000000000015b58       0x2f build/py/emitnx64.o
+  .text.need_reg_single
+                 0x0000000000015b87       0x61 build/py/emitnx64.o
+  .text.emit_native_load_fast
+                 0x0000000000015be8       0xa0 build/py/emitnx64.o
+  .text.need_reg_all
+                 0x0000000000015c88       0x44 build/py/emitnx64.o
+  .text.emit_call_with_imm_arg
+                 0x0000000000015ccc       0x43 build/py/emitnx64.o
+  .text.emit_call
+                 0x0000000000015d0f       0x23 build/py/emitnx64.o
+  .text.emit_native_load_build_class
+                 0x0000000000015d32       0x22 build/py/emitnx64.o
+  .text.emit_call_with_qstr_arg
+                 0x0000000000015d54       0x74 build/py/emitnx64.o
+  .text.emit_native_delete_global
+                 0x0000000000015dc8       0x1a build/py/emitnx64.o
+  .text.emit_native_load_global
+                 0x0000000000015de2       0x60 build/py/emitnx64.o
+  .text.emit_native_mov_reg_state_addr
+                 0x0000000000015e42       0x4e build/py/emitnx64.o
+  .text.emit_get_stack_pointer_to_reg_for_push
+                 0x0000000000015e90       0x73 build/py/emitnx64.o
+  .text.emit_native_load_const_obj
+                 0x0000000000015f03       0x53 build/py/emitnx64.o
+  .text.emit_native_load_const_tok
+                 0x0000000000015f56       0x38 build/py/emitnx64.o
+  .text.emit_fold_stack_top.constprop.28
+                 0x0000000000015f8e       0x5a build/py/emitnx64.o
+  .text.emit_native_load_const_str
+                 0x0000000000015fe8       0x70 build/py/emitnx64.o
+  .text.emit_call_with_2_imm_args.constprop.30
+                 0x0000000000016058       0x59 build/py/emitnx64.o
+  .text.peek_vtype
+                 0x00000000000160b1       0x1d build/py/emitnx64.o
+  .text.load_reg_stack_imm
+                 0x00000000000160ce       0xa4 build/py/emitnx64.o
+  .text.need_stack_settled
+                 0x0000000000016172       0x98 build/py/emitnx64.o
+  .text.emit_native_jump
+                 0x000000000001620a       0x2f build/py/emitnx64.o
+  .text.emit_native_pop_except_jump
+                 0x0000000000016239       0x4f build/py/emitnx64.o
+  .text.emit_native_unwind_jump
+                 0x0000000000016288      0x128 build/py/emitnx64.o
+  .text.emit_access_stack
+                 0x00000000000163b0       0x9a build/py/emitnx64.o
+  .text.emit_pre_pop_reg
+                 0x000000000001644a       0x27 build/py/emitnx64.o
+  .text.emit_pre_pop_reg_reg
+                 0x0000000000016471       0x2f build/py/emitnx64.o
+  .text.emit_native_rot_two
+                 0x00000000000164a0       0x6a build/py/emitnx64.o
+  .text.emit_native_dup_top_two
+                 0x000000000001650a       0x8e build/py/emitnx64.o
+  .text.emit_native_make_function
+                 0x0000000000016598      0x11f build/py/emitnx64.o
+  .text.emit_pre_pop_reg_reg_reg
+                 0x00000000000166b7       0x4c build/py/emitnx64.o
+  .text.emit_native_rot_three
+                 0x0000000000016703       0x93 build/py/emitnx64.o
+  .text.emit_native_store_map
+                 0x0000000000016796       0xdf build/py/emitnx64.o
+  .text.emit_native_label_assign
+                 0x0000000000016875       0xb2 build/py/emitnx64.o
+  .text.emit_native_end_finally
+                 0x0000000000016927      0x114 build/py/emitnx64.o
+  .text.emit_native_end_pass
+                 0x0000000000016a3b      0x427 build/py/emitnx64.o
+  .text.emit_native_global_exc_entry
+                 0x0000000000016e62      0x342 build/py/emitnx64.o
+  .text.emit_native_start_pass
+                 0x00000000000171a4      0x721 build/py/emitnx64.o
+  .text.emit_native_unpack_ex
+                 0x00000000000178c5       0xa2 build/py/emitnx64.o
+  .text.emit_native_unpack_sequence
+                 0x0000000000017967       0x92 build/py/emitnx64.o
+  .text.emit_native_get_iter
+                 0x00000000000179f9       0xbe build/py/emitnx64.o
+  .text.emit_native_raise_varargs
+                 0x0000000000017ab7       0x98 build/py/emitnx64.o
+  .text.emit_native_unary_op
+                 0x0000000000017b4f       0xa3 build/py/emitnx64.o
+  .text.emit_native_store_fast
+                 0x0000000000017bf2       0xf4 build/py/emitnx64.o
+  .text.emit_native_delete_local
+                 0x0000000000017ce6       0x37 build/py/emitnx64.o
+  .text.emit_native_jump_helper
+                 0x0000000000017d1d      0x15d build/py/emitnx64.o
+  .text.emit_native_jump_if_or_pop
+                 0x0000000000017e7a        0xb build/py/emitnx64.o
+  .text.emit_native_pop_jump_if
+                 0x0000000000017e85        0xe build/py/emitnx64.o
+  .text.emit_native_attr
+                 0x0000000000017e93      0x131 build/py/emitnx64.o
+  .text.emit_native_store_global
+                 0x0000000000017fc4       0xe1 build/py/emitnx64.o
+  .text.emit_pre_pop_reg_flexible
+                 0x00000000000180a5       0x63 build/py/emitnx64.o
+  .text.emit_native_dup_top
+                 0x0000000000018108       0x77 build/py/emitnx64.o
+  .text.emit_native_store_local
+                 0x000000000001817f       0xcf build/py/emitnx64.o
+  .text.emit_native_load_local
+                 0x000000000001824e       0xa3 build/py/emitnx64.o
+  .text.emit_native_binary_op
+                 0x00000000000182f1      0x34e build/py/emitnx64.o
+  .text.emit_native_store_comp
+                 0x000000000001863f      0x15d build/py/emitnx64.o
+  .text.emit_native_import
+                 0x000000000001879c      0x151 build/py/emitnx64.o
+  .text.emit_get_stack_pointer_to_reg_for_pop
+                 0x00000000000188ed      0x136 build/py/emitnx64.o
+  .text.emit_native_yield
+                 0x0000000000018a23      0x257 build/py/emitnx64.o
+  .text.emit_native_call_method
+                 0x0000000000018c7a       0x74 build/py/emitnx64.o
+  .text.emit_native_call_function
+                 0x0000000000018cee      0x1c3 build/py/emitnx64.o
+  .text.emit_native_make_closure
+                 0x0000000000018eb1       0xa8 build/py/emitnx64.o
+  .text.emit_native_build
+                 0x0000000000018f59      0x1b2 build/py/emitnx64.o
+  .text.emit_native_return_value
+                 0x000000000001910b      0x1ba build/py/emitnx64.o
+  .text.emit_native_with_cleanup
+                 0x00000000000192c5      0x21e build/py/emitnx64.o
+  .text.emit_native_for_iter
+                 0x00000000000194e3       0x6f build/py/emitnx64.o
+  .text.emit_native_setup_block
+                 0x0000000000019552      0x197 build/py/emitnx64.o
+  .text.emit_native_load_method
+                 0x00000000000196e9       0xc8 build/py/emitnx64.o
+  .text.emit_native_subscr
+                 0x00000000000197b1      0x892 build/py/emitnx64.o
+  .text.asm_x86_write_byte_2
+                 0x000000000001a043       0x23 build/py/asmx86.o
+  .text.asm_x86_generic_r32_r32
+                 0x000000000001a066       0x19 build/py/asmx86.o
+  .text.asm_x86_write_byte_1
+                 0x000000000001a07f       0x16 build/py/asmx86.o
+  .text.asm_x86_write_word32
+                 0x000000000001a095       0x27 build/py/asmx86.o
+  .text.asm_x86_write_r32_disp
+                 0x000000000001a0bc       0x90 build/py/asmx86.o
+  .text.asm_x86_sub_r32_i32.constprop.5
+                 0x000000000001a14c       0x4e build/py/asmx86.o
+  .text.asm_x86_mov_r32_r32
+                 0x000000000001a19a        0xa build/py/asmx86.o
+                 0x000000000001a19a                asm_x86_mov_r32_r32
+  .text.asm_x86_mov_r8_to_mem8
+                 0x000000000001a1a4       0x35 build/py/asmx86.o
+                 0x000000000001a1a4                asm_x86_mov_r8_to_mem8
+  .text.asm_x86_mov_r16_to_mem16
+                 0x000000000001a1d9       0x3c build/py/asmx86.o
+                 0x000000000001a1d9                asm_x86_mov_r16_to_mem16
+  .text.asm_x86_mov_r32_to_mem32
+                 0x000000000001a215       0x35 build/py/asmx86.o
+                 0x000000000001a215                asm_x86_mov_r32_to_mem32
+  .text.asm_x86_mov_mem8_to_r32zx
+                 0x000000000001a24a       0x3b build/py/asmx86.o
+                 0x000000000001a24a                asm_x86_mov_mem8_to_r32zx
+  .text.asm_x86_mov_mem16_to_r32zx
+                 0x000000000001a285       0x3b build/py/asmx86.o
+                 0x000000000001a285                asm_x86_mov_mem16_to_r32zx
+  .text.asm_x86_mov_mem32_to_r32
+                 0x000000000001a2c0       0x36 build/py/asmx86.o
+                 0x000000000001a2c0                asm_x86_mov_mem32_to_r32
+  .text.asm_x86_mov_i32_to_r32
+                 0x000000000001a2f6       0x2c build/py/asmx86.o
+                 0x000000000001a2f6                asm_x86_mov_i32_to_r32
+  .text.asm_x86_and_r32_r32
+                 0x000000000001a322        0xa build/py/asmx86.o
+                 0x000000000001a322                asm_x86_and_r32_r32
+  .text.asm_x86_or_r32_r32
+                 0x000000000001a32c        0xa build/py/asmx86.o
+                 0x000000000001a32c                asm_x86_or_r32_r32
+  .text.asm_x86_xor_r32_r32
+                 0x000000000001a336        0xa build/py/asmx86.o
+                 0x000000000001a336                asm_x86_xor_r32_r32
+  .text.asm_x86_shl_r32_cl
+                 0x000000000001a340       0x11 build/py/asmx86.o
+                 0x000000000001a340                asm_x86_shl_r32_cl
+  .text.asm_x86_sar_r32_cl
+                 0x000000000001a351       0x11 build/py/asmx86.o
+                 0x000000000001a351                asm_x86_sar_r32_cl
+  .text.asm_x86_add_r32_r32
+                 0x000000000001a362        0xa build/py/asmx86.o
+                 0x000000000001a362                asm_x86_add_r32_r32
+  .text.asm_x86_sub_r32_r32
+                 0x000000000001a36c        0xa build/py/asmx86.o
+                 0x000000000001a36c                asm_x86_sub_r32_r32
+  .text.asm_x86_mul_r32_r32
+                 0x000000000001a376       0x2d build/py/asmx86.o
+                 0x000000000001a376                asm_x86_mul_r32_r32
+  .text.asm_x86_cmp_r32_with_r32
+                 0x000000000001a3a3       0x10 build/py/asmx86.o
+                 0x000000000001a3a3                asm_x86_cmp_r32_with_r32
+  .text.asm_x86_test_r8_with_r8
+                 0x000000000001a3b3       0x15 build/py/asmx86.o
+                 0x000000000001a3b3                asm_x86_test_r8_with_r8
+  .text.asm_x86_test_r32_with_r32
+                 0x000000000001a3c8       0x10 build/py/asmx86.o
+                 0x000000000001a3c8                asm_x86_test_r32_with_r32
+  .text.asm_x86_setcc_r8
+                 0x000000000001a3d8       0x2e build/py/asmx86.o
+                 0x000000000001a3d8                asm_x86_setcc_r8
+  .text.asm_x86_jmp_reg
+                 0x000000000001a406       0x11 build/py/asmx86.o
+                 0x000000000001a406                asm_x86_jmp_reg
+  .text.asm_x86_jmp_label
+                 0x000000000001a417       0x72 build/py/asmx86.o
+                 0x000000000001a417                asm_x86_jmp_label
+  .text.asm_x86_jcc_label
+                 0x000000000001a489       0x7b build/py/asmx86.o
+                 0x000000000001a489                asm_x86_jcc_label
+  .text.asm_x86_entry
+                 0x000000000001a504       0x78 build/py/asmx86.o
+                 0x000000000001a504                asm_x86_entry
+  .text.asm_x86_exit
+                 0x000000000001a57c       0x4f build/py/asmx86.o
+                 0x000000000001a57c                asm_x86_exit
+  .text.asm_x86_mov_arg_to_r32
+                 0x000000000001a5cb       0x18 build/py/asmx86.o
+                 0x000000000001a5cb                asm_x86_mov_arg_to_r32
+  .text.asm_x86_mov_local_to_r32
+                 0x000000000001a5e3       0x11 build/py/asmx86.o
+                 0x000000000001a5e3                asm_x86_mov_local_to_r32
+  .text.asm_x86_mov_r32_to_local
+                 0x000000000001a5f4       0x11 build/py/asmx86.o
+                 0x000000000001a5f4                asm_x86_mov_r32_to_local
+  .text.asm_x86_mov_local_addr_to_r32
+                 0x000000000001a605       0x41 build/py/asmx86.o
+                 0x000000000001a605                asm_x86_mov_local_addr_to_r32
+  .text.asm_x86_mov_reg_pcrel
+                 0x000000000001a646       0x6c build/py/asmx86.o
+                 0x000000000001a646                asm_x86_mov_reg_pcrel
+  .text.asm_x86_call_ind
+                 0x000000000001a6b2       0xfc build/py/asmx86.o
+                 0x000000000001a6b2                asm_x86_call_ind
+  .text.emit_native_last_emit_was_return_value
+                 0x000000000001a7ae        0x7 build/py/emitnx86.o
+  .text.emit_native_set_source_line
+                 0x000000000001a7b5        0x1 build/py/emitnx86.o
+  .text.emit_native_x86_new
+                 0x000000000001a7b6       0x7a build/py/emitnx86.o
+                 0x000000000001a7b6                emit_native_x86_new
+  .text.emit_native_x86_free
+                 0x000000000001a830       0x42 build/py/emitnx86.o
+                 0x000000000001a830                emit_native_x86_free
+  .text.ensure_extra_stack
+                 0x000000000001a872       0x3a build/py/emitnx86.o
+  .text.emit_native_push_exc_stack
+                 0x000000000001a8ac       0xaa build/py/emitnx86.o
+  .text.adjust_stack
+                 0x000000000001a956       0x71 build/py/emitnx86.o
+  .text.emit_native_end_except_handler
+                 0x000000000001a9c7        0x9 build/py/emitnx86.o
+  .text.emit_pre_pop_discard
+                 0x000000000001a9d0       0x10 build/py/emitnx86.o
+  .text.emit_native_pop_top
+                 0x000000000001a9e0        0x5 build/py/emitnx86.o
+  .text.emit_native_for_iter_end
+                 0x000000000001a9e5       0x13 build/py/emitnx86.o
+  .text.emit_post_push_reg
+                 0x000000000001a9f8       0x40 build/py/emitnx86.o
+  .text.emit_post_push_imm
+                 0x000000000001aa38       0x42 build/py/emitnx86.o
+  .text.emit_native_load_null
+                 0x000000000001aa7a       0x10 build/py/emitnx86.o
+  .text.emit_native_load_const_small_int
+                 0x000000000001aa8a       0x14 build/py/emitnx86.o
+  .text.emit_native_adjust_stack_size
+                 0x000000000001aa9e       0x5e build/py/emitnx86.o
+  .text.emit_native_leave_exc_stack
+                 0x000000000001aafc       0x8c build/py/emitnx86.o
+  .text.emit_native_start_except_handler
+                 0x000000000001ab88       0x2e build/py/emitnx86.o
+  .text.emit_native_mov_reg_state
+                 0x000000000001abb6       0x33 build/py/emitnx86.o
+  .text.emit_native_mov_state_reg
+                 0x000000000001abe9       0x2f build/py/emitnx86.o
+  .text.need_reg_single
+                 0x000000000001ac18       0x61 build/py/emitnx86.o
+  .text.emit_native_load_fast
+                 0x000000000001ac79       0xa0 build/py/emitnx86.o
+  .text.need_reg_all
+                 0x000000000001ad19       0x44 build/py/emitnx86.o
+  .text.emit_call_with_imm_arg
+                 0x000000000001ad5d       0x4e build/py/emitnx86.o
+  .text.emit_call
+                 0x000000000001adab       0x2e build/py/emitnx86.o
+  .text.emit_native_load_build_class
+                 0x000000000001add9       0x22 build/py/emitnx86.o
+  .text.emit_call_with_qstr_arg
+                 0x000000000001adfb       0x7f build/py/emitnx86.o
+  .text.emit_native_delete_global
+                 0x000000000001ae7a       0x17 build/py/emitnx86.o
+  .text.emit_native_load_global
+                 0x000000000001ae91       0x5d build/py/emitnx86.o
+  .text.emit_native_mov_reg_state_addr
+                 0x000000000001aeee       0x4b build/py/emitnx86.o
+  .text.emit_get_stack_pointer_to_reg_for_push
+                 0x000000000001af39       0x73 build/py/emitnx86.o
+  .text.emit_load_reg_with_ptr.constprop.26
+                 0x000000000001afac       0x76 build/py/emitnx86.o
+  .text.emit_native_load_const_obj
+                 0x000000000001b022       0x51 build/py/emitnx86.o
+  .text.emit_native_load_const_tok
+                 0x000000000001b073       0x38 build/py/emitnx86.o
+  .text.emit_fold_stack_top.constprop.29
+                 0x000000000001b0ab       0x57 build/py/emitnx86.o
+  .text.emit_native_load_const_str
+                 0x000000000001b102       0x70 build/py/emitnx86.o
+  .text.emit_call_with_2_imm_args.constprop.31
+                 0x000000000001b172       0x61 build/py/emitnx86.o
+  .text.peek_vtype
+                 0x000000000001b1d3       0x1d build/py/emitnx86.o
+  .text.load_reg_stack_imm
+                 0x000000000001b1f0       0x98 build/py/emitnx86.o
+  .text.need_stack_settled
+                 0x000000000001b288       0x98 build/py/emitnx86.o
+  .text.emit_native_jump
+                 0x000000000001b320       0x2f build/py/emitnx86.o
+  .text.emit_native_pop_except_jump
+                 0x000000000001b34f       0x4f build/py/emitnx86.o
+  .text.emit_native_unwind_jump
+                 0x000000000001b39e      0x128 build/py/emitnx86.o
+  .text.emit_access_stack
+                 0x000000000001b4c6       0x9a build/py/emitnx86.o
+  .text.emit_pre_pop_reg
+                 0x000000000001b560       0x27 build/py/emitnx86.o
+  .text.emit_pre_pop_reg_reg
+                 0x000000000001b587       0x2f build/py/emitnx86.o
+  .text.emit_native_rot_two
+                 0x000000000001b5b6       0x6a build/py/emitnx86.o
+  .text.emit_native_dup_top_two
+                 0x000000000001b620       0x8e build/py/emitnx86.o
+  .text.emit_native_make_function
+                 0x000000000001b6ae      0x11f build/py/emitnx86.o
+  .text.emit_pre_pop_reg_reg_reg
+                 0x000000000001b7cd       0x4c build/py/emitnx86.o
+  .text.emit_native_rot_three
+                 0x000000000001b819       0x93 build/py/emitnx86.o
+  .text.emit_native_store_map
+                 0x000000000001b8ac       0xdf build/py/emitnx86.o
+  .text.emit_native_label_assign
+                 0x000000000001b98b       0xb2 build/py/emitnx86.o
+  .text.emit_native_end_finally
+                 0x000000000001ba3d      0x111 build/py/emitnx86.o
+  .text.emit_native_end_pass
+                 0x000000000001bb4e      0x41e build/py/emitnx86.o
+  .text.emit_native_global_exc_entry
+                 0x000000000001bf6c      0x323 build/py/emitnx86.o
+  .text.emit_native_start_pass
+                 0x000000000001c28f      0x776 build/py/emitnx86.o
+  .text.emit_native_attr
+                 0x000000000001ca05      0x126 build/py/emitnx86.o
+  .text.emit_native_store_global
+                 0x000000000001cb2b       0xdb build/py/emitnx86.o
+  .text.emit_native_unpack_ex
+                 0x000000000001cc06       0x9f build/py/emitnx86.o
+  .text.emit_native_unpack_sequence
+                 0x000000000001cca5       0x8f build/py/emitnx86.o
+  .text.emit_native_get_iter
+                 0x000000000001cd34       0xbb build/py/emitnx86.o
+  .text.emit_native_raise_varargs
+                 0x000000000001cdef       0x95 build/py/emitnx86.o
+  .text.emit_native_unary_op
+                 0x000000000001ce84       0xa0 build/py/emitnx86.o
+  .text.emit_native_store_fast
+                 0x000000000001cf24       0xf4 build/py/emitnx86.o
+  .text.emit_native_delete_local
+                 0x000000000001d018       0x37 build/py/emitnx86.o
+  .text.emit_native_jump_helper
+                 0x000000000001d04f      0x158 build/py/emitnx86.o
+  .text.emit_native_jump_if_or_pop
+                 0x000000000001d1a7        0xb build/py/emitnx86.o
+  .text.emit_native_pop_jump_if
+                 0x000000000001d1b2        0xe build/py/emitnx86.o
+  .text.emit_pre_pop_reg_flexible
+                 0x000000000001d1c0       0x63 build/py/emitnx86.o
+  .text.emit_native_dup_top
+                 0x000000000001d223       0x77 build/py/emitnx86.o
+  .text.emit_native_store_local
+                 0x000000000001d29a       0xcf build/py/emitnx86.o
+  .text.emit_native_load_local
+                 0x000000000001d369       0xa3 build/py/emitnx86.o
+  .text.emit_native_binary_op
+                 0x000000000001d40c      0x345 build/py/emitnx86.o
+  .text.emit_native_store_comp
+                 0x000000000001d751      0x15a build/py/emitnx86.o
+  .text.emit_native_import
+                 0x000000000001d8ab      0x148 build/py/emitnx86.o
+  .text.emit_get_stack_pointer_to_reg_for_pop
+                 0x000000000001d9f3      0x133 build/py/emitnx86.o
+  .text.emit_native_yield
+                 0x000000000001db26      0x251 build/py/emitnx86.o
+  .text.emit_native_call_method
+                 0x000000000001dd77       0x74 build/py/emitnx86.o
+  .text.emit_native_call_function
+                 0x000000000001ddeb      0x1bd build/py/emitnx86.o
+  .text.emit_native_make_closure
+                 0x000000000001dfa8       0xa5 build/py/emitnx86.o
+  .text.emit_native_build
+                 0x000000000001e04d      0x1ac build/py/emitnx86.o
+  .text.emit_native_setup_block
+                 0x000000000001e1f9      0x191 build/py/emitnx86.o
+  .text.emit_native_load_method
+                 0x000000000001e38a       0xc2 build/py/emitnx86.o
+  .text.emit_native_return_value
+                 0x000000000001e44c      0x1ae build/py/emitnx86.o
+  .text.emit_native_with_cleanup
+                 0x000000000001e5fa      0x1ff build/py/emitnx86.o
+  .text.emit_native_for_iter
+                 0x000000000001e7f9       0x6c build/py/emitnx86.o
+  .text.emit_native_subscr
+                 0x000000000001e865      0x808 build/py/emitnx86.o
+  .text.get_label_dest
+                 0x000000000001f06d       0x34 build/py/asmthumb.o
+  .text.asm_thumb_end_pass
+                 0x000000000001f0a1        0x1 build/py/asmthumb.o
+                 0x000000000001f0a1                asm_thumb_end_pass
+  .text.asm_thumb_op16
+                 0x000000000001f0a2       0x19 build/py/asmthumb.o
+                 0x000000000001f0a2                asm_thumb_op16
+  .text.asm_thumb_op32
+                 0x000000000001f0bb       0x2b build/py/asmthumb.o
+                 0x000000000001f0bb                asm_thumb_op32
+  .text.asm_thumb_entry
+                 0x000000000001f0e6      0x133 build/py/asmthumb.o
+                 0x000000000001f0e6                asm_thumb_entry
+  .text.asm_thumb_exit
+                 0x000000000001f219       0x56 build/py/asmthumb.o
+                 0x000000000001f219                asm_thumb_exit
+  .text.asm_thumb_format_4
+                 0x000000000001f26f       0x56 build/py/asmthumb.o
+                 0x000000000001f26f                asm_thumb_format_4
+  .text.asm_thumb_mov_reg_reg
+                 0x000000000001f2c5       0x2f build/py/asmthumb.o
+                 0x000000000001f2c5                asm_thumb_mov_reg_reg
+  .text.asm_thumb_mov_reg_i16
+                 0x000000000001f2f4       0x61 build/py/asmthumb.o
+                 0x000000000001f2f4                asm_thumb_mov_reg_i16
+  .text.asm_thumb_b_n_label
+                 0x000000000001f355       0x5e build/py/asmthumb.o
+                 0x000000000001f355                asm_thumb_b_n_label
+  .text.asm_thumb_bcc_nw_label
+                 0x000000000001f3b3       0xbc build/py/asmthumb.o
+                 0x000000000001f3b3                asm_thumb_bcc_nw_label
+  .text.asm_thumb_bl_label
+                 0x000000000001f46f       0x6b build/py/asmthumb.o
+                 0x000000000001f46f                asm_thumb_bl_label
+  .text.asm_thumb_mov_reg_i32
+                 0x000000000001f4da       0x47 build/py/asmthumb.o
+                 0x000000000001f4da                asm_thumb_mov_reg_i32
+  .text.asm_thumb_mov_reg_i32_optimised
+                 0x000000000001f521       0x38 build/py/asmthumb.o
+                 0x000000000001f521                asm_thumb_mov_reg_i32_optimised
+  .text.asm_thumb_mov_local_reg
+                 0x000000000001f559       0x62 build/py/asmthumb.o
+                 0x000000000001f559                asm_thumb_mov_local_reg
+  .text.asm_thumb_mov_reg_local
+                 0x000000000001f5bb       0x5e build/py/asmthumb.o
+                 0x000000000001f5bb                asm_thumb_mov_reg_local
+  .text.asm_thumb_mov_reg_local_addr
+                 0x000000000001f619       0x5e build/py/asmthumb.o
+                 0x000000000001f619                asm_thumb_mov_reg_local_addr
+  .text.asm_thumb_mov_reg_pcrel
+                 0x000000000001f677       0x4e build/py/asmthumb.o
+                 0x000000000001f677                asm_thumb_mov_reg_pcrel
+  .text.asm_thumb_ldr_reg_reg_i12_optimised
+                 0x000000000001f6c5       0x41 build/py/asmthumb.o
+                 0x000000000001f6c5                asm_thumb_ldr_reg_reg_i12_optimised
+  .text.asm_thumb_b_label
+                 0x000000000001f706       0x6d build/py/asmthumb.o
+                 0x000000000001f706                asm_thumb_b_label
+  .text.asm_thumb_bcc_label
+                 0x000000000001f773       0x94 build/py/asmthumb.o
+                 0x000000000001f773                asm_thumb_bcc_label
+  .text.asm_thumb_bl_ind
+                 0x000000000001f807       0x31 build/py/asmthumb.o
+                 0x000000000001f807                asm_thumb_bl_ind
+  .text.emit_native_last_emit_was_return_value
+                 0x000000000001f838        0x7 build/py/emitnthumb.o
+  .text.emit_native_set_source_line
+                 0x000000000001f83f        0x1 build/py/emitnthumb.o
+  .text.emit_native_thumb_new
+                 0x000000000001f840       0x7a build/py/emitnthumb.o
+                 0x000000000001f840                emit_native_thumb_new
+  .text.emit_native_thumb_free
+                 0x000000000001f8ba       0x42 build/py/emitnthumb.o
+                 0x000000000001f8ba                emit_native_thumb_free
+  .text.ensure_extra_stack
+                 0x000000000001f8fc       0x3a build/py/emitnthumb.o
+  .text.emit_native_push_exc_stack
+                 0x000000000001f936       0xaa build/py/emitnthumb.o
+  .text.asm_thumb_format_9_10
+                 0x000000000001f9e0       0x1a build/py/emitnthumb.o
+  .text.adjust_stack
+                 0x000000000001f9fa       0x71 build/py/emitnthumb.o
+  .text.emit_native_end_except_handler
+                 0x000000000001fa6b        0x9 build/py/emitnthumb.o
+  .text.emit_pre_pop_discard
+                 0x000000000001fa74       0x10 build/py/emitnthumb.o
+  .text.emit_native_pop_top
+                 0x000000000001fa84        0x5 build/py/emitnthumb.o
+  .text.emit_native_for_iter_end
+                 0x000000000001fa89       0x13 build/py/emitnthumb.o
+  .text.emit_post_push_reg
+                 0x000000000001fa9c       0x40 build/py/emitnthumb.o
+  .text.emit_post_push_imm
+                 0x000000000001fadc       0x42 build/py/emitnthumb.o
+  .text.emit_native_load_null
+                 0x000000000001fb1e       0x10 build/py/emitnthumb.o
+  .text.emit_native_load_const_small_int
+                 0x000000000001fb2e       0x14 build/py/emitnthumb.o
+  .text.emit_native_adjust_stack_size
+                 0x000000000001fb42       0x5e build/py/emitnthumb.o
+  .text.emit_native_leave_exc_stack
+                 0x000000000001fba0       0x91 build/py/emitnthumb.o
+  .text.emit_native_start_except_handler
+                 0x000000000001fc31       0x2e build/py/emitnthumb.o
+  .text.emit_native_mov_reg_state
+                 0x000000000001fc5f       0x28 build/py/emitnthumb.o
+  .text.asm_thumb_add_rlo_rlo_rlo
+                 0x000000000001fc87       0x5f build/py/emitnthumb.o
+  .text.emit_native_mov_reg_state_addr
+                 0x000000000001fce6       0x48 build/py/emitnthumb.o
+  .text.emit_load_reg_with_ptr.constprop.27
+                 0x000000000001fd2e       0x71 build/py/emitnthumb.o
+  .text.emit_fold_stack_top.constprop.30
+                 0x000000000001fd9f       0x57 build/py/emitnthumb.o
+  .text.emit_native_mov_state_reg
+                 0x000000000001fdf6       0x2e build/py/emitnthumb.o
+  .text.need_reg_single
+                 0x000000000001fe24       0x61 build/py/emitnthumb.o
+  .text.emit_native_load_const_obj
+                 0x000000000001fe85       0x51 build/py/emitnthumb.o
+  .text.emit_native_load_const_tok
+                 0x000000000001fed6       0x38 build/py/emitnthumb.o
+  .text.emit_native_load_fast
+                 0x000000000001ff0e       0xa0 build/py/emitnthumb.o
+  .text.emit_native_load_const_str
+                 0x000000000001ffae       0x71 build/py/emitnthumb.o
+  .text.need_reg_all
+                 0x000000000002001f       0x44 build/py/emitnthumb.o
+  .text.emit_call_with_imm_arg
+                 0x0000000000020063       0x49 build/py/emitnthumb.o
+  .text.emit_call
+                 0x00000000000200ac       0x2b build/py/emitnthumb.o
+  .text.emit_native_load_build_class
+                 0x00000000000200d7       0x22 build/py/emitnthumb.o
+  .text.emit_get_stack_pointer_to_reg_for_push
+                 0x00000000000200f9       0x73 build/py/emitnthumb.o
+  .text.emit_call_with_qstr_arg
+                 0x000000000002016c       0x7c build/py/emitnthumb.o
+  .text.emit_native_delete_global
+                 0x00000000000201e8       0x17 build/py/emitnthumb.o
+  .text.emit_native_load_global
+                 0x00000000000201ff       0x5d build/py/emitnthumb.o
+  .text.emit_call_with_2_imm_args.constprop.32
+                 0x000000000002025c       0x5c build/py/emitnthumb.o
+  .text.peek_vtype
+                 0x00000000000202b8       0x1d build/py/emitnthumb.o
+  .text.load_reg_stack_imm
+                 0x00000000000202d5       0x89 build/py/emitnthumb.o
+  .text.need_stack_settled
+                 0x000000000002035e       0x98 build/py/emitnthumb.o
+  .text.emit_native_jump
+                 0x00000000000203f6       0x2f build/py/emitnthumb.o
+  .text.emit_native_pop_except_jump
+                 0x0000000000020425       0x4f build/py/emitnthumb.o
+  .text.emit_native_unwind_jump
+                 0x0000000000020474      0x12c build/py/emitnthumb.o
+  .text.emit_access_stack
+                 0x00000000000205a0       0x9a build/py/emitnthumb.o
+  .text.emit_pre_pop_reg
+                 0x000000000002063a       0x27 build/py/emitnthumb.o
+  .text.emit_pre_pop_reg_reg
+                 0x0000000000020661       0x2f build/py/emitnthumb.o
+  .text.emit_native_rot_two
+                 0x0000000000020690       0x6a build/py/emitnthumb.o
+  .text.emit_native_dup_top_two
+                 0x00000000000206fa       0x8e build/py/emitnthumb.o
+  .text.emit_native_make_function
+                 0x0000000000020788      0x11d build/py/emitnthumb.o
+  .text.emit_pre_pop_reg_reg_reg
+                 0x00000000000208a5       0x4c build/py/emitnthumb.o
+  .text.emit_native_rot_three
+                 0x00000000000208f1       0x93 build/py/emitnthumb.o
+  .text.emit_native_store_map
+                 0x0000000000020984       0xdf build/py/emitnthumb.o
+  .text.emit_native_label_assign
+                 0x0000000000020a63       0xb2 build/py/emitnthumb.o
+  .text.emit_native_end_finally
+                 0x0000000000020b15      0x112 build/py/emitnthumb.o
+  .text.emit_native_end_pass
+                 0x0000000000020c27      0x428 build/py/emitnthumb.o
+  .text.emit_native_global_exc_entry
+                 0x000000000002104f      0x31e build/py/emitnthumb.o
+  .text.emit_native_start_pass
+                 0x000000000002136d      0x6e9 build/py/emitnthumb.o
+  .text.emit_native_unpack_ex
+                 0x0000000000021a56       0x9f build/py/emitnthumb.o
+  .text.emit_native_unpack_sequence
+                 0x0000000000021af5       0x8f build/py/emitnthumb.o
+  .text.emit_native_get_iter
+                 0x0000000000021b84       0xbb build/py/emitnthumb.o
+  .text.emit_native_raise_varargs
+                 0x0000000000021c3f       0x95 build/py/emitnthumb.o
+  .text.emit_native_unary_op
+                 0x0000000000021cd4       0xa0 build/py/emitnthumb.o
+  .text.emit_native_jump_helper
+                 0x0000000000021d74      0x13a build/py/emitnthumb.o
+  .text.emit_native_jump_if_or_pop
+                 0x0000000000021eae        0xb build/py/emitnthumb.o
+  .text.emit_native_pop_jump_if
+                 0x0000000000021eb9        0xe build/py/emitnthumb.o
+  .text.emit_native_store_fast
+                 0x0000000000021ec7       0xf4 build/py/emitnthumb.o
+  .text.emit_native_delete_local
+                 0x0000000000021fbb       0x37 build/py/emitnthumb.o
+  .text.emit_native_attr
+                 0x0000000000021ff2      0x12b build/py/emitnthumb.o
+  .text.emit_native_store_global
+                 0x000000000002211d       0xdb build/py/emitnthumb.o
+  .text.emit_pre_pop_reg_flexible
+                 0x00000000000221f8       0x63 build/py/emitnthumb.o
+  .text.emit_native_dup_top
+                 0x000000000002225b       0x77 build/py/emitnthumb.o
+  .text.emit_native_binary_op
+                 0x00000000000222d2      0x389 build/py/emitnthumb.o
+  .text.emit_native_store_local
+                 0x000000000002265b       0xd5 build/py/emitnthumb.o
+  .text.emit_native_load_local
+                 0x0000000000022730       0xa3 build/py/emitnthumb.o
+  .text.emit_native_store_comp
+                 0x00000000000227d3      0x15a build/py/emitnthumb.o
+  .text.emit_native_import
+                 0x000000000002292d      0x148 build/py/emitnthumb.o
+  .text.emit_get_stack_pointer_to_reg_for_pop
+                 0x0000000000022a75      0x133 build/py/emitnthumb.o
+  .text.emit_native_yield
+                 0x0000000000022ba8      0x251 build/py/emitnthumb.o
+  .text.emit_native_call_method
+                 0x0000000000022df9       0x74 build/py/emitnthumb.o
+  .text.emit_native_call_function
+                 0x0000000000022e6d      0x1bd build/py/emitnthumb.o
+  .text.emit_native_make_closure
+                 0x000000000002302a       0x9b build/py/emitnthumb.o
+  .text.emit_native_build
+                 0x00000000000230c5      0x1ac build/py/emitnthumb.o
+  .text.emit_native_for_iter
+                 0x0000000000023271       0x69 build/py/emitnthumb.o
+  .text.emit_native_with_cleanup
+                 0x00000000000232da      0x1fe build/py/emitnthumb.o
+  .text.emit_native_return_value
+                 0x00000000000234d8      0x1ae build/py/emitnthumb.o
+  .text.emit_native_setup_block
+                 0x0000000000023686      0x191 build/py/emitnthumb.o
+  .text.emit_native_load_method
+                 0x0000000000023817       0xc2 build/py/emitnthumb.o
+  .text.emit_native_subscr
+                 0x00000000000238d9      0x901 build/py/emitnthumb.o
+  .text.emit_inline_thumb_new
+                 0x00000000000241da       0x49 build/py/emitinlinethumb.o
+                 0x00000000000241da                emit_inline_thumb_new
+  .text.emit_inline_thumb_free
+                 0x0000000000024223       0x20 build/py/emitinlinethumb.o
+                 0x0000000000024223                emit_inline_thumb_free
+  .text.get_arg_addr
+                 0x0000000000024243       0x69 build/py/emitinlinethumb.o
+  .text.emit_inline_thumb_end_pass
+                 0x00000000000242ac       0x12 build/py/emitinlinethumb.o
+  .text.emit_inline_thumb_start_pass
+                 0x00000000000242be       0x46 build/py/emitinlinethumb.o
+  .text.get_arg_label
+                 0x0000000000024304       0x86 build/py/emitinlinethumb.o
+  .text.get_arg_str
+                 0x000000000002438a       0x1d build/py/emitinlinethumb.o
+  .text.get_arg_vfpreg
+                 0x00000000000243a7       0x8f build/py/emitinlinethumb.o
+  .text.get_arg_reg
+                 0x0000000000024436       0xcb build/py/emitinlinethumb.o
+  .text.get_arg_reglist
+                 0x0000000000024501      0x18a build/py/emitinlinethumb.o
+  .text.get_arg_i
+                 0x000000000002468b       0x9f build/py/emitinlinethumb.o
+  .text.emit_inline_thumb_op
+                 0x000000000002472a      0xf0a build/py/emitinlinethumb.o
+  .text.emit_inline_thumb_label
+                 0x0000000000025634       0x5c build/py/emitinlinethumb.o
+  .text.emit_inline_thumb_count_params
+                 0x0000000000025690       0xaf build/py/emitinlinethumb.o
+  .text.emit     0x000000000002573f       0x16 build/py/asmarm.o
+  .text.emit_al  0x0000000000025755        0xb build/py/asmarm.o
+  .text.asm_arm_end_pass
+                 0x0000000000025760        0x1 build/py/asmarm.o
+                 0x0000000000025760                asm_arm_end_pass
+  .text.asm_arm_entry
+                 0x0000000000025761       0x71 build/py/asmarm.o
+                 0x0000000000025761                asm_arm_entry
+  .text.asm_arm_exit
+                 0x00000000000257d2       0x2d build/py/asmarm.o
+                 0x00000000000257d2                asm_arm_exit
+  .text.asm_arm_mov_reg_reg
+                 0x00000000000257ff       0x10 build/py/asmarm.o
+                 0x00000000000257ff                asm_arm_mov_reg_reg
+  .text.asm_arm_mov_reg_i32
+                 0x000000000002580f       0x3c build/py/asmarm.o
+                 0x000000000002580f                asm_arm_mov_reg_i32
+  .text.asm_arm_mov_reg_i32_optimised
+                 0x000000000002584b       0x33 build/py/asmarm.o
+                 0x000000000002584b                asm_arm_mov_reg_i32_optimised
+  .text.asm_arm_mov_local_reg
+                 0x000000000002587e       0x13 build/py/asmarm.o
+                 0x000000000002587e                asm_arm_mov_local_reg
+  .text.asm_arm_mov_reg_local
+                 0x0000000000025891       0x13 build/py/asmarm.o
+                 0x0000000000025891                asm_arm_mov_reg_local
+  .text.asm_arm_cmp_reg_i8
+                 0x00000000000258a4       0x13 build/py/asmarm.o
+                 0x00000000000258a4                asm_arm_cmp_reg_i8
+  .text.asm_arm_cmp_reg_reg
+                 0x00000000000258b7       0x10 build/py/asmarm.o
+                 0x00000000000258b7                asm_arm_cmp_reg_reg
+  .text.asm_arm_setcc_reg
+                 0x00000000000258c7       0x39 build/py/asmarm.o
+                 0x00000000000258c7                asm_arm_setcc_reg
+  .text.asm_arm_add_reg_reg_reg
+                 0x0000000000025900       0x15 build/py/asmarm.o
+                 0x0000000000025900                asm_arm_add_reg_reg_reg
+  .text.asm_arm_sub_reg_reg_reg
+                 0x0000000000025915       0x15 build/py/asmarm.o
+                 0x0000000000025915                asm_arm_sub_reg_reg_reg
+  .text.asm_arm_mul_reg_reg_reg
+                 0x000000000002592a       0x39 build/py/asmarm.o
+                 0x000000000002592a                asm_arm_mul_reg_reg_reg
+  .text.asm_arm_and_reg_reg_reg
+                 0x0000000000025963        0xf build/py/asmarm.o
+                 0x0000000000025963                asm_arm_and_reg_reg_reg
+  .text.asm_arm_eor_reg_reg_reg
+                 0x0000000000025972       0x15 build/py/asmarm.o
+                 0x0000000000025972                asm_arm_eor_reg_reg_reg
+  .text.asm_arm_orr_reg_reg_reg
+                 0x0000000000025987       0x15 build/py/asmarm.o
+                 0x0000000000025987                asm_arm_orr_reg_reg_reg
+  .text.asm_arm_mov_reg_local_addr
+                 0x000000000002599c       0x16 build/py/asmarm.o
+                 0x000000000002599c                asm_arm_mov_reg_local_addr
+  .text.asm_arm_mov_reg_pcrel
+                 0x00000000000259b2       0x7b build/py/asmarm.o
+                 0x00000000000259b2                asm_arm_mov_reg_pcrel
+  .text.asm_arm_lsl_reg_reg
+                 0x0000000000025a2d       0x15 build/py/asmarm.o
+                 0x0000000000025a2d                asm_arm_lsl_reg_reg
+  .text.asm_arm_asr_reg_reg
+                 0x0000000000025a42       0x15 build/py/asmarm.o
+                 0x0000000000025a42                asm_arm_asr_reg_reg
+  .text.asm_arm_ldr_reg_reg
+                 0x0000000000025a57       0x15 build/py/asmarm.o
+                 0x0000000000025a57                asm_arm_ldr_reg_reg
+  .text.asm_arm_ldrh_reg_reg
+                 0x0000000000025a6c       0x13 build/py/asmarm.o
+                 0x0000000000025a6c                asm_arm_ldrh_reg_reg
+  .text.asm_arm_ldrb_reg_reg
+                 0x0000000000025a7f       0x13 build/py/asmarm.o
+                 0x0000000000025a7f                asm_arm_ldrb_reg_reg
+  .text.asm_arm_str_reg_reg
+                 0x0000000000025a92       0x15 build/py/asmarm.o
+                 0x0000000000025a92                asm_arm_str_reg_reg
+  .text.asm_arm_strh_reg_reg
+                 0x0000000000025aa7       0x13 build/py/asmarm.o
+                 0x0000000000025aa7                asm_arm_strh_reg_reg
+  .text.asm_arm_strb_reg_reg
+                 0x0000000000025aba       0x13 build/py/asmarm.o
+                 0x0000000000025aba                asm_arm_strb_reg_reg
+  .text.asm_arm_str_reg_reg_reg
+                 0x0000000000025acd       0x15 build/py/asmarm.o
+                 0x0000000000025acd                asm_arm_str_reg_reg_reg
+  .text.asm_arm_strh_reg_reg_reg
+                 0x0000000000025ae2       0x34 build/py/asmarm.o
+                 0x0000000000025ae2                asm_arm_strh_reg_reg_reg
+  .text.asm_arm_strb_reg_reg_reg
+                 0x0000000000025b16       0x15 build/py/asmarm.o
+                 0x0000000000025b16                asm_arm_strb_reg_reg_reg
+  .text.asm_arm_bcc_label
+                 0x0000000000025b2b       0x77 build/py/asmarm.o
+                 0x0000000000025b2b                asm_arm_bcc_label
+  .text.asm_arm_b_label
+                 0x0000000000025ba2        0xc build/py/asmarm.o
+                 0x0000000000025ba2                asm_arm_b_label
+  .text.asm_arm_bl_ind
+                 0x0000000000025bae       0x54 build/py/asmarm.o
+                 0x0000000000025bae                asm_arm_bl_ind
+  .text.asm_arm_bx_reg
+                 0x0000000000025c02        0xb build/py/asmarm.o
+                 0x0000000000025c02                asm_arm_bx_reg
+  .text.emit_native_last_emit_was_return_value
+                 0x0000000000025c0d        0x7 build/py/emitnarm.o
+  .text.emit_native_set_source_line
+                 0x0000000000025c14        0x1 build/py/emitnarm.o
+  .text.emit_native_arm_new
+                 0x0000000000025c15       0x7a build/py/emitnarm.o
+                 0x0000000000025c15                emit_native_arm_new
+  .text.emit_native_arm_free
+                 0x0000000000025c8f       0x42 build/py/emitnarm.o
+                 0x0000000000025c8f                emit_native_arm_free
+  .text.ensure_extra_stack
+                 0x0000000000025cd1       0x3a build/py/emitnarm.o
+  .text.emit_native_push_exc_stack
+                 0x0000000000025d0b       0xaa build/py/emitnarm.o
+  .text.adjust_stack
+                 0x0000000000025db5       0x71 build/py/emitnarm.o
+  .text.emit_native_end_except_handler
+                 0x0000000000025e26        0x9 build/py/emitnarm.o
+  .text.emit_pre_pop_discard
+                 0x0000000000025e2f       0x10 build/py/emitnarm.o
+  .text.emit_native_pop_top
+                 0x0000000000025e3f        0x5 build/py/emitnarm.o
+  .text.emit_native_for_iter_end
+                 0x0000000000025e44       0x13 build/py/emitnarm.o
+  .text.emit_post_push_reg
+                 0x0000000000025e57       0x40 build/py/emitnarm.o
+  .text.emit_post_push_imm
+                 0x0000000000025e97       0x42 build/py/emitnarm.o
+  .text.emit_native_load_null
+                 0x0000000000025ed9       0x10 build/py/emitnarm.o
+  .text.emit_native_load_const_small_int
+                 0x0000000000025ee9       0x14 build/py/emitnarm.o
+  .text.emit_native_adjust_stack_size
+                 0x0000000000025efd       0x5e build/py/emitnarm.o
+  .text.emit_native_leave_exc_stack
+                 0x0000000000025f5b       0x8e build/py/emitnarm.o
+  .text.emit_native_start_except_handler
+                 0x0000000000025fe9       0x2e build/py/emitnarm.o
+  .text.emit_native_mov_reg_state
+                 0x0000000000026017       0x2d build/py/emitnarm.o
+  .text.emit_native_mov_state_reg
+                 0x0000000000026044       0x33 build/py/emitnarm.o
+  .text.need_reg_single
+                 0x0000000000026077       0x61 build/py/emitnarm.o
+  .text.emit_native_load_fast
+                 0x00000000000260d8       0xa0 build/py/emitnarm.o
+  .text.need_reg_all
+                 0x0000000000026178       0x44 build/py/emitnarm.o
+  .text.emit_call_with_imm_arg
+                 0x00000000000261bc       0x49 build/py/emitnarm.o
+  .text.emit_call
+                 0x0000000000026205       0x2b build/py/emitnarm.o
+  .text.emit_native_load_build_class
+                 0x0000000000026230       0x22 build/py/emitnarm.o
+  .text.emit_call_with_qstr_arg
+                 0x0000000000026252       0x77 build/py/emitnarm.o
+  .text.emit_native_delete_global
+                 0x00000000000262c9       0x17 build/py/emitnarm.o
+  .text.emit_native_load_global
+                 0x00000000000262e0       0x5d build/py/emitnarm.o
+  .text.emit_native_mov_reg_state_addr
+                 0x000000000002633d       0x48 build/py/emitnarm.o
+  .text.emit_get_stack_pointer_to_reg_for_push
+                 0x0000000000026385       0x73 build/py/emitnarm.o
+  .text.emit_load_reg_with_ptr.constprop.25
+                 0x00000000000263f8       0x76 build/py/emitnarm.o
+  .text.emit_native_load_const_obj
+                 0x000000000002646e       0x51 build/py/emitnarm.o
+  .text.emit_native_load_const_tok
+                 0x00000000000264bf       0x38 build/py/emitnarm.o
+  .text.emit_fold_stack_top.constprop.28
+                 0x00000000000264f7       0x57 build/py/emitnarm.o
+  .text.emit_native_load_const_str
+                 0x000000000002654e       0x70 build/py/emitnarm.o
+  .text.emit_call_with_2_imm_args.constprop.30
+                 0x00000000000265be       0x5c build/py/emitnarm.o
+  .text.peek_vtype
+                 0x000000000002661a       0x1d build/py/emitnarm.o
+  .text.load_reg_stack_imm
+                 0x0000000000026637       0x8e build/py/emitnarm.o
+  .text.need_stack_settled
+                 0x00000000000266c5       0x98 build/py/emitnarm.o
+  .text.emit_native_jump
+                 0x000000000002675d       0x2f build/py/emitnarm.o
+  .text.emit_native_pop_except_jump
+                 0x000000000002678c       0x4f build/py/emitnarm.o
+  .text.emit_native_unwind_jump
+                 0x00000000000267db      0x129 build/py/emitnarm.o
+  .text.emit_access_stack
+                 0x0000000000026904       0x9a build/py/emitnarm.o
+  .text.emit_pre_pop_reg
+                 0x000000000002699e       0x27 build/py/emitnarm.o
+  .text.emit_pre_pop_reg_reg
+                 0x00000000000269c5       0x2f build/py/emitnarm.o
+  .text.emit_native_rot_two
+                 0x00000000000269f4       0x6a build/py/emitnarm.o
+  .text.emit_native_dup_top_two
+                 0x0000000000026a5e       0x8e build/py/emitnarm.o
+  .text.emit_native_make_function
+                 0x0000000000026aec      0x11d build/py/emitnarm.o
+  .text.emit_pre_pop_reg_reg_reg
+                 0x0000000000026c09       0x4c build/py/emitnarm.o
+  .text.emit_native_rot_three
+                 0x0000000000026c55       0x93 build/py/emitnarm.o
+  .text.emit_native_store_map
+                 0x0000000000026ce8       0xdf build/py/emitnarm.o
+  .text.emit_native_label_assign
+                 0x0000000000026dc7       0xb2 build/py/emitnarm.o
+  .text.emit_native_end_finally
+                 0x0000000000026e79      0x10e build/py/emitnarm.o
+  .text.emit_native_end_pass
+                 0x0000000000026f87      0x427 build/py/emitnarm.o
+  .text.emit_native_global_exc_entry
+                 0x00000000000273ae      0x31b build/py/emitnarm.o
+  .text.emit_native_start_pass
+                 0x00000000000276c9      0x6f4 build/py/emitnarm.o
+  .text.emit_native_unpack_ex
+                 0x0000000000027dbd       0x9f build/py/emitnarm.o
+  .text.emit_native_unpack_sequence
+                 0x0000000000027e5c       0x8f build/py/emitnarm.o
+  .text.emit_native_get_iter
+                 0x0000000000027eeb       0xbb build/py/emitnarm.o
+  .text.emit_native_raise_varargs
+                 0x0000000000027fa6       0x95 build/py/emitnarm.o
+  .text.emit_native_unary_op
+                 0x000000000002803b       0xa0 build/py/emitnarm.o
+  .text.emit_native_jump_helper
+                 0x00000000000280db      0x139 build/py/emitnarm.o
+  .text.emit_native_jump_if_or_pop
+                 0x0000000000028214        0xb build/py/emitnarm.o
+  .text.emit_native_pop_jump_if
+                 0x000000000002821f        0xe build/py/emitnarm.o
+  .text.emit_native_store_fast
+                 0x000000000002822d       0xf4 build/py/emitnarm.o
+  .text.emit_native_delete_local
+                 0x0000000000028321       0x37 build/py/emitnarm.o
+  .text.emit_native_attr
+                 0x0000000000028358      0x12b build/py/emitnarm.o
+  .text.emit_native_store_global
+                 0x0000000000028483       0xdb build/py/emitnarm.o
+  .text.emit_pre_pop_reg_flexible
+                 0x000000000002855e       0x63 build/py/emitnarm.o
+  .text.emit_native_dup_top
+                 0x00000000000285c1       0x77 build/py/emitnarm.o
+  .text.emit_native_store_local
+                 0x0000000000028638       0xcf build/py/emitnarm.o
+  .text.emit_native_load_local
+                 0x0000000000028707       0xa3 build/py/emitnarm.o
+  .text.emit_native_binary_op
+                 0x00000000000287aa      0x35c build/py/emitnarm.o
+  .text.emit_native_store_comp
+                 0x0000000000028b06      0x15a build/py/emitnarm.o
+  .text.emit_native_import
+                 0x0000000000028c60      0x148 build/py/emitnarm.o
+  .text.emit_get_stack_pointer_to_reg_for_pop
+                 0x0000000000028da8      0x133 build/py/emitnarm.o
+  .text.emit_native_yield
+                 0x0000000000028edb      0x250 build/py/emitnarm.o
+  .text.emit_native_call_method
+                 0x000000000002912b       0x74 build/py/emitnarm.o
+  .text.emit_native_call_function
+                 0x000000000002919f      0x1bd build/py/emitnarm.o
+  .text.emit_native_make_closure
+                 0x000000000002935c       0x9b build/py/emitnarm.o
+  .text.emit_native_build
+                 0x00000000000293f7      0x1ac build/py/emitnarm.o
+  .text.emit_native_for_iter
+                 0x00000000000295a3       0x68 build/py/emitnarm.o
+  .text.emit_native_return_value
+                 0x000000000002960b      0x1ae build/py/emitnarm.o
+  .text.emit_native_with_cleanup
+                 0x00000000000297b9      0x1f8 build/py/emitnarm.o
+  .text.emit_native_setup_block
+                 0x00000000000299b1      0x191 build/py/emitnarm.o
+  .text.emit_native_load_method
+                 0x0000000000029b42       0xc2 build/py/emitnarm.o
+  .text.emit_native_subscr
+                 0x0000000000029c04      0x7b7 build/py/emitnarm.o
+  .text.get_label_dest
+                 0x000000000002a3bb       0x34 build/py/asmxtensa.o
+  .text.asm_xtensa_end_pass
+                 0x000000000002a3ef        0xe build/py/asmxtensa.o
+                 0x000000000002a3ef                asm_xtensa_end_pass
+  .text.asm_xtensa_op16
+                 0x000000000002a3fd       0x19 build/py/asmxtensa.o
+                 0x000000000002a3fd                asm_xtensa_op16
+  .text.asm_xtensa_exit_win
+                 0x000000000002a416       0x1c build/py/asmxtensa.o
+                 0x000000000002a416                asm_xtensa_exit_win
+  .text.asm_xtensa_op24
+                 0x000000000002a432       0x1f build/py/asmxtensa.o
+                 0x000000000002a432                asm_xtensa_op24
+  .text.asm_xtensa_op_movi
+                 0x000000000002a451       0x22 build/py/asmxtensa.o
+  .text.asm_xtensa_entry
+                 0x000000000002a473       0xce build/py/asmxtensa.o
+                 0x000000000002a473                asm_xtensa_entry
+  .text.asm_xtensa_entry_win
+                 0x000000000002a541       0x82 build/py/asmxtensa.o
+                 0x000000000002a541                asm_xtensa_entry_win
+  .text.asm_xtensa_exit
+                 0x000000000002a5c3       0x94 build/py/asmxtensa.o
+                 0x000000000002a5c3                asm_xtensa_exit
+  .text.asm_xtensa_j_label
+                 0x000000000002a657       0x24 build/py/asmxtensa.o
+                 0x000000000002a657                asm_xtensa_j_label
+  .text.asm_xtensa_bccz_reg_label
+                 0x000000000002a67b       0x6d build/py/asmxtensa.o
+                 0x000000000002a67b                asm_xtensa_bccz_reg_label
+  .text.asm_xtensa_bcc_reg_reg_label
+                 0x000000000002a6e8       0x75 build/py/asmxtensa.o
+                 0x000000000002a6e8                asm_xtensa_bcc_reg_reg_label
+  .text.asm_xtensa_setcc_reg_reg_reg
+                 0x000000000002a75d       0x6b build/py/asmxtensa.o
+                 0x000000000002a75d                asm_xtensa_setcc_reg_reg_reg
+  .text.asm_xtensa_mov_reg_i32
+                 0x000000000002a7c8       0x57 build/py/asmxtensa.o
+                 0x000000000002a7c8                asm_xtensa_mov_reg_i32
+  .text.asm_xtensa_mov_reg_i32_optimised
+                 0x000000000002a81f       0x1a build/py/asmxtensa.o
+                 0x000000000002a81f                asm_xtensa_mov_reg_i32_optimised
+  .text.asm_xtensa_mov_local_reg
+                 0x000000000002a839       0x19 build/py/asmxtensa.o
+                 0x000000000002a839                asm_xtensa_mov_local_reg
+  .text.asm_xtensa_mov_reg_local
+                 0x000000000002a852       0x19 build/py/asmxtensa.o
+                 0x000000000002a852                asm_xtensa_mov_reg_local
+  .text.asm_xtensa_mov_reg_local_addr
+                 0x000000000002a86b       0x53 build/py/asmxtensa.o
+                 0x000000000002a86b                asm_xtensa_mov_reg_local_addr
+  .text.asm_xtensa_mov_reg_pcrel
+                 0x000000000002a8be       0x6a build/py/asmxtensa.o
+                 0x000000000002a8be                asm_xtensa_mov_reg_pcrel
+  .text.asm_xtensa_call_ind
+                 0x000000000002a928       0x3d build/py/asmxtensa.o
+                 0x000000000002a928                asm_xtensa_call_ind
+  .text.asm_xtensa_call_ind_win
+                 0x000000000002a965       0x3d build/py/asmxtensa.o
+                 0x000000000002a965                asm_xtensa_call_ind_win
+  .text.emit_native_last_emit_was_return_value
+                 0x000000000002a9a2        0x7 build/py/emitnxtensa.o
+  .text.emit_native_set_source_line
+                 0x000000000002a9a9        0x1 build/py/emitnxtensa.o
+  .text.emit_native_xtensa_new
+                 0x000000000002a9aa       0x7a build/py/emitnxtensa.o
+                 0x000000000002a9aa                emit_native_xtensa_new
+  .text.emit_native_xtensa_free
+                 0x000000000002aa24       0x42 build/py/emitnxtensa.o
+                 0x000000000002aa24                emit_native_xtensa_free
+  .text.ensure_extra_stack
+                 0x000000000002aa66       0x3a build/py/emitnxtensa.o
+  .text.emit_native_push_exc_stack
+                 0x000000000002aaa0       0xb0 build/py/emitnxtensa.o
+  .text.asm_xtensa_op_l32i_n
+                 0x000000000002ab50       0x18 build/py/emitnxtensa.o
+  .text.asm_xtensa_op_add_n
+                 0x000000000002ab68       0x18 build/py/emitnxtensa.o
+  .text.adjust_stack
+                 0x000000000002ab80       0x71 build/py/emitnxtensa.o
+  .text.emit_native_end_except_handler
+                 0x000000000002abf1        0x9 build/py/emitnxtensa.o
+  .text.emit_pre_pop_discard
+                 0x000000000002abfa       0x10 build/py/emitnxtensa.o
+  .text.emit_native_pop_top
+                 0x000000000002ac0a        0x5 build/py/emitnxtensa.o
+  .text.emit_native_for_iter_end
+                 0x000000000002ac0f       0x13 build/py/emitnxtensa.o
+  .text.emit_post_push_reg
+                 0x000000000002ac22       0x40 build/py/emitnxtensa.o
+  .text.emit_post_push_imm
+                 0x000000000002ac62       0x42 build/py/emitnxtensa.o
+  .text.emit_native_load_null
+                 0x000000000002aca4       0x10 build/py/emitnxtensa.o
+  .text.emit_native_load_const_small_int
+                 0x000000000002acb4       0x14 build/py/emitnxtensa.o
+  .text.emit_native_adjust_stack_size
+                 0x000000000002acc8       0x5e build/py/emitnxtensa.o
+  .text.emit_native_leave_exc_stack
+                 0x000000000002ad26       0x93 build/py/emitnxtensa.o
+  .text.emit_native_start_except_handler
+                 0x000000000002adb9       0x34 build/py/emitnxtensa.o
+  .text.emit_native_mov_reg_state
+                 0x000000000002aded       0x2b build/py/emitnxtensa.o
+  .text.emit_native_mov_reg_state_addr
+                 0x000000000002ae18       0x4b build/py/emitnxtensa.o
+  .text.emit_load_reg_with_ptr.constprop.25
+                 0x000000000002ae63       0x76 build/py/emitnxtensa.o
+  .text.emit_fold_stack_top.constprop.28
+                 0x000000000002aed9       0x5a build/py/emitnxtensa.o
+  .text.emit_native_mov_state_reg
+                 0x000000000002af33       0x34 build/py/emitnxtensa.o
+  .text.need_reg_single
+                 0x000000000002af67       0x61 build/py/emitnxtensa.o
+  .text.emit_native_load_const_obj
+                 0x000000000002afc8       0x57 build/py/emitnxtensa.o
+  .text.emit_native_load_const_tok
+                 0x000000000002b01f       0x38 build/py/emitnxtensa.o
+  .text.emit_native_load_fast
+                 0x000000000002b057       0xa9 build/py/emitnxtensa.o
+  .text.emit_native_load_const_str
+                 0x000000000002b100       0x79 build/py/emitnxtensa.o
+  .text.need_reg_all
+                 0x000000000002b179       0x44 build/py/emitnxtensa.o
+  .text.emit_call_with_imm_arg
+                 0x000000000002b1bd       0x44 build/py/emitnxtensa.o
+  .text.emit_call
+                 0x000000000002b201       0x26 build/py/emitnxtensa.o
+  .text.emit_native_load_build_class
+                 0x000000000002b227       0x25 build/py/emitnxtensa.o
+  .text.emit_get_stack_pointer_to_reg_for_push
+                 0x000000000002b24c       0x73 build/py/emitnxtensa.o
+  .text.emit_call_with_qstr_arg
+                 0x000000000002b2bf       0x72 build/py/emitnxtensa.o
+  .text.emit_native_delete_global
+                 0x000000000002b331       0x1a build/py/emitnxtensa.o
+  .text.emit_native_load_global
+                 0x000000000002b34b       0x63 build/py/emitnxtensa.o
+  .text.emit_call_with_2_imm_args.constprop.36
+                 0x000000000002b3ae       0x5a build/py/emitnxtensa.o
+  .text.peek_vtype
+                 0x000000000002b408       0x1d build/py/emitnxtensa.o
+  .text.load_reg_stack_imm
+                 0x000000000002b425       0x89 build/py/emitnxtensa.o
+  .text.need_stack_settled
+                 0x000000000002b4ae       0x9e build/py/emitnxtensa.o
+  .text.emit_native_jump
+                 0x000000000002b54c       0x2f build/py/emitnxtensa.o
+  .text.emit_native_pop_except_jump
+                 0x000000000002b57b       0x55 build/py/emitnxtensa.o
+  .text.emit_native_unwind_jump
+                 0x000000000002b5d0      0x13a build/py/emitnxtensa.o
+  .text.emit_access_stack
+                 0x000000000002b70a       0xa8 build/py/emitnxtensa.o
+  .text.emit_pre_pop_reg
+                 0x000000000002b7b2       0x27 build/py/emitnxtensa.o
+  .text.emit_pre_pop_reg_reg
+                 0x000000000002b7d9       0x2f build/py/emitnxtensa.o
+  .text.emit_native_rot_two
+                 0x000000000002b808       0x70 build/py/emitnxtensa.o
+  .text.emit_native_dup_top_two
+                 0x000000000002b878       0x97 build/py/emitnxtensa.o
+  .text.emit_native_make_function
+                 0x000000000002b90f      0x11b build/py/emitnxtensa.o
+  .text.emit_pre_pop_reg_reg_reg
+                 0x000000000002ba2a       0x4c build/py/emitnxtensa.o
+  .text.emit_native_rot_three
+                 0x000000000002ba76       0x99 build/py/emitnxtensa.o
+  .text.emit_native_store_map
+                 0x000000000002bb0f       0xe2 build/py/emitnxtensa.o
+  .text.emit_native_label_assign
+                 0x000000000002bbf1       0xb8 build/py/emitnxtensa.o
+  .text.emit_native_end_finally
+                 0x000000000002bca9      0x10c build/py/emitnxtensa.o
+  .text.emit_native_end_pass
+                 0x000000000002bdb5      0x422 build/py/emitnxtensa.o
+  .text.emit_native_global_exc_entry
+                 0x000000000002c1d7      0x309 build/py/emitnxtensa.o
+  .text.emit_native_start_pass
+                 0x000000000002c4e0      0x6d6 build/py/emitnxtensa.o
+  .text.emit_native_unpack_ex
+                 0x000000000002cbb6       0xa2 build/py/emitnxtensa.o
+  .text.emit_native_unpack_sequence
+                 0x000000000002cc58       0x92 build/py/emitnxtensa.o
+  .text.emit_native_get_iter
+                 0x000000000002ccea       0xc1 build/py/emitnxtensa.o
+  .text.emit_native_raise_varargs
+                 0x000000000002cdab       0x98 build/py/emitnxtensa.o
+  .text.emit_native_unary_op
+                 0x000000000002ce43       0xa6 build/py/emitnxtensa.o
+  .text.emit_native_jump_helper
+                 0x000000000002cee9      0x120 build/py/emitnxtensa.o
+  .text.emit_native_jump_if_or_pop
+                 0x000000000002d009        0xb build/py/emitnxtensa.o
+  .text.emit_native_pop_jump_if
+                 0x000000000002d014        0xe build/py/emitnxtensa.o
+  .text.emit_native_store_fast
+                 0x000000000002d022       0xfa build/py/emitnxtensa.o
+  .text.emit_native_delete_local
+                 0x000000000002d11c       0x37 build/py/emitnxtensa.o
+  .text.emit_native_attr
+                 0x000000000002d153      0x12f build/py/emitnxtensa.o
+  .text.emit_native_store_global
+                 0x000000000002d282       0xdf build/py/emitnxtensa.o
+  .text.emit_pre_pop_reg_flexible
+                 0x000000000002d361       0x63 build/py/emitnxtensa.o
+  .text.emit_native_dup_top
+                 0x000000000002d3c4       0x77 build/py/emitnxtensa.o
+  .text.emit_native_store_local
+                 0x000000000002d43b       0xdd build/py/emitnxtensa.o
+  .text.emit_native_load_local
+                 0x000000000002d518       0xac build/py/emitnxtensa.o
+  .text.emit_native_binary_op
+                 0x000000000002d5c4      0x363 build/py/emitnxtensa.o
+  .text.emit_native_store_comp
+                 0x000000000002d927      0x15d build/py/emitnxtensa.o
+  .text.emit_native_import
+                 0x000000000002da84      0x154 build/py/emitnxtensa.o
+  .text.emit_get_stack_pointer_to_reg_for_pop
+                 0x000000000002dbd8      0x139 build/py/emitnxtensa.o
+  .text.emit_native_yield
+                 0x000000000002dd11      0x263 build/py/emitnxtensa.o
+  .text.emit_native_call_method
+                 0x000000000002df74       0x77 build/py/emitnxtensa.o
+  .text.emit_native_call_function
+                 0x000000000002dfeb      0x1c9 build/py/emitnxtensa.o
+  .text.emit_native_make_closure
+                 0x000000000002e1b4       0x99 build/py/emitnxtensa.o
+  .text.emit_native_build
+                 0x000000000002e24d      0x1b5 build/py/emitnxtensa.o
+  .text.emit_native_for_iter
+                 0x000000000002e402       0x63 build/py/emitnxtensa.o
+  .text.emit_native_return_value
+                 0x000000000002e465      0x1c6 build/py/emitnxtensa.o
+  .text.emit_native_subscr
+                 0x000000000002e62b      0x8f2 build/py/emitnxtensa.o
+  .text.emit_native_with_cleanup
+                 0x000000000002ef1d      0x1f0 build/py/emitnxtensa.o
+  .text.emit_native_setup_block
+                 0x000000000002f10d      0x19a build/py/emitnxtensa.o
+  .text.emit_native_load_method
+                 0x000000000002f2a7       0xc8 build/py/emitnxtensa.o
+  .text.emit_inline_xtensa_new
+                 0x000000000002f36f       0x49 build/py/emitinlinextensa.o
+                 0x000000000002f36f                emit_inline_xtensa_new
+  .text.emit_inline_xtensa_free
+                 0x000000000002f3b8       0x20 build/py/emitinlinextensa.o
+                 0x000000000002f3b8                emit_inline_xtensa_free
+  .text.get_arg_reg
+                 0x000000000002f3d8       0xb3 build/py/emitinlinextensa.o
+  .text.emit_inline_xtensa_end_pass
+                 0x000000000002f48b       0x12 build/py/emitinlinextensa.o
+  .text.emit_inline_xtensa_start_pass
+                 0x000000000002f49d       0x46 build/py/emitinlinextensa.o
+  .text.get_arg_label
+                 0x000000000002f4e3       0x86 build/py/emitinlinextensa.o
+  .text.get_arg_i
+                 0x000000000002f569       0xac build/py/emitinlinextensa.o
+  .text.emit_inline_xtensa_op
+                 0x000000000002f615      0x347 build/py/emitinlinextensa.o
+  .text.emit_inline_xtensa_label
+                 0x000000000002f95c       0x5c build/py/emitinlinextensa.o
+  .text.emit_inline_xtensa_count_params
+                 0x000000000002f9b8       0xaf build/py/emitinlinextensa.o
+  .text.emit_native_last_emit_was_return_value
+                 0x000000000002fa67        0x7 build/py/emitnxtensawin.o
+  .text.emit_native_set_source_line
+                 0x000000000002fa6e        0x1 build/py/emitnxtensawin.o
+  .text.emit_native_xtensawin_new
+                 0x000000000002fa6f       0x7a build/py/emitnxtensawin.o
+                 0x000000000002fa6f                emit_native_xtensawin_new
+  .text.emit_native_xtensawin_free
+                 0x000000000002fae9       0x42 build/py/emitnxtensawin.o
+                 0x000000000002fae9                emit_native_xtensawin_free
+  .text.ensure_extra_stack
+                 0x000000000002fb2b       0x3a build/py/emitnxtensawin.o
+  .text.emit_native_push_exc_stack
+                 0x000000000002fb65       0xb0 build/py/emitnxtensawin.o
+  .text.asm_xtensa_op_l32i_n
+                 0x000000000002fc15       0x18 build/py/emitnxtensawin.o
+  .text.asm_xtensa_op_add_n
+                 0x000000000002fc2d       0x18 build/py/emitnxtensawin.o
+  .text.adjust_stack
+                 0x000000000002fc45       0x71 build/py/emitnxtensawin.o
+  .text.emit_native_end_except_handler
+                 0x000000000002fcb6        0x9 build/py/emitnxtensawin.o
+  .text.emit_pre_pop_discard
+                 0x000000000002fcbf       0x10 build/py/emitnxtensawin.o
+  .text.emit_native_pop_top
+                 0x000000000002fccf        0x5 build/py/emitnxtensawin.o
+  .text.emit_native_for_iter_end
+                 0x000000000002fcd4       0x13 build/py/emitnxtensawin.o
+  .text.emit_post_push_reg
+                 0x000000000002fce7       0x40 build/py/emitnxtensawin.o
+  .text.emit_post_push_imm
+                 0x000000000002fd27       0x42 build/py/emitnxtensawin.o
+  .text.emit_native_load_null
+                 0x000000000002fd69       0x10 build/py/emitnxtensawin.o
+  .text.emit_native_load_const_small_int
+                 0x000000000002fd79       0x14 build/py/emitnxtensawin.o
+  .text.emit_native_adjust_stack_size
+                 0x000000000002fd8d       0x5e build/py/emitnxtensawin.o
+  .text.emit_native_leave_exc_stack
+                 0x000000000002fdeb       0x93 build/py/emitnxtensawin.o
+  .text.emit_native_start_except_handler
+                 0x000000000002fe7e       0x34 build/py/emitnxtensawin.o
+  .text.emit_native_mov_reg_state
+                 0x000000000002feb2       0x2a build/py/emitnxtensawin.o
+  .text.emit_native_mov_reg_state_addr
+                 0x000000000002fedc       0x4a build/py/emitnxtensawin.o
+  .text.emit_load_reg_with_ptr.constprop.25
+                 0x000000000002ff26       0x76 build/py/emitnxtensawin.o
+  .text.emit_fold_stack_top.constprop.28
+                 0x000000000002ff9c       0x5a build/py/emitnxtensawin.o
+  .text.emit_native_mov_state_reg
+                 0x000000000002fff6       0x33 build/py/emitnxtensawin.o
+  .text.need_reg_single
+                 0x0000000000030029       0x61 build/py/emitnxtensawin.o
+  .text.emit_native_load_const_obj
+                 0x000000000003008a       0x57 build/py/emitnxtensawin.o
+  .text.emit_native_load_const_tok
+                 0x00000000000300e1       0x38 build/py/emitnxtensawin.o
+  .text.emit_native_load_fast
+                 0x0000000000030119       0xa9 build/py/emitnxtensawin.o
+  .text.emit_native_load_const_str
+                 0x00000000000301c2       0x79 build/py/emitnxtensawin.o
+  .text.need_reg_all
+                 0x000000000003023b       0x44 build/py/emitnxtensawin.o
+  .text.emit_call_with_imm_arg
+                 0x000000000003027f       0x44 build/py/emitnxtensawin.o
+  .text.emit_call
+                 0x00000000000302c3       0x26 build/py/emitnxtensawin.o
+  .text.emit_native_load_build_class
+                 0x00000000000302e9       0x25 build/py/emitnxtensawin.o
+  .text.emit_get_stack_pointer_to_reg_for_push
+                 0x000000000003030e       0x73 build/py/emitnxtensawin.o
+  .text.emit_call_with_qstr_arg
+                 0x0000000000030381       0x72 build/py/emitnxtensawin.o
+  .text.emit_native_delete_global
+                 0x00000000000303f3       0x1a build/py/emitnxtensawin.o
+  .text.emit_native_load_global
+                 0x000000000003040d       0x63 build/py/emitnxtensawin.o
+  .text.emit_call_with_2_imm_args.constprop.36
+                 0x0000000000030470       0x5a build/py/emitnxtensawin.o
+  .text.peek_vtype
+                 0x00000000000304ca       0x1d build/py/emitnxtensawin.o
+  .text.load_reg_stack_imm
+                 0x00000000000304e7       0x89 build/py/emitnxtensawin.o
+  .text.need_stack_settled
+                 0x0000000000030570       0x9e build/py/emitnxtensawin.o
+  .text.emit_native_jump
+                 0x000000000003060e       0x2f build/py/emitnxtensawin.o
+  .text.emit_native_pop_except_jump
+                 0x000000000003063d       0x55 build/py/emitnxtensawin.o
+  .text.emit_native_unwind_jump
+                 0x0000000000030692      0x13a build/py/emitnxtensawin.o
+  .text.emit_access_stack
+                 0x00000000000307cc       0xa8 build/py/emitnxtensawin.o
+  .text.emit_pre_pop_reg
+                 0x0000000000030874       0x27 build/py/emitnxtensawin.o
+  .text.emit_pre_pop_reg_reg
+                 0x000000000003089b       0x2f build/py/emitnxtensawin.o
+  .text.emit_native_rot_two
+                 0x00000000000308ca       0x70 build/py/emitnxtensawin.o
+  .text.emit_native_dup_top_two
+                 0x000000000003093a       0x97 build/py/emitnxtensawin.o
+  .text.emit_native_make_function
+                 0x00000000000309d1      0x11b build/py/emitnxtensawin.o
+  .text.emit_pre_pop_reg_reg_reg
+                 0x0000000000030aec       0x4c build/py/emitnxtensawin.o
+  .text.emit_native_rot_three
+                 0x0000000000030b38       0x99 build/py/emitnxtensawin.o
+  .text.emit_native_store_map
+                 0x0000000000030bd1       0xe2 build/py/emitnxtensawin.o
+  .text.emit_native_label_assign
+                 0x0000000000030cb3       0xb8 build/py/emitnxtensawin.o
+  .text.emit_native_end_finally
+                 0x0000000000030d6b      0x10c build/py/emitnxtensawin.o
+  .text.emit_native_end_pass
+                 0x0000000000030e77      0x459 build/py/emitnxtensawin.o
+  .text.emit_native_global_exc_entry
+                 0x00000000000312d0      0x39c build/py/emitnxtensawin.o
+  .text.emit_native_start_pass
+                 0x000000000003166c      0x75d build/py/emitnxtensawin.o
+  .text.emit_native_unpack_ex
+                 0x0000000000031dc9       0xa2 build/py/emitnxtensawin.o
+  .text.emit_native_unpack_sequence
+                 0x0000000000031e6b       0x92 build/py/emitnxtensawin.o
+  .text.emit_native_get_iter
+                 0x0000000000031efd       0xc1 build/py/emitnxtensawin.o
+  .text.emit_native_raise_varargs
+                 0x0000000000031fbe       0x98 build/py/emitnxtensawin.o
+  .text.emit_native_unary_op
+                 0x0000000000032056       0xa6 build/py/emitnxtensawin.o
+  .text.emit_native_jump_helper
+                 0x00000000000320fc      0x120 build/py/emitnxtensawin.o
+  .text.emit_native_jump_if_or_pop
+                 0x000000000003221c        0xb build/py/emitnxtensawin.o
+  .text.emit_native_pop_jump_if
+                 0x0000000000032227        0xe build/py/emitnxtensawin.o
+  .text.emit_native_store_fast
+                 0x0000000000032235       0xfa build/py/emitnxtensawin.o
+  .text.emit_native_delete_local
+                 0x000000000003232f       0x37 build/py/emitnxtensawin.o
+  .text.emit_native_attr
+                 0x0000000000032366      0x12f build/py/emitnxtensawin.o
+  .text.emit_native_store_global
+                 0x0000000000032495       0xdf build/py/emitnxtensawin.o
+  .text.emit_pre_pop_reg_flexible
+                 0x0000000000032574       0x63 build/py/emitnxtensawin.o
+  .text.emit_native_dup_top
+                 0x00000000000325d7       0x77 build/py/emitnxtensawin.o
+  .text.emit_native_store_local
+                 0x000000000003264e       0xdd build/py/emitnxtensawin.o
+  .text.emit_native_load_local
+                 0x000000000003272b       0xac build/py/emitnxtensawin.o
+  .text.emit_native_binary_op
+                 0x00000000000327d7      0x363 build/py/emitnxtensawin.o
+  .text.emit_native_store_comp
+                 0x0000000000032b3a      0x15d build/py/emitnxtensawin.o
+  .text.emit_native_import
+                 0x0000000000032c97      0x154 build/py/emitnxtensawin.o
+  .text.emit_get_stack_pointer_to_reg_for_pop
+                 0x0000000000032deb      0x139 build/py/emitnxtensawin.o
+  .text.emit_native_yield
+                 0x0000000000032f24      0x263 build/py/emitnxtensawin.o
+  .text.emit_native_call_method
+                 0x0000000000033187       0x77 build/py/emitnxtensawin.o
+  .text.emit_native_call_function
+                 0x00000000000331fe      0x1c9 build/py/emitnxtensawin.o
+  .text.emit_native_make_closure
+                 0x00000000000333c7       0x99 build/py/emitnxtensawin.o
+  .text.emit_native_build
+                 0x0000000000033460      0x1b5 build/py/emitnxtensawin.o
+  .text.emit_native_for_iter
+                 0x0000000000033615       0x63 build/py/emitnxtensawin.o
+  .text.emit_native_return_value
+                 0x0000000000033678      0x1ea build/py/emitnxtensawin.o
+  .text.emit_native_subscr
+                 0x0000000000033862      0x8f3 build/py/emitnxtensawin.o
+  .text.emit_native_with_cleanup
+                 0x0000000000034155      0x1f0 build/py/emitnxtensawin.o
+  .text.emit_native_setup_block
+                 0x0000000000034345      0x19a build/py/emitnxtensawin.o
+  .text.emit_native_load_method
+                 0x00000000000344df       0xc8 build/py/emitnxtensawin.o
+  .text.mp_format_float
+                 0x00000000000345a7      0x57e build/py/formatfloat.o
+                 0x00000000000345a7                mp_format_float
+  .text.mp_parse_num_base
+                 0x0000000000034b25       0xa8 build/py/parsenumbase.o
+                 0x0000000000034b25                mp_parse_num_base
+  .text.mp_parse_num_integer
+                 0x0000000000034bcd      0x1f0 build/py/parsenum.o
+                 0x0000000000034bcd                mp_parse_num_integer
+  .text.mp_parse_num_decimal
+                 0x0000000000034dbd      0x388 build/py/parsenum.o
+                 0x0000000000034dbd                mp_parse_num_decimal
+  .text.mp_emit_glue_new_raw_code
+                 0x0000000000035145       0x1a build/py/emitglue.o
+                 0x0000000000035145                mp_emit_glue_new_raw_code
+  .text.mp_emit_glue_assign_bytecode
+                 0x000000000003515f       0x3c build/py/emitglue.o
+                 0x000000000003515f                mp_emit_glue_assign_bytecode
+  .text.mp_emit_glue_assign_native
+                 0x000000000003519b       0xac build/py/emitglue.o
+                 0x000000000003519b                mp_emit_glue_assign_native
+  .text.extract_prelude
+                 0x0000000000035247      0x12e build/py/persistentcode.o
+  .text.mp_print_bytes
+                 0x0000000000035375        0x9 build/py/persistentcode.o
+  .text.mp_print_uint
+                 0x000000000003537e       0x6f build/py/persistentcode.o
+  .text.mp_raw_code_has_native
+                 0x00000000000353ed       0x94 build/py/persistentcode.o
+  .text.fd_print_strn
+                 0x0000000000035481        0x5 build/py/persistentcode.o
+  .text.save_qstr
+                 0x0000000000035486      0x142 build/py/persistentcode.o
+  .text.save_prelude_qstrs
+                 0x00000000000355c8       0x2a build/py/persistentcode.o
+  .text.save_raw_code
+                 0x00000000000355f2      0x45a build/py/persistentcode.o
+  .text.mp_raw_code_save
+                 0x0000000000035a4c       0xb9 build/py/persistentcode.o
+                 0x0000000000035a4c                mp_raw_code_save
+  .text.mp_raw_code_save_file
+                 0x0000000000035b05       0x71 build/py/persistentcode.o
+                 0x0000000000035b05                mp_raw_code_save_file
+  .text.mp_init  0x0000000000035b76       0x75 build/py/runtime.o
+                 0x0000000000035b76                mp_init
+  .text.mp_deinit
+                 0x0000000000035beb        0x1 build/py/runtime.o
+                 0x0000000000035beb                mp_deinit
+  .text.mp_unary_op
+                 0x0000000000035bec      0x1e6 build/py/runtime.o
+                 0x0000000000035bec                mp_unary_op
+  .text.mp_call_function_n_kw
+                 0x0000000000035dd2       0x66 build/py/runtime.o
+                 0x0000000000035dd2                mp_call_function_n_kw
+  .text.mp_call_function_1
+                 0x0000000000035e38       0x1f build/py/runtime.o
+                 0x0000000000035e38                mp_call_function_1
+  .text.checked_fun_call
+                 0x0000000000035e57       0x6f build/py/runtime.o
+  .text.mp_call_method_n_kw
+                 0x0000000000035ec6       0x28 build/py/runtime.o
+                 0x0000000000035ec6                mp_call_method_n_kw
+  .text.mp_convert_member_lookup
+                 0x0000000000035eee       0xf9 build/py/runtime.o
+                 0x0000000000035eee                mp_convert_member_lookup
+  .text.mp_load_method_maybe
+                 0x0000000000035fe7       0xe2 build/py/runtime.o
+                 0x0000000000035fe7                mp_load_method_maybe
+  .text.mp_getiter
+                 0x00000000000360c9       0xf6 build/py/runtime.o
+                 0x00000000000360c9                mp_getiter
+  .text.mp_iternext_allow_raise
+                 0x00000000000361bf       0x9d build/py/runtime.o
+                 0x00000000000361bf                mp_iternext_allow_raise
+  .text.mp_iternext
+                 0x000000000003625c       0xee build/py/runtime.o
+                 0x000000000003625c                mp_iternext
+  .text.mp_raise_msg
+                 0x000000000003634a       0x1d build/py/runtime.o
+                 0x000000000003634a                mp_raise_msg
+  .text.m_malloc_fail
+                 0x0000000000036367       0x3f build/py/runtime.o
+                 0x0000000000036367                m_malloc_fail
+  .text.mp_raise_ValueError
+                 0x00000000000363a6       0x13 build/py/runtime.o
+                 0x00000000000363a6                mp_raise_ValueError
+  .text.mp_binary_op
+                 0x00000000000363b9      0x498 build/py/runtime.o
+                 0x00000000000363b9                mp_binary_op
+  .text.mp_raise_TypeError
+                 0x0000000000036851       0x13 build/py/runtime.o
+                 0x0000000000036851                mp_raise_TypeError
+  .text.mp_raise_OSError
+                 0x0000000000036864       0x22 build/py/runtime.o
+                 0x0000000000036864                mp_raise_OSError
+  .text.mp_raise_NotImplementedError
+                 0x0000000000036886       0x13 build/py/runtime.o
+                 0x0000000000036886                mp_raise_NotImplementedError
+  .text.mp_raise_recursion_depth
+                 0x0000000000036899       0x1d build/py/runtime.o
+                 0x0000000000036899                mp_raise_recursion_depth
+  .text.mp_native_type_from_qstr
+                 0x00000000000368b6       0x64 build/py/nativeglue.o
+                 0x00000000000368b6                mp_native_type_from_qstr
+  .text.mp_stack_ctrl_init
+                 0x000000000003691a       0x3a build/py/stackctrl.o
+                 0x000000000003691a                mp_stack_ctrl_init
+  .text.mp_stack_set_limit
+                 0x0000000000036954        0x8 build/py/stackctrl.o
+                 0x0000000000036954                mp_stack_set_limit
+  .text.mp_stack_check
+                 0x000000000003695c       0x4b build/py/stackctrl.o
+                 0x000000000003695c                mp_stack_check
+  .text.mp_arg_check_num_sig
+                 0x00000000000369a7       0x88 build/py/argcheck.o
+                 0x00000000000369a7                mp_arg_check_num_sig
+  .text.mp_arg_parse_all
+                 0x0000000000036a2f      0x13c build/py/argcheck.o
+                 0x0000000000036a2f                mp_arg_parse_all
+  .text.mp_arg_parse_all_kw_array
+                 0x0000000000036b6b       0x79 build/py/argcheck.o
+                 0x0000000000036b6b                mp_arg_parse_all_kw_array
+  .text.mp_arg_error_unimpl_kw
+                 0x0000000000036be4       0x10 build/py/argcheck.o
+                 0x0000000000036be4                mp_arg_error_unimpl_kw
+  .text.mp_map_init
+                 0x0000000000036bf4       0x38 build/py/map.o
+                 0x0000000000036bf4                mp_map_init
+  .text.mp_map_init_fixed_table
+                 0x0000000000036c2c       0x23 build/py/map.o
+                 0x0000000000036c2c                mp_map_init_fixed_table
+  .text.mp_map_deinit
+                 0x0000000000036c4f       0x20 build/py/map.o
+                 0x0000000000036c4f                mp_map_deinit
+  .text.mp_map_clear
+                 0x0000000000036c6f       0x35 build/py/map.o
+                 0x0000000000036c6f                mp_map_clear
+  .text.mp_map_lookup
+                 0x0000000000036ca4      0x237 build/py/map.o
+                 0x0000000000036ca4                mp_map_lookup
+  .text.mp_map_rehash
+                 0x0000000000036edb       0xab build/py/map.o
+  .text.mp_obj_get_type
+                 0x0000000000036f86       0x24 build/py/obj.o
+                 0x0000000000036f86                mp_obj_get_type
+  .text.mp_obj_get_type_str
+                 0x0000000000036faa       0x13 build/py/obj.o
+                 0x0000000000036faa                mp_obj_get_type_str
+  .text.mp_obj_print_helper
+                 0x0000000000036fbd       0x63 build/py/obj.o
+                 0x0000000000036fbd                mp_obj_print_helper
+  .text.mp_obj_print_exception
+                 0x0000000000037020      0x142 build/py/obj.o
+                 0x0000000000037020                mp_obj_print_exception
+  .text.mp_obj_equal
+                 0x0000000000037162      0x105 build/py/obj.o
+                 0x0000000000037162                mp_obj_equal
+  .text.mp_obj_get_int
+                 0x0000000000037267       0x5a build/py/obj.o
+                 0x0000000000037267                mp_obj_get_int
+  .text.mp_obj_get_int_truncated
+                 0x00000000000372c1       0x22 build/py/obj.o
+                 0x00000000000372c1                mp_obj_get_int_truncated
+  .text.mp_obj_get_int_maybe
+                 0x00000000000372e3       0x5e build/py/obj.o
+                 0x00000000000372e3                mp_obj_get_int_maybe
+  .text.mp_obj_get_float_maybe
+                 0x0000000000037341       0x72 build/py/obj.o
+                 0x0000000000037341                mp_obj_get_float_maybe
+  .text.mp_obj_get_float
+                 0x00000000000373b3       0x6c build/py/obj.o
+                 0x00000000000373b3                mp_obj_get_float
+  .text.mp_obj_get_complex
+                 0x000000000003741f       0xcc build/py/obj.o
+                 0x000000000003741f                mp_obj_get_complex
+  .text.mp_obj_get_array
+                 0x00000000000374eb       0x54 build/py/obj.o
+                 0x00000000000374eb                mp_obj_get_array
+  .text.mp_get_index
+                 0x000000000003753f       0xf4 build/py/obj.o
+                 0x000000000003753f                mp_get_index
+  .text.mp_obj_len_maybe
+                 0x0000000000037633       0x3f build/py/obj.o
+                 0x0000000000037633                mp_obj_len_maybe
+  .text.mp_obj_is_true
+                 0x0000000000037672       0x7d build/py/obj.o
+                 0x0000000000037672                mp_obj_is_true
+  .text.mp_obj_subscr
+                 0x00000000000376ef       0x7d build/py/obj.o
+                 0x00000000000376ef                mp_obj_subscr
+  .text.mp_identity_getiter
+                 0x000000000003776c        0x4 build/py/obj.o
+                 0x000000000003776c                mp_identity_getiter
+  .text.mp_get_buffer
+                 0x0000000000037770       0x2a build/py/obj.o
+                 0x0000000000037770                mp_get_buffer
+  .text.mp_get_buffer_raise
+                 0x000000000003779a       0x1b build/py/obj.o
+                 0x000000000003779a                mp_get_buffer_raise
+  .text.mp_generic_unary_op
+                 0x00000000000377b5       0x15 build/py/obj.o
+                 0x00000000000377b5                mp_generic_unary_op
+  .text.bool_binary_op
+                 0x00000000000377ca       0x10 build/py/objbool.o
+  .text.bool_unary_op
+                 0x00000000000377da       0x18 build/py/objbool.o
+  .text.bool_print
+                 0x00000000000377f2       0x1b build/py/objbool.o
+  .text.bool_make_new
+                 0x000000000003780d       0x43 build/py/objbool.o
+  .text.mp_call_method_self_n_kw
+                 0x0000000000037850       0xd4 build/py/objboundmeth.o
+                 0x0000000000037850                mp_call_method_self_n_kw
+  .text.complex_attr
+                 0x0000000000037924       0x33 build/py/objcomplex.o
+  .text.complex_print
+                 0x0000000000037957      0x104 build/py/objcomplex.o
+  .text.mp_obj_new_complex
+                 0x0000000000037a5b       0x3d build/py/objcomplex.o
+                 0x0000000000037a5b                mp_obj_new_complex
+  .text.complex_unary_op
+                 0x0000000000037a98       0x9b build/py/objcomplex.o
+  .text.mp_obj_complex_get
+                 0x0000000000037b33       0x48 build/py/objcomplex.o
+                 0x0000000000037b33                mp_obj_complex_get
+  .text.complex_make_new
+                 0x0000000000037b7b      0x16b build/py/objcomplex.o
+  .text.mp_obj_complex_binary_op
+                 0x0000000000037ce6      0x2f3 build/py/objcomplex.o
+                 0x0000000000037ce6                mp_obj_complex_binary_op
+  .text.complex_binary_op
+                 0x0000000000037fd9       0x15 build/py/objcomplex.o
+  .text.dict_view_getiter
+                 0x0000000000037fee       0x24 build/py/objdict.o
+  .text.dict_getiter
+                 0x0000000000038012       0x21 build/py/objdict.o
+  .text.dict_values
+                 0x0000000000038033       0x25 build/py/objdict.o
+  .text.mp_ensure_not_fixed
+                 0x0000000000038058       0x12 build/py/objdict.o
+  .text.dict_clear
+                 0x000000000003806a       0x1b build/py/objdict.o
+  .text.dict_unary_op
+                 0x0000000000038085       0x38 build/py/objdict.o
+  .text.dict_get_helper
+                 0x00000000000380bd       0x8f build/py/objdict.o
+  .text.dict_setdefault
+                 0x000000000003814c        0xa build/py/objdict.o
+  .text.dict_pop
+                 0x0000000000038156        0xa build/py/objdict.o
+  .text.dict_get
+                 0x0000000000038160        0x7 build/py/objdict.o
+  .text.dict_iter_next
+                 0x0000000000038167       0x36 build/py/objdict.o
+  .text.dict_view_it_iternext
+                 0x000000000003819d       0x81 build/py/objdict.o
+  .text.dict_view_print
+                 0x000000000003821e       0xd7 build/py/objdict.o
+  .text.dict_print
+                 0x00000000000382f5       0xc6 build/py/objdict.o
+  .text.dict_update
+                 0x00000000000383bb      0x19d build/py/objdict.o
+  .text.dict_popitem
+                 0x0000000000038558       0x97 build/py/objdict.o
+  .text.dict_binary_op
+                 0x00000000000385ef       0xe6 build/py/objdict.o
+  .text.dict_view_binary_op
+                 0x00000000000386d5       0x17 build/py/objdict.o
+  .text.dict_items
+                 0x00000000000386ec       0x25 build/py/objdict.o
+  .text.dict_keys
+                 0x0000000000038711       0x25 build/py/objdict.o
+  .text.mp_obj_dict_get
+                 0x0000000000038736       0x31 build/py/objdict.o
+                 0x0000000000038736                mp_obj_dict_get
+  .text.mp_obj_dict_init
+                 0x0000000000038767       0x14 build/py/objdict.o
+                 0x0000000000038767                mp_obj_dict_init
+  .text.mp_obj_new_dict
+                 0x000000000003877b       0x2d build/py/objdict.o
+                 0x000000000003877b                mp_obj_new_dict
+  .text.dict_fromkeys
+                 0x00000000000387a8       0x7f build/py/objdict.o
+  .text.dict_copy
+                 0x0000000000038827       0x61 build/py/objdict.o
+  .text.dict_make_new
+                 0x0000000000038888       0x93 build/py/objdict.o
+  .text.mp_obj_dict_store
+                 0x000000000003891b       0x37 build/py/objdict.o
+                 0x000000000003891b                mp_obj_dict_store
+  .text.mp_obj_dict_delete
+                 0x0000000000038952       0x54 build/py/objdict.o
+                 0x0000000000038952                mp_obj_dict_delete
+  .text.dict_subscr
+                 0x00000000000389a6       0x51 build/py/objdict.o
+  .text.mp_obj_exception_print
+                 0x00000000000389f7       0xb0 build/py/objexcept.o
+                 0x00000000000389f7                mp_obj_exception_print
+  .text.mp_obj_exception_make_new
+                 0x0000000000038aa7       0x98 build/py/objexcept.o
+                 0x0000000000038aa7                mp_obj_exception_make_new
+  .text.exc_add_strn
+                 0x0000000000038b3f       0x85 build/py/objexcept.o
+  .text.mp_obj_exception_get_value
+                 0x0000000000038bc4       0x17 build/py/objexcept.o
+                 0x0000000000038bc4                mp_obj_exception_get_value
+  .text.mp_obj_exception_attr
+                 0x0000000000038bdb       0x5a build/py/objexcept.o
+                 0x0000000000038bdb                mp_obj_exception_attr
+  .text.mp_obj_new_exception_args
+                 0x0000000000038c35       0x3a build/py/objexcept.o
+                 0x0000000000038c35                mp_obj_new_exception_args
+  .text.mp_obj_new_exception
+                 0x0000000000038c6f        0x9 build/py/objexcept.o
+                 0x0000000000038c6f                mp_obj_new_exception
+  .text.mp_obj_new_exception_arg1
+                 0x0000000000038c78       0x1d build/py/objexcept.o
+                 0x0000000000038c78                mp_obj_new_exception_arg1
+  .text.mp_obj_new_exception_msg
+                 0x0000000000038c95       0xcb build/py/objexcept.o
+                 0x0000000000038c95                mp_obj_new_exception_msg
+  .text.mp_obj_new_exception_msg_varg
+                 0x0000000000038d60      0x1f2 build/py/objexcept.o
+                 0x0000000000038d60                mp_obj_new_exception_msg_varg
+  .text.mp_obj_is_exception_type
+                 0x0000000000038f52       0x2e build/py/objexcept.o
+                 0x0000000000038f52                mp_obj_is_exception_type
+  .text.mp_obj_is_exception_instance
+                 0x0000000000038f80       0x12 build/py/objexcept.o
+                 0x0000000000038f80                mp_obj_is_exception_instance
+  .text.mp_obj_exception_match
+                 0x0000000000038f92       0x2e build/py/objexcept.o
+                 0x0000000000038f92                mp_obj_exception_match
+  .text.mp_obj_exception_add_traceback
+                 0x0000000000038fc0       0xcf build/py/objexcept.o
+                 0x0000000000038fc0                mp_obj_exception_add_traceback
+  .text.mp_obj_exception_get_traceback
+                 0x000000000003908f       0x79 build/py/objexcept.o
+                 0x000000000003908f                mp_obj_exception_get_traceback
+  .text.mp_obj_float_divmod
+                 0x0000000000039108       0xc8 build/py/objfloat.o
+  .text.mp_obj_new_float
+                 0x00000000000391d0       0x2e build/py/objfloat.o
+                 0x00000000000391d0                mp_obj_new_float
+  .text.float_make_new
+                 0x00000000000391fe       0x9b build/py/objfloat.o
+  .text.mp_obj_float_get
+                 0x0000000000039299       0x3b build/py/objfloat.o
+                 0x0000000000039299                mp_obj_float_get
+  .text.float_unary_op
+                 0x00000000000392d4       0x73 build/py/objfloat.o
+  .text.float_print
+                 0x0000000000039347       0xac build/py/objfloat.o
+  .text.mp_obj_float_binary_op
+                 0x00000000000393f3      0x2ca build/py/objfloat.o
+                 0x00000000000393f3                mp_obj_float_binary_op
+  .text.float_binary_op
+                 0x00000000000396bd       0x3e build/py/objfloat.o
+  .text.fun_builtin_0_call
+                 0x00000000000396fb       0x49 build/py/objfun.o
+  .text.fun_builtin_1_call
+                 0x0000000000039744       0x5a build/py/objfun.o
+  .text.fun_builtin_2_call
+                 0x000000000003979e       0x5e build/py/objfun.o
+  .text.fun_builtin_3_call
+                 0x00000000000397fc       0x61 build/py/objfun.o
+  .text.fun_builtin_var_call
+                 0x000000000003985d       0xb8 build/py/objfun.o
+  .text.it_iternext
+                 0x0000000000039915       0x9d build/py/objgetitemiter.o
+  .text.mp_obj_new_getitem_iter
+                 0x00000000000399b2       0x25 build/py/objgetitemiter.o
+                 0x00000000000399b2                mp_obj_new_getitem_iter
+  .text.int_to_bytes
+                 0x00000000000399d7       0xd9 build/py/objint.o
+  .text.int_from_bytes
+                 0x0000000000039ab0       0xb2 build/py/objint.o
+  .text.mp_obj_new_int_from_float
+                 0x0000000000039b62       0xa9 build/py/objint.o
+                 0x0000000000039b62                mp_obj_new_int_from_float
+  .text.mp_obj_int_make_new
+                 0x0000000000039c0b       0xf9 build/py/objint.o
+  .text.mp_int_format_size
+                 0x0000000000039d04       0x84 build/py/objint.o
+                 0x0000000000039d04                mp_int_format_size
+  .text.mp_obj_int_formatted
+                 0x0000000000039d88      0x1cf build/py/objint.o
+                 0x0000000000039d88                mp_obj_int_formatted
+  .text.mp_obj_int_print
+                 0x0000000000039f57       0x85 build/py/objint.o
+                 0x0000000000039f57                mp_obj_int_print
+  .text.mp_obj_int_binary_op_extra_cases
+                 0x0000000000039fdc       0x7a build/py/objint.o
+                 0x0000000000039fdc                mp_obj_int_binary_op_extra_cases
+  .text.mp_obj_int_new_mpz
+                 0x000000000003a056       0x30 build/py/objint_mpz.o
+                 0x000000000003a056                mp_obj_int_new_mpz
+  .text.mp_obj_int_formatted_impl
+                 0x000000000003a086       0xd3 build/py/objint_mpz.o
+                 0x000000000003a086                mp_obj_int_formatted_impl
+  .text.mp_obj_int_from_bytes_impl
+                 0x000000000003a159       0x3a build/py/objint_mpz.o
+                 0x000000000003a159                mp_obj_int_from_bytes_impl
+  .text.mp_obj_int_to_bytes_impl
+                 0x000000000003a193       0x55 build/py/objint_mpz.o
+                 0x000000000003a193                mp_obj_int_to_bytes_impl
+  .text.mp_obj_int_sign
+                 0x000000000003a1e8       0x2e build/py/objint_mpz.o
+                 0x000000000003a1e8                mp_obj_int_sign
+  .text.mp_obj_int_unary_op
+                 0x000000000003a216       0xa6 build/py/objint_mpz.o
+                 0x000000000003a216                mp_obj_int_unary_op
+  .text.mp_obj_new_int_from_ll
+                 0x000000000003a2bc       0x2e build/py/objint_mpz.o
+                 0x000000000003a2bc                mp_obj_new_int_from_ll
+  .text.mp_obj_new_int
+                 0x000000000003a2ea       0x16 build/py/objint_mpz.o
+                 0x000000000003a2ea                mp_obj_new_int
+  .text.mp_obj_new_int_from_ull
+                 0x000000000003a300       0x2b build/py/objint_mpz.o
+                 0x000000000003a300                mp_obj_new_int_from_ull
+  .text.mp_obj_new_int_from_uint
+                 0x000000000003a32b       0x1d build/py/objint_mpz.o
+                 0x000000000003a32b                mp_obj_new_int_from_uint
+  .text.mp_obj_new_int_from_str_len
+                 0x000000000003a348       0x47 build/py/objint_mpz.o
+                 0x000000000003a348                mp_obj_new_int_from_str_len
+  .text.mp_obj_int_get_truncated
+                 0x000000000003a38f       0x16 build/py/objint_mpz.o
+                 0x000000000003a38f                mp_obj_int_get_truncated
+  .text.mp_obj_int_get_checked
+                 0x000000000003a3a5       0x65 build/py/objint_mpz.o
+                 0x000000000003a3a5                mp_obj_int_get_checked
+  .text.mp_obj_int_binary_op
+                 0x000000000003a40a      0x40b build/py/objint_mpz.o
+                 0x000000000003a40a                mp_obj_int_binary_op
+  .text.mp_obj_int_as_float_impl
+                 0x000000000003a815       0x3e build/py/objint_mpz.o
+                 0x000000000003a815                mp_obj_int_as_float_impl
+  .text.list_unary_op
+                 0x000000000003a853       0x31 build/py/objlist.o
+  .text.list_getiter
+                 0x000000000003a884       0x25 build/py/objlist.o
+  .text.list_reverse
+                 0x000000000003a8a9       0x4b build/py/objlist.o
+  .text.list_it_iternext
+                 0x000000000003a8f4       0x20 build/py/objlist.o
+  .text.mp_obj_list_append
+                 0x000000000003a914       0x6c build/py/objlist.o
+                 0x000000000003a914                mp_obj_list_append
+  .text.list_insert
+                 0x000000000003a980       0x73 build/py/objlist.o
+  .text.list_clear
+                 0x000000000003a9f3       0x3e build/py/objlist.o
+  .text.mp_quicksort
+                 0x000000000003aa31      0x132 build/py/objlist.o
+  .text.mp_obj_list_sort
+                 0x000000000003ab63       0x9c build/py/objlist.o
+                 0x000000000003ab63                mp_obj_list_sort
+  .text.list_index
+                 0x000000000003abff       0x16 build/py/objlist.o
+  .text.list_pop
+                 0x000000000003ac15       0xaf build/py/objlist.o
+  .text.mp_obj_list_remove
+                 0x000000000003acc4       0x65 build/py/objlist.o
+                 0x000000000003acc4                mp_obj_list_remove
+  .text.list_extend_from_iter
+                 0x000000000003ad29       0x37 build/py/objlist.o
+  .text.list_count
+                 0x000000000003ad60       0x10 build/py/objlist.o
+  .text.list_print
+                 0x000000000003ad70       0x6d build/py/objlist.o
+  .text.list_extend
+                 0x000000000003addd       0x9f build/py/objlist.o
+  .text.mp_obj_list_init
+                 0x000000000003ae7c       0x52 build/py/objlist.o
+                 0x000000000003ae7c                mp_obj_list_init
+  .text.list_new
+                 0x000000000003aece       0x2d build/py/objlist.o
+  .text.list_binary_op
+                 0x000000000003aefb      0x181 build/py/objlist.o
+  .text.list_make_new
+                 0x000000000003b07c       0x3f build/py/objlist.o
+  .text.mp_obj_new_list
+                 0x000000000003b0bb       0x33 build/py/objlist.o
+                 0x000000000003b0bb                mp_obj_new_list
+  .text.list_copy
+                 0x000000000003b0ee        0xd build/py/objlist.o
+  .text.mp_obj_list_get
+                 0x000000000003b0fb        0xf build/py/objlist.o
+                 0x000000000003b0fb                mp_obj_list_get
+  .text.mp_obj_list_store
+                 0x000000000003b10a       0x29 build/py/objlist.o
+                 0x000000000003b10a                mp_obj_list_store
+  .text.list_subscr
+                 0x000000000003b133      0x2bf build/py/objlist.o
+  .text.object___init__
+                 0x000000000003b3f2        0x8 build/py/objobject.o
+  .text.object___new__
+                 0x000000000003b3fa       0x61 build/py/objobject.o
+  .text.object_make_new
+                 0x000000000003b45b       0x20 build/py/objobject.o
+  .text.polymorph_it_iternext
+                 0x000000000003b47b        0x3 build/py/objpolyiter.o
+  .text.property_deleter
+                 0x000000000003b47e       0x2c build/py/objproperty.o
+  .text.property_setter
+                 0x000000000003b4aa       0x2c build/py/objproperty.o
+  .text.property_getter
+                 0x000000000003b4d6       0x2c build/py/objproperty.o
+  .text.property_make_new
+                 0x000000000003b502       0x7a build/py/objproperty.o
+  .text.mp_obj_property_get
+                 0x000000000003b57c        0x5 build/py/objproperty.o
+                 0x000000000003b57c                mp_obj_property_get
+  .text.none_print
+                 0x000000000003b581        0xc build/py/objnone.o
+  .text.singleton_print
+                 0x000000000003b58d       0x12 build/py/objsingleton.o
+  .text.slice_print
+                 0x000000000003b59f       0x7b build/py/objslice.o
+  .text.mp_obj_slice_get
+                 0x000000000003b61a       0x4b build/py/objslice.o
+                 0x000000000003b61a                mp_obj_slice_get
+  .text.arg_looks_integer
+                 0x000000000003b665       0x3f build/py/objstr.o
+  .text.arg_looks_numeric
+                 0x000000000003b6a4       0x2b build/py/objstr.o
+  .text.mp_obj_new_bytes_iterator
+                 0x000000000003b6cf       0x25 build/py/objstr.o
+  .text.bytes_it_iternext
+                 0x000000000003b6f4       0x7e build/py/objstr.o
+  .text.str_count
+                 0x000000000003b772      0x18e build/py/objstr.o
+  .text.str_uni_istype
+                 0x000000000003b900       0xe5 build/py/objstr.o
+  .text.str_isspace
+                 0x000000000003b9e5        0xf build/py/objstr.o
+  .text.str_isalpha
+                 0x000000000003b9f4        0xf build/py/objstr.o
+  .text.str_isdigit
+                 0x000000000003ba03        0xf build/py/objstr.o
+  .text.str_isupper
+                 0x000000000003ba12        0xf build/py/objstr.o
+  .text.str_islower
+                 0x000000000003ba21        0xf build/py/objstr.o
+  .text.str_to_int
+                 0x000000000003ba30       0x39 build/py/objstr.o
+  .text.mp_obj_str_get_buffer
+                 0x000000000003ba69       0x77 build/py/objstr.o
+                 0x000000000003ba69                mp_obj_str_get_buffer
+  .text.mp_str_print_quoted
+                 0x000000000003bae0      0x11f build/py/objstr.o
+                 0x000000000003bae0                mp_str_print_quoted
+  .text.str_print
+                 0x000000000003bbff       0xab build/py/objstr.o
+  .text.find_subbytes
+                 0x000000000003bcaa       0x6d build/py/objstr.o
+                 0x000000000003bcaa                find_subbytes
+  .text.str_finder
+                 0x000000000003bd17      0x1aa build/py/objstr.o
+  .text.str_find
+                 0x000000000003bec1        0xc build/py/objstr.o
+  .text.str_rfind
+                 0x000000000003becd        0xa build/py/objstr.o
+  .text.str_index
+                 0x000000000003bed7        0xf build/py/objstr.o
+  .text.str_rindex
+                 0x000000000003bee6        0xd build/py/objstr.o
+  .text.mp_obj_new_str_copy
+                 0x000000000003bef3       0x62 build/py/objstr.o
+                 0x000000000003bef3                mp_obj_new_str_copy
+  .text.mp_obj_new_str_via_qstr
+                 0x000000000003bf55       0x13 build/py/objstr.o
+                 0x000000000003bf55                mp_obj_new_str_via_qstr
+  .text.mp_obj_new_str_from_vstr
+                 0x000000000003bf68       0xaf build/py/objstr.o
+                 0x000000000003bf68                mp_obj_new_str_from_vstr
+  .text.str_join
+                 0x000000000003c017      0x1cd build/py/objstr.o
+  .text.str_replace
+                 0x000000000003c1e4      0x2ae build/py/objstr.o
+  .text.str_caseconv
+                 0x000000000003c492       0xb7 build/py/objstr.o
+  .text.str_lower
+                 0x000000000003c549        0xf build/py/objstr.o
+  .text.str_upper
+                 0x000000000003c558        0xf build/py/objstr.o
+  .text.mp_obj_new_str
+                 0x000000000003c567       0x37 build/py/objstr.o
+                 0x000000000003c567                mp_obj_new_str
+  .text.mp_obj_str_make_new
+                 0x000000000003c59e      0x161 build/py/objstr.o
+                 0x000000000003c59e                mp_obj_str_make_new
+  .text.bytes_decode
+                 0x000000000003c6ff       0x63 build/py/objstr.o
+  .text.mp_obj_new_bytes
+                 0x000000000003c762       0x12 build/py/objstr.o
+                 0x000000000003c762                mp_obj_new_bytes
+  .text.bytes_make_new.part.4
+                 0x000000000003c774      0x1ef build/py/objstr.o
+  .text.bytes_make_new
+                 0x000000000003c963       0x26 build/py/objstr.o
+  .text.str_encode
+                 0x000000000003c989       0x62 build/py/objstr.o
+  .text.mp_obj_new_str_of_type
+                 0x000000000003c9eb       0x1f build/py/objstr.o
+                 0x000000000003c9eb                mp_obj_new_str_of_type
+  .text.str_uni_strip
+                 0x000000000003ca0a      0x217 build/py/objstr.o
+  .text.str_strip
+                 0x000000000003cc21       0x10 build/py/objstr.o
+  .text.str_lstrip
+                 0x000000000003cc31        0xd build/py/objstr.o
+  .text.str_rstrip
+                 0x000000000003cc3e       0x10 build/py/objstr.o
+  .text.bytes_subscr
+                 0x000000000003cc4e       0xee build/py/objstr.o
+  .text.mp_obj_str_equal
+                 0x000000000003cd3c      0x114 build/py/objstr.o
+                 0x000000000003cd3c                mp_obj_str_equal
+  .text.mp_obj_str_get_qstr
+                 0x000000000003ce50       0x3b build/py/objstr.o
+                 0x000000000003ce50                mp_obj_str_get_qstr
+  .text.mp_obj_str_get_data
+                 0x000000000003ce8b       0x7a build/py/objstr.o
+                 0x000000000003ce8b                mp_obj_str_get_data
+  .text.mp_obj_str_binary_op
+                 0x000000000003cf05      0x914 build/py/objstr.o
+                 0x000000000003cf05                mp_obj_str_binary_op
+  .text.mp_obj_str_split
+                 0x000000000003d819      0x22b build/py/objstr.o
+                 0x000000000003d819                mp_obj_str_split
+  .text.str_rsplit
+                 0x000000000003da44      0x1f0 build/py/objstr.o
+  .text.str_startswith
+                 0x000000000003dc34       0xea build/py/objstr.o
+  .text.str_endswith
+                 0x000000000003dd1e       0xbf build/py/objstr.o
+  .text.mp_obj_str_format_helper
+                 0x000000000003dddd      0x925 build/py/objstr.o
+  .text.mp_obj_str_format
+                 0x000000000003e702       0xb8 build/py/objstr.o
+                 0x000000000003e702                mp_obj_str_format
+  .text.mp_obj_new_str_iterator
+                 0x000000000003e7ba       0x25 build/py/objstrunicode.o
+  .text.str_it_iternext
+                 0x000000000003e7df       0x92 build/py/objstrunicode.o
+  .text.uni_unary_op
+                 0x000000000003e871       0x95 build/py/objstrunicode.o
+  .text.uni_print
+                 0x000000000003e906      0x1bf build/py/objstrunicode.o
+  .text.str_index_to_ptr
+                 0x000000000003eac5      0x146 build/py/objstrunicode.o
+                 0x000000000003eac5                str_index_to_ptr
+  .text.str_subscr
+                 0x000000000003ec0b      0x1bc build/py/objstrunicode.o
+  .text.tuple_it_iternext
+                 0x000000000003edc7       0x1d build/py/objtuple.o
+  .text.mp_obj_tuple_getiter
+                 0x000000000003ede4       0x25 build/py/objtuple.o
+                 0x000000000003ede4                mp_obj_tuple_getiter
+  .text.mp_obj_tuple_print
+                 0x000000000003ee09       0x80 build/py/objtuple.o
+                 0x000000000003ee09                mp_obj_tuple_print
+  .text.tuple_index
+                 0x000000000003ee89       0x16 build/py/objtuple.o
+  .text.tuple_count
+                 0x000000000003ee9f       0x10 build/py/objtuple.o
+  .text.mp_obj_tuple_unary_op
+                 0x000000000003eeaf       0x76 build/py/objtuple.o
+                 0x000000000003eeaf                mp_obj_tuple_unary_op
+  .text.mp_obj_new_tuple
+                 0x000000000003ef25       0x51 build/py/objtuple.o
+                 0x000000000003ef25                mp_obj_new_tuple
+  .text.mp_obj_tuple_binary_op
+                 0x000000000003ef76      0x196 build/py/objtuple.o
+                 0x000000000003ef76                mp_obj_tuple_binary_op
+  .text.mp_obj_tuple_subscr
+                 0x000000000003f10c       0xac build/py/objtuple.o
+                 0x000000000003f10c                mp_obj_tuple_subscr
+  .text.mp_obj_tuple_make_new
+                 0x000000000003f1b8       0xc6 build/py/objtuple.o
+  .text.mp_obj_tuple_get
+                 0x000000000003f27e       0x53 build/py/objtuple.o
+                 0x000000000003f27e                mp_obj_tuple_get
+  .text.type_print
+                 0x000000000003f2d1       0x12 build/py/objtype.o
+  .text.instance_count_native_bases
+                 0x000000000003f2e3       0xaa build/py/objtype.o
+  .text.native_base_init_wrapper
+                 0x000000000003f38d       0x73 build/py/objtype.o
+  .text.type_call
+                 0x000000000003f400       0x2e build/py/objtype.o
+  .text.mp_obj_class_lookup
+                 0x000000000003f42e      0x274 build/py/objtype.o
+  .text.type_attr
+                 0x000000000003f6a2      0x1be build/py/objtype.o
+  .text.instance_subscr
+                 0x000000000003f860      0x109 build/py/objtype.o
+  .text.mp_obj_instance_attr
+                 0x000000000003f969      0x2bf build/py/objtype.o
+  .text.instance_binary_op
+                 0x000000000003fc28       0xda build/py/objtype.o
+  .text.instance_unary_op
+                 0x000000000003fd02      0x105 build/py/objtype.o
+  .text.instance_print
+                 0x000000000003fe07      0x139 build/py/objtype.o
+  .text.instance_get_buffer
+                 0x000000000003ff40       0x9a build/py/objtype.o
+  .text.instance_getiter
+                 0x000000000003ffda       0xa7 build/py/objtype.o
+  .text.static_class_method_make_new
+                 0x0000000000040081       0x6c build/py/objtype.o
+  .text.mp_obj_instance_call
+                 0x00000000000400ed       0xe8 build/py/objtype.o
+                 0x00000000000400ed                mp_obj_instance_call
+  .text.mp_obj_new_instance
+                 0x00000000000401d5       0x72 build/py/objtype.o
+                 0x00000000000401d5                mp_obj_new_instance
+  .text.mp_obj_instance_make_new
+                 0x0000000000040247      0x28b build/py/objtype.o
+                 0x0000000000040247                mp_obj_instance_make_new
+  .text.mp_obj_new_type
+                 0x00000000000404d2      0x264 build/py/objtype.o
+                 0x00000000000404d2                mp_obj_new_type
+  .text.type_make_new
+                 0x0000000000040736       0x60 build/py/objtype.o
+  .text.mp_obj_is_subclass_fast
+                 0x0000000000040796       0x6e build/py/objtype.o
+                 0x0000000000040796                mp_obj_is_subclass_fast
+  .text.mp_instance_cast_to_native_base
+                 0x0000000000040804       0x32 build/py/objtype.o
+                 0x0000000000040804                mp_instance_cast_to_native_base
+  .text.op_getitem
+                 0x0000000000040836       0x2a build/py/opmethods.o
+  .text.op_setitem
+                 0x0000000000040860       0x2d build/py/opmethods.o
+  .text.op_delitem
+                 0x000000000004088d       0x27 build/py/opmethods.o
+  .text.mp_seq_multiply
+                 0x00000000000408b4       0x25 build/py/sequence.o
+                 0x00000000000408b4                mp_seq_multiply
+  .text.mp_seq_get_fast_slice_indexes
+                 0x00000000000408d9      0x195 build/py/sequence.o
+                 0x00000000000408d9                mp_seq_get_fast_slice_indexes
+  .text.mp_seq_extract_slice
+                 0x0000000000040a6e       0x5f build/py/sequence.o
+                 0x0000000000040a6e                mp_seq_extract_slice
+  .text.mp_seq_cmp_bytes
+                 0x0000000000040acd       0x9f build/py/sequence.o
+                 0x0000000000040acd                mp_seq_cmp_bytes
+  .text.mp_seq_cmp_objs
+                 0x0000000000040b6c       0xf7 build/py/sequence.o
+                 0x0000000000040b6c                mp_seq_cmp_objs
+  .text.mp_seq_index_obj
+                 0x0000000000040c63       0xac build/py/sequence.o
+                 0x0000000000040c63                mp_seq_index_obj
+  .text.mp_seq_count_obj
+                 0x0000000000040d0f       0x44 build/py/sequence.o
+                 0x0000000000040d0f                mp_seq_count_obj
+  .text.mp_binary_set_int
+                 0x0000000000040d53       0x3a build/py/binary.o
+                 0x0000000000040d53                mp_binary_set_int
+  .text.mp_builtin_next
+                 0x0000000000040d8d       0x24 build/py/modbuiltins.o
+  .text.mp_opcode_format
+                 0x0000000000040db1       0x79 build/py/bc.o
+                 0x0000000000040db1                mp_opcode_format
+  .text.mp_small_int_mul_overflow
+                 0x0000000000040e2a       0x62 build/py/smallint.o
+                 0x0000000000040e2a                mp_small_int_mul_overflow
+  .text.mp_small_int_modulo
+                 0x0000000000040e8c       0x24 build/py/smallint.o
+                 0x0000000000040e8c                mp_small_int_modulo
+  .text.mp_small_int_floor_divide
+                 0x0000000000040eb0       0x29 build/py/smallint.o
+                 0x0000000000040eb0                mp_small_int_floor_divide
+  .text.stderr_print_strn
+                 0x0000000000040ed9        0xa build/main.o
+  .text.usage.isra.0
+                 0x0000000000040ee3       0x47 build/main.o
+  .text.main_    0x0000000000040f2a      0x6c3 build/main.o
+                 0x0000000000040f2a                main_
+  .text.nlr_jump_fail
+                 0x00000000000415ed       0x24 build/main.o
+                 0x00000000000415ed                nlr_jump_fail
+  .text.gc_collect
+                 0x0000000000041611       0x82 build/gccollect.o
+                 0x0000000000041611                gc_collect
+  *fill*         0x0000000000041693        0xd 
+  .text          0x00000000000416a0       0x72 /usr/lib/x86_64-linux-gnu/libc_nonshared.a(elf-init.oS)
+                 0x00000000000416a0                __libc_csu_init
+                 0x0000000000041710                __libc_csu_fini
+  *(.gnu.warning)
+ 
+ .fini           0x0000000000041714        0x9
+  *(SORT_NONE(.fini))
+  .fini          0x0000000000041714        0x4 /usr/lib/gcc/x86_64-linux-gnu/7/../../../x86_64-linux-gnu/crti.o
+                 0x0000000000041714                _fini
+  .fini          0x0000000000041718        0x5 /usr/lib/gcc/x86_64-linux-gnu/7/../../../x86_64-linux-gnu/crtn.o
+                 [!provide]                        PROVIDE (__etext = .)
+                 [!provide]                        PROVIDE (_etext = .)
+                 [!provide]                        PROVIDE (etext = .)
+ 
+ .rodata         0x0000000000041720     0x7515
+  *(.rodata .rodata.* .gnu.linkonce.r.*)
+  .rodata.gc_free.part.0.str1.1
+                 0x0000000000041720       0x1b build/py/gc.o
+  *fill*         0x000000000004173b        0x5 
+  .rodata.gc_free.part.0.str1.8
+                 0x0000000000041740       0x20 build/py/gc.o
+                                          0x1f (size before relaxing)
+  .rodata.gc_realloc.str1.1
+                 0x0000000000041760       0x1c build/py/gc.o
+  *fill*         0x000000000004177c        0x4 
+  .rodata.__PRETTY_FUNCTION__.4588
+                 0x0000000000041780        0xb build/py/gc.o
+  *fill*         0x000000000004178b        0x5 
+  .rodata.__PRETTY_FUNCTION__.4571
+                 0x0000000000041790        0x8 build/py/gc.o
+  .rodata.qstr_from_strn.str1.1
+                 0x0000000000041798        0xe build/py/qstr.o
+  .rodata        0x00000000000417a6       0x48 build/py/qstr.o
+  .rodata.str1.1
+                 0x00000000000417ee      0xddf build/py/qstr.o
+  .rodata.vstr_add_char.str1.1
+                 0x00000000000425cd       0x1a build/py/vstr.o
+  *fill*         0x00000000000425e7        0x1 
+  .rodata.__PRETTY_FUNCTION__.4441
+                 0x00000000000425e8        0xe build/py/vstr.o
+  .rodata.mp_print_mp_int.str1.1
+                 0x00000000000425f6       0x43 build/py/mpprint.o
+                                          0x44 (size before relaxing)
+  .rodata.mp_vprintf.str1.1
+                 0x0000000000042639       0x33 build/py/mpprint.o
+                                          0x39 (size before relaxing)
+  *fill*         0x000000000004266c        0x4 
+  .rodata.__PRETTY_FUNCTION__.4756
+                 0x0000000000042670        0xb build/py/mpprint.o
+  *fill*         0x000000000004267b        0x5 
+  .rodata.__PRETTY_FUNCTION__.4668
+                 0x0000000000042680       0x10 build/py/mpprint.o
+  .rodata.pad_zeroes
+                 0x0000000000042690       0x11 build/py/mpprint.o
+  *fill*         0x00000000000426a1        0xf 
+  .rodata.pad_spaces
+                 0x00000000000426b0       0x11 build/py/mpprint.o
+  *fill*         0x00000000000426c1       0x1f 
+  .rodata.attr   0x00000000000426e0       0x80 build/py/unicode.o
+  .rodata.mpz_need_dig.str1.1
+                 0x0000000000042760       0x1a build/py/mpz.o
+  .rodata.mpz_clone.str1.1
+                 0x000000000004277a       0x10 build/py/mpz.o
+  .rodata.mpz_set_from_str.str1.1
+                 0x000000000004278a        0xb build/py/mpz.o
+  .rodata.mpz_or_inpl.str1.1
+                 0x0000000000042795        0xc build/py/mpz.o
+  .rodata.mpz_divmod_inpl.str1.1
+                 0x00000000000427a1       0x12 build/py/mpz.o
+  .rodata.mpz_as_str_inpl.str1.1
+                 0x00000000000427b3       0x24 build/py/mpz.o
+  *fill*         0x00000000000427d7        0x9 
+  .rodata.__PRETTY_FUNCTION__.2891
+                 0x00000000000427e0       0x10 build/py/mpz.o
+  .rodata.__PRETTY_FUNCTION__.2828
+                 0x00000000000427f0       0x10 build/py/mpz.o
+  .rodata.__PRETTY_FUNCTION__.2652
+                 0x0000000000042800        0xa build/py/mpz.o
+  *fill*         0x000000000004280a        0x6 
+  .rodata.__PRETTY_FUNCTION__.2525
+                 0x0000000000042810        0xb build/py/mpz.o
+  *fill*         0x000000000004281b        0x5 
+  .rodata.__PRETTY_FUNCTION__.2705
+                 0x0000000000042820       0x11 build/py/mpz.o
+  *fill*         0x0000000000042831        0x7 
+  .rodata.__PRETTY_FUNCTION__.2648
+                 0x0000000000042838        0xd build/py/mpz.o
+  *fill*         0x0000000000042845        0x3 
+  .rodata.cst8   0x0000000000042848        0x8 build/py/mpz.o
+  .rodata.cst16  0x0000000000042850       0x10 build/py/mpz.o
+  .rodata.mp_lexer_to_next.str1.1
+                 0x0000000000042860       0x58 build/py/lexer.o
+  .rodata.str1.1
+                 0x00000000000428b8       0x89 build/py/lexer.o
+                                          0xc8 (size before relaxing)
+  *fill*         0x0000000000042941       0x1f 
+  .rodata.tok_enc_kind
+                 0x0000000000042960       0x2b build/py/lexer.o
+  .rodata.peek_result.str1.1
+                 0x000000000004298b       0x2d build/py/parse.o
+  .rodata.pop_result.str1.1
+                 0x00000000000429b8       0x1d build/py/parse.o
+  .rodata.push_rule_from_arg.str1.1
+                 0x00000000000429d5       0x5f build/py/parse.o
+  .rodata.push_result_rule.str1.1
+                 0x0000000000042a34       0x8f build/py/parse.o
+  .rodata.mp_parse.str1.1
+                 0x0000000000042ac3       0xf3 build/py/parse.o
+  *fill*         0x0000000000042bb6        0x2 
+  .rodata.__PRETTY_FUNCTION__.6523
+                 0x0000000000042bb8        0xf build/py/parse.o
+  *fill*         0x0000000000042bc7        0x9 
+  .rodata.__PRETTY_FUNCTION__.6413
+                 0x0000000000042bd0       0x13 build/py/parse.o
+  *fill*         0x0000000000042be3        0x5 
+  .rodata.__PRETTY_FUNCTION__.6441
+                 0x0000000000042be8        0xb build/py/parse.o
+  *fill*         0x0000000000042bf3        0x5 
+  .rodata.__PRETTY_FUNCTION__.6446
+                 0x0000000000042bf8        0xc build/py/parse.o
+  *fill*         0x0000000000042c04        0x4 
+  .rodata.__PRETTY_FUNCTION__.6575
+                 0x0000000000042c08        0x9 build/py/parse.o
+  *fill*         0x0000000000042c11        0xf 
+  .rodata.mp_constants_table
+                 0x0000000000042c20        0x0 build/py/parse.o
+  .rodata.rule_arg_offset_table
+                 0x0000000000042c20       0xaf build/py/parse.o
+  *fill*         0x0000000000042ccf       0x11 
+  .rodata.rule_arg_combined_table
+                 0x0000000000042ce0      0x37e build/py/parse.o
+  *fill*         0x000000000004305e        0x2 
+  .rodata.rule_act_table
+                 0x0000000000043060       0xaf build/py/parse.o
+  .rodata.scope_new.str1.1
+                 0x000000000004310f       0x2a build/py/scope.o
+  .rodata.scope_check_to_close_over.str1.1
+                 0x0000000000043139       0x51 build/py/scope.o
+  *fill*         0x000000000004318a        0x6 
+  .rodata.__PRETTY_FUNCTION__.3853
+                 0x0000000000043190       0x1c build/py/scope.o
+  *fill*         0x00000000000431ac        0x4 
+  .rodata.__PRETTY_FUNCTION__.3824
+                 0x00000000000431b0        0xa build/py/scope.o
+  .rodata.scope_simple_name_table
+                 0x00000000000431ba        0x7 build/py/scope.o
+  .rodata.do_import_name.str1.1
+                 0x00000000000431c1       0x41 build/py/compile.o
+  .rodata.compile_decrease_except_level.str1.1
+                 0x0000000000043202       0x1b build/py/compile.o
+  .rodata.compile_scope_inline_asm.str1.1
+                 0x000000000004321d      0x1a5 build/py/compile.o
+  .rodata.compile_star_expr.str1.1
+                 0x00000000000433c2       0x1d build/py/compile.o
+  .rodata.compile_break_cont_stmt.str1.1
+                 0x00000000000433df       0x5c build/py/compile.o
+  .rodata.compile_viper_type_annotation.str1.1
+                 0x000000000004343b       0x12 build/py/compile.o
+                                          0x33 (size before relaxing)
+  .rodata.compile_scope_func_lambda_param.str1.1
+                 0x000000000004344d       0x7a build/py/compile.o
+                                          0xa5 (size before relaxing)
+  .rodata.compile_import_from.str1.1
+                 0x00000000000434c7       0x83 build/py/compile.o
+  .rodata.compile_node.str1.1
+                 0x000000000004354a       0x32 build/py/compile.o
+  .rodata.c_assign.str1.1
+                 0x000000000004357c       0xc6 build/py/compile.o
+                                          0xea (size before relaxing)
+  .rodata.c_assign_tuple.str1.1
+                 0x0000000000043642       0x1a build/py/compile.o
+  .rodata.compile_yield_expr.str1.1
+                 0x000000000004365c       0x19 build/py/compile.o
+  .rodata.compile_comprehension.str1.1
+                 0x0000000000043675       0x62 build/py/compile.o
+  .rodata.compile_trailer_paren_helper.str1.1
+                 0x00000000000436d7       0x8d build/py/compile.o
+  .rodata.compile_subscript.str1.1
+                 0x0000000000043764       0x85 build/py/compile.o
+  .rodata.compile_atom_paren.str1.1
+                 0x00000000000437e9       0x26 build/py/compile.o
+  .rodata.compile_atom_expr_normal.str1.1
+                 0x000000000004380f       0x18 build/py/compile.o
+  .rodata.compile_comparison.str1.1
+                 0x0000000000043827       0x3d build/py/compile.o
+  .rodata.compile_funcdef_lambdef_param.str1.1
+                 0x0000000000043864       0x4d build/py/compile.o
+  .rodata.compile_for_stmt.str1.1
+                 0x00000000000438b1       0x24 build/py/compile.o
+  .rodata.c_del_stmt.str1.1
+                 0x00000000000438d5       0x71 build/py/compile.o
+  .rodata.compile_expr_stmt.str1.1
+                 0x0000000000043946       0x27 build/py/compile.o
+  .rodata.compile_decorated.str1.1
+                 0x000000000004396d       0xe2 build/py/compile.o
+  .rodata.compile_atom_bracket.str1.1
+                 0x0000000000043a4f       0x26 build/py/compile.o
+  .rodata.compile_scope_comp_iter.str1.1
+                 0x0000000000043a75       0x4b build/py/compile.o
+  .rodata.compile_scope.str1.1
+                 0x0000000000043ac0       0xb5 build/py/compile.o
+  .rodata.compile_test_if_expr.str1.1
+                 0x0000000000043b75       0x3d build/py/compile.o
+  .rodata.compile_if_stmt.str1.1
+                 0x0000000000043bb2       0x3a build/py/compile.o
+  .rodata.compile_atom_expr_await.str1.1
+                 0x0000000000043bec       0x19 build/py/compile.o
+  .rodata.compile_factor_2.str1.1
+                 0x0000000000043c05       0x34 build/py/compile.o
+  .rodata.compile_with_stmt.str1.1
+                 0x0000000000043c05        0x6 build/py/compile.o
+  .rodata.compile_async_stmt.str1.1
+                 0x0000000000043c0b       0x57 build/py/compile.o
+  .rodata.compile_return_stmt.str1.1
+                 0x0000000000043c62       0x1a build/py/compile.o
+  .rodata.compile_global_nonlocal_stmt.str1.1
+                 0x0000000000043c7c       0x83 build/py/compile.o
+  .rodata.compile_atom_brace.str1.1
+                 0x0000000000043cff       0x6b build/py/compile.o
+  .rodata.compile_try_except.str1.1
+                 0x0000000000043d6a       0x5e build/py/compile.o
+  .rodata.compile_try_finally.str1.1
+                 0x0000000000043dc8       0x1f build/py/compile.o
+  .rodata.mp_compile_to_raw_code.str1.1
+                 0x0000000000043de7       0x21 build/py/compile.o
+  *fill*         0x0000000000043e08        0x8 
+  .rodata.__PRETTY_FUNCTION__.5781
+                 0x0000000000043e10       0x12 build/py/compile.o
+  *fill*         0x0000000000043e22        0xe 
+  .rodata.__PRETTY_FUNCTION__.6122
+                 0x0000000000043e30       0x12 build/py/compile.o
+  *fill*         0x0000000000043e42        0x6 
+  .rodata.__PRETTY_FUNCTION__.5816
+                 0x0000000000043e48        0xb build/py/compile.o
+  *fill*         0x0000000000043e53        0xd 
+  .rodata.__PRETTY_FUNCTION__.5835
+                 0x0000000000043e60       0x18 build/py/compile.o
+  .rodata.__PRETTY_FUNCTION__.5859
+                 0x0000000000043e78        0xf build/py/compile.o
+  *fill*         0x0000000000043e87        0x9 
+  .rodata.__PRETTY_FUNCTION__.5897
+                 0x0000000000043e90       0x14 build/py/compile.o
+  *fill*         0x0000000000043ea4        0xc 
+  .rodata.__PRETTY_FUNCTION__.6108
+                 0x0000000000043eb0       0x18 build/py/compile.o
+  *fill*         0x0000000000043ec8        0x8 
+  .rodata.__PRETTY_FUNCTION__.6113
+                 0x0000000000043ed0       0x13 build/py/compile.o
+  *fill*         0x0000000000043ee3        0xd 
+  .rodata.__PRETTY_FUNCTION__.5959
+                 0x0000000000043ef0       0x10 build/py/compile.o
+  .rodata.__PRETTY_FUNCTION__.5992
+                 0x0000000000043f00       0x21 build/py/compile.o
+  *fill*         0x0000000000043f21        0xf 
+  .rodata.__PRETTY_FUNCTION__.6025
+                 0x0000000000043f30       0x13 build/py/compile.o
+  *fill*         0x0000000000043f43        0xd 
+  .rodata.__PRETTY_FUNCTION__.6044
+                 0x0000000000043f50       0x14 build/py/compile.o
+  *fill*         0x0000000000043f64        0xc 
+  .rodata.__PRETTY_FUNCTION__.6049
+                 0x0000000000043f70       0x11 build/py/compile.o
+  *fill*         0x0000000000043f81        0xf 
+  .rodata.__PRETTY_FUNCTION__.5568
+                 0x0000000000043f90       0x1e build/py/compile.o
+  *fill*         0x0000000000043fae        0x2 
+  .rodata.__PRETTY_FUNCTION__.6069
+                 0x0000000000043fb0       0x12 build/py/compile.o
+  *fill*         0x0000000000043fc2        0xe 
+  .rodata.__PRETTY_FUNCTION__.6137
+                 0x0000000000043fd0       0x15 build/py/compile.o
+  *fill*         0x0000000000043fe5        0xb 
+  .rodata.__PRETTY_FUNCTION__.5736
+                 0x0000000000043ff0       0x1e build/py/compile.o
+  *fill*         0x000000000004400e        0x2 
+  .rodata.__PRETTY_FUNCTION__.6172
+                 0x0000000000044010       0x13 build/py/compile.o
+  *fill*         0x0000000000044023        0xd 
+  .rodata.__PRETTY_FUNCTION__.6210
+                 0x0000000000044030       0x11 build/py/compile.o
+  *fill*         0x0000000000044041        0xf 
+  .rodata.__PRETTY_FUNCTION__.6267
+                 0x0000000000044050       0x13 build/py/compile.o
+  *fill*         0x0000000000044063        0xd 
+  .rodata.__PRETTY_FUNCTION__.6276
+                 0x0000000000044070       0x15 build/py/compile.o
+  *fill*         0x0000000000044085        0xb 
+  .rodata.__PRETTY_FUNCTION__.6284
+                 0x0000000000044090       0x1a build/py/compile.o
+  *fill*         0x00000000000440aa        0x6 
+  .rodata.__PRETTY_FUNCTION__.6316
+                 0x00000000000440b0       0x12 build/py/compile.o
+  *fill*         0x00000000000440c2        0xe 
+  .rodata.__PRETTY_FUNCTION__.6259
+                 0x00000000000440d0       0x16 build/py/compile.o
+  *fill*         0x00000000000440e6        0x2 
+  .rodata.__PRETTY_FUNCTION__.6362
+                 0x00000000000440e8        0xd build/py/compile.o
+  *fill*         0x00000000000440f5        0x3 
+  .rodata.__PRETTY_FUNCTION__.5650
+                 0x00000000000440f8        0xa build/py/compile.o
+  *fill*         0x0000000000044102        0xe 
+  .rodata.__PRETTY_FUNCTION__.5671
+                 0x0000000000044110       0x13 build/py/compile.o
+  *fill*         0x0000000000044123        0x5 
+  .rodata.__PRETTY_FUNCTION__.5693
+                 0x0000000000044128        0x9 build/py/compile.o
+  *fill*         0x0000000000044131        0xf 
+  .rodata.__PRETTY_FUNCTION__.6401
+                 0x0000000000044140       0x18 build/py/compile.o
+  *fill*         0x0000000000044158        0x8 
+  .rodata.__PRETTY_FUNCTION__.6380
+                 0x0000000000044160       0x20 build/py/compile.o
+  .rodata.__PRETTY_FUNCTION__.6412
+                 0x0000000000044180        0xe build/py/compile.o
+  *fill*         0x000000000004418e        0x2 
+  .rodata.__PRETTY_FUNCTION__.6426
+                 0x0000000000044190       0x19 build/py/compile.o
+  *fill*         0x00000000000441a9        0x7 
+  .rodata.__PRETTY_FUNCTION__.6486
+                 0x00000000000441b0       0x15 build/py/compile.o
+  .rodata.mp_emit_common_id_op.str1.1
+                 0x00000000000441c5       0x52 build/py/emitcommon.o
+                                          0x5d (size before relaxing)
+  *fill*         0x0000000000044217        0x9 
+  .rodata.__PRETTY_FUNCTION__.4448
+                 0x0000000000044220       0x15 build/py/emitcommon.o
+  .rodata.emit_get_cur_to_write_code_info.str1.1
+                 0x0000000000044235       0x53 build/py/emitbc.o
+  .rodata.mp_emit_bc_adjust_stack_size.str1.1
+                 0x0000000000044288       0x28 build/py/emitbc.o
+  .rodata.mp_emit_bc_set_source_line.str1.1
+                 0x00000000000442b0       0x27 build/py/emitbc.o
+  .rodata.mp_emit_bc_label_assign.str1.1
+                 0x00000000000442d7       0x71 build/py/emitbc.o
+  .rodata.emit_get_cur_to_write_bytecode.str1.1
+                 0x0000000000044348       0x42 build/py/emitbc.o
+  .rodata.emit_write_bytecode_byte_qstr.str1.1
+                 0x000000000004438a       0x11 build/py/emitbc.o
+  .rodata.mp_emit_bc_raise_varargs.str1.1
+                 0x000000000004439b        0xc build/py/emitbc.o
+  .rodata.mp_emit_bc_end_pass.str1.1
+                 0x00000000000443a7       0x76 build/py/emitbc.o
+  .rodata.mp_emit_bc_make_closure.str1.1
+                 0x000000000004441d       0x15 build/py/emitbc.o
+  *fill*         0x0000000000044432        0xe 
+  .rodata.__PRETTY_FUNCTION__.5680
+                 0x0000000000044440       0x19 build/py/emitbc.o
+  *fill*         0x0000000000044459        0x7 
+  .rodata.__PRETTY_FUNCTION__.5651
+                 0x0000000000044460       0x18 build/py/emitbc.o
+  *fill*         0x0000000000044478        0x8 
+  .rodata.__PRETTY_FUNCTION__.5373
+                 0x0000000000044480       0x1e build/py/emitbc.o
+  *fill*         0x000000000004449e        0x2 
+  .rodata.__PRETTY_FUNCTION__.5327
+                 0x00000000000444a0       0x1f build/py/emitbc.o
+  *fill*         0x00000000000444bf        0x1 
+  .rodata.__PRETTY_FUNCTION__.5458
+                 0x00000000000444c0       0x18 build/py/emitbc.o
+  *fill*         0x00000000000444d8        0x8 
+  .rodata.__PRETTY_FUNCTION__.5316
+                 0x00000000000444e0       0x21 build/py/emitbc.o
+  *fill*         0x0000000000044501        0xf 
+  .rodata.__PRETTY_FUNCTION__.5447
+                 0x0000000000044510       0x1d build/py/emitbc.o
+  *fill*         0x000000000004452d        0x3 
+  .rodata.__PRETTY_FUNCTION__.5434
+                 0x0000000000044530       0x14 build/py/emitbc.o
+  *fill*         0x0000000000044544       0x1c 
+  .rodata.__PRETTY_FUNCTION__.5299
+                 0x0000000000044560       0x20 build/py/emitbc.o
+  .rodata.mp_asm_base_start_pass.str1.1
+                 0x0000000000044580       0x26 build/py/asmbase.o
+  .rodata.mp_asm_base_get_cur_to_write_bytes.str1.1
+                 0x00000000000445a6       0x36 build/py/asmbase.o
+  .rodata.mp_asm_base_label_assign.str1.1
+                 0x00000000000445dc       0x6e build/py/asmbase.o
+  *fill*         0x000000000004464a        0x6 
+  .rodata.__PRETTY_FUNCTION__.3490
+                 0x0000000000044650       0x19 build/py/asmbase.o
+  *fill*         0x0000000000044669       0x17 
+  .rodata.__PRETTY_FUNCTION__.3485
+                 0x0000000000044680       0x23 build/py/asmbase.o
+  *fill*         0x00000000000446a3        0xd 
+  .rodata.__PRETTY_FUNCTION__.3479
+                 0x00000000000446b0       0x17 build/py/asmbase.o
+  .rodata.get_label_dest.part.2.str1.1
+                 0x00000000000446c7       0x2f build/py/asmx64.o
+  .rodata.asm_x64_mov_mem8_to_r64zx.str1.1
+                 0x00000000000446f6        0xc build/py/asmx64.o
+  .rodata.asm_x64_test_r8_with_r8.str1.1
+                 0x0000000000044702       0x1c build/py/asmx64.o
+  .rodata.asm_x64_setcc_r8.str1.1
+                 0x000000000004471e        0xc build/py/asmx64.o
+  .rodata.asm_x64_entry.str1.1
+                 0x000000000004472a       0x10 build/py/asmx64.o
+  .rodata.asm_x64_mov_local_addr_to_r64.str1.1
+                 0x000000000004473a        0xd build/py/asmx64.o
+  .rodata.asm_x64_call_ind.str1.1
+                 0x0000000000044747        0xd build/py/asmx64.o
+  *fill*         0x0000000000044754        0xc 
+  .rodata.__PRETTY_FUNCTION__.3306
+                 0x0000000000044760       0x11 build/py/asmx64.o
+  *fill*         0x0000000000044771        0xf 
+  .rodata.__PRETTY_FUNCTION__.3158
+                 0x0000000000044780       0x18 build/py/asmx64.o
+  .rodata.__PRETTY_FUNCTION__.3270
+                 0x0000000000044798        0xe build/py/asmx64.o
+  *fill*         0x00000000000447a6        0x2 
+  .rodata.__PRETTY_FUNCTION__.3250
+                 0x00000000000447a8        0xf build/py/asmx64.o
+  *fill*         0x00000000000447b7        0x9 
+  .rodata.__PRETTY_FUNCTION__.3245
+                 0x00000000000447c0       0x10 build/py/asmx64.o
+  .rodata.__PRETTY_FUNCTION__.3240
+                 0x00000000000447d0       0x11 build/py/asmx64.o
+  *fill*         0x00000000000447e1        0xf 
+  .rodata.__PRETTY_FUNCTION__.3229
+                 0x00000000000447f0       0x18 build/py/asmx64.o
+  *fill*         0x0000000000044808        0x8 
+  .rodata.__PRETTY_FUNCTION__.3145
+                 0x0000000000044810       0x1b build/py/asmx64.o
+  *fill*         0x000000000004482b        0x5 
+  .rodata.__PRETTY_FUNCTION__.3138
+                 0x0000000000044830       0x1b build/py/asmx64.o
+  *fill*         0x000000000004484b        0x5 
+  .rodata.__PRETTY_FUNCTION__.3131
+                 0x0000000000044850       0x1a build/py/asmx64.o
+  .rodata.adjust_stack.str1.1
+                 0x000000000004486a       0x98 build/py/emitnx64.o
+  .rodata.emit_native_leave_exc_stack.str1.1
+                 0x0000000000044902       0x19 build/py/emitnx64.o
+  .rodata.emit_native_load_fast.str1.1
+                 0x000000000004491b       0x22 build/py/emitnx64.o
+  .rodata.load_reg_stack_imm.str1.1
+                 0x000000000004493d       0x15 build/py/emitnx64.o
+  .rodata.emit_native_make_function.str1.1
+                 0x0000000000044952       0x3d build/py/emitnx64.o
+  .rodata.emit_native_store_map.str1.1
+                 0x000000000004498f       0x4d build/py/emitnx64.o
+  .rodata.emit_native_end_finally.str1.1
+                 0x00000000000449dc       0x16 build/py/emitnx64.o
+  .rodata.emit_native_end_pass.str1.1
+                 0x00000000000449f2       0x77 build/py/emitnx64.o
+                                          0xa2 (size before relaxing)
+  .rodata.emit_native_start_pass.str1.1
+                 0x0000000000044a69       0x28 build/py/emitnx64.o
+  .rodata.emit_native_unpack_ex.str1.1
+                 0x0000000000044a91       0x1a build/py/emitnx64.o
+  .rodata.emit_native_get_iter.str1.1
+                 0x0000000000044aab       0x15 build/py/emitnx64.o
+  .rodata.emit_native_raise_varargs.str1.1
+                 0x0000000000044ac0       0x21 build/py/emitnx64.o
+  .rodata.emit_native_unary_op.str1.1
+                 0x0000000000044ae1       0x1c build/py/emitnx64.o
+  .rodata.emit_native_store_fast.str1.1
+                 0x0000000000044afd       0x2c build/py/emitnx64.o
+  .rodata.emit_native_jump_helper.str1.1
+                 0x0000000000044b29       0x28 build/py/emitnx64.o
+  .rodata.emit_native_attr.str1.1
+                 0x0000000000044b51       0x19 build/py/emitnx64.o
+  .rodata.emit_native_binary_op.str1.1
+                 0x0000000000044b6a       0x46 build/py/emitnx64.o
+  .rodata.emit_native_store_comp.str1.1
+                 0x0000000000044bb0       0x3a build/py/emitnx64.o
+  .rodata.emit_native_import.str1.1
+                 0x0000000000044bea       0x55 build/py/emitnx64.o
+  .rodata.emit_get_stack_pointer_to_reg_for_pop.str1.1
+                 0x0000000000044c3f       0x18 build/py/emitnx64.o
+  .rodata.emit_native_yield.str1.1
+                 0x0000000000044c57        0xd build/py/emitnx64.o
+  .rodata.emit_native_call_function.str1.1
+                 0x0000000000044c64       0x51 build/py/emitnx64.o
+  .rodata.emit_native_build.str1.1
+                 0x0000000000044cb5       0x5b build/py/emitnx64.o
+  .rodata.emit_native_return_value.str1.1
+                 0x0000000000044d10       0x22 build/py/emitnx64.o
+  .rodata.emit_native_subscr.str1.1
+                 0x0000000000044d32       0x8c build/py/emitnx64.o
+  *fill*         0x0000000000044dbe        0x2 
+  .rodata.CSWTCH.163
+                 0x0000000000044dc0       0x10 build/py/emitnx64.o
+  .rodata.__PRETTY_FUNCTION__.6013
+                 0x0000000000044dd0       0x17 build/py/emitnx64.o
+  *fill*         0x0000000000044de7        0x9 
+  .rodata.__PRETTY_FUNCTION__.6074
+                 0x0000000000044df0       0x15 build/py/emitnx64.o
+  *fill*         0x0000000000044e05        0xb 
+  .rodata.__PRETTY_FUNCTION__.6488
+                 0x0000000000044e10       0x19 build/py/emitnx64.o
+  *fill*         0x0000000000044e29        0x7 
+  .rodata.__PRETTY_FUNCTION__.6375
+                 0x0000000000044e30       0x18 build/py/emitnx64.o
+  *fill*         0x0000000000044e48        0x8 
+  .rodata.__PRETTY_FUNCTION__.6370
+                 0x0000000000044e50       0x18 build/py/emitnx64.o
+  *fill*         0x0000000000044e68        0x8 
+  .rodata.__PRETTY_FUNCTION__.6364
+                 0x0000000000044e70       0x18 build/py/emitnx64.o
+  *fill*         0x0000000000044e88        0x8 
+  .rodata.__PRETTY_FUNCTION__.6437
+                 0x0000000000044e90       0x18 build/py/emitnx64.o
+  *fill*         0x0000000000044ea8        0x8 
+  .rodata.__PRETTY_FUNCTION__.6545
+                 0x0000000000044eb0       0x1a build/py/emitnx64.o
+  *fill*         0x0000000000044eca        0x6 
+  .rodata.__PRETTY_FUNCTION__.6539
+                 0x0000000000044ed0       0x18 build/py/emitnx64.o
+  *fill*         0x0000000000044ee8        0x8 
+  .rodata.__PRETTY_FUNCTION__.6496
+                 0x0000000000044ef0       0x17 build/py/emitnx64.o
+  *fill*         0x0000000000044f07        0x9 
+  .rodata.__PRETTY_FUNCTION__.6430
+                 0x0000000000044f10       0x16 build/py/emitnx64.o
+  *fill*         0x0000000000044f26        0xa 
+  .rodata.__PRETTY_FUNCTION__.6616
+                 0x0000000000044f30       0x17 build/py/emitnx64.o
+  *fill*         0x0000000000044f47        0x9 
+  .rodata.__PRETTY_FUNCTION__.6321
+                 0x0000000000044f50       0x1a build/py/emitnx64.o
+  *fill*         0x0000000000044f6a        0x6 
+  .rodata.__PRETTY_FUNCTION__.6635
+                 0x0000000000044f70       0x15 build/py/emitnx64.o
+  .rodata.ops.6660
+                 0x0000000000044f85        0x6 build/py/emitnx64.o
+  *fill*         0x0000000000044f8b        0x5 
+  .rodata.__PRETTY_FUNCTION__.6683
+                 0x0000000000044f90       0x18 build/py/emitnx64.o
+  *fill*         0x0000000000044fa8        0x8 
+  .rodata.__PRETTY_FUNCTION__.6676
+                 0x0000000000044fb0       0x16 build/py/emitnx64.o
+  *fill*         0x0000000000044fc6        0xa 
+  .rodata.__PRETTY_FUNCTION__.6694
+                 0x0000000000044fd0       0x17 build/py/emitnx64.o
+  *fill*         0x0000000000044fe7        0x9 
+  .rodata.__PRETTY_FUNCTION__.6704
+                 0x0000000000044ff0       0x1c build/py/emitnx64.o
+  *fill*         0x000000000004500c        0x4 
+  .rodata.__PRETTY_FUNCTION__.6711
+                 0x0000000000045010       0x16 build/py/emitnx64.o
+  *fill*         0x0000000000045026        0xa 
+  .rodata.__PRETTY_FUNCTION__.6720
+                 0x0000000000045030       0x1a build/py/emitnx64.o
+  *fill*         0x000000000004504a        0x6 
+  .rodata.__PRETTY_FUNCTION__.6735
+                 0x0000000000045050       0x1a build/py/emitnx64.o
+  *fill*         0x000000000004506a        0x6 
+  .rodata.__PRETTY_FUNCTION__.6761
+                 0x0000000000045070       0x19 build/py/emitnx64.o
+  *fill*         0x0000000000045089        0x7 
+  .rodata.__PRETTY_FUNCTION__.6766
+                 0x0000000000045090       0x1a build/py/emitnx64.o
+  *fill*         0x00000000000450aa       0x16 
+  .rodata.__PRETTY_FUNCTION__.6283
+                 0x00000000000450c0       0x26 build/py/emitnx64.o
+  *fill*         0x00000000000450e6        0xa 
+  .rodata.__PRETTY_FUNCTION__.6313
+                 0x00000000000450f0       0x1c build/py/emitnx64.o
+  *fill*         0x000000000004510c        0x4 
+  .rodata.__PRETTY_FUNCTION__.6095
+                 0x0000000000045110        0xd build/py/emitnx64.o
+  .rodata.reg_local_table
+                 0x000000000004511d        0x3 build/py/emitnx64.o
+  .rodata.get_label_dest.part.4.str1.1
+                 0x0000000000045120        0xf build/py/asmx86.o
+                                          0x2f (size before relaxing)
+  .rodata.asm_x86_entry.str1.1
+                 0x000000000004512f       0x10 build/py/asmx86.o
+  .rodata.asm_x86_call_ind.str1.1
+                 0x000000000004512f        0xc build/py/asmx86.o
+  *fill*         0x000000000004513b        0x5 
+  .rodata.__PRETTY_FUNCTION__.3258
+                 0x0000000000045140       0x11 build/py/asmx86.o
+  *fill*         0x0000000000045151        0x7 
+  .rodata.__PRETTY_FUNCTION__.3212
+                 0x0000000000045158        0xe build/py/asmx86.o
+  *fill*         0x0000000000045166        0x2 
+  .rodata.__PRETTY_FUNCTION__.3192
+                 0x0000000000045168        0xf build/py/asmx86.o
+  .rodata.adjust_stack.str1.1
+                 0x0000000000045177       0x98 build/py/emitnx86.o
+  .rodata.emit_native_leave_exc_stack.str1.1
+                 0x0000000000045177       0x19 build/py/emitnx86.o
+  .rodata.emit_native_load_fast.str1.1
+                 0x0000000000045177       0x22 build/py/emitnx86.o
+  .rodata.load_reg_stack_imm.str1.1
+                 0x0000000000045177       0x15 build/py/emitnx86.o
+  .rodata.emit_native_make_function.str1.1
+                 0x0000000000045177       0x3d build/py/emitnx86.o
+  .rodata.emit_native_store_map.str1.1
+                 0x0000000000045177       0x4d build/py/emitnx86.o
+  .rodata.emit_native_end_finally.str1.1
+                 0x0000000000045177       0x16 build/py/emitnx86.o
+  .rodata.emit_native_end_pass.str1.1
+                 0x0000000000045177       0xa2 build/py/emitnx86.o
+  .rodata.emit_native_start_pass.str1.1
+                 0x0000000000045177       0x28 build/py/emitnx86.o
+  .rodata.emit_native_attr.str1.1
+                 0x0000000000045177       0x33 build/py/emitnx86.o
+  .rodata.emit_native_store_global.str1.1
+                 0x0000000000045177       0x15 build/py/emitnx86.o
+  .rodata.emit_native_raise_varargs.str1.1
+                 0x0000000000045177       0x21 build/py/emitnx86.o
+  .rodata.emit_native_unary_op.str1.1
+                 0x0000000000045177       0x1c build/py/emitnx86.o
+  .rodata.emit_native_store_fast.str1.1
+                 0x0000000000045177       0x2c build/py/emitnx86.o
+  .rodata.emit_native_jump_helper.str1.1
+                 0x0000000000045177       0x28 build/py/emitnx86.o
+  .rodata.emit_native_binary_op.str1.1
+                 0x0000000000045177       0x46 build/py/emitnx86.o
+  .rodata.emit_native_store_comp.str1.1
+                 0x0000000000045177       0x3a build/py/emitnx86.o
+  .rodata.emit_native_import.str1.1
+                 0x0000000000045177       0x55 build/py/emitnx86.o
+  .rodata.emit_get_stack_pointer_to_reg_for_pop.str1.1
+                 0x0000000000045177       0x18 build/py/emitnx86.o
+  .rodata.emit_native_yield.str1.1
+                 0x0000000000045177        0xd build/py/emitnx86.o
+  .rodata.emit_native_call_function.str1.1
+                 0x0000000000045177       0x51 build/py/emitnx86.o
+  .rodata.emit_native_build.str1.1
+                 0x0000000000045177       0x5b build/py/emitnx86.o
+  .rodata.emit_native_return_value.str1.1
+                 0x0000000000045177       0x22 build/py/emitnx86.o
+  .rodata.emit_native_subscr.str1.1
+                 0x0000000000045177       0x8c build/py/emitnx86.o
+  *fill*         0x0000000000045177        0x9 
+  .rodata.CSWTCH.151
+                 0x0000000000045180       0x10 build/py/emitnx86.o
+  .rodata.__PRETTY_FUNCTION__.6001
+                 0x0000000000045190       0x17 build/py/emitnx86.o
+  *fill*         0x00000000000451a7        0x9 
+  .rodata.__PRETTY_FUNCTION__.6062
+                 0x00000000000451b0       0x15 build/py/emitnx86.o
+  *fill*         0x00000000000451c5        0xb 
+  .rodata.__PRETTY_FUNCTION__.6476
+                 0x00000000000451d0       0x19 build/py/emitnx86.o
+  *fill*         0x00000000000451e9        0x7 
+  .rodata.__PRETTY_FUNCTION__.6363
+                 0x00000000000451f0       0x18 build/py/emitnx86.o
+  *fill*         0x0000000000045208        0x8 
+  .rodata.__PRETTY_FUNCTION__.6358
+                 0x0000000000045210       0x18 build/py/emitnx86.o
+  *fill*         0x0000000000045228        0x8 
+  .rodata.__PRETTY_FUNCTION__.6352
+                 0x0000000000045230       0x18 build/py/emitnx86.o
+  *fill*         0x0000000000045248        0x8 
+  .rodata.__PRETTY_FUNCTION__.6425
+                 0x0000000000045250       0x18 build/py/emitnx86.o
+  *fill*         0x0000000000045268        0x8 
+  .rodata.__PRETTY_FUNCTION__.6533
+                 0x0000000000045270       0x1a build/py/emitnx86.o
+  *fill*         0x000000000004528a        0x6 
+  .rodata.__PRETTY_FUNCTION__.6527
+                 0x0000000000045290       0x18 build/py/emitnx86.o
+  *fill*         0x00000000000452a8        0x8 
+  .rodata.__PRETTY_FUNCTION__.6484
+                 0x00000000000452b0       0x17 build/py/emitnx86.o
+  *fill*         0x00000000000452c7        0x9 
+  .rodata.__PRETTY_FUNCTION__.6418
+                 0x00000000000452d0       0x16 build/py/emitnx86.o
+  *fill*         0x00000000000452e6        0xa 
+  .rodata.__PRETTY_FUNCTION__.6604
+                 0x00000000000452f0       0x17 build/py/emitnx86.o
+  *fill*         0x0000000000045307        0x9 
+  .rodata.__PRETTY_FUNCTION__.6309
+                 0x0000000000045310       0x1a build/py/emitnx86.o
+  *fill*         0x000000000004532a        0x6 
+  .rodata.__PRETTY_FUNCTION__.6623
+                 0x0000000000045330       0x15 build/py/emitnx86.o
+  .rodata.ops.6648
+                 0x0000000000045345        0x6 build/py/emitnx86.o
+  *fill*         0x000000000004534b        0x5 
+  .rodata.__PRETTY_FUNCTION__.6671
+                 0x0000000000045350       0x18 build/py/emitnx86.o
+  *fill*         0x0000000000045368        0x8 
+  .rodata.__PRETTY_FUNCTION__.6664
+                 0x0000000000045370       0x16 build/py/emitnx86.o
+  *fill*         0x0000000000045386        0xa 
+  .rodata.__PRETTY_FUNCTION__.6682
+                 0x0000000000045390       0x17 build/py/emitnx86.o
+  *fill*         0x00000000000453a7        0x9 
+  .rodata.__PRETTY_FUNCTION__.6692
+                 0x00000000000453b0       0x1c build/py/emitnx86.o
+  *fill*         0x00000000000453cc        0x4 
+  .rodata.__PRETTY_FUNCTION__.6699
+                 0x00000000000453d0       0x16 build/py/emitnx86.o
+  *fill*         0x00000000000453e6        0xa 
+  .rodata.__PRETTY_FUNCTION__.6708
+                 0x00000000000453f0       0x1a build/py/emitnx86.o
+  *fill*         0x000000000004540a        0x6 
+  .rodata.__PRETTY_FUNCTION__.6723
+                 0x0000000000045410       0x1a build/py/emitnx86.o
+  *fill*         0x000000000004542a        0x6 
+  .rodata.__PRETTY_FUNCTION__.6749
+                 0x0000000000045430       0x19 build/py/emitnx86.o
+  *fill*         0x0000000000045449        0x7 
+  .rodata.__PRETTY_FUNCTION__.6754
+                 0x0000000000045450       0x1a build/py/emitnx86.o
+  *fill*         0x000000000004546a       0x16 
+  .rodata.__PRETTY_FUNCTION__.6271
+                 0x0000000000045480       0x26 build/py/emitnx86.o
+  *fill*         0x00000000000454a6        0xa 
+  .rodata.__PRETTY_FUNCTION__.6301
+                 0x00000000000454b0       0x1c build/py/emitnx86.o
+  *fill*         0x00000000000454cc        0x4 
+  .rodata.__PRETTY_FUNCTION__.6083
+                 0x00000000000454d0        0xd build/py/emitnx86.o
+  .rodata.reg_local_table
+                 0x00000000000454dd        0x3 build/py/emitnx86.o
+  .rodata.mp_f_n_args
+                 0x00000000000454e0       0x32 build/py/emitnx86.o
+  .rodata.get_label_dest.str1.1
+                 0x0000000000045512       0x11 build/py/asmthumb.o
+                                          0x31 (size before relaxing)
+  .rodata.asm_thumb_entry.str1.1
+                 0x0000000000045523       0x10 build/py/asmthumb.o
+  .rodata.asm_thumb_format_4.str1.1
+                 0x0000000000045523       0x37 build/py/asmthumb.o
+  .rodata.asm_thumb_mov_reg_i16.str1.1
+                 0x000000000004555a       0x1d build/py/asmthumb.o
+  .rodata.asm_thumb_mov_local_reg.str1.1
+                 0x0000000000045577       0x35 build/py/asmthumb.o
+  *fill*         0x00000000000455ac        0x4 
+  .rodata.__PRETTY_FUNCTION__.4954
+                 0x00000000000455b0       0x1d build/py/asmthumb.o
+  *fill*         0x00000000000455cd        0x3 
+  .rodata.__PRETTY_FUNCTION__.4947
+                 0x00000000000455d0       0x18 build/py/asmthumb.o
+  *fill*         0x00000000000455e8        0x8 
+  .rodata.__PRETTY_FUNCTION__.4940
+                 0x00000000000455f0       0x18 build/py/asmthumb.o
+  .rodata.__PRETTY_FUNCTION__.4871
+                 0x0000000000045608        0xf build/py/asmthumb.o
+  *fill*         0x0000000000045617        0x9 
+  .rodata.__PRETTY_FUNCTION__.4902
+                 0x0000000000045620       0x16 build/py/asmthumb.o
+  *fill*         0x0000000000045636        0xa 
+  .rodata.__PRETTY_FUNCTION__.4889
+                 0x0000000000045640       0x13 build/py/asmthumb.o
+  *fill*         0x0000000000045653        0xd 
+  .rodata.__PRETTY_FUNCTION__.4855
+                 0x0000000000045660       0x10 build/py/asmthumb.o
+  .rodata.adjust_stack.str1.1
+                 0x0000000000045670       0x98 build/py/emitnthumb.o
+  .rodata.emit_native_leave_exc_stack.str1.1
+                 0x0000000000045670       0x19 build/py/emitnthumb.o
+  .rodata.asm_thumb_add_rlo_rlo_rlo.str1.1
+                 0x0000000000045670       0x11 build/py/emitnthumb.o
+                                          0x48 (size before relaxing)
+  .rodata.emit_native_load_fast.str1.1
+                 0x0000000000045681       0x22 build/py/emitnthumb.o
+  .rodata.load_reg_stack_imm.str1.1
+                 0x0000000000045681       0x15 build/py/emitnthumb.o
+  .rodata.emit_native_make_function.str1.1
+                 0x0000000000045681       0x3d build/py/emitnthumb.o
+  .rodata.emit_native_store_map.str1.1
+                 0x0000000000045681       0x4d build/py/emitnthumb.o
+  .rodata.emit_native_end_finally.str1.1
+                 0x0000000000045681       0x16 build/py/emitnthumb.o
+  .rodata.emit_native_end_pass.str1.1
+                 0x0000000000045681       0xa2 build/py/emitnthumb.o
+  .rodata.emit_native_start_pass.str1.1
+                 0x0000000000045681       0x28 build/py/emitnthumb.o
+  .rodata.emit_native_unpack_ex.str1.1
+                 0x0000000000045681       0x1a build/py/emitnthumb.o
+  .rodata.emit_native_get_iter.str1.1
+                 0x0000000000045681       0x15 build/py/emitnthumb.o
+  .rodata.emit_native_raise_varargs.str1.1
+                 0x0000000000045681       0x21 build/py/emitnthumb.o
+  .rodata.emit_native_unary_op.str1.1
+                 0x0000000000045681       0x1c build/py/emitnthumb.o
+  .rodata.emit_native_jump_helper.str1.1
+                 0x0000000000045681       0x28 build/py/emitnthumb.o
+  .rodata.emit_native_store_fast.str1.1
+                 0x0000000000045681       0x2c build/py/emitnthumb.o
+  .rodata.emit_native_attr.str1.1
+                 0x0000000000045681       0x19 build/py/emitnthumb.o
+  .rodata.emit_native_binary_op.str1.1
+                 0x0000000000045681       0x46 build/py/emitnthumb.o
+  .rodata.emit_native_store_comp.str1.1
+                 0x0000000000045681       0x3a build/py/emitnthumb.o
+  .rodata.emit_native_import.str1.1
+                 0x0000000000045681       0x55 build/py/emitnthumb.o
+  .rodata.emit_get_stack_pointer_to_reg_for_pop.str1.1
+                 0x0000000000045681       0x18 build/py/emitnthumb.o
+  .rodata.emit_native_yield.str1.1
+                 0x0000000000045681        0xd build/py/emitnthumb.o
+  .rodata.emit_native_call_function.str1.1
+                 0x0000000000045681       0x51 build/py/emitnthumb.o
+  .rodata.emit_native_build.str1.1
+                 0x0000000000045681       0x5b build/py/emitnthumb.o
+  .rodata.emit_native_return_value.str1.1
+                 0x0000000000045681       0x22 build/py/emitnthumb.o
+  .rodata.emit_native_subscr.str1.1
+                 0x0000000000045681       0x8c build/py/emitnthumb.o
+  *fill*         0x0000000000045681        0xf 
+  .rodata.CSWTCH.273
+                 0x0000000000045690       0x10 build/py/emitnthumb.o
+  .rodata.__PRETTY_FUNCTION__.6080
+                 0x00000000000456a0       0x17 build/py/emitnthumb.o
+  *fill*         0x00000000000456b7        0x9 
+  .rodata.__PRETTY_FUNCTION__.6141
+                 0x00000000000456c0       0x15 build/py/emitnthumb.o
+  *fill*         0x00000000000456d5        0xb 
+  .rodata.__PRETTY_FUNCTION__.6555
+                 0x00000000000456e0       0x19 build/py/emitnthumb.o
+  *fill*         0x00000000000456f9        0x7 
+  .rodata.__PRETTY_FUNCTION__.6442
+                 0x0000000000045700       0x18 build/py/emitnthumb.o
+  *fill*         0x0000000000045718        0x8 
+  .rodata.__PRETTY_FUNCTION__.6437
+                 0x0000000000045720       0x18 build/py/emitnthumb.o
+  *fill*         0x0000000000045738        0x8 
+  .rodata.__PRETTY_FUNCTION__.6431
+                 0x0000000000045740       0x18 build/py/emitnthumb.o
+  *fill*         0x0000000000045758        0x8 
+  .rodata.__PRETTY_FUNCTION__.6504
+                 0x0000000000045760       0x18 build/py/emitnthumb.o
+  *fill*         0x0000000000045778        0x8 
+  .rodata.__PRETTY_FUNCTION__.6612
+                 0x0000000000045780       0x1a build/py/emitnthumb.o
+  *fill*         0x000000000004579a        0x6 
+  .rodata.__PRETTY_FUNCTION__.6606
+                 0x00000000000457a0       0x18 build/py/emitnthumb.o
+  *fill*         0x00000000000457b8        0x8 
+  .rodata.__PRETTY_FUNCTION__.6563
+                 0x00000000000457c0       0x17 build/py/emitnthumb.o
+  *fill*         0x00000000000457d7        0x9 
+  .rodata.__PRETTY_FUNCTION__.6497
+                 0x00000000000457e0       0x16 build/py/emitnthumb.o
+  *fill*         0x00000000000457f6        0xa 
+  .rodata.__PRETTY_FUNCTION__.6683
+                 0x0000000000045800       0x17 build/py/emitnthumb.o
+  *fill*         0x0000000000045817        0x9 
+  .rodata.__PRETTY_FUNCTION__.6388
+                 0x0000000000045820       0x1a build/py/emitnthumb.o
+  *fill*         0x000000000004583a        0x6 
+  .rodata.__PRETTY_FUNCTION__.6702
+                 0x0000000000045840       0x15 build/py/emitnthumb.o
+  .rodata.ret.6728
+                 0x0000000000045855        0x6 build/py/emitnthumb.o
+  *fill*         0x000000000004585b        0x5 
+  .rodata.ops.6727
+                 0x0000000000045860        0xc build/py/emitnthumb.o
+  *fill*         0x000000000004586c        0x4 
+  .rodata.__PRETTY_FUNCTION__.6751
+                 0x0000000000045870       0x18 build/py/emitnthumb.o
+  *fill*         0x0000000000045888        0x8 
+  .rodata.__PRETTY_FUNCTION__.6744
+                 0x0000000000045890       0x16 build/py/emitnthumb.o
+  *fill*         0x00000000000458a6        0xa 
+  .rodata.__PRETTY_FUNCTION__.6762
+                 0x00000000000458b0       0x17 build/py/emitnthumb.o
+  *fill*         0x00000000000458c7        0x9 
+  .rodata.__PRETTY_FUNCTION__.6772
+                 0x00000000000458d0       0x1c build/py/emitnthumb.o
+  *fill*         0x00000000000458ec        0x4 
+  .rodata.__PRETTY_FUNCTION__.6779
+                 0x00000000000458f0       0x16 build/py/emitnthumb.o
+  *fill*         0x0000000000045906        0xa 
+  .rodata.__PRETTY_FUNCTION__.6788
+                 0x0000000000045910       0x1a build/py/emitnthumb.o
+  *fill*         0x000000000004592a        0x6 
+  .rodata.__PRETTY_FUNCTION__.6803
+                 0x0000000000045930       0x1a build/py/emitnthumb.o
+  *fill*         0x000000000004594a        0x6 
+  .rodata.__PRETTY_FUNCTION__.6829
+                 0x0000000000045950       0x19 build/py/emitnthumb.o
+  *fill*         0x0000000000045969        0x7 
+  .rodata.__PRETTY_FUNCTION__.6834
+                 0x0000000000045970       0x1a build/py/emitnthumb.o
+  *fill*         0x000000000004598a        0x6 
+  .rodata.__PRETTY_FUNCTION__.2113
+                 0x0000000000045990       0x13 build/py/emitnthumb.o
+  *fill*         0x00000000000459a3       0x1d 
+  .rodata.__PRETTY_FUNCTION__.6350
+                 0x00000000000459c0       0x26 build/py/emitnthumb.o
+  *fill*         0x00000000000459e6        0xa 
+  .rodata.__PRETTY_FUNCTION__.6380
+                 0x00000000000459f0       0x1c build/py/emitnthumb.o
+  *fill*         0x0000000000045a0c        0x4 
+  .rodata.__PRETTY_FUNCTION__.6162
+                 0x0000000000045a10        0xd build/py/emitnthumb.o
+  .rodata.reg_local_table
+                 0x0000000000045a1d        0x3 build/py/emitnthumb.o
+  .rodata.get_arg_addr.str1.1
+                 0x0000000000045a20       0x2b build/py/emitinlinethumb.o
+  .rodata.get_arg_label.str1.1
+                 0x0000000000045a4b       0x2c build/py/emitinlinethumb.o
+  .rodata.get_arg_str.str1.1
+                 0x0000000000045a77        0x1 build/py/emitinlinethumb.o
+  .rodata.get_arg_vfpreg.str1.1
+                 0x0000000000045a77       0x36 build/py/emitinlinethumb.o
+  .rodata.get_arg_reg.str1.1
+                 0x0000000000045aad       0x18 build/py/emitinlinethumb.o
+  .rodata.get_arg_reglist.str1.1
+                 0x0000000000045ac5       0x5c build/py/emitinlinethumb.o
+                                          0x83 (size before relaxing)
+  .rodata.get_arg_i.str1.1
+                 0x0000000000045b21       0x43 build/py/emitinlinethumb.o
+  .rodata.emit_inline_thumb_op.str1.1
+                 0x0000000000045b64       0x90 build/py/emitinlinethumb.o
+                                          0xd8 (size before relaxing)
+  .rodata.emit_inline_thumb_label.str1.1
+                 0x0000000000045bf4       0x21 build/py/emitinlinethumb.o
+  .rodata.emit_inline_thumb_count_params.str1.1
+                 0x0000000000045c15       0x65 build/py/emitinlinethumb.o
+  *fill*         0x0000000000045c7a        0x6 
+  .rodata.__PRETTY_FUNCTION__.5734
+                 0x0000000000045c80       0x18 build/py/emitinlinethumb.o
+  *fill*         0x0000000000045c98        0x8 
+  .rodata.__PRETTY_FUNCTION__.5333
+                 0x0000000000045ca0       0x13 build/py/emitinlinethumb.o
+  *fill*         0x0000000000045cb3        0xd 
+  .rodata.__PRETTY_FUNCTION__.5325
+                 0x0000000000045cc0       0x13 build/py/emitinlinethumb.o
+  *fill*         0x0000000000045cd3        0xd 
+  .rodata.__PRETTY_FUNCTION__.5364
+                 0x0000000000045ce0       0x13 build/py/emitinlinethumb.o
+  *fill*         0x0000000000045cf3        0xd 
+  .rodata.__PRETTY_FUNCTION__.5795
+                 0x0000000000045d00       0x10 build/py/emitinlinethumb.o
+  .rodata.format_vfp_op_table
+                 0x0000000000045d10       0x10 build/py/emitinlinethumb.o
+  .rodata.format_9_10_op_table
+                 0x0000000000045d20       0x18 build/py/emitinlinethumb.o
+  *fill*         0x0000000000045d38        0x8 
+  .rodata.format_4_op_table
+                 0x0000000000045d40       0x3c build/py/emitinlinethumb.o
+  *fill*         0x0000000000045d7c        0x4 
+  .rodata.cc_name_table
+                 0x0000000000045d80       0x2a build/py/emitinlinethumb.o
+  *fill*         0x0000000000045daa        0x6 
+  .rodata.special_reg_name_table
+                 0x0000000000045db0       0x12 build/py/emitinlinethumb.o
+  *fill*         0x0000000000045dc2       0x1e 
+  .rodata.reg_name_table
+                 0x0000000000045de0       0x54 build/py/emitinlinethumb.o
+  .rodata.asm_arm_entry.str1.1
+                 0x0000000000045e34        0xf build/py/asmarm.o
+                                          0x1f (size before relaxing)
+  .rodata.asm_arm_mul_reg_reg_reg.str1.1
+                 0x0000000000045e43        0x9 build/py/asmarm.o
+  .rodata.asm_arm_mov_reg_pcrel.str1.1
+                 0x0000000000045e4c       0x20 build/py/asmarm.o
+  .rodata.asm_arm_bcc_label.str1.1
+                 0x0000000000045e4c       0x2c build/py/asmarm.o
+  .rodata.asm_arm_bl_ind.str1.1
+                 0x0000000000045e78       0x16 build/py/asmarm.o
+  *fill*         0x0000000000045e8e        0x2 
+  .rodata.__PRETTY_FUNCTION__.3297
+                 0x0000000000045e90        0xf build/py/asmarm.o
+  *fill*         0x0000000000045e9f        0x1 
+  .rodata.__PRETTY_FUNCTION__.3285
+                 0x0000000000045ea0       0x12 build/py/asmarm.o
+  *fill*         0x0000000000045eb2        0xe 
+  .rodata.__PRETTY_FUNCTION__.3217
+                 0x0000000000045ec0       0x16 build/py/asmarm.o
+  *fill*         0x0000000000045ed6        0xa 
+  .rodata.__PRETTY_FUNCTION__.3095
+                 0x0000000000045ee0       0x13 build/py/asmarm.o
+  *fill*         0x0000000000045ef3        0x5 
+  .rodata.__PRETTY_FUNCTION__.3118
+                 0x0000000000045ef8        0xe build/py/asmarm.o
+  .rodata.adjust_stack.str1.1
+                 0x0000000000045f06       0x98 build/py/emitnarm.o
+  .rodata.emit_native_leave_exc_stack.str1.1
+                 0x0000000000045f06       0x19 build/py/emitnarm.o
+  .rodata.emit_native_load_fast.str1.1
+                 0x0000000000045f06       0x22 build/py/emitnarm.o
+  .rodata.load_reg_stack_imm.str1.1
+                 0x0000000000045f06       0x15 build/py/emitnarm.o
+  .rodata.emit_native_make_function.str1.1
+                 0x0000000000045f06       0x3d build/py/emitnarm.o
+  .rodata.emit_native_store_map.str1.1
+                 0x0000000000045f06       0x4d build/py/emitnarm.o
+  .rodata.emit_native_end_finally.str1.1
+                 0x0000000000045f06       0x16 build/py/emitnarm.o
+  .rodata.emit_native_end_pass.str1.1
+                 0x0000000000045f06       0xa2 build/py/emitnarm.o
+  .rodata.emit_native_start_pass.str1.1
+                 0x0000000000045f06       0x28 build/py/emitnarm.o
+  .rodata.emit_native_unpack_ex.str1.1
+                 0x0000000000045f06       0x1a build/py/emitnarm.o
+  .rodata.emit_native_get_iter.str1.1
+                 0x0000000000045f06       0x15 build/py/emitnarm.o
+  .rodata.emit_native_raise_varargs.str1.1
+                 0x0000000000045f06       0x21 build/py/emitnarm.o
+  .rodata.emit_native_unary_op.str1.1
+                 0x0000000000045f06       0x1c build/py/emitnarm.o
+  .rodata.emit_native_jump_helper.str1.1
+                 0x0000000000045f06       0x28 build/py/emitnarm.o
+  .rodata.emit_native_store_fast.str1.1
+                 0x0000000000045f06       0x2c build/py/emitnarm.o
+  .rodata.emit_native_attr.str1.1
+                 0x0000000000045f06       0x19 build/py/emitnarm.o
+  .rodata.emit_native_binary_op.str1.1
+                 0x0000000000045f06       0x46 build/py/emitnarm.o
+  .rodata.emit_native_store_comp.str1.1
+                 0x0000000000045f06       0x3a build/py/emitnarm.o
+  .rodata.emit_native_import.str1.1
+                 0x0000000000045f06       0x55 build/py/emitnarm.o
+  .rodata.emit_get_stack_pointer_to_reg_for_pop.str1.1
+                 0x0000000000045f06       0x18 build/py/emitnarm.o
+  .rodata.emit_native_yield.str1.1
+                 0x0000000000045f06        0xd build/py/emitnarm.o
+  .rodata.emit_native_call_function.str1.1
+                 0x0000000000045f06       0x51 build/py/emitnarm.o
+  .rodata.emit_native_build.str1.1
+                 0x0000000000045f06       0x5b build/py/emitnarm.o
+  .rodata.emit_native_return_value.str1.1
+                 0x0000000000045f06       0x22 build/py/emitnarm.o
+  .rodata.emit_native_subscr.str1.1
+                 0x0000000000045f06       0x8c build/py/emitnarm.o
+  *fill*         0x0000000000045f06        0xa 
+  .rodata.CSWTCH.265
+                 0x0000000000045f10       0x10 build/py/emitnarm.o
+  .rodata.__PRETTY_FUNCTION__.6014
+                 0x0000000000045f20       0x17 build/py/emitnarm.o
+  *fill*         0x0000000000045f37        0x9 
+  .rodata.__PRETTY_FUNCTION__.6075
+                 0x0000000000045f40       0x15 build/py/emitnarm.o
+  *fill*         0x0000000000045f55        0xb 
+  .rodata.__PRETTY_FUNCTION__.6489
+                 0x0000000000045f60       0x19 build/py/emitnarm.o
+  *fill*         0x0000000000045f79        0x7 
+  .rodata.__PRETTY_FUNCTION__.6376
+                 0x0000000000045f80       0x18 build/py/emitnarm.o
+  *fill*         0x0000000000045f98        0x8 
+  .rodata.__PRETTY_FUNCTION__.6371
+                 0x0000000000045fa0       0x18 build/py/emitnarm.o
+  *fill*         0x0000000000045fb8        0x8 
+  .rodata.__PRETTY_FUNCTION__.6365
+                 0x0000000000045fc0       0x18 build/py/emitnarm.o
+  *fill*         0x0000000000045fd8        0x8 
+  .rodata.__PRETTY_FUNCTION__.6438
+                 0x0000000000045fe0       0x18 build/py/emitnarm.o
+  *fill*         0x0000000000045ff8        0x8 
+  .rodata.__PRETTY_FUNCTION__.6546
+                 0x0000000000046000       0x1a build/py/emitnarm.o
+  *fill*         0x000000000004601a        0x6 
+  .rodata.__PRETTY_FUNCTION__.6540
+                 0x0000000000046020       0x18 build/py/emitnarm.o
+  *fill*         0x0000000000046038        0x8 
+  .rodata.__PRETTY_FUNCTION__.6497
+                 0x0000000000046040       0x17 build/py/emitnarm.o
+  *fill*         0x0000000000046057        0x9 
+  .rodata.__PRETTY_FUNCTION__.6431
+                 0x0000000000046060       0x16 build/py/emitnarm.o
+  *fill*         0x0000000000046076        0xa 
+  .rodata.__PRETTY_FUNCTION__.6617
+                 0x0000000000046080       0x17 build/py/emitnarm.o
+  *fill*         0x0000000000046097        0x9 
+  .rodata.__PRETTY_FUNCTION__.6322
+                 0x00000000000460a0       0x1a build/py/emitnarm.o
+  *fill*         0x00000000000460ba        0x6 
+  .rodata.__PRETTY_FUNCTION__.6636
+                 0x00000000000460c0       0x15 build/py/emitnarm.o
+  *fill*         0x00000000000460d5        0xb 
+  .rodata.ccs.6661
+                 0x00000000000460e0       0x18 build/py/emitnarm.o
+  *fill*         0x00000000000460f8        0x8 
+  .rodata.__PRETTY_FUNCTION__.6684
+                 0x0000000000046100       0x18 build/py/emitnarm.o
+  *fill*         0x0000000000046118        0x8 
+  .rodata.__PRETTY_FUNCTION__.6677
+                 0x0000000000046120       0x16 build/py/emitnarm.o
+  *fill*         0x0000000000046136        0xa 
+  .rodata.__PRETTY_FUNCTION__.6695
+                 0x0000000000046140       0x17 build/py/emitnarm.o
+  *fill*         0x0000000000046157        0x9 
+  .rodata.__PRETTY_FUNCTION__.6705
+                 0x0000000000046160       0x1c build/py/emitnarm.o
+  *fill*         0x000000000004617c        0x4 
+  .rodata.__PRETTY_FUNCTION__.6712
+                 0x0000000000046180       0x16 build/py/emitnarm.o
+  *fill*         0x0000000000046196        0xa 
+  .rodata.__PRETTY_FUNCTION__.6721
+                 0x00000000000461a0       0x1a build/py/emitnarm.o
+  *fill*         0x00000000000461ba        0x6 
+  .rodata.__PRETTY_FUNCTION__.6736
+                 0x00000000000461c0       0x1a build/py/emitnarm.o
+  *fill*         0x00000000000461da        0x6 
+  .rodata.__PRETTY_FUNCTION__.6762
+                 0x00000000000461e0       0x19 build/py/emitnarm.o
+  *fill*         0x00000000000461f9        0x7 
+  .rodata.__PRETTY_FUNCTION__.6767
+                 0x0000000000046200       0x1a build/py/emitnarm.o
+  *fill*         0x000000000004621a        0x6 
+  .rodata.__PRETTY_FUNCTION__.6284
+                 0x0000000000046220       0x26 build/py/emitnarm.o
+  *fill*         0x0000000000046246        0xa 
+  .rodata.__PRETTY_FUNCTION__.6314
+                 0x0000000000046250       0x1c build/py/emitnarm.o
+  *fill*         0x000000000004626c        0x4 
+  .rodata.__PRETTY_FUNCTION__.6096
+                 0x0000000000046270        0xd build/py/emitnarm.o
+  .rodata.reg_local_table
+                 0x000000000004627d        0x3 build/py/emitnarm.o
+  .rodata.get_label_dest.str1.1
+                 0x0000000000046280       0x12 build/py/asmxtensa.o
+                                          0x32 (size before relaxing)
+  .rodata.asm_xtensa_bccz_reg_label.str1.1
+                 0x0000000000046292       0x20 build/py/asmxtensa.o
+  .rodata.asm_xtensa_bcc_reg_reg_label.str1.1
+                 0x00000000000462b2       0x1f build/py/asmxtensa.o
+  *fill*         0x00000000000462d1        0x7 
+  .rodata.__PRETTY_FUNCTION__.2918
+                 0x00000000000462d8        0xf build/py/asmxtensa.o
+  .rodata.adjust_stack.str1.1
+                 0x00000000000462e7       0x98 build/py/emitnxtensa.o
+  .rodata.emit_native_leave_exc_stack.str1.1
+                 0x00000000000462e7       0x19 build/py/emitnxtensa.o
+  .rodata.emit_native_load_fast.str1.1
+                 0x00000000000462e7       0x22 build/py/emitnxtensa.o
+  .rodata.load_reg_stack_imm.str1.1
+                 0x00000000000462e7       0x15 build/py/emitnxtensa.o
+  .rodata.emit_native_make_function.str1.1
+                 0x00000000000462e7       0x3d build/py/emitnxtensa.o
+  .rodata.emit_native_store_map.str1.1
+                 0x00000000000462e7       0x4d build/py/emitnxtensa.o
+  .rodata.emit_native_end_finally.str1.1
+                 0x00000000000462e7       0x16 build/py/emitnxtensa.o
+  .rodata.emit_native_end_pass.str1.1
+                 0x00000000000462e7       0xa2 build/py/emitnxtensa.o
+  .rodata.emit_native_start_pass.str1.1
+                 0x00000000000462e7       0x28 build/py/emitnxtensa.o
+  .rodata.emit_native_unpack_ex.str1.1
+                 0x00000000000462e7       0x1a build/py/emitnxtensa.o
+  .rodata.emit_native_get_iter.str1.1
+                 0x00000000000462e7       0x15 build/py/emitnxtensa.o
+  .rodata.emit_native_raise_varargs.str1.1
+                 0x00000000000462e7       0x21 build/py/emitnxtensa.o
+  .rodata.emit_native_unary_op.str1.1
+                 0x00000000000462e7       0x1c build/py/emitnxtensa.o
+  .rodata.emit_native_jump_helper.str1.1
+                 0x00000000000462e7       0x28 build/py/emitnxtensa.o
+  .rodata.emit_native_store_fast.str1.1
+                 0x00000000000462e7       0x2c build/py/emitnxtensa.o
+  .rodata.emit_native_attr.str1.1
+                 0x00000000000462e7       0x19 build/py/emitnxtensa.o
+  .rodata.emit_native_binary_op.str1.1
+                 0x00000000000462e7       0x46 build/py/emitnxtensa.o
+  .rodata.emit_native_store_comp.str1.1
+                 0x00000000000462e7       0x3a build/py/emitnxtensa.o
+  .rodata.emit_native_import.str1.1
+                 0x00000000000462e7       0x55 build/py/emitnxtensa.o
+  .rodata.emit_get_stack_pointer_to_reg_for_pop.str1.1
+                 0x00000000000462e7       0x18 build/py/emitnxtensa.o
+  .rodata.emit_native_yield.str1.1
+                 0x00000000000462e7        0xd build/py/emitnxtensa.o
+  .rodata.emit_native_call_function.str1.1
+                 0x00000000000462e7       0x51 build/py/emitnxtensa.o
+  .rodata.emit_native_build.str1.1
+                 0x00000000000462e7       0x5b build/py/emitnxtensa.o
+  .rodata.emit_native_return_value.str1.1
+                 0x00000000000462e7       0x22 build/py/emitnxtensa.o
+  .rodata.emit_native_subscr.str1.1
+                 0x00000000000462e7       0x8c build/py/emitnxtensa.o
+  *fill*         0x00000000000462e7        0x9 
+  .rodata.CSWTCH.249
+                 0x00000000000462f0       0x10 build/py/emitnxtensa.o
+  .rodata.__PRETTY_FUNCTION__.6109
+                 0x0000000000046300       0x17 build/py/emitnxtensa.o
+  *fill*         0x0000000000046317        0x9 
+  .rodata.__PRETTY_FUNCTION__.6170
+                 0x0000000000046320       0x15 build/py/emitnxtensa.o
+  *fill*         0x0000000000046335        0xb 
+  .rodata.__PRETTY_FUNCTION__.6584
+                 0x0000000000046340       0x19 build/py/emitnxtensa.o
+  *fill*         0x0000000000046359        0x7 
+  .rodata.__PRETTY_FUNCTION__.6471
+                 0x0000000000046360       0x18 build/py/emitnxtensa.o
+  *fill*         0x0000000000046378        0x8 
+  .rodata.__PRETTY_FUNCTION__.6466
+                 0x0000000000046380       0x18 build/py/emitnxtensa.o
+  *fill*         0x0000000000046398        0x8 
+  .rodata.__PRETTY_FUNCTION__.6460
+                 0x00000000000463a0       0x18 build/py/emitnxtensa.o
+  *fill*         0x00000000000463b8        0x8 
+  .rodata.__PRETTY_FUNCTION__.6533
+                 0x00000000000463c0       0x18 build/py/emitnxtensa.o
+  *fill*         0x00000000000463d8        0x8 
+  .rodata.__PRETTY_FUNCTION__.6641
+                 0x00000000000463e0       0x1a build/py/emitnxtensa.o
+  *fill*         0x00000000000463fa        0x6 
+  .rodata.__PRETTY_FUNCTION__.6635
+                 0x0000000000046400       0x18 build/py/emitnxtensa.o
+  *fill*         0x0000000000046418        0x8 
+  .rodata.__PRETTY_FUNCTION__.6592
+                 0x0000000000046420       0x17 build/py/emitnxtensa.o
+  *fill*         0x0000000000046437        0x9 
+  .rodata.__PRETTY_FUNCTION__.6526
+                 0x0000000000046440       0x16 build/py/emitnxtensa.o
+  *fill*         0x0000000000046456        0xa 
+  .rodata.__PRETTY_FUNCTION__.6712
+                 0x0000000000046460       0x17 build/py/emitnxtensa.o
+  *fill*         0x0000000000046477        0x9 
+  .rodata.__PRETTY_FUNCTION__.6417
+                 0x0000000000046480       0x1a build/py/emitnxtensa.o
+  *fill*         0x000000000004649a        0x6 
+  .rodata.__PRETTY_FUNCTION__.6731
+                 0x00000000000464a0       0x15 build/py/emitnxtensa.o
+  .rodata.ccs.6756
+                 0x00000000000464b5        0x6 build/py/emitnxtensa.o
+  *fill*         0x00000000000464bb        0x5 
+  .rodata.__PRETTY_FUNCTION__.6780
+                 0x00000000000464c0       0x18 build/py/emitnxtensa.o
+  *fill*         0x00000000000464d8        0x8 
+  .rodata.__PRETTY_FUNCTION__.6773
+                 0x00000000000464e0       0x16 build/py/emitnxtensa.o
+  *fill*         0x00000000000464f6        0xa 
+  .rodata.__PRETTY_FUNCTION__.6791
+                 0x0000000000046500       0x17 build/py/emitnxtensa.o
+  *fill*         0x0000000000046517        0x9 
+  .rodata.__PRETTY_FUNCTION__.6801
+                 0x0000000000046520       0x1c build/py/emitnxtensa.o
+  *fill*         0x000000000004653c        0x4 
+  .rodata.__PRETTY_FUNCTION__.6808
+                 0x0000000000046540       0x16 build/py/emitnxtensa.o
+  *fill*         0x0000000000046556        0xa 
+  .rodata.__PRETTY_FUNCTION__.6817
+                 0x0000000000046560       0x1a build/py/emitnxtensa.o
+  *fill*         0x000000000004657a        0x6 
+  .rodata.__PRETTY_FUNCTION__.6832
+                 0x0000000000046580       0x1a build/py/emitnxtensa.o
+  *fill*         0x000000000004659a        0x6 
+  .rodata.__PRETTY_FUNCTION__.6858
+                 0x00000000000465a0       0x19 build/py/emitnxtensa.o
+  *fill*         0x00000000000465b9        0x7 
+  .rodata.__PRETTY_FUNCTION__.6863
+                 0x00000000000465c0       0x1a build/py/emitnxtensa.o
+  *fill*         0x00000000000465da        0x6 
+  .rodata.__PRETTY_FUNCTION__.6379
+                 0x00000000000465e0       0x26 build/py/emitnxtensa.o
+  *fill*         0x0000000000046606        0xa 
+  .rodata.__PRETTY_FUNCTION__.6409
+                 0x0000000000046610       0x1c build/py/emitnxtensa.o
+  *fill*         0x000000000004662c        0x4 
+  .rodata.__PRETTY_FUNCTION__.6191
+                 0x0000000000046630        0xd build/py/emitnxtensa.o
+  .rodata.reg_local_table
+                 0x000000000004663d        0x3 build/py/emitnxtensa.o
+  .rodata.get_arg_reg.str1.1
+                 0x0000000000046640       0x19 build/py/emitinlinextensa.o
+  .rodata.get_arg_label.str1.1
+                 0x0000000000046640       0x2c build/py/emitinlinextensa.o
+  .rodata.get_arg_i.str1.1
+                 0x0000000000046640       0x2a build/py/emitinlinextensa.o
+                                          0x42 (size before relaxing)
+  .rodata.emit_inline_xtensa_op.str1.1
+                 0x000000000004666a       0x36 build/py/emitinlinextensa.o
+  .rodata.emit_inline_xtensa_label.str1.1
+                 0x00000000000466a0       0x19 build/py/emitinlinextensa.o
+                                          0x3a (size before relaxing)
+  .rodata.emit_inline_xtensa_count_params.str1.1
+                 0x00000000000466b9       0x66 build/py/emitinlinextensa.o
+  *fill*         0x000000000004671f        0x1 
+  .rodata.__PRETTY_FUNCTION__.5586
+                 0x0000000000046720       0x19 build/py/emitinlinextensa.o
+  *fill*         0x0000000000046739        0x7 
+  .rodata.opcode_table_3arg
+                 0x0000000000046740       0x64 build/py/emitinlinextensa.o
+  *fill*         0x00000000000467a4       0x1c 
+  .rodata.reg_name_table
+                 0x00000000000467c0       0x40 build/py/emitinlinextensa.o
+  .rodata.adjust_stack.str1.1
+                 0x0000000000046800       0x98 build/py/emitnxtensawin.o
+  .rodata.emit_native_leave_exc_stack.str1.1
+                 0x0000000000046800       0x19 build/py/emitnxtensawin.o
+  .rodata.emit_native_load_fast.str1.1
+                 0x0000000000046800       0x22 build/py/emitnxtensawin.o
+  .rodata.load_reg_stack_imm.str1.1
+                 0x0000000000046800       0x15 build/py/emitnxtensawin.o
+  .rodata.emit_native_make_function.str1.1
+                 0x0000000000046800       0x3d build/py/emitnxtensawin.o
+  .rodata.emit_native_store_map.str1.1
+                 0x0000000000046800       0x4d build/py/emitnxtensawin.o
+  .rodata.emit_native_end_finally.str1.1
+                 0x0000000000046800       0x16 build/py/emitnxtensawin.o
+  .rodata.emit_native_end_pass.str1.1
+                 0x0000000000046800       0xa2 build/py/emitnxtensawin.o
+  .rodata.emit_native_start_pass.str1.1
+                 0x0000000000046800       0x28 build/py/emitnxtensawin.o
+  .rodata.emit_native_unpack_ex.str1.1
+                 0x0000000000046800       0x1a build/py/emitnxtensawin.o
+  .rodata.emit_native_get_iter.str1.1
+                 0x0000000000046800       0x15 build/py/emitnxtensawin.o
+  .rodata.emit_native_raise_varargs.str1.1
+                 0x0000000000046800       0x21 build/py/emitnxtensawin.o
+  .rodata.emit_native_unary_op.str1.1
+                 0x0000000000046800       0x1c build/py/emitnxtensawin.o
+  .rodata.emit_native_jump_helper.str1.1
+                 0x0000000000046800       0x28 build/py/emitnxtensawin.o
+  .rodata.emit_native_store_fast.str1.1
+                 0x0000000000046800       0x2c build/py/emitnxtensawin.o
+  .rodata.emit_native_attr.str1.1
+                 0x0000000000046800       0x19 build/py/emitnxtensawin.o
+  .rodata.emit_native_binary_op.str1.1
+                 0x0000000000046800       0x46 build/py/emitnxtensawin.o
+  .rodata.emit_native_store_comp.str1.1
+                 0x0000000000046800       0x3a build/py/emitnxtensawin.o
+  .rodata.emit_native_import.str1.1
+                 0x0000000000046800       0x55 build/py/emitnxtensawin.o
+  .rodata.emit_get_stack_pointer_to_reg_for_pop.str1.1
+                 0x0000000000046800       0x18 build/py/emitnxtensawin.o
+  .rodata.emit_native_yield.str1.1
+                 0x0000000000046800        0xd build/py/emitnxtensawin.o
+  .rodata.emit_native_call_function.str1.1
+                 0x0000000000046800       0x51 build/py/emitnxtensawin.o
+  .rodata.emit_native_build.str1.1
+                 0x0000000000046800       0x5b build/py/emitnxtensawin.o
+  .rodata.emit_native_return_value.str1.1
+                 0x0000000000046800       0x22 build/py/emitnxtensawin.o
+  .rodata.emit_native_subscr.str1.1
+                 0x0000000000046800       0x8c build/py/emitnxtensawin.o
+  .rodata.CSWTCH.250
+                 0x0000000000046800       0x10 build/py/emitnxtensawin.o
+  .rodata.__PRETTY_FUNCTION__.6109
+                 0x0000000000046810       0x17 build/py/emitnxtensawin.o
+  *fill*         0x0000000000046827        0x9 
+  .rodata.__PRETTY_FUNCTION__.6170
+                 0x0000000000046830       0x15 build/py/emitnxtensawin.o
+  *fill*         0x0000000000046845        0xb 
+  .rodata.__PRETTY_FUNCTION__.6587
+                 0x0000000000046850       0x19 build/py/emitnxtensawin.o
+  *fill*         0x0000000000046869        0x7 
+  .rodata.__PRETTY_FUNCTION__.6474
+                 0x0000000000046870       0x18 build/py/emitnxtensawin.o
+  *fill*         0x0000000000046888        0x8 
+  .rodata.__PRETTY_FUNCTION__.6469
+                 0x0000000000046890       0x18 build/py/emitnxtensawin.o
+  *fill*         0x00000000000468a8        0x8 
+  .rodata.__PRETTY_FUNCTION__.6463
+                 0x00000000000468b0       0x18 build/py/emitnxtensawin.o
+  *fill*         0x00000000000468c8        0x8 
+  .rodata.__PRETTY_FUNCTION__.6536
+                 0x00000000000468d0       0x18 build/py/emitnxtensawin.o
+  *fill*         0x00000000000468e8        0x8 
+  .rodata.__PRETTY_FUNCTION__.6644
+                 0x00000000000468f0       0x1a build/py/emitnxtensawin.o
+  *fill*         0x000000000004690a        0x6 
+  .rodata.__PRETTY_FUNCTION__.6638
+                 0x0000000000046910       0x18 build/py/emitnxtensawin.o
+  *fill*         0x0000000000046928        0x8 
+  .rodata.__PRETTY_FUNCTION__.6595
+                 0x0000000000046930       0x17 build/py/emitnxtensawin.o
+  *fill*         0x0000000000046947        0x9 
+  .rodata.__PRETTY_FUNCTION__.6529
+                 0x0000000000046950       0x16 build/py/emitnxtensawin.o
+  *fill*         0x0000000000046966        0xa 
+  .rodata.__PRETTY_FUNCTION__.6715
+                 0x0000000000046970       0x17 build/py/emitnxtensawin.o
+  *fill*         0x0000000000046987        0x9 
+  .rodata.__PRETTY_FUNCTION__.6420
+                 0x0000000000046990       0x1a build/py/emitnxtensawin.o
+  *fill*         0x00000000000469aa        0x6 
+  .rodata.__PRETTY_FUNCTION__.6734
+                 0x00000000000469b0       0x15 build/py/emitnxtensawin.o
+  .rodata.ccs.6759
+                 0x00000000000469c5        0x6 build/py/emitnxtensawin.o
+  *fill*         0x00000000000469cb        0x5 
+  .rodata.__PRETTY_FUNCTION__.6783
+                 0x00000000000469d0       0x18 build/py/emitnxtensawin.o
+  *fill*         0x00000000000469e8        0x8 
+  .rodata.__PRETTY_FUNCTION__.6776
+                 0x00000000000469f0       0x16 build/py/emitnxtensawin.o
+  *fill*         0x0000000000046a06        0xa 
+  .rodata.__PRETTY_FUNCTION__.6794
+                 0x0000000000046a10       0x17 build/py/emitnxtensawin.o
+  *fill*         0x0000000000046a27        0x9 
+  .rodata.__PRETTY_FUNCTION__.6804
+                 0x0000000000046a30       0x1c build/py/emitnxtensawin.o
+  *fill*         0x0000000000046a4c        0x4 
+  .rodata.__PRETTY_FUNCTION__.6811
+                 0x0000000000046a50       0x16 build/py/emitnxtensawin.o
+  *fill*         0x0000000000046a66        0xa 
+  .rodata.__PRETTY_FUNCTION__.6820
+                 0x0000000000046a70       0x1a build/py/emitnxtensawin.o
+  *fill*         0x0000000000046a8a        0x6 
+  .rodata.__PRETTY_FUNCTION__.6835
+                 0x0000000000046a90       0x1a build/py/emitnxtensawin.o
+  *fill*         0x0000000000046aaa        0x6 
+  .rodata.__PRETTY_FUNCTION__.6861
+                 0x0000000000046ab0       0x19 build/py/emitnxtensawin.o
+  *fill*         0x0000000000046ac9        0x7 
+  .rodata.__PRETTY_FUNCTION__.6866
+                 0x0000000000046ad0       0x1a build/py/emitnxtensawin.o
+  *fill*         0x0000000000046aea       0x16 
+  .rodata.__PRETTY_FUNCTION__.6382
+                 0x0000000000046b00       0x26 build/py/emitnxtensawin.o
+  *fill*         0x0000000000046b26        0xa 
+  .rodata.__PRETTY_FUNCTION__.6412
+                 0x0000000000046b30       0x1c build/py/emitnxtensawin.o
+  *fill*         0x0000000000046b4c        0x4 
+  .rodata.__PRETTY_FUNCTION__.6194
+                 0x0000000000046b50        0xd build/py/emitnxtensawin.o
+  .rodata.reg_local_table
+                 0x0000000000046b5d        0x3 build/py/emitnxtensawin.o
+  .rodata.mp_format_float.str1.1
+                 0x0000000000046b60       0x36 build/py/formatfloat.o
+  *fill*         0x0000000000046b96        0xa 
+  .rodata.__PRETTY_FUNCTION__.3593
+                 0x0000000000046ba0       0x10 build/py/formatfloat.o
+  *fill*         0x0000000000046bb0       0x10 
+  .rodata.g_neg_pow
+                 0x0000000000046bc0       0x48 build/py/formatfloat.o
+  *fill*         0x0000000000046c08       0x18 
+  .rodata.g_pos_pow
+                 0x0000000000046c20       0x48 build/py/formatfloat.o
+  .rodata.cst8   0x0000000000046c68       0x30 build/py/formatfloat.o
+  *fill*         0x0000000000046c98        0x8 
+  .rodata.cst16  0x0000000000046ca0       0x10 build/py/formatfloat.o
+                                          0x20 (size before relaxing)
+  .rodata.mp_parse_num_integer.str1.1
+                 0x0000000000046cb0       0x4d build/py/parsenum.o
+  .rodata.mp_parse_num_decimal.str1.1
+                 0x0000000000046cfd       0x1a build/py/parsenum.o
+  *fill*         0x0000000000046d17        0x1 
+  .rodata.cst8   0x0000000000046d18       0x20 build/py/parsenum.o
+                                          0x28 (size before relaxing)
+  .rodata.cst16  0x0000000000046d38       0x10 build/py/parsenum.o
+  .rodata.mp_emit_glue_assign_native.str1.1
+                 0x0000000000046d38       0x69 build/py/emitglue.o
+  *fill*         0x0000000000046da1        0xf 
+  .rodata.__PRETTY_FUNCTION__.4544
+                 0x0000000000046db0       0x1b build/py/emitglue.o
+  .rodata.save_raw_code.str1.1
+                 0x0000000000046dcb       0x2a build/py/persistentcode.o
+  *fill*         0x0000000000046df5        0x3 
+  .rodata.__PRETTY_FUNCTION__.5060
+                 0x0000000000046df8        0x9 build/py/persistentcode.o
+  .rodata.mp_unary_op.str1.1
+                 0x0000000000046e01       0x5f build/py/runtime.o
+  .rodata.mp_unary_op
+                 0x0000000000046e60       0x24 build/py/runtime.o
+  .rodata.mp_call_function_n_kw.str1.1
+                 0x0000000000046e84       0x1b build/py/runtime.o
+  .rodata.checked_fun_call.str1.1
+                 0x0000000000046e9f       0x25 build/py/runtime.o
+  .rodata.mp_load_method_maybe.str1.1
+                 0x0000000000046ec4       0x2e build/py/runtime.o
+  .rodata.mp_getiter.str1.1
+                 0x0000000000046ef2       0x20 build/py/runtime.o
+  .rodata.mp_iternext_allow_raise.str1.1
+                 0x0000000000046f12       0x1e build/py/runtime.o
+  .rodata.m_malloc_fail.str1.1
+                 0x0000000000046f30       0x57 build/py/runtime.o
+  .rodata.mp_binary_op.str1.1
+                 0x0000000000046f87       0x3a build/py/runtime.o
+                                          0x49 (size before relaxing)
+  *fill*         0x0000000000046fc1        0x3 
+  .rodata.mp_binary_op
+                 0x0000000000046fc4       0x90 build/py/runtime.o
+  *fill*         0x0000000000047054        0x4 
+  .rodata.__PRETTY_FUNCTION__.5294
+                 0x0000000000047058        0xb build/py/runtime.o
+  *fill*         0x0000000000047063        0xd 
+  .rodata.__PRETTY_FUNCTION__.5268
+                 0x0000000000047070       0x15 build/py/runtime.o
+  *fill*         0x0000000000047085        0x3 
+  .rodata.__PRETTY_FUNCTION__.5038
+                 0x0000000000047088        0xc build/py/runtime.o
+  .rodata.mp_arg_check_num_sig.str1.1
+                 0x0000000000047094       0xc2 build/py/argcheck.o
+  .rodata.mp_arg_parse_all.str1.1
+                 0x0000000000047156       0x9b build/py/argcheck.o
+  .rodata.mp_arg_error_unimpl_kw.str1.1
+                 0x00000000000471f1       0x42 build/py/argcheck.o
+  *fill*         0x0000000000047233        0xd 
+  .rodata.__PRETTY_FUNCTION__.4169
+                 0x0000000000047240       0x11 build/py/argcheck.o
+  .rodata.mp_map_lookup.str1.1
+                 0x0000000000047251       0x3b build/py/map.o
+  *fill*         0x000000000004728c        0x4 
+  .rodata.__PRETTY_FUNCTION__.4430
+                 0x0000000000047290        0xe build/py/map.o
+  *fill*         0x000000000004729e        0x2 
+  .rodata.hash_allocation_sizes
+                 0x00000000000472a0       0x44 build/py/map.o
+  .rodata.mp_obj_print_helper.str1.1
+                 0x00000000000472e4        0xb build/py/obj.o
+  .rodata.mp_obj_print_exception.str1.1
+                 0x00000000000472ef       0x59 build/py/obj.o
+                                          0x5b (size before relaxing)
+  .rodata.mp_obj_get_float.str1.1
+                 0x0000000000047348       0x1a build/py/obj.o
+  .rodata.mp_obj_get_complex.str1.1
+                 0x0000000000047362       0x1c build/py/obj.o
+  .rodata.mp_obj_get_array.str1.1
+                 0x000000000004737e       0x22 build/py/obj.o
+  .rodata.mp_get_index.str1.1
+                 0x00000000000473a0       0x3a build/py/obj.o
+  .rodata.mp_obj_subscr.str1.1
+                 0x00000000000473da       0x76 build/py/obj.o
+  .rodata.mp_get_buffer_raise.str1.1
+                 0x0000000000047450       0x25 build/py/obj.o
+  *fill*         0x0000000000047475        0xb 
+  .rodata.__PRETTY_FUNCTION__.4524
+                 0x0000000000047480       0x17 build/py/obj.o
+  .rodata.cst8   0x0000000000047497        0x8 build/py/obj.o
+  .rodata.bool_print.str1.1
+                 0x0000000000047497        0xb build/py/objbool.o
+  .rodata.complex_print.str1.1
+                 0x0000000000047497        0xf build/py/objcomplex.o
+  *fill*         0x00000000000474a6        0x2 
+  .rodata.complex_unary_op
+                 0x00000000000474a8       0x20 build/py/objcomplex.o
+  .rodata.mp_obj_complex_get.str1.1
+                 0x00000000000474c8       0x3d build/py/objcomplex.o
+  .rodata.mp_obj_complex_binary_op.str1.1
+                 0x0000000000047505       0x55 build/py/objcomplex.o
+  *fill*         0x000000000004755a        0x2 
+  .rodata.mp_obj_complex_binary_op
+                 0x000000000004755c       0x84 build/py/objcomplex.o
+  .rodata.__PRETTY_FUNCTION__.6003
+                 0x00000000000475e0       0x13 build/py/objcomplex.o
+  .rodata.cst16  0x00000000000475f3       0x10 build/py/objcomplex.o
+  .rodata.cst8   0x00000000000475f3        0x8 build/py/objcomplex.o
+  .rodata.dict_view_print.str1.1
+                 0x00000000000475f3        0x6 build/py/objdict.o
+                                           0x9 (size before relaxing)
+  .rodata.dict_print.str1.1
+                 0x00000000000475f9        0x2 build/py/objdict.o
+                                           0x7 (size before relaxing)
+  .rodata.dict_update.str1.1
+                 0x00000000000475fb       0x26 build/py/objdict.o
+  .rodata.dict_popitem.str1.1
+                 0x0000000000047621       0x1f build/py/objdict.o
+  .rodata.str1.1
+                 0x0000000000047640       0x21 build/py/objdict.o
+  .rodata.mp_obj_exception_print.str1.1
+                 0x0000000000047661        0x4 build/py/objexcept.o
+  .rodata.mp_obj_new_exception_args.str1.1
+                 0x0000000000047661       0x42 build/py/objexcept.o
+  .rodata.mp_obj_new_exception_msg_varg.str1.1
+                 0x00000000000476a3        0xc build/py/objexcept.o
+  .rodata.mp_obj_exception_clear_traceback.str1.1
+                 0x00000000000476af       0x26 build/py/objexcept.o
+  *fill*         0x00000000000476d5        0xb 
+  .rodata.__PRETTY_FUNCTION__.4655
+                 0x00000000000476e0       0x1f build/py/objexcept.o
+  *fill*         0x00000000000476ff        0x1 
+  .rodata.__PRETTY_FUNCTION__.4646
+                 0x0000000000047700       0x1f build/py/objexcept.o
+  *fill*         0x000000000004771f        0x1 
+  .rodata.__PRETTY_FUNCTION__.4615
+                 0x0000000000047720       0x1e build/py/objexcept.o
+  *fill*         0x000000000004773e        0x2 
+  .rodata.__PRETTY_FUNCTION__.4595
+                 0x0000000000047740       0x19 build/py/objexcept.o
+  *fill*         0x0000000000047759        0x7 
+  .rodata.__PRETTY_FUNCTION__.4590
+                 0x0000000000047760       0x1a build/py/objexcept.o
+  .rodata.mp_obj_float_get.str1.1
+                 0x000000000004777a       0x2a build/py/objfloat.o
+  .rodata.float_unary_op
+                 0x00000000000477a4       0x20 build/py/objfloat.o
+  .rodata.float_print.str1.1
+                 0x00000000000477c4        0x3 build/py/objfloat.o
+  .rodata.mp_obj_float_binary_op.str1.1
+                 0x00000000000477c7        0xf build/py/objfloat.o
+  *fill*         0x00000000000477c7        0x1 
+  .rodata.mp_obj_float_binary_op
+                 0x00000000000477c8       0x90 build/py/objfloat.o
+  *fill*         0x0000000000047858        0x8 
+  .rodata.__PRETTY_FUNCTION__.6232
+                 0x0000000000047860       0x11 build/py/objfloat.o
+  .rodata.cst16  0x0000000000047871       0x20 build/py/objfloat.o
+  *fill*         0x0000000000047871        0x7 
+  .rodata.cst8   0x0000000000047878        0x8 build/py/objfloat.o
+                                          0x18 (size before relaxing)
+  .rodata.fun_bc_call.str1.1
+                 0x0000000000047880       0x38 build/py/objfun.o
+  .rodata.fun_builtin_0_call.str1.1
+                 0x00000000000478b8       0x30 build/py/objfun.o
+  .rodata.fun_builtin_1_call.str1.1
+                 0x00000000000478e8       0x30 build/py/objfun.o
+  .rodata.fun_builtin_2_call.str1.1
+                 0x0000000000047918       0x30 build/py/objfun.o
+  .rodata.fun_builtin_3_call.str1.1
+                 0x0000000000047948       0x30 build/py/objfun.o
+  .rodata.fun_builtin_var_call.str1.1
+                 0x0000000000047978       0x32 build/py/objfun.o
+  *fill*         0x00000000000479aa        0x6 
+  .rodata.__PRETTY_FUNCTION__.3936
+                 0x00000000000479b0       0x15 build/py/objfun.o
+  *fill*         0x00000000000479c5        0xb 
+  .rodata.__PRETTY_FUNCTION__.3927
+                 0x00000000000479d0       0x13 build/py/objfun.o
+  *fill*         0x00000000000479e3        0xd 
+  .rodata.__PRETTY_FUNCTION__.3918
+                 0x00000000000479f0       0x13 build/py/objfun.o
+  *fill*         0x0000000000047a03        0xd 
+  .rodata.__PRETTY_FUNCTION__.3909
+                 0x0000000000047a10       0x13 build/py/objfun.o
+  *fill*         0x0000000000047a23        0xd 
+  .rodata.__PRETTY_FUNCTION__.3900
+                 0x0000000000047a30       0x13 build/py/objfun.o
+  .rodata.mp_obj_new_int_from_float.str1.1
+                 0x0000000000047a43       0x32 build/py/objint.o
+  .rodata.mp_int_format_size.str1.1
+                 0x0000000000047a75       0x27 build/py/objint.o
+  .rodata.mp_obj_int_formatted.str1.1
+                 0x0000000000047a9c       0x26 build/py/objint.o
+  *fill*         0x0000000000047ac2        0xe 
+  .rodata.__PRETTY_FUNCTION__.6004
+                 0x0000000000047ad0       0x15 build/py/objint.o
+  *fill*         0x0000000000047ae5        0xb 
+  .rodata.__PRETTY_FUNCTION__.5989
+                 0x0000000000047af0       0x13 build/py/objint.o
+  *fill*         0x0000000000047b03        0xd 
+  .rodata.log_base2_floor
+                 0x0000000000047b10       0x10 build/py/objint.o
+  .rodata.mp_obj_int_formatted_impl.str1.1
+                 0x0000000000047b20       0x13 build/py/objint_mpz.o
+                                          0x39 (size before relaxing)
+  *fill*         0x0000000000047b33        0x1 
+  .rodata.mp_obj_int_unary_op
+                 0x0000000000047b34       0x20 build/py/objint_mpz.o
+  .rodata.mp_obj_int_get_checked.str1.1
+                 0x0000000000047b54       0x2d build/py/objint_mpz.o
+  .rodata.mp_obj_int_binary_op.str1.1
+                 0x0000000000047b81       0x3f build/py/objint_mpz.o
+                                          0x63 (size before relaxing)
+  .rodata.mp_obj_int_binary_op
+                 0x0000000000047bc0       0x7c build/py/objint_mpz.o
+  *fill*         0x0000000000047c3c        0x4 
+  .rodata.__PRETTY_FUNCTION__.5772
+                 0x0000000000047c40       0x19 build/py/objint_mpz.o
+  *fill*         0x0000000000047c59        0x7 
+  .rodata.__PRETTY_FUNCTION__.5697
+                 0x0000000000047c60       0x15 build/py/objint_mpz.o
+  *fill*         0x0000000000047c75        0xb 
+  .rodata.__PRETTY_FUNCTION__.5665
+                 0x0000000000047c80       0x19 build/py/objint_mpz.o
+  *fill*         0x0000000000047c99        0x7 
+  .rodata.__PRETTY_FUNCTION__.5649
+                 0x0000000000047ca0       0x1a build/py/objint_mpz.o
+  .rodata.list_pop.str1.1
+                 0x0000000000047cba       0x14 build/py/objlist.o
+  .rodata.list_print.str1.1
+                 0x0000000000047cce       0x14 build/py/objlist.o
+                                           0x7 (size before relaxing)
+  .rodata.list_subscr.str1.1
+                 0x0000000000047cce       0x1d build/py/objlist.o
+  *fill*         0x0000000000047ceb        0x5 
+  .rodata.__PRETTY_FUNCTION__.3890
+                 0x0000000000047cf0        0xc build/py/objlist.o
+  .rodata.object___new__.str1.1
+                 0x0000000000047cfc       0x20 build/py/objobject.o
+  .rodata.none_print.str1.1
+                 0x0000000000047d1c        0x5 build/py/objnone.o
+  .rodata.singleton_print.str1.1
+                 0x0000000000047d1c        0x3 build/py/objsingleton.o
+  .rodata.slice_print.str1.1
+                 0x0000000000047d1f        0x7 build/py/objslice.o
+                                           0xc (size before relaxing)
+  .rodata.mp_obj_slice_get.str1.1
+                 0x0000000000047d26       0x39 build/py/objslice.o
+  *fill*         0x0000000000047d5f        0x1 
+  .rodata.__PRETTY_FUNCTION__.3797
+                 0x0000000000047d60       0x11 build/py/objslice.o
+  .rodata.bad_implicit_conversion.str1.1
+                 0x0000000000047d71       0x2b build/py/objstr.o
+  .rodata.mp_str_print_quoted.str1.1
+                 0x0000000000047d9c       0x17 build/py/objstr.o
+                                          0x1a (size before relaxing)
+  .rodata.str_print.str1.1
+                 0x0000000000047db3        0x5 build/py/objstr.o
+                                           0x7 (size before relaxing)
+  .rodata.str_finder.str1.1
+                 0x0000000000047db8       0x14 build/py/objstr.o
+  .rodata.str_join.str1.1
+                 0x0000000000047dcc       0x45 build/py/objstr.o
+  .rodata.str_replace.str1.1
+                 0x0000000000047e11       0x1c build/py/objstr.o
+  .rodata.bytes_make_new.part.4.str1.1
+                 0x0000000000047e2d       0x33 build/py/objstr.o
+  .rodata.str_uni_strip.str1.1
+                 0x0000000000047e60       0x43 build/py/objstr.o
+  .rodata.bytes_subscr.str1.1
+                 0x0000000000047ea3       0x31 build/py/objstr.o
+  .rodata.mp_obj_str_binary_op.str1.1
+                 0x0000000000047ed4       0xe4 build/py/objstr.o
+  .rodata.mp_obj_str_split.str1.1
+                 0x0000000000047fb8       0x10 build/py/objstr.o
+  .rodata.str_rsplit.str1.1
+                 0x0000000000047fc8        0xf build/py/objstr.o
+  .rodata.str_endswith.str1.1
+                 0x0000000000047fd7       0x12 build/py/objstr.o
+  .rodata.mp_obj_str_format_helper.str1.1
+                 0x0000000000047fe9      0x288 build/py/objstr.o
+  *fill*         0x0000000000048271        0x7 
+  .rodata.__PRETTY_FUNCTION__.4393
+                 0x0000000000048278        0xc build/py/objstr.o
+  *fill*         0x0000000000048284        0xc 
+  .rodata.__PRETTY_FUNCTION__.4251
+                 0x0000000000048290       0x19 build/py/objstr.o
+  *fill*         0x00000000000482a9        0x7 
+  .rodata.__PRETTY_FUNCTION__.4181
+                 0x00000000000482b0        0xe build/py/objstr.o
+  .rodata.whitespace.4167
+                 0x00000000000482be        0x7 build/py/objstr.o
+  .rodata.str1.1
+                 0x00000000000482c5        0x1 build/py/objstr.o
+  *fill*         0x00000000000482c5        0x3 
+  .rodata.cst8   0x00000000000482c8        0x8 build/py/objstr.o
+  .rodata.uni_print.str1.1
+                 0x00000000000482d0        0xe build/py/objstrunicode.o
+                                          0x2d (size before relaxing)
+  .rodata.str_index_to_ptr.str1.1
+                 0x00000000000482de       0x42 build/py/objstrunicode.o
+  .rodata.str_subscr.str1.1
+                 0x0000000000048320       0x2b build/py/objstrunicode.o
+                                          0x5c (size before relaxing)
+  *fill*         0x000000000004834b        0x5 
+  .rodata.__PRETTY_FUNCTION__.3942
+                 0x0000000000048350        0xb build/py/objstrunicode.o
+  .rodata.mp_obj_tuple_print.str1.1
+                 0x000000000004835b        0x2 build/py/objtuple.o
+                                           0x9 (size before relaxing)
+  .rodata.mp_obj_tuple_subscr.str1.1
+                 0x000000000004835d       0x31 build/py/objtuple.o
+  .rodata.mp_obj_tuple_get.str1.1
+                 0x000000000004835d       0x35 build/py/objtuple.o
+  *fill*         0x0000000000048392        0xe 
+  .rodata.__PRETTY_FUNCTION__.3911
+                 0x00000000000483a0       0x11 build/py/objtuple.o
+  .rodata.type_print.str1.1
+                 0x00000000000483b1        0xd build/py/objtype.o
+  .rodata.instance_count_native_bases.str1.1
+                 0x00000000000483be       0x35 build/py/objtype.o
+  .rodata.type_call.str1.1
+                 0x00000000000483f3       0x1d build/py/objtype.o
+  .rodata.mp_obj_class_lookup.str1.1
+                 0x0000000000048410       0x3e build/py/objtype.o
+                                          0x6c (size before relaxing)
+  .rodata.type_attr.str1.1
+                 0x000000000004844e       0x8a build/py/objtype.o
+  .rodata.mp_obj_instance_attr.str1.1
+                 0x00000000000484d8       0x47 build/py/objtype.o
+  .rodata.instance_print.str1.1
+                 0x000000000004851f       0x12 build/py/objtype.o
+  .rodata.static_class_method_make_new.str1.1
+                 0x0000000000048531       0x3e build/py/objtype.o
+  .rodata.mp_obj_instance_call.str1.1
+                 0x000000000004856f       0x1b build/py/objtype.o
+  .rodata.mp_obj_new_instance.str1.1
+                 0x000000000004856f       0x15 build/py/objtype.o
+  .rodata.mp_obj_instance_make_new.str1.1
+                 0x0000000000048584       0x46 build/py/objtype.o
+  .rodata.mp_obj_new_type.str1.1
+                 0x00000000000485ca       0x56 build/py/objtype.o
+  .rodata.type_make_new.str1.1
+                 0x0000000000048620       0x1c build/py/objtype.o
+  *fill*         0x000000000004863c        0x4 
+  .rodata.__PRETTY_FUNCTION__.4729
+                 0x0000000000048640       0x1d build/py/objtype.o
+  *fill*         0x000000000004865d        0x3 
+  .rodata.__PRETTY_FUNCTION__.4504
+                 0x0000000000048660       0x1a build/py/objtype.o
+  *fill*         0x000000000004867a        0x6 
+  .rodata.__PRETTY_FUNCTION__.4612
+                 0x0000000000048680        0xa build/py/objtype.o
+  *fill*         0x000000000004868a        0x6 
+  .rodata.__PRETTY_FUNCTION__.4432
+                 0x0000000000048690       0x14 build/py/objtype.o
+  *fill*         0x00000000000486a4        0xc 
+  .rodata.__PRETTY_FUNCTION__.4463
+                 0x00000000000486b0       0x19 build/py/objtype.o
+  *fill*         0x00000000000486c9        0x7 
+  .rodata.__PRETTY_FUNCTION__.4402
+                 0x00000000000486d0       0x1c build/py/objtype.o
+  *fill*         0x00000000000486ec        0x4 
+  .rodata.__PRETTY_FUNCTION__.4420
+                 0x00000000000486f0       0x14 build/py/objtype.o
+  *fill*         0x0000000000048704       0x1c 
+  .rodata.mp_binary_op_method_name
+                 0x0000000000048720       0x25 build/py/objtype.o
+                 0x0000000000048720                mp_binary_op_method_name
+  *fill*         0x0000000000048745        0x3 
+  .rodata.mp_unary_op_method_name
+                 0x0000000000048748        0xa build/py/objtype.o
+                 0x0000000000048748                mp_unary_op_method_name
+  .rodata.mp_seq_get_fast_slice_indexes.str1.1
+                 0x0000000000048752       0x1a build/py/sequence.o
+  .rodata.mp_seq_index_obj.str1.1
+                 0x000000000004876c       0x17 build/py/sequence.o
+  .rodata.usage.isra.0.str1.1
+                 0x0000000000048783      0x35b build/main.o
+  .rodata.main_.str1.1
+                 0x0000000000048ade      0x13f build/main.o
+                                         0x146 (size before relaxing)
+  .rodata.nlr_jump_fail.str1.1
+                 0x0000000000048c1d       0x18 build/main.o
+ 
+ .rodata1
+  *(.rodata1)
+ 
+ .eh_frame_hdr   0x0000000000048c38       0x34
+  *(.eh_frame_hdr)
+  .eh_frame_hdr  0x0000000000048c38       0x34 /usr/lib/gcc/x86_64-linux-gnu/7/../../../x86_64-linux-gnu/Scrt1.o
+                 0x0000000000048c38                __GNU_EH_FRAME_HDR
+  *(.eh_frame_entry .eh_frame_entry.*)
+ 
+ .eh_frame       0x0000000000048c70       0xe8
+  *(.eh_frame)
+  .eh_frame      0x0000000000048c70       0x30 /usr/lib/gcc/x86_64-linux-gnu/7/../../../x86_64-linux-gnu/Scrt1.o
+                                          0x2c (size before relaxing)
+  *fill*         0x0000000000048ca0        0x0 
+  .eh_frame      0x0000000000048ca0       0x40 /usr/lib/gcc/x86_64-linux-gnu/7/../../../x86_64-linux-gnu/Scrt1.o
+  .eh_frame      0x0000000000048ce0       0x18 /usr/lib/gcc/x86_64-linux-gnu/7/../../../x86_64-linux-gnu/Scrt1.o
+                                          0x30 (size before relaxing)
+  .eh_frame      0x0000000000048cf8       0x5c /usr/lib/x86_64-linux-gnu/libc_nonshared.a(elf-init.oS)
+                                          0x78 (size before relaxing)
+  .eh_frame      0x0000000000048d54        0x4 /usr/lib/gcc/x86_64-linux-gnu/7/crtendS.o
+  *(.eh_frame.*)
+ 
+ .gcc_except_table
+  *(.gcc_except_table .gcc_except_table.*)
+ 
+ .gnu_extab
+  *(.gnu_extab*)
+ 
+ .exception_ranges
+  *(.exception_ranges .exception_ranges*)
+                 0x0000000000249c70                . = DATA_SEGMENT_ALIGN (CONSTANT (MAXPAGESIZE), CONSTANT (COMMONPAGESIZE))
+ 
+ .eh_frame
+  *(.eh_frame)
+  *(.eh_frame.*)
+ 
+ .gnu_extab
+  *(.gnu_extab)
+ 
+ .gcc_except_table
+  *(.gcc_except_table .gcc_except_table.*)
+ 
+ .exception_ranges
+  *(.exception_ranges .exception_ranges*)
+ 
+ .tdata
+  *(.tdata .tdata.* .gnu.linkonce.td.*)
+ 
+ .tbss
+  *(.tbss .tbss.* .gnu.linkonce.tb.*)
+  *(.tcommon)
+ 
+ .preinit_array  0x0000000000249c70        0x0
+                 [!provide]                        PROVIDE (__preinit_array_start = .)
+  *(.preinit_array)
+                 [!provide]                        PROVIDE (__preinit_array_end = .)
+ 
+ .init_array     0x0000000000249c70        0x8
+                 0x0000000000249c70                PROVIDE (__init_array_start = .)
+  *(SORT_BY_INIT_PRIORITY(.init_array.*) SORT_BY_INIT_PRIORITY(.ctors.*))
+  *(.init_array EXCLUDE_FILE(*crtend?.o *crtend.o *crtbegin?.o *crtbegin.o) .ctors)
+  .init_array    0x0000000000249c70        0x8 /usr/lib/gcc/x86_64-linux-gnu/7/crtbeginS.o
+                 0x0000000000249c78                PROVIDE (__init_array_end = .)
+ 
+ .fini_array     0x0000000000249c78        0x8
+                 [!provide]                        PROVIDE (__fini_array_start = .)
+  *(SORT_BY_INIT_PRIORITY(.fini_array.*) SORT_BY_INIT_PRIORITY(.dtors.*))
+  *(.fini_array EXCLUDE_FILE(*crtend?.o *crtend.o *crtbegin?.o *crtbegin.o) .dtors)
+  .fini_array    0x0000000000249c78        0x8 /usr/lib/gcc/x86_64-linux-gnu/7/crtbeginS.o
+                 [!provide]                        PROVIDE (__fini_array_end = .)
+ 
+ .ctors
+  *crtbegin.o(.ctors)
+  *crtbegin?.o(.ctors)
+  *(EXCLUDE_FILE(*crtend?.o *crtend.o) .ctors)
+  *(SORT_BY_NAME(.ctors.*))
+  *(.ctors)
+ 
+ .dtors
+  *crtbegin.o(.dtors)
+  *crtbegin?.o(.dtors)
+  *(EXCLUDE_FILE(*crtend?.o *crtend.o) .dtors)
+  *(SORT_BY_NAME(.dtors.*))
+  *(.dtors)
+ 
+ .jcr
+  *(.jcr)
+ 
+ .data.rel.ro    0x0000000000249c80     0x4040
+  *(.data.rel.ro.local* .gnu.linkonce.d.rel.ro.local.*)
+  .data.rel.ro.local.mp_qstr_const_pool
+                 0x0000000000249c80      0xad0 build/py/qstr.o
+                 0x0000000000249c80                mp_qstr_const_pool
+  *fill*         0x000000000024a750       0x10 
+  .data.rel.ro.local.tok_kw
+                 0x000000000024a760      0x120 build/py/lexer.o
+  .data.rel.ro.local.mp_constants_map
+                 0x000000000024a880       0x18 build/py/parse.o
+  *fill*         0x000000000024a898        0x8 
+  .data.rel.ro.local.compile_function
+                 0x000000000024a8a0      0x1d0 build/py/compile.o
+  *fill*         0x000000000024aa70       0x10 
+  .data.rel.ro.local.emit_bc_method_table
+                 0x000000000024aa80      0x1c0 build/py/emitbc.o
+                 0x000000000024aa80                emit_bc_method_table
+  .data.rel.ro.local.emit_native_x64_method_table
+                 0x000000000024ac40      0x1c0 build/py/emitnx64.o
+                 0x000000000024ac40                emit_native_x64_method_table
+  .data.rel.ro.local.emit_native_x86_method_table
+                 0x000000000024ae00      0x1c0 build/py/emitnx86.o
+                 0x000000000024ae00                emit_native_x86_method_table
+  .data.rel.ro.local.emit_native_thumb_method_table
+                 0x000000000024afc0      0x1c0 build/py/emitnthumb.o
+                 0x000000000024afc0                emit_native_thumb_method_table
+  .data.rel.ro.local.emit_inline_thumb_method_table
+                 0x000000000024b180       0x38 build/py/emitinlinethumb.o
+                 0x000000000024b180                emit_inline_thumb_method_table
+  *fill*         0x000000000024b1b8        0x8 
+  .data.rel.ro.local.emit_native_arm_method_table
+                 0x000000000024b1c0      0x1c0 build/py/emitnarm.o
+                 0x000000000024b1c0                emit_native_arm_method_table
+  .data.rel.ro.local.emit_native_xtensa_method_table
+                 0x000000000024b380      0x1c0 build/py/emitnxtensa.o
+                 0x000000000024b380                emit_native_xtensa_method_table
+  .data.rel.ro.local.emit_inline_xtensa_method_table
+                 0x000000000024b540       0x38 build/py/emitinlinextensa.o
+                 0x000000000024b540                emit_inline_xtensa_method_table
+  *fill*         0x000000000024b578        0x8 
+  .data.rel.ro.local.emit_native_xtensawin_method_table
+                 0x000000000024b580      0x1c0 build/py/emitnxtensawin.o
+                 0x000000000024b580                emit_native_xtensawin_method_table
+  .data.rel.ro.local.mp_const_true_obj
+                 0x000000000024b740       0x10 build/py/objbool.o
+                 0x000000000024b740                mp_const_true_obj
+  .data.rel.ro.local.mp_const_false_obj
+                 0x000000000024b750       0x10 build/py/objbool.o
+                 0x000000000024b750                mp_const_false_obj
+  .data.rel.ro.local.dict_locals_dict
+                 0x000000000024b760       0x20 build/py/objdict.o
+  .data.rel.ro.local.mp_dict_view_names
+                 0x000000000024b780       0x18 build/py/objdict.o
+  *fill*         0x000000000024b798        0x8 
+  .data.rel.ro.local.int_locals_dict_table
+                 0x000000000024b7a0       0x20 build/py/objint.o
+  .data.rel.ro.local.list_locals_dict_table
+                 0x000000000024b7c0       0xb0 build/py/objlist.o
+  *fill*         0x000000000024b870       0x10 
+  .data.rel.ro.local.object_locals_dict_table
+                 0x000000000024b880       0x20 build/py/objobject.o
+  .data.rel.ro.local.property_locals_dict_table
+                 0x000000000024b8a0       0x30 build/py/objproperty.o
+  .data.rel.ro.local.mp_const_none_obj
+                 0x000000000024b8d0        0x8 build/py/objnone.o
+                 0x000000000024b8d0                mp_const_none_obj
+  *fill*         0x000000000024b8d8        0x8 
+  .data.rel.ro.local.mp_const_ellipsis_obj
+                 0x000000000024b8e0       0x10 build/py/objsingleton.o
+                 0x000000000024b8e0                mp_const_ellipsis_obj
+  *fill*         0x000000000024b8f0       0x10 
+  .data.rel.ro.local.mp_const_empty_bytes_obj
+                 0x000000000024b900       0x20 build/py/objstr.o
+                 0x000000000024b900                mp_const_empty_bytes_obj
+  .data.rel.ro.local.str8_locals_dict_table
+                 0x000000000024b920      0x170 build/py/objstr.o
+  .data.rel.ro.local.mp_const_empty_tuple_obj
+                 0x000000000024ba90       0x10 build/py/objtuple.o
+                 0x000000000024ba90                mp_const_empty_tuple_obj
+  .data.rel.ro.local.tuple_locals_dict_table
+                 0x000000000024baa0       0x20 build/py/objtuple.o
+  .data.rel.ro.local.mp_type_classmethod
+                 0x000000000024bac0       0x78 build/py/objtype.o
+                 0x000000000024bac0                mp_type_classmethod
+  *fill*         0x000000000024bb38        0x8 
+  .data.rel.ro.local.mp_type_staticmethod
+                 0x000000000024bb40       0x78 build/py/objtype.o
+                 0x000000000024bb40                mp_type_staticmethod
+  *fill*         0x000000000024bbb8        0x8 
+  .data.rel.ro.local.mp_stderr_print
+                 0x000000000024bbc0       0x10 build/main.o
+  *(.data.rel.ro .data.rel.ro.* .gnu.linkonce.d.rel.ro.*)
+  .data.rel.ro   0x000000000024bbd0        0x0 /usr/lib/gcc/x86_64-linux-gnu/7/../../../x86_64-linux-gnu/Scrt1.o
+  *fill*         0x000000000024bbd0       0x10 
+  .data.rel.ro.emit_asm_table
+                 0x000000000024bbe0       0x58 build/py/compile.o
+  *fill*         0x000000000024bc38        0x8 
+  .data.rel.ro.emit_native_table
+                 0x000000000024bc40       0x58 build/py/compile.o
+  *fill*         0x000000000024bc98        0x8 
+  .data.rel.ro.mp_type_checked_fun
+                 0x000000000024bca0       0x78 build/py/runtime.o
+  *fill*         0x000000000024bd18        0x8 
+  .data.rel.ro.mp_type_bool
+                 0x000000000024bd20       0x78 build/py/objbool.o
+                 0x000000000024bd20                mp_type_bool
+  *fill*         0x000000000024bd98        0x8 
+  .data.rel.ro.mp_type_complex
+                 0x000000000024bda0       0x78 build/py/objcomplex.o
+                 0x000000000024bda0                mp_type_complex
+  *fill*         0x000000000024be18        0x8 
+  .data.rel.ro.mp_type_dict
+                 0x000000000024be20       0x78 build/py/objdict.o
+                 0x000000000024be20                mp_type_dict
+  *fill*         0x000000000024be98        0x8 
+  .data.rel.ro.dict_locals_dict_table
+                 0x000000000024bea0       0xe0 build/py/objdict.o
+  .data.rel.ro.dict_values_obj
+                 0x000000000024bf80       0x10 build/py/objdict.o
+  .data.rel.ro.dict_keys_obj
+                 0x000000000024bf90       0x10 build/py/objdict.o
+  .data.rel.ro.dict_items_obj
+                 0x000000000024bfa0       0x10 build/py/objdict.o
+  *fill*         0x000000000024bfb0       0x10 
+  .data.rel.ro.dict_view_it_type
+                 0x000000000024bfc0       0x78 build/py/objdict.o
+  *fill*         0x000000000024c038        0x8 
+  .data.rel.ro.dict_view_type
+                 0x000000000024c040       0x78 build/py/objdict.o
+  *fill*         0x000000000024c0b8        0x8 
+  .data.rel.ro.dict_update_obj
+                 0x000000000024c0c0       0x18 build/py/objdict.o
+  *fill*         0x000000000024c0d8        0x8 
+  .data.rel.ro.dict_popitem_obj
+                 0x000000000024c0e0       0x10 build/py/objdict.o
+  .data.rel.ro.dict_setdefault_obj
+                 0x000000000024c0f0       0x18 build/py/objdict.o
+  *fill*         0x000000000024c108        0x8 
+  .data.rel.ro.dict_pop_obj
+                 0x000000000024c110       0x18 build/py/objdict.o
+  *fill*         0x000000000024c128        0x8 
+  .data.rel.ro.dict_get_obj
+                 0x000000000024c130       0x18 build/py/objdict.o
+  *fill*         0x000000000024c148        0x8 
+  .data.rel.ro.dict_fromkeys_obj
+                 0x000000000024c150       0x10 build/py/objdict.o
+  .data.rel.ro.dict_fromkeys_fun_obj
+                 0x000000000024c160       0x18 build/py/objdict.o
+  *fill*         0x000000000024c178        0x8 
+  .data.rel.ro.dict_copy_obj
+                 0x000000000024c180       0x10 build/py/objdict.o
+  .data.rel.ro.dict_clear_obj
+                 0x000000000024c190       0x10 build/py/objdict.o
+  .data.rel.ro.mp_type_UnicodeError
+                 0x000000000024c1a0       0x78 build/py/objexcept.o
+                 0x000000000024c1a0                mp_type_UnicodeError
+  *fill*         0x000000000024c218        0x8 
+  .data.rel.ro.mp_type_ValueError
+                 0x000000000024c220       0x78 build/py/objexcept.o
+                 0x000000000024c220                mp_type_ValueError
+  *fill*         0x000000000024c298        0x8 
+  .data.rel.ro.mp_type_ViperTypeError
+                 0x000000000024c2a0       0x78 build/py/objexcept.o
+                 0x000000000024c2a0                mp_type_ViperTypeError
+  *fill*         0x000000000024c318        0x8 
+  .data.rel.ro.mp_type_TypeError
+                 0x000000000024c320       0x78 build/py/objexcept.o
+                 0x000000000024c320                mp_type_TypeError
+  *fill*         0x000000000024c398        0x8 
+  .data.rel.ro.mp_type_IndentationError
+                 0x000000000024c3a0       0x78 build/py/objexcept.o
+                 0x000000000024c3a0                mp_type_IndentationError
+  *fill*         0x000000000024c418        0x8 
+  .data.rel.ro.mp_type_SyntaxError
+                 0x000000000024c420       0x78 build/py/objexcept.o
+                 0x000000000024c420                mp_type_SyntaxError
+  *fill*         0x000000000024c498        0x8 
+  .data.rel.ro.mp_type_NotImplementedError
+                 0x000000000024c4a0       0x78 build/py/objexcept.o
+                 0x000000000024c4a0                mp_type_NotImplementedError
+  *fill*         0x000000000024c518        0x8 
+  .data.rel.ro.mp_type_RuntimeError
+                 0x000000000024c520       0x78 build/py/objexcept.o
+                 0x000000000024c520                mp_type_RuntimeError
+  *fill*         0x000000000024c598        0x8 
+  .data.rel.ro.mp_type_OSError
+                 0x000000000024c5a0       0x78 build/py/objexcept.o
+                 0x000000000024c5a0                mp_type_OSError
+  *fill*         0x000000000024c618        0x8 
+  .data.rel.ro.mp_type_MemoryError
+                 0x000000000024c620       0x78 build/py/objexcept.o
+                 0x000000000024c620                mp_type_MemoryError
+  *fill*         0x000000000024c698        0x8 
+  .data.rel.ro.mp_type_KeyError
+                 0x000000000024c6a0       0x78 build/py/objexcept.o
+                 0x000000000024c6a0                mp_type_KeyError
+  *fill*         0x000000000024c718        0x8 
+  .data.rel.ro.mp_type_IndexError
+                 0x000000000024c720       0x78 build/py/objexcept.o
+                 0x000000000024c720                mp_type_IndexError
+  *fill*         0x000000000024c798        0x8 
+  .data.rel.ro.mp_type_LookupError
+                 0x000000000024c7a0       0x78 build/py/objexcept.o
+                 0x000000000024c7a0                mp_type_LookupError
+  *fill*         0x000000000024c818        0x8 
+  .data.rel.ro.mp_type_AttributeError
+                 0x000000000024c820       0x78 build/py/objexcept.o
+                 0x000000000024c820                mp_type_AttributeError
+  *fill*         0x000000000024c898        0x8 
+  .data.rel.ro.mp_type_ZeroDivisionError
+                 0x000000000024c8a0       0x78 build/py/objexcept.o
+                 0x000000000024c8a0                mp_type_ZeroDivisionError
+  *fill*         0x000000000024c918        0x8 
+  .data.rel.ro.mp_type_OverflowError
+                 0x000000000024c920       0x78 build/py/objexcept.o
+                 0x000000000024c920                mp_type_OverflowError
+  *fill*         0x000000000024c998        0x8 
+  .data.rel.ro.mp_type_ArithmeticError
+                 0x000000000024c9a0       0x78 build/py/objexcept.o
+                 0x000000000024c9a0                mp_type_ArithmeticError
+  *fill*         0x000000000024ca18        0x8 
+  .data.rel.ro.mp_type_StopIteration
+                 0x000000000024ca20       0x78 build/py/objexcept.o
+                 0x000000000024ca20                mp_type_StopIteration
+  *fill*         0x000000000024ca98        0x8 
+  .data.rel.ro.mp_type_Exception
+                 0x000000000024caa0       0x78 build/py/objexcept.o
+                 0x000000000024caa0                mp_type_Exception
+  *fill*         0x000000000024cb18        0x8 
+  .data.rel.ro.mp_type_BaseException
+                 0x000000000024cb20       0x78 build/py/objexcept.o
+                 0x000000000024cb20                mp_type_BaseException
+  *fill*         0x000000000024cb98        0x8 
+  .data.rel.ro.mp_type_float
+                 0x000000000024cba0       0x78 build/py/objfloat.o
+                 0x000000000024cba0                mp_type_float
+  *fill*         0x000000000024cc18        0x8 
+  .data.rel.ro.mp_type_fun_builtin_var
+                 0x000000000024cc20       0x78 build/py/objfun.o
+                 0x000000000024cc20                mp_type_fun_builtin_var
+  *fill*         0x000000000024cc98        0x8 
+  .data.rel.ro.mp_type_fun_builtin_3
+                 0x000000000024cca0       0x78 build/py/objfun.o
+                 0x000000000024cca0                mp_type_fun_builtin_3
+  *fill*         0x000000000024cd18        0x8 
+  .data.rel.ro.mp_type_fun_builtin_2
+                 0x000000000024cd20       0x78 build/py/objfun.o
+                 0x000000000024cd20                mp_type_fun_builtin_2
+  *fill*         0x000000000024cd98        0x8 
+  .data.rel.ro.mp_type_fun_builtin_1
+                 0x000000000024cda0       0x78 build/py/objfun.o
+                 0x000000000024cda0                mp_type_fun_builtin_1
+  *fill*         0x000000000024ce18        0x8 
+  .data.rel.ro.mp_type_fun_builtin_0
+                 0x000000000024ce20       0x78 build/py/objfun.o
+                 0x000000000024ce20                mp_type_fun_builtin_0
+  *fill*         0x000000000024ce98        0x8 
+  .data.rel.ro.it_type
+                 0x000000000024cea0       0x78 build/py/objgetitemiter.o
+  *fill*         0x000000000024cf18        0x8 
+  .data.rel.ro.mp_type_int
+                 0x000000000024cf20       0x78 build/py/objint.o
+                 0x000000000024cf20                mp_type_int
+  *fill*         0x000000000024cf98        0x8 
+  .data.rel.ro.int_locals_dict
+                 0x000000000024cfa0       0x20 build/py/objint.o
+  .data.rel.ro.int_to_bytes_obj
+                 0x000000000024cfc0       0x18 build/py/objint.o
+  *fill*         0x000000000024cfd8        0x8 
+  .data.rel.ro.int_from_bytes_obj
+                 0x000000000024cfe0       0x10 build/py/objint.o
+  .data.rel.ro.int_from_bytes_fun_obj
+                 0x000000000024cff0       0x18 build/py/objint.o
+  *fill*         0x000000000024d008       0x18 
+  .data.rel.ro.allowed_args.3948
+                 0x000000000024d020       0x20 build/py/objlist.o
+  .data.rel.ro.mp_type_list
+                 0x000000000024d040       0x78 build/py/objlist.o
+                 0x000000000024d040                mp_type_list
+  *fill*         0x000000000024d0b8        0x8 
+  .data.rel.ro.list_locals_dict
+                 0x000000000024d0c0       0x20 build/py/objlist.o
+  .data.rel.ro.list_sort_obj
+                 0x000000000024d0e0       0x18 build/py/objlist.o
+  *fill*         0x000000000024d0f8        0x8 
+  .data.rel.ro.list_reverse_obj
+                 0x000000000024d100       0x10 build/py/objlist.o
+  .data.rel.ro.list_remove_obj
+                 0x000000000024d110       0x10 build/py/objlist.o
+  .data.rel.ro.list_pop_obj
+                 0x000000000024d120       0x18 build/py/objlist.o
+  *fill*         0x000000000024d138        0x8 
+  .data.rel.ro.list_insert_obj
+                 0x000000000024d140       0x10 build/py/objlist.o
+  .data.rel.ro.list_index_obj
+                 0x000000000024d150       0x18 build/py/objlist.o
+  *fill*         0x000000000024d168        0x8 
+  .data.rel.ro.list_count_obj
+                 0x000000000024d170       0x10 build/py/objlist.o
+  .data.rel.ro.list_copy_obj
+                 0x000000000024d180       0x10 build/py/objlist.o
+  .data.rel.ro.list_clear_obj
+                 0x000000000024d190       0x10 build/py/objlist.o
+  .data.rel.ro.list_extend_obj
+                 0x000000000024d1a0       0x10 build/py/objlist.o
+  .data.rel.ro.list_append_obj
+                 0x000000000024d1b0       0x10 build/py/objlist.o
+  .data.rel.ro.mp_type_object
+                 0x000000000024d1c0       0x78 build/py/objobject.o
+                 0x000000000024d1c0                mp_type_object
+  *fill*         0x000000000024d238        0x8 
+  .data.rel.ro.object_locals_dict
+                 0x000000000024d240       0x20 build/py/objobject.o
+  .data.rel.ro.object___new___obj
+                 0x000000000024d260       0x10 build/py/objobject.o
+  .data.rel.ro.object___new___fun_obj
+                 0x000000000024d270       0x10 build/py/objobject.o
+  .data.rel.ro.object___init___obj
+                 0x000000000024d280       0x10 build/py/objobject.o
+  *fill*         0x000000000024d290       0x10 
+  .data.rel.ro.mp_type_polymorph_iter
+                 0x000000000024d2a0       0x78 build/py/objpolyiter.o
+                 0x000000000024d2a0                mp_type_polymorph_iter
+  *fill*         0x000000000024d318        0x8 
+  .data.rel.ro.allowed_args.4161
+                 0x000000000024d320       0x40 build/py/objproperty.o
+  .data.rel.ro.mp_type_property
+                 0x000000000024d360       0x78 build/py/objproperty.o
+                 0x000000000024d360                mp_type_property
+  *fill*         0x000000000024d3d8        0x8 
+  .data.rel.ro.property_locals_dict
+                 0x000000000024d3e0       0x20 build/py/objproperty.o
+  .data.rel.ro.property_deleter_obj
+                 0x000000000024d400       0x10 build/py/objproperty.o
+  .data.rel.ro.property_setter_obj
+                 0x000000000024d410       0x10 build/py/objproperty.o
+  .data.rel.ro.property_getter_obj
+                 0x000000000024d420       0x10 build/py/objproperty.o
+  *fill*         0x000000000024d430       0x10 
+  .data.rel.ro.mp_type_NoneType
+                 0x000000000024d440       0x78 build/py/objnone.o
+                 0x000000000024d440                mp_type_NoneType
+  *fill*         0x000000000024d4b8        0x8 
+  .data.rel.ro.mp_type_singleton
+                 0x000000000024d4c0       0x78 build/py/objsingleton.o
+                 0x000000000024d4c0                mp_type_singleton
+  *fill*         0x000000000024d538        0x8 
+  .data.rel.ro.mp_type_slice
+                 0x000000000024d540       0x78 build/py/objslice.o
+                 0x000000000024d540                mp_type_slice
+  *fill*         0x000000000024d5b8        0x8 
+  .data.rel.ro.mp_type_bytes
+                 0x000000000024d5c0       0x78 build/py/objstr.o
+                 0x000000000024d5c0                mp_type_bytes
+  *fill*         0x000000000024d638        0x8 
+  .data.rel.ro.str8_locals_dict
+                 0x000000000024d640       0x20 build/py/objstr.o
+  .data.rel.ro.str_encode_obj
+                 0x000000000024d660       0x18 build/py/objstr.o
+                 0x000000000024d660                str_encode_obj
+  *fill*         0x000000000024d678        0x8 
+  .data.rel.ro.bytes_decode_obj
+                 0x000000000024d680       0x18 build/py/objstr.o
+                 0x000000000024d680                bytes_decode_obj
+  *fill*         0x000000000024d698        0x8 
+  .data.rel.ro.str_islower_obj
+                 0x000000000024d6a0       0x10 build/py/objstr.o
+                 0x000000000024d6a0                str_islower_obj
+  .data.rel.ro.str_isupper_obj
+                 0x000000000024d6b0       0x10 build/py/objstr.o
+                 0x000000000024d6b0                str_isupper_obj
+  .data.rel.ro.str_isdigit_obj
+                 0x000000000024d6c0       0x10 build/py/objstr.o
+                 0x000000000024d6c0                str_isdigit_obj
+  .data.rel.ro.str_isalpha_obj
+                 0x000000000024d6d0       0x10 build/py/objstr.o
+                 0x000000000024d6d0                str_isalpha_obj
+  .data.rel.ro.str_isspace_obj
+                 0x000000000024d6e0       0x10 build/py/objstr.o
+                 0x000000000024d6e0                str_isspace_obj
+  .data.rel.ro.str_upper_obj
+                 0x000000000024d6f0       0x10 build/py/objstr.o
+                 0x000000000024d6f0                str_upper_obj
+  .data.rel.ro.str_lower_obj
+                 0x000000000024d700       0x10 build/py/objstr.o
+                 0x000000000024d700                str_lower_obj
+  .data.rel.ro.str_count_obj
+                 0x000000000024d710       0x18 build/py/objstr.o
+                 0x000000000024d710                str_count_obj
+  *fill*         0x000000000024d728        0x8 
+  .data.rel.ro.str_replace_obj
+                 0x000000000024d730       0x18 build/py/objstr.o
+                 0x000000000024d730                str_replace_obj
+  *fill*         0x000000000024d748        0x8 
+  .data.rel.ro.str_format_obj
+                 0x000000000024d750       0x18 build/py/objstr.o
+                 0x000000000024d750                str_format_obj
+  *fill*         0x000000000024d768        0x8 
+  .data.rel.ro.str_rstrip_obj
+                 0x000000000024d770       0x18 build/py/objstr.o
+                 0x000000000024d770                str_rstrip_obj
+  *fill*         0x000000000024d788        0x8 
+  .data.rel.ro.str_lstrip_obj
+                 0x000000000024d790       0x18 build/py/objstr.o
+                 0x000000000024d790                str_lstrip_obj
+  *fill*         0x000000000024d7a8        0x8 
+  .data.rel.ro.str_strip_obj
+                 0x000000000024d7b0       0x18 build/py/objstr.o
+                 0x000000000024d7b0                str_strip_obj
+  *fill*         0x000000000024d7c8        0x8 
+  .data.rel.ro.str_endswith_obj
+                 0x000000000024d7d0       0x18 build/py/objstr.o
+                 0x000000000024d7d0                str_endswith_obj
+  *fill*         0x000000000024d7e8        0x8 
+  .data.rel.ro.str_startswith_obj
+                 0x000000000024d7f0       0x18 build/py/objstr.o
+                 0x000000000024d7f0                str_startswith_obj
+  *fill*         0x000000000024d808        0x8 
+  .data.rel.ro.str_rindex_obj
+                 0x000000000024d810       0x18 build/py/objstr.o
+                 0x000000000024d810                str_rindex_obj
+  *fill*         0x000000000024d828        0x8 
+  .data.rel.ro.str_index_obj
+                 0x000000000024d830       0x18 build/py/objstr.o
+                 0x000000000024d830                str_index_obj
+  *fill*         0x000000000024d848        0x8 
+  .data.rel.ro.str_rfind_obj
+                 0x000000000024d850       0x18 build/py/objstr.o
+                 0x000000000024d850                str_rfind_obj
+  *fill*         0x000000000024d868        0x8 
+  .data.rel.ro.str_find_obj
+                 0x000000000024d870       0x18 build/py/objstr.o
+                 0x000000000024d870                str_find_obj
+  *fill*         0x000000000024d888        0x8 
+  .data.rel.ro.str_rsplit_obj
+                 0x000000000024d890       0x18 build/py/objstr.o
+                 0x000000000024d890                str_rsplit_obj
+  *fill*         0x000000000024d8a8        0x8 
+  .data.rel.ro.str_split_obj
+                 0x000000000024d8b0       0x18 build/py/objstr.o
+                 0x000000000024d8b0                str_split_obj
+  *fill*         0x000000000024d8c8        0x8 
+  .data.rel.ro.str_join_obj
+                 0x000000000024d8d0       0x10 build/py/objstr.o
+                 0x000000000024d8d0                str_join_obj
+  .data.rel.ro.mp_type_str
+                 0x000000000024d8e0       0x78 build/py/objstrunicode.o
+                 0x000000000024d8e0                mp_type_str
+  *fill*         0x000000000024d958        0x8 
+  .data.rel.ro.struni_locals_dict
+                 0x000000000024d960       0x20 build/py/objstrunicode.o
+  .data.rel.ro.struni_locals_dict_table
+                 0x000000000024d980      0x170 build/py/objstrunicode.o
+  *fill*         0x000000000024daf0       0x10 
+  .data.rel.ro.mp_type_tuple
+                 0x000000000024db00       0x78 build/py/objtuple.o
+                 0x000000000024db00                mp_type_tuple
+  *fill*         0x000000000024db78        0x8 
+  .data.rel.ro.tuple_locals_dict
+                 0x000000000024db80       0x20 build/py/objtuple.o
+  .data.rel.ro.tuple_index_obj
+                 0x000000000024dba0       0x18 build/py/objtuple.o
+  *fill*         0x000000000024dbb8        0x8 
+  .data.rel.ro.tuple_count_obj
+                 0x000000000024dbc0       0x10 build/py/objtuple.o
+  *fill*         0x000000000024dbd0       0x10 
+  .data.rel.ro.mp_type_type
+                 0x000000000024dbe0       0x78 build/py/objtype.o
+                 0x000000000024dbe0                mp_type_type
+  *fill*         0x000000000024dc58        0x8 
+  .data.rel.ro.native_base_init_wrapper_obj
+                 0x000000000024dc60       0x18 build/py/objtype.o
+  *fill*         0x000000000024dc78        0x8 
+  .data.rel.ro.mp_op_delitem_obj
+                 0x000000000024dc80       0x10 build/py/opmethods.o
+                 0x000000000024dc80                mp_op_delitem_obj
+  .data.rel.ro.mp_op_setitem_obj
+                 0x000000000024dc90       0x10 build/py/opmethods.o
+                 0x000000000024dc90                mp_op_setitem_obj
+  .data.rel.ro.mp_op_getitem_obj
+                 0x000000000024dca0       0x10 build/py/opmethods.o
+                 0x000000000024dca0                mp_op_getitem_obj
+  .data.rel.ro.mp_builtin_next_obj
+                 0x000000000024dcb0       0x10 build/py/modbuiltins.o
+                 0x000000000024dcb0                mp_builtin_next_obj
+ 
+ .dynamic        0x000000000024dcc0      0x200
+  *(.dynamic)
+  .dynamic       0x000000000024dcc0      0x200 /usr/lib/gcc/x86_64-linux-gnu/7/../../../x86_64-linux-gnu/Scrt1.o
+                 0x000000000024dcc0                _DYNAMIC
+ 
+ .got            0x000000000024dec0      0x130
+  *(.got.plt)
+  .got.plt       0x000000000024dec0       0xf8 /usr/lib/gcc/x86_64-linux-gnu/7/../../../x86_64-linux-gnu/Scrt1.o
+                 0x000000000024dec0                _GLOBAL_OFFSET_TABLE_
+  *(.igot.plt)
+  *(.got)
+  .got           0x000000000024dfb8       0x38 /usr/lib/gcc/x86_64-linux-gnu/7/../../../x86_64-linux-gnu/Scrt1.o
+  *(.igot)
+                 0x000000000024e000                . = DATA_SEGMENT_RELRO_END (., 0x0)
+ 
+ .data           0x000000000024e000       0x10
+  *(.data .data.* .gnu.linkonce.d.*)
+  .data.rel.local
+                 0x000000000024e000        0x8 /usr/lib/gcc/x86_64-linux-gnu/7/crtbeginS.o
+                 0x000000000024e000                __dso_handle
+  .data.heap_size
+                 0x000000000024e008        0x8 build/main.o
+                 0x000000000024e008                heap_size
+ 
+ .tm_clone_table
+                 0x000000000024e010        0x0
+  .tm_clone_table
+                 0x000000000024e010        0x0 /usr/lib/gcc/x86_64-linux-gnu/7/crtbeginS.o
+  .tm_clone_table
+                 0x000000000024e010        0x0 /usr/lib/gcc/x86_64-linux-gnu/7/crtendS.o
+ 
+ .data1
+  *(.data1)
+                 0x000000000024e010                _edata = .
+                 [!provide]                        PROVIDE (edata = .)
+                 0x000000000024e010                . = .
+                 0x000000000024e010                __bss_start = .
+ 
+ .bss            0x000000000024e020      0x368
+  *(.dynbss)
+  .dynbss        0x000000000024e020        0x0 /usr/lib/gcc/x86_64-linux-gnu/7/../../../x86_64-linux-gnu/Scrt1.o
+  *(.bss .bss.* .gnu.linkonce.b.*)
+  .bss           0x000000000024e020        0x1 /usr/lib/gcc/x86_64-linux-gnu/7/crtbeginS.o
+  .bss.mp_dynamic_compiler
+                 0x000000000024e021        0x5 build/py/mpstate.o
+                 0x000000000024e021                mp_dynamic_compiler
+  *fill*         0x000000000024e026        0x2 
+  .bss.mp_verbose_flag
+                 0x000000000024e028        0x8 build/main.o
+                 0x000000000024e028                mp_verbose_flag
+  .bss.emit_opt  0x000000000024e030        0x4 build/main.o
+  *(COMMON)
+  *fill*         0x000000000024e034        0xc 
+  COMMON         0x000000000024e040      0x348 build/py/mpstate.o
+                 0x000000000024e040                mp_state_ctx
+                 0x000000000024e388                . = ALIGN ((. != 0x0)?0x8:0x1)
+ 
+ .lbss
+  *(.dynlbss)
+  *(.lbss .lbss.* .gnu.linkonce.lb.*)
+  *(LARGE_COMMON)
+                 0x000000000024e388                . = ALIGN (0x8)
+                 0x000000000024e388                . = SEGMENT_START ("ldata-segment", .)
+ 
+ .lrodata
+  *(.lrodata .lrodata.* .gnu.linkonce.lr.*)
+ 
+ .ldata          0x000000000064e388        0x0
+  *(.ldata .ldata.* .gnu.linkonce.l.*)
+                 0x000000000064e388                . = ALIGN ((. != 0x0)?0x8:0x1)
+                 0x000000000064e388                . = ALIGN (0x8)
+                 0x000000000064e388                _end = .
+                 [!provide]                        PROVIDE (end = .)
+                 0x000000000064e388                . = DATA_SEGMENT_END (.)
+ 
+ .stab
+  *(.stab)
+ 
+ .stabstr
+  *(.stabstr)
+ 
+ .stab.excl
+  *(.stab.excl)
+ 
+ .stab.exclstr
+  *(.stab.exclstr)
+ 
+ .stab.index
+  *(.stab.index)
+ 
+ .stab.indexstr
+  *(.stab.indexstr)
+ 
+ .comment        0x0000000000000000       0x29
+  *(.comment)
+  .comment       0x0000000000000000       0x29 /usr/lib/gcc/x86_64-linux-gnu/7/crtbeginS.o
+                                          0x2a (size before relaxing)
+  .comment       0x0000000000000029       0x2a build/py/mpstate.o
+  .comment       0x0000000000000029       0x2a build/py/nlr.o
+  .comment       0x0000000000000029       0x2a build/py/nlrx64.o
+  .comment       0x0000000000000029       0x2a build/py/malloc.o
+  .comment       0x0000000000000029       0x2a build/py/gc.o
+  .comment       0x0000000000000029       0x2a build/py/qstr.o
+  .comment       0x0000000000000029       0x2a build/py/vstr.o
+  .comment       0x0000000000000029       0x2a build/py/mpprint.o
+  .comment       0x0000000000000029       0x2a build/py/unicode.o
+  .comment       0x0000000000000029       0x2a build/py/mpz.o
+  .comment       0x0000000000000029       0x2a build/py/reader.o
+  .comment       0x0000000000000029       0x2a build/py/lexer.o
+  .comment       0x0000000000000029       0x2a build/py/parse.o
+  .comment       0x0000000000000029       0x2a build/py/scope.o
+  .comment       0x0000000000000029       0x2a build/py/compile.o
+  .comment       0x0000000000000029       0x2a build/py/emitcommon.o
+  .comment       0x0000000000000029       0x2a build/py/emitbc.o
+  .comment       0x0000000000000029       0x2a build/py/asmbase.o
+  .comment       0x0000000000000029       0x2a build/py/asmx64.o
+  .comment       0x0000000000000029       0x2a build/py/emitnx64.o
+  .comment       0x0000000000000029       0x2a build/py/asmx86.o
+  .comment       0x0000000000000029       0x2a build/py/emitnx86.o
+  .comment       0x0000000000000029       0x2a build/py/asmthumb.o
+  .comment       0x0000000000000029       0x2a build/py/emitnthumb.o
+  .comment       0x0000000000000029       0x2a build/py/emitinlinethumb.o
+  .comment       0x0000000000000029       0x2a build/py/asmarm.o
+  .comment       0x0000000000000029       0x2a build/py/emitnarm.o
+  .comment       0x0000000000000029       0x2a build/py/asmxtensa.o
+  .comment       0x0000000000000029       0x2a build/py/emitnxtensa.o
+  .comment       0x0000000000000029       0x2a build/py/emitinlinextensa.o
+  .comment       0x0000000000000029       0x2a build/py/emitnxtensawin.o
+  .comment       0x0000000000000029       0x2a build/py/formatfloat.o
+  .comment       0x0000000000000029       0x2a build/py/parsenumbase.o
+  .comment       0x0000000000000029       0x2a build/py/parsenum.o
+  .comment       0x0000000000000029       0x2a build/py/emitglue.o
+  .comment       0x0000000000000029       0x2a build/py/persistentcode.o
+  .comment       0x0000000000000029       0x2a build/py/runtime.o
+  .comment       0x0000000000000029       0x2a build/py/nativeglue.o
+  .comment       0x0000000000000029       0x2a build/py/stackctrl.o
+  .comment       0x0000000000000029       0x2a build/py/argcheck.o
+  .comment       0x0000000000000029       0x2a build/py/map.o
+  .comment       0x0000000000000029       0x2a build/py/obj.o
+  .comment       0x0000000000000029       0x2a build/py/objbool.o
+  .comment       0x0000000000000029       0x2a build/py/objboundmeth.o
+  .comment       0x0000000000000029       0x2a build/py/objcomplex.o
+  .comment       0x0000000000000029       0x2a build/py/objdict.o
+  .comment       0x0000000000000029       0x2a build/py/objexcept.o
+  .comment       0x0000000000000029       0x2a build/py/objfloat.o
+  .comment       0x0000000000000029       0x2a build/py/objfun.o
+  .comment       0x0000000000000029       0x2a build/py/objgetitemiter.o
+  .comment       0x0000000000000029       0x2a build/py/objint.o
+  .comment       0x0000000000000029       0x2a build/py/objint_mpz.o
+  .comment       0x0000000000000029       0x2a build/py/objlist.o
+  .comment       0x0000000000000029       0x2a build/py/objobject.o
+  .comment       0x0000000000000029       0x2a build/py/objpolyiter.o
+  .comment       0x0000000000000029       0x2a build/py/objproperty.o
+  .comment       0x0000000000000029       0x2a build/py/objnone.o
+  .comment       0x0000000000000029       0x2a build/py/objsingleton.o
+  .comment       0x0000000000000029       0x2a build/py/objslice.o
+  .comment       0x0000000000000029       0x2a build/py/objstr.o
+  .comment       0x0000000000000029       0x2a build/py/objstrunicode.o
+  .comment       0x0000000000000029       0x2a build/py/objtuple.o
+  .comment       0x0000000000000029       0x2a build/py/objtype.o
+  .comment       0x0000000000000029       0x2a build/py/opmethods.o
+  .comment       0x0000000000000029       0x2a build/py/sequence.o
+  .comment       0x0000000000000029       0x2a build/py/binary.o
+  .comment       0x0000000000000029       0x2a build/py/modbuiltins.o
+  .comment       0x0000000000000029       0x2a build/py/bc.o
+  .comment       0x0000000000000029       0x2a build/py/smallint.o
+  .comment       0x0000000000000029       0x2a build/main.o
+  .comment       0x0000000000000029       0x2a build/gccollect.o
+  .comment       0x0000000000000029       0x2a /usr/lib/gcc/x86_64-linux-gnu/7/crtendS.o
+ 
+ .debug
+  *(.debug)
+ 
+ .line
+  *(.line)
+ 
+ .debug_srcinfo
+  *(.debug_srcinfo)
+ 
+ .debug_sfnames
+  *(.debug_sfnames)
+ 
+ .debug_aranges
+  *(.debug_aranges)
+ 
+ .debug_pubnames
+  *(.debug_pubnames)
+ 
+ .debug_info
+  *(.debug_info .gnu.linkonce.wi.*)
+ 
+ .debug_abbrev
+  *(.debug_abbrev)
+ 
+ .debug_line
+  *(.debug_line .debug_line.* .debug_line_end)
+ 
+ .debug_frame
+  *(.debug_frame)
+ 
+ .debug_str
+  *(.debug_str)
+ 
+ .debug_loc
+  *(.debug_loc)
+ 
+ .debug_macinfo
+  *(.debug_macinfo)
+ 
+ .debug_weaknames
+  *(.debug_weaknames)
+ 
+ .debug_funcnames
+  *(.debug_funcnames)
+ 
+ .debug_typenames
+  *(.debug_typenames)
+ 
+ .debug_varnames
+  *(.debug_varnames)
+ 
+ .debug_pubtypes
+  *(.debug_pubtypes)
+ 
+ .debug_ranges
+  *(.debug_ranges)
+ 
+ .debug_macro
+  *(.debug_macro)
+ 
+ .debug_addr
+  *(.debug_addr)
+ 
+ .gnu.attributes
+  *(.gnu.attributes)
+ 
+ /DISCARD/
+  *(.note.GNU-stack)
+  *(.gnu_debuglink)
+  *(.gnu.lto_*)
+ OUTPUT(mpy-cross elf64-x86-64)
+ 
+ Cross Reference Table
+ 
+ Symbol                                            File
+ GLIBC_2.10                                        /lib/x86_64-linux-gnu/libc.so.6
+ GLIBC_2.11                                        /lib/x86_64-linux-gnu/libc.so.6
+ GLIBC_2.12                                        /lib/x86_64-linux-gnu/libc.so.6
+ GLIBC_2.13                                        /lib/x86_64-linux-gnu/libc.so.6
+ GLIBC_2.14                                        /lib/x86_64-linux-gnu/libc.so.6
+ GLIBC_2.15                                        /lib/x86_64-linux-gnu/libm.so.6
+                                                   /lib/x86_64-linux-gnu/libc.so.6
+ GLIBC_2.16                                        /lib/x86_64-linux-gnu/libc.so.6
+ GLIBC_2.17                                        /lib/x86_64-linux-gnu/libc.so.6
+ GLIBC_2.18                                        /lib/x86_64-linux-gnu/libm.so.6
+                                                   /lib/x86_64-linux-gnu/libc.so.6
+ GLIBC_2.2.5                                       /lib/x86_64-linux-gnu/libm.so.6
+                                                   /lib/x86_64-linux-gnu/ld-linux-x86-64.so.2
+                                                   /lib/x86_64-linux-gnu/libc.so.6
+ GLIBC_2.2.6                                       /lib/x86_64-linux-gnu/libc.so.6
+ GLIBC_2.22                                        /lib/x86_64-linux-gnu/libc.so.6
+ GLIBC_2.23                                        /lib/x86_64-linux-gnu/libm.so.6
+                                                   /lib/x86_64-linux-gnu/libc.so.6
+ GLIBC_2.24                                        /lib/x86_64-linux-gnu/libm.so.6
+                                                   /lib/x86_64-linux-gnu/libc.so.6
+ GLIBC_2.25                                        /lib/x86_64-linux-gnu/libm.so.6
+                                                   /lib/x86_64-linux-gnu/libc.so.6
+ GLIBC_2.26                                        /lib/x86_64-linux-gnu/libm.so.6
+                                                   /lib/x86_64-linux-gnu/libc.so.6
+ GLIBC_2.27                                        /lib/x86_64-linux-gnu/libm.so.6
+                                                   /lib/x86_64-linux-gnu/libc.so.6
+ GLIBC_2.3                                         /lib/x86_64-linux-gnu/libc.so.6
+                                                   /lib/x86_64-linux-gnu/ld-linux-x86-64.so.2
+ GLIBC_2.3.2                                       /lib/x86_64-linux-gnu/libc.so.6
+ GLIBC_2.3.3                                       /lib/x86_64-linux-gnu/libc.so.6
+ GLIBC_2.3.4                                       /lib/x86_64-linux-gnu/libc.so.6
+ GLIBC_2.4                                         /lib/x86_64-linux-gnu/libm.so.6
+                                                   /lib/x86_64-linux-gnu/ld-linux-x86-64.so.2
+                                                   /lib/x86_64-linux-gnu/libc.so.6
+ GLIBC_2.5                                         /lib/x86_64-linux-gnu/libc.so.6
+ GLIBC_2.6                                         /lib/x86_64-linux-gnu/libc.so.6
+ GLIBC_2.7                                         /lib/x86_64-linux-gnu/libc.so.6
+ GLIBC_2.8                                         /lib/x86_64-linux-gnu/libc.so.6
+ GLIBC_2.9                                         /lib/x86_64-linux-gnu/libc.so.6
+ GLIBC_PRIVATE                                     /lib/x86_64-linux-gnu/libc.so.6
+                                                   /lib/x86_64-linux-gnu/ld-linux-x86-64.so.2
+ _DYNAMIC                                          /usr/lib/gcc/x86_64-linux-gnu/7/../../../x86_64-linux-gnu/Scrt1.o
+ _Exit                                             /lib/x86_64-linux-gnu/libc.so.6
+ _Exit@@GLIBC_2.2.5                                /lib/x86_64-linux-gnu/libc.so.6
+ _Exit@GLIBC_2.2.5                                 /lib/x86_64-linux-gnu/libc.so.6
+ _GLOBAL_OFFSET_TABLE_                             /usr/lib/gcc/x86_64-linux-gnu/7/../../../x86_64-linux-gnu/Scrt1.o
+                                                   /usr/lib/x86_64-linux-gnu/libc_nonshared.a(elf-init.oS)
+                                                   build/gccollect.o
+                                                   build/main.o
+                                                   build/py/bc.o
+                                                   build/py/vm.o
+                                                   build/py/modstruct.o
+                                                   build/py/modmicropython.o
+                                                   build/py/modbuiltins.o
+                                                   build/py/builtinevex.o
+                                                   build/py/builtinimport.o
+                                                   build/py/binary.o
+                                                   build/py/stream.o
+                                                   build/py/sequence.o
+                                                   build/py/opmethods.o
+                                                   build/py/objzip.o
+                                                   build/py/objtype.o
+                                                   build/py/objtuple.o
+                                                   build/py/objstrunicode.o
+                                                   build/py/objstr.o
+                                                   build/py/objslice.o
+                                                   build/py/objsingleton.o
+                                                   build/py/objset.o
+                                                   build/py/objreversed.o
+                                                   build/py/objrange.o
+                                                   build/py/objnone.o
+                                                   build/py/objproperty.o
+                                                   build/py/objobject.o
+                                                   build/py/objmodule.o
+                                                   build/py/objmap.o
+                                                   build/py/objlist.o
+                                                   build/py/objint_mpz.o
+                                                   build/py/objint.o
+                                                   build/py/objgetitemiter.o
+                                                   build/py/objgenerator.o
+                                                   build/py/objfun.o
+                                                   build/py/objfloat.o
+                                                   build/py/objfilter.o
+                                                   build/py/objexcept.o
+                                                   build/py/objenumerate.o
+                                                   build/py/objdict.o
+                                                   build/py/objcomplex.o
+                                                   build/py/objclosure.o
+                                                   build/py/objcell.o
+                                                   build/py/objboundmeth.o
+                                                   build/py/objbool.o
+                                                   build/py/objarray.o
+                                                   build/py/obj.o
+                                                   build/py/map.o
+                                                   build/py/warning.o
+                                                   build/py/argcheck.o
+                                                   build/py/stackctrl.o
+                                                   build/py/nativeglue.o
+                                                   build/py/scheduler.o
+                                                   build/py/runtime_utils.o
+                                                   build/py/runtime.o
+                                                   build/py/persistentcode.o
+                                                   build/py/emitglue.o
+                                                   build/py/parsenum.o
+                                                   build/py/formatfloat.o
+                                                   build/py/emitnxtensawin.o
+                                                   build/py/emitinlinextensa.o
+                                                   build/py/emitnxtensa.o
+                                                   build/py/asmxtensa.o
+                                                   build/py/emitnarm.o
+                                                   build/py/asmarm.o
+                                                   build/py/emitinlinethumb.o
+                                                   build/py/emitnthumb.o
+                                                   build/py/asmthumb.o
+                                                   build/py/emitnx86.o
+                                                   build/py/asmx86.o
+                                                   build/py/emitnx64.o
+                                                   build/py/asmx64.o
+                                                   build/py/asmbase.o
+                                                   build/py/emitbc.o
+                                                   build/py/emitcommon.o
+                                                   build/py/mpfile.o
+                                                   build/py/compile.o
+                                                   build/py/scope.o
+                                                   build/py/parse.o
+                                                   build/py/lexer.o
+                                                   build/py/reader.o
+                                                   build/py/mpz.o
+                                                   build/py/mpprint.o
+                                                   build/py/vstr.o
+                                                   build/py/qstr.o
+                                                   build/py/gc.o
+                                                   build/py/malloc.o
+                                                   build/py/nlrx64.o
+                                                   /usr/lib/gcc/x86_64-linux-gnu/7/crtbeginS.o
+                                                   /usr/lib/gcc/x86_64-linux-gnu/7/../../../x86_64-linux-gnu/crti.o
+ _IO_fprintf                                       /lib/x86_64-linux-gnu/libc.so.6
+ _IO_fprintf@@GLIBC_2.2.5                          /lib/x86_64-linux-gnu/libc.so.6
+ _IO_fprintf@GLIBC_2.2.5                           /lib/x86_64-linux-gnu/libc.so.6
+ _IO_stdin_used                                    /usr/lib/gcc/x86_64-linux-gnu/7/../../../x86_64-linux-gnu/Scrt1.o
+ _ITM_deregisterTMCloneTable                       /lib/x86_64-linux-gnu/libm.so.6
+                                                   /usr/lib/gcc/x86_64-linux-gnu/7/crtbeginS.o
+ _ITM_registerTMCloneTable                         /lib/x86_64-linux-gnu/libm.so.6
+                                                   /usr/lib/gcc/x86_64-linux-gnu/7/crtbeginS.o
+ __GNU_EH_FRAME_HDR                                mpy-cross
+ __TMC_END__                                       /usr/lib/gcc/x86_64-linux-gnu/7/crtendS.o
+                                                   /usr/lib/gcc/x86_64-linux-gnu/7/crtbeginS.o
+ __after_morecore_hook                             /lib/x86_64-linux-gnu/libc.so.6
+ __after_morecore_hook@@GLIBC_2.2.5                /lib/x86_64-linux-gnu/libc.so.6
+ __after_morecore_hook@GLIBC_2.2.5                 /lib/x86_64-linux-gnu/libc.so.6
+ __compat_bdflush                                  /lib/x86_64-linux-gnu/libc.so.6
+ __connect                                         /lib/x86_64-linux-gnu/libc.so.6
+ __connect@@GLIBC_2.2.5                            /lib/x86_64-linux-gnu/libc.so.6
+ __connect@GLIBC_2.2.5                             /lib/x86_64-linux-gnu/libc.so.6
+ __ctype_get_mb_cur_max                            /lib/x86_64-linux-gnu/libc.so.6
+ __ctype_get_mb_cur_max@@GLIBC_2.2.5               /lib/x86_64-linux-gnu/libc.so.6
+ __ctype_get_mb_cur_max@GLIBC_2.2.5                /lib/x86_64-linux-gnu/libc.so.6
+ __data_start                                      /usr/lib/gcc/x86_64-linux-gnu/7/../../../x86_64-linux-gnu/Scrt1.o
+ __dso_handle                                      /usr/lib/gcc/x86_64-linux-gnu/7/crtbeginS.o
+ __fcntl                                           /lib/x86_64-linux-gnu/libc.so.6
+ __fcntl@@GLIBC_2.2.5                              /lib/x86_64-linux-gnu/libc.so.6
+ __fcntl@GLIBC_2.2.5                               /lib/x86_64-linux-gnu/libc.so.6
+ __free_hook                                       /lib/x86_64-linux-gnu/libc.so.6
+ __free_hook@@GLIBC_2.2.5                          /lib/x86_64-linux-gnu/libc.so.6
+ __free_hook@GLIBC_2.2.5                           /lib/x86_64-linux-gnu/libc.so.6
+ __getdelim                                        /lib/x86_64-linux-gnu/libc.so.6
+ __getdelim@@GLIBC_2.2.5                           /lib/x86_64-linux-gnu/libc.so.6
+ __getdelim@GLIBC_2.2.5                            /lib/x86_64-linux-gnu/libc.so.6
+ __gmon_start__                                    /lib/x86_64-linux-gnu/libm.so.6
+                                                   /usr/lib/gcc/x86_64-linux-gnu/7/../../../x86_64-linux-gnu/crti.o
+ __init_array_end                                  /usr/lib/x86_64-linux-gnu/libc_nonshared.a(elf-init.oS)
+ __init_array_start                                /usr/lib/x86_64-linux-gnu/libc_nonshared.a(elf-init.oS)
+ __isascii_l                                       /lib/x86_64-linux-gnu/libc.so.6
+ __isascii_l@@GLIBC_2.2.5                          /lib/x86_64-linux-gnu/libc.so.6
+ __isascii_l@GLIBC_2.2.5                           /lib/x86_64-linux-gnu/libc.so.6
+ __libc_csu_fini                                   /usr/lib/x86_64-linux-gnu/libc_nonshared.a(elf-init.oS)
+                                                   /usr/lib/gcc/x86_64-linux-gnu/7/../../../x86_64-linux-gnu/Scrt1.o
+ __libc_csu_init                                   /usr/lib/x86_64-linux-gnu/libc_nonshared.a(elf-init.oS)
+                                                   /usr/lib/gcc/x86_64-linux-gnu/7/../../../x86_64-linux-gnu/Scrt1.o
+ __libc_secure_getenv                              /lib/x86_64-linux-gnu/libc.so.6
+ __libc_secure_getenv@@GLIBC_PRIVATE               /lib/x86_64-linux-gnu/libc.so.6
+ __libc_secure_getenv@GLIBC_PRIVATE                /lib/x86_64-linux-gnu/libc.so.6
+ __malloc_hook                                     /lib/x86_64-linux-gnu/libc.so.6
+ __malloc_hook@@GLIBC_2.2.5                        /lib/x86_64-linux-gnu/libc.so.6
+ __malloc_hook@GLIBC_2.2.5                         /lib/x86_64-linux-gnu/libc.so.6
+ __malloc_initialize_hook@GLIBC_2.2.5              /lib/x86_64-linux-gnu/libc.so.6
+ __memalign_hook                                   /lib/x86_64-linux-gnu/libc.so.6
+ __memalign_hook@@GLIBC_2.2.5                      /lib/x86_64-linux-gnu/libc.so.6
+ __memalign_hook@GLIBC_2.2.5                       /lib/x86_64-linux-gnu/libc.so.6
+ __open                                            /lib/x86_64-linux-gnu/libc.so.6
+ __open64                                          /lib/x86_64-linux-gnu/libc.so.6
+ __open64@@GLIBC_2.2.5                             /lib/x86_64-linux-gnu/libc.so.6
+ __open64@GLIBC_2.2.5                              /lib/x86_64-linux-gnu/libc.so.6
+ __open@@GLIBC_2.2.5                               /lib/x86_64-linux-gnu/libc.so.6
+ __open@GLIBC_2.2.5                                /lib/x86_64-linux-gnu/libc.so.6
+ __open_nocancel                                   /lib/x86_64-linux-gnu/libc.so.6
+ __open_nocancel@@GLIBC_PRIVATE                    /lib/x86_64-linux-gnu/libc.so.6
+ __open_nocancel@GLIBC_PRIVATE                     /lib/x86_64-linux-gnu/libc.so.6
+ __pread64                                         /lib/x86_64-linux-gnu/libc.so.6
+ __pread64@@GLIBC_2.2.5                            /lib/x86_64-linux-gnu/libc.so.6
+ __pread64@GLIBC_2.2.5                             /lib/x86_64-linux-gnu/libc.so.6
+ __pwrite64                                        /lib/x86_64-linux-gnu/libc.so.6
+ __pwrite64@@GLIBC_2.2.5                           /lib/x86_64-linux-gnu/libc.so.6
+ __pwrite64@GLIBC_2.2.5                            /lib/x86_64-linux-gnu/libc.so.6
+ __realloc_hook                                    /lib/x86_64-linux-gnu/libc.so.6
+ __realloc_hook@@GLIBC_2.2.5                       /lib/x86_64-linux-gnu/libc.so.6
+ __realloc_hook@GLIBC_2.2.5                        /lib/x86_64-linux-gnu/libc.so.6
+ __recv                                            /lib/x86_64-linux-gnu/libc.so.6
+ __recv@@GLIBC_PRIVATE                             /lib/x86_64-linux-gnu/libc.so.6
+ __recv@GLIBC_PRIVATE                              /lib/x86_64-linux-gnu/libc.so.6
+ __secure_getenv@GLIBC_2.2.5                       /lib/x86_64-linux-gnu/libc.so.6
+ __sigaction                                       /lib/x86_64-linux-gnu/libc.so.6
+ __sigaction@@GLIBC_2.2.5                          /lib/x86_64-linux-gnu/libc.so.6
+ __sigaction@GLIBC_2.2.5                           /lib/x86_64-linux-gnu/libc.so.6
+ __strtoll_l                                       /lib/x86_64-linux-gnu/libc.so.6
+ __strtoll_l@@GLIBC_2.2.5                          /lib/x86_64-linux-gnu/libc.so.6
+ __strtoll_l@GLIBC_2.2.5                           /lib/x86_64-linux-gnu/libc.so.6
+ __strtoull_l                                      /lib/x86_64-linux-gnu/libc.so.6
+ __strtoull_l@@GLIBC_2.2.5                         /lib/x86_64-linux-gnu/libc.so.6
+ __strtoull_l@GLIBC_2.2.5                          /lib/x86_64-linux-gnu/libc.so.6
+ __toascii_l                                       /lib/x86_64-linux-gnu/libc.so.6
+ __toascii_l@@GLIBC_2.2.5                          /lib/x86_64-linux-gnu/libc.so.6
+ __toascii_l@GLIBC_2.2.5                           /lib/x86_64-linux-gnu/libc.so.6
+ __vsnprintf                                       /lib/x86_64-linux-gnu/libc.so.6
+ __vsnprintf@@GLIBC_2.2.5                          /lib/x86_64-linux-gnu/libc.so.6
+ __vsnprintf@GLIBC_2.2.5                           /lib/x86_64-linux-gnu/libc.so.6
+ __vsscanf                                         /lib/x86_64-linux-gnu/libc.so.6
+ __vsscanf@@GLIBC_2.2.5                            /lib/x86_64-linux-gnu/libc.so.6
+ __vsscanf@GLIBC_2.2.5                             /lib/x86_64-linux-gnu/libc.so.6
+ __wait                                            /lib/x86_64-linux-gnu/libc.so.6
+ __wait@@GLIBC_2.2.5                               /lib/x86_64-linux-gnu/libc.so.6
+ __wait@GLIBC_2.2.5                                /lib/x86_64-linux-gnu/libc.so.6
+ __wcstoll_l                                       /lib/x86_64-linux-gnu/libc.so.6
+ __wcstoll_l@@GLIBC_2.2.5                          /lib/x86_64-linux-gnu/libc.so.6
+ __wcstoll_l@GLIBC_2.2.5                           /lib/x86_64-linux-gnu/libc.so.6
+ __wcstoull_l                                      /lib/x86_64-linux-gnu/libc.so.6
+ __wcstoull_l@@GLIBC_2.2.5                         /lib/x86_64-linux-gnu/libc.so.6
+ __wcstoull_l@GLIBC_2.2.5                          /lib/x86_64-linux-gnu/libc.so.6
+ __write                                           /lib/x86_64-linux-gnu/libc.so.6
+ __write@@GLIBC_2.2.5                              /lib/x86_64-linux-gnu/libc.so.6
+ __write@GLIBC_2.2.5                               /lib/x86_64-linux-gnu/libc.so.6
+ __xpg_sigpause                                    /lib/x86_64-linux-gnu/libc.so.6
+ __xpg_sigpause@@GLIBC_2.2.5                       /lib/x86_64-linux-gnu/libc.so.6
+ __xpg_sigpause@GLIBC_2.2.5                        /lib/x86_64-linux-gnu/libc.so.6
+ _dl_starting_up                                   /lib/x86_64-linux-gnu/libc.so.6
+ _environ                                          /lib/x86_64-linux-gnu/libc.so.6
+ _environ@@GLIBC_2.2.5                             /lib/x86_64-linux-gnu/libc.so.6
+ _environ@GLIBC_2.2.5                              /lib/x86_64-linux-gnu/libc.so.6
+ _fini                                             /usr/lib/gcc/x86_64-linux-gnu/7/../../../x86_64-linux-gnu/crti.o
+ _flushlbf                                         /lib/x86_64-linux-gnu/libc.so.6
+ _flushlbf@@GLIBC_2.2.5                            /lib/x86_64-linux-gnu/libc.so.6
+ _flushlbf@GLIBC_2.2.5                             /lib/x86_64-linux-gnu/libc.so.6
+ _init                                             /usr/lib/gcc/x86_64-linux-gnu/7/../../../x86_64-linux-gnu/crti.o
+                                                   /usr/lib/x86_64-linux-gnu/libc_nonshared.a(elf-init.oS)
+ _longjmp                                          /lib/x86_64-linux-gnu/libc.so.6
+ _longjmp@@GLIBC_2.2.5                             /lib/x86_64-linux-gnu/libc.so.6
+ _longjmp@GLIBC_2.2.5                              /lib/x86_64-linux-gnu/libc.so.6
+ _start                                            /usr/lib/gcc/x86_64-linux-gnu/7/../../../x86_64-linux-gnu/Scrt1.o
+ access                                            /lib/x86_64-linux-gnu/libc.so.6
+ access@@GLIBC_2.2.5                               /lib/x86_64-linux-gnu/libc.so.6
+ access@GLIBC_2.2.5                                /lib/x86_64-linux-gnu/libc.so.6
+ acos                                              /lib/x86_64-linux-gnu/libm.so.6
+ acos@@GLIBC_2.2.5                                 /lib/x86_64-linux-gnu/libm.so.6
+ acos@GLIBC_2.2.5                                  /lib/x86_64-linux-gnu/libm.so.6
+ acosf                                             /lib/x86_64-linux-gnu/libm.so.6
+ acosf128                                          /lib/x86_64-linux-gnu/libm.so.6
+ acosf128@@GLIBC_2.26                              /lib/x86_64-linux-gnu/libm.so.6
+ acosf128@GLIBC_2.26                               /lib/x86_64-linux-gnu/libm.so.6
+ acosf32                                           /lib/x86_64-linux-gnu/libm.so.6
+ acosf32@@GLIBC_2.27                               /lib/x86_64-linux-gnu/libm.so.6
+ acosf32@GLIBC_2.27                                /lib/x86_64-linux-gnu/libm.so.6
+ acosf32x                                          /lib/x86_64-linux-gnu/libm.so.6
+ acosf32x@@GLIBC_2.27                              /lib/x86_64-linux-gnu/libm.so.6
+ acosf32x@GLIBC_2.27                               /lib/x86_64-linux-gnu/libm.so.6
+ acosf64                                           /lib/x86_64-linux-gnu/libm.so.6
+ acosf64@@GLIBC_2.27                               /lib/x86_64-linux-gnu/libm.so.6
+ acosf64@GLIBC_2.27                                /lib/x86_64-linux-gnu/libm.so.6
+ acosf64x                                          /lib/x86_64-linux-gnu/libm.so.6
+ acosf64x@@GLIBC_2.27                              /lib/x86_64-linux-gnu/libm.so.6
+ acosf64x@GLIBC_2.27                               /lib/x86_64-linux-gnu/libm.so.6
+ acosf@@GLIBC_2.2.5                                /lib/x86_64-linux-gnu/libm.so.6
+ acosf@GLIBC_2.2.5                                 /lib/x86_64-linux-gnu/libm.so.6
+ acosh                                             /lib/x86_64-linux-gnu/libm.so.6
+ acosh@@GLIBC_2.2.5                                /lib/x86_64-linux-gnu/libm.so.6
+ acosh@GLIBC_2.2.5                                 /lib/x86_64-linux-gnu/libm.so.6
+ acoshf                                            /lib/x86_64-linux-gnu/libm.so.6
+ acoshf128                                         /lib/x86_64-linux-gnu/libm.so.6
+ acoshf128@@GLIBC_2.26                             /lib/x86_64-linux-gnu/libm.so.6
+ acoshf128@GLIBC_2.26                              /lib/x86_64-linux-gnu/libm.so.6
+ acoshf32                                          /lib/x86_64-linux-gnu/libm.so.6
+ acoshf32@@GLIBC_2.27                              /lib/x86_64-linux-gnu/libm.so.6
+ acoshf32@GLIBC_2.27                               /lib/x86_64-linux-gnu/libm.so.6
+ acoshf32x                                         /lib/x86_64-linux-gnu/libm.so.6
+ acoshf32x@@GLIBC_2.27                             /lib/x86_64-linux-gnu/libm.so.6
+ acoshf32x@GLIBC_2.27                              /lib/x86_64-linux-gnu/libm.so.6
+ acoshf64                                          /lib/x86_64-linux-gnu/libm.so.6
+ acoshf64@@GLIBC_2.27                              /lib/x86_64-linux-gnu/libm.so.6
+ acoshf64@GLIBC_2.27                               /lib/x86_64-linux-gnu/libm.so.6
+ acoshf64x                                         /lib/x86_64-linux-gnu/libm.so.6
+ acoshf64x@@GLIBC_2.27                             /lib/x86_64-linux-gnu/libm.so.6
+ acoshf64x@GLIBC_2.27                              /lib/x86_64-linux-gnu/libm.so.6
+ acoshf@@GLIBC_2.2.5                               /lib/x86_64-linux-gnu/libm.so.6
+ acoshf@GLIBC_2.2.5                                /lib/x86_64-linux-gnu/libm.so.6
+ acoshl                                            /lib/x86_64-linux-gnu/libm.so.6
+ acoshl@@GLIBC_2.2.5                               /lib/x86_64-linux-gnu/libm.so.6
+ acoshl@GLIBC_2.2.5                                /lib/x86_64-linux-gnu/libm.so.6
+ acosl                                             /lib/x86_64-linux-gnu/libm.so.6
+ acosl@@GLIBC_2.2.5                                /lib/x86_64-linux-gnu/libm.so.6
+ acosl@GLIBC_2.2.5                                 /lib/x86_64-linux-gnu/libm.so.6
+ addmntent                                         /lib/x86_64-linux-gnu/libc.so.6
+ addmntent@@GLIBC_2.2.5                            /lib/x86_64-linux-gnu/libc.so.6
+ addmntent@GLIBC_2.2.5                             /lib/x86_64-linux-gnu/libc.so.6
+ addseverity                                       /lib/x86_64-linux-gnu/libc.so.6
+ addseverity@@GLIBC_2.2.5                          /lib/x86_64-linux-gnu/libc.so.6
+ addseverity@GLIBC_2.2.5                           /lib/x86_64-linux-gnu/libc.so.6
+ adjtime                                           /lib/x86_64-linux-gnu/libc.so.6
+ adjtime@@GLIBC_2.2.5                              /lib/x86_64-linux-gnu/libc.so.6
+ adjtime@GLIBC_2.2.5                               /lib/x86_64-linux-gnu/libc.so.6
+ adjtimex                                          /lib/x86_64-linux-gnu/libc.so.6
+ adjtimex@@GLIBC_2.2.5                             /lib/x86_64-linux-gnu/libc.so.6
+ adjtimex@GLIBC_2.2.5                              /lib/x86_64-linux-gnu/libc.so.6
+ advance@GLIBC_2.2.5                               /lib/x86_64-linux-gnu/libc.so.6
+ aligned_alloc                                     /lib/x86_64-linux-gnu/libc.so.6
+ aligned_alloc@@GLIBC_2.16                         /lib/x86_64-linux-gnu/libc.so.6
+ aligned_alloc@GLIBC_2.16                          /lib/x86_64-linux-gnu/libc.so.6
+ alphasort64                                       /lib/x86_64-linux-gnu/libc.so.6
+ alphasort64@@GLIBC_2.2.5                          /lib/x86_64-linux-gnu/libc.so.6
+ alphasort64@GLIBC_2.2.5                           /lib/x86_64-linux-gnu/libc.so.6
+ arch_prctl                                        /lib/x86_64-linux-gnu/libc.so.6
+ arch_prctl@@GLIBC_2.2.5                           /lib/x86_64-linux-gnu/libc.so.6
+ arch_prctl@GLIBC_2.2.5                            /lib/x86_64-linux-gnu/libc.so.6
+ argp_error                                        /lib/x86_64-linux-gnu/libc.so.6
+ argp_error@@GLIBC_2.2.5                           /lib/x86_64-linux-gnu/libc.so.6
+ argp_error@GLIBC_2.2.5                            /lib/x86_64-linux-gnu/libc.so.6
+ argp_failure                                      /lib/x86_64-linux-gnu/libc.so.6
+ argp_failure@@GLIBC_2.2.5                         /lib/x86_64-linux-gnu/libc.so.6
+ argp_failure@GLIBC_2.2.5                          /lib/x86_64-linux-gnu/libc.so.6
+ argp_help                                         /lib/x86_64-linux-gnu/libc.so.6
+ argp_help@@GLIBC_2.2.5                            /lib/x86_64-linux-gnu/libc.so.6
+ argp_help@GLIBC_2.2.5                             /lib/x86_64-linux-gnu/libc.so.6
+ argp_parse                                        /lib/x86_64-linux-gnu/libc.so.6
+ argp_parse@@GLIBC_2.2.5                           /lib/x86_64-linux-gnu/libc.so.6
+ argp_parse@GLIBC_2.2.5                            /lib/x86_64-linux-gnu/libc.so.6
+ argp_state_help                                   /lib/x86_64-linux-gnu/libc.so.6
+ argp_state_help@@GLIBC_2.2.5                      /lib/x86_64-linux-gnu/libc.so.6
+ argp_state_help@GLIBC_2.2.5                       /lib/x86_64-linux-gnu/libc.so.6
+ argp_usage                                        /lib/x86_64-linux-gnu/libc.so.6
+ argp_usage@@GLIBC_2.2.5                           /lib/x86_64-linux-gnu/libc.so.6
+ argp_usage@GLIBC_2.2.5                            /lib/x86_64-linux-gnu/libc.so.6
+ argz_add                                          /lib/x86_64-linux-gnu/libc.so.6
+ argz_add@@GLIBC_2.2.5                             /lib/x86_64-linux-gnu/libc.so.6
+ argz_add@GLIBC_2.2.5                              /lib/x86_64-linux-gnu/libc.so.6
+ argz_add_sep                                      /lib/x86_64-linux-gnu/libc.so.6
+ argz_add_sep@@GLIBC_2.2.5                         /lib/x86_64-linux-gnu/libc.so.6
+ argz_add_sep@GLIBC_2.2.5                          /lib/x86_64-linux-gnu/libc.so.6
+ argz_append                                       /lib/x86_64-linux-gnu/libc.so.6
+ argz_append@@GLIBC_2.2.5                          /lib/x86_64-linux-gnu/libc.so.6
+ argz_append@GLIBC_2.2.5                           /lib/x86_64-linux-gnu/libc.so.6
+ argz_count                                        /lib/x86_64-linux-gnu/libc.so.6
+ argz_count@@GLIBC_2.2.5                           /lib/x86_64-linux-gnu/libc.so.6
+ argz_count@GLIBC_2.2.5                            /lib/x86_64-linux-gnu/libc.so.6
+ argz_create                                       /lib/x86_64-linux-gnu/libc.so.6
+ argz_create@@GLIBC_2.2.5                          /lib/x86_64-linux-gnu/libc.so.6
+ argz_create@GLIBC_2.2.5                           /lib/x86_64-linux-gnu/libc.so.6
+ argz_create_sep                                   /lib/x86_64-linux-gnu/libc.so.6
+ argz_create_sep@@GLIBC_2.2.5                      /lib/x86_64-linux-gnu/libc.so.6
+ argz_create_sep@GLIBC_2.2.5                       /lib/x86_64-linux-gnu/libc.so.6
+ argz_extract                                      /lib/x86_64-linux-gnu/libc.so.6
+ argz_extract@@GLIBC_2.2.5                         /lib/x86_64-linux-gnu/libc.so.6
+ argz_extract@GLIBC_2.2.5                          /lib/x86_64-linux-gnu/libc.so.6
+ argz_insert                                       /lib/x86_64-linux-gnu/libc.so.6
+ argz_insert@@GLIBC_2.2.5                          /lib/x86_64-linux-gnu/libc.so.6
+ argz_insert@GLIBC_2.2.5                           /lib/x86_64-linux-gnu/libc.so.6
+ argz_next                                         /lib/x86_64-linux-gnu/libc.so.6
+ argz_next@@GLIBC_2.2.5                            /lib/x86_64-linux-gnu/libc.so.6
+ argz_next@GLIBC_2.2.5                             /lib/x86_64-linux-gnu/libc.so.6
+ argz_replace                                      /lib/x86_64-linux-gnu/libc.so.6
+ argz_replace@@GLIBC_2.2.5                         /lib/x86_64-linux-gnu/libc.so.6
+ argz_replace@GLIBC_2.2.5                          /lib/x86_64-linux-gnu/libc.so.6
+ argz_stringify                                    /lib/x86_64-linux-gnu/libc.so.6
+ argz_stringify@@GLIBC_2.2.5                       /lib/x86_64-linux-gnu/libc.so.6
+ argz_stringify@GLIBC_2.2.5                        /lib/x86_64-linux-gnu/libc.so.6
+ asctime_r                                         /lib/x86_64-linux-gnu/libc.so.6
+ asctime_r@@GLIBC_2.2.5                            /lib/x86_64-linux-gnu/libc.so.6
+ asctime_r@GLIBC_2.2.5                             /lib/x86_64-linux-gnu/libc.so.6
+ asin                                              /lib/x86_64-linux-gnu/libm.so.6
+ asin@@GLIBC_2.2.5                                 /lib/x86_64-linux-gnu/libm.so.6
+ asin@GLIBC_2.2.5                                  /lib/x86_64-linux-gnu/libm.so.6
+ asinf                                             /lib/x86_64-linux-gnu/libm.so.6
+ asinf128                                          /lib/x86_64-linux-gnu/libm.so.6
+ asinf128@@GLIBC_2.26                              /lib/x86_64-linux-gnu/libm.so.6
+ asinf128@GLIBC_2.26                               /lib/x86_64-linux-gnu/libm.so.6
+ asinf32                                           /lib/x86_64-linux-gnu/libm.so.6
+ asinf32@@GLIBC_2.27                               /lib/x86_64-linux-gnu/libm.so.6
+ asinf32@GLIBC_2.27                                /lib/x86_64-linux-gnu/libm.so.6
+ asinf32x                                          /lib/x86_64-linux-gnu/libm.so.6
+ asinf32x@@GLIBC_2.27                              /lib/x86_64-linux-gnu/libm.so.6
+ asinf32x@GLIBC_2.27                               /lib/x86_64-linux-gnu/libm.so.6
+ asinf64                                           /lib/x86_64-linux-gnu/libm.so.6
+ asinf64@@GLIBC_2.27                               /lib/x86_64-linux-gnu/libm.so.6
+ asinf64@GLIBC_2.27                                /lib/x86_64-linux-gnu/libm.so.6
+ asinf64x                                          /lib/x86_64-linux-gnu/libm.so.6
+ asinf64x@@GLIBC_2.27                              /lib/x86_64-linux-gnu/libm.so.6
+ asinf64x@GLIBC_2.27                               /lib/x86_64-linux-gnu/libm.so.6
+ asinf@@GLIBC_2.2.5                                /lib/x86_64-linux-gnu/libm.so.6
+ asinf@GLIBC_2.2.5                                 /lib/x86_64-linux-gnu/libm.so.6
+ asinh                                             /lib/x86_64-linux-gnu/libm.so.6
+ asinh@@GLIBC_2.2.5                                /lib/x86_64-linux-gnu/libm.so.6
+ asinh@GLIBC_2.2.5                                 /lib/x86_64-linux-gnu/libm.so.6
+ asinhf                                            /lib/x86_64-linux-gnu/libm.so.6
+ asinhf128                                         /lib/x86_64-linux-gnu/libm.so.6
+ asinhf128@@GLIBC_2.26                             /lib/x86_64-linux-gnu/libm.so.6
+ asinhf128@GLIBC_2.26                              /lib/x86_64-linux-gnu/libm.so.6
+ asinhf32                                          /lib/x86_64-linux-gnu/libm.so.6
+ asinhf32@@GLIBC_2.27                              /lib/x86_64-linux-gnu/libm.so.6
+ asinhf32@GLIBC_2.27                               /lib/x86_64-linux-gnu/libm.so.6
+ asinhf32x                                         /lib/x86_64-linux-gnu/libm.so.6
+ asinhf32x@@GLIBC_2.27                             /lib/x86_64-linux-gnu/libm.so.6
+ asinhf32x@GLIBC_2.27                              /lib/x86_64-linux-gnu/libm.so.6
+ asinhf64                                          /lib/x86_64-linux-gnu/libm.so.6
+ asinhf64@@GLIBC_2.27                              /lib/x86_64-linux-gnu/libm.so.6
+ asinhf64@GLIBC_2.27                               /lib/x86_64-linux-gnu/libm.so.6
+ asinhf64x                                         /lib/x86_64-linux-gnu/libm.so.6
+ asinhf64x@@GLIBC_2.27                             /lib/x86_64-linux-gnu/libm.so.6
+ asinhf64x@GLIBC_2.27                              /lib/x86_64-linux-gnu/libm.so.6
+ asinhf@@GLIBC_2.2.5                               /lib/x86_64-linux-gnu/libm.so.6
+ asinhf@GLIBC_2.2.5                                /lib/x86_64-linux-gnu/libm.so.6
+ asinhl                                            /lib/x86_64-linux-gnu/libm.so.6
+ asinhl@@GLIBC_2.2.5                               /lib/x86_64-linux-gnu/libm.so.6
+ asinhl@GLIBC_2.2.5                                /lib/x86_64-linux-gnu/libm.so.6
+ asinl                                             /lib/x86_64-linux-gnu/libm.so.6
+ asinl@@GLIBC_2.2.5                                /lib/x86_64-linux-gnu/libm.so.6
+ asinl@GLIBC_2.2.5                                 /lib/x86_64-linux-gnu/libm.so.6
+ asm_arm_add_reg_reg_reg                           build/py/asmarm.o
+                                                   build/py/emitnarm.o
+ asm_arm_and_reg_reg_reg                           build/py/asmarm.o
+                                                   build/py/emitnarm.o
+ asm_arm_asr_reg_reg                               build/py/asmarm.o
+                                                   build/py/emitnarm.o
+ asm_arm_b_label                                   build/py/asmarm.o
+                                                   build/py/emitnarm.o
+ asm_arm_bcc_label                                 build/py/asmarm.o
+                                                   build/py/emitnarm.o
+ asm_arm_bkpt                                      build/py/asmarm.o
+ asm_arm_bl_ind                                    build/py/asmarm.o
+                                                   build/py/emitnarm.o
+ asm_arm_bx_reg                                    build/py/asmarm.o
+                                                   build/py/emitnarm.o
+ asm_arm_cmp_reg_i8                                build/py/asmarm.o
+                                                   build/py/emitnarm.o
+ asm_arm_cmp_reg_reg                               build/py/asmarm.o
+                                                   build/py/emitnarm.o
+ asm_arm_end_pass                                  build/py/asmarm.o
+                                                   build/py/emitnarm.o
+ asm_arm_entry                                     build/py/asmarm.o
+                                                   build/py/emitnarm.o
+ asm_arm_eor_reg_reg_reg                           build/py/asmarm.o
+                                                   build/py/emitnarm.o
+ asm_arm_exit                                      build/py/asmarm.o
+                                                   build/py/emitnarm.o
+ asm_arm_ldr_reg_reg                               build/py/asmarm.o
+                                                   build/py/emitnarm.o
+ asm_arm_ldrb_reg_reg                              build/py/asmarm.o
+                                                   build/py/emitnarm.o
+ asm_arm_ldrh_reg_reg                              build/py/asmarm.o
+                                                   build/py/emitnarm.o
+ asm_arm_lsl_reg_reg                               build/py/asmarm.o
+                                                   build/py/emitnarm.o
+ asm_arm_mov_local_reg                             build/py/asmarm.o
+                                                   build/py/emitnarm.o
+ asm_arm_mov_reg_i32                               build/py/asmarm.o
+                                                   build/py/emitnarm.o
+ asm_arm_mov_reg_i32_optimised                     build/py/asmarm.o
+                                                   build/py/emitnarm.o
+ asm_arm_mov_reg_local                             build/py/asmarm.o
+                                                   build/py/emitnarm.o
+ asm_arm_mov_reg_local_addr                        build/py/asmarm.o
+                                                   build/py/emitnarm.o
+ asm_arm_mov_reg_pcrel                             build/py/asmarm.o
+                                                   build/py/emitnarm.o
+ asm_arm_mov_reg_reg                               build/py/asmarm.o
+                                                   build/py/emitnarm.o
+ asm_arm_mul_reg_reg_reg                           build/py/asmarm.o
+                                                   build/py/emitnarm.o
+ asm_arm_orr_reg_reg_reg                           build/py/asmarm.o
+                                                   build/py/emitnarm.o
+ asm_arm_pop                                       build/py/asmarm.o
+ asm_arm_push                                      build/py/asmarm.o
+ asm_arm_setcc_reg                                 build/py/asmarm.o
+                                                   build/py/emitnarm.o
+ asm_arm_str_reg_reg                               build/py/asmarm.o
+                                                   build/py/emitnarm.o
+ asm_arm_str_reg_reg_reg                           build/py/asmarm.o
+                                                   build/py/emitnarm.o
+ asm_arm_strb_reg_reg                              build/py/asmarm.o
+                                                   build/py/emitnarm.o
+ asm_arm_strb_reg_reg_reg                          build/py/asmarm.o
+                                                   build/py/emitnarm.o
+ asm_arm_strh_reg_reg                              build/py/asmarm.o
+                                                   build/py/emitnarm.o
+ asm_arm_strh_reg_reg_reg                          build/py/asmarm.o
+                                                   build/py/emitnarm.o
+ asm_arm_sub_reg_reg_reg                           build/py/asmarm.o
+                                                   build/py/emitnarm.o
+ asm_thumb_b_label                                 build/py/asmthumb.o
+                                                   build/py/emitnthumb.o
+ asm_thumb_b_n_label                               build/py/asmthumb.o
+                                                   build/py/emitinlinethumb.o
+ asm_thumb_bcc_label                               build/py/asmthumb.o
+                                                   build/py/emitnthumb.o
+ asm_thumb_bcc_nw_label                            build/py/asmthumb.o
+                                                   build/py/emitinlinethumb.o
+ asm_thumb_bl_ind                                  build/py/asmthumb.o
+                                                   build/py/emitnthumb.o
+ asm_thumb_bl_label                                build/py/asmthumb.o
+                                                   build/py/emitinlinethumb.o
+ asm_thumb_end_pass                                build/py/asmthumb.o
+                                                   build/py/emitinlinethumb.o
+                                                   build/py/emitnthumb.o
+ asm_thumb_entry                                   build/py/asmthumb.o
+                                                   build/py/emitinlinethumb.o
+                                                   build/py/emitnthumb.o
+ asm_thumb_exit                                    build/py/asmthumb.o
+                                                   build/py/emitinlinethumb.o
+                                                   build/py/emitnthumb.o
+ asm_thumb_format_4                                build/py/asmthumb.o
+                                                   build/py/emitinlinethumb.o
+                                                   build/py/emitnthumb.o
+ asm_thumb_ldr_reg_reg_i12_optimised               build/py/asmthumb.o
+                                                   build/py/emitnthumb.o
+ asm_thumb_mov_local_reg                           build/py/asmthumb.o
+                                                   build/py/emitnthumb.o
+ asm_thumb_mov_reg_i16                             build/py/asmthumb.o
+                                                   build/py/emitinlinethumb.o
+                                                   build/py/emitnthumb.o
+ asm_thumb_mov_reg_i32                             build/py/asmthumb.o
+                                                   build/py/emitnthumb.o
+ asm_thumb_mov_reg_i32_optimised                   build/py/asmthumb.o
+                                                   build/py/emitnthumb.o
+ asm_thumb_mov_reg_local                           build/py/asmthumb.o
+                                                   build/py/emitnthumb.o
+ asm_thumb_mov_reg_local_addr                      build/py/asmthumb.o
+                                                   build/py/emitnthumb.o
+ asm_thumb_mov_reg_pcrel                           build/py/asmthumb.o
+                                                   build/py/emitnthumb.o
+ asm_thumb_mov_reg_reg                             build/py/asmthumb.o
+                                                   build/py/emitinlinethumb.o
+                                                   build/py/emitnthumb.o
+ asm_thumb_op16                                    build/py/asmthumb.o
+                                                   build/py/emitinlinethumb.o
+                                                   build/py/emitnthumb.o
+ asm_thumb_op32                                    build/py/asmthumb.o
+                                                   build/py/emitinlinethumb.o
+ asm_x64_add_r64_r64                               build/py/asmx64.o
+                                                   build/py/emitnx64.o
+ asm_x64_and_r64_r64                               build/py/asmx64.o
+                                                   build/py/emitnx64.o
+ asm_x64_call_ind                                  build/py/asmx64.o
+                                                   build/py/emitnx64.o
+ asm_x64_cmp_r64_with_r64                          build/py/asmx64.o
+                                                   build/py/emitnx64.o
+ asm_x64_entry                                     build/py/asmx64.o
+                                                   build/py/emitnx64.o
+ asm_x64_exit                                      build/py/asmx64.o
+                                                   build/py/emitnx64.o
+ asm_x64_jcc_label                                 build/py/asmx64.o
+                                                   build/py/emitnx64.o
+ asm_x64_jmp_label                                 build/py/asmx64.o
+                                                   build/py/emitnx64.o
+ asm_x64_jmp_reg                                   build/py/asmx64.o
+                                                   build/py/emitnx64.o
+ asm_x64_mov_i32_to_r64                            build/py/asmx64.o
+                                                   build/py/emitnx64.o
+ asm_x64_mov_i64_to_r64                            build/py/asmx64.o
+ asm_x64_mov_i64_to_r64_optimised                  build/py/asmx64.o
+                                                   build/py/emitnx64.o
+ asm_x64_mov_local_addr_to_r64                     build/py/asmx64.o
+                                                   build/py/emitnx64.o
+ asm_x64_mov_local_to_r64                          build/py/asmx64.o
+                                                   build/py/emitnx64.o
+ asm_x64_mov_mem16_to_r64zx                        build/py/asmx64.o
+                                                   build/py/emitnx64.o
+ asm_x64_mov_mem32_to_r64zx                        build/py/asmx64.o
+                                                   build/py/emitnx64.o
+ asm_x64_mov_mem64_to_r64                          build/py/asmx64.o
+                                                   build/py/emitnx64.o
+ asm_x64_mov_mem8_to_r64zx                         build/py/asmx64.o
+                                                   build/py/emitnx64.o
+ asm_x64_mov_r16_to_mem16                          build/py/asmx64.o
+                                                   build/py/emitnx64.o
+ asm_x64_mov_r32_to_mem32                          build/py/asmx64.o
+                                                   build/py/emitnx64.o
+ asm_x64_mov_r64_r64                               build/py/asmx64.o
+                                                   build/py/emitnx64.o
+ asm_x64_mov_r64_to_local                          build/py/asmx64.o
+                                                   build/py/emitnx64.o
+ asm_x64_mov_r64_to_mem64                          build/py/asmx64.o
+                                                   build/py/emitnx64.o
+ asm_x64_mov_r8_to_mem8                            build/py/asmx64.o
+                                                   build/py/emitnx64.o
+ asm_x64_mov_reg_pcrel                             build/py/asmx64.o
+                                                   build/py/emitnx64.o
+ asm_x64_mul_r64_r64                               build/py/asmx64.o
+                                                   build/py/emitnx64.o
+ asm_x64_nop                                       build/py/asmx64.o
+ asm_x64_or_r64_r64                                build/py/asmx64.o
+                                                   build/py/emitnx64.o
+ asm_x64_pop_r64                                   build/py/asmx64.o
+ asm_x64_push_r64                                  build/py/asmx64.o
+ asm_x64_sar_r64_cl                                build/py/asmx64.o
+                                                   build/py/emitnx64.o
+ asm_x64_setcc_r8                                  build/py/asmx64.o
+                                                   build/py/emitnx64.o
+ asm_x64_shl_r64_cl                                build/py/asmx64.o
+                                                   build/py/emitnx64.o
+ asm_x64_sub_r64_r64                               build/py/asmx64.o
+                                                   build/py/emitnx64.o
+ asm_x64_test_r64_with_r64                         build/py/asmx64.o
+                                                   build/py/emitnx64.o
+ asm_x64_test_r8_with_r8                           build/py/asmx64.o
+                                                   build/py/emitnx64.o
+ asm_x64_xor_r64_r64                               build/py/asmx64.o
+                                                   build/py/emitnx64.o
+ asm_x86_add_r32_r32                               build/py/asmx86.o
+                                                   build/py/emitnx86.o
+ asm_x86_and_r32_r32                               build/py/asmx86.o
+                                                   build/py/emitnx86.o
+ asm_x86_call_ind                                  build/py/asmx86.o
+                                                   build/py/emitnx86.o
+ asm_x86_cmp_r32_with_r32                          build/py/asmx86.o
+                                                   build/py/emitnx86.o
+ asm_x86_entry                                     build/py/asmx86.o
+                                                   build/py/emitnx86.o
+ asm_x86_exit                                      build/py/asmx86.o
+                                                   build/py/emitnx86.o
+ asm_x86_jcc_label                                 build/py/asmx86.o
+                                                   build/py/emitnx86.o
+ asm_x86_jmp_label                                 build/py/asmx86.o
+                                                   build/py/emitnx86.o
+ asm_x86_jmp_reg                                   build/py/asmx86.o
+                                                   build/py/emitnx86.o
+ asm_x86_mov_arg_to_r32                            build/py/asmx86.o
+                                                   build/py/emitnx86.o
+ asm_x86_mov_i32_to_r32                            build/py/asmx86.o
+                                                   build/py/emitnx86.o
+ asm_x86_mov_local_addr_to_r32                     build/py/asmx86.o
+                                                   build/py/emitnx86.o
+ asm_x86_mov_local_to_r32                          build/py/asmx86.o
+                                                   build/py/emitnx86.o
+ asm_x86_mov_mem16_to_r32zx                        build/py/asmx86.o
+                                                   build/py/emitnx86.o
+ asm_x86_mov_mem32_to_r32                          build/py/asmx86.o
+                                                   build/py/emitnx86.o
+ asm_x86_mov_mem8_to_r32zx                         build/py/asmx86.o
+                                                   build/py/emitnx86.o
+ asm_x86_mov_r16_to_mem16                          build/py/asmx86.o
+                                                   build/py/emitnx86.o
+ asm_x86_mov_r32_r32                               build/py/asmx86.o
+                                                   build/py/emitnx86.o
+ asm_x86_mov_r32_to_local                          build/py/asmx86.o
+                                                   build/py/emitnx86.o
+ asm_x86_mov_r32_to_mem32                          build/py/asmx86.o
+                                                   build/py/emitnx86.o
+ asm_x86_mov_r8_to_mem8                            build/py/asmx86.o
+                                                   build/py/emitnx86.o
+ asm_x86_mov_reg_pcrel                             build/py/asmx86.o
+                                                   build/py/emitnx86.o
+ asm_x86_mul_r32_r32                               build/py/asmx86.o
+                                                   build/py/emitnx86.o
+ asm_x86_or_r32_r32                                build/py/asmx86.o
+                                                   build/py/emitnx86.o
+ asm_x86_sar_r32_cl                                build/py/asmx86.o
+                                                   build/py/emitnx86.o
+ asm_x86_setcc_r8                                  build/py/asmx86.o
+                                                   build/py/emitnx86.o
+ asm_x86_shl_r32_cl                                build/py/asmx86.o
+                                                   build/py/emitnx86.o
+ asm_x86_sub_r32_r32                               build/py/asmx86.o
+                                                   build/py/emitnx86.o
+ asm_x86_test_r32_with_r32                         build/py/asmx86.o
+                                                   build/py/emitnx86.o
+ asm_x86_test_r8_with_r8                           build/py/asmx86.o
+                                                   build/py/emitnx86.o
+ asm_x86_xor_r32_r32                               build/py/asmx86.o
+                                                   build/py/emitnx86.o
+ asm_xtensa_bcc_reg_reg_label                      build/py/asmxtensa.o
+                                                   build/py/emitnxtensawin.o
+                                                   build/py/emitinlinextensa.o
+                                                   build/py/emitnxtensa.o
+ asm_xtensa_bccz_reg_label                         build/py/asmxtensa.o
+                                                   build/py/emitnxtensawin.o
+                                                   build/py/emitinlinextensa.o
+                                                   build/py/emitnxtensa.o
+ asm_xtensa_call_ind                               build/py/asmxtensa.o
+                                                   build/py/emitnxtensa.o
+ asm_xtensa_call_ind_win                           build/py/asmxtensa.o
+                                                   build/py/emitnxtensawin.o
+ asm_xtensa_end_pass                               build/py/asmxtensa.o
+                                                   build/py/emitnxtensawin.o
+                                                   build/py/emitinlinextensa.o
+                                                   build/py/emitnxtensa.o
+ asm_xtensa_entry                                  build/py/asmxtensa.o
+                                                   build/py/emitinlinextensa.o
+                                                   build/py/emitnxtensa.o
+ asm_xtensa_entry_win                              build/py/asmxtensa.o
+                                                   build/py/emitnxtensawin.o
+ asm_xtensa_exit                                   build/py/asmxtensa.o
+                                                   build/py/emitinlinextensa.o
+                                                   build/py/emitnxtensa.o
+ asm_xtensa_exit_win                               build/py/asmxtensa.o
+                                                   build/py/emitnxtensawin.o
+ asm_xtensa_j_label                                build/py/asmxtensa.o
+                                                   build/py/emitnxtensawin.o
+                                                   build/py/emitinlinextensa.o
+                                                   build/py/emitnxtensa.o
+ asm_xtensa_mov_local_reg                          build/py/asmxtensa.o
+                                                   build/py/emitnxtensawin.o
+                                                   build/py/emitnxtensa.o
+ asm_xtensa_mov_reg_i32                            build/py/asmxtensa.o
+                                                   build/py/emitnxtensawin.o
+                                                   build/py/emitinlinextensa.o
+                                                   build/py/emitnxtensa.o
+ asm_xtensa_mov_reg_i32_optimised                  build/py/asmxtensa.o
+                                                   build/py/emitnxtensawin.o
+                                                   build/py/emitnxtensa.o
+ asm_xtensa_mov_reg_local                          build/py/asmxtensa.o
+                                                   build/py/emitnxtensawin.o
+                                                   build/py/emitnxtensa.o
+ asm_xtensa_mov_reg_local_addr                     build/py/asmxtensa.o
+                                                   build/py/emitnxtensawin.o
+                                                   build/py/emitnxtensa.o
+ asm_xtensa_mov_reg_pcrel                          build/py/asmxtensa.o
+                                                   build/py/emitnxtensawin.o
+                                                   build/py/emitnxtensa.o
+ asm_xtensa_op16                                   build/py/asmxtensa.o
+                                                   build/py/emitnxtensawin.o
+                                                   build/py/emitinlinextensa.o
+                                                   build/py/emitnxtensa.o
+ asm_xtensa_op24                                   build/py/asmxtensa.o
+                                                   build/py/emitnxtensawin.o
+                                                   build/py/emitinlinextensa.o
+                                                   build/py/emitnxtensa.o
+ asm_xtensa_setcc_reg_reg_reg                      build/py/asmxtensa.o
+                                                   build/py/emitnxtensawin.o
+                                                   build/py/emitnxtensa.o
+ asprintf                                          /lib/x86_64-linux-gnu/libc.so.6
+ asprintf@@GLIBC_2.2.5                             /lib/x86_64-linux-gnu/libc.so.6
+ asprintf@GLIBC_2.2.5                              /lib/x86_64-linux-gnu/libc.so.6
+ atan                                              /lib/x86_64-linux-gnu/libm.so.6
+ atan2                                             /lib/x86_64-linux-gnu/libm.so.6
+                                                   build/py/objcomplex.o
+ atan2@@GLIBC_2.2.5                                /lib/x86_64-linux-gnu/libm.so.6
+ atan2@GLIBC_2.2.5                                 /lib/x86_64-linux-gnu/libm.so.6
+ atan2f                                            /lib/x86_64-linux-gnu/libm.so.6
+ atan2f128                                         /lib/x86_64-linux-gnu/libm.so.6
+ atan2f128@@GLIBC_2.26                             /lib/x86_64-linux-gnu/libm.so.6
+ atan2f128@GLIBC_2.26                              /lib/x86_64-linux-gnu/libm.so.6
+ atan2f32                                          /lib/x86_64-linux-gnu/libm.so.6
+ atan2f32@@GLIBC_2.27                              /lib/x86_64-linux-gnu/libm.so.6
+ atan2f32@GLIBC_2.27                               /lib/x86_64-linux-gnu/libm.so.6
+ atan2f32x                                         /lib/x86_64-linux-gnu/libm.so.6
+ atan2f32x@@GLIBC_2.27                             /lib/x86_64-linux-gnu/libm.so.6
+ atan2f32x@GLIBC_2.27                              /lib/x86_64-linux-gnu/libm.so.6
+ atan2f64                                          /lib/x86_64-linux-gnu/libm.so.6
+ atan2f64@@GLIBC_2.27                              /lib/x86_64-linux-gnu/libm.so.6
+ atan2f64@GLIBC_2.27                               /lib/x86_64-linux-gnu/libm.so.6
+ atan2f64x                                         /lib/x86_64-linux-gnu/libm.so.6
+ atan2f64x@@GLIBC_2.27                             /lib/x86_64-linux-gnu/libm.so.6
+ atan2f64x@GLIBC_2.27                              /lib/x86_64-linux-gnu/libm.so.6
+ atan2f@@GLIBC_2.2.5                               /lib/x86_64-linux-gnu/libm.so.6
+ atan2f@GLIBC_2.2.5                                /lib/x86_64-linux-gnu/libm.so.6
+ atan2l                                            /lib/x86_64-linux-gnu/libm.so.6
+ atan2l@@GLIBC_2.2.5                               /lib/x86_64-linux-gnu/libm.so.6
+ atan2l@GLIBC_2.2.5                                /lib/x86_64-linux-gnu/libm.so.6
+ atan@@GLIBC_2.2.5                                 /lib/x86_64-linux-gnu/libm.so.6
+ atan@GLIBC_2.2.5                                  /lib/x86_64-linux-gnu/libm.so.6
+ atanf                                             /lib/x86_64-linux-gnu/libm.so.6
+ atanf128                                          /lib/x86_64-linux-gnu/libm.so.6
+ atanf128@@GLIBC_2.26                              /lib/x86_64-linux-gnu/libm.so.6
+ atanf128@GLIBC_2.26                               /lib/x86_64-linux-gnu/libm.so.6
+ atanf32                                           /lib/x86_64-linux-gnu/libm.so.6
+ atanf32@@GLIBC_2.27                               /lib/x86_64-linux-gnu/libm.so.6
+ atanf32@GLIBC_2.27                                /lib/x86_64-linux-gnu/libm.so.6
+ atanf32x                                          /lib/x86_64-linux-gnu/libm.so.6
+ atanf32x@@GLIBC_2.27                              /lib/x86_64-linux-gnu/libm.so.6
+ atanf32x@GLIBC_2.27                               /lib/x86_64-linux-gnu/libm.so.6
+ atanf64                                           /lib/x86_64-linux-gnu/libm.so.6
+ atanf64@@GLIBC_2.27                               /lib/x86_64-linux-gnu/libm.so.6
+ atanf64@GLIBC_2.27                                /lib/x86_64-linux-gnu/libm.so.6
+ atanf64x                                          /lib/x86_64-linux-gnu/libm.so.6
+ atanf64x@@GLIBC_2.27                              /lib/x86_64-linux-gnu/libm.so.6
+ atanf64x@GLIBC_2.27                               /lib/x86_64-linux-gnu/libm.so.6
+ atanf@@GLIBC_2.2.5                                /lib/x86_64-linux-gnu/libm.so.6
+ atanf@GLIBC_2.2.5                                 /lib/x86_64-linux-gnu/libm.so.6
+ atanh                                             /lib/x86_64-linux-gnu/libm.so.6
+ atanh@@GLIBC_2.2.5                                /lib/x86_64-linux-gnu/libm.so.6
+ atanh@GLIBC_2.2.5                                 /lib/x86_64-linux-gnu/libm.so.6
+ atanhf                                            /lib/x86_64-linux-gnu/libm.so.6
+ atanhf128                                         /lib/x86_64-linux-gnu/libm.so.6
+ atanhf128@@GLIBC_2.26                             /lib/x86_64-linux-gnu/libm.so.6
+ atanhf128@GLIBC_2.26                              /lib/x86_64-linux-gnu/libm.so.6
+ atanhf32                                          /lib/x86_64-linux-gnu/libm.so.6
+ atanhf32@@GLIBC_2.27                              /lib/x86_64-linux-gnu/libm.so.6
+ atanhf32@GLIBC_2.27                               /lib/x86_64-linux-gnu/libm.so.6
+ atanhf32x                                         /lib/x86_64-linux-gnu/libm.so.6
+ atanhf32x@@GLIBC_2.27                             /lib/x86_64-linux-gnu/libm.so.6
+ atanhf32x@GLIBC_2.27                              /lib/x86_64-linux-gnu/libm.so.6
+ atanhf64                                          /lib/x86_64-linux-gnu/libm.so.6
+ atanhf64@@GLIBC_2.27                              /lib/x86_64-linux-gnu/libm.so.6
+ atanhf64@GLIBC_2.27                               /lib/x86_64-linux-gnu/libm.so.6
+ atanhf64x                                         /lib/x86_64-linux-gnu/libm.so.6
+ atanhf64x@@GLIBC_2.27                             /lib/x86_64-linux-gnu/libm.so.6
+ atanhf64x@GLIBC_2.27                              /lib/x86_64-linux-gnu/libm.so.6
+ atanhf@@GLIBC_2.2.5                               /lib/x86_64-linux-gnu/libm.so.6
+ atanhf@GLIBC_2.2.5                                /lib/x86_64-linux-gnu/libm.so.6
+ atanhl                                            /lib/x86_64-linux-gnu/libm.so.6
+ atanhl@@GLIBC_2.2.5                               /lib/x86_64-linux-gnu/libm.so.6
+ atanhl@GLIBC_2.2.5                                /lib/x86_64-linux-gnu/libm.so.6
+ atanl                                             /lib/x86_64-linux-gnu/libm.so.6
+ atanl@@GLIBC_2.2.5                                /lib/x86_64-linux-gnu/libm.so.6
+ atanl@GLIBC_2.2.5                                 /lib/x86_64-linux-gnu/libm.so.6
+ backtrace                                         /lib/x86_64-linux-gnu/libc.so.6
+ backtrace@@GLIBC_2.2.5                            /lib/x86_64-linux-gnu/libc.so.6
+ backtrace@GLIBC_2.2.5                             /lib/x86_64-linux-gnu/libc.so.6
+ backtrace_symbols                                 /lib/x86_64-linux-gnu/libc.so.6
+ backtrace_symbols@@GLIBC_2.2.5                    /lib/x86_64-linux-gnu/libc.so.6
+ backtrace_symbols@GLIBC_2.2.5                     /lib/x86_64-linux-gnu/libc.so.6
+ backtrace_symbols_fd                              /lib/x86_64-linux-gnu/libc.so.6
+ backtrace_symbols_fd@@GLIBC_2.2.5                 /lib/x86_64-linux-gnu/libc.so.6
+ backtrace_symbols_fd@GLIBC_2.2.5                  /lib/x86_64-linux-gnu/libc.so.6
+ basename                                          /lib/x86_64-linux-gnu/libc.so.6
+ basename@@GLIBC_2.2.5                             /lib/x86_64-linux-gnu/libc.so.6
+ basename@GLIBC_2.2.5                              /lib/x86_64-linux-gnu/libc.so.6
+ bcmp                                              /lib/x86_64-linux-gnu/libc.so.6
+ bcmp@@GLIBC_2.2.5                                 /lib/x86_64-linux-gnu/libc.so.6
+ bcmp@GLIBC_2.2.5                                  /lib/x86_64-linux-gnu/libc.so.6
+ bind                                              /lib/x86_64-linux-gnu/libc.so.6
+ bind@@GLIBC_2.2.5                                 /lib/x86_64-linux-gnu/libc.so.6
+ bind@GLIBC_2.2.5                                  /lib/x86_64-linux-gnu/libc.so.6
+ bind_textdomain_codeset                           /lib/x86_64-linux-gnu/libc.so.6
+ bind_textdomain_codeset@@GLIBC_2.2.5              /lib/x86_64-linux-gnu/libc.so.6
+ bind_textdomain_codeset@GLIBC_2.2.5               /lib/x86_64-linux-gnu/libc.so.6
+ bindtextdomain                                    /lib/x86_64-linux-gnu/libc.so.6
+ bindtextdomain@@GLIBC_2.2.5                       /lib/x86_64-linux-gnu/libc.so.6
+ bindtextdomain@GLIBC_2.2.5                        /lib/x86_64-linux-gnu/libc.so.6
+ brk                                               /lib/x86_64-linux-gnu/libc.so.6
+ brk@@GLIBC_2.2.5                                  /lib/x86_64-linux-gnu/libc.so.6
+ brk@GLIBC_2.2.5                                   /lib/x86_64-linux-gnu/libc.so.6
+ bsd_signal                                        /lib/x86_64-linux-gnu/libc.so.6
+ bsd_signal@@GLIBC_2.2.5                           /lib/x86_64-linux-gnu/libc.so.6
+ bsd_signal@GLIBC_2.2.5                            /lib/x86_64-linux-gnu/libc.so.6
+ btowc                                             /lib/x86_64-linux-gnu/libc.so.6
+ btowc@@GLIBC_2.2.5                                /lib/x86_64-linux-gnu/libc.so.6
+ btowc@GLIBC_2.2.5                                 /lib/x86_64-linux-gnu/libc.so.6
+ bytes_decode_obj                                  build/py/objstr.o
+                                                   build/py/objarray.o
+ bzero                                             /lib/x86_64-linux-gnu/libc.so.6
+ bzero@@GLIBC_2.2.5                                /lib/x86_64-linux-gnu/libc.so.6
+ bzero@GLIBC_2.2.5                                 /lib/x86_64-linux-gnu/libc.so.6
+ c32rtomb                                          /lib/x86_64-linux-gnu/libc.so.6
+ c32rtomb@@GLIBC_2.16                              /lib/x86_64-linux-gnu/libc.so.6
+ c32rtomb@GLIBC_2.16                               /lib/x86_64-linux-gnu/libc.so.6
+ cabs                                              /lib/x86_64-linux-gnu/libm.so.6
+ cabs@@GLIBC_2.2.5                                 /lib/x86_64-linux-gnu/libm.so.6
+ cabs@GLIBC_2.2.5                                  /lib/x86_64-linux-gnu/libm.so.6
+ cabsf                                             /lib/x86_64-linux-gnu/libm.so.6
+ cabsf128                                          /lib/x86_64-linux-gnu/libm.so.6
+ cabsf128@@GLIBC_2.26                              /lib/x86_64-linux-gnu/libm.so.6
+ cabsf128@GLIBC_2.26                               /lib/x86_64-linux-gnu/libm.so.6
+ cabsf32                                           /lib/x86_64-linux-gnu/libm.so.6
+ cabsf32@@GLIBC_2.27                               /lib/x86_64-linux-gnu/libm.so.6
+ cabsf32@GLIBC_2.27                                /lib/x86_64-linux-gnu/libm.so.6
+ cabsf32x                                          /lib/x86_64-linux-gnu/libm.so.6
+ cabsf32x@@GLIBC_2.27                              /lib/x86_64-linux-gnu/libm.so.6
+ cabsf32x@GLIBC_2.27                               /lib/x86_64-linux-gnu/libm.so.6
+ cabsf64                                           /lib/x86_64-linux-gnu/libm.so.6
+ cabsf64@@GLIBC_2.27                               /lib/x86_64-linux-gnu/libm.so.6
+ cabsf64@GLIBC_2.27                                /lib/x86_64-linux-gnu/libm.so.6
+ cabsf64x                                          /lib/x86_64-linux-gnu/libm.so.6
+ cabsf64x@@GLIBC_2.27                              /lib/x86_64-linux-gnu/libm.so.6
+ cabsf64x@GLIBC_2.27                               /lib/x86_64-linux-gnu/libm.so.6
+ cabsf@@GLIBC_2.2.5                                /lib/x86_64-linux-gnu/libm.so.6
+ cabsf@GLIBC_2.2.5                                 /lib/x86_64-linux-gnu/libm.so.6
+ cabsl                                             /lib/x86_64-linux-gnu/libm.so.6
+ cabsl@@GLIBC_2.2.5                                /lib/x86_64-linux-gnu/libm.so.6
+ cabsl@GLIBC_2.2.5                                 /lib/x86_64-linux-gnu/libm.so.6
+ cacos                                             /lib/x86_64-linux-gnu/libm.so.6
+ cacos@@GLIBC_2.2.5                                /lib/x86_64-linux-gnu/libm.so.6
+ cacos@GLIBC_2.2.5                                 /lib/x86_64-linux-gnu/libm.so.6
+ cacosf                                            /lib/x86_64-linux-gnu/libm.so.6
+ cacosf128                                         /lib/x86_64-linux-gnu/libm.so.6
+ cacosf128@@GLIBC_2.26                             /lib/x86_64-linux-gnu/libm.so.6
+ cacosf128@GLIBC_2.26                              /lib/x86_64-linux-gnu/libm.so.6
+ cacosf32                                          /lib/x86_64-linux-gnu/libm.so.6
+ cacosf32@@GLIBC_2.27                              /lib/x86_64-linux-gnu/libm.so.6
+ cacosf32@GLIBC_2.27                               /lib/x86_64-linux-gnu/libm.so.6
+ cacosf32x                                         /lib/x86_64-linux-gnu/libm.so.6
+ cacosf32x@@GLIBC_2.27                             /lib/x86_64-linux-gnu/libm.so.6
+ cacosf32x@GLIBC_2.27                              /lib/x86_64-linux-gnu/libm.so.6
+ cacosf64                                          /lib/x86_64-linux-gnu/libm.so.6
+ cacosf64@@GLIBC_2.27                              /lib/x86_64-linux-gnu/libm.so.6
+ cacosf64@GLIBC_2.27                               /lib/x86_64-linux-gnu/libm.so.6
+ cacosf64x                                         /lib/x86_64-linux-gnu/libm.so.6
+ cacosf64x@@GLIBC_2.27                             /lib/x86_64-linux-gnu/libm.so.6
+ cacosf64x@GLIBC_2.27                              /lib/x86_64-linux-gnu/libm.so.6
+ cacosf@@GLIBC_2.2.5                               /lib/x86_64-linux-gnu/libm.so.6
+ cacosf@GLIBC_2.2.5                                /lib/x86_64-linux-gnu/libm.so.6
+ cacosh                                            /lib/x86_64-linux-gnu/libm.so.6
+ cacosh@@GLIBC_2.2.5                               /lib/x86_64-linux-gnu/libm.so.6
+ cacosh@GLIBC_2.2.5                                /lib/x86_64-linux-gnu/libm.so.6
+ cacoshf                                           /lib/x86_64-linux-gnu/libm.so.6
+ cacoshf128                                        /lib/x86_64-linux-gnu/libm.so.6
+ cacoshf128@@GLIBC_2.26                            /lib/x86_64-linux-gnu/libm.so.6
+ cacoshf128@GLIBC_2.26                             /lib/x86_64-linux-gnu/libm.so.6
+ cacoshf32                                         /lib/x86_64-linux-gnu/libm.so.6
+ cacoshf32@@GLIBC_2.27                             /lib/x86_64-linux-gnu/libm.so.6
+ cacoshf32@GLIBC_2.27                              /lib/x86_64-linux-gnu/libm.so.6
+ cacoshf32x                                        /lib/x86_64-linux-gnu/libm.so.6
+ cacoshf32x@@GLIBC_2.27                            /lib/x86_64-linux-gnu/libm.so.6
+ cacoshf32x@GLIBC_2.27                             /lib/x86_64-linux-gnu/libm.so.6
+ cacoshf64                                         /lib/x86_64-linux-gnu/libm.so.6
+ cacoshf64@@GLIBC_2.27                             /lib/x86_64-linux-gnu/libm.so.6
+ cacoshf64@GLIBC_2.27                              /lib/x86_64-linux-gnu/libm.so.6
+ cacoshf64x                                        /lib/x86_64-linux-gnu/libm.so.6
+ cacoshf64x@@GLIBC_2.27                            /lib/x86_64-linux-gnu/libm.so.6
+ cacoshf64x@GLIBC_2.27                             /lib/x86_64-linux-gnu/libm.so.6
+ cacoshf@@GLIBC_2.2.5                              /lib/x86_64-linux-gnu/libm.so.6
+ cacoshf@GLIBC_2.2.5                               /lib/x86_64-linux-gnu/libm.so.6
+ cacoshl                                           /lib/x86_64-linux-gnu/libm.so.6
+ cacoshl@@GLIBC_2.2.5                              /lib/x86_64-linux-gnu/libm.so.6
+ cacoshl@GLIBC_2.2.5                               /lib/x86_64-linux-gnu/libm.so.6
+ cacosl                                            /lib/x86_64-linux-gnu/libm.so.6
+ cacosl@@GLIBC_2.2.5                               /lib/x86_64-linux-gnu/libm.so.6
+ cacosl@GLIBC_2.2.5                                /lib/x86_64-linux-gnu/libm.so.6
+ calloc                                            /lib/x86_64-linux-gnu/libc.so.6
+ calloc@@GLIBC_2.2.5                               /lib/x86_64-linux-gnu/libc.so.6
+                                                   /lib/x86_64-linux-gnu/ld-linux-x86-64.so.2
+ calloc@GLIBC_2.2.5                                /lib/x86_64-linux-gnu/libc.so.6
+ canonicalize                                      /lib/x86_64-linux-gnu/libm.so.6
+ canonicalize@@GLIBC_2.25                          /lib/x86_64-linux-gnu/libm.so.6
+ canonicalize@GLIBC_2.25                           /lib/x86_64-linux-gnu/libm.so.6
+ canonicalize_file_name                            /lib/x86_64-linux-gnu/libc.so.6
+ canonicalize_file_name@@GLIBC_2.2.5               /lib/x86_64-linux-gnu/libc.so.6
+ canonicalize_file_name@GLIBC_2.2.5                /lib/x86_64-linux-gnu/libc.so.6
+ canonicalizef                                     /lib/x86_64-linux-gnu/libm.so.6
+ canonicalizef128                                  /lib/x86_64-linux-gnu/libm.so.6
+ canonicalizef128@@GLIBC_2.26                      /lib/x86_64-linux-gnu/libm.so.6
+ canonicalizef128@GLIBC_2.26                       /lib/x86_64-linux-gnu/libm.so.6
+ canonicalizef32                                   /lib/x86_64-linux-gnu/libm.so.6
+ canonicalizef32@@GLIBC_2.27                       /lib/x86_64-linux-gnu/libm.so.6
+ canonicalizef32@GLIBC_2.27                        /lib/x86_64-linux-gnu/libm.so.6
+ canonicalizef32x                                  /lib/x86_64-linux-gnu/libm.so.6
+ canonicalizef32x@@GLIBC_2.27                      /lib/x86_64-linux-gnu/libm.so.6
+ canonicalizef32x@GLIBC_2.27                       /lib/x86_64-linux-gnu/libm.so.6
+ canonicalizef64                                   /lib/x86_64-linux-gnu/libm.so.6
+ canonicalizef64@@GLIBC_2.27                       /lib/x86_64-linux-gnu/libm.so.6
+ canonicalizef64@GLIBC_2.27                        /lib/x86_64-linux-gnu/libm.so.6
+ canonicalizef64x                                  /lib/x86_64-linux-gnu/libm.so.6
+ canonicalizef64x@@GLIBC_2.27                      /lib/x86_64-linux-gnu/libm.so.6
+ canonicalizef64x@GLIBC_2.27                       /lib/x86_64-linux-gnu/libm.so.6
+ canonicalizef@@GLIBC_2.25                         /lib/x86_64-linux-gnu/libm.so.6
+ canonicalizef@GLIBC_2.25                          /lib/x86_64-linux-gnu/libm.so.6
+ canonicalizel                                     /lib/x86_64-linux-gnu/libm.so.6
+ canonicalizel@@GLIBC_2.25                         /lib/x86_64-linux-gnu/libm.so.6
+ canonicalizel@GLIBC_2.25                          /lib/x86_64-linux-gnu/libm.so.6
+ carg                                              /lib/x86_64-linux-gnu/libm.so.6
+ carg@@GLIBC_2.2.5                                 /lib/x86_64-linux-gnu/libm.so.6
+ carg@GLIBC_2.2.5                                  /lib/x86_64-linux-gnu/libm.so.6
+ cargf                                             /lib/x86_64-linux-gnu/libm.so.6
+ cargf128                                          /lib/x86_64-linux-gnu/libm.so.6
+ cargf128@@GLIBC_2.26                              /lib/x86_64-linux-gnu/libm.so.6
+ cargf128@GLIBC_2.26                               /lib/x86_64-linux-gnu/libm.so.6
+ cargf32                                           /lib/x86_64-linux-gnu/libm.so.6
+ cargf32@@GLIBC_2.27                               /lib/x86_64-linux-gnu/libm.so.6
+ cargf32@GLIBC_2.27                                /lib/x86_64-linux-gnu/libm.so.6
+ cargf32x                                          /lib/x86_64-linux-gnu/libm.so.6
+ cargf32x@@GLIBC_2.27                              /lib/x86_64-linux-gnu/libm.so.6
+ cargf32x@GLIBC_2.27                               /lib/x86_64-linux-gnu/libm.so.6
+ cargf64                                           /lib/x86_64-linux-gnu/libm.so.6
+ cargf64@@GLIBC_2.27                               /lib/x86_64-linux-gnu/libm.so.6
+ cargf64@GLIBC_2.27                                /lib/x86_64-linux-gnu/libm.so.6
+ cargf64x                                          /lib/x86_64-linux-gnu/libm.so.6
+ cargf64x@@GLIBC_2.27                              /lib/x86_64-linux-gnu/libm.so.6
+ cargf64x@GLIBC_2.27                               /lib/x86_64-linux-gnu/libm.so.6
+ cargf@@GLIBC_2.2.5                                /lib/x86_64-linux-gnu/libm.so.6
+ cargf@GLIBC_2.2.5                                 /lib/x86_64-linux-gnu/libm.so.6
+ cargl                                             /lib/x86_64-linux-gnu/libm.so.6
+ cargl@@GLIBC_2.2.5                                /lib/x86_64-linux-gnu/libm.so.6
+ cargl@GLIBC_2.2.5                                 /lib/x86_64-linux-gnu/libm.so.6
+ casin                                             /lib/x86_64-linux-gnu/libm.so.6
+ casin@@GLIBC_2.2.5                                /lib/x86_64-linux-gnu/libm.so.6
+ casin@GLIBC_2.2.5                                 /lib/x86_64-linux-gnu/libm.so.6
+ casinf                                            /lib/x86_64-linux-gnu/libm.so.6
+ casinf128                                         /lib/x86_64-linux-gnu/libm.so.6
+ casinf128@@GLIBC_2.26                             /lib/x86_64-linux-gnu/libm.so.6
+ casinf128@GLIBC_2.26                              /lib/x86_64-linux-gnu/libm.so.6
+ casinf32                                          /lib/x86_64-linux-gnu/libm.so.6
+ casinf32@@GLIBC_2.27                              /lib/x86_64-linux-gnu/libm.so.6
+ casinf32@GLIBC_2.27                               /lib/x86_64-linux-gnu/libm.so.6
+ casinf32x                                         /lib/x86_64-linux-gnu/libm.so.6
+ casinf32x@@GLIBC_2.27                             /lib/x86_64-linux-gnu/libm.so.6
+ casinf32x@GLIBC_2.27                              /lib/x86_64-linux-gnu/libm.so.6
+ casinf64                                          /lib/x86_64-linux-gnu/libm.so.6
+ casinf64@@GLIBC_2.27                              /lib/x86_64-linux-gnu/libm.so.6
+ casinf64@GLIBC_2.27                               /lib/x86_64-linux-gnu/libm.so.6
+ casinf64x                                         /lib/x86_64-linux-gnu/libm.so.6
+ casinf64x@@GLIBC_2.27                             /lib/x86_64-linux-gnu/libm.so.6
+ casinf64x@GLIBC_2.27                              /lib/x86_64-linux-gnu/libm.so.6
+ casinf@@GLIBC_2.2.5                               /lib/x86_64-linux-gnu/libm.so.6
+ casinf@GLIBC_2.2.5                                /lib/x86_64-linux-gnu/libm.so.6
+ casinh                                            /lib/x86_64-linux-gnu/libm.so.6
+ casinh@@GLIBC_2.2.5                               /lib/x86_64-linux-gnu/libm.so.6
+ casinh@GLIBC_2.2.5                                /lib/x86_64-linux-gnu/libm.so.6
+ casinhf                                           /lib/x86_64-linux-gnu/libm.so.6
+ casinhf128                                        /lib/x86_64-linux-gnu/libm.so.6
+ casinhf128@@GLIBC_2.26                            /lib/x86_64-linux-gnu/libm.so.6
+ casinhf128@GLIBC_2.26                             /lib/x86_64-linux-gnu/libm.so.6
+ casinhf32                                         /lib/x86_64-linux-gnu/libm.so.6
+ casinhf32@@GLIBC_2.27                             /lib/x86_64-linux-gnu/libm.so.6
+ casinhf32@GLIBC_2.27                              /lib/x86_64-linux-gnu/libm.so.6
+ casinhf32x                                        /lib/x86_64-linux-gnu/libm.so.6
+ casinhf32x@@GLIBC_2.27                            /lib/x86_64-linux-gnu/libm.so.6
+ casinhf32x@GLIBC_2.27                             /lib/x86_64-linux-gnu/libm.so.6
+ casinhf64                                         /lib/x86_64-linux-gnu/libm.so.6
+ casinhf64@@GLIBC_2.27                             /lib/x86_64-linux-gnu/libm.so.6
+ casinhf64@GLIBC_2.27                              /lib/x86_64-linux-gnu/libm.so.6
+ casinhf64x                                        /lib/x86_64-linux-gnu/libm.so.6
+ casinhf64x@@GLIBC_2.27                            /lib/x86_64-linux-gnu/libm.so.6
+ casinhf64x@GLIBC_2.27                             /lib/x86_64-linux-gnu/libm.so.6
+ casinhf@@GLIBC_2.2.5                              /lib/x86_64-linux-gnu/libm.so.6
+ casinhf@GLIBC_2.2.5                               /lib/x86_64-linux-gnu/libm.so.6
+ casinhl                                           /lib/x86_64-linux-gnu/libm.so.6
+ casinhl@@GLIBC_2.2.5                              /lib/x86_64-linux-gnu/libm.so.6
+ casinhl@GLIBC_2.2.5                               /lib/x86_64-linux-gnu/libm.so.6
+ casinl                                            /lib/x86_64-linux-gnu/libm.so.6
+ casinl@@GLIBC_2.2.5                               /lib/x86_64-linux-gnu/libm.so.6
+ casinl@GLIBC_2.2.5                                /lib/x86_64-linux-gnu/libm.so.6
+ catan                                             /lib/x86_64-linux-gnu/libm.so.6
+ catan@@GLIBC_2.2.5                                /lib/x86_64-linux-gnu/libm.so.6
+ catan@GLIBC_2.2.5                                 /lib/x86_64-linux-gnu/libm.so.6
+ catanf                                            /lib/x86_64-linux-gnu/libm.so.6
+ catanf128                                         /lib/x86_64-linux-gnu/libm.so.6
+ catanf128@@GLIBC_2.26                             /lib/x86_64-linux-gnu/libm.so.6
+ catanf128@GLIBC_2.26                              /lib/x86_64-linux-gnu/libm.so.6
+ catanf32                                          /lib/x86_64-linux-gnu/libm.so.6
+ catanf32@@GLIBC_2.27                              /lib/x86_64-linux-gnu/libm.so.6
+ catanf32@GLIBC_2.27                               /lib/x86_64-linux-gnu/libm.so.6
+ catanf32x                                         /lib/x86_64-linux-gnu/libm.so.6
+ catanf32x@@GLIBC_2.27                             /lib/x86_64-linux-gnu/libm.so.6
+ catanf32x@GLIBC_2.27                              /lib/x86_64-linux-gnu/libm.so.6
+ catanf64                                          /lib/x86_64-linux-gnu/libm.so.6
+ catanf64@@GLIBC_2.27                              /lib/x86_64-linux-gnu/libm.so.6
+ catanf64@GLIBC_2.27                               /lib/x86_64-linux-gnu/libm.so.6
+ catanf64x                                         /lib/x86_64-linux-gnu/libm.so.6
+ catanf64x@@GLIBC_2.27                             /lib/x86_64-linux-gnu/libm.so.6
+ catanf64x@GLIBC_2.27                              /lib/x86_64-linux-gnu/libm.so.6
+ catanf@@GLIBC_2.2.5                               /lib/x86_64-linux-gnu/libm.so.6
+ catanf@GLIBC_2.2.5                                /lib/x86_64-linux-gnu/libm.so.6
+ catanh                                            /lib/x86_64-linux-gnu/libm.so.6
+ catanh@@GLIBC_2.2.5                               /lib/x86_64-linux-gnu/libm.so.6
+ catanh@GLIBC_2.2.5                                /lib/x86_64-linux-gnu/libm.so.6
+ catanhf                                           /lib/x86_64-linux-gnu/libm.so.6
+ catanhf128                                        /lib/x86_64-linux-gnu/libm.so.6
+ catanhf128@@GLIBC_2.26                            /lib/x86_64-linux-gnu/libm.so.6
+ catanhf128@GLIBC_2.26                             /lib/x86_64-linux-gnu/libm.so.6
+ catanhf32                                         /lib/x86_64-linux-gnu/libm.so.6
+ catanhf32@@GLIBC_2.27                             /lib/x86_64-linux-gnu/libm.so.6
+ catanhf32@GLIBC_2.27                              /lib/x86_64-linux-gnu/libm.so.6
+ catanhf32x                                        /lib/x86_64-linux-gnu/libm.so.6
+ catanhf32x@@GLIBC_2.27                            /lib/x86_64-linux-gnu/libm.so.6
+ catanhf32x@GLIBC_2.27                             /lib/x86_64-linux-gnu/libm.so.6
+ catanhf64                                         /lib/x86_64-linux-gnu/libm.so.6
+ catanhf64@@GLIBC_2.27                             /lib/x86_64-linux-gnu/libm.so.6
+ catanhf64@GLIBC_2.27                              /lib/x86_64-linux-gnu/libm.so.6
+ catanhf64x                                        /lib/x86_64-linux-gnu/libm.so.6
+ catanhf64x@@GLIBC_2.27                            /lib/x86_64-linux-gnu/libm.so.6
+ catanhf64x@GLIBC_2.27                             /lib/x86_64-linux-gnu/libm.so.6
+ catanhf@@GLIBC_2.2.5                              /lib/x86_64-linux-gnu/libm.so.6
+ catanhf@GLIBC_2.2.5                               /lib/x86_64-linux-gnu/libm.so.6
+ catanhl                                           /lib/x86_64-linux-gnu/libm.so.6
+ catanhl@@GLIBC_2.2.5                              /lib/x86_64-linux-gnu/libm.so.6
+ catanhl@GLIBC_2.2.5                               /lib/x86_64-linux-gnu/libm.so.6
+ catanl                                            /lib/x86_64-linux-gnu/libm.so.6
+ catanl@@GLIBC_2.2.5                               /lib/x86_64-linux-gnu/libm.so.6
+ catanl@GLIBC_2.2.5                                /lib/x86_64-linux-gnu/libm.so.6
+ cbrt                                              /lib/x86_64-linux-gnu/libm.so.6
+ cbrt@@GLIBC_2.2.5                                 /lib/x86_64-linux-gnu/libm.so.6
+ cbrt@GLIBC_2.2.5                                  /lib/x86_64-linux-gnu/libm.so.6
+ cbrtf                                             /lib/x86_64-linux-gnu/libm.so.6
+ cbrtf128                                          /lib/x86_64-linux-gnu/libm.so.6
+ cbrtf128@@GLIBC_2.26                              /lib/x86_64-linux-gnu/libm.so.6
+ cbrtf128@GLIBC_2.26                               /lib/x86_64-linux-gnu/libm.so.6
+ cbrtf32                                           /lib/x86_64-linux-gnu/libm.so.6
+ cbrtf32@@GLIBC_2.27                               /lib/x86_64-linux-gnu/libm.so.6
+ cbrtf32@GLIBC_2.27                                /lib/x86_64-linux-gnu/libm.so.6
+ cbrtf32x                                          /lib/x86_64-linux-gnu/libm.so.6
+ cbrtf32x@@GLIBC_2.27                              /lib/x86_64-linux-gnu/libm.so.6
+ cbrtf32x@GLIBC_2.27                               /lib/x86_64-linux-gnu/libm.so.6
+ cbrtf64                                           /lib/x86_64-linux-gnu/libm.so.6
+ cbrtf64@@GLIBC_2.27                               /lib/x86_64-linux-gnu/libm.so.6
+ cbrtf64@GLIBC_2.27                                /lib/x86_64-linux-gnu/libm.so.6
+ cbrtf64x                                          /lib/x86_64-linux-gnu/libm.so.6
+ cbrtf64x@@GLIBC_2.27                              /lib/x86_64-linux-gnu/libm.so.6
+ cbrtf64x@GLIBC_2.27                               /lib/x86_64-linux-gnu/libm.so.6
+ cbrtf@@GLIBC_2.2.5                                /lib/x86_64-linux-gnu/libm.so.6
+ cbrtf@GLIBC_2.2.5                                 /lib/x86_64-linux-gnu/libm.so.6
+ cbrtl                                             /lib/x86_64-linux-gnu/libm.so.6
+ cbrtl@@GLIBC_2.2.5                                /lib/x86_64-linux-gnu/libm.so.6
+ cbrtl@GLIBC_2.2.5                                 /lib/x86_64-linux-gnu/libm.so.6
+ ccos                                              /lib/x86_64-linux-gnu/libm.so.6
+ ccos@@GLIBC_2.2.5                                 /lib/x86_64-linux-gnu/libm.so.6
+ ccos@GLIBC_2.2.5                                  /lib/x86_64-linux-gnu/libm.so.6
+ ccosf                                             /lib/x86_64-linux-gnu/libm.so.6
+ ccosf128                                          /lib/x86_64-linux-gnu/libm.so.6
+ ccosf128@@GLIBC_2.26                              /lib/x86_64-linux-gnu/libm.so.6
+ ccosf128@GLIBC_2.26                               /lib/x86_64-linux-gnu/libm.so.6
+ ccosf32                                           /lib/x86_64-linux-gnu/libm.so.6
+ ccosf32@@GLIBC_2.27                               /lib/x86_64-linux-gnu/libm.so.6
+ ccosf32@GLIBC_2.27                                /lib/x86_64-linux-gnu/libm.so.6
+ ccosf32x                                          /lib/x86_64-linux-gnu/libm.so.6
+ ccosf32x@@GLIBC_2.27                              /lib/x86_64-linux-gnu/libm.so.6
+ ccosf32x@GLIBC_2.27                               /lib/x86_64-linux-gnu/libm.so.6
+ ccosf64                                           /lib/x86_64-linux-gnu/libm.so.6
+ ccosf64@@GLIBC_2.27                               /lib/x86_64-linux-gnu/libm.so.6
+ ccosf64@GLIBC_2.27                                /lib/x86_64-linux-gnu/libm.so.6
+ ccosf64x                                          /lib/x86_64-linux-gnu/libm.so.6
+ ccosf64x@@GLIBC_2.27                              /lib/x86_64-linux-gnu/libm.so.6
+ ccosf64x@GLIBC_2.27                               /lib/x86_64-linux-gnu/libm.so.6
+ ccosf@@GLIBC_2.2.5                                /lib/x86_64-linux-gnu/libm.so.6
+ ccosf@GLIBC_2.2.5                                 /lib/x86_64-linux-gnu/libm.so.6
+ ccosh                                             /lib/x86_64-linux-gnu/libm.so.6
+ ccosh@@GLIBC_2.2.5                                /lib/x86_64-linux-gnu/libm.so.6
+ ccosh@GLIBC_2.2.5                                 /lib/x86_64-linux-gnu/libm.so.6
+ ccoshf                                            /lib/x86_64-linux-gnu/libm.so.6
+ ccoshf128                                         /lib/x86_64-linux-gnu/libm.so.6
+ ccoshf128@@GLIBC_2.26                             /lib/x86_64-linux-gnu/libm.so.6
+ ccoshf128@GLIBC_2.26                              /lib/x86_64-linux-gnu/libm.so.6
+ ccoshf32                                          /lib/x86_64-linux-gnu/libm.so.6
+ ccoshf32@@GLIBC_2.27                              /lib/x86_64-linux-gnu/libm.so.6
+ ccoshf32@GLIBC_2.27                               /lib/x86_64-linux-gnu/libm.so.6
+ ccoshf32x                                         /lib/x86_64-linux-gnu/libm.so.6
+ ccoshf32x@@GLIBC_2.27                             /lib/x86_64-linux-gnu/libm.so.6
+ ccoshf32x@GLIBC_2.27                              /lib/x86_64-linux-gnu/libm.so.6
+ ccoshf64                                          /lib/x86_64-linux-gnu/libm.so.6
+ ccoshf64@@GLIBC_2.27                              /lib/x86_64-linux-gnu/libm.so.6
+ ccoshf64@GLIBC_2.27                               /lib/x86_64-linux-gnu/libm.so.6
+ ccoshf64x                                         /lib/x86_64-linux-gnu/libm.so.6
+ ccoshf64x@@GLIBC_2.27                             /lib/x86_64-linux-gnu/libm.so.6
+ ccoshf64x@GLIBC_2.27                              /lib/x86_64-linux-gnu/libm.so.6
+ ccoshf@@GLIBC_2.2.5                               /lib/x86_64-linux-gnu/libm.so.6
+ ccoshf@GLIBC_2.2.5                                /lib/x86_64-linux-gnu/libm.so.6
+ ccoshl                                            /lib/x86_64-linux-gnu/libm.so.6
+ ccoshl@@GLIBC_2.2.5                               /lib/x86_64-linux-gnu/libm.so.6
+ ccoshl@GLIBC_2.2.5                                /lib/x86_64-linux-gnu/libm.so.6
+ ccosl                                             /lib/x86_64-linux-gnu/libm.so.6
+ ccosl@@GLIBC_2.2.5                                /lib/x86_64-linux-gnu/libm.so.6
+ ccosl@GLIBC_2.2.5                                 /lib/x86_64-linux-gnu/libm.so.6
+ ceil                                              /lib/x86_64-linux-gnu/libm.so.6
+ ceil@@GLIBC_2.2.5                                 /lib/x86_64-linux-gnu/libm.so.6
+ ceil@GLIBC_2.2.5                                  /lib/x86_64-linux-gnu/libm.so.6
+ ceilf                                             /lib/x86_64-linux-gnu/libm.so.6
+ ceilf128                                          /lib/x86_64-linux-gnu/libm.so.6
+ ceilf128@@GLIBC_2.26                              /lib/x86_64-linux-gnu/libm.so.6
+ ceilf128@GLIBC_2.26                               /lib/x86_64-linux-gnu/libm.so.6
+ ceilf32                                           /lib/x86_64-linux-gnu/libm.so.6
+ ceilf32@@GLIBC_2.27                               /lib/x86_64-linux-gnu/libm.so.6
+ ceilf32@GLIBC_2.27                                /lib/x86_64-linux-gnu/libm.so.6
+ ceilf32x                                          /lib/x86_64-linux-gnu/libm.so.6
+ ceilf32x@@GLIBC_2.27                              /lib/x86_64-linux-gnu/libm.so.6
+ ceilf32x@GLIBC_2.27                               /lib/x86_64-linux-gnu/libm.so.6
+ ceilf64                                           /lib/x86_64-linux-gnu/libm.so.6
+ ceilf64@@GLIBC_2.27                               /lib/x86_64-linux-gnu/libm.so.6
+ ceilf64@GLIBC_2.27                                /lib/x86_64-linux-gnu/libm.so.6
+ ceilf64x                                          /lib/x86_64-linux-gnu/libm.so.6
+ ceilf64x@@GLIBC_2.27                              /lib/x86_64-linux-gnu/libm.so.6
+ ceilf64x@GLIBC_2.27                               /lib/x86_64-linux-gnu/libm.so.6
+ ceilf@@GLIBC_2.2.5                                /lib/x86_64-linux-gnu/libm.so.6
+ ceilf@GLIBC_2.2.5                                 /lib/x86_64-linux-gnu/libm.so.6
+ ceill                                             /lib/x86_64-linux-gnu/libm.so.6
+ ceill@@GLIBC_2.2.5                                /lib/x86_64-linux-gnu/libm.so.6
+ ceill@GLIBC_2.2.5                                 /lib/x86_64-linux-gnu/libm.so.6
+ cexp                                              /lib/x86_64-linux-gnu/libm.so.6
+ cexp@@GLIBC_2.2.5                                 /lib/x86_64-linux-gnu/libm.so.6
+ cexp@GLIBC_2.2.5                                  /lib/x86_64-linux-gnu/libm.so.6
+ cexpf                                             /lib/x86_64-linux-gnu/libm.so.6
+ cexpf128                                          /lib/x86_64-linux-gnu/libm.so.6
+ cexpf128@@GLIBC_2.26                              /lib/x86_64-linux-gnu/libm.so.6
+ cexpf128@GLIBC_2.26                               /lib/x86_64-linux-gnu/libm.so.6
+ cexpf32                                           /lib/x86_64-linux-gnu/libm.so.6
+ cexpf32@@GLIBC_2.27                               /lib/x86_64-linux-gnu/libm.so.6
+ cexpf32@GLIBC_2.27                                /lib/x86_64-linux-gnu/libm.so.6
+ cexpf32x                                          /lib/x86_64-linux-gnu/libm.so.6
+ cexpf32x@@GLIBC_2.27                              /lib/x86_64-linux-gnu/libm.so.6
+ cexpf32x@GLIBC_2.27                               /lib/x86_64-linux-gnu/libm.so.6
+ cexpf64                                           /lib/x86_64-linux-gnu/libm.so.6
+ cexpf64@@GLIBC_2.27                               /lib/x86_64-linux-gnu/libm.so.6
+ cexpf64@GLIBC_2.27                                /lib/x86_64-linux-gnu/libm.so.6
+ cexpf64x                                          /lib/x86_64-linux-gnu/libm.so.6
+ cexpf64x@@GLIBC_2.27                              /lib/x86_64-linux-gnu/libm.so.6
+ cexpf64x@GLIBC_2.27                               /lib/x86_64-linux-gnu/libm.so.6
+ cexpf@@GLIBC_2.2.5                                /lib/x86_64-linux-gnu/libm.so.6
+ cexpf@GLIBC_2.2.5                                 /lib/x86_64-linux-gnu/libm.so.6
+ cexpl                                             /lib/x86_64-linux-gnu/libm.so.6
+ cexpl@@GLIBC_2.2.5                                /lib/x86_64-linux-gnu/libm.so.6
+ cexpl@GLIBC_2.2.5                                 /lib/x86_64-linux-gnu/libm.so.6
+ chdir                                             /lib/x86_64-linux-gnu/libc.so.6
+ chdir@@GLIBC_2.2.5                                /lib/x86_64-linux-gnu/libc.so.6
+ chdir@GLIBC_2.2.5                                 /lib/x86_64-linux-gnu/libc.so.6
+ chmod                                             /lib/x86_64-linux-gnu/libc.so.6
+ chmod@@GLIBC_2.2.5                                /lib/x86_64-linux-gnu/libc.so.6
+ chmod@GLIBC_2.2.5                                 /lib/x86_64-linux-gnu/libc.so.6
+ chown                                             /lib/x86_64-linux-gnu/libc.so.6
+ chown@@GLIBC_2.2.5                                /lib/x86_64-linux-gnu/libc.so.6
+ chown@GLIBC_2.2.5                                 /lib/x86_64-linux-gnu/libc.so.6
+ cimag                                             /lib/x86_64-linux-gnu/libm.so.6
+ cimag@@GLIBC_2.2.5                                /lib/x86_64-linux-gnu/libm.so.6
+ cimag@GLIBC_2.2.5                                 /lib/x86_64-linux-gnu/libm.so.6
+ cimagf                                            /lib/x86_64-linux-gnu/libm.so.6
+ cimagf128                                         /lib/x86_64-linux-gnu/libm.so.6
+ cimagf128@@GLIBC_2.26                             /lib/x86_64-linux-gnu/libm.so.6
+ cimagf128@GLIBC_2.26                              /lib/x86_64-linux-gnu/libm.so.6
+ cimagf32                                          /lib/x86_64-linux-gnu/libm.so.6
+ cimagf32@@GLIBC_2.27                              /lib/x86_64-linux-gnu/libm.so.6
+ cimagf32@GLIBC_2.27                               /lib/x86_64-linux-gnu/libm.so.6
+ cimagf32x                                         /lib/x86_64-linux-gnu/libm.so.6
+ cimagf32x@@GLIBC_2.27                             /lib/x86_64-linux-gnu/libm.so.6
+ cimagf32x@GLIBC_2.27                              /lib/x86_64-linux-gnu/libm.so.6
+ cimagf64                                          /lib/x86_64-linux-gnu/libm.so.6
+ cimagf64@@GLIBC_2.27                              /lib/x86_64-linux-gnu/libm.so.6
+ cimagf64@GLIBC_2.27                               /lib/x86_64-linux-gnu/libm.so.6
+ cimagf64x                                         /lib/x86_64-linux-gnu/libm.so.6
+ cimagf64x@@GLIBC_2.27                             /lib/x86_64-linux-gnu/libm.so.6
+ cimagf64x@GLIBC_2.27                              /lib/x86_64-linux-gnu/libm.so.6
+ cimagf@@GLIBC_2.2.5                               /lib/x86_64-linux-gnu/libm.so.6
+ cimagf@GLIBC_2.2.5                                /lib/x86_64-linux-gnu/libm.so.6
+ cimagl                                            /lib/x86_64-linux-gnu/libm.so.6
+ cimagl@@GLIBC_2.2.5                               /lib/x86_64-linux-gnu/libm.so.6
+ cimagl@GLIBC_2.2.5                                /lib/x86_64-linux-gnu/libm.so.6
+ clearenv                                          /lib/x86_64-linux-gnu/libc.so.6
+ clearenv@@GLIBC_2.2.5                             /lib/x86_64-linux-gnu/libc.so.6
+ clearenv@GLIBC_2.2.5                              /lib/x86_64-linux-gnu/libc.so.6
+ clock_getcpuclockid                               /lib/x86_64-linux-gnu/libc.so.6
+ clock_getcpuclockid@@GLIBC_2.17                   /lib/x86_64-linux-gnu/libc.so.6
+ clock_getcpuclockid@GLIBC_2.17                    /lib/x86_64-linux-gnu/libc.so.6
+ clock_getres                                      /lib/x86_64-linux-gnu/libc.so.6
+ clock_getres@@GLIBC_2.17                          /lib/x86_64-linux-gnu/libc.so.6
+ clock_getres@GLIBC_2.17                           /lib/x86_64-linux-gnu/libc.so.6
+ clock_gettime                                     /lib/x86_64-linux-gnu/libc.so.6
+ clock_gettime@@GLIBC_2.17                         /lib/x86_64-linux-gnu/libc.so.6
+ clock_gettime@GLIBC_2.17                          /lib/x86_64-linux-gnu/libc.so.6
+ clock_nanosleep                                   /lib/x86_64-linux-gnu/libc.so.6
+ clock_nanosleep@@GLIBC_2.17                       /lib/x86_64-linux-gnu/libc.so.6
+ clock_nanosleep@GLIBC_2.17                        /lib/x86_64-linux-gnu/libc.so.6
+ clock_settime                                     /lib/x86_64-linux-gnu/libc.so.6
+ clock_settime@@GLIBC_2.17                         /lib/x86_64-linux-gnu/libc.so.6
+ clock_settime@GLIBC_2.17                          /lib/x86_64-linux-gnu/libc.so.6
+ clog                                              /lib/x86_64-linux-gnu/libm.so.6
+ clog10                                            /lib/x86_64-linux-gnu/libm.so.6
+ clog10@@GLIBC_2.2.5                               /lib/x86_64-linux-gnu/libm.so.6
+ clog10@GLIBC_2.2.5                                /lib/x86_64-linux-gnu/libm.so.6
+ clog10f                                           /lib/x86_64-linux-gnu/libm.so.6
+ clog10f128                                        /lib/x86_64-linux-gnu/libm.so.6
+ clog10f128@@GLIBC_2.26                            /lib/x86_64-linux-gnu/libm.so.6
+ clog10f128@GLIBC_2.26                             /lib/x86_64-linux-gnu/libm.so.6
+ clog10f32                                         /lib/x86_64-linux-gnu/libm.so.6
+ clog10f32@@GLIBC_2.27                             /lib/x86_64-linux-gnu/libm.so.6
+ clog10f32@GLIBC_2.27                              /lib/x86_64-linux-gnu/libm.so.6
+ clog10f32x                                        /lib/x86_64-linux-gnu/libm.so.6
+ clog10f32x@@GLIBC_2.27                            /lib/x86_64-linux-gnu/libm.so.6
+ clog10f32x@GLIBC_2.27                             /lib/x86_64-linux-gnu/libm.so.6
+ clog10f64                                         /lib/x86_64-linux-gnu/libm.so.6
+ clog10f64@@GLIBC_2.27                             /lib/x86_64-linux-gnu/libm.so.6
+ clog10f64@GLIBC_2.27                              /lib/x86_64-linux-gnu/libm.so.6
+ clog10f64x                                        /lib/x86_64-linux-gnu/libm.so.6
+ clog10f64x@@GLIBC_2.27                            /lib/x86_64-linux-gnu/libm.so.6
+ clog10f64x@GLIBC_2.27                             /lib/x86_64-linux-gnu/libm.so.6
+ clog10f@@GLIBC_2.2.5                              /lib/x86_64-linux-gnu/libm.so.6
+ clog10f@GLIBC_2.2.5                               /lib/x86_64-linux-gnu/libm.so.6
+ clog10l                                           /lib/x86_64-linux-gnu/libm.so.6
+ clog10l@@GLIBC_2.2.5                              /lib/x86_64-linux-gnu/libm.so.6
+ clog10l@GLIBC_2.2.5                               /lib/x86_64-linux-gnu/libm.so.6
+ clog@@GLIBC_2.2.5                                 /lib/x86_64-linux-gnu/libm.so.6
+ clog@GLIBC_2.2.5                                  /lib/x86_64-linux-gnu/libm.so.6
+ clogf                                             /lib/x86_64-linux-gnu/libm.so.6
+ clogf128                                          /lib/x86_64-linux-gnu/libm.so.6
+ clogf128@@GLIBC_2.26                              /lib/x86_64-linux-gnu/libm.so.6
+ clogf128@GLIBC_2.26                               /lib/x86_64-linux-gnu/libm.so.6
+ clogf32                                           /lib/x86_64-linux-gnu/libm.so.6
+ clogf32@@GLIBC_2.27                               /lib/x86_64-linux-gnu/libm.so.6
+ clogf32@GLIBC_2.27                                /lib/x86_64-linux-gnu/libm.so.6
+ clogf32x                                          /lib/x86_64-linux-gnu/libm.so.6
+ clogf32x@@GLIBC_2.27                              /lib/x86_64-linux-gnu/libm.so.6
+ clogf32x@GLIBC_2.27                               /lib/x86_64-linux-gnu/libm.so.6
+ clogf64                                           /lib/x86_64-linux-gnu/libm.so.6
+ clogf64@@GLIBC_2.27                               /lib/x86_64-linux-gnu/libm.so.6
+ clogf64@GLIBC_2.27                                /lib/x86_64-linux-gnu/libm.so.6
+ clogf64x                                          /lib/x86_64-linux-gnu/libm.so.6
+ clogf64x@@GLIBC_2.27                              /lib/x86_64-linux-gnu/libm.so.6
+ clogf64x@GLIBC_2.27                               /lib/x86_64-linux-gnu/libm.so.6
+ clogf@@GLIBC_2.2.5                                /lib/x86_64-linux-gnu/libm.so.6
+ clogf@GLIBC_2.2.5                                 /lib/x86_64-linux-gnu/libm.so.6
+ clogl                                             /lib/x86_64-linux-gnu/libm.so.6
+ clogl@@GLIBC_2.2.5                                /lib/x86_64-linux-gnu/libm.so.6
+ clogl@GLIBC_2.2.5                                 /lib/x86_64-linux-gnu/libm.so.6
+ clone                                             /lib/x86_64-linux-gnu/libc.so.6
+ clone@@GLIBC_2.2.5                                /lib/x86_64-linux-gnu/libc.so.6
+ clone@GLIBC_2.2.5                                 /lib/x86_64-linux-gnu/libc.so.6
+ close                                             /lib/x86_64-linux-gnu/libc.so.6
+                                                   build/py/persistentcode.o
+                                                   build/py/reader.o
+ close@@GLIBC_2.2.5                                /lib/x86_64-linux-gnu/libc.so.6
+ close@GLIBC_2.2.5                                 /lib/x86_64-linux-gnu/libc.so.6
+ closedir                                          /lib/x86_64-linux-gnu/libc.so.6
+ closedir@@GLIBC_2.2.5                             /lib/x86_64-linux-gnu/libc.so.6
+ closedir@GLIBC_2.2.5                              /lib/x86_64-linux-gnu/libc.so.6
+ closure_type                                      build/py/objclosure.o
+ conj                                              /lib/x86_64-linux-gnu/libm.so.6
+ conj@@GLIBC_2.2.5                                 /lib/x86_64-linux-gnu/libm.so.6
+ conj@GLIBC_2.2.5                                  /lib/x86_64-linux-gnu/libm.so.6
+ conjf                                             /lib/x86_64-linux-gnu/libm.so.6
+ conjf128                                          /lib/x86_64-linux-gnu/libm.so.6
+ conjf128@@GLIBC_2.26                              /lib/x86_64-linux-gnu/libm.so.6
+ conjf128@GLIBC_2.26                               /lib/x86_64-linux-gnu/libm.so.6
+ conjf32                                           /lib/x86_64-linux-gnu/libm.so.6
+ conjf32@@GLIBC_2.27                               /lib/x86_64-linux-gnu/libm.so.6
+ conjf32@GLIBC_2.27                                /lib/x86_64-linux-gnu/libm.so.6
+ conjf32x                                          /lib/x86_64-linux-gnu/libm.so.6
+ conjf32x@@GLIBC_2.27                              /lib/x86_64-linux-gnu/libm.so.6
+ conjf32x@GLIBC_2.27                               /lib/x86_64-linux-gnu/libm.so.6
+ conjf64                                           /lib/x86_64-linux-gnu/libm.so.6
+ conjf64@@GLIBC_2.27                               /lib/x86_64-linux-gnu/libm.so.6
+ conjf64@GLIBC_2.27                                /lib/x86_64-linux-gnu/libm.so.6
+ conjf64x                                          /lib/x86_64-linux-gnu/libm.so.6
+ conjf64x@@GLIBC_2.27                              /lib/x86_64-linux-gnu/libm.so.6
+ conjf64x@GLIBC_2.27                               /lib/x86_64-linux-gnu/libm.so.6
+ conjf@@GLIBC_2.2.5                                /lib/x86_64-linux-gnu/libm.so.6
+ conjf@GLIBC_2.2.5                                 /lib/x86_64-linux-gnu/libm.so.6
+ conjl                                             /lib/x86_64-linux-gnu/libm.so.6
+ conjl@@GLIBC_2.2.5                                /lib/x86_64-linux-gnu/libm.so.6
+ conjl@GLIBC_2.2.5                                 /lib/x86_64-linux-gnu/libm.so.6
+ connect                                           /lib/x86_64-linux-gnu/libc.so.6
+ connect@@GLIBC_2.2.5                              /lib/x86_64-linux-gnu/libc.so.6
+ connect@GLIBC_2.2.5                               /lib/x86_64-linux-gnu/libc.so.6
+ copysign                                          /lib/x86_64-linux-gnu/libm.so.6
+ copysign@@GLIBC_2.2.5                             /lib/x86_64-linux-gnu/libm.so.6
+                                                   /lib/x86_64-linux-gnu/libc.so.6
+ copysign@GLIBC_2.2.5                              /lib/x86_64-linux-gnu/libm.so.6
+ copysignf                                         /lib/x86_64-linux-gnu/libm.so.6
+ copysignf128                                      /lib/x86_64-linux-gnu/libm.so.6
+ copysignf128@@GLIBC_2.26                          /lib/x86_64-linux-gnu/libm.so.6
+ copysignf128@GLIBC_2.26                           /lib/x86_64-linux-gnu/libm.so.6
+ copysignf32                                       /lib/x86_64-linux-gnu/libm.so.6
+ copysignf32@@GLIBC_2.27                           /lib/x86_64-linux-gnu/libm.so.6
+ copysignf32@GLIBC_2.27                            /lib/x86_64-linux-gnu/libm.so.6
+ copysignf32x                                      /lib/x86_64-linux-gnu/libm.so.6
+ copysignf32x@@GLIBC_2.27                          /lib/x86_64-linux-gnu/libm.so.6
+ copysignf32x@GLIBC_2.27                           /lib/x86_64-linux-gnu/libm.so.6
+ copysignf64                                       /lib/x86_64-linux-gnu/libm.so.6
+ copysignf64@@GLIBC_2.27                           /lib/x86_64-linux-gnu/libm.so.6
+ copysignf64@GLIBC_2.27                            /lib/x86_64-linux-gnu/libm.so.6
+ copysignf64x                                      /lib/x86_64-linux-gnu/libm.so.6
+ copysignf64x@@GLIBC_2.27                          /lib/x86_64-linux-gnu/libm.so.6
+ copysignf64x@GLIBC_2.27                           /lib/x86_64-linux-gnu/libm.so.6
+ copysignf@@GLIBC_2.2.5                            /lib/x86_64-linux-gnu/libm.so.6
+                                                   /lib/x86_64-linux-gnu/libc.so.6
+ copysignf@GLIBC_2.2.5                             /lib/x86_64-linux-gnu/libm.so.6
+ copysignl                                         /lib/x86_64-linux-gnu/libm.so.6
+ copysignl@@GLIBC_2.2.5                            /lib/x86_64-linux-gnu/libm.so.6
+                                                   /lib/x86_64-linux-gnu/libc.so.6
+ copysignl@GLIBC_2.2.5                             /lib/x86_64-linux-gnu/libm.so.6
+ cos                                               /lib/x86_64-linux-gnu/libm.so.6
+ cos@@GLIBC_2.2.5                                  /lib/x86_64-linux-gnu/libm.so.6
+ cos@GLIBC_2.2.5                                   /lib/x86_64-linux-gnu/libm.so.6
+ cosf                                              /lib/x86_64-linux-gnu/libm.so.6
+ cosf128                                           /lib/x86_64-linux-gnu/libm.so.6
+ cosf128@@GLIBC_2.26                               /lib/x86_64-linux-gnu/libm.so.6
+ cosf128@GLIBC_2.26                                /lib/x86_64-linux-gnu/libm.so.6
+ cosf32                                            /lib/x86_64-linux-gnu/libm.so.6
+ cosf32@@GLIBC_2.27                                /lib/x86_64-linux-gnu/libm.so.6
+ cosf32@GLIBC_2.27                                 /lib/x86_64-linux-gnu/libm.so.6
+ cosf32x                                           /lib/x86_64-linux-gnu/libm.so.6
+ cosf32x@@GLIBC_2.27                               /lib/x86_64-linux-gnu/libm.so.6
+ cosf32x@GLIBC_2.27                                /lib/x86_64-linux-gnu/libm.so.6
+ cosf64                                            /lib/x86_64-linux-gnu/libm.so.6
+ cosf64@@GLIBC_2.27                                /lib/x86_64-linux-gnu/libm.so.6
+ cosf64@GLIBC_2.27                                 /lib/x86_64-linux-gnu/libm.so.6
+ cosf64x                                           /lib/x86_64-linux-gnu/libm.so.6
+ cosf64x@@GLIBC_2.27                               /lib/x86_64-linux-gnu/libm.so.6
+ cosf64x@GLIBC_2.27                                /lib/x86_64-linux-gnu/libm.so.6
+ cosf@@GLIBC_2.2.5                                 /lib/x86_64-linux-gnu/libm.so.6
+ cosf@GLIBC_2.2.5                                  /lib/x86_64-linux-gnu/libm.so.6
+ cosh                                              /lib/x86_64-linux-gnu/libm.so.6
+ cosh@@GLIBC_2.2.5                                 /lib/x86_64-linux-gnu/libm.so.6
+ cosh@GLIBC_2.2.5                                  /lib/x86_64-linux-gnu/libm.so.6
+ coshf                                             /lib/x86_64-linux-gnu/libm.so.6
+ coshf128                                          /lib/x86_64-linux-gnu/libm.so.6
+ coshf128@@GLIBC_2.26                              /lib/x86_64-linux-gnu/libm.so.6
+ coshf128@GLIBC_2.26                               /lib/x86_64-linux-gnu/libm.so.6
+ coshf32                                           /lib/x86_64-linux-gnu/libm.so.6
+ coshf32@@GLIBC_2.27                               /lib/x86_64-linux-gnu/libm.so.6
+ coshf32@GLIBC_2.27                                /lib/x86_64-linux-gnu/libm.so.6
+ coshf32x                                          /lib/x86_64-linux-gnu/libm.so.6
+ coshf32x@@GLIBC_2.27                              /lib/x86_64-linux-gnu/libm.so.6
+ coshf32x@GLIBC_2.27                               /lib/x86_64-linux-gnu/libm.so.6
+ coshf64                                           /lib/x86_64-linux-gnu/libm.so.6
+ coshf64@@GLIBC_2.27                               /lib/x86_64-linux-gnu/libm.so.6
+ coshf64@GLIBC_2.27                                /lib/x86_64-linux-gnu/libm.so.6
+ coshf64x                                          /lib/x86_64-linux-gnu/libm.so.6
+ coshf64x@@GLIBC_2.27                              /lib/x86_64-linux-gnu/libm.so.6
+ coshf64x@GLIBC_2.27                               /lib/x86_64-linux-gnu/libm.so.6
+ coshf@@GLIBC_2.2.5                                /lib/x86_64-linux-gnu/libm.so.6
+ coshf@GLIBC_2.2.5                                 /lib/x86_64-linux-gnu/libm.so.6
+ coshl                                             /lib/x86_64-linux-gnu/libm.so.6
+ coshl@@GLIBC_2.2.5                                /lib/x86_64-linux-gnu/libm.so.6
+ coshl@GLIBC_2.2.5                                 /lib/x86_64-linux-gnu/libm.so.6
+ cosl                                              /lib/x86_64-linux-gnu/libm.so.6
+ cosl@@GLIBC_2.2.5                                 /lib/x86_64-linux-gnu/libm.so.6
+ cosl@GLIBC_2.2.5                                  /lib/x86_64-linux-gnu/libm.so.6
+ cpow                                              /lib/x86_64-linux-gnu/libm.so.6
+ cpow@@GLIBC_2.2.5                                 /lib/x86_64-linux-gnu/libm.so.6
+ cpow@GLIBC_2.2.5                                  /lib/x86_64-linux-gnu/libm.so.6
+ cpowf                                             /lib/x86_64-linux-gnu/libm.so.6
+ cpowf128                                          /lib/x86_64-linux-gnu/libm.so.6
+ cpowf128@@GLIBC_2.26                              /lib/x86_64-linux-gnu/libm.so.6
+ cpowf128@GLIBC_2.26                               /lib/x86_64-linux-gnu/libm.so.6
+ cpowf32                                           /lib/x86_64-linux-gnu/libm.so.6
+ cpowf32@@GLIBC_2.27                               /lib/x86_64-linux-gnu/libm.so.6
+ cpowf32@GLIBC_2.27                                /lib/x86_64-linux-gnu/libm.so.6
+ cpowf32x                                          /lib/x86_64-linux-gnu/libm.so.6
+ cpowf32x@@GLIBC_2.27                              /lib/x86_64-linux-gnu/libm.so.6
+ cpowf32x@GLIBC_2.27                               /lib/x86_64-linux-gnu/libm.so.6
+ cpowf64                                           /lib/x86_64-linux-gnu/libm.so.6
+ cpowf64@@GLIBC_2.27                               /lib/x86_64-linux-gnu/libm.so.6
+ cpowf64@GLIBC_2.27                                /lib/x86_64-linux-gnu/libm.so.6
+ cpowf64x                                          /lib/x86_64-linux-gnu/libm.so.6
+ cpowf64x@@GLIBC_2.27                              /lib/x86_64-linux-gnu/libm.so.6
+ cpowf64x@GLIBC_2.27                               /lib/x86_64-linux-gnu/libm.so.6
+ cpowf@@GLIBC_2.2.5                                /lib/x86_64-linux-gnu/libm.so.6
+ cpowf@GLIBC_2.2.5                                 /lib/x86_64-linux-gnu/libm.so.6
+ cpowl                                             /lib/x86_64-linux-gnu/libm.so.6
+ cpowl@@GLIBC_2.2.5                                /lib/x86_64-linux-gnu/libm.so.6
+ cpowl@GLIBC_2.2.5                                 /lib/x86_64-linux-gnu/libm.so.6
+ cproj                                             /lib/x86_64-linux-gnu/libm.so.6
+ cproj@@GLIBC_2.2.5                                /lib/x86_64-linux-gnu/libm.so.6
+ cproj@GLIBC_2.2.5                                 /lib/x86_64-linux-gnu/libm.so.6
+ cprojf                                            /lib/x86_64-linux-gnu/libm.so.6
+ cprojf128                                         /lib/x86_64-linux-gnu/libm.so.6
+ cprojf128@@GLIBC_2.26                             /lib/x86_64-linux-gnu/libm.so.6
+ cprojf128@GLIBC_2.26                              /lib/x86_64-linux-gnu/libm.so.6
+ cprojf32                                          /lib/x86_64-linux-gnu/libm.so.6
+ cprojf32@@GLIBC_2.27                              /lib/x86_64-linux-gnu/libm.so.6
+ cprojf32@GLIBC_2.27                               /lib/x86_64-linux-gnu/libm.so.6
+ cprojf32x                                         /lib/x86_64-linux-gnu/libm.so.6
+ cprojf32x@@GLIBC_2.27                             /lib/x86_64-linux-gnu/libm.so.6
+ cprojf32x@GLIBC_2.27                              /lib/x86_64-linux-gnu/libm.so.6
+ cprojf64                                          /lib/x86_64-linux-gnu/libm.so.6
+ cprojf64@@GLIBC_2.27                              /lib/x86_64-linux-gnu/libm.so.6
+ cprojf64@GLIBC_2.27                               /lib/x86_64-linux-gnu/libm.so.6
+ cprojf64x                                         /lib/x86_64-linux-gnu/libm.so.6
+ cprojf64x@@GLIBC_2.27                             /lib/x86_64-linux-gnu/libm.so.6
+ cprojf64x@GLIBC_2.27                              /lib/x86_64-linux-gnu/libm.so.6
+ cprojf@@GLIBC_2.2.5                               /lib/x86_64-linux-gnu/libm.so.6
+ cprojf@GLIBC_2.2.5                                /lib/x86_64-linux-gnu/libm.so.6
+ cprojl                                            /lib/x86_64-linux-gnu/libm.so.6
+ cprojl@@GLIBC_2.2.5                               /lib/x86_64-linux-gnu/libm.so.6
+ cprojl@GLIBC_2.2.5                                /lib/x86_64-linux-gnu/libm.so.6
+ creal                                             /lib/x86_64-linux-gnu/libm.so.6
+ creal@@GLIBC_2.2.5                                /lib/x86_64-linux-gnu/libm.so.6
+ creal@GLIBC_2.2.5                                 /lib/x86_64-linux-gnu/libm.so.6
+ crealf                                            /lib/x86_64-linux-gnu/libm.so.6
+ crealf128                                         /lib/x86_64-linux-gnu/libm.so.6
+ crealf128@@GLIBC_2.26                             /lib/x86_64-linux-gnu/libm.so.6
+ crealf128@GLIBC_2.26                              /lib/x86_64-linux-gnu/libm.so.6
+ crealf32                                          /lib/x86_64-linux-gnu/libm.so.6
+ crealf32@@GLIBC_2.27                              /lib/x86_64-linux-gnu/libm.so.6
+ crealf32@GLIBC_2.27                               /lib/x86_64-linux-gnu/libm.so.6
+ crealf32x                                         /lib/x86_64-linux-gnu/libm.so.6
+ crealf32x@@GLIBC_2.27                             /lib/x86_64-linux-gnu/libm.so.6
+ crealf32x@GLIBC_2.27                              /lib/x86_64-linux-gnu/libm.so.6
+ crealf64                                          /lib/x86_64-linux-gnu/libm.so.6
+ crealf64@@GLIBC_2.27                              /lib/x86_64-linux-gnu/libm.so.6
+ crealf64@GLIBC_2.27                               /lib/x86_64-linux-gnu/libm.so.6
+ crealf64x                                         /lib/x86_64-linux-gnu/libm.so.6
+ crealf64x@@GLIBC_2.27                             /lib/x86_64-linux-gnu/libm.so.6
+ crealf64x@GLIBC_2.27                              /lib/x86_64-linux-gnu/libm.so.6
+ crealf@@GLIBC_2.2.5                               /lib/x86_64-linux-gnu/libm.so.6
+ crealf@GLIBC_2.2.5                                /lib/x86_64-linux-gnu/libm.so.6
+ creall                                            /lib/x86_64-linux-gnu/libm.so.6
+ creall@@GLIBC_2.2.5                               /lib/x86_64-linux-gnu/libm.so.6
+ creall@GLIBC_2.2.5                                /lib/x86_64-linux-gnu/libm.so.6
+ creat                                             /lib/x86_64-linux-gnu/libc.so.6
+ creat64                                           /lib/x86_64-linux-gnu/libc.so.6
+ creat64@@GLIBC_2.2.5                              /lib/x86_64-linux-gnu/libc.so.6
+ creat64@GLIBC_2.2.5                               /lib/x86_64-linux-gnu/libc.so.6
+ creat@@GLIBC_2.2.5                                /lib/x86_64-linux-gnu/libc.so.6
+ creat@GLIBC_2.2.5                                 /lib/x86_64-linux-gnu/libc.so.6
+ csin                                              /lib/x86_64-linux-gnu/libm.so.6
+ csin@@GLIBC_2.2.5                                 /lib/x86_64-linux-gnu/libm.so.6
+ csin@GLIBC_2.2.5                                  /lib/x86_64-linux-gnu/libm.so.6
+ csinf                                             /lib/x86_64-linux-gnu/libm.so.6
+ csinf128                                          /lib/x86_64-linux-gnu/libm.so.6
+ csinf128@@GLIBC_2.26                              /lib/x86_64-linux-gnu/libm.so.6
+ csinf128@GLIBC_2.26                               /lib/x86_64-linux-gnu/libm.so.6
+ csinf32                                           /lib/x86_64-linux-gnu/libm.so.6
+ csinf32@@GLIBC_2.27                               /lib/x86_64-linux-gnu/libm.so.6
+ csinf32@GLIBC_2.27                                /lib/x86_64-linux-gnu/libm.so.6
+ csinf32x                                          /lib/x86_64-linux-gnu/libm.so.6
+ csinf32x@@GLIBC_2.27                              /lib/x86_64-linux-gnu/libm.so.6
+ csinf32x@GLIBC_2.27                               /lib/x86_64-linux-gnu/libm.so.6
+ csinf64                                           /lib/x86_64-linux-gnu/libm.so.6
+ csinf64@@GLIBC_2.27                               /lib/x86_64-linux-gnu/libm.so.6
+ csinf64@GLIBC_2.27                                /lib/x86_64-linux-gnu/libm.so.6
+ csinf64x                                          /lib/x86_64-linux-gnu/libm.so.6
+ csinf64x@@GLIBC_2.27                              /lib/x86_64-linux-gnu/libm.so.6
+ csinf64x@GLIBC_2.27                               /lib/x86_64-linux-gnu/libm.so.6
+ csinf@@GLIBC_2.2.5                                /lib/x86_64-linux-gnu/libm.so.6
+ csinf@GLIBC_2.2.5                                 /lib/x86_64-linux-gnu/libm.so.6
+ csinh                                             /lib/x86_64-linux-gnu/libm.so.6
+ csinh@@GLIBC_2.2.5                                /lib/x86_64-linux-gnu/libm.so.6
+ csinh@GLIBC_2.2.5                                 /lib/x86_64-linux-gnu/libm.so.6
+ csinhf                                            /lib/x86_64-linux-gnu/libm.so.6
+ csinhf128                                         /lib/x86_64-linux-gnu/libm.so.6
+ csinhf128@@GLIBC_2.26                             /lib/x86_64-linux-gnu/libm.so.6
+ csinhf128@GLIBC_2.26                              /lib/x86_64-linux-gnu/libm.so.6
+ csinhf32                                          /lib/x86_64-linux-gnu/libm.so.6
+ csinhf32@@GLIBC_2.27                              /lib/x86_64-linux-gnu/libm.so.6
+ csinhf32@GLIBC_2.27                               /lib/x86_64-linux-gnu/libm.so.6
+ csinhf32x                                         /lib/x86_64-linux-gnu/libm.so.6
+ csinhf32x@@GLIBC_2.27                             /lib/x86_64-linux-gnu/libm.so.6
+ csinhf32x@GLIBC_2.27                              /lib/x86_64-linux-gnu/libm.so.6
+ csinhf64                                          /lib/x86_64-linux-gnu/libm.so.6
+ csinhf64@@GLIBC_2.27                              /lib/x86_64-linux-gnu/libm.so.6
+ csinhf64@GLIBC_2.27                               /lib/x86_64-linux-gnu/libm.so.6
+ csinhf64x                                         /lib/x86_64-linux-gnu/libm.so.6
+ csinhf64x@@GLIBC_2.27                             /lib/x86_64-linux-gnu/libm.so.6
+ csinhf64x@GLIBC_2.27                              /lib/x86_64-linux-gnu/libm.so.6
+ csinhf@@GLIBC_2.2.5                               /lib/x86_64-linux-gnu/libm.so.6
+ csinhf@GLIBC_2.2.5                                /lib/x86_64-linux-gnu/libm.so.6
+ csinhl                                            /lib/x86_64-linux-gnu/libm.so.6
+ csinhl@@GLIBC_2.2.5                               /lib/x86_64-linux-gnu/libm.so.6
+ csinhl@GLIBC_2.2.5                                /lib/x86_64-linux-gnu/libm.so.6
+ csinl                                             /lib/x86_64-linux-gnu/libm.so.6
+ csinl@@GLIBC_2.2.5                                /lib/x86_64-linux-gnu/libm.so.6
+ csinl@GLIBC_2.2.5                                 /lib/x86_64-linux-gnu/libm.so.6
+ csqrt                                             /lib/x86_64-linux-gnu/libm.so.6
+ csqrt@@GLIBC_2.2.5                                /lib/x86_64-linux-gnu/libm.so.6
+ csqrt@GLIBC_2.2.5                                 /lib/x86_64-linux-gnu/libm.so.6
+ csqrtf                                            /lib/x86_64-linux-gnu/libm.so.6
+ csqrtf128                                         /lib/x86_64-linux-gnu/libm.so.6
+ csqrtf128@@GLIBC_2.26                             /lib/x86_64-linux-gnu/libm.so.6
+ csqrtf128@GLIBC_2.26                              /lib/x86_64-linux-gnu/libm.so.6
+ csqrtf32                                          /lib/x86_64-linux-gnu/libm.so.6
+ csqrtf32@@GLIBC_2.27                              /lib/x86_64-linux-gnu/libm.so.6
+ csqrtf32@GLIBC_2.27                               /lib/x86_64-linux-gnu/libm.so.6
+ csqrtf32x                                         /lib/x86_64-linux-gnu/libm.so.6
+ csqrtf32x@@GLIBC_2.27                             /lib/x86_64-linux-gnu/libm.so.6
+ csqrtf32x@GLIBC_2.27                              /lib/x86_64-linux-gnu/libm.so.6
+ csqrtf64                                          /lib/x86_64-linux-gnu/libm.so.6
+ csqrtf64@@GLIBC_2.27                              /lib/x86_64-linux-gnu/libm.so.6
+ csqrtf64@GLIBC_2.27                               /lib/x86_64-linux-gnu/libm.so.6
+ csqrtf64x                                         /lib/x86_64-linux-gnu/libm.so.6
+ csqrtf64x@@GLIBC_2.27                             /lib/x86_64-linux-gnu/libm.so.6
+ csqrtf64x@GLIBC_2.27                              /lib/x86_64-linux-gnu/libm.so.6
+ csqrtf@@GLIBC_2.2.5                               /lib/x86_64-linux-gnu/libm.so.6
+ csqrtf@GLIBC_2.2.5                                /lib/x86_64-linux-gnu/libm.so.6
+ csqrtl                                            /lib/x86_64-linux-gnu/libm.so.6
+ csqrtl@@GLIBC_2.2.5                               /lib/x86_64-linux-gnu/libm.so.6
+ csqrtl@GLIBC_2.2.5                                /lib/x86_64-linux-gnu/libm.so.6
+ ctan                                              /lib/x86_64-linux-gnu/libm.so.6
+ ctan@@GLIBC_2.2.5                                 /lib/x86_64-linux-gnu/libm.so.6
+ ctan@GLIBC_2.2.5                                  /lib/x86_64-linux-gnu/libm.so.6
+ ctanf                                             /lib/x86_64-linux-gnu/libm.so.6
+ ctanf128                                          /lib/x86_64-linux-gnu/libm.so.6
+ ctanf128@@GLIBC_2.26                              /lib/x86_64-linux-gnu/libm.so.6
+ ctanf128@GLIBC_2.26                               /lib/x86_64-linux-gnu/libm.so.6
+ ctanf32                                           /lib/x86_64-linux-gnu/libm.so.6
+ ctanf32@@GLIBC_2.27                               /lib/x86_64-linux-gnu/libm.so.6
+ ctanf32@GLIBC_2.27                                /lib/x86_64-linux-gnu/libm.so.6
+ ctanf32x                                          /lib/x86_64-linux-gnu/libm.so.6
+ ctanf32x@@GLIBC_2.27                              /lib/x86_64-linux-gnu/libm.so.6
+ ctanf32x@GLIBC_2.27                               /lib/x86_64-linux-gnu/libm.so.6
+ ctanf64                                           /lib/x86_64-linux-gnu/libm.so.6
+ ctanf64@@GLIBC_2.27                               /lib/x86_64-linux-gnu/libm.so.6
+ ctanf64@GLIBC_2.27                                /lib/x86_64-linux-gnu/libm.so.6
+ ctanf64x                                          /lib/x86_64-linux-gnu/libm.so.6
+ ctanf64x@@GLIBC_2.27                              /lib/x86_64-linux-gnu/libm.so.6
+ ctanf64x@GLIBC_2.27                               /lib/x86_64-linux-gnu/libm.so.6
+ ctanf@@GLIBC_2.2.5                                /lib/x86_64-linux-gnu/libm.so.6
+ ctanf@GLIBC_2.2.5                                 /lib/x86_64-linux-gnu/libm.so.6
+ ctanh                                             /lib/x86_64-linux-gnu/libm.so.6
+ ctanh@@GLIBC_2.2.5                                /lib/x86_64-linux-gnu/libm.so.6
+ ctanh@GLIBC_2.2.5                                 /lib/x86_64-linux-gnu/libm.so.6
+ ctanhf                                            /lib/x86_64-linux-gnu/libm.so.6
+ ctanhf128                                         /lib/x86_64-linux-gnu/libm.so.6
+ ctanhf128@@GLIBC_2.26                             /lib/x86_64-linux-gnu/libm.so.6
+ ctanhf128@GLIBC_2.26                              /lib/x86_64-linux-gnu/libm.so.6
+ ctanhf32                                          /lib/x86_64-linux-gnu/libm.so.6
+ ctanhf32@@GLIBC_2.27                              /lib/x86_64-linux-gnu/libm.so.6
+ ctanhf32@GLIBC_2.27                               /lib/x86_64-linux-gnu/libm.so.6
+ ctanhf32x                                         /lib/x86_64-linux-gnu/libm.so.6
+ ctanhf32x@@GLIBC_2.27                             /lib/x86_64-linux-gnu/libm.so.6
+ ctanhf32x@GLIBC_2.27                              /lib/x86_64-linux-gnu/libm.so.6
+ ctanhf64                                          /lib/x86_64-linux-gnu/libm.so.6
+ ctanhf64@@GLIBC_2.27                              /lib/x86_64-linux-gnu/libm.so.6
+ ctanhf64@GLIBC_2.27                               /lib/x86_64-linux-gnu/libm.so.6
+ ctanhf64x                                         /lib/x86_64-linux-gnu/libm.so.6
+ ctanhf64x@@GLIBC_2.27                             /lib/x86_64-linux-gnu/libm.so.6
+ ctanhf64x@GLIBC_2.27                              /lib/x86_64-linux-gnu/libm.so.6
+ ctanhf@@GLIBC_2.2.5                               /lib/x86_64-linux-gnu/libm.so.6
+ ctanhf@GLIBC_2.2.5                                /lib/x86_64-linux-gnu/libm.so.6
+ ctanhl                                            /lib/x86_64-linux-gnu/libm.so.6
+ ctanhl@@GLIBC_2.2.5                               /lib/x86_64-linux-gnu/libm.so.6
+ ctanhl@GLIBC_2.2.5                                /lib/x86_64-linux-gnu/libm.so.6
+ ctanl                                             /lib/x86_64-linux-gnu/libm.so.6
+ ctanl@@GLIBC_2.2.5                                /lib/x86_64-linux-gnu/libm.so.6
+ ctanl@GLIBC_2.2.5                                 /lib/x86_64-linux-gnu/libm.so.6
+ data_start                                        /usr/lib/gcc/x86_64-linux-gnu/7/../../../x86_64-linux-gnu/Scrt1.o
+ daylight                                          /lib/x86_64-linux-gnu/libc.so.6
+ daylight@@GLIBC_2.2.5                             /lib/x86_64-linux-gnu/libc.so.6
+ daylight@GLIBC_2.2.5                              /lib/x86_64-linux-gnu/libc.so.6
+ dcgettext                                         /lib/x86_64-linux-gnu/libc.so.6
+ dcgettext@@GLIBC_2.2.5                            /lib/x86_64-linux-gnu/libc.so.6
+ dcgettext@GLIBC_2.2.5                             /lib/x86_64-linux-gnu/libc.so.6
+ dcngettext                                        /lib/x86_64-linux-gnu/libc.so.6
+ dcngettext@@GLIBC_2.2.5                           /lib/x86_64-linux-gnu/libc.so.6
+ dcngettext@GLIBC_2.2.5                            /lib/x86_64-linux-gnu/libc.so.6
+ dgettext                                          /lib/x86_64-linux-gnu/libc.so.6
+ dgettext@@GLIBC_2.2.5                             /lib/x86_64-linux-gnu/libc.so.6
+ dgettext@GLIBC_2.2.5                              /lib/x86_64-linux-gnu/libc.so.6
+ dirfd                                             /lib/x86_64-linux-gnu/libc.so.6
+ dirfd@@GLIBC_2.2.5                                /lib/x86_64-linux-gnu/libc.so.6
+ dirfd@GLIBC_2.2.5                                 /lib/x86_64-linux-gnu/libc.so.6
+ dl_iterate_phdr                                   /lib/x86_64-linux-gnu/libc.so.6
+ dl_iterate_phdr@@GLIBC_2.2.5                      /lib/x86_64-linux-gnu/libc.so.6
+ dl_iterate_phdr@GLIBC_2.2.5                       /lib/x86_64-linux-gnu/libc.so.6
+ dngettext                                         /lib/x86_64-linux-gnu/libc.so.6
+ dngettext@@GLIBC_2.2.5                            /lib/x86_64-linux-gnu/libc.so.6
+ dngettext@GLIBC_2.2.5                             /lib/x86_64-linux-gnu/libc.so.6
+ drem                                              /lib/x86_64-linux-gnu/libm.so.6
+ drem@@GLIBC_2.2.5                                 /lib/x86_64-linux-gnu/libm.so.6
+ drem@GLIBC_2.2.5                                  /lib/x86_64-linux-gnu/libm.so.6
+ dremf                                             /lib/x86_64-linux-gnu/libm.so.6
+ dremf@@GLIBC_2.2.5                                /lib/x86_64-linux-gnu/libm.so.6
+ dremf@GLIBC_2.2.5                                 /lib/x86_64-linux-gnu/libm.so.6
+ dreml                                             /lib/x86_64-linux-gnu/libm.so.6
+ dreml@@GLIBC_2.2.5                                /lib/x86_64-linux-gnu/libm.so.6
+ dreml@GLIBC_2.2.5                                 /lib/x86_64-linux-gnu/libm.so.6
+ dup                                               /lib/x86_64-linux-gnu/libc.so.6
+ dup2                                              /lib/x86_64-linux-gnu/libc.so.6
+ dup2@@GLIBC_2.2.5                                 /lib/x86_64-linux-gnu/libc.so.6
+ dup2@GLIBC_2.2.5                                  /lib/x86_64-linux-gnu/libc.so.6
+ dup3                                              /lib/x86_64-linux-gnu/libc.so.6
+ dup3@@GLIBC_2.9                                   /lib/x86_64-linux-gnu/libc.so.6
+ dup3@GLIBC_2.9                                    /lib/x86_64-linux-gnu/libc.so.6
+ dup@@GLIBC_2.2.5                                  /lib/x86_64-linux-gnu/libc.so.6
+ dup@GLIBC_2.2.5                                   /lib/x86_64-linux-gnu/libc.so.6
+ duplocale                                         /lib/x86_64-linux-gnu/libc.so.6
+ duplocale@@GLIBC_2.3                              /lib/x86_64-linux-gnu/libc.so.6
+ duplocale@GLIBC_2.3                               /lib/x86_64-linux-gnu/libc.so.6
+ eaccess                                           /lib/x86_64-linux-gnu/libc.so.6
+ eaccess@@GLIBC_2.4                                /lib/x86_64-linux-gnu/libc.so.6
+ eaccess@GLIBC_2.4                                 /lib/x86_64-linux-gnu/libc.so.6
+ ecvt_r                                            /lib/x86_64-linux-gnu/libc.so.6
+ ecvt_r@@GLIBC_2.2.5                               /lib/x86_64-linux-gnu/libc.so.6
+ ecvt_r@GLIBC_2.2.5                                /lib/x86_64-linux-gnu/libc.so.6
+ emit_bc_free                                      build/py/emitbc.o
+                                                   build/py/compile.o
+ emit_bc_method_table                              build/py/emitbc.o
+                                                   build/py/compile.o
+ emit_bc_new                                       build/py/emitbc.o
+                                                   build/py/compile.o
+ emit_bc_set_max_num_labels                        build/py/emitbc.o
+                                                   build/py/compile.o
+ emit_inline_thumb_free                            build/py/emitinlinethumb.o
+ emit_inline_thumb_method_table                    build/py/emitinlinethumb.o
+                                                   build/py/compile.o
+ emit_inline_thumb_new                             build/py/emitinlinethumb.o
+ emit_inline_xtensa_free                           build/py/emitinlinextensa.o
+ emit_inline_xtensa_method_table                   build/py/emitinlinextensa.o
+                                                   build/py/compile.o
+ emit_inline_xtensa_new                            build/py/emitinlinextensa.o
+ emit_native_arm_free                              build/py/emitnarm.o
+ emit_native_arm_method_table                      build/py/emitnarm.o
+                                                   build/py/compile.o
+ emit_native_arm_new                               build/py/emitnarm.o
+ emit_native_thumb_free                            build/py/emitnthumb.o
+ emit_native_thumb_method_table                    build/py/emitnthumb.o
+                                                   build/py/compile.o
+ emit_native_thumb_new                             build/py/emitnthumb.o
+ emit_native_x64_free                              build/py/emitnx64.o
+ emit_native_x64_method_table                      build/py/emitnx64.o
+                                                   build/py/compile.o
+ emit_native_x64_new                               build/py/emitnx64.o
+ emit_native_x86_free                              build/py/emitnx86.o
+ emit_native_x86_method_table                      build/py/emitnx86.o
+                                                   build/py/compile.o
+ emit_native_x86_new                               build/py/emitnx86.o
+ emit_native_xtensa_free                           build/py/emitnxtensa.o
+ emit_native_xtensa_method_table                   build/py/emitnxtensa.o
+                                                   build/py/compile.o
+ emit_native_xtensa_new                            build/py/emitnxtensa.o
+ emit_native_xtensawin_free                        build/py/emitnxtensawin.o
+ emit_native_xtensawin_method_table                build/py/emitnxtensawin.o
+                                                   build/py/compile.o
+ emit_native_xtensawin_new                         build/py/emitnxtensawin.o
+ endmntent                                         /lib/x86_64-linux-gnu/libc.so.6
+ endmntent@@GLIBC_2.2.5                            /lib/x86_64-linux-gnu/libc.so.6
+ endmntent@GLIBC_2.2.5                             /lib/x86_64-linux-gnu/libc.so.6
+ endttyent                                         /lib/x86_64-linux-gnu/libc.so.6
+ endttyent@@GLIBC_2.2.5                            /lib/x86_64-linux-gnu/libc.so.6
+ endttyent@GLIBC_2.2.5                             /lib/x86_64-linux-gnu/libc.so.6
+ endutent                                          /lib/x86_64-linux-gnu/libc.so.6
+ endutent@@GLIBC_2.2.5                             /lib/x86_64-linux-gnu/libc.so.6
+ endutent@GLIBC_2.2.5                              /lib/x86_64-linux-gnu/libc.so.6
+ environ                                           /lib/x86_64-linux-gnu/libc.so.6
+ environ@@GLIBC_2.2.5                              /lib/x86_64-linux-gnu/libc.so.6
+ environ@GLIBC_2.2.5                               /lib/x86_64-linux-gnu/libc.so.6
+ erand48_r                                         /lib/x86_64-linux-gnu/libc.so.6
+ erand48_r@@GLIBC_2.2.5                            /lib/x86_64-linux-gnu/libc.so.6
+ erand48_r@GLIBC_2.2.5                             /lib/x86_64-linux-gnu/libc.so.6
+ erf                                               /lib/x86_64-linux-gnu/libm.so.6
+ erf@@GLIBC_2.2.5                                  /lib/x86_64-linux-gnu/libm.so.6
+ erf@GLIBC_2.2.5                                   /lib/x86_64-linux-gnu/libm.so.6
+ erfc                                              /lib/x86_64-linux-gnu/libm.so.6
+ erfc@@GLIBC_2.2.5                                 /lib/x86_64-linux-gnu/libm.so.6
+ erfc@GLIBC_2.2.5                                  /lib/x86_64-linux-gnu/libm.so.6
+ erfcf                                             /lib/x86_64-linux-gnu/libm.so.6
+ erfcf128                                          /lib/x86_64-linux-gnu/libm.so.6
+ erfcf128@@GLIBC_2.26                              /lib/x86_64-linux-gnu/libm.so.6
+ erfcf128@GLIBC_2.26                               /lib/x86_64-linux-gnu/libm.so.6
+ erfcf32                                           /lib/x86_64-linux-gnu/libm.so.6
+ erfcf32@@GLIBC_2.27                               /lib/x86_64-linux-gnu/libm.so.6
+ erfcf32@GLIBC_2.27                                /lib/x86_64-linux-gnu/libm.so.6
+ erfcf32x                                          /lib/x86_64-linux-gnu/libm.so.6
+ erfcf32x@@GLIBC_2.27                              /lib/x86_64-linux-gnu/libm.so.6
+ erfcf32x@GLIBC_2.27                               /lib/x86_64-linux-gnu/libm.so.6
+ erfcf64                                           /lib/x86_64-linux-gnu/libm.so.6
+ erfcf64@@GLIBC_2.27                               /lib/x86_64-linux-gnu/libm.so.6
+ erfcf64@GLIBC_2.27                                /lib/x86_64-linux-gnu/libm.so.6
+ erfcf64x                                          /lib/x86_64-linux-gnu/libm.so.6
+ erfcf64x@@GLIBC_2.27                              /lib/x86_64-linux-gnu/libm.so.6
+ erfcf64x@GLIBC_2.27                               /lib/x86_64-linux-gnu/libm.so.6
+ erfcf@@GLIBC_2.2.5                                /lib/x86_64-linux-gnu/libm.so.6
+ erfcf@GLIBC_2.2.5                                 /lib/x86_64-linux-gnu/libm.so.6
+ erfcl                                             /lib/x86_64-linux-gnu/libm.so.6
+ erfcl@@GLIBC_2.2.5                                /lib/x86_64-linux-gnu/libm.so.6
+ erfcl@GLIBC_2.2.5                                 /lib/x86_64-linux-gnu/libm.so.6
+ erff                                              /lib/x86_64-linux-gnu/libm.so.6
+ erff128                                           /lib/x86_64-linux-gnu/libm.so.6
+ erff128@@GLIBC_2.26                               /lib/x86_64-linux-gnu/libm.so.6
+ erff128@GLIBC_2.26                                /lib/x86_64-linux-gnu/libm.so.6
+ erff32                                            /lib/x86_64-linux-gnu/libm.so.6
+ erff32@@GLIBC_2.27                                /lib/x86_64-linux-gnu/libm.so.6
+ erff32@GLIBC_2.27                                 /lib/x86_64-linux-gnu/libm.so.6
+ erff32x                                           /lib/x86_64-linux-gnu/libm.so.6
+ erff32x@@GLIBC_2.27                               /lib/x86_64-linux-gnu/libm.so.6
+ erff32x@GLIBC_2.27                                /lib/x86_64-linux-gnu/libm.so.6
+ erff64                                            /lib/x86_64-linux-gnu/libm.so.6
+ erff64@@GLIBC_2.27                                /lib/x86_64-linux-gnu/libm.so.6
+ erff64@GLIBC_2.27                                 /lib/x86_64-linux-gnu/libm.so.6
+ erff64x                                           /lib/x86_64-linux-gnu/libm.so.6
+ erff64x@@GLIBC_2.27                               /lib/x86_64-linux-gnu/libm.so.6
+ erff64x@GLIBC_2.27                                /lib/x86_64-linux-gnu/libm.so.6
+ erff@@GLIBC_2.2.5                                 /lib/x86_64-linux-gnu/libm.so.6
+ erff@GLIBC_2.2.5                                  /lib/x86_64-linux-gnu/libm.so.6
+ erfl                                              /lib/x86_64-linux-gnu/libm.so.6
+ erfl@@GLIBC_2.2.5                                 /lib/x86_64-linux-gnu/libm.so.6
+ erfl@GLIBC_2.2.5                                  /lib/x86_64-linux-gnu/libm.so.6
+ error                                             /lib/x86_64-linux-gnu/libc.so.6
+ error@@GLIBC_2.2.5                                /lib/x86_64-linux-gnu/libc.so.6
+ error@GLIBC_2.2.5                                 /lib/x86_64-linux-gnu/libc.so.6
+ error_at_line                                     /lib/x86_64-linux-gnu/libc.so.6
+ error_at_line@@GLIBC_2.2.5                        /lib/x86_64-linux-gnu/libc.so.6
+ error_at_line@GLIBC_2.2.5                         /lib/x86_64-linux-gnu/libc.so.6
+ euidaccess                                        /lib/x86_64-linux-gnu/libc.so.6
+ euidaccess@@GLIBC_2.2.5                           /lib/x86_64-linux-gnu/libc.so.6
+ euidaccess@GLIBC_2.2.5                            /lib/x86_64-linux-gnu/libc.so.6
+ execve                                            /lib/x86_64-linux-gnu/libc.so.6
+ execve@@GLIBC_2.2.5                               /lib/x86_64-linux-gnu/libc.so.6
+ execve@GLIBC_2.2.5                                /lib/x86_64-linux-gnu/libc.so.6
+ execvpe                                           /lib/x86_64-linux-gnu/libc.so.6
+ execvpe@@GLIBC_2.11                               /lib/x86_64-linux-gnu/libc.so.6
+ execvpe@GLIBC_2.11                                /lib/x86_64-linux-gnu/libc.so.6
+ exp                                               /lib/x86_64-linux-gnu/libm.so.6
+                                                   build/py/objcomplex.o
+ exp10                                             /lib/x86_64-linux-gnu/libm.so.6
+ exp10@@GLIBC_2.2.5                                /lib/x86_64-linux-gnu/libm.so.6
+ exp10@GLIBC_2.2.5                                 /lib/x86_64-linux-gnu/libm.so.6
+ exp10f                                            /lib/x86_64-linux-gnu/libm.so.6
+ exp10f128                                         /lib/x86_64-linux-gnu/libm.so.6
+ exp10f128@@GLIBC_2.26                             /lib/x86_64-linux-gnu/libm.so.6
+ exp10f128@GLIBC_2.26                              /lib/x86_64-linux-gnu/libm.so.6
+ exp10f32                                          /lib/x86_64-linux-gnu/libm.so.6
+ exp10f32@@GLIBC_2.27                              /lib/x86_64-linux-gnu/libm.so.6
+ exp10f32@GLIBC_2.27                               /lib/x86_64-linux-gnu/libm.so.6
+ exp10f32x                                         /lib/x86_64-linux-gnu/libm.so.6
+ exp10f32x@@GLIBC_2.27                             /lib/x86_64-linux-gnu/libm.so.6
+ exp10f32x@GLIBC_2.27                              /lib/x86_64-linux-gnu/libm.so.6
+ exp10f64                                          /lib/x86_64-linux-gnu/libm.so.6
+ exp10f64@@GLIBC_2.27                              /lib/x86_64-linux-gnu/libm.so.6
+ exp10f64@GLIBC_2.27                               /lib/x86_64-linux-gnu/libm.so.6
+ exp10f64x                                         /lib/x86_64-linux-gnu/libm.so.6
+ exp10f64x@@GLIBC_2.27                             /lib/x86_64-linux-gnu/libm.so.6
+ exp10f64x@GLIBC_2.27                              /lib/x86_64-linux-gnu/libm.so.6
+ exp10f@@GLIBC_2.2.5                               /lib/x86_64-linux-gnu/libm.so.6
+ exp10f@GLIBC_2.2.5                                /lib/x86_64-linux-gnu/libm.so.6
+ exp10l                                            /lib/x86_64-linux-gnu/libm.so.6
+ exp10l@@GLIBC_2.2.5                               /lib/x86_64-linux-gnu/libm.so.6
+ exp10l@GLIBC_2.2.5                                /lib/x86_64-linux-gnu/libm.so.6
+ exp2                                              /lib/x86_64-linux-gnu/libm.so.6
+ exp2@@GLIBC_2.2.5                                 /lib/x86_64-linux-gnu/libm.so.6
+ exp2@GLIBC_2.2.5                                  /lib/x86_64-linux-gnu/libm.so.6
+ exp2f128                                          /lib/x86_64-linux-gnu/libm.so.6
+ exp2f128@@GLIBC_2.26                              /lib/x86_64-linux-gnu/libm.so.6
+ exp2f128@GLIBC_2.26                               /lib/x86_64-linux-gnu/libm.so.6
+ exp2f32                                           /lib/x86_64-linux-gnu/libm.so.6
+ exp2f32@@GLIBC_2.27                               /lib/x86_64-linux-gnu/libm.so.6
+ exp2f32@GLIBC_2.27                                /lib/x86_64-linux-gnu/libm.so.6
+ exp2f32x                                          /lib/x86_64-linux-gnu/libm.so.6
+ exp2f32x@@GLIBC_2.27                              /lib/x86_64-linux-gnu/libm.so.6
+ exp2f32x@GLIBC_2.27                               /lib/x86_64-linux-gnu/libm.so.6
+ exp2f64                                           /lib/x86_64-linux-gnu/libm.so.6
+ exp2f64@@GLIBC_2.27                               /lib/x86_64-linux-gnu/libm.so.6
+ exp2f64@GLIBC_2.27                                /lib/x86_64-linux-gnu/libm.so.6
+ exp2f64x                                          /lib/x86_64-linux-gnu/libm.so.6
+ exp2f64x@@GLIBC_2.27                              /lib/x86_64-linux-gnu/libm.so.6
+ exp2f64x@GLIBC_2.27                               /lib/x86_64-linux-gnu/libm.so.6
+ exp2l                                             /lib/x86_64-linux-gnu/libm.so.6
+ exp2l@@GLIBC_2.2.5                                /lib/x86_64-linux-gnu/libm.so.6
+ exp2l@GLIBC_2.2.5                                 /lib/x86_64-linux-gnu/libm.so.6
+ exp@@GLIBC_2.2.5                                  /lib/x86_64-linux-gnu/libm.so.6
+ exp@GLIBC_2.2.5                                   /lib/x86_64-linux-gnu/libm.so.6
+ expf128                                           /lib/x86_64-linux-gnu/libm.so.6
+ expf128@@GLIBC_2.26                               /lib/x86_64-linux-gnu/libm.so.6
+ expf128@GLIBC_2.26                                /lib/x86_64-linux-gnu/libm.so.6
+ expf32                                            /lib/x86_64-linux-gnu/libm.so.6
+ expf32@@GLIBC_2.27                                /lib/x86_64-linux-gnu/libm.so.6
+ expf32@GLIBC_2.27                                 /lib/x86_64-linux-gnu/libm.so.6
+ expf32x                                           /lib/x86_64-linux-gnu/libm.so.6
+ expf32x@@GLIBC_2.27                               /lib/x86_64-linux-gnu/libm.so.6
+ expf32x@GLIBC_2.27                                /lib/x86_64-linux-gnu/libm.so.6
+ expf64                                            /lib/x86_64-linux-gnu/libm.so.6
+ expf64@@GLIBC_2.27                                /lib/x86_64-linux-gnu/libm.so.6
+ expf64@GLIBC_2.27                                 /lib/x86_64-linux-gnu/libm.so.6
+ expf64x                                           /lib/x86_64-linux-gnu/libm.so.6
+ expf64x@@GLIBC_2.27                               /lib/x86_64-linux-gnu/libm.so.6
+ expf64x@GLIBC_2.27                                /lib/x86_64-linux-gnu/libm.so.6
+ expl                                              /lib/x86_64-linux-gnu/libm.so.6
+ expl@@GLIBC_2.2.5                                 /lib/x86_64-linux-gnu/libm.so.6
+ expl@GLIBC_2.2.5                                  /lib/x86_64-linux-gnu/libm.so.6
+ expm1                                             /lib/x86_64-linux-gnu/libm.so.6
+ expm1@@GLIBC_2.2.5                                /lib/x86_64-linux-gnu/libm.so.6
+ expm1@GLIBC_2.2.5                                 /lib/x86_64-linux-gnu/libm.so.6
+ expm1f                                            /lib/x86_64-linux-gnu/libm.so.6
+ expm1f128                                         /lib/x86_64-linux-gnu/libm.so.6
+ expm1f128@@GLIBC_2.26                             /lib/x86_64-linux-gnu/libm.so.6
+ expm1f128@GLIBC_2.26                              /lib/x86_64-linux-gnu/libm.so.6
+ expm1f32                                          /lib/x86_64-linux-gnu/libm.so.6
+ expm1f32@@GLIBC_2.27                              /lib/x86_64-linux-gnu/libm.so.6
+ expm1f32@GLIBC_2.27                               /lib/x86_64-linux-gnu/libm.so.6
+ expm1f32x                                         /lib/x86_64-linux-gnu/libm.so.6
+ expm1f32x@@GLIBC_2.27                             /lib/x86_64-linux-gnu/libm.so.6
+ expm1f32x@GLIBC_2.27                              /lib/x86_64-linux-gnu/libm.so.6
+ expm1f64                                          /lib/x86_64-linux-gnu/libm.so.6
+ expm1f64@@GLIBC_2.27                              /lib/x86_64-linux-gnu/libm.so.6
+ expm1f64@GLIBC_2.27                               /lib/x86_64-linux-gnu/libm.so.6
+ expm1f64x                                         /lib/x86_64-linux-gnu/libm.so.6
+ expm1f64x@@GLIBC_2.27                             /lib/x86_64-linux-gnu/libm.so.6
+ expm1f64x@GLIBC_2.27                              /lib/x86_64-linux-gnu/libm.so.6
+ expm1f@@GLIBC_2.2.5                               /lib/x86_64-linux-gnu/libm.so.6
+ expm1f@GLIBC_2.2.5                                /lib/x86_64-linux-gnu/libm.so.6
+ expm1l                                            /lib/x86_64-linux-gnu/libm.so.6
+ expm1l@@GLIBC_2.2.5                               /lib/x86_64-linux-gnu/libm.so.6
+ expm1l@GLIBC_2.2.5                                /lib/x86_64-linux-gnu/libm.so.6
+ fabs                                              /lib/x86_64-linux-gnu/libm.so.6
+ fabs@@GLIBC_2.2.5                                 /lib/x86_64-linux-gnu/libm.so.6
+ fabs@GLIBC_2.2.5                                  /lib/x86_64-linux-gnu/libm.so.6
+ fabsf                                             /lib/x86_64-linux-gnu/libm.so.6
+ fabsf128                                          /lib/x86_64-linux-gnu/libm.so.6
+ fabsf128@@GLIBC_2.26                              /lib/x86_64-linux-gnu/libm.so.6
+ fabsf128@GLIBC_2.26                               /lib/x86_64-linux-gnu/libm.so.6
+ fabsf32                                           /lib/x86_64-linux-gnu/libm.so.6
+ fabsf32@@GLIBC_2.27                               /lib/x86_64-linux-gnu/libm.so.6
+ fabsf32@GLIBC_2.27                                /lib/x86_64-linux-gnu/libm.so.6
+ fabsf32x                                          /lib/x86_64-linux-gnu/libm.so.6
+ fabsf32x@@GLIBC_2.27                              /lib/x86_64-linux-gnu/libm.so.6
+ fabsf32x@GLIBC_2.27                               /lib/x86_64-linux-gnu/libm.so.6
+ fabsf64                                           /lib/x86_64-linux-gnu/libm.so.6
+ fabsf64@@GLIBC_2.27                               /lib/x86_64-linux-gnu/libm.so.6
+ fabsf64@GLIBC_2.27                                /lib/x86_64-linux-gnu/libm.so.6
+ fabsf64x                                          /lib/x86_64-linux-gnu/libm.so.6
+ fabsf64x@@GLIBC_2.27                              /lib/x86_64-linux-gnu/libm.so.6
+ fabsf64x@GLIBC_2.27                               /lib/x86_64-linux-gnu/libm.so.6
+ fabsf@@GLIBC_2.2.5                                /lib/x86_64-linux-gnu/libm.so.6
+ fabsf@GLIBC_2.2.5                                 /lib/x86_64-linux-gnu/libm.so.6
+ fabsl                                             /lib/x86_64-linux-gnu/libm.so.6
+ fabsl@@GLIBC_2.2.5                                /lib/x86_64-linux-gnu/libm.so.6
+ fabsl@GLIBC_2.2.5                                 /lib/x86_64-linux-gnu/libm.so.6
+ fallocate                                         /lib/x86_64-linux-gnu/libc.so.6
+ fallocate@@GLIBC_2.10                             /lib/x86_64-linux-gnu/libc.so.6
+ fallocate@GLIBC_2.10                              /lib/x86_64-linux-gnu/libc.so.6
+ fchdir                                            /lib/x86_64-linux-gnu/libc.so.6
+ fchdir@@GLIBC_2.2.5                               /lib/x86_64-linux-gnu/libc.so.6
+ fchdir@GLIBC_2.2.5                                /lib/x86_64-linux-gnu/libc.so.6
+ fchmod                                            /lib/x86_64-linux-gnu/libc.so.6
+ fchmod@@GLIBC_2.2.5                               /lib/x86_64-linux-gnu/libc.so.6
+ fchmod@GLIBC_2.2.5                                /lib/x86_64-linux-gnu/libc.so.6
+ fchown                                            /lib/x86_64-linux-gnu/libc.so.6
+ fchown@@GLIBC_2.2.5                               /lib/x86_64-linux-gnu/libc.so.6
+ fchown@GLIBC_2.2.5                                /lib/x86_64-linux-gnu/libc.so.6
+ fcloseall                                         /lib/x86_64-linux-gnu/libc.so.6
+ fcloseall@@GLIBC_2.2.5                            /lib/x86_64-linux-gnu/libc.so.6
+ fcloseall@GLIBC_2.2.5                             /lib/x86_64-linux-gnu/libc.so.6
+ fcntl                                             /lib/x86_64-linux-gnu/libc.so.6
+ fcntl@@GLIBC_2.2.5                                /lib/x86_64-linux-gnu/libc.so.6
+ fcntl@GLIBC_2.2.5                                 /lib/x86_64-linux-gnu/libc.so.6
+ fcvt_r                                            /lib/x86_64-linux-gnu/libc.so.6
+ fcvt_r@@GLIBC_2.2.5                               /lib/x86_64-linux-gnu/libc.so.6
+ fcvt_r@GLIBC_2.2.5                                /lib/x86_64-linux-gnu/libc.so.6
+ fdim                                              /lib/x86_64-linux-gnu/libm.so.6
+ fdim@@GLIBC_2.2.5                                 /lib/x86_64-linux-gnu/libm.so.6
+ fdim@GLIBC_2.2.5                                  /lib/x86_64-linux-gnu/libm.so.6
+ fdimf                                             /lib/x86_64-linux-gnu/libm.so.6
+ fdimf128                                          /lib/x86_64-linux-gnu/libm.so.6
+ fdimf128@@GLIBC_2.26                              /lib/x86_64-linux-gnu/libm.so.6
+ fdimf128@GLIBC_2.26                               /lib/x86_64-linux-gnu/libm.so.6
+ fdimf32                                           /lib/x86_64-linux-gnu/libm.so.6
+ fdimf32@@GLIBC_2.27                               /lib/x86_64-linux-gnu/libm.so.6
+ fdimf32@GLIBC_2.27                                /lib/x86_64-linux-gnu/libm.so.6
+ fdimf32x                                          /lib/x86_64-linux-gnu/libm.so.6
+ fdimf32x@@GLIBC_2.27                              /lib/x86_64-linux-gnu/libm.so.6
+ fdimf32x@GLIBC_2.27                               /lib/x86_64-linux-gnu/libm.so.6
+ fdimf64                                           /lib/x86_64-linux-gnu/libm.so.6
+ fdimf64@@GLIBC_2.27                               /lib/x86_64-linux-gnu/libm.so.6
+ fdimf64@GLIBC_2.27                                /lib/x86_64-linux-gnu/libm.so.6
+ fdimf64x                                          /lib/x86_64-linux-gnu/libm.so.6
+ fdimf64x@@GLIBC_2.27                              /lib/x86_64-linux-gnu/libm.so.6
+ fdimf64x@GLIBC_2.27                               /lib/x86_64-linux-gnu/libm.so.6
+ fdimf@@GLIBC_2.2.5                                /lib/x86_64-linux-gnu/libm.so.6
+ fdimf@GLIBC_2.2.5                                 /lib/x86_64-linux-gnu/libm.so.6
+ fdiml                                             /lib/x86_64-linux-gnu/libm.so.6
+ fdiml@@GLIBC_2.2.5                                /lib/x86_64-linux-gnu/libm.so.6
+ fdiml@GLIBC_2.2.5                                 /lib/x86_64-linux-gnu/libm.so.6
+ fdopendir                                         /lib/x86_64-linux-gnu/libc.so.6
+ fdopendir@@GLIBC_2.4                              /lib/x86_64-linux-gnu/libc.so.6
+ fdopendir@GLIBC_2.4                               /lib/x86_64-linux-gnu/libc.so.6
+ fegetenv                                          /lib/x86_64-linux-gnu/libm.so.6
+ fegetenv@@GLIBC_2.2.5                             /lib/x86_64-linux-gnu/libm.so.6
+ fegetenv@GLIBC_2.2.5                              /lib/x86_64-linux-gnu/libm.so.6
+ fegetround                                        /lib/x86_64-linux-gnu/libm.so.6
+ fegetround@@GLIBC_2.2.5                           /lib/x86_64-linux-gnu/libm.so.6
+ fegetround@GLIBC_2.2.5                            /lib/x86_64-linux-gnu/libm.so.6
+ feholdexcept                                      /lib/x86_64-linux-gnu/libm.so.6
+ feholdexcept@@GLIBC_2.2.5                         /lib/x86_64-linux-gnu/libm.so.6
+ feholdexcept@GLIBC_2.2.5                          /lib/x86_64-linux-gnu/libm.so.6
+ feof                                              /lib/x86_64-linux-gnu/libc.so.6
+ feof@@GLIBC_2.2.5                                 /lib/x86_64-linux-gnu/libc.so.6
+ feof@GLIBC_2.2.5                                  /lib/x86_64-linux-gnu/libc.so.6
+ feraiseexcept                                     /lib/x86_64-linux-gnu/libm.so.6
+ feraiseexcept@@GLIBC_2.2.5                        /lib/x86_64-linux-gnu/libm.so.6
+ feraiseexcept@GLIBC_2.2.5                         /lib/x86_64-linux-gnu/libm.so.6
+ ferror                                            /lib/x86_64-linux-gnu/libc.so.6
+ ferror@@GLIBC_2.2.5                               /lib/x86_64-linux-gnu/libc.so.6
+ ferror@GLIBC_2.2.5                                /lib/x86_64-linux-gnu/libc.so.6
+ fesetenv                                          /lib/x86_64-linux-gnu/libm.so.6
+ fesetenv@@GLIBC_2.2.5                             /lib/x86_64-linux-gnu/libm.so.6
+ fesetenv@GLIBC_2.2.5                              /lib/x86_64-linux-gnu/libm.so.6
+ fesetround                                        /lib/x86_64-linux-gnu/libm.so.6
+ fesetround@@GLIBC_2.2.5                           /lib/x86_64-linux-gnu/libm.so.6
+ fesetround@GLIBC_2.2.5                            /lib/x86_64-linux-gnu/libm.so.6
+ fflush                                            /lib/x86_64-linux-gnu/libc.so.6
+ fflush@@GLIBC_2.2.5                               /lib/x86_64-linux-gnu/libc.so.6
+ fflush@GLIBC_2.2.5                                /lib/x86_64-linux-gnu/libc.so.6
+ fflush_unlocked                                   /lib/x86_64-linux-gnu/libc.so.6
+ fflush_unlocked@@GLIBC_2.2.5                      /lib/x86_64-linux-gnu/libc.so.6
+ fflush_unlocked@GLIBC_2.2.5                       /lib/x86_64-linux-gnu/libc.so.6
+ ffsl                                              /lib/x86_64-linux-gnu/libc.so.6
+ ffsl@@GLIBC_2.2.5                                 /lib/x86_64-linux-gnu/libc.so.6
+ ffsl@GLIBC_2.2.5                                  /lib/x86_64-linux-gnu/libc.so.6
+ fgetc                                             /lib/x86_64-linux-gnu/libc.so.6
+ fgetc@@GLIBC_2.2.5                                /lib/x86_64-linux-gnu/libc.so.6
+ fgetc@GLIBC_2.2.5                                 /lib/x86_64-linux-gnu/libc.so.6
+ fgetc_unlocked                                    /lib/x86_64-linux-gnu/libc.so.6
+ fgetc_unlocked@@GLIBC_2.2.5                       /lib/x86_64-linux-gnu/libc.so.6
+ fgetc_unlocked@GLIBC_2.2.5                        /lib/x86_64-linux-gnu/libc.so.6
+ fgetgrent_r                                       /lib/x86_64-linux-gnu/libc.so.6
+ fgetgrent_r@@GLIBC_2.2.5                          /lib/x86_64-linux-gnu/libc.so.6
+ fgetgrent_r@GLIBC_2.2.5                           /lib/x86_64-linux-gnu/libc.so.6
+ fgetpwent_r                                       /lib/x86_64-linux-gnu/libc.so.6
+ fgetpwent_r@@GLIBC_2.2.5                          /lib/x86_64-linux-gnu/libc.so.6
+ fgetpwent_r@GLIBC_2.2.5                           /lib/x86_64-linux-gnu/libc.so.6
+ fgets                                             /lib/x86_64-linux-gnu/libc.so.6
+ fgets@@GLIBC_2.2.5                                /lib/x86_64-linux-gnu/libc.so.6
+ fgets@GLIBC_2.2.5                                 /lib/x86_64-linux-gnu/libc.so.6
+ fgets_unlocked                                    /lib/x86_64-linux-gnu/libc.so.6
+ fgets_unlocked@@GLIBC_2.2.5                       /lib/x86_64-linux-gnu/libc.so.6
+ fgets_unlocked@GLIBC_2.2.5                        /lib/x86_64-linux-gnu/libc.so.6
+ fgetsgent_r                                       /lib/x86_64-linux-gnu/libc.so.6
+ fgetsgent_r@@GLIBC_2.10                           /lib/x86_64-linux-gnu/libc.so.6
+ fgetsgent_r@GLIBC_2.10                            /lib/x86_64-linux-gnu/libc.so.6
+ fgetspent_r                                       /lib/x86_64-linux-gnu/libc.so.6
+ fgetspent_r@@GLIBC_2.2.5                          /lib/x86_64-linux-gnu/libc.so.6
+ fgetspent_r@GLIBC_2.2.5                           /lib/x86_64-linux-gnu/libc.so.6
+ fgetwc                                            /lib/x86_64-linux-gnu/libc.so.6
+ fgetwc@@GLIBC_2.2.5                               /lib/x86_64-linux-gnu/libc.so.6
+ fgetwc@GLIBC_2.2.5                                /lib/x86_64-linux-gnu/libc.so.6
+ fgetwc_unlocked                                   /lib/x86_64-linux-gnu/libc.so.6
+ fgetwc_unlocked@@GLIBC_2.2.5                      /lib/x86_64-linux-gnu/libc.so.6
+ fgetwc_unlocked@GLIBC_2.2.5                       /lib/x86_64-linux-gnu/libc.so.6
+ fileno                                            /lib/x86_64-linux-gnu/libc.so.6
+ fileno@@GLIBC_2.2.5                               /lib/x86_64-linux-gnu/libc.so.6
+ fileno@GLIBC_2.2.5                                /lib/x86_64-linux-gnu/libc.so.6
+ fileno_unlocked                                   /lib/x86_64-linux-gnu/libc.so.6
+ fileno_unlocked@@GLIBC_2.2.5                      /lib/x86_64-linux-gnu/libc.so.6
+ fileno_unlocked@GLIBC_2.2.5                       /lib/x86_64-linux-gnu/libc.so.6
+ find_subbytes                                     build/py/objstr.o
+                                                   build/py/objarray.o
+ finite                                            /lib/x86_64-linux-gnu/libm.so.6
+ finite@@GLIBC_2.2.5                               /lib/x86_64-linux-gnu/libm.so.6
+                                                   /lib/x86_64-linux-gnu/libc.so.6
+ finite@GLIBC_2.2.5                                /lib/x86_64-linux-gnu/libm.so.6
+ finitef                                           /lib/x86_64-linux-gnu/libm.so.6
+ finitef@@GLIBC_2.2.5                              /lib/x86_64-linux-gnu/libm.so.6
+                                                   /lib/x86_64-linux-gnu/libc.so.6
+ finitef@GLIBC_2.2.5                               /lib/x86_64-linux-gnu/libm.so.6
+ finitel                                           /lib/x86_64-linux-gnu/libm.so.6
+ finitel@@GLIBC_2.2.5                              /lib/x86_64-linux-gnu/libm.so.6
+                                                   /lib/x86_64-linux-gnu/libc.so.6
+ finitel@GLIBC_2.2.5                               /lib/x86_64-linux-gnu/libm.so.6
+ flock                                             /lib/x86_64-linux-gnu/libc.so.6
+ flock@@GLIBC_2.2.5                                /lib/x86_64-linux-gnu/libc.so.6
+ flock@GLIBC_2.2.5                                 /lib/x86_64-linux-gnu/libc.so.6
+ flockfile                                         /lib/x86_64-linux-gnu/libc.so.6
+ flockfile@@GLIBC_2.2.5                            /lib/x86_64-linux-gnu/libc.so.6
+ flockfile@GLIBC_2.2.5                             /lib/x86_64-linux-gnu/libc.so.6
+ floor                                             /lib/x86_64-linux-gnu/libm.so.6
+                                                   build/py/objfloat.o
+ floor@@GLIBC_2.2.5                                /lib/x86_64-linux-gnu/libm.so.6
+ floor@GLIBC_2.2.5                                 /lib/x86_64-linux-gnu/libm.so.6
+ floorf                                            /lib/x86_64-linux-gnu/libm.so.6
+ floorf128                                         /lib/x86_64-linux-gnu/libm.so.6
+ floorf128@@GLIBC_2.26                             /lib/x86_64-linux-gnu/libm.so.6
+ floorf128@GLIBC_2.26                              /lib/x86_64-linux-gnu/libm.so.6
+ floorf32                                          /lib/x86_64-linux-gnu/libm.so.6
+ floorf32@@GLIBC_2.27                              /lib/x86_64-linux-gnu/libm.so.6
+ floorf32@GLIBC_2.27                               /lib/x86_64-linux-gnu/libm.so.6
+ floorf32x                                         /lib/x86_64-linux-gnu/libm.so.6
+ floorf32x@@GLIBC_2.27                             /lib/x86_64-linux-gnu/libm.so.6
+ floorf32x@GLIBC_2.27                              /lib/x86_64-linux-gnu/libm.so.6
+ floorf64                                          /lib/x86_64-linux-gnu/libm.so.6
+ floorf64@@GLIBC_2.27                              /lib/x86_64-linux-gnu/libm.so.6
+ floorf64@GLIBC_2.27                               /lib/x86_64-linux-gnu/libm.so.6
+ floorf64x                                         /lib/x86_64-linux-gnu/libm.so.6
+ floorf64x@@GLIBC_2.27                             /lib/x86_64-linux-gnu/libm.so.6
+ floorf64x@GLIBC_2.27                              /lib/x86_64-linux-gnu/libm.so.6
+ floorf@@GLIBC_2.2.5                               /lib/x86_64-linux-gnu/libm.so.6
+ floorf@GLIBC_2.2.5                                /lib/x86_64-linux-gnu/libm.so.6
+ floorl                                            /lib/x86_64-linux-gnu/libm.so.6
+ floorl@@GLIBC_2.2.5                               /lib/x86_64-linux-gnu/libm.so.6
+ floorl@GLIBC_2.2.5                                /lib/x86_64-linux-gnu/libm.so.6
+ fma                                               /lib/x86_64-linux-gnu/libm.so.6
+ fma@@GLIBC_2.2.5                                  /lib/x86_64-linux-gnu/libm.so.6
+ fma@GLIBC_2.2.5                                   /lib/x86_64-linux-gnu/libm.so.6
+ fmaf                                              /lib/x86_64-linux-gnu/libm.so.6
+ fmaf128                                           /lib/x86_64-linux-gnu/libm.so.6
+ fmaf128@@GLIBC_2.26                               /lib/x86_64-linux-gnu/libm.so.6
+ fmaf128@GLIBC_2.26                                /lib/x86_64-linux-gnu/libm.so.6
+ fmaf32                                            /lib/x86_64-linux-gnu/libm.so.6
+ fmaf32@@GLIBC_2.27                                /lib/x86_64-linux-gnu/libm.so.6
+ fmaf32@GLIBC_2.27                                 /lib/x86_64-linux-gnu/libm.so.6
+ fmaf32x                                           /lib/x86_64-linux-gnu/libm.so.6
+ fmaf32x@@GLIBC_2.27                               /lib/x86_64-linux-gnu/libm.so.6
+ fmaf32x@GLIBC_2.27                                /lib/x86_64-linux-gnu/libm.so.6
+ fmaf64                                            /lib/x86_64-linux-gnu/libm.so.6
+ fmaf64@@GLIBC_2.27                                /lib/x86_64-linux-gnu/libm.so.6
+ fmaf64@GLIBC_2.27                                 /lib/x86_64-linux-gnu/libm.so.6
+ fmaf64x                                           /lib/x86_64-linux-gnu/libm.so.6
+ fmaf64x@@GLIBC_2.27                               /lib/x86_64-linux-gnu/libm.so.6
+ fmaf64x@GLIBC_2.27                                /lib/x86_64-linux-gnu/libm.so.6
+ fmaf@@GLIBC_2.2.5                                 /lib/x86_64-linux-gnu/libm.so.6
+ fmaf@GLIBC_2.2.5                                  /lib/x86_64-linux-gnu/libm.so.6
+ fmal                                              /lib/x86_64-linux-gnu/libm.so.6
+ fmal@@GLIBC_2.2.5                                 /lib/x86_64-linux-gnu/libm.so.6
+ fmal@GLIBC_2.2.5                                  /lib/x86_64-linux-gnu/libm.so.6
+ fmax                                              /lib/x86_64-linux-gnu/libm.so.6
+ fmax@@GLIBC_2.2.5                                 /lib/x86_64-linux-gnu/libm.so.6
+ fmax@GLIBC_2.2.5                                  /lib/x86_64-linux-gnu/libm.so.6
+ fmaxf                                             /lib/x86_64-linux-gnu/libm.so.6
+ fmaxf128                                          /lib/x86_64-linux-gnu/libm.so.6
+ fmaxf128@@GLIBC_2.26                              /lib/x86_64-linux-gnu/libm.so.6
+ fmaxf128@GLIBC_2.26                               /lib/x86_64-linux-gnu/libm.so.6
+ fmaxf32                                           /lib/x86_64-linux-gnu/libm.so.6
+ fmaxf32@@GLIBC_2.27                               /lib/x86_64-linux-gnu/libm.so.6
+ fmaxf32@GLIBC_2.27                                /lib/x86_64-linux-gnu/libm.so.6
+ fmaxf32x                                          /lib/x86_64-linux-gnu/libm.so.6
+ fmaxf32x@@GLIBC_2.27                              /lib/x86_64-linux-gnu/libm.so.6
+ fmaxf32x@GLIBC_2.27                               /lib/x86_64-linux-gnu/libm.so.6
+ fmaxf64                                           /lib/x86_64-linux-gnu/libm.so.6
+ fmaxf64@@GLIBC_2.27                               /lib/x86_64-linux-gnu/libm.so.6
+ fmaxf64@GLIBC_2.27                                /lib/x86_64-linux-gnu/libm.so.6
+ fmaxf64x                                          /lib/x86_64-linux-gnu/libm.so.6
+ fmaxf64x@@GLIBC_2.27                              /lib/x86_64-linux-gnu/libm.so.6
+ fmaxf64x@GLIBC_2.27                               /lib/x86_64-linux-gnu/libm.so.6
+ fmaxf@@GLIBC_2.2.5                                /lib/x86_64-linux-gnu/libm.so.6
+ fmaxf@GLIBC_2.2.5                                 /lib/x86_64-linux-gnu/libm.so.6
+ fmaxl                                             /lib/x86_64-linux-gnu/libm.so.6
+ fmaxl@@GLIBC_2.2.5                                /lib/x86_64-linux-gnu/libm.so.6
+ fmaxl@GLIBC_2.2.5                                 /lib/x86_64-linux-gnu/libm.so.6
+ fmaxmag                                           /lib/x86_64-linux-gnu/libm.so.6
+ fmaxmag@@GLIBC_2.25                               /lib/x86_64-linux-gnu/libm.so.6
+ fmaxmag@GLIBC_2.25                                /lib/x86_64-linux-gnu/libm.so.6
+ fmaxmagf                                          /lib/x86_64-linux-gnu/libm.so.6
+ fmaxmagf128                                       /lib/x86_64-linux-gnu/libm.so.6
+ fmaxmagf128@@GLIBC_2.26                           /lib/x86_64-linux-gnu/libm.so.6
+ fmaxmagf128@GLIBC_2.26                            /lib/x86_64-linux-gnu/libm.so.6
+ fmaxmagf32                                        /lib/x86_64-linux-gnu/libm.so.6
+ fmaxmagf32@@GLIBC_2.27                            /lib/x86_64-linux-gnu/libm.so.6
+ fmaxmagf32@GLIBC_2.27                             /lib/x86_64-linux-gnu/libm.so.6
+ fmaxmagf32x                                       /lib/x86_64-linux-gnu/libm.so.6
+ fmaxmagf32x@@GLIBC_2.27                           /lib/x86_64-linux-gnu/libm.so.6
+ fmaxmagf32x@GLIBC_2.27                            /lib/x86_64-linux-gnu/libm.so.6
+ fmaxmagf64                                        /lib/x86_64-linux-gnu/libm.so.6
+ fmaxmagf64@@GLIBC_2.27                            /lib/x86_64-linux-gnu/libm.so.6
+ fmaxmagf64@GLIBC_2.27                             /lib/x86_64-linux-gnu/libm.so.6
+ fmaxmagf64x                                       /lib/x86_64-linux-gnu/libm.so.6
+ fmaxmagf64x@@GLIBC_2.27                           /lib/x86_64-linux-gnu/libm.so.6
+ fmaxmagf64x@GLIBC_2.27                            /lib/x86_64-linux-gnu/libm.so.6
+ fmaxmagf@@GLIBC_2.25                              /lib/x86_64-linux-gnu/libm.so.6
+ fmaxmagf@GLIBC_2.25                               /lib/x86_64-linux-gnu/libm.so.6
+ fmaxmagl                                          /lib/x86_64-linux-gnu/libm.so.6
+ fmaxmagl@@GLIBC_2.25                              /lib/x86_64-linux-gnu/libm.so.6
+ fmaxmagl@GLIBC_2.25                               /lib/x86_64-linux-gnu/libm.so.6
+ fmin                                              /lib/x86_64-linux-gnu/libm.so.6
+ fmin@@GLIBC_2.2.5                                 /lib/x86_64-linux-gnu/libm.so.6
+ fmin@GLIBC_2.2.5                                  /lib/x86_64-linux-gnu/libm.so.6
+ fminf                                             /lib/x86_64-linux-gnu/libm.so.6
+ fminf128                                          /lib/x86_64-linux-gnu/libm.so.6
+ fminf128@@GLIBC_2.26                              /lib/x86_64-linux-gnu/libm.so.6
+ fminf128@GLIBC_2.26                               /lib/x86_64-linux-gnu/libm.so.6
+ fminf32                                           /lib/x86_64-linux-gnu/libm.so.6
+ fminf32@@GLIBC_2.27                               /lib/x86_64-linux-gnu/libm.so.6
+ fminf32@GLIBC_2.27                                /lib/x86_64-linux-gnu/libm.so.6
+ fminf32x                                          /lib/x86_64-linux-gnu/libm.so.6
+ fminf32x@@GLIBC_2.27                              /lib/x86_64-linux-gnu/libm.so.6
+ fminf32x@GLIBC_2.27                               /lib/x86_64-linux-gnu/libm.so.6
+ fminf64                                           /lib/x86_64-linux-gnu/libm.so.6
+ fminf64@@GLIBC_2.27                               /lib/x86_64-linux-gnu/libm.so.6
+ fminf64@GLIBC_2.27                                /lib/x86_64-linux-gnu/libm.so.6
+ fminf64x                                          /lib/x86_64-linux-gnu/libm.so.6
+ fminf64x@@GLIBC_2.27                              /lib/x86_64-linux-gnu/libm.so.6
+ fminf64x@GLIBC_2.27                               /lib/x86_64-linux-gnu/libm.so.6
+ fminf@@GLIBC_2.2.5                                /lib/x86_64-linux-gnu/libm.so.6
+ fminf@GLIBC_2.2.5                                 /lib/x86_64-linux-gnu/libm.so.6
+ fminl                                             /lib/x86_64-linux-gnu/libm.so.6
+ fminl@@GLIBC_2.2.5                                /lib/x86_64-linux-gnu/libm.so.6
+ fminl@GLIBC_2.2.5                                 /lib/x86_64-linux-gnu/libm.so.6
+ fminmag                                           /lib/x86_64-linux-gnu/libm.so.6
+ fminmag@@GLIBC_2.25                               /lib/x86_64-linux-gnu/libm.so.6
+ fminmag@GLIBC_2.25                                /lib/x86_64-linux-gnu/libm.so.6
+ fminmagf                                          /lib/x86_64-linux-gnu/libm.so.6
+ fminmagf128                                       /lib/x86_64-linux-gnu/libm.so.6
+ fminmagf128@@GLIBC_2.26                           /lib/x86_64-linux-gnu/libm.so.6
+ fminmagf128@GLIBC_2.26                            /lib/x86_64-linux-gnu/libm.so.6
+ fminmagf32                                        /lib/x86_64-linux-gnu/libm.so.6
+ fminmagf32@@GLIBC_2.27                            /lib/x86_64-linux-gnu/libm.so.6
+ fminmagf32@GLIBC_2.27                             /lib/x86_64-linux-gnu/libm.so.6
+ fminmagf32x                                       /lib/x86_64-linux-gnu/libm.so.6
+ fminmagf32x@@GLIBC_2.27                           /lib/x86_64-linux-gnu/libm.so.6
+ fminmagf32x@GLIBC_2.27                            /lib/x86_64-linux-gnu/libm.so.6
+ fminmagf64                                        /lib/x86_64-linux-gnu/libm.so.6
+ fminmagf64@@GLIBC_2.27                            /lib/x86_64-linux-gnu/libm.so.6
+ fminmagf64@GLIBC_2.27                             /lib/x86_64-linux-gnu/libm.so.6
+ fminmagf64x                                       /lib/x86_64-linux-gnu/libm.so.6
+ fminmagf64x@@GLIBC_2.27                           /lib/x86_64-linux-gnu/libm.so.6
+ fminmagf64x@GLIBC_2.27                            /lib/x86_64-linux-gnu/libm.so.6
+ fminmagf@@GLIBC_2.25                              /lib/x86_64-linux-gnu/libm.so.6
+ fminmagf@GLIBC_2.25                               /lib/x86_64-linux-gnu/libm.so.6
+ fminmagl                                          /lib/x86_64-linux-gnu/libm.so.6
+ fminmagl@@GLIBC_2.25                              /lib/x86_64-linux-gnu/libm.so.6
+ fminmagl@GLIBC_2.25                               /lib/x86_64-linux-gnu/libm.so.6
+ fmod                                              /lib/x86_64-linux-gnu/libm.so.6
+                                                   build/py/objfloat.o
+ fmod@@GLIBC_2.2.5                                 /lib/x86_64-linux-gnu/libm.so.6
+ fmod@GLIBC_2.2.5                                  /lib/x86_64-linux-gnu/libm.so.6
+ fmodf                                             /lib/x86_64-linux-gnu/libm.so.6
+ fmodf128                                          /lib/x86_64-linux-gnu/libm.so.6
+ fmodf128@@GLIBC_2.26                              /lib/x86_64-linux-gnu/libm.so.6
+ fmodf128@GLIBC_2.26                               /lib/x86_64-linux-gnu/libm.so.6
+ fmodf32                                           /lib/x86_64-linux-gnu/libm.so.6
+ fmodf32@@GLIBC_2.27                               /lib/x86_64-linux-gnu/libm.so.6
+ fmodf32@GLIBC_2.27                                /lib/x86_64-linux-gnu/libm.so.6
+ fmodf32x                                          /lib/x86_64-linux-gnu/libm.so.6
+ fmodf32x@@GLIBC_2.27                              /lib/x86_64-linux-gnu/libm.so.6
+ fmodf32x@GLIBC_2.27                               /lib/x86_64-linux-gnu/libm.so.6
+ fmodf64                                           /lib/x86_64-linux-gnu/libm.so.6
+ fmodf64@@GLIBC_2.27                               /lib/x86_64-linux-gnu/libm.so.6
+ fmodf64@GLIBC_2.27                                /lib/x86_64-linux-gnu/libm.so.6
+ fmodf64x                                          /lib/x86_64-linux-gnu/libm.so.6
+ fmodf64x@@GLIBC_2.27                              /lib/x86_64-linux-gnu/libm.so.6
+ fmodf64x@GLIBC_2.27                               /lib/x86_64-linux-gnu/libm.so.6
+ fmodf@@GLIBC_2.2.5                                /lib/x86_64-linux-gnu/libm.so.6
+ fmodf@GLIBC_2.2.5                                 /lib/x86_64-linux-gnu/libm.so.6
+ fmodl                                             /lib/x86_64-linux-gnu/libm.so.6
+ fmodl@@GLIBC_2.2.5                                /lib/x86_64-linux-gnu/libm.so.6
+ fmodl@GLIBC_2.2.5                                 /lib/x86_64-linux-gnu/libm.so.6
+ fopen64                                           /lib/x86_64-linux-gnu/libc.so.6
+ fopen64@@GLIBC_2.2.5                              /lib/x86_64-linux-gnu/libc.so.6
+ fopen64@GLIBC_2.2.5                               /lib/x86_64-linux-gnu/libc.so.6
+ fork                                              /lib/x86_64-linux-gnu/libc.so.6
+ fork@@GLIBC_2.2.5                                 /lib/x86_64-linux-gnu/libc.so.6
+ fork@GLIBC_2.2.5                                  /lib/x86_64-linux-gnu/libc.so.6
+ fpathconf                                         /lib/x86_64-linux-gnu/libc.so.6
+ fpathconf@@GLIBC_2.2.5                            /lib/x86_64-linux-gnu/libc.so.6
+ fpathconf@GLIBC_2.2.5                             /lib/x86_64-linux-gnu/libc.so.6
+ fputs                                             /lib/x86_64-linux-gnu/libc.so.6
+ fputs@@GLIBC_2.2.5                                /lib/x86_64-linux-gnu/libc.so.6
+ fputs@GLIBC_2.2.5                                 /lib/x86_64-linux-gnu/libc.so.6
+                                                   /lib/x86_64-linux-gnu/libm.so.6
+ fputs_unlocked                                    /lib/x86_64-linux-gnu/libc.so.6
+ fputs_unlocked@@GLIBC_2.2.5                       /lib/x86_64-linux-gnu/libc.so.6
+ fputs_unlocked@GLIBC_2.2.5                        /lib/x86_64-linux-gnu/libc.so.6
+ fread                                             /lib/x86_64-linux-gnu/libc.so.6
+ fread@@GLIBC_2.2.5                                /lib/x86_64-linux-gnu/libc.so.6
+ fread@GLIBC_2.2.5                                 /lib/x86_64-linux-gnu/libc.so.6
+ fread_unlocked                                    /lib/x86_64-linux-gnu/libc.so.6
+ fread_unlocked@@GLIBC_2.2.5                       /lib/x86_64-linux-gnu/libc.so.6
+ fread_unlocked@GLIBC_2.2.5                        /lib/x86_64-linux-gnu/libc.so.6
+ freeifaddrs                                       /lib/x86_64-linux-gnu/libc.so.6
+ freeifaddrs@@GLIBC_2.3                            /lib/x86_64-linux-gnu/libc.so.6
+ freeifaddrs@GLIBC_2.3                             /lib/x86_64-linux-gnu/libc.so.6
+ freelocale                                        /lib/x86_64-linux-gnu/libc.so.6
+ freelocale@@GLIBC_2.3                             /lib/x86_64-linux-gnu/libc.so.6
+ freelocale@GLIBC_2.3                              /lib/x86_64-linux-gnu/libc.so.6
+ frexp                                             /lib/x86_64-linux-gnu/libm.so.6
+ frexp@@GLIBC_2.2.5                                /lib/x86_64-linux-gnu/libm.so.6
+                                                   /lib/x86_64-linux-gnu/libc.so.6
+ frexp@GLIBC_2.2.5                                 /lib/x86_64-linux-gnu/libm.so.6
+ frexpf                                            /lib/x86_64-linux-gnu/libm.so.6
+ frexpf128                                         /lib/x86_64-linux-gnu/libm.so.6
+ frexpf128@@GLIBC_2.26                             /lib/x86_64-linux-gnu/libm.so.6
+ frexpf128@GLIBC_2.26                              /lib/x86_64-linux-gnu/libm.so.6
+ frexpf32                                          /lib/x86_64-linux-gnu/libm.so.6
+ frexpf32@@GLIBC_2.27                              /lib/x86_64-linux-gnu/libm.so.6
+ frexpf32@GLIBC_2.27                               /lib/x86_64-linux-gnu/libm.so.6
+ frexpf32x                                         /lib/x86_64-linux-gnu/libm.so.6
+ frexpf32x@@GLIBC_2.27                             /lib/x86_64-linux-gnu/libm.so.6
+ frexpf32x@GLIBC_2.27                              /lib/x86_64-linux-gnu/libm.so.6
+ frexpf64                                          /lib/x86_64-linux-gnu/libm.so.6
+ frexpf64@@GLIBC_2.27                              /lib/x86_64-linux-gnu/libm.so.6
+ frexpf64@GLIBC_2.27                               /lib/x86_64-linux-gnu/libm.so.6
+ frexpf64x                                         /lib/x86_64-linux-gnu/libm.so.6
+ frexpf64x@@GLIBC_2.27                             /lib/x86_64-linux-gnu/libm.so.6
+ frexpf64x@GLIBC_2.27                              /lib/x86_64-linux-gnu/libm.so.6
+ frexpf@@GLIBC_2.2.5                               /lib/x86_64-linux-gnu/libm.so.6
+                                                   /lib/x86_64-linux-gnu/libc.so.6
+ frexpf@GLIBC_2.2.5                                /lib/x86_64-linux-gnu/libm.so.6
+ frexpl                                            /lib/x86_64-linux-gnu/libm.so.6
+ frexpl@@GLIBC_2.2.5                               /lib/x86_64-linux-gnu/libm.so.6
+                                                   /lib/x86_64-linux-gnu/libc.so.6
+ frexpl@GLIBC_2.2.5                                /lib/x86_64-linux-gnu/libm.so.6
+ fromfp                                            /lib/x86_64-linux-gnu/libm.so.6
+ fromfp@@GLIBC_2.25                                /lib/x86_64-linux-gnu/libm.so.6
+ fromfp@GLIBC_2.25                                 /lib/x86_64-linux-gnu/libm.so.6
+ fromfpf                                           /lib/x86_64-linux-gnu/libm.so.6
+ fromfpf128                                        /lib/x86_64-linux-gnu/libm.so.6
+ fromfpf128@@GLIBC_2.26                            /lib/x86_64-linux-gnu/libm.so.6
+ fromfpf128@GLIBC_2.26                             /lib/x86_64-linux-gnu/libm.so.6
+ fromfpf32                                         /lib/x86_64-linux-gnu/libm.so.6
+ fromfpf32@@GLIBC_2.27                             /lib/x86_64-linux-gnu/libm.so.6
+ fromfpf32@GLIBC_2.27                              /lib/x86_64-linux-gnu/libm.so.6
+ fromfpf32x                                        /lib/x86_64-linux-gnu/libm.so.6
+ fromfpf32x@@GLIBC_2.27                            /lib/x86_64-linux-gnu/libm.so.6
+ fromfpf32x@GLIBC_2.27                             /lib/x86_64-linux-gnu/libm.so.6
+ fromfpf64                                         /lib/x86_64-linux-gnu/libm.so.6
+ fromfpf64@@GLIBC_2.27                             /lib/x86_64-linux-gnu/libm.so.6
+ fromfpf64@GLIBC_2.27                              /lib/x86_64-linux-gnu/libm.so.6
+ fromfpf64x                                        /lib/x86_64-linux-gnu/libm.so.6
+ fromfpf64x@@GLIBC_2.27                            /lib/x86_64-linux-gnu/libm.so.6
+ fromfpf64x@GLIBC_2.27                             /lib/x86_64-linux-gnu/libm.so.6
+ fromfpf@@GLIBC_2.25                               /lib/x86_64-linux-gnu/libm.so.6
+ fromfpf@GLIBC_2.25                                /lib/x86_64-linux-gnu/libm.so.6
+ fromfpl                                           /lib/x86_64-linux-gnu/libm.so.6
+ fromfpl@@GLIBC_2.25                               /lib/x86_64-linux-gnu/libm.so.6
+ fromfpl@GLIBC_2.25                                /lib/x86_64-linux-gnu/libm.so.6
+ fromfpx                                           /lib/x86_64-linux-gnu/libm.so.6
+ fromfpx@@GLIBC_2.25                               /lib/x86_64-linux-gnu/libm.so.6
+ fromfpx@GLIBC_2.25                                /lib/x86_64-linux-gnu/libm.so.6
+ fromfpxf                                          /lib/x86_64-linux-gnu/libm.so.6
+ fromfpxf128                                       /lib/x86_64-linux-gnu/libm.so.6
+ fromfpxf128@@GLIBC_2.26                           /lib/x86_64-linux-gnu/libm.so.6
+ fromfpxf128@GLIBC_2.26                            /lib/x86_64-linux-gnu/libm.so.6
+ fromfpxf32                                        /lib/x86_64-linux-gnu/libm.so.6
+ fromfpxf32@@GLIBC_2.27                            /lib/x86_64-linux-gnu/libm.so.6
+ fromfpxf32@GLIBC_2.27                             /lib/x86_64-linux-gnu/libm.so.6
+ fromfpxf32x                                       /lib/x86_64-linux-gnu/libm.so.6
+ fromfpxf32x@@GLIBC_2.27                           /lib/x86_64-linux-gnu/libm.so.6
+ fromfpxf32x@GLIBC_2.27                            /lib/x86_64-linux-gnu/libm.so.6
+ fromfpxf64                                        /lib/x86_64-linux-gnu/libm.so.6
+ fromfpxf64@@GLIBC_2.27                            /lib/x86_64-linux-gnu/libm.so.6
+ fromfpxf64@GLIBC_2.27                             /lib/x86_64-linux-gnu/libm.so.6
+ fromfpxf64x                                       /lib/x86_64-linux-gnu/libm.so.6
+ fromfpxf64x@@GLIBC_2.27                           /lib/x86_64-linux-gnu/libm.so.6
+ fromfpxf64x@GLIBC_2.27                            /lib/x86_64-linux-gnu/libm.so.6
+ fromfpxf@@GLIBC_2.25                              /lib/x86_64-linux-gnu/libm.so.6
+ fromfpxf@GLIBC_2.25                               /lib/x86_64-linux-gnu/libm.so.6
+ fromfpxl                                          /lib/x86_64-linux-gnu/libm.so.6
+ fromfpxl@@GLIBC_2.25                              /lib/x86_64-linux-gnu/libm.so.6
+ fromfpxl@GLIBC_2.25                               /lib/x86_64-linux-gnu/libm.so.6
+ fseeko64                                          /lib/x86_64-linux-gnu/libc.so.6
+ fseeko64@@GLIBC_2.2.5                             /lib/x86_64-linux-gnu/libc.so.6
+ fseeko64@GLIBC_2.2.5                              /lib/x86_64-linux-gnu/libc.so.6
+ fstatfs                                           /lib/x86_64-linux-gnu/libc.so.6
+ fstatfs64                                         /lib/x86_64-linux-gnu/libc.so.6
+ fstatfs64@@GLIBC_2.2.5                            /lib/x86_64-linux-gnu/libc.so.6
+ fstatfs64@GLIBC_2.2.5                             /lib/x86_64-linux-gnu/libc.so.6
+ fstatfs@@GLIBC_2.2.5                              /lib/x86_64-linux-gnu/libc.so.6
+ fstatfs@GLIBC_2.2.5                               /lib/x86_64-linux-gnu/libc.so.6
+ fstatvfs                                          /lib/x86_64-linux-gnu/libc.so.6
+ fstatvfs64                                        /lib/x86_64-linux-gnu/libc.so.6
+ fstatvfs64@@GLIBC_2.2.5                           /lib/x86_64-linux-gnu/libc.so.6
+ fstatvfs64@GLIBC_2.2.5                            /lib/x86_64-linux-gnu/libc.so.6
+ fstatvfs@@GLIBC_2.2.5                             /lib/x86_64-linux-gnu/libc.so.6
+ fstatvfs@GLIBC_2.2.5                              /lib/x86_64-linux-gnu/libc.so.6
+ ftell                                             /lib/x86_64-linux-gnu/libc.so.6
+ ftell@@GLIBC_2.2.5                                /lib/x86_64-linux-gnu/libc.so.6
+ ftell@GLIBC_2.2.5                                 /lib/x86_64-linux-gnu/libc.so.6
+ ftello                                            /lib/x86_64-linux-gnu/libc.so.6
+ ftello64                                          /lib/x86_64-linux-gnu/libc.so.6
+ ftello64@@GLIBC_2.2.5                             /lib/x86_64-linux-gnu/libc.so.6
+ ftello64@GLIBC_2.2.5                              /lib/x86_64-linux-gnu/libc.so.6
+ ftello@@GLIBC_2.2.5                               /lib/x86_64-linux-gnu/libc.so.6
+ ftello@GLIBC_2.2.5                                /lib/x86_64-linux-gnu/libc.so.6
+ ftruncate                                         /lib/x86_64-linux-gnu/libc.so.6
+ ftruncate64                                       /lib/x86_64-linux-gnu/libc.so.6
+ ftruncate64@@GLIBC_2.2.5                          /lib/x86_64-linux-gnu/libc.so.6
+ ftruncate64@GLIBC_2.2.5                           /lib/x86_64-linux-gnu/libc.so.6
+ ftruncate@@GLIBC_2.2.5                            /lib/x86_64-linux-gnu/libc.so.6
+ ftruncate@GLIBC_2.2.5                             /lib/x86_64-linux-gnu/libc.so.6
+ ftrylockfile                                      /lib/x86_64-linux-gnu/libc.so.6
+ ftrylockfile@@GLIBC_2.2.5                         /lib/x86_64-linux-gnu/libc.so.6
+ ftrylockfile@GLIBC_2.2.5                          /lib/x86_64-linux-gnu/libc.so.6
+ fts64_children                                    /lib/x86_64-linux-gnu/libc.so.6
+ fts64_children@@GLIBC_2.23                        /lib/x86_64-linux-gnu/libc.so.6
+ fts64_children@GLIBC_2.23                         /lib/x86_64-linux-gnu/libc.so.6
+ fts64_close                                       /lib/x86_64-linux-gnu/libc.so.6
+ fts64_close@@GLIBC_2.23                           /lib/x86_64-linux-gnu/libc.so.6
+ fts64_close@GLIBC_2.23                            /lib/x86_64-linux-gnu/libc.so.6
+ fts64_open                                        /lib/x86_64-linux-gnu/libc.so.6
+ fts64_open@@GLIBC_2.23                            /lib/x86_64-linux-gnu/libc.so.6
+ fts64_open@GLIBC_2.23                             /lib/x86_64-linux-gnu/libc.so.6
+ fts64_read                                        /lib/x86_64-linux-gnu/libc.so.6
+ fts64_read@@GLIBC_2.23                            /lib/x86_64-linux-gnu/libc.so.6
+ fts64_read@GLIBC_2.23                             /lib/x86_64-linux-gnu/libc.so.6
+ fts64_set                                         /lib/x86_64-linux-gnu/libc.so.6
+ fts64_set@@GLIBC_2.23                             /lib/x86_64-linux-gnu/libc.so.6
+ fts64_set@GLIBC_2.23                              /lib/x86_64-linux-gnu/libc.so.6
+ ftw64                                             /lib/x86_64-linux-gnu/libc.so.6
+ ftw64@@GLIBC_2.2.5                                /lib/x86_64-linux-gnu/libc.so.6
+ ftw64@GLIBC_2.2.5                                 /lib/x86_64-linux-gnu/libc.so.6
+ funlockfile                                       /lib/x86_64-linux-gnu/libc.so.6
+ funlockfile@@GLIBC_2.2.5                          /lib/x86_64-linux-gnu/libc.so.6
+ funlockfile@GLIBC_2.2.5                           /lib/x86_64-linux-gnu/libc.so.6
+ futimes                                           /lib/x86_64-linux-gnu/libc.so.6
+ futimes@@GLIBC_2.3                                /lib/x86_64-linux-gnu/libc.so.6
+ futimes@GLIBC_2.3                                 /lib/x86_64-linux-gnu/libc.so.6
+ fwprintf                                          /lib/x86_64-linux-gnu/libc.so.6
+ fwprintf@@GLIBC_2.2.5                             /lib/x86_64-linux-gnu/libc.so.6
+ fwprintf@GLIBC_2.2.5                              /lib/x86_64-linux-gnu/libc.so.6
+ fwrite                                            /lib/x86_64-linux-gnu/libc.so.6
+ fwrite@@GLIBC_2.2.5                               /lib/x86_64-linux-gnu/libc.so.6
+ fwrite@GLIBC_2.2.5                                /lib/x86_64-linux-gnu/libc.so.6
+                                                   /lib/x86_64-linux-gnu/libm.so.6
+ gamma                                             /lib/x86_64-linux-gnu/libm.so.6
+ gamma@@GLIBC_2.2.5                                /lib/x86_64-linux-gnu/libm.so.6
+ gamma@GLIBC_2.2.5                                 /lib/x86_64-linux-gnu/libm.so.6
+ gammaf                                            /lib/x86_64-linux-gnu/libm.so.6
+ gammaf@@GLIBC_2.2.5                               /lib/x86_64-linux-gnu/libm.so.6
+ gammaf@GLIBC_2.2.5                                /lib/x86_64-linux-gnu/libm.so.6
+ gammal                                            /lib/x86_64-linux-gnu/libm.so.6
+ gammal@@GLIBC_2.2.5                               /lib/x86_64-linux-gnu/libm.so.6
+ gammal@GLIBC_2.2.5                                /lib/x86_64-linux-gnu/libm.so.6
+ gc_alloc                                          build/py/gc.o
+                                                   build/py/malloc.o
+ gc_collect                                        build/gccollect.o
+                                                   build/py/gc.o
+ gc_collect_end                                    build/py/gc.o
+                                                   build/gccollect.o
+ gc_collect_root                                   build/py/gc.o
+                                                   build/gccollect.o
+ gc_collect_start                                  build/py/gc.o
+                                                   build/gccollect.o
+ gc_dump_alloc_table                               build/py/gc.o
+ gc_dump_info                                      build/py/gc.o
+ gc_free                                           build/py/gc.o
+                                                   build/py/malloc.o
+ gc_info                                           build/py/gc.o
+ gc_init                                           build/py/gc.o
+                                                   build/main.o
+ gc_is_locked                                      build/py/gc.o
+                                                   build/py/runtime.o
+ gc_lock                                           build/py/gc.o
+                                                   build/py/modmicropython.o
+ gc_nbytes                                         build/py/gc.o
+                                                   build/py/qstr.o
+ gc_realloc                                        build/py/gc.o
+                                                   build/py/malloc.o
+ gc_sweep_all                                      build/py/gc.o
+ gc_unlock                                         build/py/gc.o
+                                                   build/py/modmicropython.o
+ get_avphys_pages                                  /lib/x86_64-linux-gnu/libc.so.6
+ get_avphys_pages@@GLIBC_2.2.5                     /lib/x86_64-linux-gnu/libc.so.6
+ get_avphys_pages@GLIBC_2.2.5                      /lib/x86_64-linux-gnu/libc.so.6
+ get_nprocs                                        /lib/x86_64-linux-gnu/libc.so.6
+ get_nprocs@@GLIBC_2.2.5                           /lib/x86_64-linux-gnu/libc.so.6
+ get_nprocs@GLIBC_2.2.5                            /lib/x86_64-linux-gnu/libc.so.6
+ get_nprocs_conf                                   /lib/x86_64-linux-gnu/libc.so.6
+ get_nprocs_conf@@GLIBC_2.2.5                      /lib/x86_64-linux-gnu/libc.so.6
+ get_nprocs_conf@GLIBC_2.2.5                       /lib/x86_64-linux-gnu/libc.so.6
+ get_phys_pages                                    /lib/x86_64-linux-gnu/libc.so.6
+ get_phys_pages@@GLIBC_2.2.5                       /lib/x86_64-linux-gnu/libc.so.6
+ get_phys_pages@GLIBC_2.2.5                        /lib/x86_64-linux-gnu/libc.so.6
+ getauxval                                         /lib/x86_64-linux-gnu/libc.so.6
+ getauxval@@GLIBC_2.16                             /lib/x86_64-linux-gnu/libc.so.6
+ getauxval@GLIBC_2.16                              /lib/x86_64-linux-gnu/libc.so.6
+ getc                                              /lib/x86_64-linux-gnu/libc.so.6
+ getc@@GLIBC_2.2.5                                 /lib/x86_64-linux-gnu/libc.so.6
+ getc@GLIBC_2.2.5                                  /lib/x86_64-linux-gnu/libc.so.6
+ getc_unlocked                                     /lib/x86_64-linux-gnu/libc.so.6
+ getc_unlocked@@GLIBC_2.2.5                        /lib/x86_64-linux-gnu/libc.so.6
+ getc_unlocked@GLIBC_2.2.5                         /lib/x86_64-linux-gnu/libc.so.6
+ getcontext                                        /lib/x86_64-linux-gnu/libc.so.6
+ getcontext@@GLIBC_2.2.5                           /lib/x86_64-linux-gnu/libc.so.6
+ getcontext@GLIBC_2.2.5                            /lib/x86_64-linux-gnu/libc.so.6
+ getcwd                                            /lib/x86_64-linux-gnu/libc.so.6
+ getcwd@@GLIBC_2.2.5                               /lib/x86_64-linux-gnu/libc.so.6
+ getcwd@GLIBC_2.2.5                                /lib/x86_64-linux-gnu/libc.so.6
+ getdate_r                                         /lib/x86_64-linux-gnu/libc.so.6
+ getdate_r@@GLIBC_2.2.5                            /lib/x86_64-linux-gnu/libc.so.6
+ getdate_r@GLIBC_2.2.5                             /lib/x86_64-linux-gnu/libc.so.6
+ getdelim                                          /lib/x86_64-linux-gnu/libc.so.6
+ getdelim@@GLIBC_2.2.5                             /lib/x86_64-linux-gnu/libc.so.6
+ getdelim@GLIBC_2.2.5                              /lib/x86_64-linux-gnu/libc.so.6
+ getdirentries64                                   /lib/x86_64-linux-gnu/libc.so.6
+ getdirentries64@@GLIBC_2.2.5                      /lib/x86_64-linux-gnu/libc.so.6
+ getdirentries64@GLIBC_2.2.5                       /lib/x86_64-linux-gnu/libc.so.6
+ getdtablesize                                     /lib/x86_64-linux-gnu/libc.so.6
+ getdtablesize@@GLIBC_2.2.5                        /lib/x86_64-linux-gnu/libc.so.6
+ getdtablesize@GLIBC_2.2.5                         /lib/x86_64-linux-gnu/libc.so.6
+ getegid                                           /lib/x86_64-linux-gnu/libc.so.6
+ getegid@@GLIBC_2.2.5                              /lib/x86_64-linux-gnu/libc.so.6
+ getegid@GLIBC_2.2.5                               /lib/x86_64-linux-gnu/libc.so.6
+ geteuid                                           /lib/x86_64-linux-gnu/libc.so.6
+ geteuid@@GLIBC_2.2.5                              /lib/x86_64-linux-gnu/libc.so.6
+ geteuid@GLIBC_2.2.5                               /lib/x86_64-linux-gnu/libc.so.6
+ getgid                                            /lib/x86_64-linux-gnu/libc.so.6
+ getgid@@GLIBC_2.2.5                               /lib/x86_64-linux-gnu/libc.so.6
+ getgid@GLIBC_2.2.5                                /lib/x86_64-linux-gnu/libc.so.6
+ getgroups                                         /lib/x86_64-linux-gnu/libc.so.6
+ getgroups@@GLIBC_2.2.5                            /lib/x86_64-linux-gnu/libc.so.6
+ getgroups@GLIBC_2.2.5                             /lib/x86_64-linux-gnu/libc.so.6
+ gethostname                                       /lib/x86_64-linux-gnu/libc.so.6
+ gethostname@@GLIBC_2.2.5                          /lib/x86_64-linux-gnu/libc.so.6
+ gethostname@GLIBC_2.2.5                           /lib/x86_64-linux-gnu/libc.so.6
+ getifaddrs                                        /lib/x86_64-linux-gnu/libc.so.6
+ getifaddrs@@GLIBC_2.3                             /lib/x86_64-linux-gnu/libc.so.6
+ getifaddrs@GLIBC_2.3                              /lib/x86_64-linux-gnu/libc.so.6
+ getitimer                                         /lib/x86_64-linux-gnu/libc.so.6
+ getitimer@@GLIBC_2.2.5                            /lib/x86_64-linux-gnu/libc.so.6
+ getitimer@GLIBC_2.2.5                             /lib/x86_64-linux-gnu/libc.so.6
+ getline                                           /lib/x86_64-linux-gnu/libc.so.6
+ getline@@GLIBC_2.2.5                              /lib/x86_64-linux-gnu/libc.so.6
+ getline@GLIBC_2.2.5                               /lib/x86_64-linux-gnu/libc.so.6
+ getlogin_r                                        /lib/x86_64-linux-gnu/libc.so.6
+ getlogin_r@@GLIBC_2.2.5                           /lib/x86_64-linux-gnu/libc.so.6
+ getlogin_r@GLIBC_2.2.5                            /lib/x86_64-linux-gnu/libc.so.6
+ getmntent_r                                       /lib/x86_64-linux-gnu/libc.so.6
+ getmntent_r@@GLIBC_2.2.5                          /lib/x86_64-linux-gnu/libc.so.6
+ getmntent_r@GLIBC_2.2.5                           /lib/x86_64-linux-gnu/libc.so.6
+ getnetgrent_r                                     /lib/x86_64-linux-gnu/libc.so.6
+ getnetgrent_r@@GLIBC_2.2.5                        /lib/x86_64-linux-gnu/libc.so.6
+ getnetgrent_r@GLIBC_2.2.5                         /lib/x86_64-linux-gnu/libc.so.6
+ getpagesize                                       /lib/x86_64-linux-gnu/libc.so.6
+ getpagesize@@GLIBC_2.2.5                          /lib/x86_64-linux-gnu/libc.so.6
+ getpagesize@GLIBC_2.2.5                           /lib/x86_64-linux-gnu/libc.so.6
+ getpayload                                        /lib/x86_64-linux-gnu/libm.so.6
+ getpayload@@GLIBC_2.25                            /lib/x86_64-linux-gnu/libm.so.6
+ getpayload@GLIBC_2.25                             /lib/x86_64-linux-gnu/libm.so.6
+ getpayloadf                                       /lib/x86_64-linux-gnu/libm.so.6
+ getpayloadf128                                    /lib/x86_64-linux-gnu/libm.so.6
+ getpayloadf128@@GLIBC_2.26                        /lib/x86_64-linux-gnu/libm.so.6
+ getpayloadf128@GLIBC_2.26                         /lib/x86_64-linux-gnu/libm.so.6
+ getpayloadf32                                     /lib/x86_64-linux-gnu/libm.so.6
+ getpayloadf32@@GLIBC_2.27                         /lib/x86_64-linux-gnu/libm.so.6
+ getpayloadf32@GLIBC_2.27                          /lib/x86_64-linux-gnu/libm.so.6
+ getpayloadf32x                                    /lib/x86_64-linux-gnu/libm.so.6
+ getpayloadf32x@@GLIBC_2.27                        /lib/x86_64-linux-gnu/libm.so.6
+ getpayloadf32x@GLIBC_2.27                         /lib/x86_64-linux-gnu/libm.so.6
+ getpayloadf64                                     /lib/x86_64-linux-gnu/libm.so.6
+ getpayloadf64@@GLIBC_2.27                         /lib/x86_64-linux-gnu/libm.so.6
+ getpayloadf64@GLIBC_2.27                          /lib/x86_64-linux-gnu/libm.so.6
+ getpayloadf64x                                    /lib/x86_64-linux-gnu/libm.so.6
+ getpayloadf64x@@GLIBC_2.27                        /lib/x86_64-linux-gnu/libm.so.6
+ getpayloadf64x@GLIBC_2.27                         /lib/x86_64-linux-gnu/libm.so.6
+ getpayloadf@@GLIBC_2.25                           /lib/x86_64-linux-gnu/libm.so.6
+ getpayloadf@GLIBC_2.25                            /lib/x86_64-linux-gnu/libm.so.6
+ getpayloadl                                       /lib/x86_64-linux-gnu/libm.so.6
+ getpayloadl@@GLIBC_2.25                           /lib/x86_64-linux-gnu/libm.so.6
+ getpayloadl@GLIBC_2.25                            /lib/x86_64-linux-gnu/libm.so.6
+ getpeername                                       /lib/x86_64-linux-gnu/libc.so.6
+ getpeername@@GLIBC_2.2.5                          /lib/x86_64-linux-gnu/libc.so.6
+ getpeername@GLIBC_2.2.5                           /lib/x86_64-linux-gnu/libc.so.6
+ getpgid                                           /lib/x86_64-linux-gnu/libc.so.6
+ getpgid@@GLIBC_2.2.5                              /lib/x86_64-linux-gnu/libc.so.6
+ getpgid@GLIBC_2.2.5                               /lib/x86_64-linux-gnu/libc.so.6
+ getpid                                            /lib/x86_64-linux-gnu/libc.so.6
+ getpid@@GLIBC_2.2.5                               /lib/x86_64-linux-gnu/libc.so.6
+ getpid@GLIBC_2.2.5                                /lib/x86_64-linux-gnu/libc.so.6
+ getppid                                           /lib/x86_64-linux-gnu/libc.so.6
+ getppid@@GLIBC_2.2.5                              /lib/x86_64-linux-gnu/libc.so.6
+ getppid@GLIBC_2.2.5                               /lib/x86_64-linux-gnu/libc.so.6
+ getpriority                                       /lib/x86_64-linux-gnu/libc.so.6
+ getpriority@@GLIBC_2.2.5                          /lib/x86_64-linux-gnu/libc.so.6
+ getpriority@GLIBC_2.2.5                           /lib/x86_64-linux-gnu/libc.so.6
+ getpt                                             /lib/x86_64-linux-gnu/libc.so.6
+ getpt@@GLIBC_2.2.5                                /lib/x86_64-linux-gnu/libc.so.6
+ getpt@GLIBC_2.2.5                                 /lib/x86_64-linux-gnu/libc.so.6
+ getpw                                             /lib/x86_64-linux-gnu/libc.so.6
+ getpw@@GLIBC_2.2.5                                /lib/x86_64-linux-gnu/libc.so.6
+ getpw@GLIBC_2.2.5                                 /lib/x86_64-linux-gnu/libc.so.6
+ getrlimit                                         /lib/x86_64-linux-gnu/libc.so.6
+ getrlimit64                                       /lib/x86_64-linux-gnu/libc.so.6
+ getrlimit64@@GLIBC_2.2.5                          /lib/x86_64-linux-gnu/libc.so.6
+ getrlimit64@GLIBC_2.2.5                           /lib/x86_64-linux-gnu/libc.so.6
+ getrlimit@@GLIBC_2.2.5                            /lib/x86_64-linux-gnu/libc.so.6
+ getrlimit@GLIBC_2.2.5                             /lib/x86_64-linux-gnu/libc.so.6
+ getrusage                                         /lib/x86_64-linux-gnu/libc.so.6
+ getrusage@@GLIBC_2.2.5                            /lib/x86_64-linux-gnu/libc.so.6
+ getrusage@GLIBC_2.2.5                             /lib/x86_64-linux-gnu/libc.so.6
+ gets                                              /lib/x86_64-linux-gnu/libc.so.6
+ gets@@GLIBC_2.2.5                                 /lib/x86_64-linux-gnu/libc.so.6
+ gets@GLIBC_2.2.5                                  /lib/x86_64-linux-gnu/libc.so.6
+ getsockname                                       /lib/x86_64-linux-gnu/libc.so.6
+ getsockname@@GLIBC_2.2.5                          /lib/x86_64-linux-gnu/libc.so.6
+ getsockname@GLIBC_2.2.5                           /lib/x86_64-linux-gnu/libc.so.6
+ getsockopt                                        /lib/x86_64-linux-gnu/libc.so.6
+ getsockopt@@GLIBC_2.2.5                           /lib/x86_64-linux-gnu/libc.so.6
+ getsockopt@GLIBC_2.2.5                            /lib/x86_64-linux-gnu/libc.so.6
+ gettext                                           /lib/x86_64-linux-gnu/libc.so.6
+ gettext@@GLIBC_2.2.5                              /lib/x86_64-linux-gnu/libc.so.6
+ gettext@GLIBC_2.2.5                               /lib/x86_64-linux-gnu/libc.so.6
+ gettimeofday                                      /lib/x86_64-linux-gnu/libc.so.6
+ gettimeofday@@GLIBC_2.2.5                         /lib/x86_64-linux-gnu/libc.so.6
+ gettimeofday@GLIBC_2.2.5                          /lib/x86_64-linux-gnu/libc.so.6
+ getttyent                                         /lib/x86_64-linux-gnu/libc.so.6
+ getttyent@@GLIBC_2.2.5                            /lib/x86_64-linux-gnu/libc.so.6
+ getttyent@GLIBC_2.2.5                             /lib/x86_64-linux-gnu/libc.so.6
+ getttynam                                         /lib/x86_64-linux-gnu/libc.so.6
+ getttynam@@GLIBC_2.2.5                            /lib/x86_64-linux-gnu/libc.so.6
+ getttynam@GLIBC_2.2.5                             /lib/x86_64-linux-gnu/libc.so.6
+ getuid                                            /lib/x86_64-linux-gnu/libc.so.6
+ getuid@@GLIBC_2.2.5                               /lib/x86_64-linux-gnu/libc.so.6
+ getuid@GLIBC_2.2.5                                /lib/x86_64-linux-gnu/libc.so.6
+ getutent                                          /lib/x86_64-linux-gnu/libc.so.6
+ getutent@@GLIBC_2.2.5                             /lib/x86_64-linux-gnu/libc.so.6
+ getutent@GLIBC_2.2.5                              /lib/x86_64-linux-gnu/libc.so.6
+ getutent_r                                        /lib/x86_64-linux-gnu/libc.so.6
+ getutent_r@@GLIBC_2.2.5                           /lib/x86_64-linux-gnu/libc.so.6
+ getutent_r@GLIBC_2.2.5                            /lib/x86_64-linux-gnu/libc.so.6
+ getutid                                           /lib/x86_64-linux-gnu/libc.so.6
+ getutid@@GLIBC_2.2.5                              /lib/x86_64-linux-gnu/libc.so.6
+ getutid@GLIBC_2.2.5                               /lib/x86_64-linux-gnu/libc.so.6
+ getutid_r                                         /lib/x86_64-linux-gnu/libc.so.6
+ getutid_r@@GLIBC_2.2.5                            /lib/x86_64-linux-gnu/libc.so.6
+ getutid_r@GLIBC_2.2.5                             /lib/x86_64-linux-gnu/libc.so.6
+ getutline                                         /lib/x86_64-linux-gnu/libc.so.6
+ getutline@@GLIBC_2.2.5                            /lib/x86_64-linux-gnu/libc.so.6
+ getutline@GLIBC_2.2.5                             /lib/x86_64-linux-gnu/libc.so.6
+ getutline_r                                       /lib/x86_64-linux-gnu/libc.so.6
+ getutline_r@@GLIBC_2.2.5                          /lib/x86_64-linux-gnu/libc.so.6
+ getutline_r@GLIBC_2.2.5                           /lib/x86_64-linux-gnu/libc.so.6
+ getwc                                             /lib/x86_64-linux-gnu/libc.so.6
+ getwc@@GLIBC_2.2.5                                /lib/x86_64-linux-gnu/libc.so.6
+ getwc@GLIBC_2.2.5                                 /lib/x86_64-linux-gnu/libc.so.6
+ getwc_unlocked                                    /lib/x86_64-linux-gnu/libc.so.6
+ getwc_unlocked@@GLIBC_2.2.5                       /lib/x86_64-linux-gnu/libc.so.6
+ getwc_unlocked@GLIBC_2.2.5                        /lib/x86_64-linux-gnu/libc.so.6
+ glob_pattern_p                                    /lib/x86_64-linux-gnu/libc.so.6
+ glob_pattern_p@@GLIBC_2.2.5                       /lib/x86_64-linux-gnu/libc.so.6
+ glob_pattern_p@GLIBC_2.2.5                        /lib/x86_64-linux-gnu/libc.so.6
+ globfree64                                        /lib/x86_64-linux-gnu/libc.so.6
+ globfree64@@GLIBC_2.2.5                           /lib/x86_64-linux-gnu/libc.so.6
+ globfree64@GLIBC_2.2.5                            /lib/x86_64-linux-gnu/libc.so.6
+ gmtime_r                                          /lib/x86_64-linux-gnu/libc.so.6
+ gmtime_r@@GLIBC_2.2.5                             /lib/x86_64-linux-gnu/libc.so.6
+ gmtime_r@GLIBC_2.2.5                              /lib/x86_64-linux-gnu/libc.so.6
+ gnu_get_libc_release                              /lib/x86_64-linux-gnu/libc.so.6
+ gnu_get_libc_release@@GLIBC_2.2.5                 /lib/x86_64-linux-gnu/libc.so.6
+ gnu_get_libc_release@GLIBC_2.2.5                  /lib/x86_64-linux-gnu/libc.so.6
+ gnu_get_libc_version                              /lib/x86_64-linux-gnu/libc.so.6
+ gnu_get_libc_version@@GLIBC_2.2.5                 /lib/x86_64-linux-gnu/libc.so.6
+ gnu_get_libc_version@GLIBC_2.2.5                  /lib/x86_64-linux-gnu/libc.so.6
+ group_member                                      /lib/x86_64-linux-gnu/libc.so.6
+ group_member@@GLIBC_2.2.5                         /lib/x86_64-linux-gnu/libc.so.6
+ group_member@GLIBC_2.2.5                          /lib/x86_64-linux-gnu/libc.so.6
+ gsignal                                           /lib/x86_64-linux-gnu/libc.so.6
+ gsignal@@GLIBC_2.2.5                              /lib/x86_64-linux-gnu/libc.so.6
+ gsignal@GLIBC_2.2.5                               /lib/x86_64-linux-gnu/libc.so.6
+ hasmntopt                                         /lib/x86_64-linux-gnu/libc.so.6
+ hasmntopt@@GLIBC_2.2.5                            /lib/x86_64-linux-gnu/libc.so.6
+ hasmntopt@GLIBC_2.2.5                             /lib/x86_64-linux-gnu/libc.so.6
+ hcreate_r                                         /lib/x86_64-linux-gnu/libc.so.6
+ hcreate_r@@GLIBC_2.2.5                            /lib/x86_64-linux-gnu/libc.so.6
+ hcreate_r@GLIBC_2.2.5                             /lib/x86_64-linux-gnu/libc.so.6
+ hdestroy                                          /lib/x86_64-linux-gnu/libc.so.6
+ hdestroy@@GLIBC_2.2.5                             /lib/x86_64-linux-gnu/libc.so.6
+ hdestroy@GLIBC_2.2.5                              /lib/x86_64-linux-gnu/libc.so.6
+ hdestroy_r                                        /lib/x86_64-linux-gnu/libc.so.6
+ hdestroy_r@@GLIBC_2.2.5                           /lib/x86_64-linux-gnu/libc.so.6
+ hdestroy_r@GLIBC_2.2.5                            /lib/x86_64-linux-gnu/libc.so.6
+ heap_size                                         build/main.o
+ hsearch_r                                         /lib/x86_64-linux-gnu/libc.so.6
+ hsearch_r@@GLIBC_2.2.5                            /lib/x86_64-linux-gnu/libc.so.6
+ hsearch_r@GLIBC_2.2.5                             /lib/x86_64-linux-gnu/libc.so.6
+ hypot                                             /lib/x86_64-linux-gnu/libm.so.6
+ hypot@@GLIBC_2.2.5                                /lib/x86_64-linux-gnu/libm.so.6
+ hypot@GLIBC_2.2.5                                 /lib/x86_64-linux-gnu/libm.so.6
+ hypotf                                            /lib/x86_64-linux-gnu/libm.so.6
+ hypotf128                                         /lib/x86_64-linux-gnu/libm.so.6
+ hypotf128@@GLIBC_2.26                             /lib/x86_64-linux-gnu/libm.so.6
+ hypotf128@GLIBC_2.26                              /lib/x86_64-linux-gnu/libm.so.6
+ hypotf32                                          /lib/x86_64-linux-gnu/libm.so.6
+ hypotf32@@GLIBC_2.27                              /lib/x86_64-linux-gnu/libm.so.6
+ hypotf32@GLIBC_2.27                               /lib/x86_64-linux-gnu/libm.so.6
+ hypotf32x                                         /lib/x86_64-linux-gnu/libm.so.6
+ hypotf32x@@GLIBC_2.27                             /lib/x86_64-linux-gnu/libm.so.6
+ hypotf32x@GLIBC_2.27                              /lib/x86_64-linux-gnu/libm.so.6
+ hypotf64                                          /lib/x86_64-linux-gnu/libm.so.6
+ hypotf64@@GLIBC_2.27                              /lib/x86_64-linux-gnu/libm.so.6
+ hypotf64@GLIBC_2.27                               /lib/x86_64-linux-gnu/libm.so.6
+ hypotf64x                                         /lib/x86_64-linux-gnu/libm.so.6
+ hypotf64x@@GLIBC_2.27                             /lib/x86_64-linux-gnu/libm.so.6
+ hypotf64x@GLIBC_2.27                              /lib/x86_64-linux-gnu/libm.so.6
+ hypotf@@GLIBC_2.2.5                               /lib/x86_64-linux-gnu/libm.so.6
+ hypotf@GLIBC_2.2.5                                /lib/x86_64-linux-gnu/libm.so.6
+ hypotl                                            /lib/x86_64-linux-gnu/libm.so.6
+ hypotl@@GLIBC_2.2.5                               /lib/x86_64-linux-gnu/libm.so.6
+ hypotl@GLIBC_2.2.5                                /lib/x86_64-linux-gnu/libm.so.6
+ if_freenameindex                                  /lib/x86_64-linux-gnu/libc.so.6
+ if_freenameindex@@GLIBC_2.2.5                     /lib/x86_64-linux-gnu/libc.so.6
+ if_freenameindex@GLIBC_2.2.5                      /lib/x86_64-linux-gnu/libc.so.6
+ if_indextoname                                    /lib/x86_64-linux-gnu/libc.so.6
+ if_indextoname@@GLIBC_2.2.5                       /lib/x86_64-linux-gnu/libc.so.6
+ if_indextoname@GLIBC_2.2.5                        /lib/x86_64-linux-gnu/libc.so.6
+ if_nameindex                                      /lib/x86_64-linux-gnu/libc.so.6
+ if_nameindex@@GLIBC_2.2.5                         /lib/x86_64-linux-gnu/libc.so.6
+ if_nameindex@GLIBC_2.2.5                          /lib/x86_64-linux-gnu/libc.so.6
+ if_nametoindex                                    /lib/x86_64-linux-gnu/libc.so.6
+ if_nametoindex@@GLIBC_2.2.5                       /lib/x86_64-linux-gnu/libc.so.6
+ if_nametoindex@GLIBC_2.2.5                        /lib/x86_64-linux-gnu/libc.so.6
+ ilogb                                             /lib/x86_64-linux-gnu/libm.so.6
+ ilogb@@GLIBC_2.2.5                                /lib/x86_64-linux-gnu/libm.so.6
+ ilogb@GLIBC_2.2.5                                 /lib/x86_64-linux-gnu/libm.so.6
+ ilogbf                                            /lib/x86_64-linux-gnu/libm.so.6
+ ilogbf128                                         /lib/x86_64-linux-gnu/libm.so.6
+ ilogbf128@@GLIBC_2.26                             /lib/x86_64-linux-gnu/libm.so.6
+ ilogbf128@GLIBC_2.26                              /lib/x86_64-linux-gnu/libm.so.6
+ ilogbf32                                          /lib/x86_64-linux-gnu/libm.so.6
+ ilogbf32@@GLIBC_2.27                              /lib/x86_64-linux-gnu/libm.so.6
+ ilogbf32@GLIBC_2.27                               /lib/x86_64-linux-gnu/libm.so.6
+ ilogbf32x                                         /lib/x86_64-linux-gnu/libm.so.6
+ ilogbf32x@@GLIBC_2.27                             /lib/x86_64-linux-gnu/libm.so.6
+ ilogbf32x@GLIBC_2.27                              /lib/x86_64-linux-gnu/libm.so.6
+ ilogbf64                                          /lib/x86_64-linux-gnu/libm.so.6
+ ilogbf64@@GLIBC_2.27                              /lib/x86_64-linux-gnu/libm.so.6
+ ilogbf64@GLIBC_2.27                               /lib/x86_64-linux-gnu/libm.so.6
+ ilogbf64x                                         /lib/x86_64-linux-gnu/libm.so.6
+ ilogbf64x@@GLIBC_2.27                             /lib/x86_64-linux-gnu/libm.so.6
+ ilogbf64x@GLIBC_2.27                              /lib/x86_64-linux-gnu/libm.so.6
+ ilogbf@@GLIBC_2.2.5                               /lib/x86_64-linux-gnu/libm.so.6
+ ilogbf@GLIBC_2.2.5                                /lib/x86_64-linux-gnu/libm.so.6
+ ilogbl                                            /lib/x86_64-linux-gnu/libm.so.6
+ ilogbl@@GLIBC_2.2.5                               /lib/x86_64-linux-gnu/libm.so.6
+ ilogbl@GLIBC_2.2.5                                /lib/x86_64-linux-gnu/libm.so.6
+ imaxabs                                           /lib/x86_64-linux-gnu/libc.so.6
+ imaxabs@@GLIBC_2.2.5                              /lib/x86_64-linux-gnu/libc.so.6
+ imaxabs@GLIBC_2.2.5                               /lib/x86_64-linux-gnu/libc.so.6
+ imaxdiv                                           /lib/x86_64-linux-gnu/libc.so.6
+ imaxdiv@@GLIBC_2.2.5                              /lib/x86_64-linux-gnu/libc.so.6
+ imaxdiv@GLIBC_2.2.5                               /lib/x86_64-linux-gnu/libc.so.6
+ in6addr_any                                       /lib/x86_64-linux-gnu/libc.so.6
+ in6addr_any@@GLIBC_2.2.5                          /lib/x86_64-linux-gnu/libc.so.6
+ in6addr_any@GLIBC_2.2.5                           /lib/x86_64-linux-gnu/libc.so.6
+ in6addr_loopback                                  /lib/x86_64-linux-gnu/libc.so.6
+ in6addr_loopback@@GLIBC_2.2.5                     /lib/x86_64-linux-gnu/libc.so.6
+ in6addr_loopback@GLIBC_2.2.5                      /lib/x86_64-linux-gnu/libc.so.6
+ index                                             /lib/x86_64-linux-gnu/libc.so.6
+ index@@GLIBC_2.2.5                                /lib/x86_64-linux-gnu/libc.so.6
+ index@GLIBC_2.2.5                                 /lib/x86_64-linux-gnu/libc.so.6
+ inet_addr                                         /lib/x86_64-linux-gnu/libc.so.6
+ inet_addr@@GLIBC_2.2.5                            /lib/x86_64-linux-gnu/libc.so.6
+ inet_addr@GLIBC_2.2.5                             /lib/x86_64-linux-gnu/libc.so.6
+ inet_aton                                         /lib/x86_64-linux-gnu/libc.so.6
+ inet_aton@@GLIBC_2.2.5                            /lib/x86_64-linux-gnu/libc.so.6
+ inet_aton@GLIBC_2.2.5                             /lib/x86_64-linux-gnu/libc.so.6
+ inet_makeaddr                                     /lib/x86_64-linux-gnu/libc.so.6
+ inet_makeaddr@@GLIBC_2.2.5                        /lib/x86_64-linux-gnu/libc.so.6
+ inet_makeaddr@GLIBC_2.2.5                         /lib/x86_64-linux-gnu/libc.so.6
+ inet_pton                                         /lib/x86_64-linux-gnu/libc.so.6
+ inet_pton@@GLIBC_2.2.5                            /lib/x86_64-linux-gnu/libc.so.6
+ inet_pton@GLIBC_2.2.5                             /lib/x86_64-linux-gnu/libc.so.6
+ initstate                                         /lib/x86_64-linux-gnu/libc.so.6
+ initstate@@GLIBC_2.2.5                            /lib/x86_64-linux-gnu/libc.so.6
+ initstate@GLIBC_2.2.5                             /lib/x86_64-linux-gnu/libc.so.6
+ initstate_r                                       /lib/x86_64-linux-gnu/libc.so.6
+ initstate_r@@GLIBC_2.2.5                          /lib/x86_64-linux-gnu/libc.so.6
+ initstate_r@GLIBC_2.2.5                           /lib/x86_64-linux-gnu/libc.so.6
+ ioctl                                             /lib/x86_64-linux-gnu/libc.so.6
+ ioctl@@GLIBC_2.2.5                                /lib/x86_64-linux-gnu/libc.so.6
+ ioctl@GLIBC_2.2.5                                 /lib/x86_64-linux-gnu/libc.so.6
+ isalnum_l                                         /lib/x86_64-linux-gnu/libc.so.6
+ isalnum_l@@GLIBC_2.3                              /lib/x86_64-linux-gnu/libc.so.6
+ isalnum_l@GLIBC_2.3                               /lib/x86_64-linux-gnu/libc.so.6
+ isalpha_l                                         /lib/x86_64-linux-gnu/libc.so.6
+ isalpha_l@@GLIBC_2.3                              /lib/x86_64-linux-gnu/libc.so.6
+ isalpha_l@GLIBC_2.3                               /lib/x86_64-linux-gnu/libc.so.6
+ isatty                                            /lib/x86_64-linux-gnu/libc.so.6
+ isatty@@GLIBC_2.2.5                               /lib/x86_64-linux-gnu/libc.so.6
+ isatty@GLIBC_2.2.5                                /lib/x86_64-linux-gnu/libc.so.6
+ isblank_l                                         /lib/x86_64-linux-gnu/libc.so.6
+ isblank_l@@GLIBC_2.3                              /lib/x86_64-linux-gnu/libc.so.6
+ isblank_l@GLIBC_2.3                               /lib/x86_64-linux-gnu/libc.so.6
+ iscntrl_l                                         /lib/x86_64-linux-gnu/libc.so.6
+ iscntrl_l@@GLIBC_2.3                              /lib/x86_64-linux-gnu/libc.so.6
+ iscntrl_l@GLIBC_2.3                               /lib/x86_64-linux-gnu/libc.so.6
+ isctype                                           /lib/x86_64-linux-gnu/libc.so.6
+ isctype@@GLIBC_2.3                                /lib/x86_64-linux-gnu/libc.so.6
+ isctype@GLIBC_2.3                                 /lib/x86_64-linux-gnu/libc.so.6
+ isdigit_l                                         /lib/x86_64-linux-gnu/libc.so.6
+ isdigit_l@@GLIBC_2.3                              /lib/x86_64-linux-gnu/libc.so.6
+ isdigit_l@GLIBC_2.3                               /lib/x86_64-linux-gnu/libc.so.6
+ isgraph_l                                         /lib/x86_64-linux-gnu/libc.so.6
+ isgraph_l@@GLIBC_2.3                              /lib/x86_64-linux-gnu/libc.so.6
+ isgraph_l@GLIBC_2.3                               /lib/x86_64-linux-gnu/libc.so.6
+ isinf                                             /lib/x86_64-linux-gnu/libc.so.6
+ isinf@@GLIBC_2.2.5                                /lib/x86_64-linux-gnu/libc.so.6
+ isinf@GLIBC_2.2.5                                 /lib/x86_64-linux-gnu/libc.so.6
+ isinff                                            /lib/x86_64-linux-gnu/libc.so.6
+ isinff@@GLIBC_2.2.5                               /lib/x86_64-linux-gnu/libc.so.6
+ isinff@GLIBC_2.2.5                                /lib/x86_64-linux-gnu/libc.so.6
+ isinfl                                            /lib/x86_64-linux-gnu/libc.so.6
+ isinfl@@GLIBC_2.2.5                               /lib/x86_64-linux-gnu/libc.so.6
+ isinfl@GLIBC_2.2.5                                /lib/x86_64-linux-gnu/libc.so.6
+ islower_l                                         /lib/x86_64-linux-gnu/libc.so.6
+ islower_l@@GLIBC_2.3                              /lib/x86_64-linux-gnu/libc.so.6
+ islower_l@GLIBC_2.3                               /lib/x86_64-linux-gnu/libc.so.6
+ isnan                                             /lib/x86_64-linux-gnu/libc.so.6
+ isnan@@GLIBC_2.2.5                                /lib/x86_64-linux-gnu/libc.so.6
+ isnan@GLIBC_2.2.5                                 /lib/x86_64-linux-gnu/libc.so.6
+ isnanf                                            /lib/x86_64-linux-gnu/libc.so.6
+ isnanf@@GLIBC_2.2.5                               /lib/x86_64-linux-gnu/libc.so.6
+ isnanf@GLIBC_2.2.5                                /lib/x86_64-linux-gnu/libc.so.6
+ isnanl                                            /lib/x86_64-linux-gnu/libc.so.6
+ isnanl@@GLIBC_2.2.5                               /lib/x86_64-linux-gnu/libc.so.6
+ isnanl@GLIBC_2.2.5                                /lib/x86_64-linux-gnu/libc.so.6
+ isprint_l                                         /lib/x86_64-linux-gnu/libc.so.6
+ isprint_l@@GLIBC_2.3                              /lib/x86_64-linux-gnu/libc.so.6
+ isprint_l@GLIBC_2.3                               /lib/x86_64-linux-gnu/libc.so.6
+ ispunct_l                                         /lib/x86_64-linux-gnu/libc.so.6
+ ispunct_l@@GLIBC_2.3                              /lib/x86_64-linux-gnu/libc.so.6
+ ispunct_l@GLIBC_2.3                               /lib/x86_64-linux-gnu/libc.so.6
+ isspace_l                                         /lib/x86_64-linux-gnu/libc.so.6
+ isspace_l@@GLIBC_2.3                              /lib/x86_64-linux-gnu/libc.so.6
+ isspace_l@GLIBC_2.3                               /lib/x86_64-linux-gnu/libc.so.6
+ isupper_l                                         /lib/x86_64-linux-gnu/libc.so.6
+ isupper_l@@GLIBC_2.3                              /lib/x86_64-linux-gnu/libc.so.6
+ isupper_l@GLIBC_2.3                               /lib/x86_64-linux-gnu/libc.so.6
+ iswalnum                                          /lib/x86_64-linux-gnu/libc.so.6
+ iswalnum@@GLIBC_2.2.5                             /lib/x86_64-linux-gnu/libc.so.6
+ iswalnum@GLIBC_2.2.5                              /lib/x86_64-linux-gnu/libc.so.6
+ iswalnum_l                                        /lib/x86_64-linux-gnu/libc.so.6
+ iswalnum_l@@GLIBC_2.3                             /lib/x86_64-linux-gnu/libc.so.6
+ iswalnum_l@GLIBC_2.3                              /lib/x86_64-linux-gnu/libc.so.6
+ iswalpha                                          /lib/x86_64-linux-gnu/libc.so.6
+ iswalpha@@GLIBC_2.2.5                             /lib/x86_64-linux-gnu/libc.so.6
+ iswalpha@GLIBC_2.2.5                              /lib/x86_64-linux-gnu/libc.so.6
+ iswalpha_l                                        /lib/x86_64-linux-gnu/libc.so.6
+ iswalpha_l@@GLIBC_2.3                             /lib/x86_64-linux-gnu/libc.so.6
+ iswalpha_l@GLIBC_2.3                              /lib/x86_64-linux-gnu/libc.so.6
+ iswblank                                          /lib/x86_64-linux-gnu/libc.so.6
+ iswblank@@GLIBC_2.2.5                             /lib/x86_64-linux-gnu/libc.so.6
+ iswblank@GLIBC_2.2.5                              /lib/x86_64-linux-gnu/libc.so.6
+ iswblank_l                                        /lib/x86_64-linux-gnu/libc.so.6
+ iswblank_l@@GLIBC_2.3                             /lib/x86_64-linux-gnu/libc.so.6
+ iswblank_l@GLIBC_2.3                              /lib/x86_64-linux-gnu/libc.so.6
+ iswcntrl                                          /lib/x86_64-linux-gnu/libc.so.6
+ iswcntrl@@GLIBC_2.2.5                             /lib/x86_64-linux-gnu/libc.so.6
+ iswcntrl@GLIBC_2.2.5                              /lib/x86_64-linux-gnu/libc.so.6
+ iswcntrl_l                                        /lib/x86_64-linux-gnu/libc.so.6
+ iswcntrl_l@@GLIBC_2.3                             /lib/x86_64-linux-gnu/libc.so.6
+ iswcntrl_l@GLIBC_2.3                              /lib/x86_64-linux-gnu/libc.so.6
+ iswctype                                          /lib/x86_64-linux-gnu/libc.so.6
+ iswctype@@GLIBC_2.2.5                             /lib/x86_64-linux-gnu/libc.so.6
+ iswctype@GLIBC_2.2.5                              /lib/x86_64-linux-gnu/libc.so.6
+ iswctype_l                                        /lib/x86_64-linux-gnu/libc.so.6
+ iswctype_l@@GLIBC_2.3                             /lib/x86_64-linux-gnu/libc.so.6
+ iswctype_l@GLIBC_2.3                              /lib/x86_64-linux-gnu/libc.so.6
+ iswdigit                                          /lib/x86_64-linux-gnu/libc.so.6
+ iswdigit@@GLIBC_2.2.5                             /lib/x86_64-linux-gnu/libc.so.6
+ iswdigit@GLIBC_2.2.5                              /lib/x86_64-linux-gnu/libc.so.6
+ iswdigit_l                                        /lib/x86_64-linux-gnu/libc.so.6
+ iswdigit_l@@GLIBC_2.3                             /lib/x86_64-linux-gnu/libc.so.6
+ iswdigit_l@GLIBC_2.3                              /lib/x86_64-linux-gnu/libc.so.6
+ iswgraph                                          /lib/x86_64-linux-gnu/libc.so.6
+ iswgraph@@GLIBC_2.2.5                             /lib/x86_64-linux-gnu/libc.so.6
+ iswgraph@GLIBC_2.2.5                              /lib/x86_64-linux-gnu/libc.so.6
+ iswgraph_l                                        /lib/x86_64-linux-gnu/libc.so.6
+ iswgraph_l@@GLIBC_2.3                             /lib/x86_64-linux-gnu/libc.so.6
+ iswgraph_l@GLIBC_2.3                              /lib/x86_64-linux-gnu/libc.so.6
+ iswlower                                          /lib/x86_64-linux-gnu/libc.so.6
+ iswlower@@GLIBC_2.2.5                             /lib/x86_64-linux-gnu/libc.so.6
+ iswlower@GLIBC_2.2.5                              /lib/x86_64-linux-gnu/libc.so.6
+ iswlower_l                                        /lib/x86_64-linux-gnu/libc.so.6
+ iswlower_l@@GLIBC_2.3                             /lib/x86_64-linux-gnu/libc.so.6
+ iswlower_l@GLIBC_2.3                              /lib/x86_64-linux-gnu/libc.so.6
+ iswprint                                          /lib/x86_64-linux-gnu/libc.so.6
+ iswprint@@GLIBC_2.2.5                             /lib/x86_64-linux-gnu/libc.so.6
+ iswprint@GLIBC_2.2.5                              /lib/x86_64-linux-gnu/libc.so.6
+ iswprint_l                                        /lib/x86_64-linux-gnu/libc.so.6
+ iswprint_l@@GLIBC_2.3                             /lib/x86_64-linux-gnu/libc.so.6
+ iswprint_l@GLIBC_2.3                              /lib/x86_64-linux-gnu/libc.so.6
+ iswpunct                                          /lib/x86_64-linux-gnu/libc.so.6
+ iswpunct@@GLIBC_2.2.5                             /lib/x86_64-linux-gnu/libc.so.6
+ iswpunct@GLIBC_2.2.5                              /lib/x86_64-linux-gnu/libc.so.6
+ iswpunct_l                                        /lib/x86_64-linux-gnu/libc.so.6
+ iswpunct_l@@GLIBC_2.3                             /lib/x86_64-linux-gnu/libc.so.6
+ iswpunct_l@GLIBC_2.3                              /lib/x86_64-linux-gnu/libc.so.6
+ iswspace                                          /lib/x86_64-linux-gnu/libc.so.6
+ iswspace@@GLIBC_2.2.5                             /lib/x86_64-linux-gnu/libc.so.6
+ iswspace@GLIBC_2.2.5                              /lib/x86_64-linux-gnu/libc.so.6
+ iswspace_l                                        /lib/x86_64-linux-gnu/libc.so.6
+ iswspace_l@@GLIBC_2.3                             /lib/x86_64-linux-gnu/libc.so.6
+ iswspace_l@GLIBC_2.3                              /lib/x86_64-linux-gnu/libc.so.6
+ iswupper                                          /lib/x86_64-linux-gnu/libc.so.6
+ iswupper@@GLIBC_2.2.5                             /lib/x86_64-linux-gnu/libc.so.6
+ iswupper@GLIBC_2.2.5                              /lib/x86_64-linux-gnu/libc.so.6
+ iswupper_l                                        /lib/x86_64-linux-gnu/libc.so.6
+ iswupper_l@@GLIBC_2.3                             /lib/x86_64-linux-gnu/libc.so.6
+ iswupper_l@GLIBC_2.3                              /lib/x86_64-linux-gnu/libc.so.6
+ iswxdigit                                         /lib/x86_64-linux-gnu/libc.so.6
+ iswxdigit@@GLIBC_2.2.5                            /lib/x86_64-linux-gnu/libc.so.6
+ iswxdigit@GLIBC_2.2.5                             /lib/x86_64-linux-gnu/libc.so.6
+ iswxdigit_l                                       /lib/x86_64-linux-gnu/libc.so.6
+ iswxdigit_l@@GLIBC_2.3                            /lib/x86_64-linux-gnu/libc.so.6
+ iswxdigit_l@GLIBC_2.3                             /lib/x86_64-linux-gnu/libc.so.6
+ isxdigit_l                                        /lib/x86_64-linux-gnu/libc.so.6
+ isxdigit_l@@GLIBC_2.3                             /lib/x86_64-linux-gnu/libc.so.6
+ isxdigit_l@GLIBC_2.3                              /lib/x86_64-linux-gnu/libc.so.6
+ j0                                                /lib/x86_64-linux-gnu/libm.so.6
+ j0@@GLIBC_2.2.5                                   /lib/x86_64-linux-gnu/libm.so.6
+ j0@GLIBC_2.2.5                                    /lib/x86_64-linux-gnu/libm.so.6
+ j0f                                               /lib/x86_64-linux-gnu/libm.so.6
+ j0f128                                            /lib/x86_64-linux-gnu/libm.so.6
+ j0f128@@GLIBC_2.26                                /lib/x86_64-linux-gnu/libm.so.6
+ j0f128@GLIBC_2.26                                 /lib/x86_64-linux-gnu/libm.so.6
+ j0f32                                             /lib/x86_64-linux-gnu/libm.so.6
+ j0f32@@GLIBC_2.27                                 /lib/x86_64-linux-gnu/libm.so.6
+ j0f32@GLIBC_2.27                                  /lib/x86_64-linux-gnu/libm.so.6
+ j0f32x                                            /lib/x86_64-linux-gnu/libm.so.6
+ j0f32x@@GLIBC_2.27                                /lib/x86_64-linux-gnu/libm.so.6
+ j0f32x@GLIBC_2.27                                 /lib/x86_64-linux-gnu/libm.so.6
+ j0f64                                             /lib/x86_64-linux-gnu/libm.so.6
+ j0f64@@GLIBC_2.27                                 /lib/x86_64-linux-gnu/libm.so.6
+ j0f64@GLIBC_2.27                                  /lib/x86_64-linux-gnu/libm.so.6
+ j0f64x                                            /lib/x86_64-linux-gnu/libm.so.6
+ j0f64x@@GLIBC_2.27                                /lib/x86_64-linux-gnu/libm.so.6
+ j0f64x@GLIBC_2.27                                 /lib/x86_64-linux-gnu/libm.so.6
+ j0f@@GLIBC_2.2.5                                  /lib/x86_64-linux-gnu/libm.so.6
+ j0f@GLIBC_2.2.5                                   /lib/x86_64-linux-gnu/libm.so.6
+ j0l                                               /lib/x86_64-linux-gnu/libm.so.6
+ j0l@@GLIBC_2.2.5                                  /lib/x86_64-linux-gnu/libm.so.6
+ j0l@GLIBC_2.2.5                                   /lib/x86_64-linux-gnu/libm.so.6
+ j1                                                /lib/x86_64-linux-gnu/libm.so.6
+ j1@@GLIBC_2.2.5                                   /lib/x86_64-linux-gnu/libm.so.6
+ j1@GLIBC_2.2.5                                    /lib/x86_64-linux-gnu/libm.so.6
+ j1f                                               /lib/x86_64-linux-gnu/libm.so.6
+ j1f128                                            /lib/x86_64-linux-gnu/libm.so.6
+ j1f128@@GLIBC_2.26                                /lib/x86_64-linux-gnu/libm.so.6
+ j1f128@GLIBC_2.26                                 /lib/x86_64-linux-gnu/libm.so.6
+ j1f32                                             /lib/x86_64-linux-gnu/libm.so.6
+ j1f32@@GLIBC_2.27                                 /lib/x86_64-linux-gnu/libm.so.6
+ j1f32@GLIBC_2.27                                  /lib/x86_64-linux-gnu/libm.so.6
+ j1f32x                                            /lib/x86_64-linux-gnu/libm.so.6
+ j1f32x@@GLIBC_2.27                                /lib/x86_64-linux-gnu/libm.so.6
+ j1f32x@GLIBC_2.27                                 /lib/x86_64-linux-gnu/libm.so.6
+ j1f64                                             /lib/x86_64-linux-gnu/libm.so.6
+ j1f64@@GLIBC_2.27                                 /lib/x86_64-linux-gnu/libm.so.6
+ j1f64@GLIBC_2.27                                  /lib/x86_64-linux-gnu/libm.so.6
+ j1f64x                                            /lib/x86_64-linux-gnu/libm.so.6
+ j1f64x@@GLIBC_2.27                                /lib/x86_64-linux-gnu/libm.so.6
+ j1f64x@GLIBC_2.27                                 /lib/x86_64-linux-gnu/libm.so.6
+ j1f@@GLIBC_2.2.5                                  /lib/x86_64-linux-gnu/libm.so.6
+ j1f@GLIBC_2.2.5                                   /lib/x86_64-linux-gnu/libm.so.6
+ j1l                                               /lib/x86_64-linux-gnu/libm.so.6
+ j1l@@GLIBC_2.2.5                                  /lib/x86_64-linux-gnu/libm.so.6
+ j1l@GLIBC_2.2.5                                   /lib/x86_64-linux-gnu/libm.so.6
+ jn                                                /lib/x86_64-linux-gnu/libm.so.6
+ jn@@GLIBC_2.2.5                                   /lib/x86_64-linux-gnu/libm.so.6
+ jn@GLIBC_2.2.5                                    /lib/x86_64-linux-gnu/libm.so.6
+ jnf                                               /lib/x86_64-linux-gnu/libm.so.6
+ jnf128                                            /lib/x86_64-linux-gnu/libm.so.6
+ jnf128@@GLIBC_2.26                                /lib/x86_64-linux-gnu/libm.so.6
+ jnf128@GLIBC_2.26                                 /lib/x86_64-linux-gnu/libm.so.6
+ jnf32                                             /lib/x86_64-linux-gnu/libm.so.6
+ jnf32@@GLIBC_2.27                                 /lib/x86_64-linux-gnu/libm.so.6
+ jnf32@GLIBC_2.27                                  /lib/x86_64-linux-gnu/libm.so.6
+ jnf32x                                            /lib/x86_64-linux-gnu/libm.so.6
+ jnf32x@@GLIBC_2.27                                /lib/x86_64-linux-gnu/libm.so.6
+ jnf32x@GLIBC_2.27                                 /lib/x86_64-linux-gnu/libm.so.6
+ jnf64                                             /lib/x86_64-linux-gnu/libm.so.6
+ jnf64@@GLIBC_2.27                                 /lib/x86_64-linux-gnu/libm.so.6
+ jnf64@GLIBC_2.27                                  /lib/x86_64-linux-gnu/libm.so.6
+ jnf64x                                            /lib/x86_64-linux-gnu/libm.so.6
+ jnf64x@@GLIBC_2.27                                /lib/x86_64-linux-gnu/libm.so.6
+ jnf64x@GLIBC_2.27                                 /lib/x86_64-linux-gnu/libm.so.6
+ jnf@@GLIBC_2.2.5                                  /lib/x86_64-linux-gnu/libm.so.6
+ jnf@GLIBC_2.2.5                                   /lib/x86_64-linux-gnu/libm.so.6
+ jnl                                               /lib/x86_64-linux-gnu/libm.so.6
+ jnl@@GLIBC_2.2.5                                  /lib/x86_64-linux-gnu/libm.so.6
+ jnl@GLIBC_2.2.5                                   /lib/x86_64-linux-gnu/libm.so.6
+ jrand48_r                                         /lib/x86_64-linux-gnu/libc.so.6
+ jrand48_r@@GLIBC_2.2.5                            /lib/x86_64-linux-gnu/libc.so.6
+ jrand48_r@GLIBC_2.2.5                             /lib/x86_64-linux-gnu/libc.so.6
+ kill                                              /lib/x86_64-linux-gnu/libc.so.6
+ kill@@GLIBC_2.2.5                                 /lib/x86_64-linux-gnu/libc.so.6
+ kill@GLIBC_2.2.5                                  /lib/x86_64-linux-gnu/libc.so.6
+ lchown                                            /lib/x86_64-linux-gnu/libc.so.6
+ lchown@@GLIBC_2.2.5                               /lib/x86_64-linux-gnu/libc.so.6
+ lchown@GLIBC_2.2.5                                /lib/x86_64-linux-gnu/libc.so.6
+ lckpwdf                                           /lib/x86_64-linux-gnu/libc.so.6
+ lckpwdf@@GLIBC_2.2.5                              /lib/x86_64-linux-gnu/libc.so.6
+ lckpwdf@GLIBC_2.2.5                               /lib/x86_64-linux-gnu/libc.so.6
+ lcong48_r                                         /lib/x86_64-linux-gnu/libc.so.6
+ lcong48_r@@GLIBC_2.2.5                            /lib/x86_64-linux-gnu/libc.so.6
+ lcong48_r@GLIBC_2.2.5                             /lib/x86_64-linux-gnu/libc.so.6
+ ldexp                                             /lib/x86_64-linux-gnu/libm.so.6
+ ldexp@@GLIBC_2.2.5                                /lib/x86_64-linux-gnu/libm.so.6
+                                                   /lib/x86_64-linux-gnu/libc.so.6
+ ldexp@GLIBC_2.2.5                                 /lib/x86_64-linux-gnu/libm.so.6
+ ldexpf                                            /lib/x86_64-linux-gnu/libm.so.6
+ ldexpf128                                         /lib/x86_64-linux-gnu/libm.so.6
+ ldexpf128@@GLIBC_2.26                             /lib/x86_64-linux-gnu/libm.so.6
+ ldexpf128@GLIBC_2.26                              /lib/x86_64-linux-gnu/libm.so.6
+ ldexpf32                                          /lib/x86_64-linux-gnu/libm.so.6
+ ldexpf32@@GLIBC_2.27                              /lib/x86_64-linux-gnu/libm.so.6
+ ldexpf32@GLIBC_2.27                               /lib/x86_64-linux-gnu/libm.so.6
+ ldexpf32x                                         /lib/x86_64-linux-gnu/libm.so.6
+ ldexpf32x@@GLIBC_2.27                             /lib/x86_64-linux-gnu/libm.so.6
+ ldexpf32x@GLIBC_2.27                              /lib/x86_64-linux-gnu/libm.so.6
+ ldexpf64                                          /lib/x86_64-linux-gnu/libm.so.6
+ ldexpf64@@GLIBC_2.27                              /lib/x86_64-linux-gnu/libm.so.6
+ ldexpf64@GLIBC_2.27                               /lib/x86_64-linux-gnu/libm.so.6
+ ldexpf64x                                         /lib/x86_64-linux-gnu/libm.so.6
+ ldexpf64x@@GLIBC_2.27                             /lib/x86_64-linux-gnu/libm.so.6
+ ldexpf64x@GLIBC_2.27                              /lib/x86_64-linux-gnu/libm.so.6
+ ldexpf@@GLIBC_2.2.5                               /lib/x86_64-linux-gnu/libm.so.6
+                                                   /lib/x86_64-linux-gnu/libc.so.6
+ ldexpf@GLIBC_2.2.5                                /lib/x86_64-linux-gnu/libm.so.6
+ ldexpl                                            /lib/x86_64-linux-gnu/libm.so.6
+ ldexpl@@GLIBC_2.2.5                               /lib/x86_64-linux-gnu/libm.so.6
+                                                   /lib/x86_64-linux-gnu/libc.so.6
+ ldexpl@GLIBC_2.2.5                                /lib/x86_64-linux-gnu/libm.so.6
+ lgamma_r                                          /lib/x86_64-linux-gnu/libm.so.6
+ lgamma_r@@GLIBC_2.2.5                             /lib/x86_64-linux-gnu/libm.so.6
+ lgamma_r@GLIBC_2.2.5                              /lib/x86_64-linux-gnu/libm.so.6
+ lgammaf128                                        /lib/x86_64-linux-gnu/libm.so.6
+ lgammaf128@@GLIBC_2.26                            /lib/x86_64-linux-gnu/libm.so.6
+ lgammaf128@GLIBC_2.26                             /lib/x86_64-linux-gnu/libm.so.6
+ lgammaf128_r                                      /lib/x86_64-linux-gnu/libm.so.6
+ lgammaf128_r@@GLIBC_2.26                          /lib/x86_64-linux-gnu/libm.so.6
+ lgammaf128_r@GLIBC_2.26                           /lib/x86_64-linux-gnu/libm.so.6
+ lgammaf32                                         /lib/x86_64-linux-gnu/libm.so.6
+ lgammaf32@@GLIBC_2.27                             /lib/x86_64-linux-gnu/libm.so.6
+ lgammaf32@GLIBC_2.27                              /lib/x86_64-linux-gnu/libm.so.6
+ lgammaf32_r                                       /lib/x86_64-linux-gnu/libm.so.6
+ lgammaf32_r@@GLIBC_2.27                           /lib/x86_64-linux-gnu/libm.so.6
+ lgammaf32_r@GLIBC_2.27                            /lib/x86_64-linux-gnu/libm.so.6
+ lgammaf32x                                        /lib/x86_64-linux-gnu/libm.so.6
+ lgammaf32x@@GLIBC_2.27                            /lib/x86_64-linux-gnu/libm.so.6
+ lgammaf32x@GLIBC_2.27                             /lib/x86_64-linux-gnu/libm.so.6
+ lgammaf32x_r                                      /lib/x86_64-linux-gnu/libm.so.6
+ lgammaf32x_r@@GLIBC_2.27                          /lib/x86_64-linux-gnu/libm.so.6
+ lgammaf32x_r@GLIBC_2.27                           /lib/x86_64-linux-gnu/libm.so.6
+ lgammaf64                                         /lib/x86_64-linux-gnu/libm.so.6
+ lgammaf64@@GLIBC_2.27                             /lib/x86_64-linux-gnu/libm.so.6
+ lgammaf64@GLIBC_2.27                              /lib/x86_64-linux-gnu/libm.so.6
+ lgammaf64_r                                       /lib/x86_64-linux-gnu/libm.so.6
+ lgammaf64_r@@GLIBC_2.27                           /lib/x86_64-linux-gnu/libm.so.6
+ lgammaf64_r@GLIBC_2.27                            /lib/x86_64-linux-gnu/libm.so.6
+ lgammaf64x                                        /lib/x86_64-linux-gnu/libm.so.6
+ lgammaf64x@@GLIBC_2.27                            /lib/x86_64-linux-gnu/libm.so.6
+ lgammaf64x@GLIBC_2.27                             /lib/x86_64-linux-gnu/libm.so.6
+ lgammaf64x_r                                      /lib/x86_64-linux-gnu/libm.so.6
+ lgammaf64x_r@@GLIBC_2.27                          /lib/x86_64-linux-gnu/libm.so.6
+ lgammaf64x_r@GLIBC_2.27                           /lib/x86_64-linux-gnu/libm.so.6
+ lgammaf_r                                         /lib/x86_64-linux-gnu/libm.so.6
+ lgammaf_r@@GLIBC_2.2.5                            /lib/x86_64-linux-gnu/libm.so.6
+ lgammaf_r@GLIBC_2.2.5                             /lib/x86_64-linux-gnu/libm.so.6
+ lgammal_r                                         /lib/x86_64-linux-gnu/libm.so.6
+ lgammal_r@@GLIBC_2.2.5                            /lib/x86_64-linux-gnu/libm.so.6
+ lgammal_r@GLIBC_2.2.5                             /lib/x86_64-linux-gnu/libm.so.6
+ link                                              /lib/x86_64-linux-gnu/libc.so.6
+ link@@GLIBC_2.2.5                                 /lib/x86_64-linux-gnu/libc.so.6
+ link@GLIBC_2.2.5                                  /lib/x86_64-linux-gnu/libc.so.6
+ listen                                            /lib/x86_64-linux-gnu/libc.so.6
+ listen@@GLIBC_2.2.5                               /lib/x86_64-linux-gnu/libc.so.6
+ listen@GLIBC_2.2.5                                /lib/x86_64-linux-gnu/libc.so.6
+ llogb                                             /lib/x86_64-linux-gnu/libm.so.6
+ llogb@@GLIBC_2.25                                 /lib/x86_64-linux-gnu/libm.so.6
+ llogb@GLIBC_2.25                                  /lib/x86_64-linux-gnu/libm.so.6
+ llogbf                                            /lib/x86_64-linux-gnu/libm.so.6
+ llogbf128                                         /lib/x86_64-linux-gnu/libm.so.6
+ llogbf128@@GLIBC_2.26                             /lib/x86_64-linux-gnu/libm.so.6
+ llogbf128@GLIBC_2.26                              /lib/x86_64-linux-gnu/libm.so.6
+ llogbf32                                          /lib/x86_64-linux-gnu/libm.so.6
+ llogbf32@@GLIBC_2.27                              /lib/x86_64-linux-gnu/libm.so.6
+ llogbf32@GLIBC_2.27                               /lib/x86_64-linux-gnu/libm.so.6
+ llogbf32x                                         /lib/x86_64-linux-gnu/libm.so.6
+ llogbf32x@@GLIBC_2.27                             /lib/x86_64-linux-gnu/libm.so.6
+ llogbf32x@GLIBC_2.27                              /lib/x86_64-linux-gnu/libm.so.6
+ llogbf64                                          /lib/x86_64-linux-gnu/libm.so.6
+ llogbf64@@GLIBC_2.27                              /lib/x86_64-linux-gnu/libm.so.6
+ llogbf64@GLIBC_2.27                               /lib/x86_64-linux-gnu/libm.so.6
+ llogbf64x                                         /lib/x86_64-linux-gnu/libm.so.6
+ llogbf64x@@GLIBC_2.27                             /lib/x86_64-linux-gnu/libm.so.6
+ llogbf64x@GLIBC_2.27                              /lib/x86_64-linux-gnu/libm.so.6
+ llogbf@@GLIBC_2.25                                /lib/x86_64-linux-gnu/libm.so.6
+ llogbf@GLIBC_2.25                                 /lib/x86_64-linux-gnu/libm.so.6
+ llogbl                                            /lib/x86_64-linux-gnu/libm.so.6
+ llogbl@@GLIBC_2.25                                /lib/x86_64-linux-gnu/libm.so.6
+ llogbl@GLIBC_2.25                                 /lib/x86_64-linux-gnu/libm.so.6
+ llrint                                            /lib/x86_64-linux-gnu/libm.so.6
+ llrint@@GLIBC_2.2.5                               /lib/x86_64-linux-gnu/libm.so.6
+ llrint@GLIBC_2.2.5                                /lib/x86_64-linux-gnu/libm.so.6
+ llrintf                                           /lib/x86_64-linux-gnu/libm.so.6
+ llrintf128                                        /lib/x86_64-linux-gnu/libm.so.6
+ llrintf128@@GLIBC_2.26                            /lib/x86_64-linux-gnu/libm.so.6
+ llrintf128@GLIBC_2.26                             /lib/x86_64-linux-gnu/libm.so.6
+ llrintf32                                         /lib/x86_64-linux-gnu/libm.so.6
+ llrintf32@@GLIBC_2.27                             /lib/x86_64-linux-gnu/libm.so.6
+ llrintf32@GLIBC_2.27                              /lib/x86_64-linux-gnu/libm.so.6
+ llrintf32x                                        /lib/x86_64-linux-gnu/libm.so.6
+ llrintf32x@@GLIBC_2.27                            /lib/x86_64-linux-gnu/libm.so.6
+ llrintf32x@GLIBC_2.27                             /lib/x86_64-linux-gnu/libm.so.6
+ llrintf64                                         /lib/x86_64-linux-gnu/libm.so.6
+ llrintf64@@GLIBC_2.27                             /lib/x86_64-linux-gnu/libm.so.6
+ llrintf64@GLIBC_2.27                              /lib/x86_64-linux-gnu/libm.so.6
+ llrintf64x                                        /lib/x86_64-linux-gnu/libm.so.6
+ llrintf64x@@GLIBC_2.27                            /lib/x86_64-linux-gnu/libm.so.6
+ llrintf64x@GLIBC_2.27                             /lib/x86_64-linux-gnu/libm.so.6
+ llrintf@@GLIBC_2.2.5                              /lib/x86_64-linux-gnu/libm.so.6
+ llrintf@GLIBC_2.2.5                               /lib/x86_64-linux-gnu/libm.so.6
+ llrintl                                           /lib/x86_64-linux-gnu/libm.so.6
+ llrintl@@GLIBC_2.2.5                              /lib/x86_64-linux-gnu/libm.so.6
+ llrintl@GLIBC_2.2.5                               /lib/x86_64-linux-gnu/libm.so.6
+ llround                                           /lib/x86_64-linux-gnu/libm.so.6
+ llround@@GLIBC_2.2.5                              /lib/x86_64-linux-gnu/libm.so.6
+ llround@GLIBC_2.2.5                               /lib/x86_64-linux-gnu/libm.so.6
+ llroundf                                          /lib/x86_64-linux-gnu/libm.so.6
+ llroundf128                                       /lib/x86_64-linux-gnu/libm.so.6
+ llroundf128@@GLIBC_2.26                           /lib/x86_64-linux-gnu/libm.so.6
+ llroundf128@GLIBC_2.26                            /lib/x86_64-linux-gnu/libm.so.6
+ llroundf32                                        /lib/x86_64-linux-gnu/libm.so.6
+ llroundf32@@GLIBC_2.27                            /lib/x86_64-linux-gnu/libm.so.6
+ llroundf32@GLIBC_2.27                             /lib/x86_64-linux-gnu/libm.so.6
+ llroundf32x                                       /lib/x86_64-linux-gnu/libm.so.6
+ llroundf32x@@GLIBC_2.27                           /lib/x86_64-linux-gnu/libm.so.6
+ llroundf32x@GLIBC_2.27                            /lib/x86_64-linux-gnu/libm.so.6
+ llroundf64                                        /lib/x86_64-linux-gnu/libm.so.6
+ llroundf64@@GLIBC_2.27                            /lib/x86_64-linux-gnu/libm.so.6
+ llroundf64@GLIBC_2.27                             /lib/x86_64-linux-gnu/libm.so.6
+ llroundf64x                                       /lib/x86_64-linux-gnu/libm.so.6
+ llroundf64x@@GLIBC_2.27                           /lib/x86_64-linux-gnu/libm.so.6
+ llroundf64x@GLIBC_2.27                            /lib/x86_64-linux-gnu/libm.so.6
+ llroundf@@GLIBC_2.2.5                             /lib/x86_64-linux-gnu/libm.so.6
+ llroundf@GLIBC_2.2.5                              /lib/x86_64-linux-gnu/libm.so.6
+ llroundl                                          /lib/x86_64-linux-gnu/libm.so.6
+ llroundl@@GLIBC_2.2.5                             /lib/x86_64-linux-gnu/libm.so.6
+ llroundl@GLIBC_2.2.5                              /lib/x86_64-linux-gnu/libm.so.6
+ llseek                                            /lib/x86_64-linux-gnu/libc.so.6
+ llseek@@GLIBC_2.2.5                               /lib/x86_64-linux-gnu/libc.so.6
+ llseek@GLIBC_2.2.5                                /lib/x86_64-linux-gnu/libc.so.6
+ localtime_r                                       /lib/x86_64-linux-gnu/libc.so.6
+ localtime_r@@GLIBC_2.2.5                          /lib/x86_64-linux-gnu/libc.so.6
+ localtime_r@GLIBC_2.2.5                           /lib/x86_64-linux-gnu/libc.so.6
+ lockf64                                           /lib/x86_64-linux-gnu/libc.so.6
+ lockf64@@GLIBC_2.2.5                              /lib/x86_64-linux-gnu/libc.so.6
+ lockf64@GLIBC_2.2.5                               /lib/x86_64-linux-gnu/libc.so.6
+ log                                               /lib/x86_64-linux-gnu/libm.so.6
+                                                   build/py/objcomplex.o
+ log10                                             /lib/x86_64-linux-gnu/libm.so.6
+ log10@@GLIBC_2.2.5                                /lib/x86_64-linux-gnu/libm.so.6
+ log10@GLIBC_2.2.5                                 /lib/x86_64-linux-gnu/libm.so.6
+ log10f                                            /lib/x86_64-linux-gnu/libm.so.6
+ log10f128                                         /lib/x86_64-linux-gnu/libm.so.6
+ log10f128@@GLIBC_2.26                             /lib/x86_64-linux-gnu/libm.so.6
+ log10f128@GLIBC_2.26                              /lib/x86_64-linux-gnu/libm.so.6
+ log10f32                                          /lib/x86_64-linux-gnu/libm.so.6
+ log10f32@@GLIBC_2.27                              /lib/x86_64-linux-gnu/libm.so.6
+ log10f32@GLIBC_2.27                               /lib/x86_64-linux-gnu/libm.so.6
+ log10f32x                                         /lib/x86_64-linux-gnu/libm.so.6
+ log10f32x@@GLIBC_2.27                             /lib/x86_64-linux-gnu/libm.so.6
+ log10f32x@GLIBC_2.27                              /lib/x86_64-linux-gnu/libm.so.6
+ log10f64                                          /lib/x86_64-linux-gnu/libm.so.6
+ log10f64@@GLIBC_2.27                              /lib/x86_64-linux-gnu/libm.so.6
+ log10f64@GLIBC_2.27                               /lib/x86_64-linux-gnu/libm.so.6
+ log10f64x                                         /lib/x86_64-linux-gnu/libm.so.6
+ log10f64x@@GLIBC_2.27                             /lib/x86_64-linux-gnu/libm.so.6
+ log10f64x@GLIBC_2.27                              /lib/x86_64-linux-gnu/libm.so.6
+ log10f@@GLIBC_2.2.5                               /lib/x86_64-linux-gnu/libm.so.6
+ log10f@GLIBC_2.2.5                                /lib/x86_64-linux-gnu/libm.so.6
+ log10l                                            /lib/x86_64-linux-gnu/libm.so.6
+ log10l@@GLIBC_2.2.5                               /lib/x86_64-linux-gnu/libm.so.6
+ log10l@GLIBC_2.2.5                                /lib/x86_64-linux-gnu/libm.so.6
+ log1p                                             /lib/x86_64-linux-gnu/libm.so.6
+ log1p@@GLIBC_2.2.5                                /lib/x86_64-linux-gnu/libm.so.6
+ log1p@GLIBC_2.2.5                                 /lib/x86_64-linux-gnu/libm.so.6
+ log1pf                                            /lib/x86_64-linux-gnu/libm.so.6
+ log1pf128                                         /lib/x86_64-linux-gnu/libm.so.6
+ log1pf128@@GLIBC_2.26                             /lib/x86_64-linux-gnu/libm.so.6
+ log1pf128@GLIBC_2.26                              /lib/x86_64-linux-gnu/libm.so.6
+ log1pf32                                          /lib/x86_64-linux-gnu/libm.so.6
+ log1pf32@@GLIBC_2.27                              /lib/x86_64-linux-gnu/libm.so.6
+ log1pf32@GLIBC_2.27                               /lib/x86_64-linux-gnu/libm.so.6
+ log1pf32x                                         /lib/x86_64-linux-gnu/libm.so.6
+ log1pf32x@@GLIBC_2.27                             /lib/x86_64-linux-gnu/libm.so.6
+ log1pf32x@GLIBC_2.27                              /lib/x86_64-linux-gnu/libm.so.6
+ log1pf64                                          /lib/x86_64-linux-gnu/libm.so.6
+ log1pf64@@GLIBC_2.27                              /lib/x86_64-linux-gnu/libm.so.6
+ log1pf64@GLIBC_2.27                               /lib/x86_64-linux-gnu/libm.so.6
+ log1pf64x                                         /lib/x86_64-linux-gnu/libm.so.6
+ log1pf64x@@GLIBC_2.27                             /lib/x86_64-linux-gnu/libm.so.6
+ log1pf64x@GLIBC_2.27                              /lib/x86_64-linux-gnu/libm.so.6
+ log1pf@@GLIBC_2.2.5                               /lib/x86_64-linux-gnu/libm.so.6
+ log1pf@GLIBC_2.2.5                                /lib/x86_64-linux-gnu/libm.so.6
+ log1pl                                            /lib/x86_64-linux-gnu/libm.so.6
+ log1pl@@GLIBC_2.2.5                               /lib/x86_64-linux-gnu/libm.so.6
+ log1pl@GLIBC_2.2.5                                /lib/x86_64-linux-gnu/libm.so.6
+ log2                                              /lib/x86_64-linux-gnu/libm.so.6
+ log2@@GLIBC_2.2.5                                 /lib/x86_64-linux-gnu/libm.so.6
+ log2@GLIBC_2.2.5                                  /lib/x86_64-linux-gnu/libm.so.6
+ log2f128                                          /lib/x86_64-linux-gnu/libm.so.6
+ log2f128@@GLIBC_2.26                              /lib/x86_64-linux-gnu/libm.so.6
+ log2f128@GLIBC_2.26                               /lib/x86_64-linux-gnu/libm.so.6
+ log2f32                                           /lib/x86_64-linux-gnu/libm.so.6
+ log2f32@@GLIBC_2.27                               /lib/x86_64-linux-gnu/libm.so.6
+ log2f32@GLIBC_2.27                                /lib/x86_64-linux-gnu/libm.so.6
+ log2f32x                                          /lib/x86_64-linux-gnu/libm.so.6
+ log2f32x@@GLIBC_2.27                              /lib/x86_64-linux-gnu/libm.so.6
+ log2f32x@GLIBC_2.27                               /lib/x86_64-linux-gnu/libm.so.6
+ log2f64                                           /lib/x86_64-linux-gnu/libm.so.6
+ log2f64@@GLIBC_2.27                               /lib/x86_64-linux-gnu/libm.so.6
+ log2f64@GLIBC_2.27                                /lib/x86_64-linux-gnu/libm.so.6
+ log2f64x                                          /lib/x86_64-linux-gnu/libm.so.6
+ log2f64x@@GLIBC_2.27                              /lib/x86_64-linux-gnu/libm.so.6
+ log2f64x@GLIBC_2.27                               /lib/x86_64-linux-gnu/libm.so.6
+ log2l                                             /lib/x86_64-linux-gnu/libm.so.6
+ log2l@@GLIBC_2.2.5                                /lib/x86_64-linux-gnu/libm.so.6
+ log2l@GLIBC_2.2.5                                 /lib/x86_64-linux-gnu/libm.so.6
+ log@@GLIBC_2.2.5                                  /lib/x86_64-linux-gnu/libm.so.6
+ log@GLIBC_2.2.5                                   /lib/x86_64-linux-gnu/libm.so.6
+ logb                                              /lib/x86_64-linux-gnu/libm.so.6
+ logb@@GLIBC_2.2.5                                 /lib/x86_64-linux-gnu/libm.so.6
+ logb@GLIBC_2.2.5                                  /lib/x86_64-linux-gnu/libm.so.6
+ logbf                                             /lib/x86_64-linux-gnu/libm.so.6
+ logbf128                                          /lib/x86_64-linux-gnu/libm.so.6
+ logbf128@@GLIBC_2.26                              /lib/x86_64-linux-gnu/libm.so.6
+ logbf128@GLIBC_2.26                               /lib/x86_64-linux-gnu/libm.so.6
+ logbf32                                           /lib/x86_64-linux-gnu/libm.so.6
+ logbf32@@GLIBC_2.27                               /lib/x86_64-linux-gnu/libm.so.6
+ logbf32@GLIBC_2.27                                /lib/x86_64-linux-gnu/libm.so.6
+ logbf32x                                          /lib/x86_64-linux-gnu/libm.so.6
+ logbf32x@@GLIBC_2.27                              /lib/x86_64-linux-gnu/libm.so.6
+ logbf32x@GLIBC_2.27                               /lib/x86_64-linux-gnu/libm.so.6
+ logbf64                                           /lib/x86_64-linux-gnu/libm.so.6
+ logbf64@@GLIBC_2.27                               /lib/x86_64-linux-gnu/libm.so.6
+ logbf64@GLIBC_2.27                                /lib/x86_64-linux-gnu/libm.so.6
+ logbf64x                                          /lib/x86_64-linux-gnu/libm.so.6
+ logbf64x@@GLIBC_2.27                              /lib/x86_64-linux-gnu/libm.so.6
+ logbf64x@GLIBC_2.27                               /lib/x86_64-linux-gnu/libm.so.6
+ logbf@@GLIBC_2.2.5                                /lib/x86_64-linux-gnu/libm.so.6
+ logbf@GLIBC_2.2.5                                 /lib/x86_64-linux-gnu/libm.so.6
+ logbl                                             /lib/x86_64-linux-gnu/libm.so.6
+ logbl@@GLIBC_2.2.5                                /lib/x86_64-linux-gnu/libm.so.6
+ logbl@GLIBC_2.2.5                                 /lib/x86_64-linux-gnu/libm.so.6
+ logf128                                           /lib/x86_64-linux-gnu/libm.so.6
+ logf128@@GLIBC_2.26                               /lib/x86_64-linux-gnu/libm.so.6
+ logf128@GLIBC_2.26                                /lib/x86_64-linux-gnu/libm.so.6
+ logf32                                            /lib/x86_64-linux-gnu/libm.so.6
+ logf32@@GLIBC_2.27                                /lib/x86_64-linux-gnu/libm.so.6
+ logf32@GLIBC_2.27                                 /lib/x86_64-linux-gnu/libm.so.6
+ logf32x                                           /lib/x86_64-linux-gnu/libm.so.6
+ logf32x@@GLIBC_2.27                               /lib/x86_64-linux-gnu/libm.so.6
+ logf32x@GLIBC_2.27                                /lib/x86_64-linux-gnu/libm.so.6
+ logf64                                            /lib/x86_64-linux-gnu/libm.so.6
+ logf64@@GLIBC_2.27                                /lib/x86_64-linux-gnu/libm.so.6
+ logf64@GLIBC_2.27                                 /lib/x86_64-linux-gnu/libm.so.6
+ logf64x                                           /lib/x86_64-linux-gnu/libm.so.6
+ logf64x@@GLIBC_2.27                               /lib/x86_64-linux-gnu/libm.so.6
+ logf64x@GLIBC_2.27                                /lib/x86_64-linux-gnu/libm.so.6
+ logl                                              /lib/x86_64-linux-gnu/libm.so.6
+ logl@@GLIBC_2.2.5                                 /lib/x86_64-linux-gnu/libm.so.6
+ logl@GLIBC_2.2.5                                  /lib/x86_64-linux-gnu/libm.so.6
+ longjmp                                           /lib/x86_64-linux-gnu/libc.so.6
+ longjmp@@GLIBC_2.2.5                              /lib/x86_64-linux-gnu/libc.so.6
+ longjmp@GLIBC_2.2.5                               /lib/x86_64-linux-gnu/libc.so.6
+ lrint                                             /lib/x86_64-linux-gnu/libm.so.6
+ lrint@@GLIBC_2.2.5                                /lib/x86_64-linux-gnu/libm.so.6
+ lrint@GLIBC_2.2.5                                 /lib/x86_64-linux-gnu/libm.so.6
+ lrintf                                            /lib/x86_64-linux-gnu/libm.so.6
+ lrintf128                                         /lib/x86_64-linux-gnu/libm.so.6
+ lrintf128@@GLIBC_2.26                             /lib/x86_64-linux-gnu/libm.so.6
+ lrintf128@GLIBC_2.26                              /lib/x86_64-linux-gnu/libm.so.6
+ lrintf32                                          /lib/x86_64-linux-gnu/libm.so.6
+ lrintf32@@GLIBC_2.27                              /lib/x86_64-linux-gnu/libm.so.6
+ lrintf32@GLIBC_2.27                               /lib/x86_64-linux-gnu/libm.so.6
+ lrintf32x                                         /lib/x86_64-linux-gnu/libm.so.6
+ lrintf32x@@GLIBC_2.27                             /lib/x86_64-linux-gnu/libm.so.6
+ lrintf32x@GLIBC_2.27                              /lib/x86_64-linux-gnu/libm.so.6
+ lrintf64                                          /lib/x86_64-linux-gnu/libm.so.6
+ lrintf64@@GLIBC_2.27                              /lib/x86_64-linux-gnu/libm.so.6
+ lrintf64@GLIBC_2.27                               /lib/x86_64-linux-gnu/libm.so.6
+ lrintf64x                                         /lib/x86_64-linux-gnu/libm.so.6
+ lrintf64x@@GLIBC_2.27                             /lib/x86_64-linux-gnu/libm.so.6
+ lrintf64x@GLIBC_2.27                              /lib/x86_64-linux-gnu/libm.so.6
+ lrintf@@GLIBC_2.2.5                               /lib/x86_64-linux-gnu/libm.so.6
+ lrintf@GLIBC_2.2.5                                /lib/x86_64-linux-gnu/libm.so.6
+ lrintl                                            /lib/x86_64-linux-gnu/libm.so.6
+ lrintl@@GLIBC_2.2.5                               /lib/x86_64-linux-gnu/libm.so.6
+ lrintl@GLIBC_2.2.5                                /lib/x86_64-linux-gnu/libm.so.6
+ lround                                            /lib/x86_64-linux-gnu/libm.so.6
+ lround@@GLIBC_2.2.5                               /lib/x86_64-linux-gnu/libm.so.6
+ lround@GLIBC_2.2.5                                /lib/x86_64-linux-gnu/libm.so.6
+ lroundf                                           /lib/x86_64-linux-gnu/libm.so.6
+ lroundf128                                        /lib/x86_64-linux-gnu/libm.so.6
+ lroundf128@@GLIBC_2.26                            /lib/x86_64-linux-gnu/libm.so.6
+ lroundf128@GLIBC_2.26                             /lib/x86_64-linux-gnu/libm.so.6
+ lroundf32                                         /lib/x86_64-linux-gnu/libm.so.6
+ lroundf32@@GLIBC_2.27                             /lib/x86_64-linux-gnu/libm.so.6
+ lroundf32@GLIBC_2.27                              /lib/x86_64-linux-gnu/libm.so.6
+ lroundf32x                                        /lib/x86_64-linux-gnu/libm.so.6
+ lroundf32x@@GLIBC_2.27                            /lib/x86_64-linux-gnu/libm.so.6
+ lroundf32x@GLIBC_2.27                             /lib/x86_64-linux-gnu/libm.so.6
+ lroundf64                                         /lib/x86_64-linux-gnu/libm.so.6
+ lroundf64@@GLIBC_2.27                             /lib/x86_64-linux-gnu/libm.so.6
+ lroundf64@GLIBC_2.27                              /lib/x86_64-linux-gnu/libm.so.6
+ lroundf64x                                        /lib/x86_64-linux-gnu/libm.so.6
+ lroundf64x@@GLIBC_2.27                            /lib/x86_64-linux-gnu/libm.so.6
+ lroundf64x@GLIBC_2.27                             /lib/x86_64-linux-gnu/libm.so.6
+ lroundf@@GLIBC_2.2.5                              /lib/x86_64-linux-gnu/libm.so.6
+ lroundf@GLIBC_2.2.5                               /lib/x86_64-linux-gnu/libm.so.6
+ lroundl                                           /lib/x86_64-linux-gnu/libm.so.6
+ lroundl@@GLIBC_2.2.5                              /lib/x86_64-linux-gnu/libm.so.6
+ lroundl@GLIBC_2.2.5                               /lib/x86_64-linux-gnu/libm.so.6
+ lseek                                             /lib/x86_64-linux-gnu/libc.so.6
+ lseek64                                           /lib/x86_64-linux-gnu/libc.so.6
+ lseek64@@GLIBC_2.2.5                              /lib/x86_64-linux-gnu/libc.so.6
+ lseek64@GLIBC_2.2.5                               /lib/x86_64-linux-gnu/libc.so.6
+ lseek@@GLIBC_2.2.5                                /lib/x86_64-linux-gnu/libc.so.6
+ lseek@GLIBC_2.2.5                                 /lib/x86_64-linux-gnu/libc.so.6
+ m_free                                            build/py/malloc.o
+                                                   build/py/objtype.o
+                                                   build/py/objtuple.o
+                                                   build/py/objset.o
+                                                   build/py/objmap.o
+                                                   build/py/objint.o
+                                                   build/py/objfun.o
+                                                   build/py/objclosure.o
+                                                   build/py/objboundmeth.o
+                                                   build/py/map.o
+                                                   build/py/runtime.o
+                                                   build/py/emitnxtensawin.o
+                                                   build/py/emitinlinextensa.o
+                                                   build/py/emitnxtensa.o
+                                                   build/py/emitnarm.o
+                                                   build/py/emitinlinethumb.o
+                                                   build/py/emitnthumb.o
+                                                   build/py/emitnx86.o
+                                                   build/py/emitnx64.o
+                                                   build/py/asmbase.o
+                                                   build/py/emitbc.o
+                                                   build/py/scope.o
+                                                   build/py/parse.o
+                                                   build/py/lexer.o
+                                                   build/py/reader.o
+                                                   build/py/mpz.o
+                                                   build/py/mpprint.o
+                                                   build/py/vstr.o
+ m_malloc                                          build/py/malloc.o
+                                                   build/py/objzip.o
+                                                   build/py/objtype.o
+                                                   build/py/objtuple.o
+                                                   build/py/objstr.o
+                                                   build/py/objslice.o
+                                                   build/py/objset.o
+                                                   build/py/objreversed.o
+                                                   build/py/objrange.o
+                                                   build/py/objproperty.o
+                                                   build/py/objobject.o
+                                                   build/py/objmodule.o
+                                                   build/py/objmap.o
+                                                   build/py/objlist.o
+                                                   build/py/objint_mpz.o
+                                                   build/py/objint.o
+                                                   build/py/objgenerator.o
+                                                   build/py/objfun.o
+                                                   build/py/objfloat.o
+                                                   build/py/objfilter.o
+                                                   build/py/objenumerate.o
+                                                   build/py/objdict.o
+                                                   build/py/objcomplex.o
+                                                   build/py/objclosure.o
+                                                   build/py/objcell.o
+                                                   build/py/objboundmeth.o
+                                                   build/py/objarray.o
+                                                   build/py/runtime.o
+                                                   build/py/emitnxtensawin.o
+                                                   build/py/emitinlinextensa.o
+                                                   build/py/emitnxtensa.o
+                                                   build/py/emitnarm.o
+                                                   build/py/emitinlinethumb.o
+                                                   build/py/emitnthumb.o
+                                                   build/py/emitnx86.o
+                                                   build/py/emitnx64.o
+                                                   build/py/asmbase.o
+                                                   build/py/emitbc.o
+                                                   build/py/mpfile.o
+                                                   build/py/scope.o
+                                                   build/py/parse.o
+                                                   build/py/lexer.o
+                                                   build/py/reader.o
+                                                   build/py/mpz.o
+                                                   build/py/vstr.o
+ m_malloc0                                         build/py/malloc.o
+                                                   build/py/objtype.o
+                                                   build/py/map.o
+                                                   build/py/emitglue.o
+                                                   build/py/emitnxtensawin.o
+                                                   build/py/emitnxtensa.o
+                                                   build/py/emitnarm.o
+                                                   build/py/emitnthumb.o
+                                                   build/py/emitnx86.o
+                                                   build/py/emitnx64.o
+                                                   build/py/emitbc.o
+                                                   build/py/scope.o
+ m_malloc_fail                                     build/py/runtime.o
+                                                   build/py/qstr.o
+                                                   build/py/malloc.o
+ m_malloc_maybe                                    build/py/malloc.o
+                                                   build/py/objfun.o
+                                                   build/py/objexcept.o
+                                                   build/py/objboundmeth.o
+                                                   build/py/qstr.o
+ m_realloc                                         build/py/malloc.o
+                                                   build/py/objtuple.o
+                                                   build/py/objstr.o
+                                                   build/py/objlist.o
+                                                   build/py/objarray.o
+                                                   build/py/runtime.o
+                                                   build/py/emitnxtensawin.o
+                                                   build/py/emitnxtensa.o
+                                                   build/py/emitnarm.o
+                                                   build/py/emitnthumb.o
+                                                   build/py/emitnx86.o
+                                                   build/py/emitnx64.o
+                                                   build/py/scope.o
+                                                   build/py/parse.o
+                                                   build/py/lexer.o
+                                                   build/py/mpz.o
+                                                   build/py/vstr.o
+ m_realloc_maybe                                   build/py/malloc.o
+                                                   build/py/objexcept.o
+                                                   build/py/parse.o
+                                                   build/py/qstr.o
+ madvise                                           /lib/x86_64-linux-gnu/libc.so.6
+ madvise@@GLIBC_2.2.5                              /lib/x86_64-linux-gnu/libc.so.6
+ madvise@GLIBC_2.2.5                               /lib/x86_64-linux-gnu/libc.so.6
+ main                                              build/main.o
+                                                   /usr/lib/gcc/x86_64-linux-gnu/7/../../../x86_64-linux-gnu/Scrt1.o
+ main_                                             build/main.o
+ makecontext                                       /lib/x86_64-linux-gnu/libc.so.6
+ makecontext@@GLIBC_2.2.5                          /lib/x86_64-linux-gnu/libc.so.6
+ makecontext@GLIBC_2.2.5                           /lib/x86_64-linux-gnu/libc.so.6
+ mallinfo                                          /lib/x86_64-linux-gnu/libc.so.6
+ mallinfo@@GLIBC_2.2.5                             /lib/x86_64-linux-gnu/libc.so.6
+ mallinfo@GLIBC_2.2.5                              /lib/x86_64-linux-gnu/libc.so.6
+ malloc_info                                       /lib/x86_64-linux-gnu/libc.so.6
+ malloc_info@@GLIBC_2.10                           /lib/x86_64-linux-gnu/libc.so.6
+ malloc_info@GLIBC_2.10                            /lib/x86_64-linux-gnu/libc.so.6
+ malloc_stats                                      /lib/x86_64-linux-gnu/libc.so.6
+ malloc_stats@@GLIBC_2.2.5                         /lib/x86_64-linux-gnu/libc.so.6
+ malloc_stats@GLIBC_2.2.5                          /lib/x86_64-linux-gnu/libc.so.6
+ malloc_trim                                       /lib/x86_64-linux-gnu/libc.so.6
+ malloc_trim@@GLIBC_2.2.5                          /lib/x86_64-linux-gnu/libc.so.6
+ malloc_trim@GLIBC_2.2.5                           /lib/x86_64-linux-gnu/libc.so.6
+ malloc_usable_size                                /lib/x86_64-linux-gnu/libc.so.6
+ malloc_usable_size@@GLIBC_2.2.5                   /lib/x86_64-linux-gnu/libc.so.6
+ malloc_usable_size@GLIBC_2.2.5                    /lib/x86_64-linux-gnu/libc.so.6
+ mallopt                                           /lib/x86_64-linux-gnu/libc.so.6
+ mallopt@@GLIBC_2.2.5                              /lib/x86_64-linux-gnu/libc.so.6
+ mallopt@GLIBC_2.2.5                               /lib/x86_64-linux-gnu/libc.so.6
+ matherr@GLIBC_2.2.5                               /lib/x86_64-linux-gnu/libm.so.6
+ mbrlen                                            /lib/x86_64-linux-gnu/libc.so.6
+ mbrlen@@GLIBC_2.2.5                               /lib/x86_64-linux-gnu/libc.so.6
+ mbrlen@GLIBC_2.2.5                                /lib/x86_64-linux-gnu/libc.so.6
+ mbrtoc32                                          /lib/x86_64-linux-gnu/libc.so.6
+ mbrtoc32@@GLIBC_2.16                              /lib/x86_64-linux-gnu/libc.so.6
+ mbrtoc32@GLIBC_2.16                               /lib/x86_64-linux-gnu/libc.so.6
+ mbrtowc                                           /lib/x86_64-linux-gnu/libc.so.6
+ mbrtowc@@GLIBC_2.2.5                              /lib/x86_64-linux-gnu/libc.so.6
+ mbrtowc@GLIBC_2.2.5                               /lib/x86_64-linux-gnu/libc.so.6
+ mbsinit                                           /lib/x86_64-linux-gnu/libc.so.6
+ mbsinit@@GLIBC_2.2.5                              /lib/x86_64-linux-gnu/libc.so.6
+ mbsinit@GLIBC_2.2.5                               /lib/x86_64-linux-gnu/libc.so.6
+ mbsnrtowcs                                        /lib/x86_64-linux-gnu/libc.so.6
+ mbsnrtowcs@@GLIBC_2.2.5                           /lib/x86_64-linux-gnu/libc.so.6
+ mbsnrtowcs@GLIBC_2.2.5                            /lib/x86_64-linux-gnu/libc.so.6
+ mbsrtowcs                                         /lib/x86_64-linux-gnu/libc.so.6
+ mbsrtowcs@@GLIBC_2.2.5                            /lib/x86_64-linux-gnu/libc.so.6
+ mbsrtowcs@GLIBC_2.2.5                             /lib/x86_64-linux-gnu/libc.so.6
+ mcount                                            /lib/x86_64-linux-gnu/libc.so.6
+ mcount@@GLIBC_2.2.5                               /lib/x86_64-linux-gnu/libc.so.6
+ mcount@GLIBC_2.2.5                                /lib/x86_64-linux-gnu/libc.so.6
+ memalign                                          /lib/x86_64-linux-gnu/libc.so.6
+ memalign@@GLIBC_2.2.5                             /lib/x86_64-linux-gnu/libc.so.6
+ memalign@GLIBC_2.2.5                              /lib/x86_64-linux-gnu/libc.so.6
+ memccpy                                           /lib/x86_64-linux-gnu/libc.so.6
+ memccpy@@GLIBC_2.2.5                              /lib/x86_64-linux-gnu/libc.so.6
+ memccpy@GLIBC_2.2.5                               /lib/x86_64-linux-gnu/libc.so.6
+ memmem                                            /lib/x86_64-linux-gnu/libc.so.6
+ memmem@@GLIBC_2.2.5                               /lib/x86_64-linux-gnu/libc.so.6
+ memmem@GLIBC_2.2.5                                /lib/x86_64-linux-gnu/libc.so.6
+ mempcpy                                           /lib/x86_64-linux-gnu/libc.so.6
+ mempcpy@@GLIBC_2.2.5                              /lib/x86_64-linux-gnu/libc.so.6
+ mempcpy@GLIBC_2.2.5                               /lib/x86_64-linux-gnu/libc.so.6
+ memrchr                                           /lib/x86_64-linux-gnu/libc.so.6
+ memrchr@@GLIBC_2.2.5                              /lib/x86_64-linux-gnu/libc.so.6
+ memrchr@GLIBC_2.2.5                               /lib/x86_64-linux-gnu/libc.so.6
+ mkdir                                             /lib/x86_64-linux-gnu/libc.so.6
+ mkdir@@GLIBC_2.2.5                                /lib/x86_64-linux-gnu/libc.so.6
+ mkdir@GLIBC_2.2.5                                 /lib/x86_64-linux-gnu/libc.so.6
+ mkostemp64                                        /lib/x86_64-linux-gnu/libc.so.6
+ mkostemp64@@GLIBC_2.7                             /lib/x86_64-linux-gnu/libc.so.6
+ mkostemp64@GLIBC_2.7                              /lib/x86_64-linux-gnu/libc.so.6
+ mkostemps64                                       /lib/x86_64-linux-gnu/libc.so.6
+ mkostemps64@@GLIBC_2.11                           /lib/x86_64-linux-gnu/libc.so.6
+ mkostemps64@GLIBC_2.11                            /lib/x86_64-linux-gnu/libc.so.6
+ mkstemp64                                         /lib/x86_64-linux-gnu/libc.so.6
+ mkstemp64@@GLIBC_2.2.5                            /lib/x86_64-linux-gnu/libc.so.6
+ mkstemp64@GLIBC_2.2.5                             /lib/x86_64-linux-gnu/libc.so.6
+ mkstemps64                                        /lib/x86_64-linux-gnu/libc.so.6
+ mkstemps64@@GLIBC_2.11                            /lib/x86_64-linux-gnu/libc.so.6
+ mkstemps64@GLIBC_2.11                             /lib/x86_64-linux-gnu/libc.so.6
+ mktemp                                            /lib/x86_64-linux-gnu/libc.so.6
+ mktemp@@GLIBC_2.2.5                               /lib/x86_64-linux-gnu/libc.so.6
+ mktemp@GLIBC_2.2.5                                /lib/x86_64-linux-gnu/libc.so.6
+ mmap                                              /lib/x86_64-linux-gnu/libc.so.6
+ mmap64                                            /lib/x86_64-linux-gnu/libc.so.6
+ mmap64@@GLIBC_2.2.5                               /lib/x86_64-linux-gnu/libc.so.6
+ mmap64@GLIBC_2.2.5                                /lib/x86_64-linux-gnu/libc.so.6
+ mmap@@GLIBC_2.2.5                                 /lib/x86_64-linux-gnu/libc.so.6
+ mmap@GLIBC_2.2.5                                  /lib/x86_64-linux-gnu/libc.so.6
+ modf                                              /lib/x86_64-linux-gnu/libm.so.6
+ modf@@GLIBC_2.2.5                                 /lib/x86_64-linux-gnu/libm.so.6
+                                                   /lib/x86_64-linux-gnu/libc.so.6
+ modf@GLIBC_2.2.5                                  /lib/x86_64-linux-gnu/libm.so.6
+ modff                                             /lib/x86_64-linux-gnu/libm.so.6
+ modff128                                          /lib/x86_64-linux-gnu/libm.so.6
+ modff128@@GLIBC_2.26                              /lib/x86_64-linux-gnu/libm.so.6
+ modff128@GLIBC_2.26                               /lib/x86_64-linux-gnu/libm.so.6
+ modff32                                           /lib/x86_64-linux-gnu/libm.so.6
+ modff32@@GLIBC_2.27                               /lib/x86_64-linux-gnu/libm.so.6
+ modff32@GLIBC_2.27                                /lib/x86_64-linux-gnu/libm.so.6
+ modff32x                                          /lib/x86_64-linux-gnu/libm.so.6
+ modff32x@@GLIBC_2.27                              /lib/x86_64-linux-gnu/libm.so.6
+ modff32x@GLIBC_2.27                               /lib/x86_64-linux-gnu/libm.so.6
+ modff64                                           /lib/x86_64-linux-gnu/libm.so.6
+ modff64@@GLIBC_2.27                               /lib/x86_64-linux-gnu/libm.so.6
+ modff64@GLIBC_2.27                                /lib/x86_64-linux-gnu/libm.so.6
+ modff64x                                          /lib/x86_64-linux-gnu/libm.so.6
+ modff64x@@GLIBC_2.27                              /lib/x86_64-linux-gnu/libm.so.6
+ modff64x@GLIBC_2.27                               /lib/x86_64-linux-gnu/libm.so.6
+ modff@@GLIBC_2.2.5                                /lib/x86_64-linux-gnu/libm.so.6
+                                                   /lib/x86_64-linux-gnu/libc.so.6
+ modff@GLIBC_2.2.5                                 /lib/x86_64-linux-gnu/libm.so.6
+ modfl                                             /lib/x86_64-linux-gnu/libm.so.6
+ modfl@@GLIBC_2.2.5                                /lib/x86_64-linux-gnu/libm.so.6
+                                                   /lib/x86_64-linux-gnu/libc.so.6
+ modfl@GLIBC_2.2.5                                 /lib/x86_64-linux-gnu/libm.so.6
+ modify_ldt                                        /lib/x86_64-linux-gnu/libc.so.6
+ modify_ldt@@GLIBC_2.2.5                           /lib/x86_64-linux-gnu/libc.so.6
+ modify_ldt@GLIBC_2.2.5                            /lib/x86_64-linux-gnu/libc.so.6
+ moncontrol                                        /lib/x86_64-linux-gnu/libc.so.6
+ moncontrol@@GLIBC_2.2.5                           /lib/x86_64-linux-gnu/libc.so.6
+ moncontrol@GLIBC_2.2.5                            /lib/x86_64-linux-gnu/libc.so.6
+ monstartup                                        /lib/x86_64-linux-gnu/libc.so.6
+ monstartup@@GLIBC_2.2.5                           /lib/x86_64-linux-gnu/libc.so.6
+ monstartup@GLIBC_2.2.5                            /lib/x86_64-linux-gnu/libc.so.6
+ mount                                             /lib/x86_64-linux-gnu/libc.so.6
+ mount@@GLIBC_2.2.5                                /lib/x86_64-linux-gnu/libc.so.6
+ mount@GLIBC_2.2.5                                 /lib/x86_64-linux-gnu/libc.so.6
+ mp_arg_check_num_sig                              build/py/argcheck.o
+                                                   build/py/objzip.o
+                                                   build/py/objtype.o
+                                                   build/py/objtuple.o
+                                                   build/py/objstr.o
+                                                   build/py/objset.o
+                                                   build/py/objreversed.o
+                                                   build/py/objrange.o
+                                                   build/py/objobject.o
+                                                   build/py/objmap.o
+                                                   build/py/objlist.o
+                                                   build/py/objint.o
+                                                   build/py/objfun.o
+                                                   build/py/objfloat.o
+                                                   build/py/objfilter.o
+                                                   build/py/objexcept.o
+                                                   build/py/objdict.o
+                                                   build/py/objcomplex.o
+                                                   build/py/objbool.o
+                                                   build/py/objarray.o
+ mp_arg_error_terse_mismatch                       build/py/argcheck.o
+ mp_arg_error_unimpl_kw                            build/py/argcheck.o
+                                                   build/py/objstr.o
+ mp_arg_parse_all                                  build/py/argcheck.o
+                                                   build/py/modbuiltins.o
+                                                   build/py/objlist.o
+ mp_arg_parse_all_kw_array                         build/py/argcheck.o
+                                                   build/py/objproperty.o
+                                                   build/py/objenumerate.o
+ mp_asm_base_align                                 build/py/asmbase.o
+                                                   build/py/compile.o
+ mp_asm_base_data                                  build/py/asmbase.o
+                                                   build/py/emitnxtensawin.o
+                                                   build/py/emitnxtensa.o
+                                                   build/py/emitnarm.o
+                                                   build/py/emitnthumb.o
+                                                   build/py/emitnx86.o
+                                                   build/py/emitnx64.o
+                                                   build/py/compile.o
+ mp_asm_base_deinit                                build/py/asmbase.o
+                                                   build/py/emitnxtensawin.o
+                                                   build/py/emitinlinextensa.o
+                                                   build/py/emitnxtensa.o
+                                                   build/py/emitnarm.o
+                                                   build/py/emitinlinethumb.o
+                                                   build/py/emitnthumb.o
+                                                   build/py/emitnx86.o
+                                                   build/py/emitnx64.o
+ mp_asm_base_get_cur_to_write_bytes                build/py/asmbase.o
+                                                   build/py/asmxtensa.o
+                                                   build/py/asmarm.o
+                                                   build/py/asmthumb.o
+                                                   build/py/asmx86.o
+                                                   build/py/asmx64.o
+ mp_asm_base_init                                  build/py/asmbase.o
+                                                   build/py/emitnxtensawin.o
+                                                   build/py/emitinlinextensa.o
+                                                   build/py/emitnxtensa.o
+                                                   build/py/emitnarm.o
+                                                   build/py/emitinlinethumb.o
+                                                   build/py/emitnthumb.o
+                                                   build/py/emitnx86.o
+                                                   build/py/emitnx64.o
+ mp_asm_base_label_assign                          build/py/asmbase.o
+                                                   build/py/emitnxtensawin.o
+                                                   build/py/emitinlinextensa.o
+                                                   build/py/emitnxtensa.o
+                                                   build/py/emitnarm.o
+                                                   build/py/emitinlinethumb.o
+                                                   build/py/emitnthumb.o
+                                                   build/py/emitnx86.o
+                                                   build/py/emitnx64.o
+ mp_asm_base_start_pass                            build/py/asmbase.o
+                                                   build/py/emitnxtensawin.o
+                                                   build/py/emitinlinextensa.o
+                                                   build/py/emitnxtensa.o
+                                                   build/py/emitnarm.o
+                                                   build/py/emitinlinethumb.o
+                                                   build/py/emitnthumb.o
+                                                   build/py/emitnx86.o
+                                                   build/py/emitnx64.o
+ mp_binary_get_int                                 build/py/binary.o
+ mp_binary_get_size                                build/py/binary.o
+                                                   build/py/modstruct.o
+                                                   build/py/objarray.o
+ mp_binary_get_val                                 build/py/binary.o
+                                                   build/py/modstruct.o
+ mp_binary_get_val_array                           build/py/binary.o
+                                                   build/py/objarray.o
+ mp_binary_op                                      build/py/runtime.o
+                                                   build/py/vm.o
+                                                   build/py/modbuiltins.o
+                                                   build/py/sequence.o
+                                                   build/py/objtype.o
+                                                   build/py/objlist.o
+                                                   build/py/objint.o
+                                                   build/py/objbool.o
+                                                   build/py/parse.o
+ mp_binary_op_method_name                          build/py/objtype.o
+                                                   build/py/runtime.o
+                                                   build/py/emitnxtensawin.o
+                                                   build/py/emitnxtensa.o
+                                                   build/py/emitnarm.o
+                                                   build/py/emitnthumb.o
+                                                   build/py/emitnx86.o
+                                                   build/py/emitnx64.o
+ mp_binary_set_int                                 build/py/binary.o
+                                                   build/py/objint.o
+ mp_binary_set_val                                 build/py/binary.o
+                                                   build/py/modstruct.o
+ mp_binary_set_val_array                           build/py/binary.o
+                                                   build/py/objarray.o
+ mp_binary_set_val_array_from_int                  build/py/binary.o
+ mp_builtin___build_class___obj                    build/py/modbuiltins.o
+                                                   build/py/runtime.o
+ mp_builtin___import__                             build/py/builtinimport.o
+                                                   build/py/runtime.o
+ mp_builtin___import___obj                         build/py/builtinimport.o
+                                                   build/py/modbuiltins.o
+ mp_builtin___repl_print___obj                     build/py/modbuiltins.o
+ mp_builtin_abs_obj                                build/py/modbuiltins.o
+ mp_builtin_all_obj                                build/py/modbuiltins.o
+ mp_builtin_any_obj                                build/py/modbuiltins.o
+ mp_builtin_bin_obj                                build/py/modbuiltins.o
+ mp_builtin_callable_obj                           build/py/modbuiltins.o
+ mp_builtin_chr_obj                                build/py/modbuiltins.o
+ mp_builtin_delattr_obj                            build/py/modbuiltins.o
+ mp_builtin_dir_obj                                build/py/modbuiltins.o
+ mp_builtin_divmod_obj                             build/py/modbuiltins.o
+ mp_builtin_eval_obj                               build/py/builtinevex.o
+                                                   build/py/modbuiltins.o
+ mp_builtin_exec_obj                               build/py/builtinevex.o
+                                                   build/py/modbuiltins.o
+ mp_builtin_getattr_obj                            build/py/modbuiltins.o
+ mp_builtin_globals_obj                            build/py/modbuiltins.o
+ mp_builtin_hasattr_obj                            build/py/modbuiltins.o
+ mp_builtin_hash_obj                               build/py/modbuiltins.o
+ mp_builtin_hex_obj                                build/py/modbuiltins.o
+ mp_builtin_id_obj                                 build/py/modbuiltins.o
+ mp_builtin_isinstance_obj                         build/py/objtype.o
+                                                   build/py/modbuiltins.o
+ mp_builtin_issubclass_obj                         build/py/objtype.o
+                                                   build/py/modbuiltins.o
+ mp_builtin_iter_obj                               build/py/modbuiltins.o
+ mp_builtin_len_obj                                build/py/modbuiltins.o
+ mp_builtin_locals_obj                             build/py/modbuiltins.o
+ mp_builtin_max_obj                                build/py/modbuiltins.o
+ mp_builtin_min_obj                                build/py/modbuiltins.o
+ mp_builtin_module_map                             build/py/objmodule.o
+ mp_builtin_next_obj                               build/py/modbuiltins.o
+                                                   build/py/runtime.o
+ mp_builtin_oct_obj                                build/py/modbuiltins.o
+ mp_builtin_open                                   build/py/mpfile.o
+ mp_builtin_ord_obj                                build/py/modbuiltins.o
+ mp_builtin_pow_obj                                build/py/modbuiltins.o
+ mp_builtin_print_obj                              build/py/modbuiltins.o
+ mp_builtin_repr_obj                               build/py/modbuiltins.o
+ mp_builtin_round_obj                              build/py/modbuiltins.o
+ mp_builtin_setattr_obj                            build/py/modbuiltins.o
+ mp_builtin_sorted_obj                             build/py/modbuiltins.o
+ mp_builtin_sum_obj                                build/py/modbuiltins.o
+ mp_call_function_0                                build/py/runtime.o
+                                                   build/py/modbuiltins.o
+                                                   build/py/mpfile.o
+ mp_call_function_1                                build/py/runtime.o
+                                                   build/py/modbuiltins.o
+                                                   build/py/objtype.o
+                                                   build/py/objlist.o
+                                                   build/py/runtime_utils.o
+                                                   build/py/mpfile.o
+ mp_call_function_1_protected                      build/py/runtime_utils.o
+ mp_call_function_2                                build/py/runtime.o
+                                                   build/py/runtime_utils.o
+                                                   build/py/mpfile.o
+ mp_call_function_2_protected                      build/py/runtime_utils.o
+ mp_call_function_n_kw                             build/py/runtime.o
+                                                   build/py/vm.o
+                                                   build/py/modbuiltins.o
+                                                   build/py/objtype.o
+                                                   build/py/objmap.o
+                                                   build/py/objfilter.o
+                                                   build/py/objclosure.o
+                                                   build/py/objboundmeth.o
+ mp_call_method_n_kw                               build/py/runtime.o
+                                                   build/py/vm.o
+                                                   build/py/objtype.o
+                                                   build/py/objreversed.o
+                                                   build/py/objgetitemiter.o
+ mp_call_method_n_kw_var                           build/py/runtime.o
+                                                   build/py/vm.o
+ mp_call_method_self_n_kw                          build/py/objboundmeth.o
+                                                   build/py/objtype.o
+ mp_close                                          build/py/mpfile.o
+ mp_compile                                        build/py/compile.o
+                                                   build/py/runtime.o
+ mp_compile_to_raw_code                            build/py/compile.o
+                                                   build/main.o
+ mp_const_GeneratorExit_obj                        build/py/objgenerator.o
+                                                   build/py/vm.o
+ mp_const_ellipsis_obj                             build/py/objsingleton.o
+                                                   build/py/modbuiltins.o
+                                                   build/py/persistentcode.o
+                                                   build/py/emitnxtensawin.o
+                                                   build/py/emitnxtensa.o
+                                                   build/py/emitnarm.o
+                                                   build/py/emitnthumb.o
+                                                   build/py/emitnx86.o
+                                                   build/py/emitnx64.o
+                                                   build/py/emitbc.o
+ mp_const_empty_bytes_obj                          build/py/objstr.o
+ mp_const_empty_map                                build/py/map.o
+                                                   build/py/mpfile.o
+ mp_const_empty_tuple_obj                          build/py/objtuple.o
+                                                   build/py/bc.o
+                                                   build/py/objtype.o
+                                                   build/py/objgenerator.o
+                                                   build/py/objexcept.o
+ mp_const_false_obj                                build/py/objbool.o
+                                                   build/py/vm.o
+                                                   build/py/modbuiltins.o
+                                                   build/py/builtinimport.o
+                                                   build/py/objtype.o
+                                                   build/py/objtuple.o
+                                                   build/py/objstrunicode.o
+                                                   build/py/objstr.o
+                                                   build/py/objset.o
+                                                   build/py/objrange.o
+                                                   build/py/objlist.o
+                                                   build/py/objint_mpz.o
+                                                   build/py/objint.o
+                                                   build/py/objfun.o
+                                                   build/py/objfloat.o
+                                                   build/py/objdict.o
+                                                   build/py/objcomplex.o
+                                                   build/py/objarray.o
+                                                   build/py/obj.o
+                                                   build/py/nativeglue.o
+                                                   build/py/runtime.o
+ mp_const_float_e_obj                              build/py/objfloat.o
+ mp_const_float_pi_obj                             build/py/objfloat.o
+ mp_const_none_obj                                 build/py/objnone.o
+                                                   build/py/vm.o
+                                                   build/py/modstruct.o
+                                                   build/py/modmicropython.o
+                                                   build/py/modbuiltins.o
+                                                   build/py/builtinevex.o
+                                                   build/py/builtinimport.o
+                                                   build/py/stream.o
+                                                   build/py/sequence.o
+                                                   build/py/objtype.o
+                                                   build/py/objstrunicode.o
+                                                   build/py/objstr.o
+                                                   build/py/objset.o
+                                                   build/py/objproperty.o
+                                                   build/py/objobject.o
+                                                   build/py/objlist.o
+                                                   build/py/objgenerator.o
+                                                   build/py/objfun.o
+                                                   build/py/objfilter.o
+                                                   build/py/objexcept.o
+                                                   build/py/objdict.o
+                                                   build/py/objarray.o
+                                                   build/py/obj.o
+                                                   build/py/runtime.o
+                                                   build/py/mpfile.o
+                                                   build/py/compile.o
+ mp_const_true_obj                                 build/py/objbool.o
+                                                   build/py/vm.o
+                                                   build/py/modbuiltins.o
+                                                   build/py/sequence.o
+                                                   build/py/objtype.o
+                                                   build/py/objtuple.o
+                                                   build/py/objstrunicode.o
+                                                   build/py/objstr.o
+                                                   build/py/objset.o
+                                                   build/py/objrange.o
+                                                   build/py/objlist.o
+                                                   build/py/objint_mpz.o
+                                                   build/py/objint.o
+                                                   build/py/objfun.o
+                                                   build/py/objfloat.o
+                                                   build/py/objdict.o
+                                                   build/py/objcomplex.o
+                                                   build/py/objarray.o
+                                                   build/py/obj.o
+                                                   build/py/nativeglue.o
+                                                   build/py/runtime.o
+ mp_convert_member_lookup                          build/py/runtime.o
+                                                   build/py/objtype.o
+ mp_deinit                                         build/py/runtime.o
+                                                   build/main.o
+ mp_delete_global                                  build/py/runtime.o
+                                                   build/py/vm.o
+ mp_delete_name                                    build/py/runtime.o
+                                                   build/py/vm.o
+ mp_dynamic_compiler                               build/py/mpstate.o
+                                                   build/main.o
+                                                   build/py/bc.o
+                                                   build/py/persistentcode.o
+                                                   build/py/emitnxtensawin.o
+                                                   build/py/emitnxtensa.o
+                                                   build/py/emitnarm.o
+                                                   build/py/emitnthumb.o
+                                                   build/py/asmthumb.o
+                                                   build/py/emitnx86.o
+                                                   build/py/emitnx64.o
+                                                   build/py/emitbc.o
+                                                   build/py/compile.o
+                                                   build/py/lexer.o
+ mp_emit_bc_adjust_stack_size                      build/py/emitbc.o
+ mp_emit_bc_attr                                   build/py/emitbc.o
+ mp_emit_bc_binary_op                              build/py/emitbc.o
+ mp_emit_bc_build                                  build/py/emitbc.o
+ mp_emit_bc_call_function                          build/py/emitbc.o
+ mp_emit_bc_call_method                            build/py/emitbc.o
+ mp_emit_bc_delete_global                          build/py/emitbc.o
+ mp_emit_bc_delete_local                           build/py/emitbc.o
+ mp_emit_bc_dup_top                                build/py/emitbc.o
+ mp_emit_bc_dup_top_two                            build/py/emitbc.o
+ mp_emit_bc_end_except_handler                     build/py/emitbc.o
+ mp_emit_bc_end_finally                            build/py/emitbc.o
+ mp_emit_bc_end_pass                               build/py/emitbc.o
+ mp_emit_bc_for_iter                               build/py/emitbc.o
+ mp_emit_bc_for_iter_end                           build/py/emitbc.o
+ mp_emit_bc_get_iter                               build/py/emitbc.o
+ mp_emit_bc_import                                 build/py/emitbc.o
+ mp_emit_bc_jump                                   build/py/emitbc.o
+ mp_emit_bc_jump_if_or_pop                         build/py/emitbc.o
+ mp_emit_bc_label_assign                           build/py/emitbc.o
+ mp_emit_bc_last_emit_was_return_value             build/py/emitbc.o
+ mp_emit_bc_load_build_class                       build/py/emitbc.o
+ mp_emit_bc_load_const_obj                         build/py/emitbc.o
+ mp_emit_bc_load_const_small_int                   build/py/emitbc.o
+ mp_emit_bc_load_const_str                         build/py/emitbc.o
+ mp_emit_bc_load_const_tok                         build/py/emitbc.o
+ mp_emit_bc_load_global                            build/py/emitbc.o
+ mp_emit_bc_load_local                             build/py/emitbc.o
+ mp_emit_bc_load_method                            build/py/emitbc.o
+ mp_emit_bc_load_null                              build/py/emitbc.o
+ mp_emit_bc_make_closure                           build/py/emitbc.o
+ mp_emit_bc_make_function                          build/py/emitbc.o
+ mp_emit_bc_pop_except_jump                        build/py/emitbc.o
+ mp_emit_bc_pop_jump_if                            build/py/emitbc.o
+ mp_emit_bc_pop_top                                build/py/emitbc.o
+ mp_emit_bc_raise_varargs                          build/py/emitbc.o
+ mp_emit_bc_return_value                           build/py/emitbc.o
+ mp_emit_bc_rot_three                              build/py/emitbc.o
+ mp_emit_bc_rot_two                                build/py/emitbc.o
+ mp_emit_bc_set_source_line                        build/py/emitbc.o
+ mp_emit_bc_setup_block                            build/py/emitbc.o
+ mp_emit_bc_start_except_handler                   build/py/emitbc.o
+ mp_emit_bc_start_pass                             build/py/emitbc.o
+ mp_emit_bc_store_comp                             build/py/emitbc.o
+ mp_emit_bc_store_global                           build/py/emitbc.o
+ mp_emit_bc_store_local                            build/py/emitbc.o
+ mp_emit_bc_store_map                              build/py/emitbc.o
+ mp_emit_bc_subscr                                 build/py/emitbc.o
+ mp_emit_bc_unary_op                               build/py/emitbc.o
+ mp_emit_bc_unpack_ex                              build/py/emitbc.o
+ mp_emit_bc_unpack_sequence                        build/py/emitbc.o
+ mp_emit_bc_unwind_jump                            build/py/emitbc.o
+ mp_emit_bc_with_cleanup                           build/py/emitbc.o
+ mp_emit_bc_yield                                  build/py/emitbc.o
+ mp_emit_common_get_id_for_modification            build/py/emitcommon.o
+                                                   build/py/compile.o
+ mp_emit_common_id_op                              build/py/emitcommon.o
+                                                   build/py/compile.o
+ mp_emit_glue_assign_bytecode                      build/py/emitglue.o
+                                                   build/py/emitbc.o
+ mp_emit_glue_assign_native                        build/py/emitglue.o
+                                                   build/py/emitnxtensawin.o
+                                                   build/py/emitnxtensa.o
+                                                   build/py/emitnarm.o
+                                                   build/py/emitnthumb.o
+                                                   build/py/emitnx86.o
+                                                   build/py/emitnx64.o
+                                                   build/py/compile.o
+ mp_emit_glue_new_raw_code                         build/py/emitglue.o
+                                                   build/py/scope.o
+ mp_emitter_warning                                build/py/warning.o
+ mp_execute_bytecode                               build/py/vm.o
+                                                   build/py/objgenerator.o
+                                                   build/py/objfun.o
+ mp_file_from_file_obj                             build/py/mpfile.o
+ mp_format_float                                   build/py/formatfloat.o
+                                                   build/py/objfloat.o
+                                                   build/py/objcomplex.o
+                                                   build/py/mpprint.o
+ mp_generic_unary_op                               build/py/obj.o
+                                                   build/py/objtype.o
+                                                   build/py/objnone.o
+                                                   build/py/objgenerator.o
+                                                   build/py/objfun.o
+ mp_get_buffer                                     build/py/obj.o
+                                                   build/py/stream.o
+                                                   build/py/objstr.o
+                                                   build/py/objfun.o
+                                                   build/py/objfloat.o
+                                                   build/py/objarray.o
+                                                   build/py/nativeglue.o
+ mp_get_buffer_raise                               build/py/obj.o
+                                                   build/py/modstruct.o
+                                                   build/py/stream.o
+                                                   build/py/objstr.o
+                                                   build/py/objint.o
+                                                   build/py/objarray.o
+ mp_get_index                                      build/py/obj.o
+                                                   build/py/sequence.o
+                                                   build/py/objtuple.o
+                                                   build/py/objstrunicode.o
+                                                   build/py/objstr.o
+                                                   build/py/objrange.o
+                                                   build/py/objlist.o
+                                                   build/py/objarray.o
+ mp_get_stream_raise                               build/py/stream.o
+ mp_getiter                                        build/py/runtime.o
+                                                   build/py/vm.o
+                                                   build/py/modbuiltins.o
+                                                   build/py/objzip.o
+                                                   build/py/objtuple.o
+                                                   build/py/objstr.o
+                                                   build/py/objset.o
+                                                   build/py/objmap.o
+                                                   build/py/objlist.o
+                                                   build/py/objfilter.o
+                                                   build/py/objenumerate.o
+                                                   build/py/objdict.o
+                                                   build/py/objarray.o
+ mp_handle_pending                                 build/py/scheduler.o
+ mp_identity                                       build/py/obj.o
+ mp_identity_getiter                               build/py/obj.o
+                                                   build/py/objzip.o
+                                                   build/py/objreversed.o
+                                                   build/py/objrange.o
+                                                   build/py/objpolyiter.o
+                                                   build/py/objmap.o
+                                                   build/py/objgetitemiter.o
+                                                   build/py/objgenerator.o
+                                                   build/py/objfilter.o
+                                                   build/py/objenumerate.o
+                                                   build/py/objdict.o
+                                                   build/py/objarray.o
+                                                   build/py/runtime.o
+ mp_identity_obj                                   build/py/obj.o
+                                                   build/py/modmicropython.o
+ mp_import_all                                     build/py/runtime.o
+                                                   build/py/vm.o
+ mp_import_from                                    build/py/runtime.o
+                                                   build/py/vm.o
+ mp_import_name                                    build/py/runtime.o
+                                                   build/py/vm.o
+ mp_import_stat                                    build/main.o
+                                                   build/py/builtinimport.o
+ mp_init                                           build/py/runtime.o
+                                                   build/main.o
+ mp_instance_cast_to_native_base                   build/py/objtype.o
+                                                   build/py/objtuple.o
+ mp_int_format_size                                build/py/objint.o
+                                                   build/py/objint_mpz.o
+ mp_iternext                                       build/py/runtime.o
+                                                   build/py/modbuiltins.o
+                                                   build/py/objzip.o
+                                                   build/py/objtuple.o
+                                                   build/py/objstr.o
+                                                   build/py/objset.o
+                                                   build/py/objmap.o
+                                                   build/py/objlist.o
+                                                   build/py/objfilter.o
+                                                   build/py/objenumerate.o
+                                                   build/py/objdict.o
+                                                   build/py/objarray.o
+ mp_iternext_allow_raise                           build/py/runtime.o
+                                                   build/py/vm.o
+                                                   build/py/modbuiltins.o
+ mp_lexer_free                                     build/py/lexer.o
+                                                   build/py/parse.o
+ mp_lexer_new                                      build/py/lexer.o
+ mp_lexer_new_from_fd                              build/py/lexer.o
+ mp_lexer_new_from_file                            build/py/lexer.o
+                                                   build/main.o
+                                                   build/py/builtinimport.o
+ mp_lexer_new_from_str_len                         build/py/lexer.o
+                                                   build/py/builtinevex.o
+ mp_lexer_to_next                                  build/py/lexer.o
+                                                   build/py/parse.o
+ mp_load_attr                                      build/py/runtime.o
+                                                   build/py/vm.o
+                                                   build/py/mpfile.o
+ mp_load_build_class                               build/py/runtime.o
+                                                   build/py/vm.o
+ mp_load_global                                    build/py/runtime.o
+                                                   build/py/vm.o
+ mp_load_method                                    build/py/runtime.o
+                                                   build/py/vm.o
+                                                   build/py/modbuiltins.o
+                                                   build/py/objtype.o
+ mp_load_method_maybe                              build/py/runtime.o
+                                                   build/py/modbuiltins.o
+                                                   build/py/builtinimport.o
+                                                   build/py/objtype.o
+                                                   build/py/objreversed.o
+                                                   build/py/parse.o
+ mp_load_method_protected                          build/py/runtime.o
+                                                   build/py/modbuiltins.o
+ mp_load_name                                      build/py/runtime.o
+                                                   build/py/vm.o
+ mp_load_super_method                              build/py/objtype.o
+                                                   build/py/vm.o
+ mp_make_closure_from_raw_code                     build/py/emitglue.o
+                                                   build/py/vm.o
+ mp_make_function_from_raw_code                    build/py/emitglue.o
+                                                   build/py/vm.o
+                                                   build/py/compile.o
+ mp_make_raise_obj                                 build/py/runtime.o
+                                                   build/py/vm.o
+ mp_map_clear                                      build/py/map.o
+                                                   build/py/objdict.o
+ mp_map_deinit                                     build/py/map.o
+                                                   build/py/parse.o
+ mp_map_init                                       build/py/map.o
+                                                   build/py/objtype.o
+                                                   build/py/objdict.o
+                                                   build/py/parse.o
+ mp_map_init_fixed_table                           build/py/map.o
+                                                   build/py/objfun.o
+                                                   build/py/objdict.o
+                                                   build/py/argcheck.o
+ mp_map_lookup                                     build/py/map.o
+                                                   build/py/bc.o
+                                                   build/py/modbuiltins.o
+                                                   build/py/builtinimport.o
+                                                   build/py/objtype.o
+                                                   build/py/objstr.o
+                                                   build/py/objmodule.o
+                                                   build/py/objdict.o
+                                                   build/py/argcheck.o
+                                                   build/py/runtime.o
+                                                   build/py/parse.o
+ mp_module___main__                                build/py/runtime.o
+                                                   build/py/objmodule.o
+ mp_module_builtins                                build/py/modbuiltins.o
+                                                   build/py/objmodule.o
+ mp_module_builtins_globals                        build/py/modbuiltins.o
+                                                   build/py/runtime.o
+ mp_module_get                                     build/py/objmodule.o
+                                                   build/py/builtinimport.o
+ mp_module_micropython                             build/py/modmicropython.o
+                                                   build/py/objmodule.o
+ mp_module_register                                build/py/objmodule.o
+ mp_module_ustruct                                 build/py/modstruct.o
+                                                   build/py/objmodule.o
+ mp_native_from_obj                                build/py/nativeglue.o
+ mp_native_to_obj                                  build/py/nativeglue.o
+                                                   build/py/objfun.o
+ mp_native_type_from_qstr                          build/py/nativeglue.o
+                                                   build/py/emitnxtensawin.o
+                                                   build/py/emitnxtensa.o
+                                                   build/py/emitnarm.o
+                                                   build/py/emitnthumb.o
+                                                   build/py/emitnx86.o
+                                                   build/py/emitnx64.o
+                                                   build/py/compile.o
+ mp_obj_cell_get                                   build/py/objcell.o
+                                                   build/py/vm.o
+ mp_obj_cell_set                                   build/py/objcell.o
+                                                   build/py/vm.o
+                                                   build/py/modbuiltins.o
+ mp_obj_code_get_name                              build/py/objfun.o
+ mp_obj_complex_binary_op                          build/py/objcomplex.o
+                                                   build/py/objint_mpz.o
+                                                   build/py/objfloat.o
+                                                   build/py/runtime.o
+ mp_obj_complex_get                                build/py/objcomplex.o
+                                                   build/py/obj.o
+ mp_obj_dict_delete                                build/py/objdict.o
+                                                   build/py/objmodule.o
+                                                   build/py/runtime.o
+ mp_obj_dict_get                                   build/py/objdict.o
+                                                   build/py/builtinimport.o
+                                                   build/py/objstr.o
+ mp_obj_dict_init                                  build/py/objdict.o
+                                                   build/py/runtime.o
+ mp_obj_dict_len                                   build/py/objdict.o
+                                                   build/py/runtime.o
+ mp_obj_dict_store                                 build/py/objdict.o
+                                                   build/py/bc.o
+                                                   build/py/vm.o
+                                                   build/py/builtinimport.o
+                                                   build/py/objtype.o
+                                                   build/py/objmodule.o
+                                                   build/py/runtime.o
+ mp_obj_equal                                      build/py/obj.o
+                                                   build/py/sequence.o
+                                                   build/py/objdict.o
+                                                   build/py/map.o
+                                                   build/py/runtime.o
+ mp_obj_exception_add_traceback                    build/py/objexcept.o
+                                                   build/py/vm.o
+                                                   build/py/parsenum.o
+                                                   build/py/compile.o
+                                                   build/py/parse.o
+ mp_obj_exception_attr                             build/py/objexcept.o
+ mp_obj_exception_clear_traceback                  build/py/objexcept.o
+ mp_obj_exception_get_traceback                    build/py/objexcept.o
+                                                   build/py/obj.o
+ mp_obj_exception_get_value                        build/py/objexcept.o
+                                                   build/py/vm.o
+ mp_obj_exception_make_new                         build/py/objexcept.o
+                                                   build/py/objtype.o
+ mp_obj_exception_match                            build/py/objexcept.o
+                                                   build/py/vm.o
+                                                   build/py/runtime.o
+ mp_obj_exception_print                            build/py/objexcept.o
+ mp_obj_float_binary_op                            build/py/objfloat.o
+                                                   build/py/objint_mpz.o
+                                                   build/py/runtime.o
+ mp_obj_float_get                                  build/py/objfloat.o
+                                                   build/py/objstr.o
+                                                   build/py/objint.o
+                                                   build/py/objfun.o
+                                                   build/py/obj.o
+ mp_obj_fun_get_name                               build/py/objfun.o
+                                                   build/py/bc.o
+                                                   build/py/objgenerator.o
+ mp_obj_gen_resume                                 build/py/objgenerator.o
+                                                   build/py/runtime.o
+ mp_obj_get_array                                  build/py/obj.o
+                                                   build/py/objstr.o
+                                                   build/py/objlist.o
+                                                   build/py/objfun.o
+                                                   build/py/runtime.o
+ mp_obj_get_array_fixed_n                          build/py/obj.o
+ mp_obj_get_complex                                build/py/obj.o
+                                                   build/py/objcomplex.o
+ mp_obj_get_float                                  build/py/obj.o
+                                                   build/py/modbuiltins.o
+                                                   build/py/binary.o
+                                                   build/py/objstr.o
+                                                   build/py/objfloat.o
+                                                   build/py/objcomplex.o
+ mp_obj_get_float_maybe                            build/py/obj.o
+                                                   build/py/objfloat.o
+ mp_obj_get_int                                    build/py/obj.o
+                                                   build/py/modstruct.o
+                                                   build/py/modmicropython.o
+                                                   build/py/modbuiltins.o
+                                                   build/py/binary.o
+                                                   build/py/stream.o
+                                                   build/py/sequence.o
+                                                   build/py/objstr.o
+                                                   build/py/objreversed.o
+                                                   build/py/objrange.o
+                                                   build/py/objint.o
+                                                   build/py/objarray.o
+                                                   build/py/argcheck.o
+                                                   build/py/mpfile.o
+                                                   build/py/mpprint.o
+ mp_obj_get_int_maybe                              build/py/obj.o
+                                                   build/py/objtuple.o
+                                                   build/py/objstrunicode.o
+                                                   build/py/objstr.o
+                                                   build/py/objlist.o
+ mp_obj_get_int_truncated                          build/py/obj.o
+                                                   build/py/stream.o
+                                                   build/py/objtype.o
+                                                   build/py/nativeglue.o
+                                                   build/py/emitinlinextensa.o
+                                                   build/py/emitinlinethumb.o
+ mp_obj_get_type                                   build/py/obj.o
+                                                   build/py/vm.o
+                                                   build/py/modbuiltins.o
+                                                   build/py/stream.o
+                                                   build/py/sequence.o
+                                                   build/py/opmethods.o
+                                                   build/py/objtype.o
+                                                   build/py/objtuple.o
+                                                   build/py/objstrunicode.o
+                                                   build/py/objstr.o
+                                                   build/py/objgenerator.o
+                                                   build/py/objfun.o
+                                                   build/py/objexcept.o
+                                                   build/py/runtime.o
+ mp_obj_get_type_str                               build/py/obj.o
+                                                   build/py/objtype.o
+                                                   build/py/objstrunicode.o
+                                                   build/py/objstr.o
+                                                   build/py/runtime.o
+ mp_obj_id                                         build/py/obj.o
+                                                   build/py/modbuiltins.o
+ mp_obj_instance_call                              build/py/objtype.o
+                                                   build/py/obj.o
+ mp_obj_instance_is_callable                       build/py/objtype.o
+                                                   build/py/obj.o
+ mp_obj_instance_make_new                          build/py/objtype.o
+                                                   build/py/objobject.o
+ mp_obj_int_as_float_impl                          build/py/objint_mpz.o
+                                                   build/py/obj.o
+ mp_obj_int_binary_op                              build/py/objint_mpz.o
+                                                   build/py/objint.o
+ mp_obj_int_binary_op_extra_cases                  build/py/objint.o
+                                                   build/py/objint_mpz.o
+ mp_obj_int_formatted                              build/py/objint.o
+                                                   build/py/mpprint.o
+ mp_obj_int_formatted_impl                         build/py/objint_mpz.o
+                                                   build/py/objint.o
+ mp_obj_int_from_bytes_impl                        build/py/objint_mpz.o
+                                                   build/py/objint.o
+ mp_obj_int_get_checked                            build/py/objint_mpz.o
+                                                   build/py/obj.o
+ mp_obj_int_get_truncated                          build/py/objint_mpz.o
+                                                   build/py/objfun.o
+                                                   build/py/obj.o
+ mp_obj_int_new_mpz                                build/py/objint_mpz.o
+                                                   build/py/objint.o
+ mp_obj_int_print                                  build/py/objint.o
+ mp_obj_int_sign                                   build/py/objint_mpz.o
+                                                   build/py/parse.o
+                                                   build/py/mpprint.o
+ mp_obj_int_to_bytes_impl                          build/py/objint_mpz.o
+                                                   build/py/binary.o
+                                                   build/py/objint.o
+ mp_obj_int_unary_op                               build/py/objint_mpz.o
+                                                   build/py/objint.o
+ mp_obj_is_callable                                build/py/obj.o
+                                                   build/py/modbuiltins.o
+ mp_obj_is_exception_instance                      build/py/objexcept.o
+                                                   build/py/vm.o
+                                                   build/py/obj.o
+                                                   build/py/runtime.o
+ mp_obj_is_exception_type                          build/py/objexcept.o
+                                                   build/py/runtime.o
+ mp_obj_is_package                                 build/py/builtinimport.o
+                                                   build/py/runtime.o
+ mp_obj_is_subclass_fast                           build/py/objtype.o
+                                                   build/py/vm.o
+                                                   build/py/objtuple.o
+                                                   build/py/objgenerator.o
+                                                   build/py/objexcept.o
+                                                   build/py/runtime.o
+ mp_obj_is_true                                    build/py/obj.o
+                                                   build/py/vm.o
+                                                   build/py/modbuiltins.o
+                                                   build/py/stream.o
+                                                   build/py/objfilter.o
+                                                   build/py/objbool.o
+                                                   build/py/argcheck.o
+                                                   build/py/nativeglue.o
+                                                   build/py/runtime.o
+ mp_obj_len                                        build/py/obj.o
+                                                   build/py/modbuiltins.o
+                                                   build/py/objreversed.o
+ mp_obj_len_maybe                                  build/py/obj.o
+                                                   build/py/objstr.o
+                                                   build/py/objdict.o
+                                                   build/py/objarray.o
+ mp_obj_list_append                                build/py/objlist.o
+                                                   build/py/vm.o
+                                                   build/py/modbuiltins.o
+                                                   build/py/stream.o
+                                                   build/py/sequence.o
+                                                   build/py/objstr.o
+                                                   build/py/runtime.o
+ mp_obj_list_get                                   build/py/objlist.o
+                                                   build/py/obj.o
+ mp_obj_list_init                                  build/py/objlist.o
+                                                   build/main.o
+ mp_obj_list_remove                                build/py/objlist.o
+ mp_obj_list_set_len                               build/py/objlist.o
+                                                   build/py/runtime.o
+ mp_obj_list_sort                                  build/py/objlist.o
+                                                   build/py/modbuiltins.o
+ mp_obj_list_store                                 build/py/objlist.o
+ mp_obj_new_bound_meth                             build/py/objboundmeth.o
+                                                   build/py/modbuiltins.o
+                                                   build/py/runtime.o
+ mp_obj_new_bytearray                              build/py/objarray.o
+ mp_obj_new_bytearray_by_ref                       build/py/objarray.o
+                                                   build/py/mpfile.o
+ mp_obj_new_bytes                                  build/py/objstr.o
+                                                   build/py/modstruct.o
+                                                   build/py/emitnxtensawin.o
+                                                   build/py/compile.o
+ mp_obj_new_cell                                   build/py/objcell.o
+                                                   build/py/bc.o
+ mp_obj_new_closure                                build/py/objclosure.o
+                                                   build/py/emitglue.o
+ mp_obj_new_complex                                build/py/objcomplex.o
+                                                   build/py/parsenum.o
+ mp_obj_new_dict                                   build/py/objdict.o
+                                                   build/py/bc.o
+                                                   build/py/vm.o
+                                                   build/py/modbuiltins.o
+                                                   build/py/objtype.o
+                                                   build/py/objmodule.o
+ mp_obj_new_exception                              build/py/objexcept.o
+                                                   build/py/modbuiltins.o
+                                                   build/py/objgenerator.o
+                                                   build/py/runtime.o
+ mp_obj_new_exception_arg1                         build/py/objexcept.o
+                                                   build/py/objstr.o
+                                                   build/py/objset.o
+                                                   build/py/objdict.o
+                                                   build/py/runtime.o
+                                                   build/py/parsenum.o
+ mp_obj_new_exception_args                         build/py/objexcept.o
+                                                   build/py/objgenerator.o
+ mp_obj_new_exception_msg                          build/py/objexcept.o
+                                                   build/py/vm.o
+                                                   build/py/objgenerator.o
+                                                   build/py/runtime.o
+                                                   build/py/parsenum.o
+                                                   build/py/emitinlinextensa.o
+                                                   build/py/emitinlinethumb.o
+                                                   build/py/compile.o
+                                                   build/py/parse.o
+ mp_obj_new_exception_msg_varg                     build/py/objexcept.o
+                                                   build/py/bc.o
+                                                   build/py/modbuiltins.o
+                                                   build/py/builtinimport.o
+                                                   build/py/objtype.o
+                                                   build/py/objstrunicode.o
+                                                   build/py/objstr.o
+                                                   build/py/obj.o
+                                                   build/py/argcheck.o
+                                                   build/py/runtime.o
+                                                   build/py/emitnxtensawin.o
+                                                   build/py/emitinlinextensa.o
+                                                   build/py/emitnxtensa.o
+                                                   build/py/emitnarm.o
+                                                   build/py/emitinlinethumb.o
+                                                   build/py/emitnthumb.o
+                                                   build/py/emitnx86.o
+                                                   build/py/emitnx64.o
+                                                   build/py/compile.o
+ mp_obj_new_float                                  build/py/objfloat.o
+                                                   build/py/modbuiltins.o
+                                                   build/py/binary.o
+                                                   build/py/objint_mpz.o
+                                                   build/py/objcomplex.o
+                                                   build/py/runtime.o
+                                                   build/py/parsenum.o
+ mp_obj_new_fun_asm                                build/py/objfun.o
+                                                   build/py/emitglue.o
+ mp_obj_new_fun_bc                                 build/py/objfun.o
+                                                   build/py/emitglue.o
+ mp_obj_new_fun_native                             build/py/objfun.o
+                                                   build/py/emitglue.o
+ mp_obj_new_getitem_iter                           build/py/objgetitemiter.o
+                                                   build/py/runtime.o
+ mp_obj_new_instance                               build/py/objtype.o
+                                                   build/py/objobject.o
+ mp_obj_new_int                                    build/py/objint_mpz.o
+                                                   build/py/modbuiltins.o
+                                                   build/py/binary.o
+                                                   build/py/stream.o
+                                                   build/py/objrange.o
+                                                   build/py/obj.o
+                                                   build/py/nativeglue.o
+                                                   build/py/runtime.o
+ mp_obj_new_int_from_float                         build/py/objint.o
+                                                   build/py/modbuiltins.o
+                                                   build/py/objstr.o
+ mp_obj_new_int_from_ll                            build/py/objint_mpz.o
+                                                   build/py/binary.o
+                                                   build/py/runtime.o
+                                                   build/py/compile.o
+ mp_obj_new_int_from_str_len                       build/py/objint_mpz.o
+                                                   build/py/parsenum.o
+ mp_obj_new_int_from_uint                          build/py/objint_mpz.o
+                                                   build/py/binary.o
+                                                   build/py/stream.o
+                                                   build/py/objint.o
+                                                   build/py/obj.o
+                                                   build/py/nativeglue.o
+ mp_obj_new_int_from_ull                           build/py/objint_mpz.o
+                                                   build/py/binary.o
+ mp_obj_new_list                                   build/py/objlist.o
+                                                   build/py/vm.o
+                                                   build/py/modbuiltins.o
+                                                   build/py/stream.o
+                                                   build/py/sequence.o
+                                                   build/py/objstr.o
+                                                   build/py/runtime.o
+ mp_obj_new_module                                 build/py/objmodule.o
+                                                   build/py/builtinimport.o
+ mp_obj_new_set                                    build/py/objset.o
+                                                   build/py/vm.o
+ mp_obj_new_slice                                  build/py/objslice.o
+                                                   build/py/vm.o
+ mp_obj_new_str                                    build/py/objstr.o
+                                                   build/py/builtinimport.o
+                                                   build/py/binary.o
+                                                   build/py/mpfile.o
+ mp_obj_new_str_copy                               build/py/objstr.o
+                                                   build/py/parse.o
+ mp_obj_new_str_from_vstr                          build/py/objstr.o
+                                                   build/py/modstruct.o
+                                                   build/py/modbuiltins.o
+                                                   build/py/stream.o
+                                                   build/py/objint.o
+                                                   build/py/parsenum.o
+ mp_obj_new_str_of_type                            build/py/objstr.o
+                                                   build/py/objstrunicode.o
+ mp_obj_new_str_via_qstr                           build/py/objstr.o
+                                                   build/py/modbuiltins.o
+                                                   build/py/objstrunicode.o
+ mp_obj_new_tuple                                  build/py/objtuple.o
+                                                   build/py/bc.o
+                                                   build/py/vm.o
+                                                   build/py/modstruct.o
+                                                   build/py/modbuiltins.o
+                                                   build/py/objzip.o
+                                                   build/py/objtype.o
+                                                   build/py/objint_mpz.o
+                                                   build/py/objfloat.o
+                                                   build/py/objenumerate.o
+                                                   build/py/objdict.o
+                                                   build/py/runtime.o
+ mp_obj_new_type                                   build/py/objtype.o
+ mp_obj_print                                      build/py/obj.o
+ mp_obj_print_exception                            build/py/obj.o
+                                                   build/main.o
+                                                   build/py/runtime_utils.o
+ mp_obj_print_helper                               build/py/obj.o
+                                                   build/py/modbuiltins.o
+                                                   build/py/objtype.o
+                                                   build/py/objtuple.o
+                                                   build/py/objstr.o
+                                                   build/py/objslice.o
+                                                   build/py/objset.o
+                                                   build/py/objlist.o
+                                                   build/py/objexcept.o
+                                                   build/py/objdict.o
+                                                   build/py/objclosure.o
+                                                   build/py/objcell.o
+                                                   build/py/objboundmeth.o
+                                                   build/py/objarray.o
+                                                   build/py/persistentcode.o
+ mp_obj_property_get                               build/py/objproperty.o
+                                                   build/py/objtype.o
+ mp_obj_set_store                                  build/py/objset.o
+                                                   build/py/vm.o
+ mp_obj_slice_get                                  build/py/objslice.o
+                                                   build/py/sequence.o
+                                                   build/py/objstrunicode.o
+ mp_obj_str_binary_op                              build/py/objstr.o
+                                                   build/py/objstrunicode.o
+                                                   build/py/objint.o
+                                                   build/py/runtime.o
+                                                   build/py/persistentcode.o
+ mp_obj_str_equal                                  build/py/objstr.o
+                                                   build/py/obj.o
+ mp_obj_str_format                                 build/py/objstr.o
+                                                   build/py/modbuiltins.o
+ mp_obj_str_get_buffer                             build/py/objstr.o
+                                                   build/py/objstrunicode.o
+ mp_obj_str_get_data                               build/py/objstr.o
+                                                   build/py/modbuiltins.o
+                                                   build/py/builtinevex.o
+                                                   build/py/builtinimport.o
+                                                   build/py/objint.o
+                                                   build/py/objfun.o
+                                                   build/py/objcomplex.o
+                                                   build/py/runtime.o
+                                                   build/py/persistentcode.o
+ mp_obj_str_get_qstr                               build/py/objstr.o
+                                                   build/py/modbuiltins.o
+                                                   build/py/builtinimport.o
+                                                   build/py/objtype.o
+                                                   build/py/runtime.o
+ mp_obj_str_get_str                                build/py/objstr.o
+                                                   build/py/modstruct.o
+                                                   build/py/objmodule.o
+                                                   build/py/runtime.o
+ mp_obj_str_intern                                 build/py/objstr.o
+ mp_obj_str_intern_checked                         build/py/objstr.o
+                                                   build/py/runtime.o
+ mp_obj_str_make_new                               build/py/objstr.o
+                                                   build/py/objstrunicode.o
+ mp_obj_str_split                                  build/py/objstr.o
+ mp_obj_subscr                                     build/py/obj.o
+                                                   build/py/vm.o
+                                                   build/py/objtype.o
+                                                   build/py/objreversed.o
+ mp_obj_tuple_binary_op                            build/py/objtuple.o
+ mp_obj_tuple_del                                  build/py/objtuple.o
+                                                   build/py/objzip.o
+ mp_obj_tuple_get                                  build/py/objtuple.o
+                                                   build/py/objtype.o
+                                                   build/py/objstr.o
+                                                   build/py/obj.o
+ mp_obj_tuple_getiter                              build/py/objtuple.o
+ mp_obj_tuple_print                                build/py/objtuple.o
+                                                   build/py/objexcept.o
+ mp_obj_tuple_subscr                               build/py/objtuple.o
+ mp_obj_tuple_unary_op                             build/py/objtuple.o
+ mp_op_contains_obj                                build/py/opmethods.o
+                                                   build/py/objset.o
+ mp_op_delitem_obj                                 build/py/opmethods.o
+                                                   build/py/objdict.o
+ mp_op_getitem_obj                                 build/py/opmethods.o
+                                                   build/py/objdict.o
+ mp_op_setitem_obj                                 build/py/opmethods.o
+                                                   build/py/objdict.o
+ mp_opcode_format                                  build/py/bc.o
+                                                   build/py/persistentcode.o
+ mp_open                                           build/py/mpfile.o
+ mp_pairheap_delete                                build/py/pairheap.o
+ mp_pairheap_meld                                  build/py/pairheap.o
+ mp_pairheap_pairing                               build/py/pairheap.o
+ mp_parse                                          build/py/parse.o
+                                                   build/main.o
+                                                   build/py/runtime.o
+ mp_parse_compile_execute                          build/py/runtime.o
+                                                   build/py/builtinevex.o
+                                                   build/py/builtinimport.o
+ mp_parse_node_extract_list                        build/py/parse.o
+                                                   build/py/emitinlinethumb.o
+                                                   build/py/compile.o
+ mp_parse_node_get_int_maybe                       build/py/parse.o
+                                                   build/py/emitinlinextensa.o
+                                                   build/py/emitinlinethumb.o
+ mp_parse_node_is_const_false                      build/py/parse.o
+                                                   build/py/compile.o
+ mp_parse_node_is_const_true                       build/py/parse.o
+                                                   build/py/compile.o
+ mp_parse_num_base                                 build/py/parsenumbase.o
+                                                   build/py/parsenum.o
+ mp_parse_num_decimal                              build/py/parsenum.o
+                                                   build/py/objfloat.o
+                                                   build/py/objcomplex.o
+                                                   build/py/parse.o
+ mp_parse_num_integer                              build/py/parsenum.o
+                                                   build/py/modstruct.o
+                                                   build/py/objint.o
+                                                   build/py/parse.o
+ mp_parse_tree_clear                               build/py/parse.o
+                                                   build/py/compile.o
+ mp_plat_print                                     build/py/mpprint.o
+                                                   build/py/modbuiltins.o
+                                                   build/py/obj.o
+                                                   build/py/warning.o
+                                                   build/py/runtime_utils.o
+                                                   build/py/gc.o
+ mp_print_float                                    build/py/mpprint.o
+                                                   build/py/objstr.o
+ mp_print_mp_int                                   build/py/mpprint.o
+                                                   build/py/objstr.o
+ mp_print_str                                      build/py/mpprint.o
+                                                   build/py/modbuiltins.o
+                                                   build/py/objtype.o
+                                                   build/py/objtuple.o
+                                                   build/py/objstrunicode.o
+                                                   build/py/objstr.o
+                                                   build/py/objslice.o
+                                                   build/py/objset.o
+                                                   build/py/objrange.o
+                                                   build/py/objnone.o
+                                                   build/py/objlist.o
+                                                   build/py/objint.o
+                                                   build/py/objfloat.o
+                                                   build/py/objexcept.o
+                                                   build/py/objdict.o
+                                                   build/py/objcomplex.o
+                                                   build/py/objclosure.o
+                                                   build/py/objcell.o
+                                                   build/py/objboundmeth.o
+                                                   build/py/objbool.o
+                                                   build/py/objarray.o
+                                                   build/py/obj.o
+                                                   build/py/warning.o
+                                                   build/py/gc.o
+ mp_print_strn                                     build/py/mpprint.o
+                                                   build/py/modbuiltins.o
+                                                   build/py/objstr.o
+ mp_printf                                         build/py/mpprint.o
+                                                   build/main.o
+                                                   build/py/objtype.o
+                                                   build/py/objstrunicode.o
+                                                   build/py/objstr.o
+                                                   build/py/objsingleton.o
+                                                   build/py/objrange.o
+                                                   build/py/objmodule.o
+                                                   build/py/objgenerator.o
+                                                   build/py/objfun.o
+                                                   build/py/objcomplex.o
+                                                   build/py/objclosure.o
+                                                   build/py/objcell.o
+                                                   build/py/objboundmeth.o
+                                                   build/py/objarray.o
+                                                   build/py/obj.o
+                                                   build/py/parsenum.o
+                                                   build/py/mpfile.o
+                                                   build/py/gc.o
+ mp_qstr_const_pool                                build/py/qstr.o
+ mp_raise_NotImplementedError                      build/py/runtime.o
+                                                   build/py/modbuiltins.o
+                                                   build/py/objtuple.o
+                                                   build/py/objstrunicode.o
+                                                   build/py/objstr.o
+                                                   build/py/objlist.o
+                                                   build/py/objarray.o
+                                                   build/py/argcheck.o
+                                                   build/py/emitnxtensawin.o
+                                                   build/py/emitnxtensa.o
+                                                   build/py/emitnarm.o
+                                                   build/py/emitnthumb.o
+                                                   build/py/emitnx86.o
+                                                   build/py/emitnx64.o
+                                                   build/py/lexer.o
+ mp_raise_OSError                                  build/py/runtime.o
+                                                   build/py/stream.o
+                                                   build/py/reader.o
+ mp_raise_TypeError                                build/py/runtime.o
+                                                   build/py/bc.o
+                                                   build/py/modbuiltins.o
+                                                   build/py/builtinevex.o
+                                                   build/py/objtype.o
+                                                   build/py/objstr.o
+                                                   build/py/objobject.o
+                                                   build/py/objgenerator.o
+                                                   build/py/objdict.o
+                                                   build/py/objcomplex.o
+                                                   build/py/obj.o
+                                                   build/py/argcheck.o
+ mp_raise_ValueError                               build/py/runtime.o
+                                                   build/py/modstruct.o
+                                                   build/py/modbuiltins.o
+                                                   build/py/builtinimport.o
+                                                   build/py/binary.o
+                                                   build/py/sequence.o
+                                                   build/py/objstr.o
+                                                   build/py/objrange.o
+                                                   build/py/objint_mpz.o
+                                                   build/py/objint.o
+                                                   build/py/objgenerator.o
+                                                   build/py/objdict.o
+                                                   build/py/parsenum.o
+ mp_raise_msg                                      build/py/runtime.o
+                                                   build/py/modbuiltins.o
+                                                   build/py/stream.o
+                                                   build/py/objtype.o
+                                                   build/py/objstrunicode.o
+                                                   build/py/objstr.o
+                                                   build/py/objset.o
+                                                   build/py/objlist.o
+                                                   build/py/objint_mpz.o
+                                                   build/py/objint.o
+                                                   build/py/objgenerator.o
+                                                   build/py/objfloat.o
+                                                   build/py/objdict.o
+                                                   build/py/objcomplex.o
+                                                   build/py/vstr.o
+                                                   build/py/qstr.o
+ mp_raise_recursion_depth                          build/py/runtime.o
+                                                   build/py/stackctrl.o
+ mp_raw_code_save                                  build/py/persistentcode.o
+ mp_raw_code_save_file                             build/py/persistentcode.o
+                                                   build/main.o
+ mp_reader_new_file                                build/py/reader.o
+                                                   build/py/lexer.o
+ mp_reader_new_file_from_fd                        build/py/reader.o
+                                                   build/py/lexer.o
+ mp_reader_new_mem                                 build/py/reader.o
+                                                   build/py/lexer.o
+ mp_readinto                                       build/py/mpfile.o
+ mp_resume                                         build/py/runtime.o
+                                                   build/py/vm.o
+ mp_seek                                           build/py/mpfile.o
+ mp_seq_cmp_bytes                                  build/py/sequence.o
+                                                   build/py/objstr.o
+                                                   build/py/objarray.o
+ mp_seq_cmp_objs                                   build/py/sequence.o
+                                                   build/py/objtuple.o
+                                                   build/py/objlist.o
+ mp_seq_count_obj                                  build/py/sequence.o
+                                                   build/py/objtuple.o
+                                                   build/py/objlist.o
+ mp_seq_extract_slice                              build/py/sequence.o
+                                                   build/py/objlist.o
+ mp_seq_get_fast_slice_indexes                     build/py/sequence.o
+                                                   build/py/objtuple.o
+                                                   build/py/objstr.o
+                                                   build/py/objrange.o
+                                                   build/py/objlist.o
+                                                   build/py/objarray.o
+ mp_seq_index_obj                                  build/py/sequence.o
+                                                   build/py/objtuple.o
+                                                   build/py/objlist.o
+ mp_seq_multiply                                   build/py/sequence.o
+                                                   build/py/objtuple.o
+                                                   build/py/objstr.o
+                                                   build/py/objlist.o
+ mp_set_clear                                      build/py/map.o
+                                                   build/py/objset.o
+ mp_set_init                                       build/py/map.o
+                                                   build/py/objset.o
+ mp_set_lookup                                     build/py/map.o
+                                                   build/py/objset.o
+ mp_set_remove_first                               build/py/map.o
+                                                   build/py/objset.o
+ mp_setup_code_state                               build/py/bc.o
+                                                   build/py/objgenerator.o
+                                                   build/py/objfun.o
+ mp_small_int_floor_divide                         build/py/smallint.o
+                                                   build/py/runtime.o
+ mp_small_int_modulo                               build/py/smallint.o
+                                                   build/py/runtime.o
+ mp_small_int_mul_overflow                         build/py/smallint.o
+                                                   build/py/runtime.o
+                                                   build/py/parsenum.o
+ mp_stack_check                                    build/py/stackctrl.o
+                                                   build/py/objstr.o
+                                                   build/py/objlist.o
+                                                   build/py/objgenerator.o
+                                                   build/py/objfun.o
+                                                   build/py/obj.o
+                                                   build/py/runtime.o
+ mp_stack_ctrl_init                                build/py/stackctrl.o
+                                                   build/main.o
+ mp_stack_set_limit                                build/py/stackctrl.o
+                                                   build/main.o
+ mp_stack_set_top                                  build/py/stackctrl.o
+ mp_stack_usage                                    build/py/stackctrl.o
+ mp_state_ctx                                      build/py/mpstate.o
+                                                   build/gccollect.o
+                                                   build/main.o
+                                                   build/py/vm.o
+                                                   build/py/modmicropython.o
+                                                   build/py/modbuiltins.o
+                                                   build/py/builtinevex.o
+                                                   build/py/builtinimport.o
+                                                   build/py/objmodule.o
+                                                   build/py/objgenerator.o
+                                                   build/py/objfun.o
+                                                   build/py/objexcept.o
+                                                   build/py/stackctrl.o
+                                                   build/py/scheduler.o
+                                                   build/py/runtime.o
+                                                   build/py/emitbc.o
+                                                   build/py/compile.o
+                                                   build/py/lexer.o
+                                                   build/py/qstr.o
+                                                   build/py/gc.o
+                                                   build/py/nlrx64.o
+                                                   build/py/nlr.o
+ mp_store_attr                                     build/py/runtime.o
+                                                   build/py/vm.o
+                                                   build/py/modbuiltins.o
+                                                   build/py/builtinimport.o
+ mp_store_global                                   build/py/runtime.o
+                                                   build/py/vm.o
+ mp_store_name                                     build/py/runtime.o
+                                                   build/py/vm.o
+ mp_str_print_quoted                               build/py/objstr.o
+                                                   build/py/objarray.o
+                                                   build/py/parsenum.o
+ mp_stream_close                                   build/py/stream.o
+ mp_stream_close_obj                               build/py/stream.o
+ mp_stream_flush_obj                               build/py/stream.o
+ mp_stream_ioctl_obj                               build/py/stream.o
+ mp_stream_read1_obj                               build/py/stream.o
+ mp_stream_read_obj                                build/py/stream.o
+ mp_stream_readinto_obj                            build/py/stream.o
+ mp_stream_rw                                      build/py/stream.o
+ mp_stream_seek_obj                                build/py/stream.o
+ mp_stream_tell_obj                                build/py/stream.o
+ mp_stream_unbuffered_iter                         build/py/stream.o
+ mp_stream_unbuffered_readline_obj                 build/py/stream.o
+ mp_stream_unbuffered_readlines_obj                build/py/stream.o
+ mp_stream_write                                   build/py/stream.o
+ mp_stream_write1_obj                              build/py/stream.o
+ mp_stream_write_adaptor                           build/py/stream.o
+ mp_stream_write_obj                               build/py/stream.o
+ mp_tell                                           build/py/mpfile.o
+ mp_type_ArithmeticError                           build/py/objexcept.o
+                                                   build/py/modbuiltins.o
+ mp_type_AssertionError                            build/py/objexcept.o
+                                                   build/py/modbuiltins.o
+ mp_type_AttributeError                            build/py/objexcept.o
+                                                   build/py/modbuiltins.o
+                                                   build/py/objtype.o
+                                                   build/py/runtime.o
+ mp_type_BaseException                             build/py/objexcept.o
+                                                   build/py/modbuiltins.o
+ mp_type_EOFError                                  build/py/objexcept.o
+                                                   build/py/modbuiltins.o
+ mp_type_Exception                                 build/py/objexcept.o
+                                                   build/py/modbuiltins.o
+ mp_type_GeneratorExit                             build/py/objexcept.o
+                                                   build/py/vm.o
+                                                   build/py/modbuiltins.o
+                                                   build/py/objgenerator.o
+                                                   build/py/runtime.o
+ mp_type_ImportError                               build/py/objexcept.o
+                                                   build/py/modbuiltins.o
+                                                   build/py/builtinimport.o
+                                                   build/py/runtime.o
+ mp_type_IndentationError                          build/py/objexcept.o
+                                                   build/py/modbuiltins.o
+                                                   build/py/parse.o
+ mp_type_IndexError                                build/py/objexcept.o
+                                                   build/py/modbuiltins.o
+                                                   build/py/objstrunicode.o
+                                                   build/py/objstr.o
+                                                   build/py/objlist.o
+                                                   build/py/objgetitemiter.o
+                                                   build/py/obj.o
+ mp_type_KeyError                                  build/py/objexcept.o
+                                                   build/py/modbuiltins.o
+                                                   build/py/objstr.o
+                                                   build/py/objset.o
+                                                   build/py/objdict.o
+ mp_type_KeyboardInterrupt                         build/py/objexcept.o
+                                                   build/py/modbuiltins.o
+ mp_type_LookupError                               build/py/objexcept.o
+                                                   build/py/modbuiltins.o
+ mp_type_MemoryError                               build/py/objexcept.o
+                                                   build/py/modbuiltins.o
+                                                   build/py/runtime.o
+ mp_type_NameError                                 build/py/objexcept.o
+                                                   build/py/vm.o
+                                                   build/py/modbuiltins.o
+                                                   build/py/runtime.o
+ mp_type_NoneType                                  build/py/objnone.o
+ mp_type_NotImplementedError                       build/py/objexcept.o
+                                                   build/py/vm.o
+                                                   build/py/modbuiltins.o
+                                                   build/py/runtime.o
+ mp_type_OSError                                   build/py/objexcept.o
+                                                   build/py/modbuiltins.o
+                                                   build/py/stream.o
+                                                   build/py/runtime.o
+ mp_type_OverflowError                             build/py/objexcept.o
+                                                   build/py/modbuiltins.o
+                                                   build/py/objint_mpz.o
+                                                   build/py/objint.o
+ mp_type_RuntimeError                              build/py/objexcept.o
+                                                   build/py/vm.o
+                                                   build/py/modbuiltins.o
+                                                   build/py/objgenerator.o
+                                                   build/py/runtime.o
+                                                   build/py/vstr.o
+                                                   build/py/qstr.o
+ mp_type_StopAsyncIteration                        build/py/objexcept.o
+                                                   build/py/modbuiltins.o
+ mp_type_StopIteration                             build/py/objexcept.o
+                                                   build/py/vm.o
+                                                   build/py/modbuiltins.o
+                                                   build/py/objgetitemiter.o
+                                                   build/py/objgenerator.o
+                                                   build/py/runtime.o
+ mp_type_SyntaxError                               build/py/objexcept.o
+                                                   build/py/modbuiltins.o
+                                                   build/py/parsenum.o
+                                                   build/py/emitinlinextensa.o
+                                                   build/py/emitinlinethumb.o
+                                                   build/py/compile.o
+                                                   build/py/parse.o
+ mp_type_SystemExit                                build/py/objexcept.o
+                                                   build/py/modbuiltins.o
+ mp_type_TypeError                                 build/py/objexcept.o
+                                                   build/py/bc.o
+                                                   build/py/modbuiltins.o
+                                                   build/py/objtype.o
+                                                   build/py/objstrunicode.o
+                                                   build/py/objstr.o
+                                                   build/py/obj.o
+                                                   build/py/argcheck.o
+                                                   build/py/runtime.o
+ mp_type_UnicodeError                              build/py/objexcept.o
+                                                   build/py/modbuiltins.o
+                                                   build/py/objstr.o
+ mp_type_ValueError                                build/py/objexcept.o
+                                                   build/py/modbuiltins.o
+                                                   build/py/objstr.o
+                                                   build/py/obj.o
+                                                   build/py/runtime.o
+                                                   build/py/parsenum.o
+ mp_type_ViperTypeError                            build/py/objexcept.o
+                                                   build/py/modbuiltins.o
+                                                   build/py/emitnxtensawin.o
+                                                   build/py/emitnxtensa.o
+                                                   build/py/emitnarm.o
+                                                   build/py/emitnthumb.o
+                                                   build/py/emitnx86.o
+                                                   build/py/emitnx64.o
+                                                   build/py/compile.o
+ mp_type_ZeroDivisionError                         build/py/objexcept.o
+                                                   build/py/modbuiltins.o
+                                                   build/py/objint_mpz.o
+                                                   build/py/objfloat.o
+                                                   build/py/objcomplex.o
+                                                   build/py/runtime.o
+ mp_type_bool                                      build/py/objbool.o
+                                                   build/py/modbuiltins.o
+                                                   build/py/objstr.o
+ mp_type_bytearray                                 build/py/objarray.o
+                                                   build/py/modbuiltins.o
+                                                   build/py/gc.o
+ mp_type_bytes                                     build/py/objstr.o
+                                                   build/py/modstruct.o
+                                                   build/py/modbuiltins.o
+                                                   build/py/stream.o
+                                                   build/py/objstrunicode.o
+                                                   build/py/objint.o
+                                                   build/py/obj.o
+                                                   build/py/parse.o
+                                                   build/py/gc.o
+ mp_type_classmethod                               build/py/objtype.o
+                                                   build/py/modbuiltins.o
+                                                   build/py/objint.o
+                                                   build/py/objdict.o
+                                                   build/py/runtime.o
+ mp_type_complex                                   build/py/objcomplex.o
+                                                   build/py/modbuiltins.o
+                                                   build/py/objint_mpz.o
+                                                   build/py/objfloat.o
+                                                   build/py/obj.o
+                                                   build/py/runtime.o
+                                                   build/py/persistentcode.o
+ mp_type_dict                                      build/py/objdict.o
+                                                   build/py/modstruct.o
+                                                   build/py/modmicropython.o
+                                                   build/py/modbuiltins.o
+                                                   build/py/builtinevex.o
+                                                   build/py/objtype.o
+                                                   build/py/objtuple.o
+                                                   build/py/objstrunicode.o
+                                                   build/py/objstr.o
+                                                   build/py/objset.o
+                                                   build/py/objproperty.o
+                                                   build/py/objobject.o
+                                                   build/py/objlist.o
+                                                   build/py/objint.o
+                                                   build/py/objgenerator.o
+                                                   build/py/objarray.o
+                                                   build/py/runtime.o
+                                                   build/py/emitglue.o
+                                                   build/py/mpfile.o
+                                                   build/py/gc.o
+ mp_type_enumerate                                 build/py/objenumerate.o
+                                                   build/py/modbuiltins.o
+ mp_type_filter                                    build/py/objfilter.o
+                                                   build/py/modbuiltins.o
+ mp_type_float                                     build/py/objfloat.o
+                                                   build/py/modbuiltins.o
+                                                   build/py/objstr.o
+                                                   build/py/objint_mpz.o
+                                                   build/py/objint.o
+                                                   build/py/objfun.o
+                                                   build/py/objarray.o
+                                                   build/py/obj.o
+                                                   build/py/runtime.o
+                                                   build/py/persistentcode.o
+                                                   build/py/gc.o
+ mp_type_fun_bc                                    build/py/objfun.o
+                                                   build/py/gc.o
+ mp_type_fun_builtin_0                             build/py/objfun.o
+                                                   build/py/modmicropython.o
+                                                   build/py/modbuiltins.o
+                                                   build/py/runtime.o
+ mp_type_fun_builtin_1                             build/py/objfun.o
+                                                   build/py/modstruct.o
+                                                   build/py/modbuiltins.o
+                                                   build/py/stream.o
+                                                   build/py/objstr.o
+                                                   build/py/objset.o
+                                                   build/py/objobject.o
+                                                   build/py/objlist.o
+                                                   build/py/objgenerator.o
+                                                   build/py/objdict.o
+                                                   build/py/obj.o
+                                                   build/py/runtime.o
+                                                   build/py/mpfile.o
+ mp_type_fun_builtin_2                             build/py/objfun.o
+                                                   build/py/modbuiltins.o
+                                                   build/py/stream.o
+                                                   build/py/opmethods.o
+                                                   build/py/objtype.o
+                                                   build/py/objtuple.o
+                                                   build/py/objstr.o
+                                                   build/py/objset.o
+                                                   build/py/objproperty.o
+                                                   build/py/objlist.o
+                                                   build/py/objgenerator.o
+                                                   build/py/objarray.o
+                                                   build/py/runtime.o
+ mp_type_fun_builtin_3                             build/py/objfun.o
+                                                   build/py/modbuiltins.o
+                                                   build/py/opmethods.o
+                                                   build/py/objlist.o
+                                                   build/py/runtime.o
+ mp_type_fun_builtin_var                           build/py/objfun.o
+                                                   build/py/modstruct.o
+                                                   build/py/modmicropython.o
+                                                   build/py/modbuiltins.o
+                                                   build/py/builtinevex.o
+                                                   build/py/builtinimport.o
+                                                   build/py/stream.o
+                                                   build/py/objtype.o
+                                                   build/py/objtuple.o
+                                                   build/py/objstr.o
+                                                   build/py/objset.o
+                                                   build/py/objlist.o
+                                                   build/py/objint.o
+                                                   build/py/objgenerator.o
+                                                   build/py/objdict.o
+                                                   build/py/runtime.o
+ mp_type_gen_instance                              build/py/objgenerator.o
+                                                   build/py/runtime.o
+ mp_type_gen_wrap                                  build/py/objgenerator.o
+                                                   build/py/emitglue.o
+ mp_type_int                                       build/py/objint.o
+                                                   build/py/modbuiltins.o
+                                                   build/py/binary.o
+                                                   build/py/objtype.o
+                                                   build/py/objstr.o
+                                                   build/py/objint_mpz.o
+                                                   build/py/objfun.o
+                                                   build/py/objarray.o
+                                                   build/py/obj.o
+                                                   build/py/persistentcode.o
+                                                   build/py/parse.o
+                                                   build/py/mpprint.o
+ mp_type_list                                      build/py/objlist.o
+                                                   build/py/modbuiltins.o
+                                                   build/py/objstr.o
+                                                   build/py/objint.o
+                                                   build/py/objfun.o
+                                                   build/py/obj.o
+                                                   build/py/runtime.o
+                                                   build/py/gc.o
+ mp_type_map                                       build/py/objmap.o
+                                                   build/py/modbuiltins.o
+ mp_type_module                                    build/py/objmodule.o
+                                                   build/py/modstruct.o
+                                                   build/py/modmicropython.o
+                                                   build/py/modbuiltins.o
+                                                   build/py/runtime.o
+                                                   build/py/gc.o
+ mp_type_native_gen_wrap                           build/py/objgenerator.o
+                                                   build/py/objfun.o
+                                                   build/py/emitglue.o
+ mp_type_object                                    build/py/objobject.o
+                                                   build/py/modbuiltins.o
+                                                   build/py/objtype.o
+ mp_type_polymorph_iter                            build/py/objpolyiter.o
+                                                   build/py/objtuple.o
+                                                   build/py/objstrunicode.o
+                                                   build/py/objstr.o
+                                                   build/py/objset.o
+                                                   build/py/objlist.o
+ mp_type_property                                  build/py/objproperty.o
+                                                   build/py/modbuiltins.o
+                                                   build/py/objtype.o
+ mp_type_range                                     build/py/objrange.o
+                                                   build/py/modbuiltins.o
+ mp_type_reversed                                  build/py/objreversed.o
+                                                   build/py/modbuiltins.o
+ mp_type_set                                       build/py/objset.o
+                                                   build/py/modbuiltins.o
+ mp_type_singleton                                 build/py/objsingleton.o
+ mp_type_slice                                     build/py/objslice.o
+                                                   build/py/modbuiltins.o
+                                                   build/py/objtuple.o
+                                                   build/py/objstrunicode.o
+                                                   build/py/objstr.o
+                                                   build/py/objrange.o
+                                                   build/py/objlist.o
+                                                   build/py/objarray.o
+ mp_type_staticmethod                              build/py/objtype.o
+                                                   build/py/modbuiltins.o
+                                                   build/py/objobject.o
+                                                   build/py/runtime.o
+ mp_type_str                                       build/py/objstrunicode.o
+                                                   build/py/modbuiltins.o
+                                                   build/py/stream.o
+                                                   build/py/objstr.o
+                                                   build/py/objfun.o
+                                                   build/py/objexcept.o
+                                                   build/py/objcomplex.o
+                                                   build/py/obj.o
+                                                   build/py/map.o
+                                                   build/py/persistentcode.o
+                                                   build/py/parsenum.o
+                                                   build/py/parse.o
+                                                   build/py/gc.o
+ mp_type_super                                     build/py/objtype.o
+                                                   build/py/modbuiltins.o
+ mp_type_tuple                                     build/py/objtuple.o
+                                                   build/py/modbuiltins.o
+                                                   build/py/objtype.o
+                                                   build/py/objstr.o
+                                                   build/py/objint.o
+                                                   build/py/objfun.o
+                                                   build/py/objexcept.o
+                                                   build/py/obj.o
+                                                   build/py/runtime.o
+                                                   build/py/emitglue.o
+                                                   build/py/gc.o
+ mp_type_type                                      build/py/objtype.o
+                                                   build/py/modbuiltins.o
+                                                   build/py/objzip.o
+                                                   build/py/objtuple.o
+                                                   build/py/objstrunicode.o
+                                                   build/py/objstr.o
+                                                   build/py/objslice.o
+                                                   build/py/objsingleton.o
+                                                   build/py/objset.o
+                                                   build/py/objreversed.o
+                                                   build/py/objrange.o
+                                                   build/py/objnone.o
+                                                   build/py/objproperty.o
+                                                   build/py/objpolyiter.o
+                                                   build/py/objobject.o
+                                                   build/py/objmodule.o
+                                                   build/py/objmap.o
+                                                   build/py/objlist.o
+                                                   build/py/objint.o
+                                                   build/py/objgetitemiter.o
+                                                   build/py/objgenerator.o
+                                                   build/py/objfun.o
+                                                   build/py/objfloat.o
+                                                   build/py/objfilter.o
+                                                   build/py/objexcept.o
+                                                   build/py/objenumerate.o
+                                                   build/py/objdict.o
+                                                   build/py/objcomplex.o
+                                                   build/py/objclosure.o
+                                                   build/py/objcell.o
+                                                   build/py/objboundmeth.o
+                                                   build/py/objbool.o
+                                                   build/py/objarray.o
+                                                   build/py/runtime.o
+                                                   build/py/mpfile.o
+ mp_type_zip                                       build/py/objzip.o
+                                                   build/py/modbuiltins.o
+ mp_unary_op                                       build/py/runtime.o
+                                                   build/py/vm.o
+                                                   build/py/modbuiltins.o
+                                                   build/py/objtype.o
+                                                   build/py/objtuple.o
+                                                   build/py/objint.o
+                                                   build/py/objbool.o
+                                                   build/py/obj.o
+                                                   build/py/map.o
+                                                   build/py/parse.o
+ mp_unary_op_method_name                           build/py/objtype.o
+                                                   build/py/runtime.o
+                                                   build/py/emitnxtensawin.o
+                                                   build/py/emitnxtensa.o
+                                                   build/py/emitnarm.o
+                                                   build/py/emitnthumb.o
+                                                   build/py/emitnx86.o
+                                                   build/py/emitnx64.o
+ mp_unpack_ex                                      build/py/runtime.o
+                                                   build/py/vm.o
+ mp_unpack_sequence                                build/py/runtime.o
+                                                   build/py/vm.o
+ mp_verbose_flag                                   build/main.o
+ mp_vprintf                                        build/py/mpprint.o
+                                                   build/py/objexcept.o
+                                                   build/py/warning.o
+                                                   build/py/vstr.o
+ mp_warning                                        build/py/warning.o
+                                                   build/py/vm.o
+ mprotect                                          /lib/x86_64-linux-gnu/libc.so.6
+ mprotect@@GLIBC_2.2.5                             /lib/x86_64-linux-gnu/libc.so.6
+ mprotect@GLIBC_2.2.5                              /lib/x86_64-linux-gnu/libc.so.6
+ mpz_abs_inpl                                      build/py/mpz.o
+                                                   build/py/objint_mpz.o
+ mpz_add_inpl                                      build/py/mpz.o
+                                                   build/py/objint_mpz.o
+ mpz_and_inpl                                      build/py/mpz.o
+                                                   build/py/objint_mpz.o
+ mpz_as_bytes                                      build/py/mpz.o
+                                                   build/py/objint_mpz.o
+ mpz_as_float                                      build/py/mpz.o
+                                                   build/py/objint_mpz.o
+ mpz_as_int_checked                                build/py/mpz.o
+                                                   build/py/objint_mpz.o
+ mpz_as_str_inpl                                   build/py/mpz.o
+                                                   build/py/objint_mpz.o
+ mpz_as_uint_checked                               build/py/mpz.o
+ mpz_cmp                                           build/py/mpz.o
+                                                   build/py/objint_mpz.o
+ mpz_deinit                                        build/py/mpz.o
+                                                   build/py/objint_mpz.o
+ mpz_divmod_inpl                                   build/py/mpz.o
+                                                   build/py/objint_mpz.o
+ mpz_hash                                          build/py/mpz.o
+                                                   build/py/objint_mpz.o
+ mpz_init_fixed_from_int                           build/py/mpz.o
+                                                   build/py/objint_mpz.o
+ mpz_init_from_int                                 build/py/mpz.o
+ mpz_init_zero                                     build/py/mpz.o
+                                                   build/py/objint_mpz.o
+ mpz_mul_inpl                                      build/py/mpz.o
+                                                   build/py/objint_mpz.o
+ mpz_neg_inpl                                      build/py/mpz.o
+                                                   build/py/objint_mpz.o
+ mpz_not_inpl                                      build/py/mpz.o
+                                                   build/py/objint_mpz.o
+ mpz_or_inpl                                       build/py/mpz.o
+                                                   build/py/objint_mpz.o
+ mpz_pow3_inpl                                     build/py/mpz.o
+ mpz_pow_inpl                                      build/py/mpz.o
+                                                   build/py/objint_mpz.o
+ mpz_set                                           build/py/mpz.o
+ mpz_set_from_bytes                                build/py/mpz.o
+                                                   build/py/objint_mpz.o
+ mpz_set_from_float                                build/py/mpz.o
+                                                   build/py/objint.o
+ mpz_set_from_int                                  build/py/mpz.o
+ mpz_set_from_ll                                   build/py/mpz.o
+                                                   build/py/objint_mpz.o
+ mpz_set_from_str                                  build/py/mpz.o
+                                                   build/py/objint_mpz.o
+ mpz_shl_inpl                                      build/py/mpz.o
+                                                   build/py/objint_mpz.o
+ mpz_shr_inpl                                      build/py/mpz.o
+                                                   build/py/objint_mpz.o
+ mpz_sub_inpl                                      build/py/mpz.o
+                                                   build/py/objint_mpz.o
+ mpz_xor_inpl                                      build/py/mpz.o
+                                                   build/py/objint_mpz.o
+ mremap                                            /lib/x86_64-linux-gnu/libc.so.6
+ mremap@@GLIBC_2.2.5                               /lib/x86_64-linux-gnu/libc.so.6
+ mremap@GLIBC_2.2.5                                /lib/x86_64-linux-gnu/libc.so.6
+ msgrcv                                            /lib/x86_64-linux-gnu/libc.so.6
+ msgrcv@@GLIBC_2.2.5                               /lib/x86_64-linux-gnu/libc.so.6
+ msgrcv@GLIBC_2.2.5                                /lib/x86_64-linux-gnu/libc.so.6
+ msgsnd                                            /lib/x86_64-linux-gnu/libc.so.6
+ msgsnd@@GLIBC_2.2.5                               /lib/x86_64-linux-gnu/libc.so.6
+ msgsnd@GLIBC_2.2.5                                /lib/x86_64-linux-gnu/libc.so.6
+ munmap                                            /lib/x86_64-linux-gnu/libc.so.6
+ munmap@@GLIBC_2.2.5                               /lib/x86_64-linux-gnu/libc.so.6
+ munmap@GLIBC_2.2.5                                /lib/x86_64-linux-gnu/libc.so.6
+ nan                                               /lib/x86_64-linux-gnu/libm.so.6
+ nan@@GLIBC_2.2.5                                  /lib/x86_64-linux-gnu/libm.so.6
+ nan@GLIBC_2.2.5                                   /lib/x86_64-linux-gnu/libm.so.6
+ nanf                                              /lib/x86_64-linux-gnu/libm.so.6
+ nanf128                                           /lib/x86_64-linux-gnu/libm.so.6
+ nanf128@@GLIBC_2.26                               /lib/x86_64-linux-gnu/libm.so.6
+ nanf128@GLIBC_2.26                                /lib/x86_64-linux-gnu/libm.so.6
+ nanf32                                            /lib/x86_64-linux-gnu/libm.so.6
+ nanf32@@GLIBC_2.27                                /lib/x86_64-linux-gnu/libm.so.6
+ nanf32@GLIBC_2.27                                 /lib/x86_64-linux-gnu/libm.so.6
+ nanf32x                                           /lib/x86_64-linux-gnu/libm.so.6
+ nanf32x@@GLIBC_2.27                               /lib/x86_64-linux-gnu/libm.so.6
+ nanf32x@GLIBC_2.27                                /lib/x86_64-linux-gnu/libm.so.6
+ nanf64                                            /lib/x86_64-linux-gnu/libm.so.6
+ nanf64@@GLIBC_2.27                                /lib/x86_64-linux-gnu/libm.so.6
+ nanf64@GLIBC_2.27                                 /lib/x86_64-linux-gnu/libm.so.6
+ nanf64x                                           /lib/x86_64-linux-gnu/libm.so.6
+ nanf64x@@GLIBC_2.27                               /lib/x86_64-linux-gnu/libm.so.6
+ nanf64x@GLIBC_2.27                                /lib/x86_64-linux-gnu/libm.so.6
+ nanf@@GLIBC_2.2.5                                 /lib/x86_64-linux-gnu/libm.so.6
+ nanf@GLIBC_2.2.5                                  /lib/x86_64-linux-gnu/libm.so.6
+ nanl                                              /lib/x86_64-linux-gnu/libm.so.6
+ nanl@@GLIBC_2.2.5                                 /lib/x86_64-linux-gnu/libm.so.6
+ nanl@GLIBC_2.2.5                                  /lib/x86_64-linux-gnu/libm.so.6
+ nanosleep                                         /lib/x86_64-linux-gnu/libc.so.6
+ nanosleep@@GLIBC_2.2.5                            /lib/x86_64-linux-gnu/libc.so.6
+ nanosleep@GLIBC_2.2.5                             /lib/x86_64-linux-gnu/libc.so.6
+ nearbyint                                         /lib/x86_64-linux-gnu/libm.so.6
+                                                   build/py/modbuiltins.o
+ nearbyint@@GLIBC_2.2.5                            /lib/x86_64-linux-gnu/libm.so.6
+ nearbyint@GLIBC_2.2.5                             /lib/x86_64-linux-gnu/libm.so.6
+ nearbyintf                                        /lib/x86_64-linux-gnu/libm.so.6
+ nearbyintf128                                     /lib/x86_64-linux-gnu/libm.so.6
+ nearbyintf128@@GLIBC_2.26                         /lib/x86_64-linux-gnu/libm.so.6
+ nearbyintf128@GLIBC_2.26                          /lib/x86_64-linux-gnu/libm.so.6
+ nearbyintf32                                      /lib/x86_64-linux-gnu/libm.so.6
+ nearbyintf32@@GLIBC_2.27                          /lib/x86_64-linux-gnu/libm.so.6
+ nearbyintf32@GLIBC_2.27                           /lib/x86_64-linux-gnu/libm.so.6
+ nearbyintf32x                                     /lib/x86_64-linux-gnu/libm.so.6
+ nearbyintf32x@@GLIBC_2.27                         /lib/x86_64-linux-gnu/libm.so.6
+ nearbyintf32x@GLIBC_2.27                          /lib/x86_64-linux-gnu/libm.so.6
+ nearbyintf64                                      /lib/x86_64-linux-gnu/libm.so.6
+ nearbyintf64@@GLIBC_2.27                          /lib/x86_64-linux-gnu/libm.so.6
+ nearbyintf64@GLIBC_2.27                           /lib/x86_64-linux-gnu/libm.so.6
+ nearbyintf64x                                     /lib/x86_64-linux-gnu/libm.so.6
+ nearbyintf64x@@GLIBC_2.27                         /lib/x86_64-linux-gnu/libm.so.6
+ nearbyintf64x@GLIBC_2.27                          /lib/x86_64-linux-gnu/libm.so.6
+ nearbyintf@@GLIBC_2.2.5                           /lib/x86_64-linux-gnu/libm.so.6
+ nearbyintf@GLIBC_2.2.5                            /lib/x86_64-linux-gnu/libm.so.6
+ nearbyintl                                        /lib/x86_64-linux-gnu/libm.so.6
+ nearbyintl@@GLIBC_2.2.5                           /lib/x86_64-linux-gnu/libm.so.6
+ nearbyintl@GLIBC_2.2.5                            /lib/x86_64-linux-gnu/libm.so.6
+ newlocale                                         /lib/x86_64-linux-gnu/libc.so.6
+ newlocale@@GLIBC_2.3                              /lib/x86_64-linux-gnu/libc.so.6
+ newlocale@GLIBC_2.3                               /lib/x86_64-linux-gnu/libc.so.6
+ nextafter                                         /lib/x86_64-linux-gnu/libm.so.6
+ nextafter@@GLIBC_2.2.5                            /lib/x86_64-linux-gnu/libm.so.6
+ nextafter@GLIBC_2.2.5                             /lib/x86_64-linux-gnu/libm.so.6
+ nextafterf                                        /lib/x86_64-linux-gnu/libm.so.6
+ nextafterf128                                     /lib/x86_64-linux-gnu/libm.so.6
+ nextafterf128@@GLIBC_2.26                         /lib/x86_64-linux-gnu/libm.so.6
+ nextafterf128@GLIBC_2.26                          /lib/x86_64-linux-gnu/libm.so.6
+ nextafterf32                                      /lib/x86_64-linux-gnu/libm.so.6
+ nextafterf32@@GLIBC_2.27                          /lib/x86_64-linux-gnu/libm.so.6
+ nextafterf32@GLIBC_2.27                           /lib/x86_64-linux-gnu/libm.so.6
+ nextafterf32x                                     /lib/x86_64-linux-gnu/libm.so.6
+ nextafterf32x@@GLIBC_2.27                         /lib/x86_64-linux-gnu/libm.so.6
+ nextafterf32x@GLIBC_2.27                          /lib/x86_64-linux-gnu/libm.so.6
+ nextafterf64                                      /lib/x86_64-linux-gnu/libm.so.6
+ nextafterf64@@GLIBC_2.27                          /lib/x86_64-linux-gnu/libm.so.6
+ nextafterf64@GLIBC_2.27                           /lib/x86_64-linux-gnu/libm.so.6
+ nextafterf64x                                     /lib/x86_64-linux-gnu/libm.so.6
+ nextafterf64x@@GLIBC_2.27                         /lib/x86_64-linux-gnu/libm.so.6
+ nextafterf64x@GLIBC_2.27                          /lib/x86_64-linux-gnu/libm.so.6
+ nextafterf@@GLIBC_2.2.5                           /lib/x86_64-linux-gnu/libm.so.6
+ nextafterf@GLIBC_2.2.5                            /lib/x86_64-linux-gnu/libm.so.6
+ nextafterl                                        /lib/x86_64-linux-gnu/libm.so.6
+ nextafterl@@GLIBC_2.2.5                           /lib/x86_64-linux-gnu/libm.so.6
+ nextafterl@GLIBC_2.2.5                            /lib/x86_64-linux-gnu/libm.so.6
+ nextdown                                          /lib/x86_64-linux-gnu/libm.so.6
+ nextdown@@GLIBC_2.24                              /lib/x86_64-linux-gnu/libm.so.6
+ nextdown@GLIBC_2.24                               /lib/x86_64-linux-gnu/libm.so.6
+ nextdownf                                         /lib/x86_64-linux-gnu/libm.so.6
+ nextdownf128                                      /lib/x86_64-linux-gnu/libm.so.6
+ nextdownf128@@GLIBC_2.26                          /lib/x86_64-linux-gnu/libm.so.6
+ nextdownf128@GLIBC_2.26                           /lib/x86_64-linux-gnu/libm.so.6
+ nextdownf32                                       /lib/x86_64-linux-gnu/libm.so.6
+ nextdownf32@@GLIBC_2.27                           /lib/x86_64-linux-gnu/libm.so.6
+ nextdownf32@GLIBC_2.27                            /lib/x86_64-linux-gnu/libm.so.6
+ nextdownf32x                                      /lib/x86_64-linux-gnu/libm.so.6
+ nextdownf32x@@GLIBC_2.27                          /lib/x86_64-linux-gnu/libm.so.6
+ nextdownf32x@GLIBC_2.27                           /lib/x86_64-linux-gnu/libm.so.6
+ nextdownf64                                       /lib/x86_64-linux-gnu/libm.so.6
+ nextdownf64@@GLIBC_2.27                           /lib/x86_64-linux-gnu/libm.so.6
+ nextdownf64@GLIBC_2.27                            /lib/x86_64-linux-gnu/libm.so.6
+ nextdownf64x                                      /lib/x86_64-linux-gnu/libm.so.6
+ nextdownf64x@@GLIBC_2.27                          /lib/x86_64-linux-gnu/libm.so.6
+ nextdownf64x@GLIBC_2.27                           /lib/x86_64-linux-gnu/libm.so.6
+ nextdownf@@GLIBC_2.24                             /lib/x86_64-linux-gnu/libm.so.6
+ nextdownf@GLIBC_2.24                              /lib/x86_64-linux-gnu/libm.so.6
+ nextdownl                                         /lib/x86_64-linux-gnu/libm.so.6
+ nextdownl@@GLIBC_2.24                             /lib/x86_64-linux-gnu/libm.so.6
+ nextdownl@GLIBC_2.24                              /lib/x86_64-linux-gnu/libm.so.6
+ nexttoward                                        /lib/x86_64-linux-gnu/libm.so.6
+ nexttoward@@GLIBC_2.2.5                           /lib/x86_64-linux-gnu/libm.so.6
+ nexttoward@GLIBC_2.2.5                            /lib/x86_64-linux-gnu/libm.so.6
+ nexttowardf                                       /lib/x86_64-linux-gnu/libm.so.6
+ nexttowardf@@GLIBC_2.2.5                          /lib/x86_64-linux-gnu/libm.so.6
+ nexttowardf@GLIBC_2.2.5                           /lib/x86_64-linux-gnu/libm.so.6
+ nexttowardl                                       /lib/x86_64-linux-gnu/libm.so.6
+ nexttowardl@@GLIBC_2.2.5                          /lib/x86_64-linux-gnu/libm.so.6
+ nexttowardl@GLIBC_2.2.5                           /lib/x86_64-linux-gnu/libm.so.6
+ nextup                                            /lib/x86_64-linux-gnu/libm.so.6
+ nextup@@GLIBC_2.24                                /lib/x86_64-linux-gnu/libm.so.6
+ nextup@GLIBC_2.24                                 /lib/x86_64-linux-gnu/libm.so.6
+ nextupf                                           /lib/x86_64-linux-gnu/libm.so.6
+ nextupf128                                        /lib/x86_64-linux-gnu/libm.so.6
+ nextupf128@@GLIBC_2.26                            /lib/x86_64-linux-gnu/libm.so.6
+ nextupf128@GLIBC_2.26                             /lib/x86_64-linux-gnu/libm.so.6
+ nextupf32                                         /lib/x86_64-linux-gnu/libm.so.6
+ nextupf32@@GLIBC_2.27                             /lib/x86_64-linux-gnu/libm.so.6
+ nextupf32@GLIBC_2.27                              /lib/x86_64-linux-gnu/libm.so.6
+ nextupf32x                                        /lib/x86_64-linux-gnu/libm.so.6
+ nextupf32x@@GLIBC_2.27                            /lib/x86_64-linux-gnu/libm.so.6
+ nextupf32x@GLIBC_2.27                             /lib/x86_64-linux-gnu/libm.so.6
+ nextupf64                                         /lib/x86_64-linux-gnu/libm.so.6
+ nextupf64@@GLIBC_2.27                             /lib/x86_64-linux-gnu/libm.so.6
+ nextupf64@GLIBC_2.27                              /lib/x86_64-linux-gnu/libm.so.6
+ nextupf64x                                        /lib/x86_64-linux-gnu/libm.so.6
+ nextupf64x@@GLIBC_2.27                            /lib/x86_64-linux-gnu/libm.so.6
+ nextupf64x@GLIBC_2.27                             /lib/x86_64-linux-gnu/libm.so.6
+ nextupf@@GLIBC_2.24                               /lib/x86_64-linux-gnu/libm.so.6
+ nextupf@GLIBC_2.24                                /lib/x86_64-linux-gnu/libm.so.6
+ nextupl                                           /lib/x86_64-linux-gnu/libm.so.6
+ nextupl@@GLIBC_2.24                               /lib/x86_64-linux-gnu/libm.so.6
+ nextupl@GLIBC_2.24                                /lib/x86_64-linux-gnu/libm.so.6
+ ngettext                                          /lib/x86_64-linux-gnu/libc.so.6
+ ngettext@@GLIBC_2.2.5                             /lib/x86_64-linux-gnu/libc.so.6
+ ngettext@GLIBC_2.2.5                              /lib/x86_64-linux-gnu/libc.so.6
+ nl_langinfo_l                                     /lib/x86_64-linux-gnu/libc.so.6
+ nl_langinfo_l@@GLIBC_2.3                          /lib/x86_64-linux-gnu/libc.so.6
+ nl_langinfo_l@GLIBC_2.3                           /lib/x86_64-linux-gnu/libc.so.6
+ nlr_jump                                          build/py/nlrx64.o
+                                                   build/py/bc.o
+                                                   build/py/modbuiltins.o
+                                                   build/py/builtinimport.o
+                                                   build/py/objtype.o
+                                                   build/py/objstrunicode.o
+                                                   build/py/objstr.o
+                                                   build/py/objset.o
+                                                   build/py/objgetitemiter.o
+                                                   build/py/objgenerator.o
+                                                   build/py/objfun.o
+                                                   build/py/objdict.o
+                                                   build/py/obj.o
+                                                   build/py/argcheck.o
+                                                   build/py/scheduler.o
+                                                   build/py/runtime.o
+                                                   build/py/parsenum.o
+                                                   build/py/compile.o
+                                                   build/py/parse.o
+ nlr_jump_fail                                     build/main.o
+                                                   build/py/nlrx64.o
+ nlr_pop                                           build/py/nlr.o
+                                                   build/main.o
+                                                   build/py/vm.o
+                                                   build/py/objgetitemiter.o
+                                                   build/py/runtime_utils.o
+                                                   build/py/runtime.o
+ nlr_push                                          build/py/nlrx64.o
+                                                   build/main.o
+                                                   build/py/vm.o
+                                                   build/py/objgetitemiter.o
+                                                   build/py/runtime_utils.o
+                                                   build/py/runtime.o
+ nlr_push_tail                                     build/py/nlr.o
+                                                   build/py/nlrx64.o
+ nrand48_r                                         /lib/x86_64-linux-gnu/libc.so.6
+ nrand48_r@@GLIBC_2.2.5                            /lib/x86_64-linux-gnu/libc.so.6
+ nrand48_r@GLIBC_2.2.5                             /lib/x86_64-linux-gnu/libc.so.6
+ ntohl                                             /lib/x86_64-linux-gnu/libc.so.6
+ ntohl@@GLIBC_2.2.5                                /lib/x86_64-linux-gnu/libc.so.6
+ ntohl@GLIBC_2.2.5                                 /lib/x86_64-linux-gnu/libc.so.6
+ ntohs                                             /lib/x86_64-linux-gnu/libc.so.6
+ ntohs@@GLIBC_2.2.5                                /lib/x86_64-linux-gnu/libc.so.6
+ ntohs@GLIBC_2.2.5                                 /lib/x86_64-linux-gnu/libc.so.6
+ ntp_adjtime                                       /lib/x86_64-linux-gnu/libc.so.6
+ ntp_adjtime@@GLIBC_2.2.5                          /lib/x86_64-linux-gnu/libc.so.6
+ ntp_adjtime@GLIBC_2.2.5                           /lib/x86_64-linux-gnu/libc.so.6
+ obstack_printf                                    /lib/x86_64-linux-gnu/libc.so.6
+ obstack_printf@@GLIBC_2.2.5                       /lib/x86_64-linux-gnu/libc.so.6
+ obstack_printf@GLIBC_2.2.5                        /lib/x86_64-linux-gnu/libc.so.6
+ obstack_vprintf                                   /lib/x86_64-linux-gnu/libc.so.6
+ obstack_vprintf@@GLIBC_2.2.5                      /lib/x86_64-linux-gnu/libc.so.6
+ obstack_vprintf@GLIBC_2.2.5                       /lib/x86_64-linux-gnu/libc.so.6
+ on_exit                                           /lib/x86_64-linux-gnu/libc.so.6
+ on_exit@@GLIBC_2.2.5                              /lib/x86_64-linux-gnu/libc.so.6
+ on_exit@GLIBC_2.2.5                               /lib/x86_64-linux-gnu/libc.so.6
+ open                                              /lib/x86_64-linux-gnu/libc.so.6
+                                                   build/py/persistentcode.o
+                                                   build/py/reader.o
+ open64                                            /lib/x86_64-linux-gnu/libc.so.6
+ open64@@GLIBC_2.2.5                               /lib/x86_64-linux-gnu/libc.so.6
+ open64@GLIBC_2.2.5                                /lib/x86_64-linux-gnu/libc.so.6
+ open@@GLIBC_2.2.5                                 /lib/x86_64-linux-gnu/libc.so.6
+ open@GLIBC_2.2.5                                  /lib/x86_64-linux-gnu/libc.so.6
+ open_memstream                                    /lib/x86_64-linux-gnu/libc.so.6
+ open_memstream@@GLIBC_2.2.5                       /lib/x86_64-linux-gnu/libc.so.6
+ open_memstream@GLIBC_2.2.5                        /lib/x86_64-linux-gnu/libc.so.6
+ openat                                            /lib/x86_64-linux-gnu/libc.so.6
+ openat64                                          /lib/x86_64-linux-gnu/libc.so.6
+ openat64@@GLIBC_2.4                               /lib/x86_64-linux-gnu/libc.so.6
+ openat64@GLIBC_2.4                                /lib/x86_64-linux-gnu/libc.so.6
+ openat@@GLIBC_2.4                                 /lib/x86_64-linux-gnu/libc.so.6
+ openat@GLIBC_2.4                                  /lib/x86_64-linux-gnu/libc.so.6
+ opendir                                           /lib/x86_64-linux-gnu/libc.so.6
+ opendir@@GLIBC_2.2.5                              /lib/x86_64-linux-gnu/libc.so.6
+ opendir@GLIBC_2.2.5                               /lib/x86_64-linux-gnu/libc.so.6
+ pathconf                                          /lib/x86_64-linux-gnu/libc.so.6
+ pathconf@@GLIBC_2.2.5                             /lib/x86_64-linux-gnu/libc.so.6
+ pathconf@GLIBC_2.2.5                              /lib/x86_64-linux-gnu/libc.so.6
+ pause                                             /lib/x86_64-linux-gnu/libc.so.6
+ pause@@GLIBC_2.2.5                                /lib/x86_64-linux-gnu/libc.so.6
+ pause@GLIBC_2.2.5                                 /lib/x86_64-linux-gnu/libc.so.6
+ personality                                       /lib/x86_64-linux-gnu/libc.so.6
+ personality@@GLIBC_2.2.5                          /lib/x86_64-linux-gnu/libc.so.6
+ personality@GLIBC_2.2.5                           /lib/x86_64-linux-gnu/libc.so.6
+ pipe                                              /lib/x86_64-linux-gnu/libc.so.6
+ pipe2                                             /lib/x86_64-linux-gnu/libc.so.6
+ pipe2@@GLIBC_2.9                                  /lib/x86_64-linux-gnu/libc.so.6
+ pipe2@GLIBC_2.9                                   /lib/x86_64-linux-gnu/libc.so.6
+ pipe@@GLIBC_2.2.5                                 /lib/x86_64-linux-gnu/libc.so.6
+ pipe@GLIBC_2.2.5                                  /lib/x86_64-linux-gnu/libc.so.6
+ poll                                              /lib/x86_64-linux-gnu/libc.so.6
+ poll@@GLIBC_2.2.5                                 /lib/x86_64-linux-gnu/libc.so.6
+ poll@GLIBC_2.2.5                                  /lib/x86_64-linux-gnu/libc.so.6
+ posix_fadvise64                                   /lib/x86_64-linux-gnu/libc.so.6
+ posix_fadvise64@@GLIBC_2.2.5                      /lib/x86_64-linux-gnu/libc.so.6
+ posix_fadvise64@GLIBC_2.2.5                       /lib/x86_64-linux-gnu/libc.so.6
+ posix_memalign                                    /lib/x86_64-linux-gnu/libc.so.6
+ posix_memalign@@GLIBC_2.2.5                       /lib/x86_64-linux-gnu/libc.so.6
+ posix_memalign@GLIBC_2.2.5                        /lib/x86_64-linux-gnu/libc.so.6
+ posix_openpt                                      /lib/x86_64-linux-gnu/libc.so.6
+ posix_openpt@@GLIBC_2.2.5                         /lib/x86_64-linux-gnu/libc.so.6
+ posix_openpt@GLIBC_2.2.5                          /lib/x86_64-linux-gnu/libc.so.6
+ pow                                               /lib/x86_64-linux-gnu/libm.so.6
+                                                   build/py/modbuiltins.o
+                                                   build/py/objfloat.o
+                                                   build/py/parsenum.o
+ pow@@GLIBC_2.2.5                                  /lib/x86_64-linux-gnu/libm.so.6
+ pow@GLIBC_2.2.5                                   /lib/x86_64-linux-gnu/libm.so.6
+ powf128                                           /lib/x86_64-linux-gnu/libm.so.6
+ powf128@@GLIBC_2.26                               /lib/x86_64-linux-gnu/libm.so.6
+ powf128@GLIBC_2.26                                /lib/x86_64-linux-gnu/libm.so.6
+ powf32                                            /lib/x86_64-linux-gnu/libm.so.6
+ powf32@@GLIBC_2.27                                /lib/x86_64-linux-gnu/libm.so.6
+ powf32@GLIBC_2.27                                 /lib/x86_64-linux-gnu/libm.so.6
+ powf32x                                           /lib/x86_64-linux-gnu/libm.so.6
+ powf32x@@GLIBC_2.27                               /lib/x86_64-linux-gnu/libm.so.6
+ powf32x@GLIBC_2.27                                /lib/x86_64-linux-gnu/libm.so.6
+ powf64                                            /lib/x86_64-linux-gnu/libm.so.6
+ powf64@@GLIBC_2.27                                /lib/x86_64-linux-gnu/libm.so.6
+ powf64@GLIBC_2.27                                 /lib/x86_64-linux-gnu/libm.so.6
+ powf64x                                           /lib/x86_64-linux-gnu/libm.so.6
+ powf64x@@GLIBC_2.27                               /lib/x86_64-linux-gnu/libm.so.6
+ powf64x@GLIBC_2.27                                /lib/x86_64-linux-gnu/libm.so.6
+ powl                                              /lib/x86_64-linux-gnu/libm.so.6
+ powl@@GLIBC_2.2.5                                 /lib/x86_64-linux-gnu/libm.so.6
+ powl@GLIBC_2.2.5                                  /lib/x86_64-linux-gnu/libm.so.6
+ prctl                                             /lib/x86_64-linux-gnu/libc.so.6
+ prctl@@GLIBC_2.2.5                                /lib/x86_64-linux-gnu/libc.so.6
+ prctl@GLIBC_2.2.5                                 /lib/x86_64-linux-gnu/libc.so.6
+ pread                                             /lib/x86_64-linux-gnu/libc.so.6
+ pread64                                           /lib/x86_64-linux-gnu/libc.so.6
+ pread64@@GLIBC_2.2.5                              /lib/x86_64-linux-gnu/libc.so.6
+ pread64@GLIBC_2.2.5                               /lib/x86_64-linux-gnu/libc.so.6
+ pread@@GLIBC_2.2.5                                /lib/x86_64-linux-gnu/libc.so.6
+ pread@GLIBC_2.2.5                                 /lib/x86_64-linux-gnu/libc.so.6
+ prlimit64                                         /lib/x86_64-linux-gnu/libc.so.6
+ prlimit64@@GLIBC_2.13                             /lib/x86_64-linux-gnu/libc.so.6
+ prlimit64@GLIBC_2.13                              /lib/x86_64-linux-gnu/libc.so.6
+ profil                                            /lib/x86_64-linux-gnu/libc.so.6
+ profil@@GLIBC_2.2.5                               /lib/x86_64-linux-gnu/libc.so.6
+ profil@GLIBC_2.2.5                                /lib/x86_64-linux-gnu/libc.so.6
+ program_invocation_name                           /lib/x86_64-linux-gnu/libc.so.6
+ program_invocation_name@@GLIBC_2.2.5              /lib/x86_64-linux-gnu/libc.so.6
+ program_invocation_name@GLIBC_2.2.5               /lib/x86_64-linux-gnu/libc.so.6
+ program_invocation_short_name                     /lib/x86_64-linux-gnu/libc.so.6
+ program_invocation_short_name@@GLIBC_2.2.5        /lib/x86_64-linux-gnu/libc.so.6
+ program_invocation_short_name@GLIBC_2.2.5         /lib/x86_64-linux-gnu/libc.so.6
+ pselect                                           /lib/x86_64-linux-gnu/libc.so.6
+ pselect@@GLIBC_2.2.5                              /lib/x86_64-linux-gnu/libc.so.6
+ pselect@GLIBC_2.2.5                               /lib/x86_64-linux-gnu/libc.so.6
+ ptsname_r                                         /lib/x86_64-linux-gnu/libc.so.6
+ ptsname_r@@GLIBC_2.2.5                            /lib/x86_64-linux-gnu/libc.so.6
+ ptsname_r@GLIBC_2.2.5                             /lib/x86_64-linux-gnu/libc.so.6
+ putc                                              /lib/x86_64-linux-gnu/libc.so.6
+ putc@@GLIBC_2.2.5                                 /lib/x86_64-linux-gnu/libc.so.6
+ putc@GLIBC_2.2.5                                  /lib/x86_64-linux-gnu/libc.so.6
+ puts                                              /lib/x86_64-linux-gnu/libc.so.6
+                                                   build/main.o
+                                                   build/py/asmxtensa.o
+                                                   build/py/asmarm.o
+ puts@@GLIBC_2.2.5                                 /lib/x86_64-linux-gnu/libc.so.6
+ puts@GLIBC_2.2.5                                  /lib/x86_64-linux-gnu/libc.so.6
+ pututline                                         /lib/x86_64-linux-gnu/libc.so.6
+ pututline@@GLIBC_2.2.5                            /lib/x86_64-linux-gnu/libc.so.6
+ pututline@GLIBC_2.2.5                             /lib/x86_64-linux-gnu/libc.so.6
+ pvalloc                                           /lib/x86_64-linux-gnu/libc.so.6
+ pvalloc@@GLIBC_2.2.5                              /lib/x86_64-linux-gnu/libc.so.6
+ pvalloc@GLIBC_2.2.5                               /lib/x86_64-linux-gnu/libc.so.6
+ pwrite                                            /lib/x86_64-linux-gnu/libc.so.6
+ pwrite64                                          /lib/x86_64-linux-gnu/libc.so.6
+ pwrite64@@GLIBC_2.2.5                             /lib/x86_64-linux-gnu/libc.so.6
+ pwrite64@GLIBC_2.2.5                              /lib/x86_64-linux-gnu/libc.so.6
+ pwrite@@GLIBC_2.2.5                               /lib/x86_64-linux-gnu/libc.so.6
+ pwrite@GLIBC_2.2.5                                /lib/x86_64-linux-gnu/libc.so.6
+ qecvt_r                                           /lib/x86_64-linux-gnu/libc.so.6
+ qecvt_r@@GLIBC_2.2.5                              /lib/x86_64-linux-gnu/libc.so.6
+ qecvt_r@GLIBC_2.2.5                               /lib/x86_64-linux-gnu/libc.so.6
+ qfcvt_r                                           /lib/x86_64-linux-gnu/libc.so.6
+ qfcvt_r@@GLIBC_2.2.5                              /lib/x86_64-linux-gnu/libc.so.6
+ qfcvt_r@GLIBC_2.2.5                               /lib/x86_64-linux-gnu/libc.so.6
+ qsort_r                                           /lib/x86_64-linux-gnu/libc.so.6
+ qsort_r@@GLIBC_2.8                                /lib/x86_64-linux-gnu/libc.so.6
+ qsort_r@GLIBC_2.8                                 /lib/x86_64-linux-gnu/libc.so.6
+ qstr_compute_hash                                 build/py/qstr.o
+                                                   build/py/objstr.o
+                                                   build/py/objexcept.o
+                                                   build/py/runtime.o
+ qstr_data                                         build/py/qstr.o
+                                                   build/py/objstrunicode.o
+                                                   build/py/objstr.o
+                                                   build/py/runtime.o
+                                                   build/py/persistentcode.o
+                                                   build/py/emitinlinextensa.o
+                                                   build/py/emitinlinethumb.o
+                                                   build/py/compile.o
+                                                   build/py/mpprint.o
+ qstr_find_strn                                    build/py/qstr.o
+                                                   build/py/objstr.o
+                                                   build/py/parse.o
+ qstr_from_str                                     build/py/qstr.o
+                                                   build/main.o
+                                                   build/py/lexer.o
+ qstr_from_strn                                    build/py/qstr.o
+                                                   build/py/builtinimport.o
+                                                   build/py/objstr.o
+                                                   build/py/runtime.o
+                                                   build/py/compile.o
+                                                   build/py/parse.o
+ qstr_hash                                         build/py/qstr.o
+                                                   build/py/objstr.o
+                                                   build/py/map.o
+                                                   build/py/runtime.o
+ qstr_init                                         build/py/qstr.o
+                                                   build/py/runtime.o
+ qstr_len                                          build/py/qstr.o
+                                                   build/py/objstr.o
+                                                   build/py/runtime.o
+                                                   build/py/compile.o
+ qstr_pool_info                                    build/py/qstr.o
+ qstr_str                                          build/py/qstr.o
+                                                   build/py/builtinimport.o
+                                                   build/py/objtype.o
+                                                   build/py/objexcept.o
+                                                   build/py/obj.o
+                                                   build/py/runtime.o
+                                                   build/py/emitinlinextensa.o
+                                                   build/py/emitinlinethumb.o
+                                                   build/py/parse.o
+ random                                            /lib/x86_64-linux-gnu/libc.so.6
+ random@@GLIBC_2.2.5                               /lib/x86_64-linux-gnu/libc.so.6
+ random@GLIBC_2.2.5                                /lib/x86_64-linux-gnu/libc.so.6
+ random_r                                          /lib/x86_64-linux-gnu/libc.so.6
+ random_r@@GLIBC_2.2.5                             /lib/x86_64-linux-gnu/libc.so.6
+ random_r@GLIBC_2.2.5                              /lib/x86_64-linux-gnu/libc.so.6
+ rawmemchr                                         /lib/x86_64-linux-gnu/libc.so.6
+ rawmemchr@@GLIBC_2.2.5                            /lib/x86_64-linux-gnu/libc.so.6
+ rawmemchr@GLIBC_2.2.5                             /lib/x86_64-linux-gnu/libc.so.6
+ re_comp                                           /lib/x86_64-linux-gnu/libc.so.6
+ re_comp@@GLIBC_2.2.5                              /lib/x86_64-linux-gnu/libc.so.6
+ re_comp@GLIBC_2.2.5                               /lib/x86_64-linux-gnu/libc.so.6
+ re_compile_fastmap                                /lib/x86_64-linux-gnu/libc.so.6
+ re_compile_fastmap@@GLIBC_2.2.5                   /lib/x86_64-linux-gnu/libc.so.6
+ re_compile_fastmap@GLIBC_2.2.5                    /lib/x86_64-linux-gnu/libc.so.6
+ re_compile_pattern                                /lib/x86_64-linux-gnu/libc.so.6
+ re_compile_pattern@@GLIBC_2.2.5                   /lib/x86_64-linux-gnu/libc.so.6
+ re_compile_pattern@GLIBC_2.2.5                    /lib/x86_64-linux-gnu/libc.so.6
+ re_exec                                           /lib/x86_64-linux-gnu/libc.so.6
+ re_exec@@GLIBC_2.2.5                              /lib/x86_64-linux-gnu/libc.so.6
+ re_exec@GLIBC_2.2.5                               /lib/x86_64-linux-gnu/libc.so.6
+ re_match                                          /lib/x86_64-linux-gnu/libc.so.6
+ re_match@@GLIBC_2.2.5                             /lib/x86_64-linux-gnu/libc.so.6
+ re_match@GLIBC_2.2.5                              /lib/x86_64-linux-gnu/libc.so.6
+ re_match_2                                        /lib/x86_64-linux-gnu/libc.so.6
+ re_match_2@@GLIBC_2.2.5                           /lib/x86_64-linux-gnu/libc.so.6
+ re_match_2@GLIBC_2.2.5                            /lib/x86_64-linux-gnu/libc.so.6
+ re_search                                         /lib/x86_64-linux-gnu/libc.so.6
+ re_search@@GLIBC_2.2.5                            /lib/x86_64-linux-gnu/libc.so.6
+ re_search@GLIBC_2.2.5                             /lib/x86_64-linux-gnu/libc.so.6
+ re_search_2                                       /lib/x86_64-linux-gnu/libc.so.6
+ re_search_2@@GLIBC_2.2.5                          /lib/x86_64-linux-gnu/libc.so.6
+ re_search_2@GLIBC_2.2.5                           /lib/x86_64-linux-gnu/libc.so.6
+ re_set_registers                                  /lib/x86_64-linux-gnu/libc.so.6
+ re_set_registers@@GLIBC_2.2.5                     /lib/x86_64-linux-gnu/libc.so.6
+ re_set_registers@GLIBC_2.2.5                      /lib/x86_64-linux-gnu/libc.so.6
+ re_set_syntax                                     /lib/x86_64-linux-gnu/libc.so.6
+ re_set_syntax@@GLIBC_2.2.5                        /lib/x86_64-linux-gnu/libc.so.6
+ re_set_syntax@GLIBC_2.2.5                         /lib/x86_64-linux-gnu/libc.so.6
+ readahead                                         /lib/x86_64-linux-gnu/libc.so.6
+ readahead@@GLIBC_2.3                              /lib/x86_64-linux-gnu/libc.so.6
+ readahead@GLIBC_2.3                               /lib/x86_64-linux-gnu/libc.so.6
+ readdir                                           /lib/x86_64-linux-gnu/libc.so.6
+ readdir64                                         /lib/x86_64-linux-gnu/libc.so.6
+ readdir64@@GLIBC_2.2.5                            /lib/x86_64-linux-gnu/libc.so.6
+ readdir64@GLIBC_2.2.5                             /lib/x86_64-linux-gnu/libc.so.6
+ readdir64_r                                       /lib/x86_64-linux-gnu/libc.so.6
+ readdir64_r@@GLIBC_2.2.5                          /lib/x86_64-linux-gnu/libc.so.6
+ readdir64_r@GLIBC_2.2.5                           /lib/x86_64-linux-gnu/libc.so.6
+ readdir@@GLIBC_2.2.5                              /lib/x86_64-linux-gnu/libc.so.6
+ readdir@GLIBC_2.2.5                               /lib/x86_64-linux-gnu/libc.so.6
+ readdir_r                                         /lib/x86_64-linux-gnu/libc.so.6
+ readdir_r@@GLIBC_2.2.5                            /lib/x86_64-linux-gnu/libc.so.6
+ readdir_r@GLIBC_2.2.5                             /lib/x86_64-linux-gnu/libc.so.6
+ readlink                                          /lib/x86_64-linux-gnu/libc.so.6
+ readlink@@GLIBC_2.2.5                             /lib/x86_64-linux-gnu/libc.so.6
+ readlink@GLIBC_2.2.5                              /lib/x86_64-linux-gnu/libc.so.6
+ readv                                             /lib/x86_64-linux-gnu/libc.so.6
+ readv@@GLIBC_2.2.5                                /lib/x86_64-linux-gnu/libc.so.6
+ readv@GLIBC_2.2.5                                 /lib/x86_64-linux-gnu/libc.so.6
+ reallocarray                                      /lib/x86_64-linux-gnu/libc.so.6
+ reallocarray@@GLIBC_2.26                          /lib/x86_64-linux-gnu/libc.so.6
+ reallocarray@GLIBC_2.26                           /lib/x86_64-linux-gnu/libc.so.6
+ recv                                              /lib/x86_64-linux-gnu/libc.so.6
+ recv@@GLIBC_2.2.5                                 /lib/x86_64-linux-gnu/libc.so.6
+ recv@GLIBC_2.2.5                                  /lib/x86_64-linux-gnu/libc.so.6
+ recvfrom                                          /lib/x86_64-linux-gnu/libc.so.6
+ recvfrom@@GLIBC_2.2.5                             /lib/x86_64-linux-gnu/libc.so.6
+ recvfrom@GLIBC_2.2.5                              /lib/x86_64-linux-gnu/libc.so.6
+ recvmsg                                           /lib/x86_64-linux-gnu/libc.so.6
+ recvmsg@@GLIBC_2.2.5                              /lib/x86_64-linux-gnu/libc.so.6
+ recvmsg@GLIBC_2.2.5                               /lib/x86_64-linux-gnu/libc.so.6
+ regcomp                                           /lib/x86_64-linux-gnu/libc.so.6
+ regcomp@@GLIBC_2.2.5                              /lib/x86_64-linux-gnu/libc.so.6
+ regcomp@GLIBC_2.2.5                               /lib/x86_64-linux-gnu/libc.so.6
+ regerror                                          /lib/x86_64-linux-gnu/libc.so.6
+ regerror@@GLIBC_2.2.5                             /lib/x86_64-linux-gnu/libc.so.6
+ regerror@GLIBC_2.2.5                              /lib/x86_64-linux-gnu/libc.so.6
+ regfree                                           /lib/x86_64-linux-gnu/libc.so.6
+ regfree@@GLIBC_2.2.5                              /lib/x86_64-linux-gnu/libc.so.6
+ regfree@GLIBC_2.2.5                               /lib/x86_64-linux-gnu/libc.so.6
+ register_printf_function                          /lib/x86_64-linux-gnu/libc.so.6
+ register_printf_function@@GLIBC_2.2.5             /lib/x86_64-linux-gnu/libc.so.6
+ register_printf_function@GLIBC_2.2.5              /lib/x86_64-linux-gnu/libc.so.6
+ register_printf_modifier                          /lib/x86_64-linux-gnu/libc.so.6
+ register_printf_modifier@@GLIBC_2.10              /lib/x86_64-linux-gnu/libc.so.6
+ register_printf_modifier@GLIBC_2.10               /lib/x86_64-linux-gnu/libc.so.6
+ register_printf_specifier                         /lib/x86_64-linux-gnu/libc.so.6
+ register_printf_specifier@@GLIBC_2.10             /lib/x86_64-linux-gnu/libc.so.6
+ register_printf_specifier@GLIBC_2.10              /lib/x86_64-linux-gnu/libc.so.6
+ register_printf_type                              /lib/x86_64-linux-gnu/libc.so.6
+ register_printf_type@@GLIBC_2.10                  /lib/x86_64-linux-gnu/libc.so.6
+ register_printf_type@GLIBC_2.10                   /lib/x86_64-linux-gnu/libc.so.6
+ remainder                                         /lib/x86_64-linux-gnu/libm.so.6
+ remainder@@GLIBC_2.2.5                            /lib/x86_64-linux-gnu/libm.so.6
+ remainder@GLIBC_2.2.5                             /lib/x86_64-linux-gnu/libm.so.6
+ remainderf                                        /lib/x86_64-linux-gnu/libm.so.6
+ remainderf128                                     /lib/x86_64-linux-gnu/libm.so.6
+ remainderf128@@GLIBC_2.26                         /lib/x86_64-linux-gnu/libm.so.6
+ remainderf128@GLIBC_2.26                          /lib/x86_64-linux-gnu/libm.so.6
+ remainderf32                                      /lib/x86_64-linux-gnu/libm.so.6
+ remainderf32@@GLIBC_2.27                          /lib/x86_64-linux-gnu/libm.so.6
+ remainderf32@GLIBC_2.27                           /lib/x86_64-linux-gnu/libm.so.6
+ remainderf32x                                     /lib/x86_64-linux-gnu/libm.so.6
+ remainderf32x@@GLIBC_2.27                         /lib/x86_64-linux-gnu/libm.so.6
+ remainderf32x@GLIBC_2.27                          /lib/x86_64-linux-gnu/libm.so.6
+ remainderf64                                      /lib/x86_64-linux-gnu/libm.so.6
+ remainderf64@@GLIBC_2.27                          /lib/x86_64-linux-gnu/libm.so.6
+ remainderf64@GLIBC_2.27                           /lib/x86_64-linux-gnu/libm.so.6
+ remainderf64x                                     /lib/x86_64-linux-gnu/libm.so.6
+ remainderf64x@@GLIBC_2.27                         /lib/x86_64-linux-gnu/libm.so.6
+ remainderf64x@GLIBC_2.27                          /lib/x86_64-linux-gnu/libm.so.6
+ remainderf@@GLIBC_2.2.5                           /lib/x86_64-linux-gnu/libm.so.6
+ remainderf@GLIBC_2.2.5                            /lib/x86_64-linux-gnu/libm.so.6
+ remainderl                                        /lib/x86_64-linux-gnu/libm.so.6
+ remainderl@@GLIBC_2.2.5                           /lib/x86_64-linux-gnu/libm.so.6
+ remainderl@GLIBC_2.2.5                            /lib/x86_64-linux-gnu/libm.so.6
+ remap_file_pages                                  /lib/x86_64-linux-gnu/libc.so.6
+ remap_file_pages@@GLIBC_2.3.3                     /lib/x86_64-linux-gnu/libc.so.6
+ remap_file_pages@GLIBC_2.3.3                      /lib/x86_64-linux-gnu/libc.so.6
+ remquo                                            /lib/x86_64-linux-gnu/libm.so.6
+ remquo@@GLIBC_2.2.5                               /lib/x86_64-linux-gnu/libm.so.6
+ remquo@GLIBC_2.2.5                                /lib/x86_64-linux-gnu/libm.so.6
+ remquof                                           /lib/x86_64-linux-gnu/libm.so.6
+ remquof128                                        /lib/x86_64-linux-gnu/libm.so.6
+ remquof128@@GLIBC_2.26                            /lib/x86_64-linux-gnu/libm.so.6
+ remquof128@GLIBC_2.26                             /lib/x86_64-linux-gnu/libm.so.6
+ remquof32                                         /lib/x86_64-linux-gnu/libm.so.6
+ remquof32@@GLIBC_2.27                             /lib/x86_64-linux-gnu/libm.so.6
+ remquof32@GLIBC_2.27                              /lib/x86_64-linux-gnu/libm.so.6
+ remquof32x                                        /lib/x86_64-linux-gnu/libm.so.6
+ remquof32x@@GLIBC_2.27                            /lib/x86_64-linux-gnu/libm.so.6
+ remquof32x@GLIBC_2.27                             /lib/x86_64-linux-gnu/libm.so.6
+ remquof64                                         /lib/x86_64-linux-gnu/libm.so.6
+ remquof64@@GLIBC_2.27                             /lib/x86_64-linux-gnu/libm.so.6
+ remquof64@GLIBC_2.27                              /lib/x86_64-linux-gnu/libm.so.6
+ remquof64x                                        /lib/x86_64-linux-gnu/libm.so.6
+ remquof64x@@GLIBC_2.27                            /lib/x86_64-linux-gnu/libm.so.6
+ remquof64x@GLIBC_2.27                             /lib/x86_64-linux-gnu/libm.so.6
+ remquof@@GLIBC_2.2.5                              /lib/x86_64-linux-gnu/libm.so.6
+ remquof@GLIBC_2.2.5                               /lib/x86_64-linux-gnu/libm.so.6
+ remquol                                           /lib/x86_64-linux-gnu/libm.so.6
+ remquol@@GLIBC_2.2.5                              /lib/x86_64-linux-gnu/libm.so.6
+ remquol@GLIBC_2.2.5                               /lib/x86_64-linux-gnu/libm.so.6
+ revoke                                            /lib/x86_64-linux-gnu/libc.so.6
+ revoke@@GLIBC_2.2.5                               /lib/x86_64-linux-gnu/libc.so.6
+ revoke@GLIBC_2.2.5                                /lib/x86_64-linux-gnu/libc.so.6
+ rewinddir                                         /lib/x86_64-linux-gnu/libc.so.6
+ rewinddir@@GLIBC_2.2.5                            /lib/x86_64-linux-gnu/libc.so.6
+ rewinddir@GLIBC_2.2.5                             /lib/x86_64-linux-gnu/libc.so.6
+ rindex                                            /lib/x86_64-linux-gnu/libc.so.6
+ rindex@@GLIBC_2.2.5                               /lib/x86_64-linux-gnu/libc.so.6
+ rindex@GLIBC_2.2.5                                /lib/x86_64-linux-gnu/libc.so.6
+ ringbuf_get16                                     build/py/ringbuf.o
+ ringbuf_peek16                                    build/py/ringbuf.o
+ ringbuf_put16                                     build/py/ringbuf.o
+ rint                                              /lib/x86_64-linux-gnu/libm.so.6
+ rint@@GLIBC_2.2.5                                 /lib/x86_64-linux-gnu/libm.so.6
+ rint@GLIBC_2.2.5                                  /lib/x86_64-linux-gnu/libm.so.6
+ rintf                                             /lib/x86_64-linux-gnu/libm.so.6
+ rintf128                                          /lib/x86_64-linux-gnu/libm.so.6
+ rintf128@@GLIBC_2.26                              /lib/x86_64-linux-gnu/libm.so.6
+ rintf128@GLIBC_2.26                               /lib/x86_64-linux-gnu/libm.so.6
+ rintf32                                           /lib/x86_64-linux-gnu/libm.so.6
+ rintf32@@GLIBC_2.27                               /lib/x86_64-linux-gnu/libm.so.6
+ rintf32@GLIBC_2.27                                /lib/x86_64-linux-gnu/libm.so.6
+ rintf32x                                          /lib/x86_64-linux-gnu/libm.so.6
+ rintf32x@@GLIBC_2.27                              /lib/x86_64-linux-gnu/libm.so.6
+ rintf32x@GLIBC_2.27                               /lib/x86_64-linux-gnu/libm.so.6
+ rintf64                                           /lib/x86_64-linux-gnu/libm.so.6
+ rintf64@@GLIBC_2.27                               /lib/x86_64-linux-gnu/libm.so.6
+ rintf64@GLIBC_2.27                                /lib/x86_64-linux-gnu/libm.so.6
+ rintf64x                                          /lib/x86_64-linux-gnu/libm.so.6
+ rintf64x@@GLIBC_2.27                              /lib/x86_64-linux-gnu/libm.so.6
+ rintf64x@GLIBC_2.27                               /lib/x86_64-linux-gnu/libm.so.6
+ rintf@@GLIBC_2.2.5                                /lib/x86_64-linux-gnu/libm.so.6
+ rintf@GLIBC_2.2.5                                 /lib/x86_64-linux-gnu/libm.so.6
+ rintl                                             /lib/x86_64-linux-gnu/libm.so.6
+ rintl@@GLIBC_2.2.5                                /lib/x86_64-linux-gnu/libm.so.6
+ rintl@GLIBC_2.2.5                                 /lib/x86_64-linux-gnu/libm.so.6
+ rmdir                                             /lib/x86_64-linux-gnu/libc.so.6
+ rmdir@@GLIBC_2.2.5                                /lib/x86_64-linux-gnu/libc.so.6
+ rmdir@GLIBC_2.2.5                                 /lib/x86_64-linux-gnu/libc.so.6
+ round                                             /lib/x86_64-linux-gnu/libm.so.6
+ round@@GLIBC_2.2.5                                /lib/x86_64-linux-gnu/libm.so.6
+ round@GLIBC_2.2.5                                 /lib/x86_64-linux-gnu/libm.so.6
+ roundeven                                         /lib/x86_64-linux-gnu/libm.so.6
+ roundeven@@GLIBC_2.25                             /lib/x86_64-linux-gnu/libm.so.6
+ roundeven@GLIBC_2.25                              /lib/x86_64-linux-gnu/libm.so.6
+ roundevenf                                        /lib/x86_64-linux-gnu/libm.so.6
+ roundevenf128                                     /lib/x86_64-linux-gnu/libm.so.6
+ roundevenf128@@GLIBC_2.26                         /lib/x86_64-linux-gnu/libm.so.6
+ roundevenf128@GLIBC_2.26                          /lib/x86_64-linux-gnu/libm.so.6
+ roundevenf32                                      /lib/x86_64-linux-gnu/libm.so.6
+ roundevenf32@@GLIBC_2.27                          /lib/x86_64-linux-gnu/libm.so.6
+ roundevenf32@GLIBC_2.27                           /lib/x86_64-linux-gnu/libm.so.6
+ roundevenf32x                                     /lib/x86_64-linux-gnu/libm.so.6
+ roundevenf32x@@GLIBC_2.27                         /lib/x86_64-linux-gnu/libm.so.6
+ roundevenf32x@GLIBC_2.27                          /lib/x86_64-linux-gnu/libm.so.6
+ roundevenf64                                      /lib/x86_64-linux-gnu/libm.so.6
+ roundevenf64@@GLIBC_2.27                          /lib/x86_64-linux-gnu/libm.so.6
+ roundevenf64@GLIBC_2.27                           /lib/x86_64-linux-gnu/libm.so.6
+ roundevenf64x                                     /lib/x86_64-linux-gnu/libm.so.6
+ roundevenf64x@@GLIBC_2.27                         /lib/x86_64-linux-gnu/libm.so.6
+ roundevenf64x@GLIBC_2.27                          /lib/x86_64-linux-gnu/libm.so.6
+ roundevenf@@GLIBC_2.25                            /lib/x86_64-linux-gnu/libm.so.6
+ roundevenf@GLIBC_2.25                             /lib/x86_64-linux-gnu/libm.so.6
+ roundevenl                                        /lib/x86_64-linux-gnu/libm.so.6
+ roundevenl@@GLIBC_2.25                            /lib/x86_64-linux-gnu/libm.so.6
+ roundevenl@GLIBC_2.25                             /lib/x86_64-linux-gnu/libm.so.6
+ roundf                                            /lib/x86_64-linux-gnu/libm.so.6
+ roundf128                                         /lib/x86_64-linux-gnu/libm.so.6
+ roundf128@@GLIBC_2.26                             /lib/x86_64-linux-gnu/libm.so.6
+ roundf128@GLIBC_2.26                              /lib/x86_64-linux-gnu/libm.so.6
+ roundf32                                          /lib/x86_64-linux-gnu/libm.so.6
+ roundf32@@GLIBC_2.27                              /lib/x86_64-linux-gnu/libm.so.6
+ roundf32@GLIBC_2.27                               /lib/x86_64-linux-gnu/libm.so.6
+ roundf32x                                         /lib/x86_64-linux-gnu/libm.so.6
+ roundf32x@@GLIBC_2.27                             /lib/x86_64-linux-gnu/libm.so.6
+ roundf32x@GLIBC_2.27                              /lib/x86_64-linux-gnu/libm.so.6
+ roundf64                                          /lib/x86_64-linux-gnu/libm.so.6
+ roundf64@@GLIBC_2.27                              /lib/x86_64-linux-gnu/libm.so.6
+ roundf64@GLIBC_2.27                               /lib/x86_64-linux-gnu/libm.so.6
+ roundf64x                                         /lib/x86_64-linux-gnu/libm.so.6
+ roundf64x@@GLIBC_2.27                             /lib/x86_64-linux-gnu/libm.so.6
+ roundf64x@GLIBC_2.27                              /lib/x86_64-linux-gnu/libm.so.6
+ roundf@@GLIBC_2.2.5                               /lib/x86_64-linux-gnu/libm.so.6
+ roundf@GLIBC_2.2.5                                /lib/x86_64-linux-gnu/libm.so.6
+ roundl                                            /lib/x86_64-linux-gnu/libm.so.6
+ roundl@@GLIBC_2.2.5                               /lib/x86_64-linux-gnu/libm.so.6
+ roundl@GLIBC_2.2.5                                /lib/x86_64-linux-gnu/libm.so.6
+ sbrk                                              /lib/x86_64-linux-gnu/libc.so.6
+ sbrk@@GLIBC_2.2.5                                 /lib/x86_64-linux-gnu/libc.so.6
+ sbrk@GLIBC_2.2.5                                  /lib/x86_64-linux-gnu/libc.so.6
+ scalb                                             /lib/x86_64-linux-gnu/libm.so.6
+ scalb@@GLIBC_2.2.5                                /lib/x86_64-linux-gnu/libm.so.6
+ scalb@GLIBC_2.2.5                                 /lib/x86_64-linux-gnu/libm.so.6
+ scalbf                                            /lib/x86_64-linux-gnu/libm.so.6
+ scalbf@@GLIBC_2.2.5                               /lib/x86_64-linux-gnu/libm.so.6
+ scalbf@GLIBC_2.2.5                                /lib/x86_64-linux-gnu/libm.so.6
+ scalbl                                            /lib/x86_64-linux-gnu/libm.so.6
+ scalbl@@GLIBC_2.2.5                               /lib/x86_64-linux-gnu/libm.so.6
+ scalbl@GLIBC_2.2.5                                /lib/x86_64-linux-gnu/libm.so.6
+ scalbln                                           /lib/x86_64-linux-gnu/libm.so.6
+ scalbln@@GLIBC_2.2.5                              /lib/x86_64-linux-gnu/libm.so.6
+ scalbln@GLIBC_2.2.5                               /lib/x86_64-linux-gnu/libm.so.6
+ scalblnf                                          /lib/x86_64-linux-gnu/libm.so.6
+ scalblnf128                                       /lib/x86_64-linux-gnu/libm.so.6
+ scalblnf128@@GLIBC_2.26                           /lib/x86_64-linux-gnu/libm.so.6
+ scalblnf128@GLIBC_2.26                            /lib/x86_64-linux-gnu/libm.so.6
+ scalblnf32                                        /lib/x86_64-linux-gnu/libm.so.6
+ scalblnf32@@GLIBC_2.27                            /lib/x86_64-linux-gnu/libm.so.6
+ scalblnf32@GLIBC_2.27                             /lib/x86_64-linux-gnu/libm.so.6
+ scalblnf32x                                       /lib/x86_64-linux-gnu/libm.so.6
+ scalblnf32x@@GLIBC_2.27                           /lib/x86_64-linux-gnu/libm.so.6
+ scalblnf32x@GLIBC_2.27                            /lib/x86_64-linux-gnu/libm.so.6
+ scalblnf64                                        /lib/x86_64-linux-gnu/libm.so.6
+ scalblnf64@@GLIBC_2.27                            /lib/x86_64-linux-gnu/libm.so.6
+ scalblnf64@GLIBC_2.27                             /lib/x86_64-linux-gnu/libm.so.6
+ scalblnf64x                                       /lib/x86_64-linux-gnu/libm.so.6
+ scalblnf64x@@GLIBC_2.27                           /lib/x86_64-linux-gnu/libm.so.6
+ scalblnf64x@GLIBC_2.27                            /lib/x86_64-linux-gnu/libm.so.6
+ scalblnf@@GLIBC_2.2.5                             /lib/x86_64-linux-gnu/libm.so.6
+ scalblnf@GLIBC_2.2.5                              /lib/x86_64-linux-gnu/libm.so.6
+ scalblnl                                          /lib/x86_64-linux-gnu/libm.so.6
+ scalblnl@@GLIBC_2.2.5                             /lib/x86_64-linux-gnu/libm.so.6
+ scalblnl@GLIBC_2.2.5                              /lib/x86_64-linux-gnu/libm.so.6
+ scalbn                                            /lib/x86_64-linux-gnu/libm.so.6
+ scalbn@@GLIBC_2.2.5                               /lib/x86_64-linux-gnu/libm.so.6
+                                                   /lib/x86_64-linux-gnu/libc.so.6
+ scalbn@GLIBC_2.2.5                                /lib/x86_64-linux-gnu/libm.so.6
+ scalbnf                                           /lib/x86_64-linux-gnu/libm.so.6
+ scalbnf128                                        /lib/x86_64-linux-gnu/libm.so.6
+ scalbnf128@@GLIBC_2.26                            /lib/x86_64-linux-gnu/libm.so.6
+ scalbnf128@GLIBC_2.26                             /lib/x86_64-linux-gnu/libm.so.6
+ scalbnf32                                         /lib/x86_64-linux-gnu/libm.so.6
+ scalbnf32@@GLIBC_2.27                             /lib/x86_64-linux-gnu/libm.so.6
+ scalbnf32@GLIBC_2.27                              /lib/x86_64-linux-gnu/libm.so.6
+ scalbnf32x                                        /lib/x86_64-linux-gnu/libm.so.6
+ scalbnf32x@@GLIBC_2.27                            /lib/x86_64-linux-gnu/libm.so.6
+ scalbnf32x@GLIBC_2.27                             /lib/x86_64-linux-gnu/libm.so.6
+ scalbnf64                                         /lib/x86_64-linux-gnu/libm.so.6
+ scalbnf64@@GLIBC_2.27                             /lib/x86_64-linux-gnu/libm.so.6
+ scalbnf64@GLIBC_2.27                              /lib/x86_64-linux-gnu/libm.so.6
+ scalbnf64x                                        /lib/x86_64-linux-gnu/libm.so.6
+ scalbnf64x@@GLIBC_2.27                            /lib/x86_64-linux-gnu/libm.so.6
+ scalbnf64x@GLIBC_2.27                             /lib/x86_64-linux-gnu/libm.so.6
+ scalbnf@@GLIBC_2.2.5                              /lib/x86_64-linux-gnu/libm.so.6
+                                                   /lib/x86_64-linux-gnu/libc.so.6
+ scalbnf@GLIBC_2.2.5                               /lib/x86_64-linux-gnu/libm.so.6
+ scalbnl                                           /lib/x86_64-linux-gnu/libm.so.6
+ scalbnl@@GLIBC_2.2.5                              /lib/x86_64-linux-gnu/libm.so.6
+                                                   /lib/x86_64-linux-gnu/libc.so.6
+ scalbnl@GLIBC_2.2.5                               /lib/x86_64-linux-gnu/libm.so.6
+ scandir64                                         /lib/x86_64-linux-gnu/libc.so.6
+ scandir64@@GLIBC_2.2.5                            /lib/x86_64-linux-gnu/libc.so.6
+ scandir64@GLIBC_2.2.5                             /lib/x86_64-linux-gnu/libc.so.6
+ scandirat                                         /lib/x86_64-linux-gnu/libc.so.6
+ scandirat64                                       /lib/x86_64-linux-gnu/libc.so.6
+ scandirat64@@GLIBC_2.15                           /lib/x86_64-linux-gnu/libc.so.6
+ scandirat64@GLIBC_2.15                            /lib/x86_64-linux-gnu/libc.so.6
+ scandirat@@GLIBC_2.15                             /lib/x86_64-linux-gnu/libc.so.6
+ scandirat@GLIBC_2.15                              /lib/x86_64-linux-gnu/libc.so.6
+ sched_get_priority_max                            /lib/x86_64-linux-gnu/libc.so.6
+ sched_get_priority_max@@GLIBC_2.2.5               /lib/x86_64-linux-gnu/libc.so.6
+ sched_get_priority_max@GLIBC_2.2.5                /lib/x86_64-linux-gnu/libc.so.6
+ sched_get_priority_min                            /lib/x86_64-linux-gnu/libc.so.6
+ sched_get_priority_min@@GLIBC_2.2.5               /lib/x86_64-linux-gnu/libc.so.6
+ sched_get_priority_min@GLIBC_2.2.5                /lib/x86_64-linux-gnu/libc.so.6
+ sched_getparam                                    /lib/x86_64-linux-gnu/libc.so.6
+ sched_getparam@@GLIBC_2.2.5                       /lib/x86_64-linux-gnu/libc.so.6
+ sched_getparam@GLIBC_2.2.5                        /lib/x86_64-linux-gnu/libc.so.6
+ sched_getscheduler                                /lib/x86_64-linux-gnu/libc.so.6
+ sched_getscheduler@@GLIBC_2.2.5                   /lib/x86_64-linux-gnu/libc.so.6
+ sched_getscheduler@GLIBC_2.2.5                    /lib/x86_64-linux-gnu/libc.so.6
+ sched_rr_get_interval                             /lib/x86_64-linux-gnu/libc.so.6
+ sched_rr_get_interval@@GLIBC_2.2.5                /lib/x86_64-linux-gnu/libc.so.6
+ sched_rr_get_interval@GLIBC_2.2.5                 /lib/x86_64-linux-gnu/libc.so.6
+ sched_setparam                                    /lib/x86_64-linux-gnu/libc.so.6
+ sched_setparam@@GLIBC_2.2.5                       /lib/x86_64-linux-gnu/libc.so.6
+ sched_setparam@GLIBC_2.2.5                        /lib/x86_64-linux-gnu/libc.so.6
+ sched_setscheduler                                /lib/x86_64-linux-gnu/libc.so.6
+ sched_setscheduler@@GLIBC_2.2.5                   /lib/x86_64-linux-gnu/libc.so.6
+ sched_setscheduler@GLIBC_2.2.5                    /lib/x86_64-linux-gnu/libc.so.6
+ sched_yield                                       /lib/x86_64-linux-gnu/libc.so.6
+ sched_yield@@GLIBC_2.2.5                          /lib/x86_64-linux-gnu/libc.so.6
+ sched_yield@GLIBC_2.2.5                           /lib/x86_64-linux-gnu/libc.so.6
+ scope_check_to_close_over                         build/py/scope.o
+                                                   build/py/compile.o
+ scope_find                                        build/py/scope.o
+                                                   build/py/emitcommon.o
+                                                   build/py/compile.o
+ scope_find_global                                 build/py/scope.o
+                                                   build/py/compile.o
+ scope_find_or_add_id                              build/py/scope.o
+                                                   build/py/emitcommon.o
+                                                   build/py/compile.o
+ scope_free                                        build/py/scope.o
+                                                   build/py/compile.o
+ scope_new                                         build/py/scope.o
+                                                   build/py/compile.o
+ secure_getenv                                     /lib/x86_64-linux-gnu/libc.so.6
+ secure_getenv@@GLIBC_2.17                         /lib/x86_64-linux-gnu/libc.so.6
+ secure_getenv@GLIBC_2.17                          /lib/x86_64-linux-gnu/libc.so.6
+ seed48_r                                          /lib/x86_64-linux-gnu/libc.so.6
+ seed48_r@@GLIBC_2.2.5                             /lib/x86_64-linux-gnu/libc.so.6
+ seed48_r@GLIBC_2.2.5                              /lib/x86_64-linux-gnu/libc.so.6
+ select                                            /lib/x86_64-linux-gnu/libc.so.6
+ select@@GLIBC_2.2.5                               /lib/x86_64-linux-gnu/libc.so.6
+ select@GLIBC_2.2.5                                /lib/x86_64-linux-gnu/libc.so.6
+ send                                              /lib/x86_64-linux-gnu/libc.so.6
+ send@@GLIBC_2.2.5                                 /lib/x86_64-linux-gnu/libc.so.6
+ send@GLIBC_2.2.5                                  /lib/x86_64-linux-gnu/libc.so.6
+ sendfile64                                        /lib/x86_64-linux-gnu/libc.so.6
+ sendfile64@@GLIBC_2.3                             /lib/x86_64-linux-gnu/libc.so.6
+ sendfile64@GLIBC_2.3                              /lib/x86_64-linux-gnu/libc.so.6
+ sendmmsg                                          /lib/x86_64-linux-gnu/libc.so.6
+ sendmmsg@@GLIBC_2.14                              /lib/x86_64-linux-gnu/libc.so.6
+ sendmmsg@GLIBC_2.14                               /lib/x86_64-linux-gnu/libc.so.6
+ sendmsg                                           /lib/x86_64-linux-gnu/libc.so.6
+ sendmsg@@GLIBC_2.2.5                              /lib/x86_64-linux-gnu/libc.so.6
+ sendmsg@GLIBC_2.2.5                               /lib/x86_64-linux-gnu/libc.so.6
+ sendto                                            /lib/x86_64-linux-gnu/libc.so.6
+ sendto@@GLIBC_2.2.5                               /lib/x86_64-linux-gnu/libc.so.6
+ sendto@GLIBC_2.2.5                                /lib/x86_64-linux-gnu/libc.so.6
+ setbuffer                                         /lib/x86_64-linux-gnu/libc.so.6
+ setbuffer@@GLIBC_2.2.5                            /lib/x86_64-linux-gnu/libc.so.6
+ setbuffer@GLIBC_2.2.5                             /lib/x86_64-linux-gnu/libc.so.6
+ setcontext                                        /lib/x86_64-linux-gnu/libc.so.6
+ setcontext@@GLIBC_2.2.5                           /lib/x86_64-linux-gnu/libc.so.6
+ setcontext@GLIBC_2.2.5                            /lib/x86_64-linux-gnu/libc.so.6
+ setenv                                            /lib/x86_64-linux-gnu/libc.so.6
+ setenv@@GLIBC_2.2.5                               /lib/x86_64-linux-gnu/libc.so.6
+ setenv@GLIBC_2.2.5                                /lib/x86_64-linux-gnu/libc.so.6
+ setgid                                            /lib/x86_64-linux-gnu/libc.so.6
+ setgid@@GLIBC_2.2.5                               /lib/x86_64-linux-gnu/libc.so.6
+ setgid@GLIBC_2.2.5                                /lib/x86_64-linux-gnu/libc.so.6
+ setitimer                                         /lib/x86_64-linux-gnu/libc.so.6
+ setitimer@@GLIBC_2.2.5                            /lib/x86_64-linux-gnu/libc.so.6
+ setitimer@GLIBC_2.2.5                             /lib/x86_64-linux-gnu/libc.so.6
+ setmntent                                         /lib/x86_64-linux-gnu/libc.so.6
+ setmntent@@GLIBC_2.2.5                            /lib/x86_64-linux-gnu/libc.so.6
+ setmntent@GLIBC_2.2.5                             /lib/x86_64-linux-gnu/libc.so.6
+ setpayload                                        /lib/x86_64-linux-gnu/libm.so.6
+ setpayload@@GLIBC_2.25                            /lib/x86_64-linux-gnu/libm.so.6
+ setpayload@GLIBC_2.25                             /lib/x86_64-linux-gnu/libm.so.6
+ setpayloadf                                       /lib/x86_64-linux-gnu/libm.so.6
+ setpayloadf128                                    /lib/x86_64-linux-gnu/libm.so.6
+ setpayloadf128@@GLIBC_2.26                        /lib/x86_64-linux-gnu/libm.so.6
+ setpayloadf128@GLIBC_2.26                         /lib/x86_64-linux-gnu/libm.so.6
+ setpayloadf32                                     /lib/x86_64-linux-gnu/libm.so.6
+ setpayloadf32@@GLIBC_2.27                         /lib/x86_64-linux-gnu/libm.so.6
+ setpayloadf32@GLIBC_2.27                          /lib/x86_64-linux-gnu/libm.so.6
+ setpayloadf32x                                    /lib/x86_64-linux-gnu/libm.so.6
+ setpayloadf32x@@GLIBC_2.27                        /lib/x86_64-linux-gnu/libm.so.6
+ setpayloadf32x@GLIBC_2.27                         /lib/x86_64-linux-gnu/libm.so.6
+ setpayloadf64                                     /lib/x86_64-linux-gnu/libm.so.6
+ setpayloadf64@@GLIBC_2.27                         /lib/x86_64-linux-gnu/libm.so.6
+ setpayloadf64@GLIBC_2.27                          /lib/x86_64-linux-gnu/libm.so.6
+ setpayloadf64x                                    /lib/x86_64-linux-gnu/libm.so.6
+ setpayloadf64x@@GLIBC_2.27                        /lib/x86_64-linux-gnu/libm.so.6
+ setpayloadf64x@GLIBC_2.27                         /lib/x86_64-linux-gnu/libm.so.6
+ setpayloadf@@GLIBC_2.25                           /lib/x86_64-linux-gnu/libm.so.6
+ setpayloadf@GLIBC_2.25                            /lib/x86_64-linux-gnu/libm.so.6
+ setpayloadl                                       /lib/x86_64-linux-gnu/libm.so.6
+ setpayloadl@@GLIBC_2.25                           /lib/x86_64-linux-gnu/libm.so.6
+ setpayloadl@GLIBC_2.25                            /lib/x86_64-linux-gnu/libm.so.6
+ setpayloadsig                                     /lib/x86_64-linux-gnu/libm.so.6
+ setpayloadsig@@GLIBC_2.25                         /lib/x86_64-linux-gnu/libm.so.6
+ setpayloadsig@GLIBC_2.25                          /lib/x86_64-linux-gnu/libm.so.6
+ setpayloadsigf                                    /lib/x86_64-linux-gnu/libm.so.6
+ setpayloadsigf128                                 /lib/x86_64-linux-gnu/libm.so.6
+ setpayloadsigf128@@GLIBC_2.26                     /lib/x86_64-linux-gnu/libm.so.6
+ setpayloadsigf128@GLIBC_2.26                      /lib/x86_64-linux-gnu/libm.so.6
+ setpayloadsigf32                                  /lib/x86_64-linux-gnu/libm.so.6
+ setpayloadsigf32@@GLIBC_2.27                      /lib/x86_64-linux-gnu/libm.so.6
+ setpayloadsigf32@GLIBC_2.27                       /lib/x86_64-linux-gnu/libm.so.6
+ setpayloadsigf32x                                 /lib/x86_64-linux-gnu/libm.so.6
+ setpayloadsigf32x@@GLIBC_2.27                     /lib/x86_64-linux-gnu/libm.so.6
+ setpayloadsigf32x@GLIBC_2.27                      /lib/x86_64-linux-gnu/libm.so.6
+ setpayloadsigf64                                  /lib/x86_64-linux-gnu/libm.so.6
+ setpayloadsigf64@@GLIBC_2.27                      /lib/x86_64-linux-gnu/libm.so.6
+ setpayloadsigf64@GLIBC_2.27                       /lib/x86_64-linux-gnu/libm.so.6
+ setpayloadsigf64x                                 /lib/x86_64-linux-gnu/libm.so.6
+ setpayloadsigf64x@@GLIBC_2.27                     /lib/x86_64-linux-gnu/libm.so.6
+ setpayloadsigf64x@GLIBC_2.27                      /lib/x86_64-linux-gnu/libm.so.6
+ setpayloadsigf@@GLIBC_2.25                        /lib/x86_64-linux-gnu/libm.so.6
+ setpayloadsigf@GLIBC_2.25                         /lib/x86_64-linux-gnu/libm.so.6
+ setpayloadsigl                                    /lib/x86_64-linux-gnu/libm.so.6
+ setpayloadsigl@@GLIBC_2.25                        /lib/x86_64-linux-gnu/libm.so.6
+ setpayloadsigl@GLIBC_2.25                         /lib/x86_64-linux-gnu/libm.so.6
+ setpgid                                           /lib/x86_64-linux-gnu/libc.so.6
+ setpgid@@GLIBC_2.2.5                              /lib/x86_64-linux-gnu/libc.so.6
+ setpgid@GLIBC_2.2.5                               /lib/x86_64-linux-gnu/libc.so.6
+ setpriority                                       /lib/x86_64-linux-gnu/libc.so.6
+ setpriority@@GLIBC_2.2.5                          /lib/x86_64-linux-gnu/libc.so.6
+ setpriority@GLIBC_2.2.5                           /lib/x86_64-linux-gnu/libc.so.6
+ setregid                                          /lib/x86_64-linux-gnu/libc.so.6
+ setregid@@GLIBC_2.2.5                             /lib/x86_64-linux-gnu/libc.so.6
+ setregid@GLIBC_2.2.5                              /lib/x86_64-linux-gnu/libc.so.6
+ setresgid                                         /lib/x86_64-linux-gnu/libc.so.6
+ setresgid@@GLIBC_2.2.5                            /lib/x86_64-linux-gnu/libc.so.6
+ setresgid@GLIBC_2.2.5                             /lib/x86_64-linux-gnu/libc.so.6
+ setresuid                                         /lib/x86_64-linux-gnu/libc.so.6
+ setresuid@@GLIBC_2.2.5                            /lib/x86_64-linux-gnu/libc.so.6
+ setresuid@GLIBC_2.2.5                             /lib/x86_64-linux-gnu/libc.so.6
+ setreuid                                          /lib/x86_64-linux-gnu/libc.so.6
+ setreuid@@GLIBC_2.2.5                             /lib/x86_64-linux-gnu/libc.so.6
+ setreuid@GLIBC_2.2.5                              /lib/x86_64-linux-gnu/libc.so.6
+ setrlimit                                         /lib/x86_64-linux-gnu/libc.so.6
+ setrlimit64                                       /lib/x86_64-linux-gnu/libc.so.6
+ setrlimit64@@GLIBC_2.2.5                          /lib/x86_64-linux-gnu/libc.so.6
+ setrlimit64@GLIBC_2.2.5                           /lib/x86_64-linux-gnu/libc.so.6
+ setrlimit@@GLIBC_2.2.5                            /lib/x86_64-linux-gnu/libc.so.6
+ setrlimit@GLIBC_2.2.5                             /lib/x86_64-linux-gnu/libc.so.6
+ setsid                                            /lib/x86_64-linux-gnu/libc.so.6
+ setsid@@GLIBC_2.2.5                               /lib/x86_64-linux-gnu/libc.so.6
+ setsid@GLIBC_2.2.5                                /lib/x86_64-linux-gnu/libc.so.6
+ setsockopt                                        /lib/x86_64-linux-gnu/libc.so.6
+ setsockopt@@GLIBC_2.2.5                           /lib/x86_64-linux-gnu/libc.so.6
+ setsockopt@GLIBC_2.2.5                            /lib/x86_64-linux-gnu/libc.so.6
+ setstate                                          /lib/x86_64-linux-gnu/libc.so.6
+ setstate@@GLIBC_2.2.5                             /lib/x86_64-linux-gnu/libc.so.6
+ setstate@GLIBC_2.2.5                              /lib/x86_64-linux-gnu/libc.so.6
+ setstate_r                                        /lib/x86_64-linux-gnu/libc.so.6
+ setstate_r@@GLIBC_2.2.5                           /lib/x86_64-linux-gnu/libc.so.6
+ setstate_r@GLIBC_2.2.5                            /lib/x86_64-linux-gnu/libc.so.6
+ settimeofday                                      /lib/x86_64-linux-gnu/libc.so.6
+ settimeofday@@GLIBC_2.2.5                         /lib/x86_64-linux-gnu/libc.so.6
+ settimeofday@GLIBC_2.2.5                          /lib/x86_64-linux-gnu/libc.so.6
+ setttyent                                         /lib/x86_64-linux-gnu/libc.so.6
+ setttyent@@GLIBC_2.2.5                            /lib/x86_64-linux-gnu/libc.so.6
+ setttyent@GLIBC_2.2.5                             /lib/x86_64-linux-gnu/libc.so.6
+ setuid                                            /lib/x86_64-linux-gnu/libc.so.6
+ setuid@@GLIBC_2.2.5                               /lib/x86_64-linux-gnu/libc.so.6
+ setuid@GLIBC_2.2.5                                /lib/x86_64-linux-gnu/libc.so.6
+ setutent                                          /lib/x86_64-linux-gnu/libc.so.6
+ setutent@@GLIBC_2.2.5                             /lib/x86_64-linux-gnu/libc.so.6
+ setutent@GLIBC_2.2.5                              /lib/x86_64-linux-gnu/libc.so.6
+ setvbuf                                           /lib/x86_64-linux-gnu/libc.so.6
+ setvbuf@@GLIBC_2.2.5                              /lib/x86_64-linux-gnu/libc.so.6
+ setvbuf@GLIBC_2.2.5                               /lib/x86_64-linux-gnu/libc.so.6
+ sgetsgent_r                                       /lib/x86_64-linux-gnu/libc.so.6
+ sgetsgent_r@@GLIBC_2.10                           /lib/x86_64-linux-gnu/libc.so.6
+ sgetsgent_r@GLIBC_2.10                            /lib/x86_64-linux-gnu/libc.so.6
+ sgetspent_r                                       /lib/x86_64-linux-gnu/libc.so.6
+ sgetspent_r@@GLIBC_2.2.5                          /lib/x86_64-linux-gnu/libc.so.6
+ sgetspent_r@GLIBC_2.2.5                           /lib/x86_64-linux-gnu/libc.so.6
+ shutdown                                          /lib/x86_64-linux-gnu/libc.so.6
+ shutdown@@GLIBC_2.2.5                             /lib/x86_64-linux-gnu/libc.so.6
+ shutdown@GLIBC_2.2.5                              /lib/x86_64-linux-gnu/libc.so.6
+ sigaction                                         /lib/x86_64-linux-gnu/libc.so.6
+ sigaction@@GLIBC_2.2.5                            /lib/x86_64-linux-gnu/libc.so.6
+ sigaction@GLIBC_2.2.5                             /lib/x86_64-linux-gnu/libc.so.6
+ sigaltstack                                       /lib/x86_64-linux-gnu/libc.so.6
+ sigaltstack@@GLIBC_2.2.5                          /lib/x86_64-linux-gnu/libc.so.6
+ sigaltstack@GLIBC_2.2.5                           /lib/x86_64-linux-gnu/libc.so.6
+ sigblock                                          /lib/x86_64-linux-gnu/libc.so.6
+ sigblock@@GLIBC_2.2.5                             /lib/x86_64-linux-gnu/libc.so.6
+ sigblock@GLIBC_2.2.5                              /lib/x86_64-linux-gnu/libc.so.6
+ siglongjmp                                        /lib/x86_64-linux-gnu/libc.so.6
+ siglongjmp@@GLIBC_2.2.5                           /lib/x86_64-linux-gnu/libc.so.6
+ siglongjmp@GLIBC_2.2.5                            /lib/x86_64-linux-gnu/libc.so.6
+ signal                                            /lib/x86_64-linux-gnu/libc.so.6
+ signal@@GLIBC_2.2.5                               /lib/x86_64-linux-gnu/libc.so.6
+ signal@GLIBC_2.2.5                                /lib/x86_64-linux-gnu/libc.so.6
+ signgam                                           /lib/x86_64-linux-gnu/libm.so.6
+ signgam@@GLIBC_2.2.5                              /lib/x86_64-linux-gnu/libm.so.6
+ signgam@GLIBC_2.2.5                               /lib/x86_64-linux-gnu/libm.so.6
+ significand                                       /lib/x86_64-linux-gnu/libm.so.6
+ significand@@GLIBC_2.2.5                          /lib/x86_64-linux-gnu/libm.so.6
+ significand@GLIBC_2.2.5                           /lib/x86_64-linux-gnu/libm.so.6
+ significandf                                      /lib/x86_64-linux-gnu/libm.so.6
+ significandf@@GLIBC_2.2.5                         /lib/x86_64-linux-gnu/libm.so.6
+ significandf@GLIBC_2.2.5                          /lib/x86_64-linux-gnu/libm.so.6
+ significandl                                      /lib/x86_64-linux-gnu/libm.so.6
+ significandl@@GLIBC_2.2.5                         /lib/x86_64-linux-gnu/libm.so.6
+ significandl@GLIBC_2.2.5                          /lib/x86_64-linux-gnu/libm.so.6
+ sigpause                                          /lib/x86_64-linux-gnu/libc.so.6
+ sigpause@@GLIBC_2.2.5                             /lib/x86_64-linux-gnu/libc.so.6
+ sigpause@GLIBC_2.2.5                              /lib/x86_64-linux-gnu/libc.so.6
+ sigprocmask                                       /lib/x86_64-linux-gnu/libc.so.6
+ sigprocmask@@GLIBC_2.2.5                          /lib/x86_64-linux-gnu/libc.so.6
+ sigprocmask@GLIBC_2.2.5                           /lib/x86_64-linux-gnu/libc.so.6
+ sigqueue                                          /lib/x86_64-linux-gnu/libc.so.6
+ sigqueue@@GLIBC_2.2.5                             /lib/x86_64-linux-gnu/libc.so.6
+ sigqueue@GLIBC_2.2.5                              /lib/x86_64-linux-gnu/libc.so.6
+ sigreturn                                         /lib/x86_64-linux-gnu/libc.so.6
+ sigreturn@@GLIBC_2.2.5                            /lib/x86_64-linux-gnu/libc.so.6
+ sigreturn@GLIBC_2.2.5                             /lib/x86_64-linux-gnu/libc.so.6
+ sigsetmask                                        /lib/x86_64-linux-gnu/libc.so.6
+ sigsetmask@@GLIBC_2.2.5                           /lib/x86_64-linux-gnu/libc.so.6
+ sigsetmask@GLIBC_2.2.5                            /lib/x86_64-linux-gnu/libc.so.6
+ sigsuspend                                        /lib/x86_64-linux-gnu/libc.so.6
+ sigsuspend@@GLIBC_2.2.5                           /lib/x86_64-linux-gnu/libc.so.6
+ sigsuspend@GLIBC_2.2.5                            /lib/x86_64-linux-gnu/libc.so.6
+ sigtimedwait                                      /lib/x86_64-linux-gnu/libc.so.6
+ sigtimedwait@@GLIBC_2.2.5                         /lib/x86_64-linux-gnu/libc.so.6
+ sigtimedwait@GLIBC_2.2.5                          /lib/x86_64-linux-gnu/libc.so.6
+ sigwait                                           /lib/x86_64-linux-gnu/libc.so.6
+ sigwait@@GLIBC_2.2.5                              /lib/x86_64-linux-gnu/libc.so.6
+ sigwait@GLIBC_2.2.5                               /lib/x86_64-linux-gnu/libc.so.6
+ sigwaitinfo                                       /lib/x86_64-linux-gnu/libc.so.6
+ sigwaitinfo@@GLIBC_2.2.5                          /lib/x86_64-linux-gnu/libc.so.6
+ sigwaitinfo@GLIBC_2.2.5                           /lib/x86_64-linux-gnu/libc.so.6
+ sin                                               /lib/x86_64-linux-gnu/libm.so.6
+ sin@@GLIBC_2.2.5                                  /lib/x86_64-linux-gnu/libm.so.6
+ sin@GLIBC_2.2.5                                   /lib/x86_64-linux-gnu/libm.so.6
+ sincos                                            /lib/x86_64-linux-gnu/libm.so.6
+                                                   build/py/objcomplex.o
+ sincos@@GLIBC_2.2.5                               /lib/x86_64-linux-gnu/libm.so.6
+ sincos@GLIBC_2.2.5                                /lib/x86_64-linux-gnu/libm.so.6
+ sincosf                                           /lib/x86_64-linux-gnu/libm.so.6
+ sincosf128                                        /lib/x86_64-linux-gnu/libm.so.6
+ sincosf128@@GLIBC_2.26                            /lib/x86_64-linux-gnu/libm.so.6
+ sincosf128@GLIBC_2.26                             /lib/x86_64-linux-gnu/libm.so.6
+ sincosf32                                         /lib/x86_64-linux-gnu/libm.so.6
+ sincosf32@@GLIBC_2.27                             /lib/x86_64-linux-gnu/libm.so.6
+ sincosf32@GLIBC_2.27                              /lib/x86_64-linux-gnu/libm.so.6
+ sincosf32x                                        /lib/x86_64-linux-gnu/libm.so.6
+ sincosf32x@@GLIBC_2.27                            /lib/x86_64-linux-gnu/libm.so.6
+ sincosf32x@GLIBC_2.27                             /lib/x86_64-linux-gnu/libm.so.6
+ sincosf64                                         /lib/x86_64-linux-gnu/libm.so.6
+ sincosf64@@GLIBC_2.27                             /lib/x86_64-linux-gnu/libm.so.6
+ sincosf64@GLIBC_2.27                              /lib/x86_64-linux-gnu/libm.so.6
+ sincosf64x                                        /lib/x86_64-linux-gnu/libm.so.6
+ sincosf64x@@GLIBC_2.27                            /lib/x86_64-linux-gnu/libm.so.6
+ sincosf64x@GLIBC_2.27                             /lib/x86_64-linux-gnu/libm.so.6
+ sincosf@@GLIBC_2.2.5                              /lib/x86_64-linux-gnu/libm.so.6
+ sincosf@GLIBC_2.2.5                               /lib/x86_64-linux-gnu/libm.so.6
+ sincosl                                           /lib/x86_64-linux-gnu/libm.so.6
+ sincosl@@GLIBC_2.2.5                              /lib/x86_64-linux-gnu/libm.so.6
+ sincosl@GLIBC_2.2.5                               /lib/x86_64-linux-gnu/libm.so.6
+ sinf                                              /lib/x86_64-linux-gnu/libm.so.6
+ sinf128                                           /lib/x86_64-linux-gnu/libm.so.6
+ sinf128@@GLIBC_2.26                               /lib/x86_64-linux-gnu/libm.so.6
+ sinf128@GLIBC_2.26                                /lib/x86_64-linux-gnu/libm.so.6
+ sinf32                                            /lib/x86_64-linux-gnu/libm.so.6
+ sinf32@@GLIBC_2.27                                /lib/x86_64-linux-gnu/libm.so.6
+ sinf32@GLIBC_2.27                                 /lib/x86_64-linux-gnu/libm.so.6
+ sinf32x                                           /lib/x86_64-linux-gnu/libm.so.6
+ sinf32x@@GLIBC_2.27                               /lib/x86_64-linux-gnu/libm.so.6
+ sinf32x@GLIBC_2.27                                /lib/x86_64-linux-gnu/libm.so.6
+ sinf64                                            /lib/x86_64-linux-gnu/libm.so.6
+ sinf64@@GLIBC_2.27                                /lib/x86_64-linux-gnu/libm.so.6
+ sinf64@GLIBC_2.27                                 /lib/x86_64-linux-gnu/libm.so.6
+ sinf64x                                           /lib/x86_64-linux-gnu/libm.so.6
+ sinf64x@@GLIBC_2.27                               /lib/x86_64-linux-gnu/libm.so.6
+ sinf64x@GLIBC_2.27                                /lib/x86_64-linux-gnu/libm.so.6
+ sinf@@GLIBC_2.2.5                                 /lib/x86_64-linux-gnu/libm.so.6
+ sinf@GLIBC_2.2.5                                  /lib/x86_64-linux-gnu/libm.so.6
+ sinh                                              /lib/x86_64-linux-gnu/libm.so.6
+ sinh@@GLIBC_2.2.5                                 /lib/x86_64-linux-gnu/libm.so.6
+ sinh@GLIBC_2.2.5                                  /lib/x86_64-linux-gnu/libm.so.6
+ sinhf                                             /lib/x86_64-linux-gnu/libm.so.6
+ sinhf128                                          /lib/x86_64-linux-gnu/libm.so.6
+ sinhf128@@GLIBC_2.26                              /lib/x86_64-linux-gnu/libm.so.6
+ sinhf128@GLIBC_2.26                               /lib/x86_64-linux-gnu/libm.so.6
+ sinhf32                                           /lib/x86_64-linux-gnu/libm.so.6
+ sinhf32@@GLIBC_2.27                               /lib/x86_64-linux-gnu/libm.so.6
+ sinhf32@GLIBC_2.27                                /lib/x86_64-linux-gnu/libm.so.6
+ sinhf32x                                          /lib/x86_64-linux-gnu/libm.so.6
+ sinhf32x@@GLIBC_2.27                              /lib/x86_64-linux-gnu/libm.so.6
+ sinhf32x@GLIBC_2.27                               /lib/x86_64-linux-gnu/libm.so.6
+ sinhf64                                           /lib/x86_64-linux-gnu/libm.so.6
+ sinhf64@@GLIBC_2.27                               /lib/x86_64-linux-gnu/libm.so.6
+ sinhf64@GLIBC_2.27                                /lib/x86_64-linux-gnu/libm.so.6
+ sinhf64x                                          /lib/x86_64-linux-gnu/libm.so.6
+ sinhf64x@@GLIBC_2.27                              /lib/x86_64-linux-gnu/libm.so.6
+ sinhf64x@GLIBC_2.27                               /lib/x86_64-linux-gnu/libm.so.6
+ sinhf@@GLIBC_2.2.5                                /lib/x86_64-linux-gnu/libm.so.6
+ sinhf@GLIBC_2.2.5                                 /lib/x86_64-linux-gnu/libm.so.6
+ sinhl                                             /lib/x86_64-linux-gnu/libm.so.6
+ sinhl@@GLIBC_2.2.5                                /lib/x86_64-linux-gnu/libm.so.6
+ sinhl@GLIBC_2.2.5                                 /lib/x86_64-linux-gnu/libm.so.6
+ sinl                                              /lib/x86_64-linux-gnu/libm.so.6
+ sinl@@GLIBC_2.2.5                                 /lib/x86_64-linux-gnu/libm.so.6
+ sinl@GLIBC_2.2.5                                  /lib/x86_64-linux-gnu/libm.so.6
+ sleep                                             /lib/x86_64-linux-gnu/libc.so.6
+ sleep@@GLIBC_2.2.5                                /lib/x86_64-linux-gnu/libc.so.6
+ sleep@GLIBC_2.2.5                                 /lib/x86_64-linux-gnu/libc.so.6
+ snprintf                                          /lib/x86_64-linux-gnu/libc.so.6
+ snprintf@@GLIBC_2.2.5                             /lib/x86_64-linux-gnu/libc.so.6
+ snprintf@GLIBC_2.2.5                              /lib/x86_64-linux-gnu/libc.so.6
+ socket                                            /lib/x86_64-linux-gnu/libc.so.6
+ socket@@GLIBC_2.2.5                               /lib/x86_64-linux-gnu/libc.so.6
+ socket@GLIBC_2.2.5                                /lib/x86_64-linux-gnu/libc.so.6
+ socketpair                                        /lib/x86_64-linux-gnu/libc.so.6
+ socketpair@@GLIBC_2.2.5                           /lib/x86_64-linux-gnu/libc.so.6
+ socketpair@GLIBC_2.2.5                            /lib/x86_64-linux-gnu/libc.so.6
+ sprofil                                           /lib/x86_64-linux-gnu/libc.so.6
+ sprofil@@GLIBC_2.2.5                              /lib/x86_64-linux-gnu/libc.so.6
+ sprofil@GLIBC_2.2.5                               /lib/x86_64-linux-gnu/libc.so.6
+ sqrt                                              /lib/x86_64-linux-gnu/libm.so.6
+                                                   build/py/objcomplex.o
+ sqrt@@GLIBC_2.2.5                                 /lib/x86_64-linux-gnu/libm.so.6
+ sqrt@GLIBC_2.2.5                                  /lib/x86_64-linux-gnu/libm.so.6
+ sqrtf                                             /lib/x86_64-linux-gnu/libm.so.6
+ sqrtf128                                          /lib/x86_64-linux-gnu/libm.so.6
+ sqrtf128@@GLIBC_2.26                              /lib/x86_64-linux-gnu/libm.so.6
+ sqrtf128@GLIBC_2.26                               /lib/x86_64-linux-gnu/libm.so.6
+ sqrtf32                                           /lib/x86_64-linux-gnu/libm.so.6
+ sqrtf32@@GLIBC_2.27                               /lib/x86_64-linux-gnu/libm.so.6
+ sqrtf32@GLIBC_2.27                                /lib/x86_64-linux-gnu/libm.so.6
+ sqrtf32x                                          /lib/x86_64-linux-gnu/libm.so.6
+ sqrtf32x@@GLIBC_2.27                              /lib/x86_64-linux-gnu/libm.so.6
+ sqrtf32x@GLIBC_2.27                               /lib/x86_64-linux-gnu/libm.so.6
+ sqrtf64                                           /lib/x86_64-linux-gnu/libm.so.6
+ sqrtf64@@GLIBC_2.27                               /lib/x86_64-linux-gnu/libm.so.6
+ sqrtf64@GLIBC_2.27                                /lib/x86_64-linux-gnu/libm.so.6
+ sqrtf64x                                          /lib/x86_64-linux-gnu/libm.so.6
+ sqrtf64x@@GLIBC_2.27                              /lib/x86_64-linux-gnu/libm.so.6
+ sqrtf64x@GLIBC_2.27                               /lib/x86_64-linux-gnu/libm.so.6
+ sqrtf@@GLIBC_2.2.5                                /lib/x86_64-linux-gnu/libm.so.6
+ sqrtf@GLIBC_2.2.5                                 /lib/x86_64-linux-gnu/libm.so.6
+ sqrtl                                             /lib/x86_64-linux-gnu/libm.so.6
+ sqrtl@@GLIBC_2.2.5                                /lib/x86_64-linux-gnu/libm.so.6
+ sqrtl@GLIBC_2.2.5                                 /lib/x86_64-linux-gnu/libm.so.6
+ srand                                             /lib/x86_64-linux-gnu/libc.so.6
+ srand48_r                                         /lib/x86_64-linux-gnu/libc.so.6
+ srand48_r@@GLIBC_2.2.5                            /lib/x86_64-linux-gnu/libc.so.6
+ srand48_r@GLIBC_2.2.5                             /lib/x86_64-linux-gnu/libc.so.6
+ srand@@GLIBC_2.2.5                                /lib/x86_64-linux-gnu/libc.so.6
+ srand@GLIBC_2.2.5                                 /lib/x86_64-linux-gnu/libc.so.6
+ srandom                                           /lib/x86_64-linux-gnu/libc.so.6
+ srandom@@GLIBC_2.2.5                              /lib/x86_64-linux-gnu/libc.so.6
+ srandom@GLIBC_2.2.5                               /lib/x86_64-linux-gnu/libc.so.6
+ srandom_r                                         /lib/x86_64-linux-gnu/libc.so.6
+ srandom_r@@GLIBC_2.2.5                            /lib/x86_64-linux-gnu/libc.so.6
+ srandom_r@GLIBC_2.2.5                             /lib/x86_64-linux-gnu/libc.so.6
+ ssignal                                           /lib/x86_64-linux-gnu/libc.so.6
+ ssignal@@GLIBC_2.2.5                              /lib/x86_64-linux-gnu/libc.so.6
+ ssignal@GLIBC_2.2.5                               /lib/x86_64-linux-gnu/libc.so.6
+ statfs                                            /lib/x86_64-linux-gnu/libc.so.6
+ statfs64                                          /lib/x86_64-linux-gnu/libc.so.6
+ statfs64@@GLIBC_2.2.5                             /lib/x86_64-linux-gnu/libc.so.6
+ statfs64@GLIBC_2.2.5                              /lib/x86_64-linux-gnu/libc.so.6
+ statfs@@GLIBC_2.2.5                               /lib/x86_64-linux-gnu/libc.so.6
+ statfs@GLIBC_2.2.5                                /lib/x86_64-linux-gnu/libc.so.6
+ statvfs                                           /lib/x86_64-linux-gnu/libc.so.6
+ statvfs64                                         /lib/x86_64-linux-gnu/libc.so.6
+ statvfs64@@GLIBC_2.2.5                            /lib/x86_64-linux-gnu/libc.so.6
+ statvfs64@GLIBC_2.2.5                             /lib/x86_64-linux-gnu/libc.so.6
+ statvfs@@GLIBC_2.2.5                              /lib/x86_64-linux-gnu/libc.so.6
+ statvfs@GLIBC_2.2.5                               /lib/x86_64-linux-gnu/libc.so.6
+ step@GLIBC_2.2.5                                  /lib/x86_64-linux-gnu/libc.so.6
+ stpcpy                                            /lib/x86_64-linux-gnu/libc.so.6
+ stpcpy@@GLIBC_2.2.5                               /lib/x86_64-linux-gnu/libc.so.6
+ stpcpy@GLIBC_2.2.5                                /lib/x86_64-linux-gnu/libc.so.6
+ stpncpy                                           /lib/x86_64-linux-gnu/libc.so.6
+ stpncpy@@GLIBC_2.2.5                              /lib/x86_64-linux-gnu/libc.so.6
+ stpncpy@GLIBC_2.2.5                               /lib/x86_64-linux-gnu/libc.so.6
+ str_count_obj                                     build/py/objstr.o
+                                                   build/py/objstrunicode.o
+ str_encode_obj                                    build/py/objstr.o
+                                                   build/py/objstrunicode.o
+ str_endswith_obj                                  build/py/objstr.o
+                                                   build/py/objstrunicode.o
+ str_find_obj                                      build/py/objstr.o
+                                                   build/py/objstrunicode.o
+ str_format_obj                                    build/py/objstr.o
+                                                   build/py/objstrunicode.o
+ str_index_obj                                     build/py/objstr.o
+                                                   build/py/objstrunicode.o
+ str_index_to_ptr                                  build/py/objstrunicode.o
+                                                   build/py/objstr.o
+ str_isalpha_obj                                   build/py/objstr.o
+                                                   build/py/objstrunicode.o
+ str_isdigit_obj                                   build/py/objstr.o
+                                                   build/py/objstrunicode.o
+ str_islower_obj                                   build/py/objstr.o
+                                                   build/py/objstrunicode.o
+ str_isspace_obj                                   build/py/objstr.o
+                                                   build/py/objstrunicode.o
+ str_isupper_obj                                   build/py/objstr.o
+                                                   build/py/objstrunicode.o
+ str_join_obj                                      build/py/objstr.o
+                                                   build/py/objstrunicode.o
+ str_lower_obj                                     build/py/objstr.o
+                                                   build/py/objstrunicode.o
+ str_lstrip_obj                                    build/py/objstr.o
+                                                   build/py/objstrunicode.o
+ str_replace_obj                                   build/py/objstr.o
+                                                   build/py/objstrunicode.o
+ str_rfind_obj                                     build/py/objstr.o
+                                                   build/py/objstrunicode.o
+ str_rindex_obj                                    build/py/objstr.o
+                                                   build/py/objstrunicode.o
+ str_rsplit_obj                                    build/py/objstr.o
+                                                   build/py/objstrunicode.o
+ str_rstrip_obj                                    build/py/objstr.o
+                                                   build/py/objstrunicode.o
+ str_split_obj                                     build/py/objstr.o
+                                                   build/py/objstrunicode.o
+ str_startswith_obj                                build/py/objstr.o
+                                                   build/py/objstrunicode.o
+ str_strip_obj                                     build/py/objstr.o
+                                                   build/py/objstrunicode.o
+ str_upper_obj                                     build/py/objstr.o
+                                                   build/py/objstrunicode.o
+ strcasecmp                                        /lib/x86_64-linux-gnu/libc.so.6
+ strcasecmp@@GLIBC_2.2.5                           /lib/x86_64-linux-gnu/libc.so.6
+ strcasecmp@GLIBC_2.2.5                            /lib/x86_64-linux-gnu/libc.so.6
+ strcasecmp_l                                      /lib/x86_64-linux-gnu/libc.so.6
+ strcasecmp_l@@GLIBC_2.3                           /lib/x86_64-linux-gnu/libc.so.6
+ strcasecmp_l@GLIBC_2.3                            /lib/x86_64-linux-gnu/libc.so.6
+ strcasestr                                        /lib/x86_64-linux-gnu/libc.so.6
+ strcasestr@@GLIBC_2.2.5                           /lib/x86_64-linux-gnu/libc.so.6
+ strcasestr@GLIBC_2.2.5                            /lib/x86_64-linux-gnu/libc.so.6
+ strchrnul                                         /lib/x86_64-linux-gnu/libc.so.6
+ strchrnul@@GLIBC_2.2.5                            /lib/x86_64-linux-gnu/libc.so.6
+ strchrnul@GLIBC_2.2.5                             /lib/x86_64-linux-gnu/libc.so.6
+ strcoll_l                                         /lib/x86_64-linux-gnu/libc.so.6
+ strcoll_l@@GLIBC_2.3                              /lib/x86_64-linux-gnu/libc.so.6
+ strcoll_l@GLIBC_2.3                               /lib/x86_64-linux-gnu/libc.so.6
+ strdup                                            /lib/x86_64-linux-gnu/libc.so.6
+ strdup@@GLIBC_2.2.5                               /lib/x86_64-linux-gnu/libc.so.6
+ strdup@GLIBC_2.2.5                                /lib/x86_64-linux-gnu/libc.so.6
+ strerror_r                                        /lib/x86_64-linux-gnu/libc.so.6
+ strerror_r@@GLIBC_2.2.5                           /lib/x86_64-linux-gnu/libc.so.6
+ strerror_r@GLIBC_2.2.5                            /lib/x86_64-linux-gnu/libc.so.6
+ strfmon_l                                         /lib/x86_64-linux-gnu/libc.so.6
+ strfmon_l@@GLIBC_2.3                              /lib/x86_64-linux-gnu/libc.so.6
+ strfmon_l@GLIBC_2.3                               /lib/x86_64-linux-gnu/libc.so.6
+ strfromf32                                        /lib/x86_64-linux-gnu/libc.so.6
+ strfromf32@@GLIBC_2.27                            /lib/x86_64-linux-gnu/libc.so.6
+ strfromf32@GLIBC_2.27                             /lib/x86_64-linux-gnu/libc.so.6
+ strfromf32x                                       /lib/x86_64-linux-gnu/libc.so.6
+ strfromf32x@@GLIBC_2.27                           /lib/x86_64-linux-gnu/libc.so.6
+ strfromf32x@GLIBC_2.27                            /lib/x86_64-linux-gnu/libc.so.6
+ strfromf64                                        /lib/x86_64-linux-gnu/libc.so.6
+ strfromf64@@GLIBC_2.27                            /lib/x86_64-linux-gnu/libc.so.6
+ strfromf64@GLIBC_2.27                             /lib/x86_64-linux-gnu/libc.so.6
+ strfromf64x                                       /lib/x86_64-linux-gnu/libc.so.6
+ strfromf64x@@GLIBC_2.27                           /lib/x86_64-linux-gnu/libc.so.6
+ strfromf64x@GLIBC_2.27                            /lib/x86_64-linux-gnu/libc.so.6
+ strftime_l                                        /lib/x86_64-linux-gnu/libc.so.6
+ strftime_l@@GLIBC_2.3                             /lib/x86_64-linux-gnu/libc.so.6
+ strftime_l@GLIBC_2.3                              /lib/x86_64-linux-gnu/libc.so.6
+ strncasecmp                                       /lib/x86_64-linux-gnu/libc.so.6
+ strncasecmp@@GLIBC_2.2.5                          /lib/x86_64-linux-gnu/libc.so.6
+ strncasecmp@GLIBC_2.2.5                           /lib/x86_64-linux-gnu/libc.so.6
+ strncasecmp_l                                     /lib/x86_64-linux-gnu/libc.so.6
+ strncasecmp_l@@GLIBC_2.3                          /lib/x86_64-linux-gnu/libc.so.6
+ strncasecmp_l@GLIBC_2.3                           /lib/x86_64-linux-gnu/libc.so.6
+ strndup                                           /lib/x86_64-linux-gnu/libc.so.6
+ strndup@@GLIBC_2.2.5                              /lib/x86_64-linux-gnu/libc.so.6
+ strndup@GLIBC_2.2.5                               /lib/x86_64-linux-gnu/libc.so.6
+ strnlen                                           /lib/x86_64-linux-gnu/libc.so.6
+ strnlen@@GLIBC_2.2.5                              /lib/x86_64-linux-gnu/libc.so.6
+ strnlen@GLIBC_2.2.5                               /lib/x86_64-linux-gnu/libc.so.6
+ strptime_l                                        /lib/x86_64-linux-gnu/libc.so.6
+ strptime_l@@GLIBC_2.3.2                           /lib/x86_64-linux-gnu/libc.so.6
+ strptime_l@GLIBC_2.3.2                            /lib/x86_64-linux-gnu/libc.so.6
+ strsep                                            /lib/x86_64-linux-gnu/libc.so.6
+ strsep@@GLIBC_2.2.5                               /lib/x86_64-linux-gnu/libc.so.6
+ strsep@GLIBC_2.2.5                                /lib/x86_64-linux-gnu/libc.so.6
+ strtod_l                                          /lib/x86_64-linux-gnu/libc.so.6
+ strtod_l@@GLIBC_2.3                               /lib/x86_64-linux-gnu/libc.so.6
+ strtod_l@GLIBC_2.3                                /lib/x86_64-linux-gnu/libc.so.6
+ strtof128_l                                       /lib/x86_64-linux-gnu/libc.so.6
+ strtof128_l@@GLIBC_2.26                           /lib/x86_64-linux-gnu/libc.so.6
+ strtof128_l@GLIBC_2.26                            /lib/x86_64-linux-gnu/libc.so.6
+ strtof32                                          /lib/x86_64-linux-gnu/libc.so.6
+ strtof32@@GLIBC_2.27                              /lib/x86_64-linux-gnu/libc.so.6
+ strtof32@GLIBC_2.27                               /lib/x86_64-linux-gnu/libc.so.6
+ strtof32_l                                        /lib/x86_64-linux-gnu/libc.so.6
+ strtof32_l@@GLIBC_2.27                            /lib/x86_64-linux-gnu/libc.so.6
+ strtof32_l@GLIBC_2.27                             /lib/x86_64-linux-gnu/libc.so.6
+ strtof32x                                         /lib/x86_64-linux-gnu/libc.so.6
+ strtof32x@@GLIBC_2.27                             /lib/x86_64-linux-gnu/libc.so.6
+ strtof32x@GLIBC_2.27                              /lib/x86_64-linux-gnu/libc.so.6
+ strtof32x_l                                       /lib/x86_64-linux-gnu/libc.so.6
+ strtof32x_l@@GLIBC_2.27                           /lib/x86_64-linux-gnu/libc.so.6
+ strtof32x_l@GLIBC_2.27                            /lib/x86_64-linux-gnu/libc.so.6
+ strtof64                                          /lib/x86_64-linux-gnu/libc.so.6
+ strtof64@@GLIBC_2.27                              /lib/x86_64-linux-gnu/libc.so.6
+ strtof64@GLIBC_2.27                               /lib/x86_64-linux-gnu/libc.so.6
+ strtof64_l                                        /lib/x86_64-linux-gnu/libc.so.6
+ strtof64_l@@GLIBC_2.27                            /lib/x86_64-linux-gnu/libc.so.6
+ strtof64_l@GLIBC_2.27                             /lib/x86_64-linux-gnu/libc.so.6
+ strtof64x                                         /lib/x86_64-linux-gnu/libc.so.6
+ strtof64x@@GLIBC_2.27                             /lib/x86_64-linux-gnu/libc.so.6
+ strtof64x@GLIBC_2.27                              /lib/x86_64-linux-gnu/libc.so.6
+ strtof64x_l                                       /lib/x86_64-linux-gnu/libc.so.6
+ strtof64x_l@@GLIBC_2.27                           /lib/x86_64-linux-gnu/libc.so.6
+ strtof64x_l@GLIBC_2.27                            /lib/x86_64-linux-gnu/libc.so.6
+ strtof_l                                          /lib/x86_64-linux-gnu/libc.so.6
+ strtof_l@@GLIBC_2.3                               /lib/x86_64-linux-gnu/libc.so.6
+ strtof_l@GLIBC_2.3                                /lib/x86_64-linux-gnu/libc.so.6
+ strtok_r                                          /lib/x86_64-linux-gnu/libc.so.6
+ strtok_r@@GLIBC_2.2.5                             /lib/x86_64-linux-gnu/libc.so.6
+ strtok_r@GLIBC_2.2.5                              /lib/x86_64-linux-gnu/libc.so.6
+ strtol                                            /lib/x86_64-linux-gnu/libc.so.6
+                                                   build/main.o
+ strtol@@GLIBC_2.2.5                               /lib/x86_64-linux-gnu/libc.so.6
+ strtol@GLIBC_2.2.5                                /lib/x86_64-linux-gnu/libc.so.6
+ strtol_l                                          /lib/x86_64-linux-gnu/libc.so.6
+ strtol_l@@GLIBC_2.3                               /lib/x86_64-linux-gnu/libc.so.6
+ strtol_l@GLIBC_2.3                                /lib/x86_64-linux-gnu/libc.so.6
+ strtold_l                                         /lib/x86_64-linux-gnu/libc.so.6
+ strtold_l@@GLIBC_2.3                              /lib/x86_64-linux-gnu/libc.so.6
+ strtold_l@GLIBC_2.3                               /lib/x86_64-linux-gnu/libc.so.6
+ strtoll                                           /lib/x86_64-linux-gnu/libc.so.6
+ strtoll@@GLIBC_2.2.5                              /lib/x86_64-linux-gnu/libc.so.6
+ strtoll@GLIBC_2.2.5                               /lib/x86_64-linux-gnu/libc.so.6
+ strtoll_l                                         /lib/x86_64-linux-gnu/libc.so.6
+ strtoll_l@@GLIBC_2.3.3                            /lib/x86_64-linux-gnu/libc.so.6
+ strtoll_l@GLIBC_2.3.3                             /lib/x86_64-linux-gnu/libc.so.6
+ strtoq                                            /lib/x86_64-linux-gnu/libc.so.6
+ strtoq@@GLIBC_2.2.5                               /lib/x86_64-linux-gnu/libc.so.6
+ strtoq@GLIBC_2.2.5                                /lib/x86_64-linux-gnu/libc.so.6
+ strtoul                                           /lib/x86_64-linux-gnu/libc.so.6
+ strtoul@@GLIBC_2.2.5                              /lib/x86_64-linux-gnu/libc.so.6
+ strtoul@GLIBC_2.2.5                               /lib/x86_64-linux-gnu/libc.so.6
+ strtoul_l                                         /lib/x86_64-linux-gnu/libc.so.6
+ strtoul_l@@GLIBC_2.3                              /lib/x86_64-linux-gnu/libc.so.6
+ strtoul_l@GLIBC_2.3                               /lib/x86_64-linux-gnu/libc.so.6
+ strtoull                                          /lib/x86_64-linux-gnu/libc.so.6
+ strtoull@@GLIBC_2.2.5                             /lib/x86_64-linux-gnu/libc.so.6
+ strtoull@GLIBC_2.2.5                              /lib/x86_64-linux-gnu/libc.so.6
+ strtoull_l                                        /lib/x86_64-linux-gnu/libc.so.6
+ strtoull_l@@GLIBC_2.3.3                           /lib/x86_64-linux-gnu/libc.so.6
+ strtoull_l@GLIBC_2.3.3                            /lib/x86_64-linux-gnu/libc.so.6
+ strtouq                                           /lib/x86_64-linux-gnu/libc.so.6
+ strtouq@@GLIBC_2.2.5                              /lib/x86_64-linux-gnu/libc.so.6
+ strtouq@GLIBC_2.2.5                               /lib/x86_64-linux-gnu/libc.so.6
+ struct_calcsize_obj                               build/py/modstruct.o
+ struct_pack_into_obj                              build/py/modstruct.o
+ struct_pack_obj                                   build/py/modstruct.o
+ struct_unpack_from_obj                            build/py/modstruct.o
+ strverscmp                                        /lib/x86_64-linux-gnu/libc.so.6
+ strverscmp@@GLIBC_2.2.5                           /lib/x86_64-linux-gnu/libc.so.6
+ strverscmp@GLIBC_2.2.5                            /lib/x86_64-linux-gnu/libc.so.6
+ strxfrm_l                                         /lib/x86_64-linux-gnu/libc.so.6
+ strxfrm_l@@GLIBC_2.3                              /lib/x86_64-linux-gnu/libc.so.6
+ strxfrm_l@GLIBC_2.3                               /lib/x86_64-linux-gnu/libc.so.6
+ swapcontext                                       /lib/x86_64-linux-gnu/libc.so.6
+ swapcontext@@GLIBC_2.2.5                          /lib/x86_64-linux-gnu/libc.so.6
+ swapcontext@GLIBC_2.2.5                           /lib/x86_64-linux-gnu/libc.so.6
+ swapoff                                           /lib/x86_64-linux-gnu/libc.so.6
+ swapoff@@GLIBC_2.2.5                              /lib/x86_64-linux-gnu/libc.so.6
+ swapoff@GLIBC_2.2.5                               /lib/x86_64-linux-gnu/libc.so.6
+ swapon                                            /lib/x86_64-linux-gnu/libc.so.6
+ swapon@@GLIBC_2.2.5                               /lib/x86_64-linux-gnu/libc.so.6
+ swapon@GLIBC_2.2.5                                /lib/x86_64-linux-gnu/libc.so.6
+ symlink                                           /lib/x86_64-linux-gnu/libc.so.6
+ symlink@@GLIBC_2.2.5                              /lib/x86_64-linux-gnu/libc.so.6
+ symlink@GLIBC_2.2.5                               /lib/x86_64-linux-gnu/libc.so.6
+ sysconf                                           /lib/x86_64-linux-gnu/libc.so.6
+ sysconf@@GLIBC_2.2.5                              /lib/x86_64-linux-gnu/libc.so.6
+ sysconf@GLIBC_2.2.5                               /lib/x86_64-linux-gnu/libc.so.6
+ sysctl                                            /lib/x86_64-linux-gnu/libc.so.6
+ sysctl@@GLIBC_2.2.5                               /lib/x86_64-linux-gnu/libc.so.6
+ sysctl@GLIBC_2.2.5                                /lib/x86_64-linux-gnu/libc.so.6
+ sysinfo                                           /lib/x86_64-linux-gnu/libc.so.6
+ sysinfo@@GLIBC_2.2.5                              /lib/x86_64-linux-gnu/libc.so.6
+ sysinfo@GLIBC_2.2.5                               /lib/x86_64-linux-gnu/libc.so.6
+ system                                            /lib/x86_64-linux-gnu/libc.so.6
+ system@@GLIBC_2.2.5                               /lib/x86_64-linux-gnu/libc.so.6
+ system@GLIBC_2.2.5                                /lib/x86_64-linux-gnu/libc.so.6
+ sysv_signal                                       /lib/x86_64-linux-gnu/libc.so.6
+ sysv_signal@@GLIBC_2.2.5                          /lib/x86_64-linux-gnu/libc.so.6
+ sysv_signal@GLIBC_2.2.5                           /lib/x86_64-linux-gnu/libc.so.6
+ tan                                               /lib/x86_64-linux-gnu/libm.so.6
+ tan@@GLIBC_2.2.5                                  /lib/x86_64-linux-gnu/libm.so.6
+ tan@GLIBC_2.2.5                                   /lib/x86_64-linux-gnu/libm.so.6
+ tanf                                              /lib/x86_64-linux-gnu/libm.so.6
+ tanf128                                           /lib/x86_64-linux-gnu/libm.so.6
+ tanf128@@GLIBC_2.26                               /lib/x86_64-linux-gnu/libm.so.6
+ tanf128@GLIBC_2.26                                /lib/x86_64-linux-gnu/libm.so.6
+ tanf32                                            /lib/x86_64-linux-gnu/libm.so.6
+ tanf32@@GLIBC_2.27                                /lib/x86_64-linux-gnu/libm.so.6
+ tanf32@GLIBC_2.27                                 /lib/x86_64-linux-gnu/libm.so.6
+ tanf32x                                           /lib/x86_64-linux-gnu/libm.so.6
+ tanf32x@@GLIBC_2.27                               /lib/x86_64-linux-gnu/libm.so.6
+ tanf32x@GLIBC_2.27                                /lib/x86_64-linux-gnu/libm.so.6
+ tanf64                                            /lib/x86_64-linux-gnu/libm.so.6
+ tanf64@@GLIBC_2.27                                /lib/x86_64-linux-gnu/libm.so.6
+ tanf64@GLIBC_2.27                                 /lib/x86_64-linux-gnu/libm.so.6
+ tanf64x                                           /lib/x86_64-linux-gnu/libm.so.6
+ tanf64x@@GLIBC_2.27                               /lib/x86_64-linux-gnu/libm.so.6
+ tanf64x@GLIBC_2.27                                /lib/x86_64-linux-gnu/libm.so.6
+ tanf@@GLIBC_2.2.5                                 /lib/x86_64-linux-gnu/libm.so.6
+ tanf@GLIBC_2.2.5                                  /lib/x86_64-linux-gnu/libm.so.6
+ tanh                                              /lib/x86_64-linux-gnu/libm.so.6
+ tanh@@GLIBC_2.2.5                                 /lib/x86_64-linux-gnu/libm.so.6
+ tanh@GLIBC_2.2.5                                  /lib/x86_64-linux-gnu/libm.so.6
+ tanhf                                             /lib/x86_64-linux-gnu/libm.so.6
+ tanhf128                                          /lib/x86_64-linux-gnu/libm.so.6
+ tanhf128@@GLIBC_2.26                              /lib/x86_64-linux-gnu/libm.so.6
+ tanhf128@GLIBC_2.26                               /lib/x86_64-linux-gnu/libm.so.6
+ tanhf32                                           /lib/x86_64-linux-gnu/libm.so.6
+ tanhf32@@GLIBC_2.27                               /lib/x86_64-linux-gnu/libm.so.6
+ tanhf32@GLIBC_2.27                                /lib/x86_64-linux-gnu/libm.so.6
+ tanhf32x                                          /lib/x86_64-linux-gnu/libm.so.6
+ tanhf32x@@GLIBC_2.27                              /lib/x86_64-linux-gnu/libm.so.6
+ tanhf32x@GLIBC_2.27                               /lib/x86_64-linux-gnu/libm.so.6
+ tanhf64                                           /lib/x86_64-linux-gnu/libm.so.6
+ tanhf64@@GLIBC_2.27                               /lib/x86_64-linux-gnu/libm.so.6
+ tanhf64@GLIBC_2.27                                /lib/x86_64-linux-gnu/libm.so.6
+ tanhf64x                                          /lib/x86_64-linux-gnu/libm.so.6
+ tanhf64x@@GLIBC_2.27                              /lib/x86_64-linux-gnu/libm.so.6
+ tanhf64x@GLIBC_2.27                               /lib/x86_64-linux-gnu/libm.so.6
+ tanhf@@GLIBC_2.2.5                                /lib/x86_64-linux-gnu/libm.so.6
+ tanhf@GLIBC_2.2.5                                 /lib/x86_64-linux-gnu/libm.so.6
+ tanhl                                             /lib/x86_64-linux-gnu/libm.so.6
+ tanhl@@GLIBC_2.2.5                                /lib/x86_64-linux-gnu/libm.so.6
+ tanhl@GLIBC_2.2.5                                 /lib/x86_64-linux-gnu/libm.so.6
+ tanl                                              /lib/x86_64-linux-gnu/libm.so.6
+ tanl@@GLIBC_2.2.5                                 /lib/x86_64-linux-gnu/libm.so.6
+ tanl@GLIBC_2.2.5                                  /lib/x86_64-linux-gnu/libm.so.6
+ tcdrain                                           /lib/x86_64-linux-gnu/libc.so.6
+ tcdrain@@GLIBC_2.2.5                              /lib/x86_64-linux-gnu/libc.so.6
+ tcdrain@GLIBC_2.2.5                               /lib/x86_64-linux-gnu/libc.so.6
+ tcgetattr                                         /lib/x86_64-linux-gnu/libc.so.6
+ tcgetattr@@GLIBC_2.2.5                            /lib/x86_64-linux-gnu/libc.so.6
+ tcgetattr@GLIBC_2.2.5                             /lib/x86_64-linux-gnu/libc.so.6
+ tdelete                                           /lib/x86_64-linux-gnu/libc.so.6
+ tdelete@@GLIBC_2.2.5                              /lib/x86_64-linux-gnu/libc.so.6
+ tdelete@GLIBC_2.2.5                               /lib/x86_64-linux-gnu/libc.so.6
+ tdestroy                                          /lib/x86_64-linux-gnu/libc.so.6
+ tdestroy@@GLIBC_2.2.5                             /lib/x86_64-linux-gnu/libc.so.6
+ tdestroy@GLIBC_2.2.5                              /lib/x86_64-linux-gnu/libc.so.6
+ textdomain                                        /lib/x86_64-linux-gnu/libc.so.6
+ textdomain@@GLIBC_2.2.5                           /lib/x86_64-linux-gnu/libc.so.6
+ textdomain@GLIBC_2.2.5                            /lib/x86_64-linux-gnu/libc.so.6
+ tfind                                             /lib/x86_64-linux-gnu/libc.so.6
+ tfind@@GLIBC_2.2.5                                /lib/x86_64-linux-gnu/libc.so.6
+ tfind@GLIBC_2.2.5                                 /lib/x86_64-linux-gnu/libc.so.6
+ tgamma                                            /lib/x86_64-linux-gnu/libm.so.6
+ tgamma@@GLIBC_2.2.5                               /lib/x86_64-linux-gnu/libm.so.6
+ tgamma@GLIBC_2.2.5                                /lib/x86_64-linux-gnu/libm.so.6
+ tgammaf                                           /lib/x86_64-linux-gnu/libm.so.6
+ tgammaf128                                        /lib/x86_64-linux-gnu/libm.so.6
+ tgammaf128@@GLIBC_2.26                            /lib/x86_64-linux-gnu/libm.so.6
+ tgammaf128@GLIBC_2.26                             /lib/x86_64-linux-gnu/libm.so.6
+ tgammaf32                                         /lib/x86_64-linux-gnu/libm.so.6
+ tgammaf32@@GLIBC_2.27                             /lib/x86_64-linux-gnu/libm.so.6
+ tgammaf32@GLIBC_2.27                              /lib/x86_64-linux-gnu/libm.so.6
+ tgammaf32x                                        /lib/x86_64-linux-gnu/libm.so.6
+ tgammaf32x@@GLIBC_2.27                            /lib/x86_64-linux-gnu/libm.so.6
+ tgammaf32x@GLIBC_2.27                             /lib/x86_64-linux-gnu/libm.so.6
+ tgammaf64                                         /lib/x86_64-linux-gnu/libm.so.6
+ tgammaf64@@GLIBC_2.27                             /lib/x86_64-linux-gnu/libm.so.6
+ tgammaf64@GLIBC_2.27                              /lib/x86_64-linux-gnu/libm.so.6
+ tgammaf64x                                        /lib/x86_64-linux-gnu/libm.so.6
+ tgammaf64x@@GLIBC_2.27                            /lib/x86_64-linux-gnu/libm.so.6
+ tgammaf64x@GLIBC_2.27                             /lib/x86_64-linux-gnu/libm.so.6
+ tgammaf@@GLIBC_2.2.5                              /lib/x86_64-linux-gnu/libm.so.6
+ tgammaf@GLIBC_2.2.5                               /lib/x86_64-linux-gnu/libm.so.6
+ tgammal                                           /lib/x86_64-linux-gnu/libm.so.6
+ tgammal@@GLIBC_2.2.5                              /lib/x86_64-linux-gnu/libm.so.6
+ tgammal@GLIBC_2.2.5                               /lib/x86_64-linux-gnu/libm.so.6
+ timelocal                                         /lib/x86_64-linux-gnu/libc.so.6
+ timelocal@@GLIBC_2.2.5                            /lib/x86_64-linux-gnu/libc.so.6
+ timelocal@GLIBC_2.2.5                             /lib/x86_64-linux-gnu/libc.so.6
+ times                                             /lib/x86_64-linux-gnu/libc.so.6
+ times@@GLIBC_2.2.5                                /lib/x86_64-linux-gnu/libc.so.6
+ times@GLIBC_2.2.5                                 /lib/x86_64-linux-gnu/libc.so.6
+ timezone                                          /lib/x86_64-linux-gnu/libc.so.6
+ timezone@@GLIBC_2.2.5                             /lib/x86_64-linux-gnu/libc.so.6
+ timezone@GLIBC_2.2.5                              /lib/x86_64-linux-gnu/libc.so.6
+ tmpfile64                                         /lib/x86_64-linux-gnu/libc.so.6
+ tmpfile64@@GLIBC_2.2.5                            /lib/x86_64-linux-gnu/libc.so.6
+ tmpfile64@GLIBC_2.2.5                             /lib/x86_64-linux-gnu/libc.so.6
+ tolower_l                                         /lib/x86_64-linux-gnu/libc.so.6
+ tolower_l@@GLIBC_2.3                              /lib/x86_64-linux-gnu/libc.so.6
+ tolower_l@GLIBC_2.3                               /lib/x86_64-linux-gnu/libc.so.6
+ totalorder                                        /lib/x86_64-linux-gnu/libm.so.6
+ totalorder@@GLIBC_2.25                            /lib/x86_64-linux-gnu/libm.so.6
+ totalorder@GLIBC_2.25                             /lib/x86_64-linux-gnu/libm.so.6
+ totalorderf                                       /lib/x86_64-linux-gnu/libm.so.6
+ totalorderf128                                    /lib/x86_64-linux-gnu/libm.so.6
+ totalorderf128@@GLIBC_2.26                        /lib/x86_64-linux-gnu/libm.so.6
+ totalorderf128@GLIBC_2.26                         /lib/x86_64-linux-gnu/libm.so.6
+ totalorderf32                                     /lib/x86_64-linux-gnu/libm.so.6
+ totalorderf32@@GLIBC_2.27                         /lib/x86_64-linux-gnu/libm.so.6
+ totalorderf32@GLIBC_2.27                          /lib/x86_64-linux-gnu/libm.so.6
+ totalorderf32x                                    /lib/x86_64-linux-gnu/libm.so.6
+ totalorderf32x@@GLIBC_2.27                        /lib/x86_64-linux-gnu/libm.so.6
+ totalorderf32x@GLIBC_2.27                         /lib/x86_64-linux-gnu/libm.so.6
+ totalorderf64                                     /lib/x86_64-linux-gnu/libm.so.6
+ totalorderf64@@GLIBC_2.27                         /lib/x86_64-linux-gnu/libm.so.6
+ totalorderf64@GLIBC_2.27                          /lib/x86_64-linux-gnu/libm.so.6
+ totalorderf64x                                    /lib/x86_64-linux-gnu/libm.so.6
+ totalorderf64x@@GLIBC_2.27                        /lib/x86_64-linux-gnu/libm.so.6
+ totalorderf64x@GLIBC_2.27                         /lib/x86_64-linux-gnu/libm.so.6
+ totalorderf@@GLIBC_2.25                           /lib/x86_64-linux-gnu/libm.so.6
+ totalorderf@GLIBC_2.25                            /lib/x86_64-linux-gnu/libm.so.6
+ totalorderl                                       /lib/x86_64-linux-gnu/libm.so.6
+ totalorderl@@GLIBC_2.25                           /lib/x86_64-linux-gnu/libm.so.6
+ totalorderl@GLIBC_2.25                            /lib/x86_64-linux-gnu/libm.so.6
+ totalordermag                                     /lib/x86_64-linux-gnu/libm.so.6
+ totalordermag@@GLIBC_2.25                         /lib/x86_64-linux-gnu/libm.so.6
+ totalordermag@GLIBC_2.25                          /lib/x86_64-linux-gnu/libm.so.6
+ totalordermagf                                    /lib/x86_64-linux-gnu/libm.so.6
+ totalordermagf128                                 /lib/x86_64-linux-gnu/libm.so.6
+ totalordermagf128@@GLIBC_2.26                     /lib/x86_64-linux-gnu/libm.so.6
+ totalordermagf128@GLIBC_2.26                      /lib/x86_64-linux-gnu/libm.so.6
+ totalordermagf32                                  /lib/x86_64-linux-gnu/libm.so.6
+ totalordermagf32@@GLIBC_2.27                      /lib/x86_64-linux-gnu/libm.so.6
+ totalordermagf32@GLIBC_2.27                       /lib/x86_64-linux-gnu/libm.so.6
+ totalordermagf32x                                 /lib/x86_64-linux-gnu/libm.so.6
+ totalordermagf32x@@GLIBC_2.27                     /lib/x86_64-linux-gnu/libm.so.6
+ totalordermagf32x@GLIBC_2.27                      /lib/x86_64-linux-gnu/libm.so.6
+ totalordermagf64                                  /lib/x86_64-linux-gnu/libm.so.6
+ totalordermagf64@@GLIBC_2.27                      /lib/x86_64-linux-gnu/libm.so.6
+ totalordermagf64@GLIBC_2.27                       /lib/x86_64-linux-gnu/libm.so.6
+ totalordermagf64x                                 /lib/x86_64-linux-gnu/libm.so.6
+ totalordermagf64x@@GLIBC_2.27                     /lib/x86_64-linux-gnu/libm.so.6
+ totalordermagf64x@GLIBC_2.27                      /lib/x86_64-linux-gnu/libm.so.6
+ totalordermagf@@GLIBC_2.25                        /lib/x86_64-linux-gnu/libm.so.6
+ totalordermagf@GLIBC_2.25                         /lib/x86_64-linux-gnu/libm.so.6
+ totalordermagl                                    /lib/x86_64-linux-gnu/libm.so.6
+ totalordermagl@@GLIBC_2.25                        /lib/x86_64-linux-gnu/libm.so.6
+ totalordermagl@GLIBC_2.25                         /lib/x86_64-linux-gnu/libm.so.6
+ toupper_l                                         /lib/x86_64-linux-gnu/libc.so.6
+ toupper_l@@GLIBC_2.3                              /lib/x86_64-linux-gnu/libc.so.6
+ toupper_l@GLIBC_2.3                               /lib/x86_64-linux-gnu/libc.so.6
+ towctrans                                         /lib/x86_64-linux-gnu/libc.so.6
+ towctrans@@GLIBC_2.2.5                            /lib/x86_64-linux-gnu/libc.so.6
+ towctrans@GLIBC_2.2.5                             /lib/x86_64-linux-gnu/libc.so.6
+ towctrans_l                                       /lib/x86_64-linux-gnu/libc.so.6
+ towctrans_l@@GLIBC_2.3                            /lib/x86_64-linux-gnu/libc.so.6
+ towctrans_l@GLIBC_2.3                             /lib/x86_64-linux-gnu/libc.so.6
+ towlower                                          /lib/x86_64-linux-gnu/libc.so.6
+ towlower@@GLIBC_2.2.5                             /lib/x86_64-linux-gnu/libc.so.6
+ towlower@GLIBC_2.2.5                              /lib/x86_64-linux-gnu/libc.so.6
+ towlower_l                                        /lib/x86_64-linux-gnu/libc.so.6
+ towlower_l@@GLIBC_2.3                             /lib/x86_64-linux-gnu/libc.so.6
+ towlower_l@GLIBC_2.3                              /lib/x86_64-linux-gnu/libc.so.6
+ towupper                                          /lib/x86_64-linux-gnu/libc.so.6
+ towupper@@GLIBC_2.2.5                             /lib/x86_64-linux-gnu/libc.so.6
+ towupper@GLIBC_2.2.5                              /lib/x86_64-linux-gnu/libc.so.6
+ towupper_l                                        /lib/x86_64-linux-gnu/libc.so.6
+ towupper_l@@GLIBC_2.3                             /lib/x86_64-linux-gnu/libc.so.6
+ towupper_l@GLIBC_2.3                              /lib/x86_64-linux-gnu/libc.so.6
+ trunc                                             /lib/x86_64-linux-gnu/libm.so.6
+ trunc@@GLIBC_2.2.5                                /lib/x86_64-linux-gnu/libm.so.6
+ trunc@GLIBC_2.2.5                                 /lib/x86_64-linux-gnu/libm.so.6
+ truncate                                          /lib/x86_64-linux-gnu/libc.so.6
+ truncate64                                        /lib/x86_64-linux-gnu/libc.so.6
+ truncate64@@GLIBC_2.2.5                           /lib/x86_64-linux-gnu/libc.so.6
+ truncate64@GLIBC_2.2.5                            /lib/x86_64-linux-gnu/libc.so.6
+ truncate@@GLIBC_2.2.5                             /lib/x86_64-linux-gnu/libc.so.6
+ truncate@GLIBC_2.2.5                              /lib/x86_64-linux-gnu/libc.so.6
+ truncf                                            /lib/x86_64-linux-gnu/libm.so.6
+ truncf128                                         /lib/x86_64-linux-gnu/libm.so.6
+ truncf128@@GLIBC_2.26                             /lib/x86_64-linux-gnu/libm.so.6
+ truncf128@GLIBC_2.26                              /lib/x86_64-linux-gnu/libm.so.6
+ truncf32                                          /lib/x86_64-linux-gnu/libm.so.6
+ truncf32@@GLIBC_2.27                              /lib/x86_64-linux-gnu/libm.so.6
+ truncf32@GLIBC_2.27                               /lib/x86_64-linux-gnu/libm.so.6
+ truncf32x                                         /lib/x86_64-linux-gnu/libm.so.6
+ truncf32x@@GLIBC_2.27                             /lib/x86_64-linux-gnu/libm.so.6
+ truncf32x@GLIBC_2.27                              /lib/x86_64-linux-gnu/libm.so.6
+ truncf64                                          /lib/x86_64-linux-gnu/libm.so.6
+ truncf64@@GLIBC_2.27                              /lib/x86_64-linux-gnu/libm.so.6
+ truncf64@GLIBC_2.27                               /lib/x86_64-linux-gnu/libm.so.6
+ truncf64x                                         /lib/x86_64-linux-gnu/libm.so.6
+ truncf64x@@GLIBC_2.27                             /lib/x86_64-linux-gnu/libm.so.6
+ truncf64x@GLIBC_2.27                              /lib/x86_64-linux-gnu/libm.so.6
+ truncf@@GLIBC_2.2.5                               /lib/x86_64-linux-gnu/libm.so.6
+ truncf@GLIBC_2.2.5                                /lib/x86_64-linux-gnu/libm.so.6
+ truncl                                            /lib/x86_64-linux-gnu/libm.so.6
+ truncl@@GLIBC_2.2.5                               /lib/x86_64-linux-gnu/libm.so.6
+ truncl@GLIBC_2.2.5                                /lib/x86_64-linux-gnu/libm.so.6
+ tsearch                                           /lib/x86_64-linux-gnu/libc.so.6
+ tsearch@@GLIBC_2.2.5                              /lib/x86_64-linux-gnu/libc.so.6
+ tsearch@GLIBC_2.2.5                               /lib/x86_64-linux-gnu/libc.so.6
+ ttyname_r                                         /lib/x86_64-linux-gnu/libc.so.6
+ ttyname_r@@GLIBC_2.2.5                            /lib/x86_64-linux-gnu/libc.so.6
+ ttyname_r@GLIBC_2.2.5                             /lib/x86_64-linux-gnu/libc.so.6
+ twalk                                             /lib/x86_64-linux-gnu/libc.so.6
+ twalk@@GLIBC_2.2.5                                /lib/x86_64-linux-gnu/libc.so.6
+ twalk@GLIBC_2.2.5                                 /lib/x86_64-linux-gnu/libc.so.6
+ tzname                                            /lib/x86_64-linux-gnu/libc.so.6
+ tzname@@GLIBC_2.2.5                               /lib/x86_64-linux-gnu/libc.so.6
+ tzname@GLIBC_2.2.5                                /lib/x86_64-linux-gnu/libc.so.6
+ tzset                                             /lib/x86_64-linux-gnu/libc.so.6
+ tzset@@GLIBC_2.2.5                                /lib/x86_64-linux-gnu/libc.so.6
+ tzset@GLIBC_2.2.5                                 /lib/x86_64-linux-gnu/libc.so.6
+ ufromfp                                           /lib/x86_64-linux-gnu/libm.so.6
+ ufromfp@@GLIBC_2.25                               /lib/x86_64-linux-gnu/libm.so.6
+ ufromfp@GLIBC_2.25                                /lib/x86_64-linux-gnu/libm.so.6
+ ufromfpf                                          /lib/x86_64-linux-gnu/libm.so.6
+ ufromfpf128                                       /lib/x86_64-linux-gnu/libm.so.6
+ ufromfpf128@@GLIBC_2.26                           /lib/x86_64-linux-gnu/libm.so.6
+ ufromfpf128@GLIBC_2.26                            /lib/x86_64-linux-gnu/libm.so.6
+ ufromfpf32                                        /lib/x86_64-linux-gnu/libm.so.6
+ ufromfpf32@@GLIBC_2.27                            /lib/x86_64-linux-gnu/libm.so.6
+ ufromfpf32@GLIBC_2.27                             /lib/x86_64-linux-gnu/libm.so.6
+ ufromfpf32x                                       /lib/x86_64-linux-gnu/libm.so.6
+ ufromfpf32x@@GLIBC_2.27                           /lib/x86_64-linux-gnu/libm.so.6
+ ufromfpf32x@GLIBC_2.27                            /lib/x86_64-linux-gnu/libm.so.6
+ ufromfpf64                                        /lib/x86_64-linux-gnu/libm.so.6
+ ufromfpf64@@GLIBC_2.27                            /lib/x86_64-linux-gnu/libm.so.6
+ ufromfpf64@GLIBC_2.27                             /lib/x86_64-linux-gnu/libm.so.6
+ ufromfpf64x                                       /lib/x86_64-linux-gnu/libm.so.6
+ ufromfpf64x@@GLIBC_2.27                           /lib/x86_64-linux-gnu/libm.so.6
+ ufromfpf64x@GLIBC_2.27                            /lib/x86_64-linux-gnu/libm.so.6
+ ufromfpf@@GLIBC_2.25                              /lib/x86_64-linux-gnu/libm.so.6
+ ufromfpf@GLIBC_2.25                               /lib/x86_64-linux-gnu/libm.so.6
+ ufromfpl                                          /lib/x86_64-linux-gnu/libm.so.6
+ ufromfpl@@GLIBC_2.25                              /lib/x86_64-linux-gnu/libm.so.6
+ ufromfpl@GLIBC_2.25                               /lib/x86_64-linux-gnu/libm.so.6
+ ufromfpx                                          /lib/x86_64-linux-gnu/libm.so.6
+ ufromfpx@@GLIBC_2.25                              /lib/x86_64-linux-gnu/libm.so.6
+ ufromfpx@GLIBC_2.25                               /lib/x86_64-linux-gnu/libm.so.6
+ ufromfpxf                                         /lib/x86_64-linux-gnu/libm.so.6
+ ufromfpxf128                                      /lib/x86_64-linux-gnu/libm.so.6
+ ufromfpxf128@@GLIBC_2.26                          /lib/x86_64-linux-gnu/libm.so.6
+ ufromfpxf128@GLIBC_2.26                           /lib/x86_64-linux-gnu/libm.so.6
+ ufromfpxf32                                       /lib/x86_64-linux-gnu/libm.so.6
+ ufromfpxf32@@GLIBC_2.27                           /lib/x86_64-linux-gnu/libm.so.6
+ ufromfpxf32@GLIBC_2.27                            /lib/x86_64-linux-gnu/libm.so.6
+ ufromfpxf32x                                      /lib/x86_64-linux-gnu/libm.so.6
+ ufromfpxf32x@@GLIBC_2.27                          /lib/x86_64-linux-gnu/libm.so.6
+ ufromfpxf32x@GLIBC_2.27                           /lib/x86_64-linux-gnu/libm.so.6
+ ufromfpxf64                                       /lib/x86_64-linux-gnu/libm.so.6
+ ufromfpxf64@@GLIBC_2.27                           /lib/x86_64-linux-gnu/libm.so.6
+ ufromfpxf64@GLIBC_2.27                            /lib/x86_64-linux-gnu/libm.so.6
+ ufromfpxf64x                                      /lib/x86_64-linux-gnu/libm.so.6
+ ufromfpxf64x@@GLIBC_2.27                          /lib/x86_64-linux-gnu/libm.so.6
+ ufromfpxf64x@GLIBC_2.27                           /lib/x86_64-linux-gnu/libm.so.6
+ ufromfpxf@@GLIBC_2.25                             /lib/x86_64-linux-gnu/libm.so.6
+ ufromfpxf@GLIBC_2.25                              /lib/x86_64-linux-gnu/libm.so.6
+ ufromfpxl                                         /lib/x86_64-linux-gnu/libm.so.6
+ ufromfpxl@@GLIBC_2.25                             /lib/x86_64-linux-gnu/libm.so.6
+ ufromfpxl@GLIBC_2.25                              /lib/x86_64-linux-gnu/libm.so.6
+ ulckpwdf                                          /lib/x86_64-linux-gnu/libc.so.6
+ ulckpwdf@@GLIBC_2.2.5                             /lib/x86_64-linux-gnu/libc.so.6
+ ulckpwdf@GLIBC_2.2.5                              /lib/x86_64-linux-gnu/libc.so.6
+ ulimit                                            /lib/x86_64-linux-gnu/libc.so.6
+ ulimit@@GLIBC_2.2.5                               /lib/x86_64-linux-gnu/libc.so.6
+ ulimit@GLIBC_2.2.5                                /lib/x86_64-linux-gnu/libc.so.6
+ umask                                             /lib/x86_64-linux-gnu/libc.so.6
+ umask@@GLIBC_2.2.5                                /lib/x86_64-linux-gnu/libc.so.6
+ umask@GLIBC_2.2.5                                 /lib/x86_64-linux-gnu/libc.so.6
+ umount                                            /lib/x86_64-linux-gnu/libc.so.6
+ umount2                                           /lib/x86_64-linux-gnu/libc.so.6
+ umount2@@GLIBC_2.2.5                              /lib/x86_64-linux-gnu/libc.so.6
+ umount2@GLIBC_2.2.5                               /lib/x86_64-linux-gnu/libc.so.6
+ umount@@GLIBC_2.2.5                               /lib/x86_64-linux-gnu/libc.so.6
+ umount@GLIBC_2.2.5                                /lib/x86_64-linux-gnu/libc.so.6
+ uname                                             /lib/x86_64-linux-gnu/libc.so.6
+ uname@@GLIBC_2.2.5                                /lib/x86_64-linux-gnu/libc.so.6
+ uname@GLIBC_2.2.5                                 /lib/x86_64-linux-gnu/libc.so.6
+ ungetc                                            /lib/x86_64-linux-gnu/libc.so.6
+ ungetc@@GLIBC_2.2.5                               /lib/x86_64-linux-gnu/libc.so.6
+ ungetc@GLIBC_2.2.5                                /lib/x86_64-linux-gnu/libc.so.6
+ unichar_isalpha                                   build/py/unicode.o
+                                                   build/py/objstr.o
+                                                   build/py/lexer.o
+ unichar_isdigit                                   build/py/unicode.o
+                                                   build/main.o
+                                                   build/py/modstruct.o
+                                                   build/py/objstr.o
+                                                   build/py/lexer.o
+ unichar_isident                                   build/py/unicode.o
+ unichar_islower                                   build/py/unicode.o
+                                                   build/py/objstr.o
+ unichar_isspace                                   build/py/unicode.o
+                                                   build/py/objstr.o
+                                                   build/py/parsenum.o
+                                                   build/py/lexer.o
+ unichar_isupper                                   build/py/unicode.o
+                                                   build/py/objstr.o
+ unichar_isxdigit                                  build/py/unicode.o
+                                                   build/py/lexer.o
+ unichar_tolower                                   build/py/unicode.o
+                                                   build/py/objstr.o
+ unichar_toupper                                   build/py/unicode.o
+                                                   build/py/objstr.o
+ unichar_xdigit_value                              build/py/unicode.o
+                                                   build/py/lexer.o
+ unlink                                            /lib/x86_64-linux-gnu/libc.so.6
+ unlink@@GLIBC_2.2.5                               /lib/x86_64-linux-gnu/libc.so.6
+ unlink@GLIBC_2.2.5                                /lib/x86_64-linux-gnu/libc.so.6
+ unsetenv                                          /lib/x86_64-linux-gnu/libc.so.6
+ unsetenv@@GLIBC_2.2.5                             /lib/x86_64-linux-gnu/libc.so.6
+ unsetenv@GLIBC_2.2.5                              /lib/x86_64-linux-gnu/libc.so.6
+ updwtmp                                           /lib/x86_64-linux-gnu/libc.so.6
+ updwtmp@@GLIBC_2.2.5                              /lib/x86_64-linux-gnu/libc.so.6
+ updwtmp@GLIBC_2.2.5                               /lib/x86_64-linux-gnu/libc.so.6
+ uselocale                                         /lib/x86_64-linux-gnu/libc.so.6
+ uselocale@@GLIBC_2.3                              /lib/x86_64-linux-gnu/libc.so.6
+ uselocale@GLIBC_2.3                               /lib/x86_64-linux-gnu/libc.so.6
+ utf8_charlen                                      build/py/unicode.o
+                                                   build/py/modbuiltins.o
+                                                   build/py/objstrunicode.o
+                                                   build/py/objstr.o
+ utf8_check                                        build/py/unicode.o
+                                                   build/py/objstr.o
+ utf8_get_char                                     build/py/unicode.o
+                                                   build/py/modbuiltins.o
+                                                   build/py/objstrunicode.o
+ utf8_next_char                                    build/py/unicode.o
+                                                   build/py/objstrunicode.o
+                                                   build/py/objstr.o
+ utf8_ptr_to_index                                 build/py/unicode.o
+                                                   build/py/objstr.o
+ utimes                                            /lib/x86_64-linux-gnu/libc.so.6
+ utimes@@GLIBC_2.2.5                               /lib/x86_64-linux-gnu/libc.so.6
+ utimes@GLIBC_2.2.5                                /lib/x86_64-linux-gnu/libc.so.6
+ utmpname                                          /lib/x86_64-linux-gnu/libc.so.6
+ utmpname@@GLIBC_2.2.5                             /lib/x86_64-linux-gnu/libc.so.6
+ utmpname@GLIBC_2.2.5                              /lib/x86_64-linux-gnu/libc.so.6
+ valloc                                            /lib/x86_64-linux-gnu/libc.so.6
+ valloc@@GLIBC_2.2.5                               /lib/x86_64-linux-gnu/libc.so.6
+ valloc@GLIBC_2.2.5                                /lib/x86_64-linux-gnu/libc.so.6
+ vasprintf                                         /lib/x86_64-linux-gnu/libc.so.6
+ vasprintf@@GLIBC_2.2.5                            /lib/x86_64-linux-gnu/libc.so.6
+ vasprintf@GLIBC_2.2.5                             /lib/x86_64-linux-gnu/libc.so.6
+ vdprintf                                          /lib/x86_64-linux-gnu/libc.so.6
+ vdprintf@@GLIBC_2.2.5                             /lib/x86_64-linux-gnu/libc.so.6
+ vdprintf@GLIBC_2.2.5                              /lib/x86_64-linux-gnu/libc.so.6
+ versionsort64                                     /lib/x86_64-linux-gnu/libc.so.6
+ versionsort64@@GLIBC_2.2.5                        /lib/x86_64-linux-gnu/libc.so.6
+ versionsort64@GLIBC_2.2.5                         /lib/x86_64-linux-gnu/libc.so.6
+ vfork                                             /lib/x86_64-linux-gnu/libc.so.6
+ vfork@@GLIBC_2.2.5                                /lib/x86_64-linux-gnu/libc.so.6
+ vfork@GLIBC_2.2.5                                 /lib/x86_64-linux-gnu/libc.so.6
+ vfscanf                                           /lib/x86_64-linux-gnu/libc.so.6
+ vfscanf@@GLIBC_2.2.5                              /lib/x86_64-linux-gnu/libc.so.6
+ vfscanf@GLIBC_2.2.5                               /lib/x86_64-linux-gnu/libc.so.6
+ vfwprintf                                         /lib/x86_64-linux-gnu/libc.so.6
+ vfwprintf@@GLIBC_2.2.5                            /lib/x86_64-linux-gnu/libc.so.6
+ vfwprintf@GLIBC_2.2.5                             /lib/x86_64-linux-gnu/libc.so.6
+ vfwscanf                                          /lib/x86_64-linux-gnu/libc.so.6
+ vfwscanf@@GLIBC_2.2.5                             /lib/x86_64-linux-gnu/libc.so.6
+ vfwscanf@GLIBC_2.2.5                              /lib/x86_64-linux-gnu/libc.so.6
+ vscanf                                            /lib/x86_64-linux-gnu/libc.so.6
+ vscanf@@GLIBC_2.2.5                               /lib/x86_64-linux-gnu/libc.so.6
+ vscanf@GLIBC_2.2.5                                /lib/x86_64-linux-gnu/libc.so.6
+ vsnprintf                                         /lib/x86_64-linux-gnu/libc.so.6
+ vsnprintf@@GLIBC_2.2.5                            /lib/x86_64-linux-gnu/libc.so.6
+ vsnprintf@GLIBC_2.2.5                             /lib/x86_64-linux-gnu/libc.so.6
+ vsprintf                                          /lib/x86_64-linux-gnu/libc.so.6
+ vsprintf@@GLIBC_2.2.5                             /lib/x86_64-linux-gnu/libc.so.6
+ vsprintf@GLIBC_2.2.5                              /lib/x86_64-linux-gnu/libc.so.6
+ vsscanf                                           /lib/x86_64-linux-gnu/libc.so.6
+ vsscanf@@GLIBC_2.2.5                              /lib/x86_64-linux-gnu/libc.so.6
+ vsscanf@GLIBC_2.2.5                               /lib/x86_64-linux-gnu/libc.so.6
+ vstr_add_byte                                     build/py/vstr.o
+                                                   build/py/objstr.o
+                                                   build/py/lexer.o
+ vstr_add_char                                     build/py/vstr.o
+                                                   build/py/builtinimport.o
+                                                   build/py/lexer.o
+ vstr_add_len                                      build/py/vstr.o
+                                                   build/py/stream.o
+ vstr_add_str                                      build/py/vstr.o
+                                                   build/main.o
+                                                   build/py/builtinimport.o
+ vstr_add_strn                                     build/py/vstr.o
+                                                   build/py/builtinimport.o
+ vstr_clear                                        build/py/vstr.o
+                                                   build/main.o
+                                                   build/py/stream.o
+                                                   build/py/objstr.o
+                                                   build/py/persistentcode.o
+                                                   build/py/lexer.o
+ vstr_cut_head_bytes                               build/py/vstr.o
+ vstr_cut_out_bytes                                build/py/vstr.o
+ vstr_cut_tail_bytes                               build/py/vstr.o
+                                                   build/main.o
+                                                   build/py/stream.o
+                                                   build/py/lexer.o
+ vstr_extend                                       build/py/vstr.o
+                                                   build/py/stream.o
+ vstr_free                                         build/py/vstr.o
+ vstr_hint_size                                    build/py/vstr.o
+ vstr_init                                         build/py/vstr.o
+                                                   build/main.o
+                                                   build/py/stream.o
+                                                   build/py/objstr.o
+                                                   build/py/lexer.o
+ vstr_init_fixed_buf                               build/py/vstr.o
+                                                   build/py/builtinimport.o
+ vstr_init_len                                     build/py/vstr.o
+                                                   build/py/modstruct.o
+                                                   build/py/stream.o
+                                                   build/py/objstr.o
+                                                   build/py/objint.o
+ vstr_init_print                                   build/py/vstr.o
+                                                   build/py/modbuiltins.o
+                                                   build/py/objstr.o
+                                                   build/py/persistentcode.o
+                                                   build/py/parsenum.o
+ vstr_ins_byte                                     build/py/vstr.o
+ vstr_ins_char                                     build/py/vstr.o
+ vstr_new                                          build/py/vstr.o
+ vstr_null_terminated_str                          build/py/vstr.o
+                                                   build/main.o
+                                                   build/py/builtinimport.o
+                                                   build/py/objstr.o
+                                                   build/py/lexer.o
+ vstr_printf                                       build/py/vstr.o
+ vstr_vprintf                                      build/py/vstr.o
+ vswprintf                                         /lib/x86_64-linux-gnu/libc.so.6
+ vswprintf@@GLIBC_2.2.5                            /lib/x86_64-linux-gnu/libc.so.6
+ vswprintf@GLIBC_2.2.5                             /lib/x86_64-linux-gnu/libc.so.6
+ wait                                              /lib/x86_64-linux-gnu/libc.so.6
+ wait3                                             /lib/x86_64-linux-gnu/libc.so.6
+ wait3@@GLIBC_2.2.5                                /lib/x86_64-linux-gnu/libc.so.6
+ wait3@GLIBC_2.2.5                                 /lib/x86_64-linux-gnu/libc.so.6
+ wait4                                             /lib/x86_64-linux-gnu/libc.so.6
+ wait4@@GLIBC_2.2.5                                /lib/x86_64-linux-gnu/libc.so.6
+ wait4@GLIBC_2.2.5                                 /lib/x86_64-linux-gnu/libc.so.6
+ wait@@GLIBC_2.2.5                                 /lib/x86_64-linux-gnu/libc.so.6
+ wait@GLIBC_2.2.5                                  /lib/x86_64-linux-gnu/libc.so.6
+ waitid                                            /lib/x86_64-linux-gnu/libc.so.6
+ waitid@@GLIBC_2.2.5                               /lib/x86_64-linux-gnu/libc.so.6
+ waitid@GLIBC_2.2.5                                /lib/x86_64-linux-gnu/libc.so.6
+ waitpid                                           /lib/x86_64-linux-gnu/libc.so.6
+ waitpid@@GLIBC_2.2.5                              /lib/x86_64-linux-gnu/libc.so.6
+ waitpid@GLIBC_2.2.5                               /lib/x86_64-linux-gnu/libc.so.6
+ wcpcpy                                            /lib/x86_64-linux-gnu/libc.so.6
+ wcpcpy@@GLIBC_2.2.5                               /lib/x86_64-linux-gnu/libc.so.6
+ wcpcpy@GLIBC_2.2.5                                /lib/x86_64-linux-gnu/libc.so.6
+ wcpncpy                                           /lib/x86_64-linux-gnu/libc.so.6
+ wcpncpy@@GLIBC_2.2.5                              /lib/x86_64-linux-gnu/libc.so.6
+ wcpncpy@GLIBC_2.2.5                               /lib/x86_64-linux-gnu/libc.so.6
+ wcrtomb                                           /lib/x86_64-linux-gnu/libc.so.6
+ wcrtomb@@GLIBC_2.2.5                              /lib/x86_64-linux-gnu/libc.so.6
+ wcrtomb@GLIBC_2.2.5                               /lib/x86_64-linux-gnu/libc.so.6
+ wcscasecmp                                        /lib/x86_64-linux-gnu/libc.so.6
+ wcscasecmp@@GLIBC_2.2.5                           /lib/x86_64-linux-gnu/libc.so.6
+ wcscasecmp@GLIBC_2.2.5                            /lib/x86_64-linux-gnu/libc.so.6
+ wcscasecmp_l                                      /lib/x86_64-linux-gnu/libc.so.6
+ wcscasecmp_l@@GLIBC_2.3                           /lib/x86_64-linux-gnu/libc.so.6
+ wcscasecmp_l@GLIBC_2.3                            /lib/x86_64-linux-gnu/libc.so.6
+ wcscat                                            /lib/x86_64-linux-gnu/libc.so.6
+ wcscat@@GLIBC_2.2.5                               /lib/x86_64-linux-gnu/libc.so.6
+ wcscat@GLIBC_2.2.5                                /lib/x86_64-linux-gnu/libc.so.6
+ wcschr                                            /lib/x86_64-linux-gnu/libc.so.6
+ wcschr@@GLIBC_2.2.5                               /lib/x86_64-linux-gnu/libc.so.6
+ wcschr@GLIBC_2.2.5                                /lib/x86_64-linux-gnu/libc.so.6
+ wcschrnul                                         /lib/x86_64-linux-gnu/libc.so.6
+ wcschrnul@@GLIBC_2.2.5                            /lib/x86_64-linux-gnu/libc.so.6
+ wcschrnul@GLIBC_2.2.5                             /lib/x86_64-linux-gnu/libc.so.6
+ wcscmp                                            /lib/x86_64-linux-gnu/libc.so.6
+ wcscmp@@GLIBC_2.2.5                               /lib/x86_64-linux-gnu/libc.so.6
+ wcscmp@GLIBC_2.2.5                                /lib/x86_64-linux-gnu/libc.so.6
+ wcscoll                                           /lib/x86_64-linux-gnu/libc.so.6
+ wcscoll@@GLIBC_2.2.5                              /lib/x86_64-linux-gnu/libc.so.6
+ wcscoll@GLIBC_2.2.5                               /lib/x86_64-linux-gnu/libc.so.6
+ wcscoll_l                                         /lib/x86_64-linux-gnu/libc.so.6
+ wcscoll_l@@GLIBC_2.3                              /lib/x86_64-linux-gnu/libc.so.6
+ wcscoll_l@GLIBC_2.3                               /lib/x86_64-linux-gnu/libc.so.6
+ wcsftime_l                                        /lib/x86_64-linux-gnu/libc.so.6
+ wcsftime_l@@GLIBC_2.3                             /lib/x86_64-linux-gnu/libc.so.6
+ wcsftime_l@GLIBC_2.3                              /lib/x86_64-linux-gnu/libc.so.6
+ wcslen                                            /lib/x86_64-linux-gnu/libc.so.6
+ wcslen@@GLIBC_2.2.5                               /lib/x86_64-linux-gnu/libc.so.6
+ wcslen@GLIBC_2.2.5                                /lib/x86_64-linux-gnu/libc.so.6
+ wcsncasecmp                                       /lib/x86_64-linux-gnu/libc.so.6
+ wcsncasecmp@@GLIBC_2.2.5                          /lib/x86_64-linux-gnu/libc.so.6
+ wcsncasecmp@GLIBC_2.2.5                           /lib/x86_64-linux-gnu/libc.so.6
+ wcsncasecmp_l                                     /lib/x86_64-linux-gnu/libc.so.6
+ wcsncasecmp_l@@GLIBC_2.3                          /lib/x86_64-linux-gnu/libc.so.6
+ wcsncasecmp_l@GLIBC_2.3                           /lib/x86_64-linux-gnu/libc.so.6
+ wcsncpy                                           /lib/x86_64-linux-gnu/libc.so.6
+ wcsncpy@@GLIBC_2.2.5                              /lib/x86_64-linux-gnu/libc.so.6
+ wcsncpy@GLIBC_2.2.5                               /lib/x86_64-linux-gnu/libc.so.6
+ wcsnlen                                           /lib/x86_64-linux-gnu/libc.so.6
+ wcsnlen@@GLIBC_2.2.5                              /lib/x86_64-linux-gnu/libc.so.6
+ wcsnlen@GLIBC_2.2.5                               /lib/x86_64-linux-gnu/libc.so.6
+ wcsnrtombs                                        /lib/x86_64-linux-gnu/libc.so.6
+ wcsnrtombs@@GLIBC_2.2.5                           /lib/x86_64-linux-gnu/libc.so.6
+ wcsnrtombs@GLIBC_2.2.5                            /lib/x86_64-linux-gnu/libc.so.6
+ wcsrtombs                                         /lib/x86_64-linux-gnu/libc.so.6
+ wcsrtombs@@GLIBC_2.2.5                            /lib/x86_64-linux-gnu/libc.so.6
+ wcsrtombs@GLIBC_2.2.5                             /lib/x86_64-linux-gnu/libc.so.6
+ wcstod_l                                          /lib/x86_64-linux-gnu/libc.so.6
+ wcstod_l@@GLIBC_2.3                               /lib/x86_64-linux-gnu/libc.so.6
+ wcstod_l@GLIBC_2.3                                /lib/x86_64-linux-gnu/libc.so.6
+ wcstof128_l                                       /lib/x86_64-linux-gnu/libc.so.6
+ wcstof128_l@@GLIBC_2.26                           /lib/x86_64-linux-gnu/libc.so.6
+ wcstof128_l@GLIBC_2.26                            /lib/x86_64-linux-gnu/libc.so.6
+ wcstof32                                          /lib/x86_64-linux-gnu/libc.so.6
+ wcstof32@@GLIBC_2.27                              /lib/x86_64-linux-gnu/libc.so.6
+ wcstof32@GLIBC_2.27                               /lib/x86_64-linux-gnu/libc.so.6
+ wcstof32_l                                        /lib/x86_64-linux-gnu/libc.so.6
+ wcstof32_l@@GLIBC_2.27                            /lib/x86_64-linux-gnu/libc.so.6
+ wcstof32_l@GLIBC_2.27                             /lib/x86_64-linux-gnu/libc.so.6
+ wcstof32x                                         /lib/x86_64-linux-gnu/libc.so.6
+ wcstof32x@@GLIBC_2.27                             /lib/x86_64-linux-gnu/libc.so.6
+ wcstof32x@GLIBC_2.27                              /lib/x86_64-linux-gnu/libc.so.6
+ wcstof32x_l                                       /lib/x86_64-linux-gnu/libc.so.6
+ wcstof32x_l@@GLIBC_2.27                           /lib/x86_64-linux-gnu/libc.so.6
+ wcstof32x_l@GLIBC_2.27                            /lib/x86_64-linux-gnu/libc.so.6
+ wcstof64                                          /lib/x86_64-linux-gnu/libc.so.6
+ wcstof64@@GLIBC_2.27                              /lib/x86_64-linux-gnu/libc.so.6
+ wcstof64@GLIBC_2.27                               /lib/x86_64-linux-gnu/libc.so.6
+ wcstof64_l                                        /lib/x86_64-linux-gnu/libc.so.6
+ wcstof64_l@@GLIBC_2.27                            /lib/x86_64-linux-gnu/libc.so.6
+ wcstof64_l@GLIBC_2.27                             /lib/x86_64-linux-gnu/libc.so.6
+ wcstof64x                                         /lib/x86_64-linux-gnu/libc.so.6
+ wcstof64x@@GLIBC_2.27                             /lib/x86_64-linux-gnu/libc.so.6
+ wcstof64x@GLIBC_2.27                              /lib/x86_64-linux-gnu/libc.so.6
+ wcstof64x_l                                       /lib/x86_64-linux-gnu/libc.so.6
+ wcstof64x_l@@GLIBC_2.27                           /lib/x86_64-linux-gnu/libc.so.6
+ wcstof64x_l@GLIBC_2.27                            /lib/x86_64-linux-gnu/libc.so.6
+ wcstof_l                                          /lib/x86_64-linux-gnu/libc.so.6
+ wcstof_l@@GLIBC_2.3                               /lib/x86_64-linux-gnu/libc.so.6
+ wcstof_l@GLIBC_2.3                                /lib/x86_64-linux-gnu/libc.so.6
+ wcstol                                            /lib/x86_64-linux-gnu/libc.so.6
+ wcstol@@GLIBC_2.2.5                               /lib/x86_64-linux-gnu/libc.so.6
+ wcstol@GLIBC_2.2.5                                /lib/x86_64-linux-gnu/libc.so.6
+ wcstol_l                                          /lib/x86_64-linux-gnu/libc.so.6
+ wcstol_l@@GLIBC_2.3                               /lib/x86_64-linux-gnu/libc.so.6
+ wcstol_l@GLIBC_2.3                                /lib/x86_64-linux-gnu/libc.so.6
+ wcstold_l                                         /lib/x86_64-linux-gnu/libc.so.6
+ wcstold_l@@GLIBC_2.3                              /lib/x86_64-linux-gnu/libc.so.6
+ wcstold_l@GLIBC_2.3                               /lib/x86_64-linux-gnu/libc.so.6
+ wcstoll                                           /lib/x86_64-linux-gnu/libc.so.6
+ wcstoll@@GLIBC_2.2.5                              /lib/x86_64-linux-gnu/libc.so.6
+ wcstoll@GLIBC_2.2.5                               /lib/x86_64-linux-gnu/libc.so.6
+ wcstoll_l                                         /lib/x86_64-linux-gnu/libc.so.6
+ wcstoll_l@@GLIBC_2.3                              /lib/x86_64-linux-gnu/libc.so.6
+ wcstoll_l@GLIBC_2.3                               /lib/x86_64-linux-gnu/libc.so.6
+ wcstoq                                            /lib/x86_64-linux-gnu/libc.so.6
+ wcstoq@@GLIBC_2.2.5                               /lib/x86_64-linux-gnu/libc.so.6
+ wcstoq@GLIBC_2.2.5                                /lib/x86_64-linux-gnu/libc.so.6
+ wcstoul                                           /lib/x86_64-linux-gnu/libc.so.6
+ wcstoul@@GLIBC_2.2.5                              /lib/x86_64-linux-gnu/libc.so.6
+ wcstoul@GLIBC_2.2.5                               /lib/x86_64-linux-gnu/libc.so.6
+ wcstoul_l                                         /lib/x86_64-linux-gnu/libc.so.6
+ wcstoul_l@@GLIBC_2.3                              /lib/x86_64-linux-gnu/libc.so.6
+ wcstoul_l@GLIBC_2.3                               /lib/x86_64-linux-gnu/libc.so.6
+ wcstoull                                          /lib/x86_64-linux-gnu/libc.so.6
+ wcstoull@@GLIBC_2.2.5                             /lib/x86_64-linux-gnu/libc.so.6
+ wcstoull@GLIBC_2.2.5                              /lib/x86_64-linux-gnu/libc.so.6
+ wcstoull_l                                        /lib/x86_64-linux-gnu/libc.so.6
+ wcstoull_l@@GLIBC_2.3                             /lib/x86_64-linux-gnu/libc.so.6
+ wcstoull_l@GLIBC_2.3                              /lib/x86_64-linux-gnu/libc.so.6
+ wcstouq                                           /lib/x86_64-linux-gnu/libc.so.6
+ wcstouq@@GLIBC_2.2.5                              /lib/x86_64-linux-gnu/libc.so.6
+ wcstouq@GLIBC_2.2.5                               /lib/x86_64-linux-gnu/libc.so.6
+ wcswcs                                            /lib/x86_64-linux-gnu/libc.so.6
+ wcswcs@@GLIBC_2.2.5                               /lib/x86_64-linux-gnu/libc.so.6
+ wcswcs@GLIBC_2.2.5                                /lib/x86_64-linux-gnu/libc.so.6
+ wcsxfrm_l                                         /lib/x86_64-linux-gnu/libc.so.6
+ wcsxfrm_l@@GLIBC_2.3                              /lib/x86_64-linux-gnu/libc.so.6
+ wcsxfrm_l@GLIBC_2.3                               /lib/x86_64-linux-gnu/libc.so.6
+ wctrans                                           /lib/x86_64-linux-gnu/libc.so.6
+ wctrans@@GLIBC_2.2.5                              /lib/x86_64-linux-gnu/libc.so.6
+ wctrans@GLIBC_2.2.5                               /lib/x86_64-linux-gnu/libc.so.6
+ wctrans_l                                         /lib/x86_64-linux-gnu/libc.so.6
+ wctrans_l@@GLIBC_2.3                              /lib/x86_64-linux-gnu/libc.so.6
+ wctrans_l@GLIBC_2.3                               /lib/x86_64-linux-gnu/libc.so.6
+ wctype                                            /lib/x86_64-linux-gnu/libc.so.6
+ wctype@@GLIBC_2.2.5                               /lib/x86_64-linux-gnu/libc.so.6
+ wctype@GLIBC_2.2.5                                /lib/x86_64-linux-gnu/libc.so.6
+ wctype_l                                          /lib/x86_64-linux-gnu/libc.so.6
+ wctype_l@@GLIBC_2.3                               /lib/x86_64-linux-gnu/libc.so.6
+ wctype_l@GLIBC_2.3                                /lib/x86_64-linux-gnu/libc.so.6
+ wmemchr                                           /lib/x86_64-linux-gnu/libc.so.6
+ wmemchr@@GLIBC_2.2.5                              /lib/x86_64-linux-gnu/libc.so.6
+ wmemchr@GLIBC_2.2.5                               /lib/x86_64-linux-gnu/libc.so.6
+ wmemcpy                                           /lib/x86_64-linux-gnu/libc.so.6
+ wmemcpy@@GLIBC_2.2.5                              /lib/x86_64-linux-gnu/libc.so.6
+ wmemcpy@GLIBC_2.2.5                               /lib/x86_64-linux-gnu/libc.so.6
+ wmemmove                                          /lib/x86_64-linux-gnu/libc.so.6
+ wmemmove@@GLIBC_2.2.5                             /lib/x86_64-linux-gnu/libc.so.6
+ wmemmove@GLIBC_2.2.5                              /lib/x86_64-linux-gnu/libc.so.6
+ wmempcpy                                          /lib/x86_64-linux-gnu/libc.so.6
+ wmempcpy@@GLIBC_2.2.5                             /lib/x86_64-linux-gnu/libc.so.6
+ wmempcpy@GLIBC_2.2.5                              /lib/x86_64-linux-gnu/libc.so.6
+ wmemset                                           /lib/x86_64-linux-gnu/libc.so.6
+ wmemset@@GLIBC_2.2.5                              /lib/x86_64-linux-gnu/libc.so.6
+ wmemset@GLIBC_2.2.5                               /lib/x86_64-linux-gnu/libc.so.6
+ write                                             /lib/x86_64-linux-gnu/libc.so.6
+                                                   build/main.o
+                                                   build/py/persistentcode.o
+ write@@GLIBC_2.2.5                                /lib/x86_64-linux-gnu/libc.so.6
+ write@GLIBC_2.2.5                                 /lib/x86_64-linux-gnu/libc.so.6
+ writev                                            /lib/x86_64-linux-gnu/libc.so.6
+ writev@@GLIBC_2.2.5                               /lib/x86_64-linux-gnu/libc.so.6
+ writev@GLIBC_2.2.5                                /lib/x86_64-linux-gnu/libc.so.6
+ y0                                                /lib/x86_64-linux-gnu/libm.so.6
+ y0@@GLIBC_2.2.5                                   /lib/x86_64-linux-gnu/libm.so.6
+ y0@GLIBC_2.2.5                                    /lib/x86_64-linux-gnu/libm.so.6
+ y0f                                               /lib/x86_64-linux-gnu/libm.so.6
+ y0f128                                            /lib/x86_64-linux-gnu/libm.so.6
+ y0f128@@GLIBC_2.26                                /lib/x86_64-linux-gnu/libm.so.6
+ y0f128@GLIBC_2.26                                 /lib/x86_64-linux-gnu/libm.so.6
+ y0f32                                             /lib/x86_64-linux-gnu/libm.so.6
+ y0f32@@GLIBC_2.27                                 /lib/x86_64-linux-gnu/libm.so.6
+ y0f32@GLIBC_2.27                                  /lib/x86_64-linux-gnu/libm.so.6
+ y0f32x                                            /lib/x86_64-linux-gnu/libm.so.6
+ y0f32x@@GLIBC_2.27                                /lib/x86_64-linux-gnu/libm.so.6
+ y0f32x@GLIBC_2.27                                 /lib/x86_64-linux-gnu/libm.so.6
+ y0f64                                             /lib/x86_64-linux-gnu/libm.so.6
+ y0f64@@GLIBC_2.27                                 /lib/x86_64-linux-gnu/libm.so.6
+ y0f64@GLIBC_2.27                                  /lib/x86_64-linux-gnu/libm.so.6
+ y0f64x                                            /lib/x86_64-linux-gnu/libm.so.6
+ y0f64x@@GLIBC_2.27                                /lib/x86_64-linux-gnu/libm.so.6
+ y0f64x@GLIBC_2.27                                 /lib/x86_64-linux-gnu/libm.so.6
+ y0f@@GLIBC_2.2.5                                  /lib/x86_64-linux-gnu/libm.so.6
+ y0f@GLIBC_2.2.5                                   /lib/x86_64-linux-gnu/libm.so.6
+ y0l                                               /lib/x86_64-linux-gnu/libm.so.6
+ y0l@@GLIBC_2.2.5                                  /lib/x86_64-linux-gnu/libm.so.6
+ y0l@GLIBC_2.2.5                                   /lib/x86_64-linux-gnu/libm.so.6
+ y1                                                /lib/x86_64-linux-gnu/libm.so.6
+ y1@@GLIBC_2.2.5                                   /lib/x86_64-linux-gnu/libm.so.6
+ y1@GLIBC_2.2.5                                    /lib/x86_64-linux-gnu/libm.so.6
+ y1f                                               /lib/x86_64-linux-gnu/libm.so.6
+ y1f128                                            /lib/x86_64-linux-gnu/libm.so.6
+ y1f128@@GLIBC_2.26                                /lib/x86_64-linux-gnu/libm.so.6
+ y1f128@GLIBC_2.26                                 /lib/x86_64-linux-gnu/libm.so.6
+ y1f32                                             /lib/x86_64-linux-gnu/libm.so.6
+ y1f32@@GLIBC_2.27                                 /lib/x86_64-linux-gnu/libm.so.6
+ y1f32@GLIBC_2.27                                  /lib/x86_64-linux-gnu/libm.so.6
+ y1f32x                                            /lib/x86_64-linux-gnu/libm.so.6
+ y1f32x@@GLIBC_2.27                                /lib/x86_64-linux-gnu/libm.so.6
+ y1f32x@GLIBC_2.27                                 /lib/x86_64-linux-gnu/libm.so.6
+ y1f64                                             /lib/x86_64-linux-gnu/libm.so.6
+ y1f64@@GLIBC_2.27                                 /lib/x86_64-linux-gnu/libm.so.6
+ y1f64@GLIBC_2.27                                  /lib/x86_64-linux-gnu/libm.so.6
+ y1f64x                                            /lib/x86_64-linux-gnu/libm.so.6
+ y1f64x@@GLIBC_2.27                                /lib/x86_64-linux-gnu/libm.so.6
+ y1f64x@GLIBC_2.27                                 /lib/x86_64-linux-gnu/libm.so.6
+ y1f@@GLIBC_2.2.5                                  /lib/x86_64-linux-gnu/libm.so.6
+ y1f@GLIBC_2.2.5                                   /lib/x86_64-linux-gnu/libm.so.6
+ y1l                                               /lib/x86_64-linux-gnu/libm.so.6
+ y1l@@GLIBC_2.2.5                                  /lib/x86_64-linux-gnu/libm.so.6
+ y1l@GLIBC_2.2.5                                   /lib/x86_64-linux-gnu/libm.so.6
+ yn                                                /lib/x86_64-linux-gnu/libm.so.6
+ yn@@GLIBC_2.2.5                                   /lib/x86_64-linux-gnu/libm.so.6
+ yn@GLIBC_2.2.5                                    /lib/x86_64-linux-gnu/libm.so.6
+ ynf                                               /lib/x86_64-linux-gnu/libm.so.6
+ ynf128                                            /lib/x86_64-linux-gnu/libm.so.6
+ ynf128@@GLIBC_2.26                                /lib/x86_64-linux-gnu/libm.so.6
+ ynf128@GLIBC_2.26                                 /lib/x86_64-linux-gnu/libm.so.6
+ ynf32                                             /lib/x86_64-linux-gnu/libm.so.6
+ ynf32@@GLIBC_2.27                                 /lib/x86_64-linux-gnu/libm.so.6
+ ynf32@GLIBC_2.27                                  /lib/x86_64-linux-gnu/libm.so.6
+ ynf32x                                            /lib/x86_64-linux-gnu/libm.so.6
+ ynf32x@@GLIBC_2.27                                /lib/x86_64-linux-gnu/libm.so.6
+ ynf32x@GLIBC_2.27                                 /lib/x86_64-linux-gnu/libm.so.6
+ ynf64                                             /lib/x86_64-linux-gnu/libm.so.6
+ ynf64@@GLIBC_2.27                                 /lib/x86_64-linux-gnu/libm.so.6
+ ynf64@GLIBC_2.27                                  /lib/x86_64-linux-gnu/libm.so.6
+ ynf64x                                            /lib/x86_64-linux-gnu/libm.so.6
+ ynf64x@@GLIBC_2.27                                /lib/x86_64-linux-gnu/libm.so.6
+ ynf64x@GLIBC_2.27                                 /lib/x86_64-linux-gnu/libm.so.6
+ ynf@@GLIBC_2.2.5                                  /lib/x86_64-linux-gnu/libm.so.6
+ ynf@GLIBC_2.2.5                                   /lib/x86_64-linux-gnu/libm.so.6
+ ynl                                               /lib/x86_64-linux-gnu/libm.so.6
+ ynl@@GLIBC_2.2.5                                  /lib/x86_64-linux-gnu/libm.so.6
+ ynl@GLIBC_2.2.5                                   /lib/x86_64-linux-gnu/libm.so.6
diff -crNb MicorpythonOriginal1.12/micropython/ports/stm32/boards/.ipynb_checkpoints/Untitled-checkpoint.ipynb micropython1.12_withUlab/micropython/ports/stm32/boards/.ipynb_checkpoints/Untitled-checkpoint.ipynb
*** MicorpythonOriginal1.12/micropython/ports/stm32/boards/.ipynb_checkpoints/Untitled-checkpoint.ipynb	1970-01-01 02:00:00.000000000 +0200
--- micropython1.12_withUlab/micropython/ports/stm32/boards/.ipynb_checkpoints/Untitled-checkpoint.ipynb	2020-06-18 18:08:36.878001504 +0200
***************
*** 0 ****
--- 1,6 ----
+ {
+  "cells": [],
+  "metadata": {},
+  "nbformat": 4,
+  "nbformat_minor": 4
+ }
diff -crNb MicorpythonOriginal1.12/micropython/ports/stm32/boards/manifest.py micropython1.12_withUlab/micropython/ports/stm32/boards/manifest.py
*** MicorpythonOriginal1.12/micropython/ports/stm32/boards/manifest.py	2020-04-13 07:21:17.000000000 +0200
--- micropython1.12_withUlab/micropython/ports/stm32/boards/manifest.py	2020-06-19 20:08:50.886500393 +0200
***************
*** 1,3 ****
--- 1,4 ----
+ include("$(MPY_DIR)/extmod/uasyncio/manifest.py")
  freeze('$(MPY_DIR)/drivers/dht', 'dht.py')
  freeze('$(MPY_DIR)/drivers/display', ('lcd160cr.py', 'lcd160cr_test.py'))
  freeze('$(MPY_DIR)/drivers/onewire', 'onewire.py')
diff -crNb MicorpythonOriginal1.12/micropython/ports/stm32/boards/STM32F7DISC/mpconfigboard.h micropython1.12_withUlab/micropython/ports/stm32/boards/STM32F7DISC/mpconfigboard.h
*** MicorpythonOriginal1.12/micropython/ports/stm32/boards/STM32F7DISC/mpconfigboard.h	2020-04-13 07:21:10.000000000 +0200
--- micropython1.12_withUlab/micropython/ports/stm32/boards/STM32F7DISC/mpconfigboard.h	2020-06-16 16:48:35.824645859 +0200
***************
*** 82,99 ****
  #define MICROPY_HW_USB_OTG_ID_PIN      (pin_A10)
  
  // Ethernet via RMII
! #define MICROPY_HW_ETH_MDC          (pin_C1)
! #define MICROPY_HW_ETH_MDIO         (pin_A2)
! #define MICROPY_HW_ETH_RMII_REF_CLK (pin_A1)
! #define MICROPY_HW_ETH_RMII_CRS_DV  (pin_A7)
! #define MICROPY_HW_ETH_RMII_RXD0    (pin_C4)
! #define MICROPY_HW_ETH_RMII_RXD1    (pin_C5)
! #define MICROPY_HW_ETH_RMII_RXER    (pin_G2)
! #define MICROPY_HW_ETH_RMII_TX_EN   (pin_G11)
! #define MICROPY_HW_ETH_RMII_TXD0    (pin_G13)
! #define MICROPY_HW_ETH_RMII_TXD1    (pin_G14)
  
  // SDRAM
  #define MICROPY_HW_SDRAM_SIZE  (64 / 8 * 1024 * 1024)  // 64 Mbit
  #define MICROPY_HW_SDRAM_STARTUP_TEST             (1)
  #define MICROPY_HEAP_START              sdram_start()
--- 82,100 ----
  #define MICROPY_HW_USB_OTG_ID_PIN      (pin_A10)
  
  // Ethernet via RMII
! //#define MICROPY_HW_ETH_MDC          (pin_C1)
! //#define MICROPY_HW_ETH_MDIO         (pin_A2)
! //#define MICROPY_HW_ETH_RMII_REF_CLK (pin_A1)
! //#define MICROPY_HW_ETH_RMII_CRS_DV  (pin_A7)
! //#define MICROPY_HW_ETH_RMII_RXD0    (pin_C4)
! //#define MICROPY_HW_ETH_RMII_RXD1    (pin_C5)
! //#define MICROPY_HW_ETH_RMII_RXER    (pin_G2)
! //#define MICROPY_HW_ETH_RMII_TX_EN   (pin_G11)
! //#define MICROPY_HW_ETH_RMII_TXD0    (pin_G13)
! //#define MICROPY_HW_ETH_RMII_TXD1    (pin_G14)
  
  // SDRAM
+ //#define MICROPY_HW_SDRAM_SIZE  (4 * 1024 * 1024)  // 64 Mbit
  #define MICROPY_HW_SDRAM_SIZE  (64 / 8 * 1024 * 1024)  // 64 Mbit
  #define MICROPY_HW_SDRAM_STARTUP_TEST             (1)
  #define MICROPY_HEAP_START              sdram_start()
diff -crNb MicorpythonOriginal1.12/micropython/ports/stm32/boards/STM32F7DISC/mpconfigboard.mk micropython1.12_withUlab/micropython/ports/stm32/boards/STM32F7DISC/mpconfigboard.mk
*** MicorpythonOriginal1.12/micropython/ports/stm32/boards/STM32F7DISC/mpconfigboard.mk	2020-04-13 07:21:10.000000000 +0200
--- micropython1.12_withUlab/micropython/ports/stm32/boards/STM32F7DISC/mpconfigboard.mk	2020-06-16 14:52:54.349747637 +0200
***************
*** 6,11 ****
  TEXT1_ADDR = 0x08020000
  
  # MicroPython settings
! MICROPY_PY_LWIP = 1
! MICROPY_PY_USSL = 1
! MICROPY_SSL_MBEDTLS = 1
--- 6,11 ----
  TEXT1_ADDR = 0x08020000
  
  # MicroPython settings
! MICROPY_PY_LWIP = 0
! MICROPY_PY_USSL = 0
! MICROPY_SSL_MBEDTLS = 0
diff -crNb MicorpythonOriginal1.12/micropython/ports/stm32/boards/stm32f7xx_hal_conf_base.h micropython1.12_withUlab/micropython/ports/stm32/boards/stm32f7xx_hal_conf_base.h
*** MicorpythonOriginal1.12/micropython/ports/stm32/boards/stm32f7xx_hal_conf_base.h	2020-04-13 07:21:10.000000000 +0200
--- micropython1.12_withUlab/micropython/ports/stm32/boards/stm32f7xx_hal_conf_base.h	2020-06-16 10:27:30.559726245 +0200
***************
*** 53,58 ****
--- 53,60 ----
  #include "stm32f7xx_hal_uart.h"
  #include "stm32f7xx_hal_usart.h"
  #include "stm32f7xx_hal_wwdg.h"
+ #include "stm32f7xx_hal_ltdc.h"
+ #include "stm32f7xx_hal_ltdc_ex.h"
  
  // Enable various HAL modules
  #define HAL_ADC_MODULE_ENABLED
***************
*** 81,86 ****
--- 83,90 ----
  #define HAL_UART_MODULE_ENABLED
  #define HAL_USART_MODULE_ENABLED
  #define HAL_WWDG_MODULE_ENABLED
+ #define HAL_LTDC_MODULE_ENABLED
+ 
  
  // Oscillator values in Hz
  #define HSI_VALUE (16000000)
diff -crNb MicorpythonOriginal1.12/micropython/ports/stm32/boards/stm32h7xx_hal_conf_base.h micropython1.12_withUlab/micropython/ports/stm32/boards/stm32h7xx_hal_conf_base.h
*** MicorpythonOriginal1.12/micropython/ports/stm32/boards/stm32h7xx_hal_conf_base.h	2020-04-13 07:21:10.000000000 +0200
--- micropython1.12_withUlab/micropython/ports/stm32/boards/stm32h7xx_hal_conf_base.h	2020-06-16 10:22:38.469526556 +0200
***************
*** 53,58 ****
--- 53,60 ----
  #include "stm32h7xx_hal_uart.h"
  #include "stm32h7xx_hal_usart.h"
  #include "stm32h7xx_hal_wwdg.h"
+ #include "stm32h7xx_hal_ltdc.h"
+ #include "stm32h7xx_hal_ltdc_ex.h"
  
  // Enable various HAL modules
  #define HAL_ADC_MODULE_ENABLED
diff -crNb MicorpythonOriginal1.12/micropython/ports/stm32/boards/Untitled.ipynb micropython1.12_withUlab/micropython/ports/stm32/boards/Untitled.ipynb
*** MicorpythonOriginal1.12/micropython/ports/stm32/boards/Untitled.ipynb	1970-01-01 02:00:00.000000000 +0200
--- micropython1.12_withUlab/micropython/ports/stm32/boards/Untitled.ipynb	2020-06-18 19:16:42.453931196 +0200
***************
*** 0 ****
--- 1,102 ----
+ {
+  "cells": [
+   {
+    "cell_type": "code",
+    "execution_count": 19,
+    "metadata": {},
+    "outputs": [
+     {
+      "name": "stdout",
+      "output_type": "stream",
+      "text": [
+       "Found serial ports: /dev/ttyACM0, /dev/ttyS0 \n",
+       "\u001b[34mConnecting to --port=/dev/ttyACM0 --baud=115200 \u001b[0m\n",
+       "\u001b[34mReady.\n",
+       "\u001b[0m"
+      ]
+     }
+    ],
+    "source": [
+     "%serialconnect /dev/ttyACM0"
+    ]
+   },
+   {
+    "cell_type": "code",
+    "execution_count": 20,
+    "metadata": {},
+    "outputs": [],
+    "source": [
+     "import pyb\n",
+     "\n",
+     "import ulab as np"
+    ]
+   },
+   {
+    "cell_type": "code",
+    "execution_count": 21,
+    "metadata": {},
+    "outputs": [],
+    "source": [
+     "a=np.array([1,2,3,45])"
+    ]
+   },
+   {
+    "cell_type": "code",
+    "execution_count": 18,
+    "metadata": {},
+    "outputs": [
+     {
+      "name": "stdout",
+      "output_type": "stream",
+      "text": [
+       "array([1.0, 2.0, 3.0, 45.0], dtype=float)\r\n"
+      ]
+     }
+    ],
+    "source": [
+     "print(a)"
+    ]
+   },
+   {
+    "cell_type": "code",
+    "execution_count": 26,
+    "metadata": {},
+    "outputs": [
+     {
+      "name": "stderr",
+      "output_type": "stream",
+      "text": [
+       "Traceback (most recent call last):\n",
+       "  File \"<stdin>\", line 1, in <module>\n",
+       "ImportError: no module named 'uasynchio'\n"
+      ]
+     }
+    ],
+    "source": [
+     "import uasynchio"
+    ]
+   },
+   {
+    "cell_type": "code",
+    "execution_count": null,
+    "metadata": {},
+    "outputs": [],
+    "source": []
+   }
+  ],
+  "metadata": {
+   "kernelspec": {
+    "display_name": "MicroPython - USB",
+    "language": "micropython",
+    "name": "micropython"
+   },
+   "language_info": {
+    "codemirror_mode": "python",
+    "file_extension": ".py",
+    "mimetype": "text/python",
+    "name": "micropython"
+   }
+  },
+  "nbformat": 4,
+  "nbformat_minor": 4
+ }
diff -crNb MicorpythonOriginal1.12/micropython/ports/stm32/dma_init.c micropython1.12_withUlab/micropython/ports/stm32/dma_init.c
*** MicorpythonOriginal1.12/micropython/ports/stm32/dma_init.c	1970-01-01 02:00:00.000000000 +0200
--- micropython1.12_withUlab/micropython/ports/stm32/dma_init.c	2020-06-13 11:45:57.000000000 +0200
***************
*** 0 ****
--- 1,286 ----
+ /*
+  * dma_init.c
+  *
+  *  Created on: 21 Jul 2017
+  *      Author: graeme
+  */
+ 
+ 
+ 
+ 
+ #include <stdio.h>
+ #include <string.h>
+ 
+ #include "py/mphal.h"
+ #include "py/nlr.h"
+ #include "py/runtime.h"
+ 
+ #include "pin.h"
+ #include "genhdr/pins.h"
+ #include "bufhelper.h"
+ #include "spi.h"
+ #include "font_petme128_8x8.h"
+ #include "lcd.h"
+ void BSP_SDRAM_MspInit(SDRAM_HandleTypeDef  *hsdram, void *Params);
+ void BSP_SDRAM_Initialization_sequence(uint32_t RefreshCount);
+ 
+ #define   SDRAM_OK         ((uint8_t)0x00)
+ #define   SDRAM_ERROR      ((uint8_t)0x01)
+ 
+ /** @defgroup STM32746G_DISCOVERY_SDRAM_Exported_Constants STM32746G_DISCOVERY_SDRAM Exported Constants
+   * @{
+   */
+ #define SDRAM_DEVICE_ADDR  ((uint32_t)0xC0000000)
+ #define SDRAM_DEVICE_SIZE  ((uint32_t)0x800000)  /* SDRAM device size in MBytes */
+ 
+ /* #define SDRAM_MEMORY_WIDTH            FMC_SDRAM_MEM_BUS_WIDTH_8  */
+ #define SDRAM_MEMORY_WIDTH               FMC_SDRAM_MEM_BUS_WIDTH_16
+ 
+ #define SDCLOCK_PERIOD                   FMC_SDRAM_CLOCK_PERIOD_2
+ /* #define SDCLOCK_PERIOD                FMC_SDRAM_CLOCK_PERIOD_3 */
+ 
+ #define REFRESH_COUNT                    ((uint32_t)0x0603)   /* SDRAM refresh counter (100Mhz SD clock) */
+ 
+ #define SDRAM_TIMEOUT                    ((uint32_t)0xFFFF)
+ 
+ /* DMA definitions for SDRAM DMA transfer */
+ #define __DMAx_CLK_ENABLE                 __HAL_RCC_DMA2_CLK_ENABLE
+ #define __DMAx_CLK_DISABLE                __HAL_RCC_DMA2_CLK_DISABLE
+ #define SDRAM_DMAx_CHANNEL                DMA_CHANNEL_0
+ #define SDRAM_DMAx_STREAM                 DMA2_Stream0
+ #define SDRAM_DMAx_IRQn                   DMA2_Stream0_IRQn
+ #define BSP_SDRAM_DMA_IRQHandler          DMA2_Stream0_IRQHandler
+ /**
+   * @}
+   */
+ 
+ /**
+   * @brief  FMC SDRAM Mode definition register defines
+   */
+ #define SDRAM_MODEREG_BURST_LENGTH_1             ((uint16_t)0x0000)
+ #define SDRAM_MODEREG_BURST_LENGTH_2             ((uint16_t)0x0001)
+ #define SDRAM_MODEREG_BURST_LENGTH_4             ((uint16_t)0x0002)
+ #define SDRAM_MODEREG_BURST_LENGTH_8             ((uint16_t)0x0004)
+ #define SDRAM_MODEREG_BURST_TYPE_SEQUENTIAL      ((uint16_t)0x0000)
+ #define SDRAM_MODEREG_BURST_TYPE_INTERLEAVED     ((uint16_t)0x0008)
+ #define SDRAM_MODEREG_CAS_LATENCY_2              ((uint16_t)0x0020)
+ #define SDRAM_MODEREG_CAS_LATENCY_3              ((uint16_t)0x0030)
+ #define SDRAM_MODEREG_OPERATING_MODE_STANDARD    ((uint16_t)0x0000)
+ #define SDRAM_MODEREG_WRITEBURST_MODE_PROGRAMMED ((uint16_t)0x0000)
+ #define SDRAM_MODEREG_WRITEBURST_MODE_SINGLE     ((uint16_t)0x0200)
+ 
+ 
+ SDRAM_HandleTypeDef sdramHandle;
+ static FMC_SDRAM_TimingTypeDef Timing;
+ static FMC_SDRAM_CommandTypeDef Command;
+ 
+ 
+ /** @defgroup STM32746G_DISCOVERY_SDRAM_Exported_Functions STM32746G_DISCOVERY_SDRAM Exported Functions
+   * @{
+   */
+ 
+ /**
+   * @brief  Initializes the SDRAM device.
+   * @retval SDRAM status
+   */
+ uint8_t BSP_SDRAM_Init(void)
+ {
+   static uint8_t sdramstatus = SDRAM_ERROR;
+   /* SDRAM device configuration */
+   sdramHandle.Instance = FMC_SDRAM_DEVICE;
+ 
+   /* Timing configuration for 100Mhz as SD clock frequency (System clock is up to 200Mhz) */
+   Timing.LoadToActiveDelay    = 2;
+   Timing.ExitSelfRefreshDelay = 7;
+   Timing.SelfRefreshTime      = 4;
+   Timing.RowCycleDelay        = 7;
+   Timing.WriteRecoveryTime    = 2;
+   Timing.RPDelay              = 2;
+   Timing.RCDDelay             = 2;
+ 
+   sdramHandle.Init.SDBank             = FMC_SDRAM_BANK1;
+   sdramHandle.Init.ColumnBitsNumber   = FMC_SDRAM_COLUMN_BITS_NUM_8;
+   sdramHandle.Init.RowBitsNumber      = FMC_SDRAM_ROW_BITS_NUM_12;
+   sdramHandle.Init.MemoryDataWidth    = SDRAM_MEMORY_WIDTH;
+   sdramHandle.Init.InternalBankNumber = FMC_SDRAM_INTERN_BANKS_NUM_4;
+   sdramHandle.Init.CASLatency         = FMC_SDRAM_CAS_LATENCY_2;
+   sdramHandle.Init.WriteProtection    = FMC_SDRAM_WRITE_PROTECTION_DISABLE;
+   sdramHandle.Init.SDClockPeriod      = SDCLOCK_PERIOD;
+   sdramHandle.Init.ReadBurst          = FMC_SDRAM_RBURST_ENABLE;
+   sdramHandle.Init.ReadPipeDelay      = FMC_SDRAM_RPIPE_DELAY_0;
+ 
+   /* SDRAM controller initialization */
+ 
+   BSP_SDRAM_MspInit(&sdramHandle, NULL); /* __weak function can be rewritten by the application */
+ 
+   if(HAL_SDRAM_Init(&sdramHandle, &Timing) != HAL_OK)
+   {
+     sdramstatus = SDRAM_ERROR;
+   }
+   else
+   {
+     sdramstatus = SDRAM_OK;
+   }
+ 
+   /* SDRAM initialization sequence */
+   BSP_SDRAM_Initialization_sequence(REFRESH_COUNT);
+ 
+   return sdramstatus;
+ }
+ 
+ 
+ /**
+   * @brief  Initializes SDRAM MSP.
+   * @param  hsdram: SDRAM handle
+   * @param  Params
+   * @retval None
+   */
+ void BSP_SDRAM_MspInit(SDRAM_HandleTypeDef  *hsdram, void *Params)
+ {
+   static DMA_HandleTypeDef dma_handle;
+   GPIO_InitTypeDef gpio_init_structure;
+ 
+   /* Enable FMC clock */
+   __HAL_RCC_FMC_CLK_ENABLE();
+ 
+   /* Enable chosen DMAx clock */
+   __DMAx_CLK_ENABLE();
+ 
+   /* Enable GPIOs clock */
+   __HAL_RCC_GPIOC_CLK_ENABLE();
+   __HAL_RCC_GPIOD_CLK_ENABLE();
+   __HAL_RCC_GPIOE_CLK_ENABLE();
+   __HAL_RCC_GPIOF_CLK_ENABLE();
+   __HAL_RCC_GPIOG_CLK_ENABLE();
+   __HAL_RCC_GPIOH_CLK_ENABLE();
+ 
+   /* Common GPIO configuration */
+   gpio_init_structure.Mode      = GPIO_MODE_AF_PP;
+   gpio_init_structure.Pull      = GPIO_PULLUP;
+   gpio_init_structure.Speed     = GPIO_SPEED_FAST;
+   gpio_init_structure.Alternate = GPIO_AF12_FMC;
+ 
+   /* GPIOC configuration */
+   gpio_init_structure.Pin   = GPIO_PIN_3;
+   HAL_GPIO_Init(GPIOC, &gpio_init_structure);
+ 
+   /* GPIOD configuration */
+   gpio_init_structure.Pin   = GPIO_PIN_0 | GPIO_PIN_1 | GPIO_PIN_8 | GPIO_PIN_9 |
+                               GPIO_PIN_10 | GPIO_PIN_14 | GPIO_PIN_15;
+   HAL_GPIO_Init(GPIOD, &gpio_init_structure);
+ 
+   /* GPIOE configuration */
+   gpio_init_structure.Pin   = GPIO_PIN_0 | GPIO_PIN_1 | GPIO_PIN_7| GPIO_PIN_8 | GPIO_PIN_9 |\
+                               GPIO_PIN_10 | GPIO_PIN_11 | GPIO_PIN_12 | GPIO_PIN_13 | GPIO_PIN_14 |\
+                               GPIO_PIN_15;
+   HAL_GPIO_Init(GPIOE, &gpio_init_structure);
+ 
+   /* GPIOF configuration */
+   gpio_init_structure.Pin   = GPIO_PIN_0 | GPIO_PIN_1 | GPIO_PIN_2| GPIO_PIN_3 | GPIO_PIN_4 |\
+                               GPIO_PIN_5 | GPIO_PIN_11 | GPIO_PIN_12 | GPIO_PIN_13 | GPIO_PIN_14 |\
+                               GPIO_PIN_15;
+   HAL_GPIO_Init(GPIOF, &gpio_init_structure);
+ 
+   /* GPIOG configuration */
+   gpio_init_structure.Pin   = GPIO_PIN_0 | GPIO_PIN_1 | GPIO_PIN_4| GPIO_PIN_5 | GPIO_PIN_8 |\
+                               GPIO_PIN_15;
+   HAL_GPIO_Init(GPIOG, &gpio_init_structure);
+ 
+   /* GPIOH configuration */
+   gpio_init_structure.Pin   = GPIO_PIN_3 | GPIO_PIN_5;
+   HAL_GPIO_Init(GPIOH, &gpio_init_structure);
+ 
+   /* Configure common DMA parameters */
+   dma_handle.Init.Channel             = SDRAM_DMAx_CHANNEL;
+   dma_handle.Init.Direction           = DMA_MEMORY_TO_MEMORY;
+   dma_handle.Init.PeriphInc           = DMA_PINC_ENABLE;
+   dma_handle.Init.MemInc              = DMA_MINC_ENABLE;
+   dma_handle.Init.PeriphDataAlignment = DMA_PDATAALIGN_WORD;
+   dma_handle.Init.MemDataAlignment    = DMA_MDATAALIGN_WORD;
+   dma_handle.Init.Mode                = DMA_NORMAL;
+   dma_handle.Init.Priority            = DMA_PRIORITY_HIGH;
+   dma_handle.Init.FIFOMode            = DMA_FIFOMODE_DISABLE;
+   dma_handle.Init.FIFOThreshold       = DMA_FIFO_THRESHOLD_FULL;
+   dma_handle.Init.MemBurst            = DMA_MBURST_SINGLE;
+   dma_handle.Init.PeriphBurst         = DMA_PBURST_SINGLE;
+ 
+   dma_handle.Instance = SDRAM_DMAx_STREAM;
+ 
+    /* Associate the DMA handle */
+   __HAL_LINKDMA(hsdram, hdma, dma_handle);
+ 
+   /* Deinitialize the stream for new transfer */
+   HAL_DMA_DeInit(&dma_handle);
+ 
+   /* Configure the DMA stream */
+   HAL_DMA_Init(&dma_handle);
+ 
+   /* NVIC configuration for DMA transfer complete interrupt */
+   HAL_NVIC_SetPriority(SDRAM_DMAx_IRQn, 0x0F, 0);
+   HAL_NVIC_EnableIRQ(SDRAM_DMAx_IRQn);
+ }
+ 
+ 
+ /**
+   * @brief  Programs the SDRAM device.
+   * @param  RefreshCount: SDRAM refresh counter value
+   * @retval None
+   */
+ void BSP_SDRAM_Initialization_sequence(uint32_t RefreshCount)
+ {
+   __IO uint32_t tmpmrd = 0;
+ 
+   /* Step 1: Configure a clock configuration enable command */
+   Command.CommandMode            = FMC_SDRAM_CMD_CLK_ENABLE;
+   Command.CommandTarget          = FMC_SDRAM_CMD_TARGET_BANK1;
+   Command.AutoRefreshNumber      = 1;
+   Command.ModeRegisterDefinition = 0;
+ 
+   /* Send the command */
+   HAL_SDRAM_SendCommand(&sdramHandle, &Command, SDRAM_TIMEOUT);
+ 
+   /* Step 2: Insert 100 us minimum delay */
+   /* Inserted delay is equal to 1 ms due to systick time base unit (ms) */
+   HAL_Delay(1);
+ 
+   /* Step 3: Configure a PALL (precharge all) command */
+   Command.CommandMode            = FMC_SDRAM_CMD_PALL;
+   Command.CommandTarget          = FMC_SDRAM_CMD_TARGET_BANK1;
+   Command.AutoRefreshNumber      = 1;
+   Command.ModeRegisterDefinition = 0;
+ 
+   /* Send the command */
+   HAL_SDRAM_SendCommand(&sdramHandle, &Command, SDRAM_TIMEOUT);
+ 
+   /* Step 4: Configure an Auto Refresh command */
+   Command.CommandMode            = FMC_SDRAM_CMD_AUTOREFRESH_MODE;
+   Command.CommandTarget          = FMC_SDRAM_CMD_TARGET_BANK1;
+   Command.AutoRefreshNumber      = 8;
+   Command.ModeRegisterDefinition = 0;
+ 
+   /* Send the command */
+   HAL_SDRAM_SendCommand(&sdramHandle, &Command, SDRAM_TIMEOUT);
+ 
+   /* Step 5: Program the external memory mode register */
+   tmpmrd = (uint32_t)SDRAM_MODEREG_BURST_LENGTH_1          |\
+                      SDRAM_MODEREG_BURST_TYPE_SEQUENTIAL   |\
+                      SDRAM_MODEREG_CAS_LATENCY_2           |\
+                      SDRAM_MODEREG_OPERATING_MODE_STANDARD |\
+                      SDRAM_MODEREG_WRITEBURST_MODE_SINGLE;
+ 
+   Command.CommandMode            = FMC_SDRAM_CMD_LOAD_MODE;
+   Command.CommandTarget          = FMC_SDRAM_CMD_TARGET_BANK1;
+   Command.AutoRefreshNumber      = 1;
+   Command.ModeRegisterDefinition = tmpmrd;
+ 
+   /* Send the command */
+   HAL_SDRAM_SendCommand(&sdramHandle, &Command, SDRAM_TIMEOUT);
+ 
+   /* Step 6: Set the refresh rate counter */
+   /* Set the device refresh rate */
+   HAL_SDRAM_ProgramRefreshRate(&sdramHandle, RefreshCount);
+ }
+ 
+ 
+ 
+ 
diff -crNb MicorpythonOriginal1.12/micropython/ports/stm32/dma_init.h micropython1.12_withUlab/micropython/ports/stm32/dma_init.h
*** MicorpythonOriginal1.12/micropython/ports/stm32/dma_init.h	1970-01-01 02:00:00.000000000 +0200
--- micropython1.12_withUlab/micropython/ports/stm32/dma_init.h	2020-06-13 11:45:57.000000000 +0200
***************
*** 0 ****
--- 1,15 ----
+ /*
+  * dma_init.h
+  *
+  *  Created on: 21 Jul 2017
+  *      Author: graeme
+  */
+ 
+ #ifndef DMA_INIT_H_
+ #define DMA_INIT_H_
+ 
+ 
+ uint8_t BSP_SDRAM_Init(void);
+ 
+ 
+ #endif /* DMA_INIT_H_ */
diff -crNb MicorpythonOriginal1.12/micropython/ports/stm32/font24.c micropython1.12_withUlab/micropython/ports/stm32/font24.c
*** MicorpythonOriginal1.12/micropython/ports/stm32/font24.c	1970-01-01 02:00:00.000000000 +0200
--- micropython1.12_withUlab/micropython/ports/stm32/font24.c	2020-06-13 11:45:57.000000000 +0200
***************
*** 0 ****
--- 1,2618 ----
+ /*
+  * font24.c
+  *
+  *  Created on: 21 Jul 2017
+  *      Author: graeme
+  */
+ 
+ 
+ /**
+   ******************************************************************************
+   * @file    font24.c
+   * @author  MCD Application Team
+   * @version V1.0.0
+   * @date    18-February-2014
+   * @brief   This file provides text font24 for STM32xx-EVAL's LCD driver.
+   ******************************************************************************
+   * @attention
+   *
+   * <h2><center>&copy; COPYRIGHT(c) 2014 STMicroelectronics</center></h2>
+   *
+   * Redistribution and use in source and binary forms, with or without modification,
+   * are permitted provided that the following conditions are met:
+   *   1. Redistributions of source code must retain the above copyright notice,
+   *      this list of conditions and the following disclaimer.
+   *   2. Redistributions in binary form must reproduce the above copyright notice,
+   *      this list of conditions and the following disclaimer in the documentation
+   *      and/or other materials provided with the distribution.
+   *   3. Neither the name of STMicroelectronics nor the names of its contributors
+   *      may be used to endorse or promote products derived from this software
+   *      without specific prior written permission.
+   *
+   * THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS "AS IS"
+   * AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE
+   * IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE
+   * DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE
+   * FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL
+   * DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR
+   * SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER
+   * CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY,
+   * OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE
+   * OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
+   *
+   ******************************************************************************
+   */
+ 
+ #include <stdio.h>
+ #include <string.h>
+ 
+ #include "py/mphal.h"
+ #include "py/nlr.h"
+ #include "py/runtime.h"
+ 
+ 
+ /* Includes ------------------------------------------------------------------*/
+ #include "font24.h"
+ 
+ /** @addtogroup Utilities
+   * @{
+   */
+ 
+ /** @addtogroup STM32_EVAL
+   * @{
+   */
+ 
+ /** @addtogroup Common
+   * @{
+   */
+ 
+ /** @addtogroup FONTS
+   * @brief      This file provides text font24 for STM32xx-EVAL's LCD driver.
+   * @{
+   */
+ 
+ /** @defgroup FONTS_Private_Types
+   * @{
+   */
+ /**
+   * @}
+   */
+ 
+ 
+ /** @defgroup FONTS_Private_Defines
+   * @{
+   */
+ /**
+   * @}
+   */
+ 
+ 
+ /** @defgroup FONTS_Private_Macros
+   * @{
+   */
+ /**
+   * @}
+   */
+ 
+ 
+ /** @defgroup FONTS_Private_Variables
+   * @{
+   */
+ const uint8_t Font24_Table [] =
+ {
+ 	// @0 ' ' (17 pixels wide)
+ 	0x00, 0x00, 0x00, //
+ 	0x00, 0x00, 0x00, //
+ 	0x00, 0x00, 0x00, //
+ 	0x00, 0x00, 0x00, //
+ 	0x00, 0x00, 0x00, //
+ 	0x00, 0x00, 0x00, //
+ 	0x00, 0x00, 0x00, //
+ 	0x00, 0x00, 0x00, //
+ 	0x00, 0x00, 0x00, //
+ 	0x00, 0x00, 0x00, //
+ 	0x00, 0x00, 0x00, //
+ 	0x00, 0x00, 0x00, //
+ 	0x00, 0x00, 0x00, //
+ 	0x00, 0x00, 0x00, //
+ 	0x00, 0x00, 0x00, //
+ 	0x00, 0x00, 0x00, //
+ 	0x00, 0x00, 0x00, //
+ 	0x00, 0x00, 0x00, //
+ 	0x00, 0x00, 0x00, //
+ 	0x00, 0x00, 0x00, //
+ 	0x00, 0x00, 0x00, //
+ 	0x00, 0x00, 0x00, //
+ 	0x00, 0x00, 0x00, //
+ 	0x00, 0x00, 0x00, //
+ 
+ 	// @72 '!' (17 pixels wide)
+ 	0x00, 0x00, 0x00, //
+ 	0x00, 0x00, 0x00, //
+ 	0x03, 0x80, 0x00, //       ###
+ 	0x03, 0x80, 0x00, //       ###
+ 	0x03, 0x80, 0x00, //       ###
+ 	0x03, 0x80, 0x00, //       ###
+ 	0x03, 0x80, 0x00, //       ###
+ 	0x03, 0x80, 0x00, //       ###
+ 	0x03, 0x80, 0x00, //       ###
+ 	0x03, 0x80, 0x00, //       ###
+ 	0x03, 0x80, 0x00, //       ###
+ 	0x01, 0x00, 0x00, //        #
+ 	0x01, 0x00, 0x00, //        #
+ 	0x00, 0x00, 0x00, //
+ 	0x00, 0x00, 0x00, //
+ 	0x03, 0x80, 0x00, //       ###
+ 	0x03, 0x80, 0x00, //       ###
+ 	0x00, 0x00, 0x00, //
+ 	0x00, 0x00, 0x00, //
+ 	0x00, 0x00, 0x00, //
+ 	0x00, 0x00, 0x00, //
+ 	0x00, 0x00, 0x00, //
+ 	0x00, 0x00, 0x00, //
+ 	0x00, 0x00, 0x00, //
+ 
+ 	// @144 '"' (17 pixels wide)
+ 	0x00, 0x00, 0x00, //
+ 	0x00, 0x00, 0x00, //
+ 	0x00, 0x00, 0x00, //
+ 	0x0E, 0x70, 0x00, //     ###  ###
+ 	0x0E, 0x70, 0x00, //     ###  ###
+ 	0x0E, 0x70, 0x00, //     ###  ###
+ 	0x04, 0x20, 0x00, //      #    #
+ 	0x04, 0x20, 0x00, //      #    #
+ 	0x04, 0x20, 0x00, //      #    #
+ 	0x04, 0x20, 0x00, //      #    #
+ 	0x00, 0x00, 0x00, //
+ 	0x00, 0x00, 0x00, //
+ 	0x00, 0x00, 0x00, //
+ 	0x00, 0x00, 0x00, //
+ 	0x00, 0x00, 0x00, //
+ 	0x00, 0x00, 0x00, //
+ 	0x00, 0x00, 0x00, //
+ 	0x00, 0x00, 0x00, //
+ 	0x00, 0x00, 0x00, //
+ 	0x00, 0x00, 0x00, //
+ 	0x00, 0x00, 0x00, //
+ 	0x00, 0x00, 0x00, //
+ 	0x00, 0x00, 0x00, //
+ 	0x00, 0x00, 0x00, //
+ 
+ 	// @216 '#' (17 pixels wide)
+ 	0x00, 0x00, 0x00, //
+ 	0x00, 0x00, 0x00, //
+ 	0x06, 0x60, 0x00, //      ##  ##
+ 	0x06, 0x60, 0x00, //      ##  ##
+ 	0x06, 0x60, 0x00, //      ##  ##
+ 	0x06, 0x60, 0x00, //      ##  ##
+ 	0x06, 0x60, 0x00, //      ##  ##
+ 	0x3F, 0xF8, 0x00, //   ###########
+ 	0x3F, 0xF8, 0x00, //   ###########
+ 	0x06, 0x60, 0x00, //      ##  ##
+ 	0x0C, 0xC0, 0x00, //     ##  ##
+ 	0x3F, 0xF8, 0x00, //   ###########
+ 	0x3F, 0xF8, 0x00, //   ###########
+ 	0x0C, 0xC0, 0x00, //     ##  ##
+ 	0x0C, 0xC0, 0x00, //     ##  ##
+ 	0x0C, 0xC0, 0x00, //     ##  ##
+ 	0x0C, 0xC0, 0x00, //     ##  ##
+ 	0x0C, 0xC0, 0x00, //     ##  ##
+ 	0x00, 0x00, 0x00, //
+ 	0x00, 0x00, 0x00, //
+ 	0x00, 0x00, 0x00, //
+ 	0x00, 0x00, 0x00, //
+ 	0x00, 0x00, 0x00, //
+ 	0x00, 0x00, 0x00, //
+ 
+ 	// @288 '$' (17 pixels wide)
+ 	0x00, 0x00, 0x00, //
+ 	0x01, 0x80, 0x00, //        ##
+ 	0x01, 0x80, 0x00, //        ##
+ 	0x07, 0xB0, 0x00, //      #### ##
+ 	0x0F, 0xF0, 0x00, //     ########
+ 	0x18, 0x70, 0x00, //    ##    ###
+ 	0x18, 0x70, 0x00, //    ##    ###
+ 	0x1C, 0x00, 0x00, //    ###
+ 	0x0F, 0x80, 0x00, //     #####
+ 	0x07, 0xE0, 0x00, //      ######
+ 	0x00, 0xF0, 0x00, //         ####
+ 	0x18, 0x30, 0x00, //    ##     ##
+ 	0x1C, 0x30, 0x00, //    ###    ##
+ 	0x1C, 0x70, 0x00, //    ###   ###
+ 	0x1F, 0xE0, 0x00, //    ########
+ 	0x1B, 0xC0, 0x00, //    ## ####
+ 	0x01, 0x80, 0x00, //        ##
+ 	0x01, 0x80, 0x00, //        ##
+ 	0x01, 0x80, 0x00, //        ##
+ 	0x01, 0x80, 0x00, //        ##
+ 	0x00, 0x00, 0x00, //
+ 	0x00, 0x00, 0x00, //
+ 	0x00, 0x00, 0x00, //
+ 	0x00, 0x00, 0x00, //
+ 
+ 	// @360 '%' (17 pixels wide)
+ 	0x00, 0x00, 0x00, //
+ 	0x00, 0x00, 0x00, //
+ 	0x07, 0x80, 0x00, //      ####
+ 	0x0F, 0xC0, 0x00, //     ######
+ 	0x1C, 0xE0, 0x00, //    ###  ###
+ 	0x18, 0x60, 0x00, //    ##    ##
+ 	0x18, 0x60, 0x00, //    ##    ##
+ 	0x1C, 0xE0, 0x00, //    ###  ###
+ 	0x0F, 0xF8, 0x00, //     #########
+ 	0x07, 0xE0, 0x00, //      ######
+ 	0x1F, 0xF0, 0x00, //    #########
+ 	0x07, 0x38, 0x00, //      ###  ###
+ 	0x06, 0x18, 0x00, //      ##    ##
+ 	0x06, 0x18, 0x00, //      ##    ##
+ 	0x07, 0x38, 0x00, //      ###  ###
+ 	0x03, 0xF0, 0x00, //       ######
+ 	0x01, 0xE0, 0x00, //        ####
+ 	0x00, 0x00, 0x00, //
+ 	0x00, 0x00, 0x00, //
+ 	0x00, 0x00, 0x00, //
+ 	0x00, 0x00, 0x00, //
+ 	0x00, 0x00, 0x00, //
+ 	0x00, 0x00, 0x00, //
+ 	0x00, 0x00, 0x00, //
+ 
+ 	// @432 '&' (17 pixels wide)
+ 	0x00, 0x00, 0x00, //
+ 	0x00, 0x00, 0x00, //
+ 	0x00, 0x00, 0x00, //
+ 	0x00, 0x00, 0x00, //
+ 	0x03, 0xF0, 0x00, //       ######
+ 	0x07, 0xF0, 0x00, //      #######
+ 	0x0C, 0x60, 0x00, //     ##   ##
+ 	0x0C, 0x00, 0x00, //     ##
+ 	0x0C, 0x00, 0x00, //     ##
+ 	0x06, 0x00, 0x00, //      ##
+ 	0x07, 0x00, 0x00, //      ###
+ 	0x0F, 0x9C, 0x00, //     #####  ###
+ 	0x1D, 0xFC, 0x00, //    ### #######
+ 	0x18, 0xF0, 0x00, //    ##   ####
+ 	0x18, 0x70, 0x00, //    ##    ###
+ 	0x0F, 0xFC, 0x00, //     ##########
+ 	0x07, 0xDC, 0x00, //      ##### ###
+ 	0x00, 0x00, 0x00, //
+ 	0x00, 0x00, 0x00, //
+ 	0x00, 0x00, 0x00, //
+ 	0x00, 0x00, 0x00, //
+ 	0x00, 0x00, 0x00, //
+ 	0x00, 0x00, 0x00, //
+ 	0x00, 0x00, 0x00, //
+ 
+ 	// @504 ''' (17 pixels wide)
+ 	0x00, 0x00, 0x00, //
+ 	0x00, 0x00, 0x00, //
+ 	0x00, 0x00, 0x00, //
+ 	0x03, 0x80, 0x00, //       ###
+ 	0x03, 0x80, 0x00, //       ###
+ 	0x03, 0x80, 0x00, //       ###
+ 	0x01, 0x00, 0x00, //        #
+ 	0x01, 0x00, 0x00, //        #
+ 	0x01, 0x00, 0x00, //        #
+ 	0x01, 0x00, 0x00, //        #
+ 	0x00, 0x00, 0x00, //
+ 	0x00, 0x00, 0x00, //
+ 	0x00, 0x00, 0x00, //
+ 	0x00, 0x00, 0x00, //
+ 	0x00, 0x00, 0x00, //
+ 	0x00, 0x00, 0x00, //
+ 	0x00, 0x00, 0x00, //
+ 	0x00, 0x00, 0x00, //
+ 	0x00, 0x00, 0x00, //
+ 	0x00, 0x00, 0x00, //
+ 	0x00, 0x00, 0x00, //
+ 	0x00, 0x00, 0x00, //
+ 	0x00, 0x00, 0x00, //
+ 	0x00, 0x00, 0x00, //
+ 
+ 	// @576 '(' (17 pixels wide)
+ 	0x00, 0x00, 0x00, //
+ 	0x00, 0x00, 0x00, //
+ 	0x00, 0x18, 0x00, //            ##
+ 	0x00, 0x38, 0x00, //           ###
+ 	0x00, 0x70, 0x00, //          ###
+ 	0x00, 0xF0, 0x00, //         ####
+ 	0x00, 0xE0, 0x00, //         ###
+ 	0x00, 0xE0, 0x00, //         ###
+ 	0x01, 0xC0, 0x00, //        ###
+ 	0x01, 0xC0, 0x00, //        ###
+ 	0x01, 0xC0, 0x00, //        ###
+ 	0x01, 0xC0, 0x00, //        ###
+ 	0x01, 0xC0, 0x00, //        ###
+ 	0x01, 0xC0, 0x00, //        ###
+ 	0x00, 0xE0, 0x00, //         ###
+ 	0x00, 0xE0, 0x00, //         ###
+ 	0x00, 0x70, 0x00, //          ###
+ 	0x00, 0x70, 0x00, //          ###
+ 	0x00, 0x38, 0x00, //           ###
+ 	0x00, 0x18, 0x00, //            ##
+ 	0x00, 0x00, 0x00, //
+ 	0x00, 0x00, 0x00, //
+ 	0x00, 0x00, 0x00, //
+ 	0x00, 0x00, 0x00, //
+ 
+ 	// @648 ')' (17 pixels wide)
+ 	0x00, 0x00, 0x00, //
+ 	0x00, 0x00, 0x00, //
+ 	0x18, 0x00, 0x00, //    ##
+ 	0x1C, 0x00, 0x00, //    ###
+ 	0x0E, 0x00, 0x00, //     ###
+ 	0x0E, 0x00, 0x00, //     ###
+ 	0x07, 0x00, 0x00, //      ###
+ 	0x07, 0x00, 0x00, //      ###
+ 	0x03, 0x80, 0x00, //       ###
+ 	0x03, 0x80, 0x00, //       ###
+ 	0x03, 0x80, 0x00, //       ###
+ 	0x03, 0x80, 0x00, //       ###
+ 	0x03, 0x80, 0x00, //       ###
+ 	0x03, 0x80, 0x00, //       ###
+ 	0x07, 0x00, 0x00, //      ###
+ 	0x07, 0x00, 0x00, //      ###
+ 	0x0F, 0x00, 0x00, //     ####
+ 	0x0E, 0x00, 0x00, //     ###
+ 	0x1C, 0x00, 0x00, //    ###
+ 	0x18, 0x00, 0x00, //    ##
+ 	0x00, 0x00, 0x00, //
+ 	0x00, 0x00, 0x00, //
+ 	0x00, 0x00, 0x00, //
+ 	0x00, 0x00, 0x00, //
+ 
+ 	// @720 '*' (17 pixels wide)
+ 	0x00, 0x00, 0x00, //
+ 	0x00, 0x00, 0x00, //
+ 	0x01, 0x80, 0x00, //        ##
+ 	0x01, 0x80, 0x00, //        ##
+ 	0x01, 0x80, 0x00, //        ##
+ 	0x1D, 0xB8, 0x00, //    ### ## ###
+ 	0x1F, 0xF8, 0x00, //    ##########
+ 	0x07, 0xE0, 0x00, //      ######
+ 	0x03, 0xC0, 0x00, //       ####
+ 	0x03, 0xC0, 0x00, //       ####
+ 	0x06, 0x60, 0x00, //      ##  ##
+ 	0x06, 0x60, 0x00, //      ##  ##
+ 	0x00, 0x00, 0x00, //
+ 	0x00, 0x00, 0x00, //
+ 	0x00, 0x00, 0x00, //
+ 	0x00, 0x00, 0x00, //
+ 	0x00, 0x00, 0x00, //
+ 	0x00, 0x00, 0x00, //
+ 	0x00, 0x00, 0x00, //
+ 	0x00, 0x00, 0x00, //
+ 	0x00, 0x00, 0x00, //
+ 	0x00, 0x00, 0x00, //
+ 	0x00, 0x00, 0x00, //
+ 	0x00, 0x00, 0x00, //
+ 
+ 	// @792 '+' (17 pixels wide)
+ 	0x00, 0x00, 0x00, //
+ 	0x00, 0x00, 0x00, //
+ 	0x00, 0x00, 0x00, //
+ 	0x00, 0x00, 0x00, //
+ 	0x01, 0x80, 0x00, //        ##
+ 	0x01, 0x80, 0x00, //        ##
+ 	0x01, 0x80, 0x00, //        ##
+ 	0x01, 0x80, 0x00, //        ##
+ 	0x01, 0x80, 0x00, //        ##
+ 	0x3F, 0xFC, 0x00, //   ############
+ 	0x3F, 0xFC, 0x00, //   ############
+ 	0x01, 0x80, 0x00, //        ##
+ 	0x01, 0x80, 0x00, //        ##
+ 	0x01, 0x80, 0x00, //        ##
+ 	0x01, 0x80, 0x00, //        ##
+ 	0x01, 0x80, 0x00, //        ##
+ 	0x00, 0x00, 0x00, //
+ 	0x00, 0x00, 0x00, //
+ 	0x00, 0x00, 0x00, //
+ 	0x00, 0x00, 0x00, //
+ 	0x00, 0x00, 0x00, //
+ 	0x00, 0x00, 0x00, //
+ 	0x00, 0x00, 0x00, //
+ 	0x00, 0x00, 0x00, //
+ 
+ 	// @864 ',' (17 pixels wide)
+ 	0x00, 0x00, 0x00, //
+ 	0x00, 0x00, 0x00, //
+ 	0x00, 0x00, 0x00, //
+ 	0x00, 0x00, 0x00, //
+ 	0x00, 0x00, 0x00, //
+ 	0x00, 0x00, 0x00, //
+ 	0x00, 0x00, 0x00, //
+ 	0x00, 0x00, 0x00, //
+ 	0x00, 0x00, 0x00, //
+ 	0x00, 0x00, 0x00, //
+ 	0x00, 0x00, 0x00, //
+ 	0x00, 0x00, 0x00, //
+ 	0x00, 0x00, 0x00, //
+ 	0x00, 0x00, 0x00, //
+ 	0x00, 0xE0, 0x00, //         ###
+ 	0x00, 0xC0, 0x00, //         ##
+ 	0x01, 0xC0, 0x00, //        ###
+ 	0x01, 0x80, 0x00, //        ##
+ 	0x01, 0x80, 0x00, //        ##
+ 	0x03, 0x00, 0x00, //       ##
+ 	0x03, 0x00, 0x00, //       ##
+ 	0x00, 0x00, 0x00, //
+ 	0x00, 0x00, 0x00, //
+ 	0x00, 0x00, 0x00, //
+ 
+ 	// @936 '-' (17 pixels wide)
+ 	0x00, 0x00, 0x00, //
+ 	0x00, 0x00, 0x00, //
+ 	0x00, 0x00, 0x00, //
+ 	0x00, 0x00, 0x00, //
+ 	0x00, 0x00, 0x00, //
+ 	0x00, 0x00, 0x00, //
+ 	0x00, 0x00, 0x00, //
+ 	0x00, 0x00, 0x00, //
+ 	0x00, 0x00, 0x00, //
+ 	0x1F, 0xF8, 0x00, //    ##########
+ 	0x1F, 0xF8, 0x00, //    ##########
+ 	0x00, 0x00, 0x00, //
+ 	0x00, 0x00, 0x00, //
+ 	0x00, 0x00, 0x00, //
+ 	0x00, 0x00, 0x00, //
+ 	0x00, 0x00, 0x00, //
+ 	0x00, 0x00, 0x00, //
+ 	0x00, 0x00, 0x00, //
+ 	0x00, 0x00, 0x00, //
+ 	0x00, 0x00, 0x00, //
+ 	0x00, 0x00, 0x00, //
+ 	0x00, 0x00, 0x00, //
+ 	0x00, 0x00, 0x00, //
+ 	0x00, 0x00, 0x00, //
+ 
+ 	// @1008 '.' (17 pixels wide)
+ 	0x00, 0x00, 0x00, //
+ 	0x00, 0x00, 0x00, //
+ 	0x00, 0x00, 0x00, //
+ 	0x00, 0x00, 0x00, //
+ 	0x00, 0x00, 0x00, //
+ 	0x00, 0x00, 0x00, //
+ 	0x00, 0x00, 0x00, //
+ 	0x00, 0x00, 0x00, //
+ 	0x00, 0x00, 0x00, //
+ 	0x00, 0x00, 0x00, //
+ 	0x00, 0x00, 0x00, //
+ 	0x00, 0x00, 0x00, //
+ 	0x00, 0x00, 0x00, //
+ 	0x00, 0x00, 0x00, //
+ 	0x03, 0xC0, 0x00, //       ####
+ 	0x03, 0xC0, 0x00, //       ####
+ 	0x03, 0xC0, 0x00, //       ####
+ 	0x00, 0x00, 0x00, //
+ 	0x00, 0x00, 0x00, //
+ 	0x00, 0x00, 0x00, //
+ 	0x00, 0x00, 0x00, //
+ 	0x00, 0x00, 0x00, //
+ 	0x00, 0x00, 0x00, //
+ 	0x00, 0x00, 0x00, //
+ 
+ 	// @1080 '/' (17 pixels wide)
+ 	0x00, 0x18, 0x00, //            ##
+ 	0x00, 0x18, 0x00, //            ##
+ 	0x00, 0x38, 0x00, //           ###
+ 	0x00, 0x30, 0x00, //           ##
+ 	0x00, 0x70, 0x00, //          ###
+ 	0x00, 0x60, 0x00, //          ##
+ 	0x00, 0x60, 0x00, //          ##
+ 	0x00, 0xC0, 0x00, //         ##
+ 	0x00, 0xC0, 0x00, //         ##
+ 	0x01, 0x80, 0x00, //        ##
+ 	0x01, 0x80, 0x00, //        ##
+ 	0x03, 0x00, 0x00, //       ##
+ 	0x03, 0x00, 0x00, //       ##
+ 	0x06, 0x00, 0x00, //      ##
+ 	0x06, 0x00, 0x00, //      ##
+ 	0x0E, 0x00, 0x00, //     ###
+ 	0x0C, 0x00, 0x00, //     ##
+ 	0x1C, 0x00, 0x00, //    ###
+ 	0x18, 0x00, 0x00, //    ##
+ 	0x18, 0x00, 0x00, //    ##
+ 	0x00, 0x00, 0x00, //
+ 	0x00, 0x00, 0x00, //
+ 	0x00, 0x00, 0x00, //
+ 	0x00, 0x00, 0x00, //
+ 
+ 	// @1152 '0' (17 pixels wide)
+ 	0x00, 0x00, 0x00, //
+ 	0x00, 0x00, 0x00, //
+ 	0x03, 0xC0, 0x00, //       ####
+ 	0x07, 0xE0, 0x00, //      ######
+ 	0x0C, 0x30, 0x00, //     ##    ##
+ 	0x0C, 0x30, 0x00, //     ##    ##
+ 	0x18, 0x18, 0x00, //    ##      ##
+ 	0x18, 0x18, 0x00, //    ##      ##
+ 	0x18, 0x18, 0x00, //    ##      ##
+ 	0x18, 0x18, 0x00, //    ##      ##
+ 	0x18, 0x18, 0x00, //    ##      ##
+ 	0x18, 0x18, 0x00, //    ##      ##
+ 	0x18, 0x18, 0x00, //    ##      ##
+ 	0x0C, 0x30, 0x00, //     ##    ##
+ 	0x0C, 0x30, 0x00, //     ##    ##
+ 	0x07, 0xE0, 0x00, //      ######
+ 	0x03, 0xC0, 0x00, //       ####
+ 	0x00, 0x00, 0x00, //
+ 	0x00, 0x00, 0x00, //
+ 	0x00, 0x00, 0x00, //
+ 	0x00, 0x00, 0x00, //
+ 	0x00, 0x00, 0x00, //
+ 	0x00, 0x00, 0x00, //
+ 	0x00, 0x00, 0x00, //
+ 
+ 	// @1224 '1' (17 pixels wide)
+ 	0x00, 0x00, 0x00, //
+ 	0x00, 0x00, 0x00, //
+ 	0x00, 0x80, 0x00, //         #
+ 	0x07, 0x80, 0x00, //      ####
+ 	0x1F, 0x80, 0x00, //    ######
+ 	0x1D, 0x80, 0x00, //    ### ##
+ 	0x01, 0x80, 0x00, //        ##
+ 	0x01, 0x80, 0x00, //        ##
+ 	0x01, 0x80, 0x00, //        ##
+ 	0x01, 0x80, 0x00, //        ##
+ 	0x01, 0x80, 0x00, //        ##
+ 	0x01, 0x80, 0x00, //        ##
+ 	0x01, 0x80, 0x00, //        ##
+ 	0x01, 0x80, 0x00, //        ##
+ 	0x01, 0x80, 0x00, //        ##
+ 	0x1F, 0xF8, 0x00, //    ##########
+ 	0x1F, 0xF8, 0x00, //    ##########
+ 	0x00, 0x00, 0x00, //
+ 	0x00, 0x00, 0x00, //
+ 	0x00, 0x00, 0x00, //
+ 	0x00, 0x00, 0x00, //
+ 	0x00, 0x00, 0x00, //
+ 	0x00, 0x00, 0x00, //
+ 	0x00, 0x00, 0x00, //
+ 
+ 	// @1296 '2' (17 pixels wide)
+ 	0x00, 0x00, 0x00, //
+ 	0x00, 0x00, 0x00, //
+ 	0x07, 0xC0, 0x00, //      #####
+ 	0x1F, 0xF0, 0x00, //    #########
+ 	0x38, 0x30, 0x00, //   ###     ##
+ 	0x30, 0x18, 0x00, //   ##       ##
+ 	0x30, 0x18, 0x00, //   ##       ##
+ 	0x00, 0x18, 0x00, //            ##
+ 	0x00, 0x30, 0x00, //           ##
+ 	0x00, 0x60, 0x00, //          ##
+ 	0x01, 0xC0, 0x00, //        ###
+ 	0x03, 0x80, 0x00, //       ###
+ 	0x06, 0x00, 0x00, //      ##
+ 	0x0C, 0x00, 0x00, //     ##
+ 	0x18, 0x00, 0x00, //    ##
+ 	0x3F, 0xF8, 0x00, //   ###########
+ 	0x3F, 0xF8, 0x00, //   ###########
+ 	0x00, 0x00, 0x00, //
+ 	0x00, 0x00, 0x00, //
+ 	0x00, 0x00, 0x00, //
+ 	0x00, 0x00, 0x00, //
+ 	0x00, 0x00, 0x00, //
+ 	0x00, 0x00, 0x00, //
+ 	0x00, 0x00, 0x00, //
+ 
+ 	// @1368 '3' (17 pixels wide)
+ 	0x00, 0x00, 0x00, //
+ 	0x00, 0x00, 0x00, //
+ 	0x03, 0xC0, 0x00, //       ####
+ 	0x0F, 0xE0, 0x00, //     #######
+ 	0x0C, 0x70, 0x00, //     ##   ###
+ 	0x00, 0x30, 0x00, //           ##
+ 	0x00, 0x30, 0x00, //           ##
+ 	0x00, 0x60, 0x00, //          ##
+ 	0x03, 0xC0, 0x00, //       ####
+ 	0x03, 0xE0, 0x00, //       #####
+ 	0x00, 0x70, 0x00, //          ###
+ 	0x00, 0x18, 0x00, //            ##
+ 	0x00, 0x18, 0x00, //            ##
+ 	0x00, 0x18, 0x00, //            ##
+ 	0x18, 0x38, 0x00, //    ##     ###
+ 	0x1F, 0xF0, 0x00, //    #########
+ 	0x0F, 0xC0, 0x00, //     ######
+ 	0x00, 0x00, 0x00, //
+ 	0x00, 0x00, 0x00, //
+ 	0x00, 0x00, 0x00, //
+ 	0x00, 0x00, 0x00, //
+ 	0x00, 0x00, 0x00, //
+ 	0x00, 0x00, 0x00, //
+ 	0x00, 0x00, 0x00, //
+ 
+ 	// @1440 '4' (17 pixels wide)
+ 	0x00, 0x00, 0x00, //
+ 	0x00, 0x00, 0x00, //
+ 	0x00, 0xE0, 0x00, //         ###
+ 	0x01, 0xE0, 0x00, //        ####
+ 	0x01, 0xE0, 0x00, //        ####
+ 	0x03, 0x60, 0x00, //       ## ##
+ 	0x06, 0x60, 0x00, //      ##  ##
+ 	0x06, 0x60, 0x00, //      ##  ##
+ 	0x0C, 0x60, 0x00, //     ##   ##
+ 	0x0C, 0x60, 0x00, //     ##   ##
+ 	0x18, 0x60, 0x00, //    ##    ##
+ 	0x30, 0x60, 0x00, //   ##     ##
+ 	0x3F, 0xF8, 0x00, //   ###########
+ 	0x3F, 0xF8, 0x00, //   ###########
+ 	0x00, 0x60, 0x00, //          ##
+ 	0x03, 0xF8, 0x00, //       #######
+ 	0x03, 0xF8, 0x00, //       #######
+ 	0x00, 0x00, 0x00, //
+ 	0x00, 0x00, 0x00, //
+ 	0x00, 0x00, 0x00, //
+ 	0x00, 0x00, 0x00, //
+ 	0x00, 0x00, 0x00, //
+ 	0x00, 0x00, 0x00, //
+ 	0x00, 0x00, 0x00, //
+ 
+ 	// @1512 '5' (17 pixels wide)
+ 	0x00, 0x00, 0x00, //
+ 	0x00, 0x00, 0x00, //
+ 	0x1F, 0xF0, 0x00, //    #########
+ 	0x1F, 0xF0, 0x00, //    #########
+ 	0x18, 0x00, 0x00, //    ##
+ 	0x18, 0x00, 0x00, //    ##
+ 	0x18, 0x00, 0x00, //    ##
+ 	0x1B, 0xC0, 0x00, //    ## ####
+ 	0x1F, 0xF0, 0x00, //    #########
+ 	0x1C, 0x30, 0x00, //    ###    ##
+ 	0x00, 0x18, 0x00, //            ##
+ 	0x00, 0x18, 0x00, //            ##
+ 	0x00, 0x18, 0x00, //            ##
+ 	0x00, 0x18, 0x00, //            ##
+ 	0x30, 0x30, 0x00, //   ##      ##
+ 	0x3F, 0xF0, 0x00, //   ##########
+ 	0x0F, 0xC0, 0x00, //     ######
+ 	0x00, 0x00, 0x00, //
+ 	0x00, 0x00, 0x00, //
+ 	0x00, 0x00, 0x00, //
+ 	0x00, 0x00, 0x00, //
+ 	0x00, 0x00, 0x00, //
+ 	0x00, 0x00, 0x00, //
+ 	0x00, 0x00, 0x00, //
+ 
+ 	// @1584 '6' (17 pixels wide)
+ 	0x00, 0x00, 0x00, //
+ 	0x00, 0x00, 0x00, //
+ 	0x00, 0xF8, 0x00, //         #####
+ 	0x03, 0xF8, 0x00, //       #######
+ 	0x07, 0x00, 0x00, //      ###
+ 	0x0E, 0x00, 0x00, //     ###
+ 	0x0C, 0x00, 0x00, //     ##
+ 	0x18, 0x00, 0x00, //    ##
+ 	0x1B, 0xC0, 0x00, //    ## ####
+ 	0x1F, 0xF0, 0x00, //    #########
+ 	0x1C, 0x30, 0x00, //    ###    ##
+ 	0x18, 0x18, 0x00, //    ##      ##
+ 	0x18, 0x18, 0x00, //    ##      ##
+ 	0x18, 0x18, 0x00, //    ##      ##
+ 	0x0C, 0x38, 0x00, //     ##    ###
+ 	0x0F, 0xF0, 0x00, //     ########
+ 	0x03, 0xE0, 0x00, //       #####
+ 	0x00, 0x00, 0x00, //
+ 	0x00, 0x00, 0x00, //
+ 	0x00, 0x00, 0x00, //
+ 	0x00, 0x00, 0x00, //
+ 	0x00, 0x00, 0x00, //
+ 	0x00, 0x00, 0x00, //
+ 	0x00, 0x00, 0x00, //
+ 
+ 	// @1656 '7' (17 pixels wide)
+ 	0x00, 0x00, 0x00, //
+ 	0x00, 0x00, 0x00, //
+ 	0x1F, 0xF8, 0x00, //    ##########
+ 	0x1F, 0xF8, 0x00, //    ##########
+ 	0x18, 0x18, 0x00, //    ##      ##
+ 	0x18, 0x38, 0x00, //    ##     ###
+ 	0x00, 0x30, 0x00, //           ##
+ 	0x00, 0x30, 0x00, //           ##
+ 	0x00, 0x70, 0x00, //          ###
+ 	0x00, 0x60, 0x00, //          ##
+ 	0x00, 0x60, 0x00, //          ##
+ 	0x00, 0xE0, 0x00, //         ###
+ 	0x00, 0xC0, 0x00, //         ##
+ 	0x00, 0xC0, 0x00, //         ##
+ 	0x01, 0xC0, 0x00, //        ###
+ 	0x01, 0x80, 0x00, //        ##
+ 	0x01, 0x80, 0x00, //        ##
+ 	0x00, 0x00, 0x00, //
+ 	0x00, 0x00, 0x00, //
+ 	0x00, 0x00, 0x00, //
+ 	0x00, 0x00, 0x00, //
+ 	0x00, 0x00, 0x00, //
+ 	0x00, 0x00, 0x00, //
+ 	0x00, 0x00, 0x00, //
+ 
+ 	// @1728 '8' (17 pixels wide)
+ 	0x00, 0x00, 0x00, //
+ 	0x00, 0x00, 0x00, //
+ 	0x07, 0xE0, 0x00, //      ######
+ 	0x0F, 0xF0, 0x00, //     ########
+ 	0x1C, 0x38, 0x00, //    ###    ###
+ 	0x18, 0x18, 0x00, //    ##      ##
+ 	0x18, 0x18, 0x00, //    ##      ##
+ 	0x0C, 0x30, 0x00, //     ##    ##
+ 	0x07, 0xE0, 0x00, //      ######
+ 	0x07, 0xE0, 0x00, //      ######
+ 	0x0C, 0x30, 0x00, //     ##    ##
+ 	0x18, 0x18, 0x00, //    ##      ##
+ 	0x18, 0x18, 0x00, //    ##      ##
+ 	0x18, 0x18, 0x00, //    ##      ##
+ 	0x1C, 0x38, 0x00, //    ###    ###
+ 	0x0F, 0xF0, 0x00, //     ########
+ 	0x07, 0xE0, 0x00, //      ######
+ 	0x00, 0x00, 0x00, //
+ 	0x00, 0x00, 0x00, //
+ 	0x00, 0x00, 0x00, //
+ 	0x00, 0x00, 0x00, //
+ 	0x00, 0x00, 0x00, //
+ 	0x00, 0x00, 0x00, //
+ 	0x00, 0x00, 0x00, //
+ 
+ 	// @1800 '9' (17 pixels wide)
+ 	0x00, 0x00, 0x00, //
+ 	0x00, 0x00, 0x00, //
+ 	0x07, 0xC0, 0x00, //      #####
+ 	0x0F, 0xF0, 0x00, //     ########
+ 	0x1C, 0x30, 0x00, //    ###    ##
+ 	0x18, 0x18, 0x00, //    ##      ##
+ 	0x18, 0x18, 0x00, //    ##      ##
+ 	0x18, 0x18, 0x00, //    ##      ##
+ 	0x0C, 0x38, 0x00, //     ##    ###
+ 	0x0F, 0xF8, 0x00, //     #########
+ 	0x03, 0xD8, 0x00, //       #### ##
+ 	0x00, 0x18, 0x00, //            ##
+ 	0x00, 0x30, 0x00, //           ##
+ 	0x00, 0x70, 0x00, //          ###
+ 	0x00, 0xE0, 0x00, //         ###
+ 	0x1F, 0xC0, 0x00, //    #######
+ 	0x1F, 0x00, 0x00, //    #####
+ 	0x00, 0x00, 0x00, //
+ 	0x00, 0x00, 0x00, //
+ 	0x00, 0x00, 0x00, //
+ 	0x00, 0x00, 0x00, //
+ 	0x00, 0x00, 0x00, //
+ 	0x00, 0x00, 0x00, //
+ 	0x00, 0x00, 0x00, //
+ 
+ 	// @1872 ':' (17 pixels wide)
+ 	0x00, 0x00, 0x00, //
+ 	0x00, 0x00, 0x00, //
+ 	0x00, 0x00, 0x00, //
+ 	0x00, 0x00, 0x00, //
+ 	0x00, 0x00, 0x00, //
+ 	0x00, 0x00, 0x00, //
+ 	0x03, 0xC0, 0x00, //       ####
+ 	0x03, 0xC0, 0x00, //       ####
+ 	0x03, 0xC0, 0x00, //       ####
+ 	0x00, 0x00, 0x00, //
+ 	0x00, 0x00, 0x00, //
+ 	0x00, 0x00, 0x00, //
+ 	0x00, 0x00, 0x00, //
+ 	0x00, 0x00, 0x00, //
+ 	0x03, 0xC0, 0x00, //       ####
+ 	0x03, 0xC0, 0x00, //       ####
+ 	0x03, 0xC0, 0x00, //       ####
+ 	0x00, 0x00, 0x00, //
+ 	0x00, 0x00, 0x00, //
+ 	0x00, 0x00, 0x00, //
+ 	0x00, 0x00, 0x00, //
+ 	0x00, 0x00, 0x00, //
+ 	0x00, 0x00, 0x00, //
+ 	0x00, 0x00, 0x00, //
+ 
+ 	// @1944 ';' (17 pixels wide)
+ 	0x00, 0x00, 0x00, //
+ 	0x00, 0x00, 0x00, //
+ 	0x00, 0x00, 0x00, //
+ 	0x00, 0x00, 0x00, //
+ 	0x00, 0x00, 0x00, //
+ 	0x00, 0x00, 0x00, //
+ 	0x00, 0xF0, 0x00, //         ####
+ 	0x00, 0xF0, 0x00, //         ####
+ 	0x00, 0xF0, 0x00, //         ####
+ 	0x00, 0x00, 0x00, //
+ 	0x00, 0x00, 0x00, //
+ 	0x00, 0x00, 0x00, //
+ 	0x00, 0x00, 0x00, //
+ 	0x00, 0xE0, 0x00, //         ###
+ 	0x01, 0xC0, 0x00, //        ###
+ 	0x01, 0x80, 0x00, //        ##
+ 	0x01, 0x80, 0x00, //        ##
+ 	0x03, 0x00, 0x00, //       ##
+ 	0x02, 0x00, 0x00, //       #
+ 	0x00, 0x00, 0x00, //
+ 	0x00, 0x00, 0x00, //
+ 	0x00, 0x00, 0x00, //
+ 	0x00, 0x00, 0x00, //
+ 	0x00, 0x00, 0x00, //
+ 
+ 	// @2016 '<' (17 pixels wide)
+ 	0x00, 0x00, 0x00, //
+ 	0x00, 0x00, 0x00, //
+ 	0x00, 0x00, 0x00, //
+ 	0x00, 0x00, 0x00, //
+ 	0x00, 0x1C, 0x00, //            ###
+ 	0x00, 0x3C, 0x00, //           ####
+ 	0x00, 0xF0, 0x00, //         ####
+ 	0x03, 0xC0, 0x00, //       ####
+ 	0x0F, 0x00, 0x00, //     ####
+ 	0x3C, 0x00, 0x00, //   ####
+ 	0xF0, 0x00, 0x00, // ####
+ 	0x3C, 0x00, 0x00, //   ####
+ 	0x0F, 0x00, 0x00, //     ####
+ 	0x03, 0xC0, 0x00, //       ####
+ 	0x00, 0xF0, 0x00, //         ####
+ 	0x00, 0x3C, 0x00, //           ####
+ 	0x00, 0x1C, 0x00, //            ###
+ 	0x00, 0x00, 0x00, //
+ 	0x00, 0x00, 0x00, //
+ 	0x00, 0x00, 0x00, //
+ 	0x00, 0x00, 0x00, //
+ 	0x00, 0x00, 0x00, //
+ 	0x00, 0x00, 0x00, //
+ 	0x00, 0x00, 0x00, //
+ 
+ 	// @2088 '=' (17 pixels wide)
+ 	0x00, 0x00, 0x00, //
+ 	0x00, 0x00, 0x00, //
+ 	0x00, 0x00, 0x00, //
+ 	0x00, 0x00, 0x00, //
+ 	0x00, 0x00, 0x00, //
+ 	0x00, 0x00, 0x00, //
+ 	0x00, 0x00, 0x00, //
+ 	0x7F, 0xFC, 0x00, //  #############
+ 	0x7F, 0xFC, 0x00, //  #############
+ 	0x00, 0x00, 0x00, //
+ 	0x00, 0x00, 0x00, //
+ 	0x7F, 0xFC, 0x00, //  #############
+ 	0x7F, 0xFC, 0x00, //  #############
+ 	0x00, 0x00, 0x00, //
+ 	0x00, 0x00, 0x00, //
+ 	0x00, 0x00, 0x00, //
+ 	0x00, 0x00, 0x00, //
+ 	0x00, 0x00, 0x00, //
+ 	0x00, 0x00, 0x00, //
+ 	0x00, 0x00, 0x00, //
+ 	0x00, 0x00, 0x00, //
+ 	0x00, 0x00, 0x00, //
+ 	0x00, 0x00, 0x00, //
+ 	0x00, 0x00, 0x00, //
+ 
+ 	// @2160 '>' (17 pixels wide)
+ 	0x00, 0x00, 0x00, //
+ 	0x00, 0x00, 0x00, //
+ 	0x00, 0x00, 0x00, //
+ 	0x00, 0x00, 0x00, //
+ 	0x70, 0x00, 0x00, //  ###
+ 	0x78, 0x00, 0x00, //  ####
+ 	0x1E, 0x00, 0x00, //    ####
+ 	0x07, 0x80, 0x00, //      ####
+ 	0x01, 0xE0, 0x00, //        ####
+ 	0x00, 0x78, 0x00, //          ####
+ 	0x00, 0x1E, 0x00, //            ####
+ 	0x00, 0x78, 0x00, //          ####
+ 	0x01, 0xE0, 0x00, //        ####
+ 	0x07, 0x80, 0x00, //      ####
+ 	0x1E, 0x00, 0x00, //    ####
+ 	0x78, 0x00, 0x00, //  ####
+ 	0x70, 0x00, 0x00, //  ###
+ 	0x00, 0x00, 0x00, //
+ 	0x00, 0x00, 0x00, //
+ 	0x00, 0x00, 0x00, //
+ 	0x00, 0x00, 0x00, //
+ 	0x00, 0x00, 0x00, //
+ 	0x00, 0x00, 0x00, //
+ 	0x00, 0x00, 0x00, //
+ 
+ 	// @2232 '?' (17 pixels wide)
+ 	0x00, 0x00, 0x00, //
+ 	0x00, 0x00, 0x00, //
+ 	0x00, 0x00, 0x00, //
+ 	0x07, 0xC0, 0x00, //      #####
+ 	0x0F, 0xE0, 0x00, //     #######
+ 	0x18, 0x70, 0x00, //    ##    ###
+ 	0x18, 0x30, 0x00, //    ##     ##
+ 	0x18, 0x30, 0x00, //    ##     ##
+ 	0x00, 0x70, 0x00, //          ###
+ 	0x00, 0xE0, 0x00, //         ###
+ 	0x03, 0xC0, 0x00, //       ####
+ 	0x03, 0x80, 0x00, //       ###
+ 	0x03, 0x00, 0x00, //       ##
+ 	0x00, 0x00, 0x00, //
+ 	0x00, 0x00, 0x00, //
+ 	0x07, 0x00, 0x00, //      ###
+ 	0x07, 0x00, 0x00, //      ###
+ 	0x00, 0x00, 0x00, //
+ 	0x00, 0x00, 0x00, //
+ 	0x00, 0x00, 0x00, //
+ 	0x00, 0x00, 0x00, //
+ 	0x00, 0x00, 0x00, //
+ 	0x00, 0x00, 0x00, //
+ 	0x00, 0x00, 0x00, //
+ 
+ 	// @2304 '@' (17 pixels wide)
+ 	0x00, 0x00, 0x00, //
+ 	0x00, 0x00, 0x00, //
+ 	0x03, 0xE0, 0x00, //       #####
+ 	0x07, 0xF0, 0x00, //      #######
+ 	0x0E, 0x38, 0x00, //     ###   ###
+ 	0x0C, 0x18, 0x00, //     ##     ##
+ 	0x18, 0x78, 0x00, //    ##    ####
+ 	0x18, 0xF8, 0x00, //    ##   #####
+ 	0x19, 0xD8, 0x00, //    ##  ### ##
+ 	0x19, 0x98, 0x00, //    ##  ##  ##
+ 	0x19, 0x98, 0x00, //    ##  ##  ##
+ 	0x19, 0x98, 0x00, //    ##  ##  ##
+ 	0x18, 0xF8, 0x00, //    ##   #####
+ 	0x18, 0x78, 0x00, //    ##    ####
+ 	0x18, 0x00, 0x00, //    ##
+ 	0x0C, 0x00, 0x00, //     ##
+ 	0x0E, 0x18, 0x00, //     ###    ##
+ 	0x07, 0xF8, 0x00, //      ########
+ 	0x03, 0xE0, 0x00, //       #####
+ 	0x00, 0x00, 0x00, //
+ 	0x00, 0x00, 0x00, //
+ 	0x00, 0x00, 0x00, //
+ 	0x00, 0x00, 0x00, //
+ 	0x00, 0x00, 0x00, //
+ 
+ 	// @2376 'A' (17 pixels wide)
+ 	0x00, 0x00, 0x00, //
+ 	0x00, 0x00, 0x00, //
+ 	0x00, 0x00, 0x00, //
+ 	0x1F, 0x80, 0x00, //    ######
+ 	0x1F, 0xC0, 0x00, //    #######
+ 	0x01, 0xC0, 0x00, //        ###
+ 	0x03, 0x60, 0x00, //       ## ##
+ 	0x03, 0x60, 0x00, //       ## ##
+ 	0x06, 0x30, 0x00, //      ##   ##
+ 	0x06, 0x30, 0x00, //      ##   ##
+ 	0x0C, 0x30, 0x00, //     ##    ##
+ 	0x0F, 0xF8, 0x00, //     #########
+ 	0x1F, 0xF8, 0x00, //    ##########
+ 	0x18, 0x0C, 0x00, //    ##       ##
+ 	0x30, 0x0C, 0x00, //   ##        ##
+ 	0xFC, 0x7F, 0x00, // ######   #######
+ 	0xFC, 0x7F, 0x00, // ######   #######
+ 	0x00, 0x00, 0x00, //
+ 	0x00, 0x00, 0x00, //
+ 	0x00, 0x00, 0x00, //
+ 	0x00, 0x00, 0x00, //
+ 	0x00, 0x00, 0x00, //
+ 	0x00, 0x00, 0x00, //
+ 	0x00, 0x00, 0x00, //
+ 
+ 	// @2448 'B' (17 pixels wide)
+ 	0x00, 0x00, 0x00, //
+ 	0x00, 0x00, 0x00, //
+ 	0x00, 0x00, 0x00, //
+ 	0x7F, 0xE0, 0x00, //  ##########
+ 	0x7F, 0xF0, 0x00, //  ###########
+ 	0x18, 0x38, 0x00, //    ##     ###
+ 	0x18, 0x18, 0x00, //    ##      ##
+ 	0x18, 0x18, 0x00, //    ##      ##
+ 	0x18, 0x38, 0x00, //    ##     ###
+ 	0x1F, 0xF0, 0x00, //    #########
+ 	0x1F, 0xF8, 0x00, //    ##########
+ 	0x18, 0x1C, 0x00, //    ##      ###
+ 	0x18, 0x0C, 0x00, //    ##       ##
+ 	0x18, 0x0C, 0x00, //    ##       ##
+ 	0x18, 0x0C, 0x00, //    ##       ##
+ 	0x7F, 0xF8, 0x00, //  ############
+ 	0x7F, 0xF0, 0x00, //  ###########
+ 	0x00, 0x00, 0x00, //
+ 	0x00, 0x00, 0x00, //
+ 	0x00, 0x00, 0x00, //
+ 	0x00, 0x00, 0x00, //
+ 	0x00, 0x00, 0x00, //
+ 	0x00, 0x00, 0x00, //
+ 	0x00, 0x00, 0x00, //
+ 
+ 	// @2520 'C' (17 pixels wide)
+ 	0x00, 0x00, 0x00, //
+ 	0x00, 0x00, 0x00, //
+ 	0x00, 0x00, 0x00, //
+ 	0x03, 0xEC, 0x00, //       ##### ##
+ 	0x0F, 0xFC, 0x00, //     ##########
+ 	0x1C, 0x1C, 0x00, //    ###     ###
+ 	0x18, 0x0C, 0x00, //    ##       ##
+ 	0x30, 0x0C, 0x00, //   ##        ##
+ 	0x30, 0x00, 0x00, //   ##
+ 	0x30, 0x00, 0x00, //   ##
+ 	0x30, 0x00, 0x00, //   ##
+ 	0x30, 0x00, 0x00, //   ##
+ 	0x30, 0x00, 0x00, //   ##
+ 	0x18, 0x0C, 0x00, //    ##       ##
+ 	0x1C, 0x1C, 0x00, //    ###     ###
+ 	0x0F, 0xF8, 0x00, //     #########
+ 	0x03, 0xF0, 0x00, //       ######
+ 	0x00, 0x00, 0x00, //
+ 	0x00, 0x00, 0x00, //
+ 	0x00, 0x00, 0x00, //
+ 	0x00, 0x00, 0x00, //
+ 	0x00, 0x00, 0x00, //
+ 	0x00, 0x00, 0x00, //
+ 	0x00, 0x00, 0x00, //
+ 
+ 	// @2592 'D' (17 pixels wide)
+ 	0x00, 0x00, 0x00, //
+ 	0x00, 0x00, 0x00, //
+ 	0x00, 0x00, 0x00, //
+ 	0x7F, 0xC0, 0x00, //  #########
+ 	0x7F, 0xF0, 0x00, //  ###########
+ 	0x18, 0x38, 0x00, //    ##     ###
+ 	0x18, 0x18, 0x00, //    ##      ##
+ 	0x18, 0x0C, 0x00, //    ##       ##
+ 	0x18, 0x0C, 0x00, //    ##       ##
+ 	0x18, 0x0C, 0x00, //    ##       ##
+ 	0x18, 0x0C, 0x00, //    ##       ##
+ 	0x18, 0x0C, 0x00, //    ##       ##
+ 	0x18, 0x0C, 0x00, //    ##       ##
+ 	0x18, 0x18, 0x00, //    ##      ##
+ 	0x18, 0x38, 0x00, //    ##     ###
+ 	0x7F, 0xF0, 0x00, //  ###########
+ 	0x7F, 0xE0, 0x00, //  ##########
+ 	0x00, 0x00, 0x00, //
+ 	0x00, 0x00, 0x00, //
+ 	0x00, 0x00, 0x00, //
+ 	0x00, 0x00, 0x00, //
+ 	0x00, 0x00, 0x00, //
+ 	0x00, 0x00, 0x00, //
+ 	0x00, 0x00, 0x00, //
+ 
+ 	// @2664 'E' (17 pixels wide)
+ 	0x00, 0x00, 0x00, //
+ 	0x00, 0x00, 0x00, //
+ 	0x00, 0x00, 0x00, //
+ 	0x7F, 0xF8, 0x00, //  ############
+ 	0x7F, 0xF8, 0x00, //  ############
+ 	0x18, 0x18, 0x00, //    ##      ##
+ 	0x18, 0x18, 0x00, //    ##      ##
+ 	0x19, 0x98, 0x00, //    ##  ##  ##
+ 	0x19, 0x80, 0x00, //    ##  ##
+ 	0x1F, 0x80, 0x00, //    ######
+ 	0x1F, 0x80, 0x00, //    ######
+ 	0x19, 0x80, 0x00, //    ##  ##
+ 	0x19, 0x98, 0x00, //    ##  ##  ##
+ 	0x18, 0x18, 0x00, //    ##      ##
+ 	0x18, 0x18, 0x00, //    ##      ##
+ 	0x7F, 0xF8, 0x00, //  ############
+ 	0x7F, 0xF8, 0x00, //  ############
+ 	0x00, 0x00, 0x00, //
+ 	0x00, 0x00, 0x00, //
+ 	0x00, 0x00, 0x00, //
+ 	0x00, 0x00, 0x00, //
+ 	0x00, 0x00, 0x00, //
+ 	0x00, 0x00, 0x00, //
+ 	0x00, 0x00, 0x00, //
+ 
+ 	// @2736 'F' (17 pixels wide)
+ 	0x00, 0x00, 0x00, //
+ 	0x00, 0x00, 0x00, //
+ 	0x00, 0x00, 0x00, //
+ 	0x3F, 0xFC, 0x00, //   ############
+ 	0x3F, 0xFC, 0x00, //   ############
+ 	0x0C, 0x0C, 0x00, //     ##      ##
+ 	0x0C, 0x0C, 0x00, //     ##      ##
+ 	0x0C, 0xCC, 0x00, //     ##  ##  ##
+ 	0x0C, 0xC0, 0x00, //     ##  ##
+ 	0x0F, 0xC0, 0x00, //     ######
+ 	0x0F, 0xC0, 0x00, //     ######
+ 	0x0C, 0xC0, 0x00, //     ##  ##
+ 	0x0C, 0xC0, 0x00, //     ##  ##
+ 	0x0C, 0x00, 0x00, //     ##
+ 	0x0C, 0x00, 0x00, //     ##
+ 	0x3F, 0xC0, 0x00, //   ########
+ 	0x3F, 0xC0, 0x00, //   ########
+ 	0x00, 0x00, 0x00, //
+ 	0x00, 0x00, 0x00, //
+ 	0x00, 0x00, 0x00, //
+ 	0x00, 0x00, 0x00, //
+ 	0x00, 0x00, 0x00, //
+ 	0x00, 0x00, 0x00, //
+ 	0x00, 0x00, 0x00, //
+ 
+ 	// @2808 'G' (17 pixels wide)
+ 	0x00, 0x00, 0x00, //
+ 	0x00, 0x00, 0x00, //
+ 	0x00, 0x00, 0x00, //
+ 	0x03, 0xEC, 0x00, //       ##### ##
+ 	0x0F, 0xFC, 0x00, //     ##########
+ 	0x1C, 0x1C, 0x00, //    ###     ###
+ 	0x18, 0x0C, 0x00, //    ##       ##
+ 	0x30, 0x0C, 0x00, //   ##        ##
+ 	0x30, 0x00, 0x00, //   ##
+ 	0x30, 0x00, 0x00, //   ##
+ 	0x30, 0xFE, 0x00, //   ##    #######
+ 	0x30, 0xFE, 0x00, //   ##    #######
+ 	0x30, 0x0C, 0x00, //   ##        ##
+ 	0x38, 0x0C, 0x00, //   ###       ##
+ 	0x1C, 0x1C, 0x00, //    ###     ###
+ 	0x0F, 0xFC, 0x00, //     ##########
+ 	0x03, 0xF0, 0x00, //       ######
+ 	0x00, 0x00, 0x00, //
+ 	0x00, 0x00, 0x00, //
+ 	0x00, 0x00, 0x00, //
+ 	0x00, 0x00, 0x00, //
+ 	0x00, 0x00, 0x00, //
+ 	0x00, 0x00, 0x00, //
+ 	0x00, 0x00, 0x00, //
+ 
+ 	// @2880 'H' (17 pixels wide)
+ 	0x00, 0x00, 0x00, //
+ 	0x00, 0x00, 0x00, //
+ 	0x00, 0x00, 0x00, //
+ 	0x7E, 0x7E, 0x00, //  ######  ######
+ 	0x7E, 0x7E, 0x00, //  ######  ######
+ 	0x18, 0x18, 0x00, //    ##      ##
+ 	0x18, 0x18, 0x00, //    ##      ##
+ 	0x18, 0x18, 0x00, //    ##      ##
+ 	0x18, 0x18, 0x00, //    ##      ##
+ 	0x1F, 0xF8, 0x00, //    ##########
+ 	0x1F, 0xF8, 0x00, //    ##########
+ 	0x18, 0x18, 0x00, //    ##      ##
+ 	0x18, 0x18, 0x00, //    ##      ##
+ 	0x18, 0x18, 0x00, //    ##      ##
+ 	0x18, 0x18, 0x00, //    ##      ##
+ 	0x7E, 0x7E, 0x00, //  ######  ######
+ 	0x7E, 0x7E, 0x00, //  ######  ######
+ 	0x00, 0x00, 0x00, //
+ 	0x00, 0x00, 0x00, //
+ 	0x00, 0x00, 0x00, //
+ 	0x00, 0x00, 0x00, //
+ 	0x00, 0x00, 0x00, //
+ 	0x00, 0x00, 0x00, //
+ 	0x00, 0x00, 0x00, //
+ 
+ 	// @2952 'I' (17 pixels wide)
+ 	0x00, 0x00, 0x00, //
+ 	0x00, 0x00, 0x00, //
+ 	0x00, 0x00, 0x00, //
+ 	0x1F, 0xF8, 0x00, //    ##########
+ 	0x1F, 0xF8, 0x00, //    ##########
+ 	0x01, 0x80, 0x00, //        ##
+ 	0x01, 0x80, 0x00, //        ##
+ 	0x01, 0x80, 0x00, //        ##
+ 	0x01, 0x80, 0x00, //        ##
+ 	0x01, 0x80, 0x00, //        ##
+ 	0x01, 0x80, 0x00, //        ##
+ 	0x01, 0x80, 0x00, //        ##
+ 	0x01, 0x80, 0x00, //        ##
+ 	0x01, 0x80, 0x00, //        ##
+ 	0x01, 0x80, 0x00, //        ##
+ 	0x1F, 0xF8, 0x00, //    ##########
+ 	0x1F, 0xF8, 0x00, //    ##########
+ 	0x00, 0x00, 0x00, //
+ 	0x00, 0x00, 0x00, //
+ 	0x00, 0x00, 0x00, //
+ 	0x00, 0x00, 0x00, //
+ 	0x00, 0x00, 0x00, //
+ 	0x00, 0x00, 0x00, //
+ 	0x00, 0x00, 0x00, //
+ 
+ 	// @3024 'J' (17 pixels wide)
+ 	0x00, 0x00, 0x00, //
+ 	0x00, 0x00, 0x00, //
+ 	0x00, 0x00, 0x00, //
+ 	0x07, 0xFE, 0x00, //      ##########
+ 	0x07, 0xFE, 0x00, //      ##########
+ 	0x00, 0x30, 0x00, //           ##
+ 	0x00, 0x30, 0x00, //           ##
+ 	0x00, 0x30, 0x00, //           ##
+ 	0x00, 0x30, 0x00, //           ##
+ 	0x00, 0x30, 0x00, //           ##
+ 	0x30, 0x30, 0x00, //   ##      ##
+ 	0x30, 0x30, 0x00, //   ##      ##
+ 	0x30, 0x30, 0x00, //   ##      ##
+ 	0x30, 0x30, 0x00, //   ##      ##
+ 	0x30, 0x60, 0x00, //   ##     ##
+ 	0x3F, 0xE0, 0x00, //   #########
+ 	0x0F, 0x80, 0x00, //     #####
+ 	0x00, 0x00, 0x00, //
+ 	0x00, 0x00, 0x00, //
+ 	0x00, 0x00, 0x00, //
+ 	0x00, 0x00, 0x00, //
+ 	0x00, 0x00, 0x00, //
+ 	0x00, 0x00, 0x00, //
+ 	0x00, 0x00, 0x00, //
+ 
+ 	// @3096 'K' (17 pixels wide)
+ 	0x00, 0x00, 0x00, //
+ 	0x00, 0x00, 0x00, //
+ 	0x00, 0x00, 0x00, //
+ 	0x7F, 0x3E, 0x00, //  #######  #####
+ 	0x7F, 0x3E, 0x00, //  #######  #####
+ 	0x18, 0x30, 0x00, //    ##     ##
+ 	0x18, 0x60, 0x00, //    ##    ##
+ 	0x18, 0xC0, 0x00, //    ##   ##
+ 	0x19, 0x80, 0x00, //    ##  ##
+ 	0x1B, 0x80, 0x00, //    ## ###
+ 	0x1F, 0xC0, 0x00, //    #######
+ 	0x1C, 0xE0, 0x00, //    ###  ###
+ 	0x18, 0x70, 0x00, //    ##    ###
+ 	0x18, 0x30, 0x00, //    ##     ##
+ 	0x18, 0x38, 0x00, //    ##     ###
+ 	0x7F, 0x1F, 0x00, //  #######   #####
+ 	0x7F, 0x1F, 0x00, //  #######   #####
+ 	0x00, 0x00, 0x00, //
+ 	0x00, 0x00, 0x00, //
+ 	0x00, 0x00, 0x00, //
+ 	0x00, 0x00, 0x00, //
+ 	0x00, 0x00, 0x00, //
+ 	0x00, 0x00, 0x00, //
+ 	0x00, 0x00, 0x00, //
+ 
+ 	// @3168 'L' (17 pixels wide)
+ 	0x00, 0x00, 0x00, //
+ 	0x00, 0x00, 0x00, //
+ 	0x00, 0x00, 0x00, //
+ 	0x7F, 0x80, 0x00, //  ########
+ 	0x7F, 0x80, 0x00, //  ########
+ 	0x0C, 0x00, 0x00, //     ##
+ 	0x0C, 0x00, 0x00, //     ##
+ 	0x0C, 0x00, 0x00, //     ##
+ 	0x0C, 0x00, 0x00, //     ##
+ 	0x0C, 0x00, 0x00, //     ##
+ 	0x0C, 0x00, 0x00, //     ##
+ 	0x0C, 0x0C, 0x00, //     ##      ##
+ 	0x0C, 0x0C, 0x00, //     ##      ##
+ 	0x0C, 0x0C, 0x00, //     ##      ##
+ 	0x0C, 0x0C, 0x00, //     ##      ##
+ 	0x7F, 0xFC, 0x00, //  #############
+ 	0x7F, 0xFC, 0x00, //  #############
+ 	0x00, 0x00, 0x00, //
+ 	0x00, 0x00, 0x00, //
+ 	0x00, 0x00, 0x00, //
+ 	0x00, 0x00, 0x00, //
+ 	0x00, 0x00, 0x00, //
+ 	0x00, 0x00, 0x00, //
+ 	0x00, 0x00, 0x00, //
+ 
+ 	// @3240 'M' (17 pixels wide)
+ 	0x00, 0x00, 0x00, //
+ 	0x00, 0x00, 0x00, //
+ 	0x00, 0x00, 0x00, //
+ 	0xF0, 0x0F, 0x00, // ####        ####
+ 	0xF8, 0x1F, 0x00, // #####      #####
+ 	0x38, 0x1C, 0x00, //   ###      ###
+ 	0x3C, 0x3C, 0x00, //   ####    ####
+ 	0x3C, 0x3C, 0x00, //   ####    ####
+ 	0x36, 0x6C, 0x00, //   ## ##  ## ##
+ 	0x36, 0x6C, 0x00, //   ## ##  ## ##
+ 	0x33, 0xCC, 0x00, //   ##  ####  ##
+ 	0x33, 0xCC, 0x00, //   ##  ####  ##
+ 	0x31, 0x8C, 0x00, //   ##   ##   ##
+ 	0x30, 0x0C, 0x00, //   ##        ##
+ 	0x30, 0x0C, 0x00, //   ##        ##
+ 	0xFE, 0x7F, 0x00, // #######  #######
+ 	0xFE, 0x7F, 0x00, // #######  #######
+ 	0x00, 0x00, 0x00, //
+ 	0x00, 0x00, 0x00, //
+ 	0x00, 0x00, 0x00, //
+ 	0x00, 0x00, 0x00, //
+ 	0x00, 0x00, 0x00, //
+ 	0x00, 0x00, 0x00, //
+ 	0x00, 0x00, 0x00, //
+ 
+ 	// @3312 'N' (17 pixels wide)
+ 	0x00, 0x00, 0x00, //
+ 	0x00, 0x00, 0x00, //
+ 	0x00, 0x00, 0x00, //
+ 	0x78, 0xFE, 0x00, //  ####   #######
+ 	0x78, 0xFE, 0x00, //  ####   #######
+ 	0x1C, 0x18, 0x00, //    ###     ##
+ 	0x1E, 0x18, 0x00, //    ####    ##
+ 	0x1F, 0x18, 0x00, //    #####   ##
+ 	0x1B, 0x18, 0x00, //    ## ##   ##
+ 	0x1B, 0x98, 0x00, //    ## ###  ##
+ 	0x19, 0xD8, 0x00, //    ##  ### ##
+ 	0x18, 0xD8, 0x00, //    ##   ## ##
+ 	0x18, 0xF8, 0x00, //    ##   #####
+ 	0x18, 0x78, 0x00, //    ##    ####
+ 	0x18, 0x38, 0x00, //    ##     ###
+ 	0x7F, 0x18, 0x00, //  #######   ##
+ 	0x7F, 0x18, 0x00, //  #######   ##
+ 	0x00, 0x00, 0x00, //
+ 	0x00, 0x00, 0x00, //
+ 	0x00, 0x00, 0x00, //
+ 	0x00, 0x00, 0x00, //
+ 	0x00, 0x00, 0x00, //
+ 	0x00, 0x00, 0x00, //
+ 	0x00, 0x00, 0x00, //
+ 
+ 	// @3384 'O' (17 pixels wide)
+ 	0x00, 0x00, 0x00, //
+ 	0x00, 0x00, 0x00, //
+ 	0x00, 0x00, 0x00, //
+ 	0x03, 0xC0, 0x00, //       ####
+ 	0x0F, 0xF0, 0x00, //     ########
+ 	0x1C, 0x38, 0x00, //    ###    ###
+ 	0x18, 0x18, 0x00, //    ##      ##
+ 	0x38, 0x1C, 0x00, //   ###      ###
+ 	0x30, 0x0C, 0x00, //   ##        ##
+ 	0x30, 0x0C, 0x00, //   ##        ##
+ 	0x30, 0x0C, 0x00, //   ##        ##
+ 	0x30, 0x0C, 0x00, //   ##        ##
+ 	0x38, 0x1C, 0x00, //   ###      ###
+ 	0x18, 0x18, 0x00, //    ##      ##
+ 	0x1C, 0x38, 0x00, //    ###    ###
+ 	0x0F, 0xF0, 0x00, //     ########
+ 	0x03, 0xC0, 0x00, //       ####
+ 	0x00, 0x00, 0x00, //
+ 	0x00, 0x00, 0x00, //
+ 	0x00, 0x00, 0x00, //
+ 	0x00, 0x00, 0x00, //
+ 	0x00, 0x00, 0x00, //
+ 	0x00, 0x00, 0x00, //
+ 	0x00, 0x00, 0x00, //
+ 
+ 	// @3456 'P' (17 pixels wide)
+ 	0x00, 0x00, 0x00, //
+ 	0x00, 0x00, 0x00, //
+ 	0x00, 0x00, 0x00, //
+ 	0x3F, 0xF0, 0x00, //   ##########
+ 	0x3F, 0xF8, 0x00, //   ###########
+ 	0x0C, 0x1C, 0x00, //     ##     ###
+ 	0x0C, 0x0C, 0x00, //     ##      ##
+ 	0x0C, 0x0C, 0x00, //     ##      ##
+ 	0x0C, 0x0C, 0x00, //     ##      ##
+ 	0x0C, 0x18, 0x00, //     ##     ##
+ 	0x0F, 0xF8, 0x00, //     #########
+ 	0x0F, 0xE0, 0x00, //     #######
+ 	0x0C, 0x00, 0x00, //     ##
+ 	0x0C, 0x00, 0x00, //     ##
+ 	0x0C, 0x00, 0x00, //     ##
+ 	0x3F, 0xC0, 0x00, //   ########
+ 	0x3F, 0xC0, 0x00, //   ########
+ 	0x00, 0x00, 0x00, //
+ 	0x00, 0x00, 0x00, //
+ 	0x00, 0x00, 0x00, //
+ 	0x00, 0x00, 0x00, //
+ 	0x00, 0x00, 0x00, //
+ 	0x00, 0x00, 0x00, //
+ 	0x00, 0x00, 0x00, //
+ 
+ 	// @3528 'Q' (17 pixels wide)
+ 	0x00, 0x00, 0x00, //
+ 	0x00, 0x00, 0x00, //
+ 	0x00, 0x00, 0x00, //
+ 	0x03, 0xC0, 0x00, //       ####
+ 	0x0F, 0xF0, 0x00, //     ########
+ 	0x1C, 0x38, 0x00, //    ###    ###
+ 	0x18, 0x18, 0x00, //    ##      ##
+ 	0x38, 0x1C, 0x00, //   ###      ###
+ 	0x30, 0x0C, 0x00, //   ##        ##
+ 	0x30, 0x0C, 0x00, //   ##        ##
+ 	0x30, 0x0C, 0x00, //   ##        ##
+ 	0x30, 0x0C, 0x00, //   ##        ##
+ 	0x38, 0x1C, 0x00, //   ###      ###
+ 	0x18, 0x18, 0x00, //    ##      ##
+ 	0x1C, 0x38, 0x00, //    ###    ###
+ 	0x0F, 0xF0, 0x00, //     ########
+ 	0x07, 0xC0, 0x00, //      #####
+ 	0x07, 0xCC, 0x00, //      #####  ##
+ 	0x0F, 0xFC, 0x00, //     ##########
+ 	0x0C, 0x38, 0x00, //     ##    ###
+ 	0x00, 0x00, 0x00, //
+ 	0x00, 0x00, 0x00, //
+ 	0x00, 0x00, 0x00, //
+ 	0x00, 0x00, 0x00, //
+ 
+ 	// @3600 'R' (17 pixels wide)
+ 	0x00, 0x00, 0x00, //
+ 	0x00, 0x00, 0x00, //
+ 	0x00, 0x00, 0x00, //
+ 	0x7F, 0xE0, 0x00, //  ##########
+ 	0x7F, 0xF0, 0x00, //  ###########
+ 	0x18, 0x38, 0x00, //    ##     ###
+ 	0x18, 0x18, 0x00, //    ##      ##
+ 	0x18, 0x18, 0x00, //    ##      ##
+ 	0x18, 0x38, 0x00, //    ##     ###
+ 	0x1F, 0xF0, 0x00, //    #########
+ 	0x1F, 0xC0, 0x00, //    #######
+ 	0x18, 0xE0, 0x00, //    ##   ###
+ 	0x18, 0x70, 0x00, //    ##    ###
+ 	0x18, 0x30, 0x00, //    ##     ##
+ 	0x18, 0x38, 0x00, //    ##     ###
+ 	0x7F, 0x1E, 0x00, //  #######   ####
+ 	0x7F, 0x0E, 0x00, //  #######    ###
+ 	0x00, 0x00, 0x00, //
+ 	0x00, 0x00, 0x00, //
+ 	0x00, 0x00, 0x00, //
+ 	0x00, 0x00, 0x00, //
+ 	0x00, 0x00, 0x00, //
+ 	0x00, 0x00, 0x00, //
+ 	0x00, 0x00, 0x00, //
+ 
+ 	// @3672 'S' (17 pixels wide)
+ 	0x00, 0x00, 0x00, //
+ 	0x00, 0x00, 0x00, //
+ 	0x00, 0x00, 0x00, //
+ 	0x07, 0xD8, 0x00, //      ##### ##
+ 	0x0F, 0xF8, 0x00, //     #########
+ 	0x1C, 0x38, 0x00, //    ###    ###
+ 	0x18, 0x18, 0x00, //    ##      ##
+ 	0x18, 0x18, 0x00, //    ##      ##
+ 	0x1E, 0x00, 0x00, //    ####
+ 	0x0F, 0xC0, 0x00, //     ######
+ 	0x03, 0xF0, 0x00, //       ######
+ 	0x00, 0x78, 0x00, //          ####
+ 	0x18, 0x18, 0x00, //    ##      ##
+ 	0x18, 0x18, 0x00, //    ##      ##
+ 	0x1C, 0x38, 0x00, //    ###    ###
+ 	0x1F, 0xF0, 0x00, //    #########
+ 	0x1B, 0xE0, 0x00, //    ## #####
+ 	0x00, 0x00, 0x00, //
+ 	0x00, 0x00, 0x00, //
+ 	0x00, 0x00, 0x00, //
+ 	0x00, 0x00, 0x00, //
+ 	0x00, 0x00, 0x00, //
+ 	0x00, 0x00, 0x00, //
+ 	0x00, 0x00, 0x00, //
+ 
+ 	// @3744 'T' (17 pixels wide)
+ 	0x00, 0x00, 0x00, //
+ 	0x00, 0x00, 0x00, //
+ 	0x00, 0x00, 0x00, //
+ 	0x3F, 0xFC, 0x00, //   ############
+ 	0x3F, 0xFC, 0x00, //   ############
+ 	0x31, 0x8C, 0x00, //   ##   ##   ##
+ 	0x31, 0x8C, 0x00, //   ##   ##   ##
+ 	0x31, 0x8C, 0x00, //   ##   ##   ##
+ 	0x31, 0x8C, 0x00, //   ##   ##   ##
+ 	0x01, 0x80, 0x00, //        ##
+ 	0x01, 0x80, 0x00, //        ##
+ 	0x01, 0x80, 0x00, //        ##
+ 	0x01, 0x80, 0x00, //        ##
+ 	0x01, 0x80, 0x00, //        ##
+ 	0x01, 0x80, 0x00, //        ##
+ 	0x0F, 0xF0, 0x00, //     ########
+ 	0x0F, 0xF0, 0x00, //     ########
+ 	0x00, 0x00, 0x00, //
+ 	0x00, 0x00, 0x00, //
+ 	0x00, 0x00, 0x00, //
+ 	0x00, 0x00, 0x00, //
+ 	0x00, 0x00, 0x00, //
+ 	0x00, 0x00, 0x00, //
+ 	0x00, 0x00, 0x00, //
+ 
+ 	// @3816 'U' (17 pixels wide)
+ 	0x00, 0x00, 0x00, //
+ 	0x00, 0x00, 0x00, //
+ 	0x00, 0x00, 0x00, //
+ 	0x7E, 0x7E, 0x00, //  ######  ######
+ 	0x7E, 0x7E, 0x00, //  ######  ######
+ 	0x18, 0x18, 0x00, //    ##      ##
+ 	0x18, 0x18, 0x00, //    ##      ##
+ 	0x18, 0x18, 0x00, //    ##      ##
+ 	0x18, 0x18, 0x00, //    ##      ##
+ 	0x18, 0x18, 0x00, //    ##      ##
+ 	0x18, 0x18, 0x00, //    ##      ##
+ 	0x18, 0x18, 0x00, //    ##      ##
+ 	0x18, 0x18, 0x00, //    ##      ##
+ 	0x18, 0x18, 0x00, //    ##      ##
+ 	0x0C, 0x30, 0x00, //     ##    ##
+ 	0x0F, 0xF0, 0x00, //     ########
+ 	0x03, 0xC0, 0x00, //       ####
+ 	0x00, 0x00, 0x00, //
+ 	0x00, 0x00, 0x00, //
+ 	0x00, 0x00, 0x00, //
+ 	0x00, 0x00, 0x00, //
+ 	0x00, 0x00, 0x00, //
+ 	0x00, 0x00, 0x00, //
+ 	0x00, 0x00, 0x00, //
+ 
+ 	// @3888 'V' (17 pixels wide)
+ 	0x00, 0x00, 0x00, //
+ 	0x00, 0x00, 0x00, //
+ 	0x00, 0x00, 0x00, //
+ 	0x7F, 0x7F, 0x00, //  ####### #######
+ 	0x7F, 0x7F, 0x00, //  ####### #######
+ 	0x18, 0x0C, 0x00, //    ##       ##
+ 	0x0C, 0x18, 0x00, //     ##     ##
+ 	0x0C, 0x18, 0x00, //     ##     ##
+ 	0x0C, 0x18, 0x00, //     ##     ##
+ 	0x06, 0x30, 0x00, //      ##   ##
+ 	0x06, 0x30, 0x00, //      ##   ##
+ 	0x03, 0x60, 0x00, //       ## ##
+ 	0x03, 0x60, 0x00, //       ## ##
+ 	0x03, 0x60, 0x00, //       ## ##
+ 	0x01, 0xC0, 0x00, //        ###
+ 	0x01, 0xC0, 0x00, //        ###
+ 	0x00, 0x80, 0x00, //         #
+ 	0x00, 0x00, 0x00, //
+ 	0x00, 0x00, 0x00, //
+ 	0x00, 0x00, 0x00, //
+ 	0x00, 0x00, 0x00, //
+ 	0x00, 0x00, 0x00, //
+ 	0x00, 0x00, 0x00, //
+ 	0x00, 0x00, 0x00, //
+ 
+ 	// @3960 'W' (17 pixels wide)
+ 	0x00, 0x00, 0x00, //
+ 	0x00, 0x00, 0x00, //
+ 	0x00, 0x00, 0x00, //
+ 	0xFE, 0x3F, 0x80, // #######   #######
+ 	0xFE, 0x3F, 0x80, // #######   #######
+ 	0x30, 0x06, 0x00, //   ##         ##
+ 	0x30, 0x06, 0x00, //   ##         ##
+ 	0x30, 0x86, 0x00, //   ##    #    ##
+ 	0x19, 0xCC, 0x00, //    ##  ###  ##
+ 	0x19, 0xCC, 0x00, //    ##  ###  ##
+ 	0x1B, 0x6C, 0x00, //    ## ## ## ##
+ 	0x1B, 0x6C, 0x00, //    ## ## ## ##
+ 	0x1E, 0x7C, 0x00, //    ####  #####
+ 	0x0E, 0x38, 0x00, //     ###   ###
+ 	0x0E, 0x38, 0x00, //     ###   ###
+ 	0x0C, 0x18, 0x00, //     ##     ##
+ 	0x0C, 0x18, 0x00, //     ##     ##
+ 	0x00, 0x00, 0x00, //
+ 	0x00, 0x00, 0x00, //
+ 	0x00, 0x00, 0x00, //
+ 	0x00, 0x00, 0x00, //
+ 	0x00, 0x00, 0x00, //
+ 	0x00, 0x00, 0x00, //
+ 	0x00, 0x00, 0x00, //
+ 
+ 	// @4032 'X' (17 pixels wide)
+ 	0x00, 0x00, 0x00, //
+ 	0x00, 0x00, 0x00, //
+ 	0x00, 0x00, 0x00, //
+ 	0x7E, 0x7E, 0x00, //  ######  ######
+ 	0x7E, 0x7E, 0x00, //  ######  ######
+ 	0x18, 0x18, 0x00, //    ##      ##
+ 	0x0C, 0x30, 0x00, //     ##    ##
+ 	0x06, 0x60, 0x00, //      ##  ##
+ 	0x03, 0xC0, 0x00, //       ####
+ 	0x01, 0x80, 0x00, //        ##
+ 	0x01, 0x80, 0x00, //        ##
+ 	0x03, 0xC0, 0x00, //       ####
+ 	0x06, 0x60, 0x00, //      ##  ##
+ 	0x0C, 0x30, 0x00, //     ##    ##
+ 	0x18, 0x18, 0x00, //    ##      ##
+ 	0x7E, 0x7E, 0x00, //  ######  ######
+ 	0x7E, 0x7E, 0x00, //  ######  ######
+ 	0x00, 0x00, 0x00, //
+ 	0x00, 0x00, 0x00, //
+ 	0x00, 0x00, 0x00, //
+ 	0x00, 0x00, 0x00, //
+ 	0x00, 0x00, 0x00, //
+ 	0x00, 0x00, 0x00, //
+ 	0x00, 0x00, 0x00, //
+ 
+ 	// @4104 'Y' (17 pixels wide)
+ 	0x00, 0x00, 0x00, //
+ 	0x00, 0x00, 0x00, //
+ 	0x00, 0x00, 0x00, //
+ 	0x7C, 0x7E, 0x00, //  #####   ######
+ 	0x7C, 0x7E, 0x00, //  #####   ######
+ 	0x18, 0x18, 0x00, //    ##      ##
+ 	0x0C, 0x30, 0x00, //     ##    ##
+ 	0x06, 0x60, 0x00, //      ##  ##
+ 	0x06, 0x60, 0x00, //      ##  ##
+ 	0x03, 0xC0, 0x00, //       ####
+ 	0x01, 0x80, 0x00, //        ##
+ 	0x01, 0x80, 0x00, //        ##
+ 	0x01, 0x80, 0x00, //        ##
+ 	0x01, 0x80, 0x00, //        ##
+ 	0x01, 0x80, 0x00, //        ##
+ 	0x0F, 0xF0, 0x00, //     ########
+ 	0x0F, 0xF0, 0x00, //     ########
+ 	0x00, 0x00, 0x00, //
+ 	0x00, 0x00, 0x00, //
+ 	0x00, 0x00, 0x00, //
+ 	0x00, 0x00, 0x00, //
+ 	0x00, 0x00, 0x00, //
+ 	0x00, 0x00, 0x00, //
+ 	0x00, 0x00, 0x00, //
+ 
+ 	// @4176 'Z' (17 pixels wide)
+ 	0x00, 0x00, 0x00, //
+ 	0x00, 0x00, 0x00, //
+ 	0x00, 0x00, 0x00, //
+ 	0x1F, 0xF8, 0x00, //    ##########
+ 	0x1F, 0xF8, 0x00, //    ##########
+ 	0x18, 0x18, 0x00, //    ##      ##
+ 	0x18, 0x30, 0x00, //    ##     ##
+ 	0x18, 0x60, 0x00, //    ##    ##
+ 	0x18, 0xC0, 0x00, //    ##   ##
+ 	0x01, 0x80, 0x00, //        ##
+ 	0x03, 0x00, 0x00, //       ##
+ 	0x06, 0x18, 0x00, //      ##    ##
+ 	0x0C, 0x18, 0x00, //     ##     ##
+ 	0x18, 0x18, 0x00, //    ##      ##
+ 	0x30, 0x18, 0x00, //   ##       ##
+ 	0x3F, 0xF8, 0x00, //   ###########
+ 	0x3F, 0xF8, 0x00, //   ###########
+ 	0x00, 0x00, 0x00, //
+ 	0x00, 0x00, 0x00, //
+ 	0x00, 0x00, 0x00, //
+ 	0x00, 0x00, 0x00, //
+ 	0x00, 0x00, 0x00, //
+ 	0x00, 0x00, 0x00, //
+ 	0x00, 0x00, 0x00, //
+ 
+ 	// @4248 '[' (17 pixels wide)
+ 	0x00, 0x00, 0x00, //
+ 	0x00, 0x00, 0x00, //
+ 	0x01, 0xF0, 0x00, //        #####
+ 	0x01, 0xF0, 0x00, //        #####
+ 	0x01, 0x80, 0x00, //        ##
+ 	0x01, 0x80, 0x00, //        ##
+ 	0x01, 0x80, 0x00, //        ##
+ 	0x01, 0x80, 0x00, //        ##
+ 	0x01, 0x80, 0x00, //        ##
+ 	0x01, 0x80, 0x00, //        ##
+ 	0x01, 0x80, 0x00, //        ##
+ 	0x01, 0x80, 0x00, //        ##
+ 	0x01, 0x80, 0x00, //        ##
+ 	0x01, 0x80, 0x00, //        ##
+ 	0x01, 0x80, 0x00, //        ##
+ 	0x01, 0x80, 0x00, //        ##
+ 	0x01, 0x80, 0x00, //        ##
+ 	0x01, 0x80, 0x00, //        ##
+ 	0x01, 0xF0, 0x00, //        #####
+ 	0x01, 0xF0, 0x00, //        #####
+ 	0x00, 0x00, 0x00, //
+ 	0x00, 0x00, 0x00, //
+ 	0x00, 0x00, 0x00, //
+ 	0x00, 0x00, 0x00, //
+ 
+ 	// @4320 '\' (17 pixels wide)
+ 	0x18, 0x00, 0x00, //    ##
+ 	0x18, 0x00, 0x00, //    ##
+ 	0x1C, 0x00, 0x00, //    ###
+ 	0x0C, 0x00, 0x00, //     ##
+ 	0x0E, 0x00, 0x00, //     ###
+ 	0x06, 0x00, 0x00, //      ##
+ 	0x06, 0x00, 0x00, //      ##
+ 	0x03, 0x00, 0x00, //       ##
+ 	0x03, 0x00, 0x00, //       ##
+ 	0x01, 0x80, 0x00, //        ##
+ 	0x01, 0x80, 0x00, //        ##
+ 	0x00, 0xC0, 0x00, //         ##
+ 	0x00, 0xC0, 0x00, //         ##
+ 	0x00, 0x60, 0x00, //          ##
+ 	0x00, 0x60, 0x00, //          ##
+ 	0x00, 0x70, 0x00, //          ###
+ 	0x00, 0x30, 0x00, //           ##
+ 	0x00, 0x38, 0x00, //           ###
+ 	0x00, 0x18, 0x00, //            ##
+ 	0x00, 0x18, 0x00, //            ##
+ 	0x00, 0x00, 0x00, //
+ 	0x00, 0x00, 0x00, //
+ 	0x00, 0x00, 0x00, //
+ 	0x00, 0x00, 0x00, //
+ 
+ 	// @4392 ']' (17 pixels wide)
+ 	0x00, 0x00, 0x00, //
+ 	0x00, 0x00, 0x00, //
+ 	0x0F, 0x80, 0x00, //     #####
+ 	0x0F, 0x80, 0x00, //     #####
+ 	0x01, 0x80, 0x00, //        ##
+ 	0x01, 0x80, 0x00, //        ##
+ 	0x01, 0x80, 0x00, //        ##
+ 	0x01, 0x80, 0x00, //        ##
+ 	0x01, 0x80, 0x00, //        ##
+ 	0x01, 0x80, 0x00, //        ##
+ 	0x01, 0x80, 0x00, //        ##
+ 	0x01, 0x80, 0x00, //        ##
+ 	0x01, 0x80, 0x00, //        ##
+ 	0x01, 0x80, 0x00, //        ##
+ 	0x01, 0x80, 0x00, //        ##
+ 	0x01, 0x80, 0x00, //        ##
+ 	0x01, 0x80, 0x00, //        ##
+ 	0x01, 0x80, 0x00, //        ##
+ 	0x0F, 0x80, 0x00, //     #####
+ 	0x0F, 0x80, 0x00, //     #####
+ 	0x00, 0x00, 0x00, //
+ 	0x00, 0x00, 0x00, //
+ 	0x00, 0x00, 0x00, //
+ 	0x00, 0x00, 0x00, //
+ 
+ 	// @4464 '^' (17 pixels wide)
+ 	0x00, 0x00, 0x00, //
+ 	0x00, 0x80, 0x00, //         #
+ 	0x01, 0xC0, 0x00, //        ###
+ 	0x03, 0xE0, 0x00, //       #####
+ 	0x07, 0x70, 0x00, //      ### ###
+ 	0x06, 0x30, 0x00, //      ##   ##
+ 	0x0C, 0x18, 0x00, //     ##     ##
+ 	0x18, 0x0C, 0x00, //    ##       ##
+ 	0x10, 0x04, 0x00, //    #         #
+ 	0x00, 0x00, 0x00, //
+ 	0x00, 0x00, 0x00, //
+ 	0x00, 0x00, 0x00, //
+ 	0x00, 0x00, 0x00, //
+ 	0x00, 0x00, 0x00, //
+ 	0x00, 0x00, 0x00, //
+ 	0x00, 0x00, 0x00, //
+ 	0x00, 0x00, 0x00, //
+ 	0x00, 0x00, 0x00, //
+ 	0x00, 0x00, 0x00, //
+ 	0x00, 0x00, 0x00, //
+ 	0x00, 0x00, 0x00, //
+ 	0x00, 0x00, 0x00, //
+ 	0x00, 0x00, 0x00, //
+ 	0x00, 0x00, 0x00, //
+ 
+ 	// @4536 '_' (17 pixels wide)
+ 	0x00, 0x00, 0x00, //
+ 	0x00, 0x00, 0x00, //
+ 	0x00, 0x00, 0x00, //
+ 	0x00, 0x00, 0x00, //
+ 	0x00, 0x00, 0x00, //
+ 	0x00, 0x00, 0x00, //
+ 	0x00, 0x00, 0x00, //
+ 	0x00, 0x00, 0x00, //
+ 	0x00, 0x00, 0x00, //
+ 	0x00, 0x00, 0x00, //
+ 	0x00, 0x00, 0x00, //
+ 	0x00, 0x00, 0x00, //
+ 	0x00, 0x00, 0x00, //
+ 	0x00, 0x00, 0x00, //
+ 	0x00, 0x00, 0x00, //
+ 	0x00, 0x00, 0x00, //
+ 	0x00, 0x00, 0x00, //
+ 	0x00, 0x00, 0x00, //
+ 	0x00, 0x00, 0x00, //
+ 	0x00, 0x00, 0x00, //
+ 	0x00, 0x00, 0x00, //
+ 	0x00, 0x00, 0x00, //
+ 	0xFF, 0xFF, 0x00, // ################
+ 	0xFF, 0xFF, 0x00, // ################
+ 
+ 	// @4608 '`' (17 pixels wide)
+ 	0x00, 0x00, 0x00, //
+ 	0x03, 0x00, 0x00, //       ##
+ 	0x03, 0x80, 0x00, //       ###
+ 	0x00, 0xE0, 0x00, //         ###
+ 	0x00, 0x60, 0x00, //          ##
+ 	0x00, 0x00, 0x00, //
+ 	0x00, 0x00, 0x00, //
+ 	0x00, 0x00, 0x00, //
+ 	0x00, 0x00, 0x00, //
+ 	0x00, 0x00, 0x00, //
+ 	0x00, 0x00, 0x00, //
+ 	0x00, 0x00, 0x00, //
+ 	0x00, 0x00, 0x00, //
+ 	0x00, 0x00, 0x00, //
+ 	0x00, 0x00, 0x00, //
+ 	0x00, 0x00, 0x00, //
+ 	0x00, 0x00, 0x00, //
+ 	0x00, 0x00, 0x00, //
+ 	0x00, 0x00, 0x00, //
+ 	0x00, 0x00, 0x00, //
+ 	0x00, 0x00, 0x00, //
+ 	0x00, 0x00, 0x00, //
+ 	0x00, 0x00, 0x00, //
+ 	0x00, 0x00, 0x00, //
+ 
+ 	// @4680 'a' (17 pixels wide)
+ 	0x00, 0x00, 0x00, //
+ 	0x00, 0x00, 0x00, //
+ 	0x00, 0x00, 0x00, //
+ 	0x00, 0x00, 0x00, //
+ 	0x00, 0x00, 0x00, //
+ 	0x00, 0x00, 0x00, //
+ 	0x0F, 0xC0, 0x00, //     ######
+ 	0x1F, 0xE0, 0x00, //    ########
+ 	0x00, 0x30, 0x00, //           ##
+ 	0x00, 0x30, 0x00, //           ##
+ 	0x07, 0xF0, 0x00, //      #######
+ 	0x1F, 0xF0, 0x00, //    #########
+ 	0x38, 0x30, 0x00, //   ###     ##
+ 	0x30, 0x30, 0x00, //   ##      ##
+ 	0x30, 0x70, 0x00, //   ##     ###
+ 	0x1F, 0xFC, 0x00, //    ###########
+ 	0x0F, 0xBC, 0x00, //     ##### ####
+ 	0x00, 0x00, 0x00, //
+ 	0x00, 0x00, 0x00, //
+ 	0x00, 0x00, 0x00, //
+ 	0x00, 0x00, 0x00, //
+ 	0x00, 0x00, 0x00, //
+ 	0x00, 0x00, 0x00, //
+ 	0x00, 0x00, 0x00, //
+ 
+ 	// @4752 'b' (17 pixels wide)
+ 	0x00, 0x00, 0x00, //
+ 	0x00, 0x00, 0x00, //
+ 	0x78, 0x00, 0x00, //  ####
+ 	0x78, 0x00, 0x00, //  ####
+ 	0x18, 0x00, 0x00, //    ##
+ 	0x18, 0x00, 0x00, //    ##
+ 	0x1B, 0xE0, 0x00, //    ## #####
+ 	0x1F, 0xF8, 0x00, //    ##########
+ 	0x1C, 0x18, 0x00, //    ###     ##
+ 	0x18, 0x0C, 0x00, //    ##       ##
+ 	0x18, 0x0C, 0x00, //    ##       ##
+ 	0x18, 0x0C, 0x00, //    ##       ##
+ 	0x18, 0x0C, 0x00, //    ##       ##
+ 	0x18, 0x0C, 0x00, //    ##       ##
+ 	0x1C, 0x18, 0x00, //    ###     ##
+ 	0x7F, 0xF8, 0x00, //  ############
+ 	0x7B, 0xE0, 0x00, //  #### #####
+ 	0x00, 0x00, 0x00, //
+ 	0x00, 0x00, 0x00, //
+ 	0x00, 0x00, 0x00, //
+ 	0x00, 0x00, 0x00, //
+ 	0x00, 0x00, 0x00, //
+ 	0x00, 0x00, 0x00, //
+ 	0x00, 0x00, 0x00, //
+ 
+ 	// @4824 'c' (17 pixels wide)
+ 	0x00, 0x00, 0x00, //
+ 	0x00, 0x00, 0x00, //
+ 	0x00, 0x00, 0x00, //
+ 	0x00, 0x00, 0x00, //
+ 	0x00, 0x00, 0x00, //
+ 	0x00, 0x00, 0x00, //
+ 	0x03, 0xEC, 0x00, //       ##### ##
+ 	0x0F, 0xFC, 0x00, //     ##########
+ 	0x1C, 0x1C, 0x00, //    ###     ###
+ 	0x38, 0x0C, 0x00, //   ###       ##
+ 	0x30, 0x0C, 0x00, //   ##        ##
+ 	0x30, 0x00, 0x00, //   ##
+ 	0x30, 0x00, 0x00, //   ##
+ 	0x38, 0x0C, 0x00, //   ###       ##
+ 	0x1C, 0x1C, 0x00, //    ###     ###
+ 	0x0F, 0xF8, 0x00, //     #########
+ 	0x03, 0xF0, 0x00, //       ######
+ 	0x00, 0x00, 0x00, //
+ 	0x00, 0x00, 0x00, //
+ 	0x00, 0x00, 0x00, //
+ 	0x00, 0x00, 0x00, //
+ 	0x00, 0x00, 0x00, //
+ 	0x00, 0x00, 0x00, //
+ 	0x00, 0x00, 0x00, //
+ 
+ 	// @4896 'd' (17 pixels wide)
+ 	0x00, 0x00, 0x00, //
+ 	0x00, 0x00, 0x00, //
+ 	0x00, 0x78, 0x00, //          ####
+ 	0x00, 0x78, 0x00, //          ####
+ 	0x00, 0x18, 0x00, //            ##
+ 	0x00, 0x18, 0x00, //            ##
+ 	0x07, 0xD8, 0x00, //      ##### ##
+ 	0x1F, 0xF8, 0x00, //    ##########
+ 	0x18, 0x38, 0x00, //    ##     ###
+ 	0x30, 0x18, 0x00, //   ##       ##
+ 	0x30, 0x18, 0x00, //   ##       ##
+ 	0x30, 0x18, 0x00, //   ##       ##
+ 	0x30, 0x18, 0x00, //   ##       ##
+ 	0x30, 0x18, 0x00, //   ##       ##
+ 	0x18, 0x38, 0x00, //    ##     ###
+ 	0x1F, 0xFE, 0x00, //    ############
+ 	0x07, 0xDE, 0x00, //      ##### ####
+ 	0x00, 0x00, 0x00, //
+ 	0x00, 0x00, 0x00, //
+ 	0x00, 0x00, 0x00, //
+ 	0x00, 0x00, 0x00, //
+ 	0x00, 0x00, 0x00, //
+ 	0x00, 0x00, 0x00, //
+ 	0x00, 0x00, 0x00, //
+ 
+ 	// @4968 'e' (17 pixels wide)
+ 	0x00, 0x00, 0x00, //
+ 	0x00, 0x00, 0x00, //
+ 	0x00, 0x00, 0x00, //
+ 	0x00, 0x00, 0x00, //
+ 	0x00, 0x00, 0x00, //
+ 	0x00, 0x00, 0x00, //
+ 	0x07, 0xE0, 0x00, //      ######
+ 	0x1F, 0xF8, 0x00, //    ##########
+ 	0x18, 0x18, 0x00, //    ##      ##
+ 	0x30, 0x0C, 0x00, //   ##        ##
+ 	0x3F, 0xFC, 0x00, //   ############
+ 	0x3F, 0xFC, 0x00, //   ############
+ 	0x30, 0x00, 0x00, //   ##
+ 	0x30, 0x00, 0x00, //   ##
+ 	0x18, 0x0C, 0x00, //    ##       ##
+ 	0x1F, 0xFC, 0x00, //    ###########
+ 	0x07, 0xF0, 0x00, //      #######
+ 	0x00, 0x00, 0x00, //
+ 	0x00, 0x00, 0x00, //
+ 	0x00, 0x00, 0x00, //
+ 	0x00, 0x00, 0x00, //
+ 	0x00, 0x00, 0x00, //
+ 	0x00, 0x00, 0x00, //
+ 	0x00, 0x00, 0x00, //
+ 
+ 	// @5040 'f' (17 pixels wide)
+ 	0x00, 0x00, 0x00, //
+ 	0x00, 0x00, 0x00, //
+ 	0x01, 0xFC, 0x00, //        #######
+ 	0x03, 0xFC, 0x00, //       ########
+ 	0x06, 0x00, 0x00, //      ##
+ 	0x06, 0x00, 0x00, //      ##
+ 	0x3F, 0xF8, 0x00, //   ###########
+ 	0x3F, 0xF8, 0x00, //   ###########
+ 	0x06, 0x00, 0x00, //      ##
+ 	0x06, 0x00, 0x00, //      ##
+ 	0x06, 0x00, 0x00, //      ##
+ 	0x06, 0x00, 0x00, //      ##
+ 	0x06, 0x00, 0x00, //      ##
+ 	0x06, 0x00, 0x00, //      ##
+ 	0x06, 0x00, 0x00, //      ##
+ 	0x3F, 0xF0, 0x00, //   ##########
+ 	0x3F, 0xF0, 0x00, //   ##########
+ 	0x00, 0x00, 0x00, //
+ 	0x00, 0x00, 0x00, //
+ 	0x00, 0x00, 0x00, //
+ 	0x00, 0x00, 0x00, //
+ 	0x00, 0x00, 0x00, //
+ 	0x00, 0x00, 0x00, //
+ 	0x00, 0x00, 0x00, //
+ 
+ 	// @5112 'g' (17 pixels wide)
+ 	0x00, 0x00, 0x00, //
+ 	0x00, 0x00, 0x00, //
+ 	0x00, 0x00, 0x00, //
+ 	0x00, 0x00, 0x00, //
+ 	0x00, 0x00, 0x00, //
+ 	0x00, 0x00, 0x00, //
+ 	0x07, 0xDE, 0x00, //      ##### ####
+ 	0x1F, 0xFE, 0x00, //    ############
+ 	0x18, 0x38, 0x00, //    ##     ###
+ 	0x30, 0x18, 0x00, //   ##       ##
+ 	0x30, 0x18, 0x00, //   ##       ##
+ 	0x30, 0x18, 0x00, //   ##       ##
+ 	0x30, 0x18, 0x00, //   ##       ##
+ 	0x30, 0x18, 0x00, //   ##       ##
+ 	0x18, 0x38, 0x00, //    ##     ###
+ 	0x1F, 0xF8, 0x00, //    ##########
+ 	0x07, 0xD8, 0x00, //      ##### ##
+ 	0x00, 0x18, 0x00, //            ##
+ 	0x00, 0x18, 0x00, //            ##
+ 	0x00, 0x38, 0x00, //           ###
+ 	0x0F, 0xF0, 0x00, //     ########
+ 	0x0F, 0xC0, 0x00, //     ######
+ 	0x00, 0x00, 0x00, //
+ 	0x00, 0x00, 0x00, //
+ 
+ 	// @5184 'h' (17 pixels wide)
+ 	0x00, 0x00, 0x00, //
+ 	0x00, 0x00, 0x00, //
+ 	0x78, 0x00, 0x00, //  ####
+ 	0x78, 0x00, 0x00, //  ####
+ 	0x18, 0x00, 0x00, //    ##
+ 	0x18, 0x00, 0x00, //    ##
+ 	0x1B, 0xE0, 0x00, //    ## #####
+ 	0x1F, 0xF0, 0x00, //    #########
+ 	0x1C, 0x38, 0x00, //    ###    ###
+ 	0x18, 0x18, 0x00, //    ##      ##
+ 	0x18, 0x18, 0x00, //    ##      ##
+ 	0x18, 0x18, 0x00, //    ##      ##
+ 	0x18, 0x18, 0x00, //    ##      ##
+ 	0x18, 0x18, 0x00, //    ##      ##
+ 	0x18, 0x18, 0x00, //    ##      ##
+ 	0x7E, 0x7E, 0x00, //  ######  ######
+ 	0x7E, 0x7E, 0x00, //  ######  ######
+ 	0x00, 0x00, 0x00, //
+ 	0x00, 0x00, 0x00, //
+ 	0x00, 0x00, 0x00, //
+ 	0x00, 0x00, 0x00, //
+ 	0x00, 0x00, 0x00, //
+ 	0x00, 0x00, 0x00, //
+ 	0x00, 0x00, 0x00, //
+ 
+ 	// @5256 'i' (17 pixels wide)
+ 	0x00, 0x00, 0x00, //
+ 	0x00, 0x00, 0x00, //
+ 	0x01, 0x80, 0x00, //        ##
+ 	0x01, 0x80, 0x00, //        ##
+ 	0x00, 0x00, 0x00, //
+ 	0x00, 0x00, 0x00, //
+ 	0x1F, 0x80, 0x00, //    ######
+ 	0x1F, 0x80, 0x00, //    ######
+ 	0x01, 0x80, 0x00, //        ##
+ 	0x01, 0x80, 0x00, //        ##
+ 	0x01, 0x80, 0x00, //        ##
+ 	0x01, 0x80, 0x00, //        ##
+ 	0x01, 0x80, 0x00, //        ##
+ 	0x01, 0x80, 0x00, //        ##
+ 	0x01, 0x80, 0x00, //        ##
+ 	0x3F, 0xFC, 0x00, //   ############
+ 	0x3F, 0xFC, 0x00, //   ############
+ 	0x00, 0x00, 0x00, //
+ 	0x00, 0x00, 0x00, //
+ 	0x00, 0x00, 0x00, //
+ 	0x00, 0x00, 0x00, //
+ 	0x00, 0x00, 0x00, //
+ 	0x00, 0x00, 0x00, //
+ 	0x00, 0x00, 0x00, //
+ 
+ 	// @5328 'j' (17 pixels wide)
+ 	0x00, 0x00, 0x00, //
+ 	0x00, 0x00, 0x00, //
+ 	0x00, 0xC0, 0x00, //         ##
+ 	0x00, 0xC0, 0x00, //         ##
+ 	0x00, 0x00, 0x00, //
+ 	0x00, 0x00, 0x00, //
+ 	0x1F, 0xF0, 0x00, //    #########
+ 	0x1F, 0xF0, 0x00, //    #########
+ 	0x00, 0x30, 0x00, //           ##
+ 	0x00, 0x30, 0x00, //           ##
+ 	0x00, 0x30, 0x00, //           ##
+ 	0x00, 0x30, 0x00, //           ##
+ 	0x00, 0x30, 0x00, //           ##
+ 	0x00, 0x30, 0x00, //           ##
+ 	0x00, 0x30, 0x00, //           ##
+ 	0x00, 0x30, 0x00, //           ##
+ 	0x00, 0x30, 0x00, //           ##
+ 	0x00, 0x30, 0x00, //           ##
+ 	0x00, 0x30, 0x00, //           ##
+ 	0x00, 0x70, 0x00, //          ###
+ 	0x1F, 0xE0, 0x00, //    ########
+ 	0x1F, 0x80, 0x00, //    ######
+ 	0x00, 0x00, 0x00, //
+ 	0x00, 0x00, 0x00, //
+ 
+ 	// @5400 'k' (17 pixels wide)
+ 	0x00, 0x00, 0x00, //
+ 	0x00, 0x00, 0x00, //
+ 	0x3C, 0x00, 0x00, //   ####
+ 	0x3C, 0x00, 0x00, //   ####
+ 	0x0C, 0x00, 0x00, //     ##
+ 	0x0C, 0x00, 0x00, //     ##
+ 	0x0C, 0xF8, 0x00, //     ##  #####
+ 	0x0C, 0xF8, 0x00, //     ##  #####
+ 	0x0C, 0xC0, 0x00, //     ##  ##
+ 	0x0D, 0x80, 0x00, //     ## ##
+ 	0x0F, 0x80, 0x00, //     #####
+ 	0x0F, 0x00, 0x00, //     ####
+ 	0x0F, 0x80, 0x00, //     #####
+ 	0x0D, 0xC0, 0x00, //     ## ###
+ 	0x0C, 0xE0, 0x00, //     ##  ###
+ 	0x3C, 0x7C, 0x00, //   ####   #####
+ 	0x3C, 0x7C, 0x00, //   ####   #####
+ 	0x00, 0x00, 0x00, //
+ 	0x00, 0x00, 0x00, //
+ 	0x00, 0x00, 0x00, //
+ 	0x00, 0x00, 0x00, //
+ 	0x00, 0x00, 0x00, //
+ 	0x00, 0x00, 0x00, //
+ 	0x00, 0x00, 0x00, //
+ 
+ 	// @5472 'l' (17 pixels wide)
+ 	0x00, 0x00, 0x00, //
+ 	0x00, 0x00, 0x00, //
+ 	0x1F, 0x80, 0x00, //    ######
+ 	0x1F, 0x80, 0x00, //    ######
+ 	0x01, 0x80, 0x00, //        ##
+ 	0x01, 0x80, 0x00, //        ##
+ 	0x01, 0x80, 0x00, //        ##
+ 	0x01, 0x80, 0x00, //        ##
+ 	0x01, 0x80, 0x00, //        ##
+ 	0x01, 0x80, 0x00, //        ##
+ 	0x01, 0x80, 0x00, //        ##
+ 	0x01, 0x80, 0x00, //        ##
+ 	0x01, 0x80, 0x00, //        ##
+ 	0x01, 0x80, 0x00, //        ##
+ 	0x01, 0x80, 0x00, //        ##
+ 	0x3F, 0xFC, 0x00, //   ############
+ 	0x3F, 0xFC, 0x00, //   ############
+ 	0x00, 0x00, 0x00, //
+ 	0x00, 0x00, 0x00, //
+ 	0x00, 0x00, 0x00, //
+ 	0x00, 0x00, 0x00, //
+ 	0x00, 0x00, 0x00, //
+ 	0x00, 0x00, 0x00, //
+ 	0x00, 0x00, 0x00, //
+ 
+ 	// @5544 'm' (17 pixels wide)
+ 	0x00, 0x00, 0x00, //
+ 	0x00, 0x00, 0x00, //
+ 	0x00, 0x00, 0x00, //
+ 	0x00, 0x00, 0x00, //
+ 	0x00, 0x00, 0x00, //
+ 	0x00, 0x00, 0x00, //
+ 	0xF7, 0x78, 0x00, // #### ### ####
+ 	0xFF, 0xFC, 0x00, // ##############
+ 	0x39, 0xCC, 0x00, //   ###  ###  ##
+ 	0x31, 0x8C, 0x00, //   ##   ##   ##
+ 	0x31, 0x8C, 0x00, //   ##   ##   ##
+ 	0x31, 0x8C, 0x00, //   ##   ##   ##
+ 	0x31, 0x8C, 0x00, //   ##   ##   ##
+ 	0x31, 0x8C, 0x00, //   ##   ##   ##
+ 	0x31, 0x8C, 0x00, //   ##   ##   ##
+ 	0xFD, 0xEF, 0x00, // ###### #### ####
+ 	0xFD, 0xEF, 0x00, // ###### #### ####
+ 	0x00, 0x00, 0x00, //
+ 	0x00, 0x00, 0x00, //
+ 	0x00, 0x00, 0x00, //
+ 	0x00, 0x00, 0x00, //
+ 	0x00, 0x00, 0x00, //
+ 	0x00, 0x00, 0x00, //
+ 	0x00, 0x00, 0x00, //
+ 
+ 	// @5616 'n' (17 pixels wide)
+ 	0x00, 0x00, 0x00, //
+ 	0x00, 0x00, 0x00, //
+ 	0x00, 0x00, 0x00, //
+ 	0x00, 0x00, 0x00, //
+ 	0x00, 0x00, 0x00, //
+ 	0x00, 0x00, 0x00, //
+ 	0x7B, 0xE0, 0x00, //  #### #####
+ 	0x7F, 0xF0, 0x00, //  ###########
+ 	0x1C, 0x38, 0x00, //    ###    ###
+ 	0x18, 0x18, 0x00, //    ##      ##
+ 	0x18, 0x18, 0x00, //    ##      ##
+ 	0x18, 0x18, 0x00, //    ##      ##
+ 	0x18, 0x18, 0x00, //    ##      ##
+ 	0x18, 0x18, 0x00, //    ##      ##
+ 	0x18, 0x18, 0x00, //    ##      ##
+ 	0x7E, 0x7E, 0x00, //  ######  ######
+ 	0x7E, 0x7E, 0x00, //  ######  ######
+ 	0x00, 0x00, 0x00, //
+ 	0x00, 0x00, 0x00, //
+ 	0x00, 0x00, 0x00, //
+ 	0x00, 0x00, 0x00, //
+ 	0x00, 0x00, 0x00, //
+ 	0x00, 0x00, 0x00, //
+ 	0x00, 0x00, 0x00, //
+ 
+ 	// @5688 'o' (17 pixels wide)
+ 	0x00, 0x00, 0x00, //
+ 	0x00, 0x00, 0x00, //
+ 	0x00, 0x00, 0x00, //
+ 	0x00, 0x00, 0x00, //
+ 	0x00, 0x00, 0x00, //
+ 	0x00, 0x00, 0x00, //
+ 	0x03, 0xC0, 0x00, //       ####
+ 	0x0F, 0xF0, 0x00, //     ########
+ 	0x1C, 0x38, 0x00, //    ###    ###
+ 	0x38, 0x1C, 0x00, //   ###      ###
+ 	0x30, 0x0C, 0x00, //   ##        ##
+ 	0x30, 0x0C, 0x00, //   ##        ##
+ 	0x30, 0x0C, 0x00, //   ##        ##
+ 	0x38, 0x1C, 0x00, //   ###      ###
+ 	0x1C, 0x38, 0x00, //    ###    ###
+ 	0x0F, 0xF0, 0x00, //     ########
+ 	0x03, 0xC0, 0x00, //       ####
+ 	0x00, 0x00, 0x00, //
+ 	0x00, 0x00, 0x00, //
+ 	0x00, 0x00, 0x00, //
+ 	0x00, 0x00, 0x00, //
+ 	0x00, 0x00, 0x00, //
+ 	0x00, 0x00, 0x00, //
+ 	0x00, 0x00, 0x00, //
+ 
+ 	// @5760 'p' (17 pixels wide)
+ 	0x00, 0x00, 0x00, //
+ 	0x00, 0x00, 0x00, //
+ 	0x00, 0x00, 0x00, //
+ 	0x00, 0x00, 0x00, //
+ 	0x00, 0x00, 0x00, //
+ 	0x00, 0x00, 0x00, //
+ 	0x7B, 0xE0, 0x00, //  #### #####
+ 	0x7F, 0xF8, 0x00, //  ############
+ 	0x1C, 0x18, 0x00, //    ###     ##
+ 	0x18, 0x0C, 0x00, //    ##       ##
+ 	0x18, 0x0C, 0x00, //    ##       ##
+ 	0x18, 0x0C, 0x00, //    ##       ##
+ 	0x18, 0x0C, 0x00, //    ##       ##
+ 	0x18, 0x0C, 0x00, //    ##       ##
+ 	0x1C, 0x18, 0x00, //    ###     ##
+ 	0x1F, 0xF8, 0x00, //    ##########
+ 	0x1B, 0xE0, 0x00, //    ## #####
+ 	0x18, 0x00, 0x00, //    ##
+ 	0x18, 0x00, 0x00, //    ##
+ 	0x18, 0x00, 0x00, //    ##
+ 	0x7F, 0x00, 0x00, //  #######
+ 	0x7F, 0x00, 0x00, //  #######
+ 	0x00, 0x00, 0x00, //
+ 	0x00, 0x00, 0x00, //
+ 
+ 	// @5832 'q' (17 pixels wide)
+ 	0x00, 0x00, 0x00, //
+ 	0x00, 0x00, 0x00, //
+ 	0x00, 0x00, 0x00, //
+ 	0x00, 0x00, 0x00, //
+ 	0x00, 0x00, 0x00, //
+ 	0x00, 0x00, 0x00, //
+ 	0x07, 0xDE, 0x00, //      ##### ####
+ 	0x1F, 0xFE, 0x00, //    ############
+ 	0x18, 0x38, 0x00, //    ##     ###
+ 	0x30, 0x18, 0x00, //   ##       ##
+ 	0x30, 0x18, 0x00, //   ##       ##
+ 	0x30, 0x18, 0x00, //   ##       ##
+ 	0x30, 0x18, 0x00, //   ##       ##
+ 	0x30, 0x18, 0x00, //   ##       ##
+ 	0x18, 0x38, 0x00, //    ##     ###
+ 	0x1F, 0xF8, 0x00, //    ##########
+ 	0x07, 0xD8, 0x00, //      ##### ##
+ 	0x00, 0x18, 0x00, //            ##
+ 	0x00, 0x18, 0x00, //            ##
+ 	0x00, 0x18, 0x00, //            ##
+ 	0x00, 0xFE, 0x00, //         #######
+ 	0x00, 0xFE, 0x00, //         #######
+ 	0x00, 0x00, 0x00, //
+ 	0x00, 0x00, 0x00, //
+ 
+ 	// @5904 'r' (17 pixels wide)
+ 	0x00, 0x00, 0x00, //
+ 	0x00, 0x00, 0x00, //
+ 	0x00, 0x00, 0x00, //
+ 	0x00, 0x00, 0x00, //
+ 	0x00, 0x00, 0x00, //
+ 	0x00, 0x00, 0x00, //
+ 	0x3E, 0x78, 0x00, //   #####  ####
+ 	0x3E, 0xFC, 0x00, //   ##### ######
+ 	0x07, 0xCC, 0x00, //      #####  ##
+ 	0x07, 0x00, 0x00, //      ###
+ 	0x06, 0x00, 0x00, //      ##
+ 	0x06, 0x00, 0x00, //      ##
+ 	0x06, 0x00, 0x00, //      ##
+ 	0x06, 0x00, 0x00, //      ##
+ 	0x06, 0x00, 0x00, //      ##
+ 	0x3F, 0xF0, 0x00, //   ##########
+ 	0x3F, 0xF0, 0x00, //   ##########
+ 	0x00, 0x00, 0x00, //
+ 	0x00, 0x00, 0x00, //
+ 	0x00, 0x00, 0x00, //
+ 	0x00, 0x00, 0x00, //
+ 	0x00, 0x00, 0x00, //
+ 	0x00, 0x00, 0x00, //
+ 	0x00, 0x00, 0x00, //
+ 
+ 	// @5976 's' (17 pixels wide)
+ 	0x00, 0x00, 0x00, //
+ 	0x00, 0x00, 0x00, //
+ 	0x00, 0x00, 0x00, //
+ 	0x00, 0x00, 0x00, //
+ 	0x00, 0x00, 0x00, //
+ 	0x00, 0x00, 0x00, //
+ 	0x07, 0xF8, 0x00, //      ########
+ 	0x0F, 0xF8, 0x00, //     #########
+ 	0x18, 0x18, 0x00, //    ##      ##
+ 	0x18, 0x18, 0x00, //    ##      ##
+ 	0x1F, 0x80, 0x00, //    ######
+ 	0x0F, 0xF0, 0x00, //     ########
+ 	0x00, 0xF8, 0x00, //         #####
+ 	0x18, 0x18, 0x00, //    ##      ##
+ 	0x18, 0x38, 0x00, //    ##     ###
+ 	0x1F, 0xF0, 0x00, //    #########
+ 	0x1F, 0xE0, 0x00, //    ########
+ 	0x00, 0x00, 0x00, //
+ 	0x00, 0x00, 0x00, //
+ 	0x00, 0x00, 0x00, //
+ 	0x00, 0x00, 0x00, //
+ 	0x00, 0x00, 0x00, //
+ 	0x00, 0x00, 0x00, //
+ 	0x00, 0x00, 0x00, //
+ 
+ 	// @6048 't' (17 pixels wide)
+ 	0x00, 0x00, 0x00, //
+ 	0x00, 0x00, 0x00, //
+ 	0x0C, 0x00, 0x00, //     ##
+ 	0x0C, 0x00, 0x00, //     ##
+ 	0x0C, 0x00, 0x00, //     ##
+ 	0x0C, 0x00, 0x00, //     ##
+ 	0x3F, 0xF0, 0x00, //   ##########
+ 	0x3F, 0xF0, 0x00, //   ##########
+ 	0x0C, 0x00, 0x00, //     ##
+ 	0x0C, 0x00, 0x00, //     ##
+ 	0x0C, 0x00, 0x00, //     ##
+ 	0x0C, 0x00, 0x00, //     ##
+ 	0x0C, 0x00, 0x00, //     ##
+ 	0x0C, 0x00, 0x00, //     ##
+ 	0x0C, 0x1C, 0x00, //     ##     ###
+ 	0x07, 0xFC, 0x00, //      #########
+ 	0x03, 0xF0, 0x00, //       ######
+ 	0x00, 0x00, 0x00, //
+ 	0x00, 0x00, 0x00, //
+ 	0x00, 0x00, 0x00, //
+ 	0x00, 0x00, 0x00, //
+ 	0x00, 0x00, 0x00, //
+ 	0x00, 0x00, 0x00, //
+ 	0x00, 0x00, 0x00, //
+ 
+ 	// @6120 'u' (17 pixels wide)
+ 	0x00, 0x00, 0x00, //
+ 	0x00, 0x00, 0x00, //
+ 	0x00, 0x00, 0x00, //
+ 	0x00, 0x00, 0x00, //
+ 	0x00, 0x00, 0x00, //
+ 	0x00, 0x00, 0x00, //
+ 	0x78, 0x78, 0x00, //  ####    ####
+ 	0x78, 0x78, 0x00, //  ####    ####
+ 	0x18, 0x18, 0x00, //    ##      ##
+ 	0x18, 0x18, 0x00, //    ##      ##
+ 	0x18, 0x18, 0x00, //    ##      ##
+ 	0x18, 0x18, 0x00, //    ##      ##
+ 	0x18, 0x18, 0x00, //    ##      ##
+ 	0x18, 0x18, 0x00, //    ##      ##
+ 	0x18, 0x38, 0x00, //    ##     ###
+ 	0x0F, 0xFE, 0x00, //     ###########
+ 	0x07, 0xDE, 0x00, //      ##### ####
+ 	0x00, 0x00, 0x00, //
+ 	0x00, 0x00, 0x00, //
+ 	0x00, 0x00, 0x00, //
+ 	0x00, 0x00, 0x00, //
+ 	0x00, 0x00, 0x00, //
+ 	0x00, 0x00, 0x00, //
+ 	0x00, 0x00, 0x00, //
+ 
+ 	// @6192 'v' (17 pixels wide)
+ 	0x00, 0x00, 0x00, //
+ 	0x00, 0x00, 0x00, //
+ 	0x00, 0x00, 0x00, //
+ 	0x00, 0x00, 0x00, //
+ 	0x00, 0x00, 0x00, //
+ 	0x00, 0x00, 0x00, //
+ 	0x7C, 0x3E, 0x00, //  #####    #####
+ 	0x7C, 0x3E, 0x00, //  #####    #####
+ 	0x18, 0x18, 0x00, //    ##      ##
+ 	0x18, 0x18, 0x00, //    ##      ##
+ 	0x0C, 0x30, 0x00, //     ##    ##
+ 	0x0C, 0x30, 0x00, //     ##    ##
+ 	0x06, 0x60, 0x00, //      ##  ##
+ 	0x06, 0x60, 0x00, //      ##  ##
+ 	0x07, 0xE0, 0x00, //      ######
+ 	0x03, 0xC0, 0x00, //       ####
+ 	0x03, 0xC0, 0x00, //       ####
+ 	0x00, 0x00, 0x00, //
+ 	0x00, 0x00, 0x00, //
+ 	0x00, 0x00, 0x00, //
+ 	0x00, 0x00, 0x00, //
+ 	0x00, 0x00, 0x00, //
+ 	0x00, 0x00, 0x00, //
+ 	0x00, 0x00, 0x00, //
+ 
+ 	// @6264 'w' (17 pixels wide)
+ 	0x00, 0x00, 0x00, //
+ 	0x00, 0x00, 0x00, //
+ 	0x00, 0x00, 0x00, //
+ 	0x00, 0x00, 0x00, //
+ 	0x00, 0x00, 0x00, //
+ 	0x00, 0x00, 0x00, //
+ 	0x78, 0x3C, 0x00, //  ####     ####
+ 	0x78, 0x3C, 0x00, //  ####     ####
+ 	0x31, 0x18, 0x00, //   ##   #   ##
+ 	0x33, 0x98, 0x00, //   ##  ###  ##
+ 	0x33, 0x98, 0x00, //   ##  ###  ##
+ 	0x1A, 0xB0, 0x00, //    ## # # ##
+ 	0x1E, 0xF0, 0x00, //    #### ####
+ 	0x1E, 0xF0, 0x00, //    #### ####
+ 	0x1C, 0x60, 0x00, //    ###   ##
+ 	0x0C, 0x60, 0x00, //     ##   ##
+ 	0x0C, 0x60, 0x00, //     ##   ##
+ 	0x00, 0x00, 0x00, //
+ 	0x00, 0x00, 0x00, //
+ 	0x00, 0x00, 0x00, //
+ 	0x00, 0x00, 0x00, //
+ 	0x00, 0x00, 0x00, //
+ 	0x00, 0x00, 0x00, //
+ 	0x00, 0x00, 0x00, //
+ 
+ 	// @6336 'x' (17 pixels wide)
+ 	0x00, 0x00, 0x00, //
+ 	0x00, 0x00, 0x00, //
+ 	0x00, 0x00, 0x00, //
+ 	0x00, 0x00, 0x00, //
+ 	0x00, 0x00, 0x00, //
+ 	0x00, 0x00, 0x00, //
+ 	0x3E, 0x7C, 0x00, //   #####  #####
+ 	0x3E, 0x7C, 0x00, //   #####  #####
+ 	0x0C, 0x30, 0x00, //     ##    ##
+ 	0x06, 0x60, 0x00, //      ##  ##
+ 	0x03, 0xC0, 0x00, //       ####
+ 	0x01, 0x80, 0x00, //        ##
+ 	0x03, 0xC0, 0x00, //       ####
+ 	0x06, 0x60, 0x00, //      ##  ##
+ 	0x0C, 0x30, 0x00, //     ##    ##
+ 	0x3E, 0x7C, 0x00, //   #####  #####
+ 	0x3E, 0x7C, 0x00, //   #####  #####
+ 	0x00, 0x00, 0x00, //
+ 	0x00, 0x00, 0x00, //
+ 	0x00, 0x00, 0x00, //
+ 	0x00, 0x00, 0x00, //
+ 	0x00, 0x00, 0x00, //
+ 	0x00, 0x00, 0x00, //
+ 	0x00, 0x00, 0x00, //
+ 
+ 	// @6408 'y' (17 pixels wide)
+ 	0x00, 0x00, 0x00, //
+ 	0x00, 0x00, 0x00, //
+ 	0x00, 0x00, 0x00, //
+ 	0x00, 0x00, 0x00, //
+ 	0x00, 0x00, 0x00, //
+ 	0x00, 0x00, 0x00, //
+ 	0x7E, 0x1F, 0x00, //  ######    #####
+ 	0x7E, 0x1F, 0x00, //  ######    #####
+ 	0x18, 0x0C, 0x00, //    ##       ##
+ 	0x0C, 0x18, 0x00, //     ##     ##
+ 	0x0C, 0x18, 0x00, //     ##     ##
+ 	0x06, 0x30, 0x00, //      ##   ##
+ 	0x06, 0x30, 0x00, //      ##   ##
+ 	0x03, 0x60, 0x00, //       ## ##
+ 	0x03, 0xE0, 0x00, //       #####
+ 	0x01, 0xC0, 0x00, //        ###
+ 	0x00, 0xC0, 0x00, //         ##
+ 	0x01, 0x80, 0x00, //        ##
+ 	0x01, 0x80, 0x00, //        ##
+ 	0x03, 0x00, 0x00, //       ##
+ 	0x3F, 0xC0, 0x00, //   ########
+ 	0x3F, 0xC0, 0x00, //   ########
+ 	0x00, 0x00, 0x00, //
+ 	0x00, 0x00, 0x00, //
+ 
+ 	// @6480 'z' (17 pixels wide)
+ 	0x00, 0x00, 0x00, //
+ 	0x00, 0x00, 0x00, //
+ 	0x00, 0x00, 0x00, //
+ 	0x00, 0x00, 0x00, //
+ 	0x00, 0x00, 0x00, //
+ 	0x00, 0x00, 0x00, //
+ 	0x1F, 0xF8, 0x00, //    ##########
+ 	0x1F, 0xF8, 0x00, //    ##########
+ 	0x18, 0x30, 0x00, //    ##     ##
+ 	0x18, 0x60, 0x00, //    ##    ##
+ 	0x00, 0xC0, 0x00, //         ##
+ 	0x01, 0x80, 0x00, //        ##
+ 	0x03, 0x00, 0x00, //       ##
+ 	0x06, 0x18, 0x00, //      ##    ##
+ 	0x0C, 0x18, 0x00, //     ##     ##
+ 	0x1F, 0xF8, 0x00, //    ##########
+ 	0x1F, 0xF8, 0x00, //    ##########
+ 	0x00, 0x00, 0x00, //
+ 	0x00, 0x00, 0x00, //
+ 	0x00, 0x00, 0x00, //
+ 	0x00, 0x00, 0x00, //
+ 	0x00, 0x00, 0x00, //
+ 	0x00, 0x00, 0x00, //
+ 	0x00, 0x00, 0x00, //
+ 
+ 	// @6552 '{' (17 pixels wide)
+ 	0x00, 0x00, 0x00, //
+ 	0x00, 0x00, 0x00, //
+ 	0x00, 0xE0, 0x00, //         ###
+ 	0x01, 0xE0, 0x00, //        ####
+ 	0x01, 0x80, 0x00, //        ##
+ 	0x01, 0x80, 0x00, //        ##
+ 	0x01, 0x80, 0x00, //        ##
+ 	0x01, 0x80, 0x00, //        ##
+ 	0x01, 0x80, 0x00, //        ##
+ 	0x01, 0x80, 0x00, //        ##
+ 	0x03, 0x80, 0x00, //       ###
+ 	0x07, 0x00, 0x00, //      ###
+ 	0x03, 0x80, 0x00, //       ###
+ 	0x01, 0x80, 0x00, //        ##
+ 	0x01, 0x80, 0x00, //        ##
+ 	0x01, 0x80, 0x00, //        ##
+ 	0x01, 0x80, 0x00, //        ##
+ 	0x01, 0x80, 0x00, //        ##
+ 	0x01, 0xE0, 0x00, //        ####
+ 	0x00, 0xE0, 0x00, //         ###
+ 	0x00, 0x00, 0x00, //
+ 	0x00, 0x00, 0x00, //
+ 	0x00, 0x00, 0x00, //
+ 	0x00, 0x00, 0x00, //
+ 
+ 	// @6624 '|' (17 pixels wide)
+ 	0x00, 0x00, 0x00, //
+ 	0x00, 0x00, 0x00, //
+ 	0x01, 0x80, 0x00, //        ##
+ 	0x01, 0x80, 0x00, //        ##
+ 	0x01, 0x80, 0x00, //        ##
+ 	0x01, 0x80, 0x00, //        ##
+ 	0x01, 0x80, 0x00, //        ##
+ 	0x01, 0x80, 0x00, //        ##
+ 	0x01, 0x80, 0x00, //        ##
+ 	0x01, 0x80, 0x00, //        ##
+ 	0x01, 0x80, 0x00, //        ##
+ 	0x01, 0x80, 0x00, //        ##
+ 	0x01, 0x80, 0x00, //        ##
+ 	0x01, 0x80, 0x00, //        ##
+ 	0x01, 0x80, 0x00, //        ##
+ 	0x01, 0x80, 0x00, //        ##
+ 	0x01, 0x80, 0x00, //        ##
+ 	0x01, 0x80, 0x00, //        ##
+ 	0x01, 0x80, 0x00, //        ##
+ 	0x01, 0x80, 0x00, //        ##
+ 	0x00, 0x00, 0x00, //
+ 	0x00, 0x00, 0x00, //
+ 	0x00, 0x00, 0x00, //
+ 	0x00, 0x00, 0x00, //
+ 
+ 	// @6696 '}' (17 pixels wide)
+ 	0x00, 0x00, 0x00, //
+ 	0x00, 0x00, 0x00, //
+ 	0x07, 0x00, 0x00, //      ###
+ 	0x07, 0x80, 0x00, //      ####
+ 	0x01, 0x80, 0x00, //        ##
+ 	0x01, 0x80, 0x00, //        ##
+ 	0x01, 0x80, 0x00, //        ##
+ 	0x01, 0x80, 0x00, //        ##
+ 	0x01, 0x80, 0x00, //        ##
+ 	0x01, 0x80, 0x00, //        ##
+ 	0x01, 0xC0, 0x00, //        ###
+ 	0x00, 0xE0, 0x00, //         ###
+ 	0x01, 0xC0, 0x00, //        ###
+ 	0x01, 0x80, 0x00, //        ##
+ 	0x01, 0x80, 0x00, //        ##
+ 	0x01, 0x80, 0x00, //        ##
+ 	0x01, 0x80, 0x00, //        ##
+ 	0x01, 0x80, 0x00, //        ##
+ 	0x07, 0x80, 0x00, //      ####
+ 	0x07, 0x00, 0x00, //      ###
+ 	0x00, 0x00, 0x00, //
+ 	0x00, 0x00, 0x00, //
+ 	0x00, 0x00, 0x00, //
+ 	0x00, 0x00, 0x00, //
+ 
+ 	// @6768 '~' (17 pixels wide)
+ 	0x00, 0x00, 0x00, //
+ 	0x00, 0x00, 0x00, //
+ 	0x00, 0x00, 0x00, //
+ 	0x00, 0x00, 0x00, //
+ 	0x00, 0x00, 0x00, //
+ 	0x00, 0x00, 0x00, //
+ 	0x00, 0x00, 0x00, //
+ 	0x00, 0x00, 0x00, //
+ 	0x0E, 0x00, 0x00, //     ###
+ 	0x1F, 0x18, 0x00, //    #####   ##
+ 	0x3B, 0xB8, 0x00, //   ### ### ###
+ 	0x31, 0xF0, 0x00, //   ##   #####
+ 	0x00, 0xE0, 0x00, //         ###
+ 	0x00, 0x00, 0x00, //
+ 	0x00, 0x00, 0x00, //
+ 	0x00, 0x00, 0x00, //
+ 	0x00, 0x00, 0x00, //
+ 	0x00, 0x00, 0x00, //
+ 	0x00, 0x00, 0x00, //
+ 	0x00, 0x00, 0x00, //
+ 	0x00, 0x00, 0x00, //
+ 	0x00, 0x00, 0x00, //
+ 	0x00, 0x00, 0x00, //
+ 	0x00, 0x00, 0x00, //
+ };
+ 
+ sFONT Font24 = {
+   Font24_Table,
+   17, /* Width */
+   24, /* Height */
+ };
+ 
+ /**
+   * @}
+   */
+ 
+ 
+ /** @defgroup FONTS_Private_Function_Prototypes
+   * @{
+   */
+ /**
+   * @}
+   */
+ 
+ 
+ /** @defgroup FONTS_Private_Functions
+   * @{
+   */
+ 
+ /**
+   * @}
+   */
+ 
+ /**
+   * @}
+   */
+ 
+ /**
+   * @}
+   */
+ 
+ /**
+   * @}
+   */
+ 
+ /**
+   * @}
+   */
+ /************************ (C) COPYRIGHT STMicroelectronics *****END OF FILE****/
+ 
+ 
diff -crNb MicorpythonOriginal1.12/micropython/ports/stm32/font24.h micropython1.12_withUlab/micropython/ports/stm32/font24.h
*** MicorpythonOriginal1.12/micropython/ports/stm32/font24.h	1970-01-01 02:00:00.000000000 +0200
--- micropython1.12_withUlab/micropython/ports/stm32/font24.h	2020-06-13 11:45:57.000000000 +0200
***************
*** 0 ****
--- 1,25 ----
+ /*
+  * font24.h
+  *
+  *  Created on: 21 Jul 2017
+  *      Author: graeme
+  */
+ 
+ #ifndef FONT24_H_
+ #define FONT24_H_
+ 
+ /** @defgroup FONTS_Exported_Types
+   * @{
+   */
+ typedef struct _tFont
+ {
+   const uint8_t *table;
+   uint16_t Width;
+   uint16_t Height;
+ 
+ } sFONT;
+ 
+ extern sFONT Font24;
+ 
+ 
+ #endif /* FONT24_H_ */
diff -crNb MicorpythonOriginal1.12/micropython/ports/stm32/ft5336.c micropython1.12_withUlab/micropython/ports/stm32/ft5336.c
*** MicorpythonOriginal1.12/micropython/ports/stm32/ft5336.c	1970-01-01 02:00:00.000000000 +0200
--- micropython1.12_withUlab/micropython/ports/stm32/ft5336.c	2020-06-13 11:45:57.000000000 +0200
***************
*** 0 ****
--- 1,454 ----
+ /*
+  * ft5336.c
+  *
+  *  Created on: 22 Jul 2017
+  *      Author: graeme
+  */
+ 
+ 
+ #include <stdio.h>
+ #include <string.h>
+ 
+ #include "py/mphal.h"
+ #include "py/nlr.h"
+ #include "py/runtime.h"
+ 
+ #include "pin.h"
+ #include "genhdr/pins.h"
+ #include "bufhelper.h"
+ #include "spi.h"
+ #include "lcd.h"
+ #include "lcd_init.h"
+ #include "ts_init.h"
+ 
+ #include "ft5336.h"
+ 
+ /** @addtogroup BSP
+   * @{
+   */
+ 
+ /** @addtogroup Component
+   * @{
+   */
+ 
+ /** @defgroup FT5336
+   * @{
+   */
+ 
+ /* Private typedef -----------------------------------------------------------*/
+ 
+ /** @defgroup FT5336_Private_Types_Definitions
+   * @{
+   */
+ 
+ /* Private define ------------------------------------------------------------*/
+ 
+ /** @defgroup FT5336_Private_Defines
+   * @{
+   */
+ 
+ /* Private macro -------------------------------------------------------------*/
+ 
+ /** @defgroup FT5336_Private_Macros
+   * @{
+   */
+ 
+ /* Private variables ---------------------------------------------------------*/
+ 
+ /** @defgroup FT5336_Private_Variables
+   * @{
+   */
+ 
+ /* Touch screen driver structure initialization */
+ TS_DrvTypeDef ft5336_ts_drv =
+ {
+   ft5336_Init,
+   ft5336_ReadID,
+   ft5336_Reset,
+ 
+   ft5336_TS_Start,
+   ft5336_TS_DetectTouch,
+   ft5336_TS_GetXY,
+ 
+   ft5336_TS_EnableIT,
+   ft5336_TS_ClearIT,
+   ft5336_TS_ITStatus,
+   ft5336_TS_DisableIT
+ 
+ };
+ 
+ /* Global ft5336 handle */
+ static ft5336_handle_TypeDef ft5336_handle = { FT5336_I2C_NOT_INITIALIZED, 0, 0};
+ 
+ /**
+   * @}
+   */
+ 
+ /** @defgroup ft5336_Private_Function_Prototypes
+   * @{
+   */
+ 
+ /* Private functions prototypes-----------------------------------------------*/
+ 
+ /**
+   * @brief  Return the status of I2C was initialized or not.
+   * @param  None.
+   * @retval : I2C initialization status.
+   */
+ static uint8_t ft5336_Get_I2C_InitializedStatus(void);
+ 
+ /**
+   * @brief  I2C initialize if needed.
+   * @param  None.
+   * @retval : None.
+   */
+ static void ft5336_I2C_InitializeIfRequired(void);
+ 
+ /**
+   * @brief  Basic static configuration of TouchScreen
+   * @param  DeviceAddr: FT5336 Device address for communication on I2C Bus.
+   * @retval Status FT5336_STATUS_OK or FT5336_STATUS_NOT_OK.
+   */
+ static uint32_t ft5336_TS_Configure(uint16_t DeviceAddr);
+ 
+ /** @defgroup ft5336_Private_Functions
+   * @{
+   */
+ 
+ /** @defgroup ft5336_Public_Function_Body
+   * @{
+   */
+ 
+ /* Public functions bodies-----------------------------------------------*/
+ 
+ 
+ 
+ 
+ /**
+   * @brief  Initialize the ft5336 communication bus
+   *         from MCU to FT5336 : ie I2C channel initialization (if required).
+   * @param  DeviceAddr: Device address on communication Bus (I2C slave address of FT5336).
+   * @retval None
+   */
+ void ft5336_Init(uint16_t DeviceAddr)
+ {
+   /* Wait at least 200ms after power up before accessing registers
+    * Trsi timing (Time of starting to report point after resetting) from FT5336GQQ datasheet */
+   TS_IO_Delay(200);
+ 
+   /* Initialize I2C link if needed */
+   ft5336_I2C_InitializeIfRequired();
+ }
+ 
+ /**
+   * @brief  Software Reset the ft5336.
+   *         @note : Not applicable to FT5336.
+   * @param  DeviceAddr: Device address on communication Bus (I2C slave address of FT5336).
+   * @retval None
+   */
+ void ft5336_Reset(uint16_t DeviceAddr)
+ {
+   /* Do nothing */
+   /* No software reset sequence available in FT5336 IC */
+ }
+ 
+ /**
+   * @brief  Read the ft5336 device ID, pre initialize I2C in case of need to be
+   *         able to read the FT5336 device ID, and verify this is a FT5336.
+   * @param  DeviceAddr: I2C FT5336 Slave address.
+   * @retval The Device ID (two bytes).
+   */
+ uint16_t ft5336_ReadID(uint16_t DeviceAddr)
+ {
+   volatile uint8_t ucReadId = 0;
+   uint8_t nbReadAttempts = 0;
+   uint8_t bFoundDevice = 0; /* Device not found by default */
+ 
+   /* Initialize I2C link if needed */
+   ft5336_I2C_InitializeIfRequired();
+ 
+   /* At maximum 4 attempts to read ID : exit at first finding of the searched device ID */
+   for(nbReadAttempts = 0; ((nbReadAttempts < 3) && !(bFoundDevice)); nbReadAttempts++)
+   {
+     /* Read register FT5336_CHIP_ID_REG as DeviceID detection */
+     ucReadId = TS_IO_Read(DeviceAddr, FT5336_CHIP_ID_REG);
+ 
+     /* Found the searched device ID ? */
+     if(ucReadId == FT5336_ID_VALUE)
+     {
+       /* Set device as found */
+       bFoundDevice = 1;
+     }
+   }
+ 
+   /* Return the device ID value */
+   return (ucReadId);
+ }
+ 
+ /**
+   * @brief  Configures the touch Screen IC device to start detecting touches
+   * @param  DeviceAddr: Device address on communication Bus (I2C slave address).
+   * @retval None.
+   */
+ void ft5336_TS_Start(uint16_t DeviceAddr)
+ {
+   /* Minimum static configuration of FT5336 */
+   FT5336_ASSERT(ft5336_TS_Configure(DeviceAddr));
+ 
+   /* By default set FT5336 IC in Polling mode : no INT generation on FT5336 for new touch available */
+   /* Note TS_INT is active low                                                                      */
+   ft5336_TS_DisableIT(DeviceAddr);
+ }
+ 
+ /**
+   * @brief  Return if there is touches detected or not.
+   *         Try to detect new touches and forget the old ones (reset internal global
+   *         variables).
+   * @param  DeviceAddr: Device address on communication Bus.
+   * @retval : Number of active touches detected (can be 0, 1 or 2).
+   */
+ uint8_t ft5336_TS_DetectTouch(uint16_t DeviceAddr)
+ {
+   volatile uint8_t nbTouch = 0;
+ 
+   /* Read register FT5336_TD_STAT_REG to check number of touches detection */
+   nbTouch = TS_IO_Read(DeviceAddr, FT5336_TD_STAT_REG);
+   nbTouch &= FT5336_TD_STAT_MASK;
+ 
+   if(nbTouch > FT5336_MAX_DETECTABLE_TOUCH)
+   {
+     /* If invalid number of touch detected, set it to zero */
+     nbTouch = 0;
+   }
+ 
+   /* Update ft5336 driver internal global : current number of active touches */
+   ft5336_handle.currActiveTouchNb = nbTouch;
+ 
+   /* Reset current active touch index on which to work on */
+   ft5336_handle.currActiveTouchIdx = 0;
+ 
+   return(nbTouch);
+ }
+ 
+ 
+ /**
+   * @brief  Return the status of I2C was initialized or not.
+   * @param  None.
+   * @retval : I2C initialization status.
+   */
+ static uint8_t ft5336_Get_I2C_InitializedStatus(void)
+ {
+   return(ft5336_handle.i2cInitialized);
+ }
+ 
+ /**
+   * @brief  I2C initialize if needed.
+   * @param  None.
+   * @retval : None.
+   */
+ static void ft5336_I2C_InitializeIfRequired(void)
+ {
+   if(ft5336_Get_I2C_InitializedStatus() == FT5336_I2C_NOT_INITIALIZED)
+   {
+     /* Initialize TS IO BUS layer (I2C) */
+     TS_IO_Init();
+ 
+     /* Set state to initialized */
+     ft5336_handle.i2cInitialized = FT5336_I2C_INITIALIZED;
+   }
+ }
+ 
+ /**
+   * @brief  Basic static configuration of TouchScreen
+   * @param  DeviceAddr: FT5336 Device address for communication on I2C Bus.
+   * @retval Status FT5336_STATUS_OK or FT5336_STATUS_NOT_OK.
+   */
+ static uint32_t ft5336_TS_Configure(uint16_t DeviceAddr)
+ {
+   uint32_t status = FT5336_STATUS_OK;
+ 
+   /* Nothing special to be done for FT5336 */
+ 
+   return(status);
+ }
+ 
+ /**
+   * @brief  Get the touch screen X and Y positions values
+   *         Manage multi touch thanks to touch Index global
+   *         variable 'ft5336_handle.currActiveTouchIdx'.
+   * @param  DeviceAddr: Device address on communication Bus.
+   * @param  X: Pointer to X position value
+   * @param  Y: Pointer to Y position value
+   * @retval None.
+   */
+ void ft5336_TS_GetXY(uint16_t DeviceAddr, uint16_t *X, uint16_t *Y)
+ {
+   volatile uint8_t ucReadData = 0;
+   static uint16_t coord;
+   uint8_t regAddressXLow = 0;
+   uint8_t regAddressXHigh = 0;
+   uint8_t regAddressYLow = 0;
+   uint8_t regAddressYHigh = 0;
+ 
+   if(ft5336_handle.currActiveTouchIdx < ft5336_handle.currActiveTouchNb)
+   {
+     switch(ft5336_handle.currActiveTouchIdx)
+     {
+     case 0 :
+       regAddressXLow  = FT5336_P1_XL_REG;
+       regAddressXHigh = FT5336_P1_XH_REG;
+       regAddressYLow  = FT5336_P1_YL_REG;
+       regAddressYHigh = FT5336_P1_YH_REG;
+       break;
+ 
+     case 1 :
+       regAddressXLow  = FT5336_P2_XL_REG;
+       regAddressXHigh = FT5336_P2_XH_REG;
+       regAddressYLow  = FT5336_P2_YL_REG;
+       regAddressYHigh = FT5336_P2_YH_REG;
+       break;
+ 
+     case 2 :
+       regAddressXLow  = FT5336_P3_XL_REG;
+       regAddressXHigh = FT5336_P3_XH_REG;
+       regAddressYLow  = FT5336_P3_YL_REG;
+       regAddressYHigh = FT5336_P3_YH_REG;
+       break;
+ 
+     case 3 :
+       regAddressXLow  = FT5336_P4_XL_REG;
+       regAddressXHigh = FT5336_P4_XH_REG;
+       regAddressYLow  = FT5336_P4_YL_REG;
+       regAddressYHigh = FT5336_P4_YH_REG;
+       break;
+ 
+     case 4 :
+       regAddressXLow  = FT5336_P5_XL_REG;
+       regAddressXHigh = FT5336_P5_XH_REG;
+       regAddressYLow  = FT5336_P5_YL_REG;
+       regAddressYHigh = FT5336_P5_YH_REG;
+       break;
+ 
+     case 5 :
+       regAddressXLow  = FT5336_P6_XL_REG;
+       regAddressXHigh = FT5336_P6_XH_REG;
+       regAddressYLow  = FT5336_P6_YL_REG;
+       regAddressYHigh = FT5336_P6_YH_REG;
+       break;
+ 
+     case 6 :
+       regAddressXLow  = FT5336_P7_XL_REG;
+       regAddressXHigh = FT5336_P7_XH_REG;
+       regAddressYLow  = FT5336_P7_YL_REG;
+       regAddressYHigh = FT5336_P7_YH_REG;
+       break;
+ 
+     case 7 :
+       regAddressXLow  = FT5336_P8_XL_REG;
+       regAddressXHigh = FT5336_P8_XH_REG;
+       regAddressYLow  = FT5336_P8_YL_REG;
+       regAddressYHigh = FT5336_P8_YH_REG;
+       break;
+ 
+     case 8 :
+       regAddressXLow  = FT5336_P9_XL_REG;
+       regAddressXHigh = FT5336_P9_XH_REG;
+       regAddressYLow  = FT5336_P9_YL_REG;
+       regAddressYHigh = FT5336_P9_YH_REG;
+       break;
+ 
+     case 9 :
+       regAddressXLow  = FT5336_P10_XL_REG;
+       regAddressXHigh = FT5336_P10_XH_REG;
+       regAddressYLow  = FT5336_P10_YL_REG;
+       regAddressYHigh = FT5336_P10_YH_REG;
+       break;
+ 
+     default :
+       break;
+ 
+     } /* end switch(ft5336_handle.currActiveTouchIdx) */
+ 
+     /* Read low part of X position */
+     ucReadData = TS_IO_Read(DeviceAddr, regAddressXLow);
+     coord = (ucReadData & FT5336_TOUCH_POS_LSB_MASK) >> FT5336_TOUCH_POS_LSB_SHIFT;
+ 
+     /* Read high part of X position */
+     ucReadData = TS_IO_Read(DeviceAddr, regAddressXHigh);
+     coord |= ((ucReadData & FT5336_TOUCH_POS_MSB_MASK) >> FT5336_TOUCH_POS_MSB_SHIFT) << 8;
+ 
+     /* Send back ready X position to caller */
+     *X = coord;
+ 
+     /* Read low part of Y position */
+     ucReadData = TS_IO_Read(DeviceAddr, regAddressYLow);
+     coord = (ucReadData & FT5336_TOUCH_POS_LSB_MASK) >> FT5336_TOUCH_POS_LSB_SHIFT;
+ 
+     /* Read high part of Y position */
+     ucReadData = TS_IO_Read(DeviceAddr, regAddressYHigh);
+     coord |= ((ucReadData & FT5336_TOUCH_POS_MSB_MASK) >> FT5336_TOUCH_POS_MSB_SHIFT) << 8;
+ 
+     /* Send back ready Y position to caller */
+     *Y = coord;
+ 
+     ft5336_handle.currActiveTouchIdx++; /* next call will work on next touch */
+ 
+   } /* of if(ft5336_handle.currActiveTouchIdx < ft5336_handle.currActiveTouchNb) */
+ }
+ 
+ /**
+   * @brief  Configure the FT5336 device to generate IT on given INT pin
+   *         connected to MCU as EXTI.
+   * @param  DeviceAddr: Device address on communication Bus (Slave I2C address of FT5336).
+   * @retval None
+   */
+ void ft5336_TS_EnableIT(uint16_t DeviceAddr)
+ {
+    uint8_t regValue = 0;
+    regValue = (FT5336_G_MODE_INTERRUPT_TRIGGER & (FT5336_G_MODE_INTERRUPT_MASK >> FT5336_G_MODE_INTERRUPT_SHIFT)) << FT5336_G_MODE_INTERRUPT_SHIFT;
+ 
+    /* Set interrupt trigger mode in FT5336_GMODE_REG */
+    TS_IO_Write(DeviceAddr, FT5336_GMODE_REG, regValue);
+ }
+ /**
+   * @brief  Clear IT status in FT5336 interrupt status clear registers
+   *         Should be called Following an EXTI coming to the MCU.
+   *         @note : This feature is not applicable to FT5336.
+   * @param  DeviceAddr: Device address on communication Bus (I2C slave address of FT5336).
+   * @retval None
+   */
+ void ft5336_TS_ClearIT(uint16_t DeviceAddr)
+ {
+   /* Nothing to be done here for FT5336 */
+ }
+ 
+ /**
+   * @brief  Configure the FT5336 device to stop generating IT on the given INT pin
+   *         connected to MCU as EXTI.
+   * @param  DeviceAddr: Device address on communication Bus (Slave I2C address of FT5336).
+   * @retval None
+   */
+ void ft5336_TS_DisableIT(uint16_t DeviceAddr)
+ {
+   uint8_t regValue = 0;
+   regValue = (FT5336_G_MODE_INTERRUPT_POLLING & (FT5336_G_MODE_INTERRUPT_MASK >> FT5336_G_MODE_INTERRUPT_SHIFT)) << FT5336_G_MODE_INTERRUPT_SHIFT;
+ 
+   /* Set interrupt polling mode in FT5336_GMODE_REG */
+   TS_IO_Write(DeviceAddr, FT5336_GMODE_REG, regValue);
+ }
+ 
+ /**
+   * @brief  Get IT status from FT5336 interrupt status registers
+   *         Should be called Following an EXTI coming to the MCU to know the detailed
+   *         reason of the interrupt.
+   *         @note : This feature is not applicable to FT5336.
+   * @param  DeviceAddr: Device address on communication Bus (I2C slave address of FT5336).
+   * @retval TS interrupts status : always return 0 here
+   */
+ uint8_t ft5336_TS_ITStatus(uint16_t DeviceAddr)
+ {
+   /* Always return 0 as feature not applicable to FT5336 */
+   return 0;
+ }
+ 
+ 
diff -crNb MicorpythonOriginal1.12/micropython/ports/stm32/ft5336.h micropython1.12_withUlab/micropython/ports/stm32/ft5336.h
*** MicorpythonOriginal1.12/micropython/ports/stm32/ft5336.h	1970-01-01 02:00:00.000000000 +0200
--- micropython1.12_withUlab/micropython/ports/stm32/ft5336.h	2020-06-13 11:45:57.000000000 +0200
***************
*** 0 ****
--- 1,472 ----
+ /*
+  * ft5336.h
+  *
+  *  Created on: 22 Jul 2017
+  *      Author: graeme
+  */
+ 
+ #ifndef FT5336_H_
+ #define FT5336_H_
+ 
+ 
+ 
+ #if defined(FT5336_ENABLE_ASSERT)
+ /* Assert activated */
+ #define FT5336_ASSERT(__condition__)      do { if(__condition__) \
+                                                {  \
+                                                  while(1);  \
+                                                } \
+                                           }while(0)
+ #else
+ /* Assert not activated : macro has no effect */
+ #define FT5336_ASSERT(__condition__)    do { if(__condition__) \
+                                              {  \
+                                                 ;  \
+                                              } \
+                                             }while(0)
+ #endif /* FT5336_ENABLE_ASSERT == 1 */
+ 
+ /** @typedef ft5336_handle_TypeDef
+  *  ft5336 Handle definition.
+  */
+ typedef struct
+ {
+   uint8_t i2cInitialized;
+ 
+   /* field holding the current number of simultaneous active touches */
+   uint8_t currActiveTouchNb;
+ 
+   /* field holding the touch index currently managed */
+   uint8_t currActiveTouchIdx;
+ 
+ } ft5336_handle_TypeDef;
+ 
+   /** @addtogroup BSP
+    * @{
+    */
+ 
+   /** @addtogroup Component
+    * @{
+    */
+ 
+   /** @defgroup FT5336
+    * @{
+    */
+ 
+   /* Exported types ------------------------------------------------------------*/
+ 
+   /** @defgroup FT5336_Exported_Types
+    * @{
+    */
+ 
+   /* Exported constants --------------------------------------------------------*/
+ 
+   /** @defgroup FT5336_Exported_Constants
+    * @{
+    */
+ 
+   /* I2C Slave address of touchscreen FocalTech FT5336 */
+ #define FT5336_I2C_SLAVE_ADDRESS            ((uint8_t)0x70)
+ 
+   /* Maximum border values of the touchscreen pad */
+ #define FT5336_MAX_WIDTH                    ((uint16_t)480)     /* Touchscreen pad max width   */
+ #define FT5336_MAX_HEIGHT                   ((uint16_t)272)     /* Touchscreen pad max height  */
+ 
+   /* Possible values of driver functions return status */
+ #define FT5336_STATUS_OK                    ((uint8_t)0x00)
+ #define FT5336_STATUS_NOT_OK                ((uint8_t)0x01)
+ 
+   /* Possible values of global variable 'TS_I2C_Initialized' */
+ #define FT5336_I2C_NOT_INITIALIZED          ((uint8_t)0x00)
+ #define FT5336_I2C_INITIALIZED              ((uint8_t)0x01)
+ 
+   /* Max detectable simultaneous touches */
+ #define FT5336_MAX_DETECTABLE_TOUCH         ((uint8_t)0x05)
+ 
+   /**
+    * @brief : Definitions for FT5336 I2C register addresses on 8 bit
+    **/
+ 
+   /* Current mode register of the FT5336 (R/W) */
+ #define FT5336_DEV_MODE_REG                 ((uint8_t)0x00)
+ 
+   /* Possible values of FT5336_DEV_MODE_REG */
+ #define FT5336_DEV_MODE_WORKING             ((uint8_t)0x00)
+ #define FT5336_DEV_MODE_FACTORY             ((uint8_t)0x04)
+ 
+ #define FT5336_DEV_MODE_MASK                ((uint8_t)0x07)
+ #define FT5336_DEV_MODE_SHIFT               ((uint8_t)0x04)
+ 
+   /* Gesture ID register */
+ #define FT5336_GEST_ID_REG                  ((uint8_t)0x01)
+ 
+   /* Possible values of FT5336_GEST_ID_REG */
+ #define FT5336_GEST_ID_NO_GESTURE           ((uint8_t)0x00)
+ #define FT5336_GEST_ID_MOVE_UP              ((uint8_t)0x10)
+ #define FT5336_GEST_ID_MOVE_RIGHT           ((uint8_t)0x14)
+ #define FT5336_GEST_ID_MOVE_DOWN            ((uint8_t)0x18)
+ #define FT5336_GEST_ID_MOVE_LEFT            ((uint8_t)0x1C)
+ #define FT5336_GEST_ID_SINGLE_CLICK         ((uint8_t)0x20)
+ #define FT5336_GEST_ID_DOUBLE_CLICK         ((uint8_t)0x22)
+ #define FT5336_GEST_ID_ROTATE_CLOCKWISE     ((uint8_t)0x28)
+ #define FT5336_GEST_ID_ROTATE_C_CLOCKWISE   ((uint8_t)0x29)
+ #define FT5336_GEST_ID_ZOOM_IN              ((uint8_t)0x40)
+ #define FT5336_GEST_ID_ZOOM_OUT             ((uint8_t)0x49)
+ 
+   /* Touch Data Status register : gives number of active touch points (0..5) */
+ #define FT5336_TD_STAT_REG                  ((uint8_t)0x02)
+ 
+   /* Values related to FT5336_TD_STAT_REG */
+ #define FT5336_TD_STAT_MASK                 ((uint8_t)0x0F)
+ #define FT5336_TD_STAT_SHIFT                ((uint8_t)0x00)
+ 
+   /* Values Pn_XH and Pn_YH related */
+ #define FT5336_TOUCH_EVT_FLAG_PRESS_DOWN    ((uint8_t)0x00)
+ #define FT5336_TOUCH_EVT_FLAG_LIFT_UP       ((uint8_t)0x01)
+ #define FT5336_TOUCH_EVT_FLAG_CONTACT       ((uint8_t)0x02)
+ #define FT5336_TOUCH_EVT_FLAG_NO_EVENT      ((uint8_t)0x03)
+ 
+ #define FT5336_TOUCH_EVT_FLAG_SHIFT         ((uint8_t)0x06)
+ #define FT5336_TOUCH_EVT_FLAG_MASK          ((uint8_t)(3 << FT5336_TOUCH_EVT_FLAG_SHIFT))
+ 
+ #define FT5336_TOUCH_POS_MSB_MASK           ((uint8_t)0x0F)
+ #define FT5336_TOUCH_POS_MSB_SHIFT          ((uint8_t)0x00)
+ 
+   /* Values Pn_XL and Pn_YL related */
+ #define FT5336_TOUCH_POS_LSB_MASK           ((uint8_t)0xFF)
+ #define FT5336_TOUCH_POS_LSB_SHIFT          ((uint8_t)0x00)
+ 
+ #define FT5336_P1_XH_REG                    ((uint8_t)0x03)
+ #define FT5336_P1_XL_REG                    ((uint8_t)0x04)
+ #define FT5336_P1_YH_REG                    ((uint8_t)0x05)
+ #define FT5336_P1_YL_REG                    ((uint8_t)0x06)
+ 
+ /* Touch Pressure register value (R) */
+ #define FT5336_P1_WEIGHT_REG                ((uint8_t)0x07)
+ 
+ /* Values Pn_WEIGHT related  */
+ #define FT5336_TOUCH_WEIGHT_MASK            ((uint8_t)0xFF)
+ #define FT5336_TOUCH_WEIGHT_SHIFT           ((uint8_t)0x00)
+ 
+ /* Touch area register */
+ #define FT5336_P1_MISC_REG                  ((uint8_t)0x08)
+ 
+ /* Values related to FT5336_Pn_MISC_REG */
+ #define FT5336_TOUCH_AREA_MASK              ((uint8_t)(0x04 << 4))
+ #define FT5336_TOUCH_AREA_SHIFT             ((uint8_t)0x04)
+ 
+ #define FT5336_P2_XH_REG                    ((uint8_t)0x09)
+ #define FT5336_P2_XL_REG                    ((uint8_t)0x0A)
+ #define FT5336_P2_YH_REG                    ((uint8_t)0x0B)
+ #define FT5336_P2_YL_REG                    ((uint8_t)0x0C)
+ #define FT5336_P2_WEIGHT_REG                ((uint8_t)0x0D)
+ #define FT5336_P2_MISC_REG                  ((uint8_t)0x0E)
+ 
+ #define FT5336_P3_XH_REG                    ((uint8_t)0x0F)
+ #define FT5336_P3_XL_REG                    ((uint8_t)0x10)
+ #define FT5336_P3_YH_REG                    ((uint8_t)0x11)
+ #define FT5336_P3_YL_REG                    ((uint8_t)0x12)
+ #define FT5336_P3_WEIGHT_REG                ((uint8_t)0x13)
+ #define FT5336_P3_MISC_REG                  ((uint8_t)0x14)
+ 
+ #define FT5336_P4_XH_REG                    ((uint8_t)0x15)
+ #define FT5336_P4_XL_REG                    ((uint8_t)0x16)
+ #define FT5336_P4_YH_REG                    ((uint8_t)0x17)
+ #define FT5336_P4_YL_REG                    ((uint8_t)0x18)
+ #define FT5336_P4_WEIGHT_REG                ((uint8_t)0x19)
+ #define FT5336_P4_MISC_REG                  ((uint8_t)0x1A)
+ 
+ #define FT5336_P5_XH_REG                    ((uint8_t)0x1B)
+ #define FT5336_P5_XL_REG                    ((uint8_t)0x1C)
+ #define FT5336_P5_YH_REG                    ((uint8_t)0x1D)
+ #define FT5336_P5_YL_REG                    ((uint8_t)0x1E)
+ #define FT5336_P5_WEIGHT_REG                ((uint8_t)0x1F)
+ #define FT5336_P5_MISC_REG                  ((uint8_t)0x20)
+ 
+ #define FT5336_P6_XH_REG                    ((uint8_t)0x21)
+ #define FT5336_P6_XL_REG                    ((uint8_t)0x22)
+ #define FT5336_P6_YH_REG                    ((uint8_t)0x23)
+ #define FT5336_P6_YL_REG                    ((uint8_t)0x24)
+ #define FT5336_P6_WEIGHT_REG                ((uint8_t)0x25)
+ #define FT5336_P6_MISC_REG                  ((uint8_t)0x26)
+ 
+ #define FT5336_P7_XH_REG                    ((uint8_t)0x27)
+ #define FT5336_P7_XL_REG                    ((uint8_t)0x28)
+ #define FT5336_P7_YH_REG                    ((uint8_t)0x29)
+ #define FT5336_P7_YL_REG                    ((uint8_t)0x2A)
+ #define FT5336_P7_WEIGHT_REG                ((uint8_t)0x2B)
+ #define FT5336_P7_MISC_REG                  ((uint8_t)0x2C)
+ 
+ #define FT5336_P8_XH_REG                    ((uint8_t)0x2D)
+ #define FT5336_P8_XL_REG                    ((uint8_t)0x2E)
+ #define FT5336_P8_YH_REG                    ((uint8_t)0x2F)
+ #define FT5336_P8_YL_REG                    ((uint8_t)0x30)
+ #define FT5336_P8_WEIGHT_REG                ((uint8_t)0x31)
+ #define FT5336_P8_MISC_REG                  ((uint8_t)0x32)
+ 
+ #define FT5336_P9_XH_REG                    ((uint8_t)0x33)
+ #define FT5336_P9_XL_REG                    ((uint8_t)0x34)
+ #define FT5336_P9_YH_REG                    ((uint8_t)0x35)
+ #define FT5336_P9_YL_REG                    ((uint8_t)0x36)
+ #define FT5336_P9_WEIGHT_REG                ((uint8_t)0x37)
+ #define FT5336_P9_MISC_REG                  ((uint8_t)0x38)
+ 
+ #define FT5336_P10_XH_REG                   ((uint8_t)0x39)
+ #define FT5336_P10_XL_REG                   ((uint8_t)0x3A)
+ #define FT5336_P10_YH_REG                   ((uint8_t)0x3B)
+ #define FT5336_P10_YL_REG                   ((uint8_t)0x3C)
+ #define FT5336_P10_WEIGHT_REG               ((uint8_t)0x3D)
+ #define FT5336_P10_MISC_REG                 ((uint8_t)0x3E)
+ 
+   /* Threshold for touch detection */
+ #define FT5336_TH_GROUP_REG                 ((uint8_t)0x80)
+ 
+   /* Values FT5336_TH_GROUP_REG : threshold related  */
+ #define FT5336_THRESHOLD_MASK               ((uint8_t)0xFF)
+ #define FT5336_THRESHOLD_SHIFT              ((uint8_t)0x00)
+ 
+   /* Filter function coefficients */
+ #define FT5336_TH_DIFF_REG                  ((uint8_t)0x85)
+ 
+   /* Control register */
+ #define FT5336_CTRL_REG                     ((uint8_t)0x86)
+ 
+   /* Values related to FT5336_CTRL_REG */
+ 
+   /* Will keep the Active mode when there is no touching */
+ #define FT5336_CTRL_KEEP_ACTIVE_MODE        ((uint8_t)0x00)
+ 
+   /* Switching from Active mode to Monitor mode automatically when there is no touching */
+ #define FT5336_CTRL_KEEP_AUTO_SWITCH_MONITOR_MODE  ((uint8_t)0x01
+ 
+   /* The time period of switching from Active mode to Monitor mode when there is no touching */
+ #define FT5336_TIMEENTERMONITOR_REG         ((uint8_t)0x87)
+ 
+   /* Report rate in Active mode */
+ #define FT5336_PERIODACTIVE_REG             ((uint8_t)0x88)
+ 
+   /* Report rate in Monitor mode */
+ #define FT5336_PERIODMONITOR_REG            ((uint8_t)0x89)
+ 
+   /* The value of the minimum allowed angle while Rotating gesture mode */
+ #define FT5336_RADIAN_VALUE_REG             ((uint8_t)0x91)
+ 
+   /* Maximum offset while Moving Left and Moving Right gesture */
+ #define FT5336_OFFSET_LEFT_RIGHT_REG        ((uint8_t)0x92)
+ 
+   /* Maximum offset while Moving Up and Moving Down gesture */
+ #define FT5336_OFFSET_UP_DOWN_REG           ((uint8_t)0x93)
+ 
+   /* Minimum distance while Moving Left and Moving Right gesture */
+ #define FT5336_DISTANCE_LEFT_RIGHT_REG      ((uint8_t)0x94)
+ 
+   /* Minimum distance while Moving Up and Moving Down gesture */
+ #define FT5336_DISTANCE_UP_DOWN_REG         ((uint8_t)0x95)
+ 
+   /* Maximum distance while Zoom In and Zoom Out gesture */
+ #define FT5336_DISTANCE_ZOOM_REG            ((uint8_t)0x96)
+ 
+   /* High 8-bit of LIB Version info */
+ #define FT5336_LIB_VER_H_REG                ((uint8_t)0xA1)
+ 
+   /* Low 8-bit of LIB Version info */
+ #define FT5336_LIB_VER_L_REG                ((uint8_t)0xA2)
+ 
+   /* Chip Selecting */
+ #define FT5336_CIPHER_REG                   ((uint8_t)0xA3)
+ 
+   /* Interrupt mode register (used when in interrupt mode) */
+ #define FT5336_GMODE_REG                    ((uint8_t)0xA4)
+ 
+ #define FT5336_G_MODE_INTERRUPT_MASK        ((uint8_t)0x03)
+ #define FT5336_G_MODE_INTERRUPT_SHIFT       ((uint8_t)0x00)
+ 
+   /* Possible values of FT5336_GMODE_REG */
+ #define FT5336_G_MODE_INTERRUPT_POLLING     ((uint8_t)0x00)
+ #define FT5336_G_MODE_INTERRUPT_TRIGGER     ((uint8_t)0x01)
+ 
+   /* Current power mode the FT5336 system is in (R) */
+ #define FT5336_PWR_MODE_REG                 ((uint8_t)0xA5)
+ 
+   /* FT5336 firmware version */
+ #define FT5336_FIRMID_REG                   ((uint8_t)0xA6)
+ 
+   /* FT5336 Chip identification register */
+ #define FT5336_CHIP_ID_REG                  ((uint8_t)0xA8)
+ 
+   /*  Possible values of FT5336_CHIP_ID_REG */
+ #define FT5336_ID_VALUE                     ((uint8_t)0x51)
+ 
+   /* Release code version */
+ #define FT5336_RELEASE_CODE_ID_REG          ((uint8_t)0xAF)
+ 
+   /* Current operating mode the FT5336 system is in (R) */
+ #define FT5336_STATE_REG                    ((uint8_t)0xBC)
+ 
+   /**
+    * @}
+    */
+ 
+   /* Exported macro ------------------------------------------------------------*/
+ 
+   /** @defgroup ft5336_Exported_Macros
+    * @{
+    */
+ 
+   /* Exported functions --------------------------------------------------------*/
+ 
+   /** @defgroup ft5336_Exported_Functions
+    * @{
+    */
+ 
+   /**
+    * @brief ft5336 Control functions
+    */
+ 
+ 
+ /**
+  * @brief  Initialize the ft5336 communication bus
+  *         from MCU to FT5336 : ie I2C channel initialization (if required).
+  * @param  DeviceAddr: Device address on communication Bus (I2C slave address of FT5336).
+  * @retval None
+  */
+ void ft5336_Init(uint16_t DeviceAddr);
+ 
+ /**
+  * @brief  Software Reset the ft5336.
+  * @param  DeviceAddr: Device address on communication Bus (I2C slave address of FT5336).
+  * @retval None
+  */
+ void ft5336_Reset(uint16_t DeviceAddr);
+ 
+ /**
+  * @brief  Read the ft5336 device ID, pre initialize I2C in case of need to be
+  *         able to read the FT5336 device ID, and verify this is a FT5336.
+  * @param  DeviceAddr: I2C FT5336 Slave address.
+  * @retval The Device ID (two bytes).
+  */
+ uint16_t ft5336_ReadID(uint16_t DeviceAddr);
+ 
+ /**
+  * @brief  Configures the touch Screen IC device to start detecting touches
+  * @param  DeviceAddr: Device address on communication Bus (I2C slave address).
+  * @retval None.
+  */
+ void ft5336_TS_Start(uint16_t DeviceAddr);
+ 
+ /**
+  * @brief  Return if there is touches detected or not.
+  *         Try to detect new touches and forget the old ones (reset internal global
+  *         variables).
+  * @param  DeviceAddr: Device address on communication Bus.
+  * @retval : Number of active touches detected (can be 0, 1 or 2).
+  */
+ uint8_t ft5336_TS_DetectTouch(uint16_t DeviceAddr);
+ 
+ /**
+  * @brief  Get the touch screen X and Y positions values
+  *         Manage multi touch thanks to touch Index global
+  *         variable 'ft5336_handle.currActiveTouchIdx'.
+  * @param  DeviceAddr: Device address on communication Bus.
+  * @param  X: Pointer to X position value
+  * @param  Y: Pointer to Y position value
+  * @retval None.
+  */
+ void ft5336_TS_GetXY(uint16_t DeviceAddr, uint16_t *X, uint16_t *Y);
+ 
+ /**
+  * @brief  Configure the FT5336 device to generate IT on given INT pin
+  *         connected to MCU as EXTI.
+  * @param  DeviceAddr: Device address on communication Bus (Slave I2C address of FT5336).
+  * @retval None
+  */
+ void ft5336_TS_EnableIT(uint16_t DeviceAddr);
+ 
+ /**
+  * @brief  Configure the FT5336 device to stop generating IT on the given INT pin
+  *         connected to MCU as EXTI.
+  * @param  DeviceAddr: Device address on communication Bus (Slave I2C address of FT5336).
+  * @retval None
+  */
+ void ft5336_TS_DisableIT(uint16_t DeviceAddr);
+ 
+ /**
+  * @brief  Get IT status from FT5336 interrupt status registers
+  *         Should be called Following an EXTI coming to the MCU to know the detailed
+  *         reason of the interrupt.
+  * @param  DeviceAddr: Device address on communication Bus (I2C slave address of FT5336).
+  * @retval TS interrupts status
+  */
+ uint8_t ft5336_TS_ITStatus (uint16_t DeviceAddr);
+ 
+ /**
+  * @brief  Clear IT status in FT5336 interrupt status clear registers
+  *         Should be called Following an EXTI coming to the MCU.
+  * @param  DeviceAddr: Device address on communication Bus (I2C slave address of FT5336).
+  * @retval TS interrupts status
+  */
+ void ft5336_TS_ClearIT (uint16_t DeviceAddr);
+ 
+ /**** NEW FEATURES enabled when Multi-touch support is enabled ****/
+ 
+ #if (TS_MULTI_TOUCH_SUPPORTED == 1)
+ 
+ /**
+  * @brief  Get the last touch gesture identification (zoom, move up/down...).
+  * @param  DeviceAddr: Device address on communication Bus (I2C slave address of FT5336).
+  * @param  pGestureId : Pointer to get last touch gesture Identification.
+  * @retval None.
+  */
+ void ft5336_TS_GetGestureID(uint16_t DeviceAddr, uint32_t * pGestureId);
+ 
+ /**
+  * @brief  Get the touch detailed informations on touch number 'touchIdx' (0..1)
+  *         This touch detailed information contains :
+  *         - weight that was applied to this touch
+  *         - sub-area of the touch in the touch panel
+  *         - event of linked to the touch (press down, lift up, ...)
+  * @param  DeviceAddr: Device address on communication Bus (I2C slave address of FT5336).
+  * @param  touchIdx : Passed index of the touch (0..1) on which we want to get the
+  *                    detailed information.
+  * @param  pWeight : Pointer to to get the weight information of 'touchIdx'.
+  * @param  pArea   : Pointer to to get the sub-area information of 'touchIdx'.
+  * @param  pEvent  : Pointer to to get the event information of 'touchIdx'.
+ 
+  * @retval None.
+  */
+ void ft5336_TS_GetTouchInfo(uint16_t   DeviceAddr,
+                             uint32_t   touchIdx,
+                             uint32_t * pWeight,
+                             uint32_t * pArea,
+                             uint32_t * pEvent);
+ 
+ #endif /* TS_MULTI_TOUCH_SUPPORTED == 1 */
+ 
+ /* Imported TS IO functions --------------------------------------------------------*/
+ 
+ /** @defgroup ft5336_Imported_Functions
+  * @{
+  */
+ 
+ /* TouchScreen (TS) external IO functions */
+ extern void    TS_IO_Init(void);
+ extern void    TS_IO_Write(uint8_t Addr, uint8_t Reg, uint8_t Value);
+ extern uint8_t TS_IO_Read(uint8_t Addr, uint8_t Reg);
+ extern void    TS_IO_Delay(uint32_t Delay);
+ 
+   /**
+    * @}
+    */
+ 
+   /* Imported global variables --------------------------------------------------------*/
+ 
+   /** @defgroup ft5336_Imported_Globals
+    * @{
+    */
+ 
+ 
+ /* Touch screen driver structure */
+ extern TS_DrvTypeDef ft5336_ts_drv;
+ 
+ 
+ #endif /* FT5336_H_ */
diff -crNb MicorpythonOriginal1.12/micropython/ports/stm32/.ipynb_checkpoints/Untitled-checkpoint.ipynb micropython1.12_withUlab/micropython/ports/stm32/.ipynb_checkpoints/Untitled-checkpoint.ipynb
*** MicorpythonOriginal1.12/micropython/ports/stm32/.ipynb_checkpoints/Untitled-checkpoint.ipynb	1970-01-01 02:00:00.000000000 +0200
--- micropython1.12_withUlab/micropython/ports/stm32/.ipynb_checkpoints/Untitled-checkpoint.ipynb	2020-06-19 17:27:47.380454445 +0200
***************
*** 0 ****
--- 1,6 ----
+ {
+  "cells": [],
+  "metadata": {},
+  "nbformat": 4,
+  "nbformat_minor": 4
+ }
diff -crNb MicorpythonOriginal1.12/micropython/ports/stm32/lcd.c micropython1.12_withUlab/micropython/ports/stm32/lcd.c
*** MicorpythonOriginal1.12/micropython/ports/stm32/lcd.c	2020-04-13 07:21:17.000000000 +0200
--- micropython1.12_withUlab/micropython/ports/stm32/lcd.c	2020-06-16 17:10:04.055919267 +0200
***************
*** 30,42 ****
--- 30,59 ----
  #include "py/mphal.h"
  #include "py/runtime.h"
  
+ /*************************************GF Added**********************************/
+ #include "py/nlr.h"
+ #include "py/mpfile.h"
+ #include "py/builtin.h"
+ #include "py/misc.h"
+ /*******************************************************************************/
+ 
  #if MICROPY_HW_HAS_LCD
  
+ 
  #include "pin.h"
  #include "bufhelper.h"
  #include "spi.h"
  #include "font_petme128_8x8.h"
  #include "lcd.h"
+ #include "dma_init.h"
+ #include "lcd_init.h"
+ #include "ts_init.h"
+ #include "font24.h"
+ 
+ #include "..//../../lib/stm32lib/STM32F7xx_HAL_Driver/Inc/stm32f7xx_hal_ltdc.h"
+ #include "..//../../lib/stm32lib/STM32F7xx_HAL_Driver/Inc/stm32f7xx_hal_ltdc_ex.h"
+ 
+ 
  
  /// \moduleref pyb
  /// \class LCD - LCD control for the LCD touch-sensor pyskin
***************
*** 197,208 ****
      mp_arg_check_num(n_args, n_kw, 1, 1, false);
  
      // get LCD position
!     const char *lcd_id = mp_obj_str_get_str(args[0]);
  
      // create lcd object
      pyb_lcd_obj_t *lcd = m_new_obj(pyb_lcd_obj_t);
      lcd->base.type = &pyb_lcd_type;
  
      // configure pins
      // TODO accept an SPI object and pin objects for full customisation
      if ((lcd_id[0] | 0x20) == 'x' && lcd_id[1] == '\0') {
--- 214,234 ----
      mp_arg_check_num(n_args, n_kw, 1, 1, false);
  
      // get LCD position
!     //const char *lcd_id = mp_obj_str_get_str(args[0]);
  
      // create lcd object
      pyb_lcd_obj_t *lcd = m_new_obj(pyb_lcd_obj_t);
      lcd->base.type = &pyb_lcd_type;
  
+     //HAL_LTDC_Init(NULL);
+     BSP_LCD_Init();
+     BSP_LCD_LayerDefaultInit(LTDC_ACTIVE_LAYER, LCD_FRAME_BUFFER);
+     Display_DemoDescription();
+     TS_Init();
+ 
+     //HAL_GPIO_Init(GPIOE, NULL);
+ 
+ #if 0
      // configure pins
      // TODO accept an SPI object and pin objects for full customisation
      if ((lcd_id[0] | 0x20) == 'x' && lcd_id[1] == '\0') {
***************
*** 220,226 ****
      } else {
          nlr_raise(mp_obj_new_exception_msg_varg(&mp_type_ValueError, "LCD(%s) doesn't exist", lcd_id));
      }
- 
      // init the SPI bus
      SPI_InitTypeDef *init = &lcd->spi->spi->Init;
      init->Mode = SPI_MODE_MASTER;
--- 246,251 ----
***************
*** 306,315 ****
--- 331,507 ----
      // clear local pixel buffer
      memset(lcd->pix_buf, 0, LCD_PIX_BUF_BYTE_SIZE);
      memset(lcd->pix_buf2, 0, LCD_PIX_BUF_BYTE_SIZE);
+ #endif
  
      return MP_OBJ_FROM_PTR(lcd);
  }
  
+ 
+ /**************************************************************************************/
+ /// \method show()
+ ///
+ /// Show the hidden buffer on the screen.
+ STATIC mp_obj_t pyb_lcd_line(mp_uint_t n_args, const mp_obj_t *args) {
+     //pyb_lcd_obj_t *self = self_in;
+ #if (1)
+     uint16_t colour = mp_obj_get_int(args[1]);
+ 	memset((uint16_t*)(0xC0000000),colour,518400);
+ #endif
+     return mp_const_none;
+ }
+ STATIC MP_DEFINE_CONST_FUN_OBJ_VAR_BETWEEN(pyb_lcd_line_obj,5,5,pyb_lcd_line);
+ 
+ 
+ STATIC mp_obj_t pyb_lcd_putpixelline(mp_uint_t n_args, const mp_obj_t *args) {
+ 	int n;
+ 	unsigned int * data = MP_OBJ_TO_PTR(args[1]);
+ 	int x0 = mp_obj_get_int(args[2]);
+ 	int y0 = mp_obj_get_int(args[3]);
+ 	int len = mp_obj_get_int(args[4]);
+ 	for (n = 0; n < len; n++)
+ 	{
+ 		*(uint32_t *)(LCD_FRAME_BUFFER + y0 *1920 + x0*4 + n*4) = data[n]| 0xff000000;
+ 	}
+ 
+     return mp_const_none;
+ 
+ }
+ STATIC MP_DEFINE_CONST_FUN_OBJ_VAR_BETWEEN(pyb_lcd_putpixelline_obj, 5, 5, pyb_lcd_putpixelline);
+ 
+ 
+ 
+ STATIC mp_obj_t pyb_lcd_drawline(mp_uint_t n_args, const mp_obj_t *args) {
+ 	int n;
+ 	int x0 = mp_obj_get_int(args[1]);
+ 	int y0 = mp_obj_get_int(args[2]);
+ 	int x1 = mp_obj_get_int(args[3]);
+ 	int y1 = mp_obj_get_int(args[4]);
+ 	int x_interval,new_x,new_y;
+ 	int y_interval;
+ 	int interval;
+ 	int signx,signy;
+ 	unsigned int colour = mp_obj_get_int(args[5]);
+     colour |= 0xff000000;
+ 
+     x_interval = abs(x1-x0);
+     y_interval = abs(y1-y0);
+ 
+     if (x_interval >= y_interval)
+     {
+         interval = x_interval;
+     }
+     else
+     {
+         interval = y_interval;
+     }
+ 
+     for (n = 0; n < interval; n++)
+     {
+         signx=1;
+         signy=1;
+         if (x_interval >= y_interval)
+         {
+         	if (x0>x1)
+                 signx=-1;
+             if (y0>y1)
+                 signy=-1;
+             new_y = y0 + (int)(n*(y1-y0)/(interval));
+             new_x = (x0+n*signx);
+             //lcd.pixels(new_x,new_y,colour);
+             *(uint32_t *)(LCD_FRAME_BUFFER + (new_y*1920 + new_x*4)) = colour;
+ 
+         }else
+         {
+             if (x0>x1)
+                 signx=-1;
+             if (y0>y1)
+                 signy=-1;
+             new_x = x0 + (int)(n*abs(x1-x0)/(interval));
+             new_y = (y0+n*signy);
+             //lcd.pixels(new_x,new_y,colour);
+             *(uint32_t *)(LCD_FRAME_BUFFER + (new_y*1920 + new_x*4)) = colour;
+         }
+     }
+     BSP_LCD_Reload(1);
+     return mp_const_none;
+ 
+ }
+ STATIC MP_DEFINE_CONST_FUN_OBJ_VAR_BETWEEN(pyb_lcd_drawline_obj, 6, 6, pyb_lcd_drawline);
+ 
+ 
+ #if 1
+ STATIC mp_obj_t pyb_lcd_showpartimage(mp_uint_t n_args, const mp_obj_t *argss)
+ {
+ 	size_t len;
+ 	const char *filename = mp_obj_str_get_data(argss[1], &len);
+ 	int x0     = mp_obj_get_int(argss[2]);
+ 	int y0     = mp_obj_get_int(argss[3]);
+ 	int width  = mp_obj_get_int(argss[4]);
+ 	int height = mp_obj_get_int(argss[5]);
+ 	int n;
+ 	unsigned char buf[1920];
+ 
+ 	unsigned int * start;
+    // 	mp_obj_t bytes_read;
+ 
+ 
+ 
+ 	//unsigned char buf[1920];
+ 	width = width*4;
+ 	mp_file_t * mp_file;
+ 	mp_obj_t filename_obj = mp_obj_new_str(filename, strlen(filename));
+ 	mp_obj_t mode_obj = mp_obj_new_str("r", strlen("r"));
+ 	mp_obj_t args[2] = { filename_obj, mode_obj };
+ 	mp_file = mp_file_from_file_obj(mp_builtin_open(2, args, (mp_map_t *)&mp_const_empty_map));
+ 
+ 	mp_file->readinto_fn = mp_load_attr(mp_file->file_obj, MP_QSTR_readinto);
+     	mp_obj_t bytearray = mp_obj_new_bytearray_by_ref(width, buf);
+     	mp_obj_t bytes_read = mp_call_function_1(mp_file->readinto_fn, bytearray);
+ 
+     	for (int n = 0; n < height; n++)
+     	{
+         	start = (unsigned char *)(LCD_FRAME_BUFFER + (x0 *4) + (y0 +n)*1920);
+         	memcpy(start,buf,width);
+        		bytes_read = mp_call_function_1(mp_file->readinto_fn, bytearray);
+     	}
+ 	//mp_file = mp_open("test.txt", "r");
+ 
+ 	return bytes_read;
+ }
+ STATIC MP_DEFINE_CONST_FUN_OBJ_VAR_BETWEEN(pyb_lcd_showpartimage_obj,6,6,pyb_lcd_showpartimage);
+ #endif
+ #if 1
+ STATIC mp_obj_t pyb_lcd_showimage(mp_uint_t n_args, const mp_obj_t *argss)
+ {
+ 	size_t len;
+ 	const char *filename = mp_obj_str_get_data(argss[1], &len);
+ 
+ 	unsigned char * buf = (unsigned char *)LCD_FRAME_BUFFER;
+ 	mp_file_t * mp_file;
+ 	mp_obj_t filename_obj = mp_obj_new_str(filename, strlen(filename));
+ 	mp_obj_t mode_obj = mp_obj_new_str("r", strlen("r"));
+ 	mp_obj_t args[2] = { filename_obj, mode_obj };
+ 	mp_file = mp_file_from_file_obj(mp_builtin_open(2, args, (mp_map_t *)&mp_const_empty_map));
+ 
+ 	mp_file->readinto_fn = mp_load_attr(mp_file->file_obj, MP_QSTR_readinto);
+     //mp_obj_t bytearray = mp_obj_new_bytearray_by_ref(/*num_bytes*/522240, buf);
+     mp_obj_t bytearray = mp_obj_new_bytearray_by_ref(/*num_bytes*/522240, buf);
+     mp_obj_t bytes_read = mp_call_function_1(mp_file->readinto_fn, bytearray);
+ 
+ 	//mp_file = mp_open("test.txt", "r");
+ 
+ 	return bytes_read;
+ 
+ 
+ 
+ }
+ STATIC MP_DEFINE_CONST_FUN_OBJ_VAR_BETWEEN(pyb_lcd_showimage_obj,2,2,pyb_lcd_showimage);
+ 
+ #endif
+ 
+ 
+ /**************************************************************************************/
+ 
  /// \method command(instr_data, buf)
  ///
  /// Send an arbitrary command to the LCD.  Pass 0 for `instr_data` to send an
***************
*** 513,518 ****
--- 705,713 ----
      { MP_ROM_QSTR(MP_QSTR_pixel), MP_ROM_PTR(&pyb_lcd_pixel_obj) },
      { MP_ROM_QSTR(MP_QSTR_text), MP_ROM_PTR(&pyb_lcd_text_obj) },
      { MP_ROM_QSTR(MP_QSTR_show), MP_ROM_PTR(&pyb_lcd_show_obj) },
+ 	{ MP_ROM_QSTR(MP_QSTR_showimage), MP_ROM_PTR(&pyb_lcd_showimage_obj)},
+ 	{ MP_ROM_QSTR(MP_QSTR_drawline), MP_ROM_PTR(&pyb_lcd_drawline_obj)},
+ 	{ MP_ROM_QSTR(MP_QSTR_showpartimage), MP_ROM_PTR(&pyb_lcd_showpartimage_obj)}
  };
  
  STATIC MP_DEFINE_CONST_DICT(pyb_lcd_locals_dict, pyb_lcd_locals_dict_table);
diff -crNb MicorpythonOriginal1.12/micropython/ports/stm32/lcd_init.c micropython1.12_withUlab/micropython/ports/stm32/lcd_init.c
*** MicorpythonOriginal1.12/micropython/ports/stm32/lcd_init.c	1970-01-01 02:00:00.000000000 +0200
--- micropython1.12_withUlab/micropython/ports/stm32/lcd_init.c	2020-06-16 17:53:20.861645290 +0200
***************
*** 0 ****
--- 1,483 ----
+ /*
+  * lcd_init.c
+  *
+  *  Created on: 21 Jul 2017
+  *      Author: graeme
+  */
+ 
+ #include <stdio.h>
+ #include <string.h>
+ 
+ #include "py/mphal.h"
+ #include "py/nlr.h"
+ #include "py/runtime.h"
+ 
+ #include "pin.h"
+ #include "genhdr/pins.h"
+ #include "bufhelper.h"
+ #include "spi.h"
+ #include "font_petme128_8x8.h"
+ #include "lcd.h"
+ #include "dma_init.h"
+ #include "lcd_init.h"
+ #include "font24.h"
+ //#include "..//../../lib/stm32lib/STM32F7xx_HAL_Driver/Inc/stm32f7xx_hal_ltdc.h"
+ //#include "..//../../lib/stm32lib/STM32F7xx_HAL_Driver/Inc/stm32f7xx_hal_ltdc_ex.h"
+ /**
+   * @brief  LCD FB_StartAddress
+   */
+ #define LCD_FB_START_ADDRESS       ((uint32_t)0xC0100000)
+ #define LCD_DEFAULT_FONT        Font24
+ 
+ 
+ /**
+   * @brief  LCD color
+   */
+ #define LCD_COLOR_BLUE          ((uint32_t)0xFF0000FF)
+ #define LCD_COLOR_GREEN         ((uint32_t)0xFF00FF00)
+ #define LCD_COLOR_RED           ((uint32_t)0xFFFF0000)
+ #define LCD_COLOR_CYAN          ((uint32_t)0xFF00FFFF)
+ #define LCD_COLOR_MAGENTA       ((uint32_t)0xFFFF00FF)
+ #define LCD_COLOR_YELLOW        ((uint32_t)0xFFFFFF00)
+ #define LCD_COLOR_LIGHTBLUE     ((uint32_t)0xFF8080FF)
+ #define LCD_COLOR_LIGHTGREEN    ((uint32_t)0xFF80FF80)
+ #define LCD_COLOR_LIGHTRED      ((uint32_t)0xFFFF8080)
+ #define LCD_COLOR_LIGHTCYAN     ((uint32_t)0xFF80FFFF)
+ #define LCD_COLOR_LIGHTMAGENTA  ((uint32_t)0xFFFF80FF)
+ #define LCD_COLOR_LIGHTYELLOW   ((uint32_t)0xFFFFFF80)
+ #define LCD_COLOR_DARKBLUE      ((uint32_t)0xFF000080)
+ #define LCD_COLOR_DARKGREEN     ((uint32_t)0xFF008000)
+ #define LCD_COLOR_DARKRED       ((uint32_t)0xFF800000)
+ #define LCD_COLOR_DARKCYAN      ((uint32_t)0xFF008080)
+ #define LCD_COLOR_DARKMAGENTA   ((uint32_t)0xFF800080)
+ #define LCD_COLOR_DARKYELLOW    ((uint32_t)0xFF808000)
+ #define LCD_COLOR_WHITE         ((uint32_t)0xFFFFFFFF)
+ #define LCD_COLOR_LIGHTGRAY     ((uint32_t)0xFFD3D3D3)
+ #define LCD_COLOR_GRAY          ((uint32_t)0xFF808080)
+ #define LCD_COLOR_DARKGRAY      ((uint32_t)0xFF404040)
+ #define LCD_COLOR_BLACK         ((uint32_t)0xFF000000)
+ #define LCD_COLOR_BROWN         ((uint32_t)0xFFA52A2A)
+ #define LCD_COLOR_ORANGE        ((uint32_t)0xFFFFA500)
+ #define LCD_COLOR_TRANSPARENT   ((uint32_t)0xFF000000)
+ 
+ 
+ #define MAX_LAYER_NUMBER       ((uint32_t)2)
+ 
+ 
+ 
+ typedef struct
+ {
+   uint32_t TextColor;
+   uint32_t BackColor;
+   sFONT    *pFont;
+ }LCD_DrawPropTypeDef;
+ 
+ LTDC_HandleTypeDef  hLtdcHandler;
+ #define LCD_LayerCfgTypeDef    LTDC_LayerCfgTypeDef
+ //DMA2D_HandleTypeDef hDma2dHandler;
+ 
+ 
+ 
+ /* Default LCD configuration with LCD Layer 1 */
+ static uint32_t            ActiveLayer = 0;
+ static LCD_DrawPropTypeDef DrawProp[MAX_LAYER_NUMBER];
+ 
+ 
+ #define LCD_DISP_PIN                    GPIO_PIN_12
+ #define LCD_DISP_GPIO_PORT              GPIOI
+ #define LCD_DISP_GPIO_CLK_ENABLE()      __HAL_RCC_GPIOI_CLK_ENABLE()
+ #define LCD_DISP_GPIO_CLK_DISABLE()     __HAL_RCC_GPIOI_CLK_DISABLE()
+ 
+ /* Backlight control pin */
+ #define LCD_BL_CTRL_PIN                  GPIO_PIN_3
+ #define LCD_BL_CTRL_GPIO_PORT            GPIOK
+ #define LCD_BL_CTRL_GPIO_CLK_ENABLE()    __HAL_RCC_GPIOK_CLK_ENABLE()
+ #define LCD_BL_CTRL_GPIO_CLK_DISABLE()   __HAL_RCC_GPIOK_CLK_DISABLE()
+ 
+ 
+ 
+ #define LCD_OK                 ((uint8_t)0x00)
+ #define LCD_ERROR              ((uint8_t)0x01)
+ #define LCD_TIMEOUT            ((uint8_t)0x02)
+ 
+ 
+ #define  RK043FN48H_WIDTH    ((uint16_t)480)          /* LCD PIXEL WIDTH            */
+ #define  RK043FN48H_HEIGHT   ((uint16_t)272)          /* LCD PIXEL HEIGHT           */
+ 
+ /**
+   * @brief  RK043FN48H Timing
+   */
+ #define  RK043FN48H_HSYNC            ((uint16_t)41)   /* Horizontal synchronization */
+ #define  RK043FN48H_HBP              ((uint16_t)13)   /* Horizontal back porch      */
+ #define  RK043FN48H_HFP              ((uint16_t)32)   /* Horizontal front porch     */
+ #define  RK043FN48H_VSYNC            ((uint16_t)10)   /* Vertical synchronization   */
+ #define  RK043FN48H_VBP              ((uint16_t)2)    /* Vertical back porch        */
+ #define  RK043FN48H_VFP              ((uint16_t)2)    /* Vertical front porch       */
+ 
+ /**
+   * @brief  RK043FN48H frequency divider
+   */
+ #define  RK043FN48H_FREQUENCY_DIVIDER    5            /* LCD Frequency divider      */
+ 
+ void BSP_LCD_ClockConfig(LTDC_HandleTypeDef *hltdc, void *Params);
+ LTDC_HandleTypeDef  hLtdcHandler;
+ void BSP_LCD_MspInit(LTDC_HandleTypeDef *hltdc, void *Params);
+ 
+ 
+ uint8_t BSP_LCD_Init(void)
+ {
+   /* Select the used LCD */
+ 
+   /* The RK043FN48H LCD 480x272 is selected */
+   /* Timing Configuration */
+   hLtdcHandler.Init.HorizontalSync = (RK043FN48H_HSYNC - 1);
+   hLtdcHandler.Init.VerticalSync = (RK043FN48H_VSYNC - 1);
+   hLtdcHandler.Init.AccumulatedHBP = (RK043FN48H_HSYNC + RK043FN48H_HBP - 1);
+   hLtdcHandler.Init.AccumulatedVBP = (RK043FN48H_VSYNC + RK043FN48H_VBP - 1);
+   hLtdcHandler.Init.AccumulatedActiveH = (RK043FN48H_HEIGHT + RK043FN48H_VSYNC + RK043FN48H_VBP - 1);
+   hLtdcHandler.Init.AccumulatedActiveW = (RK043FN48H_WIDTH + RK043FN48H_HSYNC + RK043FN48H_HBP - 1);
+   hLtdcHandler.Init.TotalHeigh = (RK043FN48H_HEIGHT + RK043FN48H_VSYNC + RK043FN48H_VBP + RK043FN48H_VFP - 1);
+   hLtdcHandler.Init.TotalWidth = (RK043FN48H_WIDTH + RK043FN48H_HSYNC + RK043FN48H_HBP + RK043FN48H_HFP - 1);
+ 
+   /* LCD clock configuration */
+   BSP_LCD_ClockConfig(&hLtdcHandler, NULL);
+ 
+   /* Initialize the LCD pixel width and pixel height */
+   hLtdcHandler.LayerCfg->ImageWidth  = RK043FN48H_WIDTH;
+   hLtdcHandler.LayerCfg->ImageHeight = RK043FN48H_HEIGHT;
+ 
+   /* Background value */
+   hLtdcHandler.Init.Backcolor.Blue = 0;
+   hLtdcHandler.Init.Backcolor.Green = 0;
+   hLtdcHandler.Init.Backcolor.Red = 0;
+ 
+   /* Polarity */
+   hLtdcHandler.Init.HSPolarity = LTDC_HSPOLARITY_AL;
+   hLtdcHandler.Init.VSPolarity = LTDC_VSPOLARITY_AL;
+   hLtdcHandler.Init.DEPolarity = LTDC_DEPOLARITY_AL;
+   hLtdcHandler.Init.PCPolarity = LTDC_PCPOLARITY_IPC;
+   hLtdcHandler.Instance = LTDC;
+ 
+   if(HAL_LTDC_GetState(&hLtdcHandler) == HAL_LTDC_STATE_RESET)
+   {
+     /* Initialize the LCD Msp: this __weak function can be rewritten by the application */
+     BSP_LCD_MspInit(&hLtdcHandler, NULL);
+   }
+   HAL_LTDC_Init(&hLtdcHandler);
+ 
+   /* Assert display enable LCD_DISP pin */
+   HAL_GPIO_WritePin(LCD_DISP_GPIO_PORT, LCD_DISP_PIN, GPIO_PIN_SET);
+ 
+   /* Assert backlight LCD_BL_CTRL pin */
+   HAL_GPIO_WritePin(LCD_BL_CTRL_GPIO_PORT, LCD_BL_CTRL_PIN, GPIO_PIN_SET);
+ 
+ //#if !defined(DATA_IN_ExtSDRAM)
+   /* Initialize the SDRAM */
+   BSP_SDRAM_Init();
+ //#endif
+   /* Initialize the font */
+   //BSP_LCD_SetFont(&LCD_DEFAULT_FONT);
+   return LCD_OK;
+ }
+ 
+ 
+ void BSP_LCD_ClockConfig(LTDC_HandleTypeDef *hltdc, void *Params)
+ {
+   static RCC_PeriphCLKInitTypeDef  periph_clk_init_struct;
+ 
+   /* RK043FN48H LCD clock configuration */
+   /* PLLSAI_VCO Input = HSE_VALUE/PLL_M = 1 Mhz */
+   /* PLLSAI_VCO Output = PLLSAI_VCO Input * PLLSAIN = 192 Mhz */
+   /* PLLLCDCLK = PLLSAI_VCO Output/PLLSAIR = 192/5 = 38.4 Mhz */
+   /* LTDC clock frequency = PLLLCDCLK / LTDC_PLLSAI_DIVR_4 = 38.4/4 = 9.6Mhz */
+   periph_clk_init_struct.PeriphClockSelection = RCC_PERIPHCLK_LTDC;
+   periph_clk_init_struct.PLLSAI.PLLSAIN = 192;
+   periph_clk_init_struct.PLLSAI.PLLSAIR = RK043FN48H_FREQUENCY_DIVIDER;
+   periph_clk_init_struct.PLLSAIDivR = RCC_PLLSAIDIVR_4;
+   HAL_RCCEx_PeriphCLKConfig(&periph_clk_init_struct);
+ }
+ 
+ /**
+   * @brief  Initializes the LTDC MSP.
+   * @param  hltdc: LTDC handle
+   * @param  Params
+   * @retval None
+   */
+ void BSP_LCD_MspInit(LTDC_HandleTypeDef *hltdc, void *Params)
+ {
+   GPIO_InitTypeDef gpio_init_structure;
+ 
+   /* Enable the LTDC and DMA2D clocks */
+   __HAL_RCC_LTDC_CLK_ENABLE();
+   __HAL_RCC_DMA2D_CLK_ENABLE();
+ 
+   /* Enable GPIOs clock */
+   __HAL_RCC_GPIOE_CLK_ENABLE();
+   __HAL_RCC_GPIOG_CLK_ENABLE();
+   __HAL_RCC_GPIOI_CLK_ENABLE();
+   __HAL_RCC_GPIOJ_CLK_ENABLE();
+   __HAL_RCC_GPIOK_CLK_ENABLE();
+   LCD_DISP_GPIO_CLK_ENABLE();
+   LCD_BL_CTRL_GPIO_CLK_ENABLE();
+ 
+   /*** LTDC Pins configuration ***/
+   /* GPIOE configuration */
+   gpio_init_structure.Pin       = GPIO_PIN_4;
+   gpio_init_structure.Mode      = GPIO_MODE_AF_PP;
+   gpio_init_structure.Pull      = GPIO_NOPULL;
+   gpio_init_structure.Speed     = GPIO_SPEED_FAST;
+   gpio_init_structure.Alternate = GPIO_AF14_LTDC;
+   HAL_GPIO_Init(GPIOE, &gpio_init_structure);
+ 
+   /* GPIOG configuration */
+   gpio_init_structure.Pin       = GPIO_PIN_12;
+   gpio_init_structure.Mode      = GPIO_MODE_AF_PP;
+   gpio_init_structure.Alternate = GPIO_AF9_LTDC;
+   HAL_GPIO_Init(GPIOG, &gpio_init_structure);
+ 
+   /* GPIOI LTDC alternate configuration */
+   gpio_init_structure.Pin       = GPIO_PIN_9 | GPIO_PIN_10 | \
+                                   GPIO_PIN_13 | GPIO_PIN_14 | GPIO_PIN_15;
+   gpio_init_structure.Mode      = GPIO_MODE_AF_PP;
+   gpio_init_structure.Alternate = GPIO_AF14_LTDC;
+   HAL_GPIO_Init(GPIOI, &gpio_init_structure);
+ 
+   /* GPIOJ configuration */
+   gpio_init_structure.Pin       = GPIO_PIN_0 | GPIO_PIN_1 | GPIO_PIN_2 | GPIO_PIN_3 | \
+                                   GPIO_PIN_4 | GPIO_PIN_5 | GPIO_PIN_6 | GPIO_PIN_7 | \
+                                   GPIO_PIN_8 | GPIO_PIN_9 | GPIO_PIN_10 | GPIO_PIN_11 | \
+                                   GPIO_PIN_13 | GPIO_PIN_14 | GPIO_PIN_15;
+   gpio_init_structure.Mode      = GPIO_MODE_AF_PP;
+   gpio_init_structure.Alternate = GPIO_AF14_LTDC;
+   HAL_GPIO_Init(GPIOJ, &gpio_init_structure);
+ 
+   /* GPIOK configuration */
+   gpio_init_structure.Pin       = GPIO_PIN_0 | GPIO_PIN_1 | GPIO_PIN_2 | GPIO_PIN_4 | \
+                                   GPIO_PIN_5 | GPIO_PIN_6 | GPIO_PIN_7;
+   gpio_init_structure.Mode      = GPIO_MODE_AF_PP;
+   gpio_init_structure.Alternate = GPIO_AF14_LTDC;
+   HAL_GPIO_Init(GPIOK, &gpio_init_structure);
+ 
+   /* LCD_DISP GPIO configuration */
+   gpio_init_structure.Pin       = LCD_DISP_PIN;     /* LCD_DISP pin has to be manually controlled */
+   gpio_init_structure.Mode      = GPIO_MODE_OUTPUT_PP;
+   HAL_GPIO_Init(LCD_DISP_GPIO_PORT, &gpio_init_structure);
+ 
+   /* LCD_BL_CTRL GPIO configuration */
+   gpio_init_structure.Pin       = LCD_BL_CTRL_PIN;  /* LCD_BL_CTRL pin has to be manually controlled */
+   gpio_init_structure.Mode      = GPIO_MODE_OUTPUT_PP;
+   HAL_GPIO_Init(LCD_BL_CTRL_GPIO_PORT, &gpio_init_structure);
+ }
+ 
+ 
+ 
+ 
+ /**
+   * @brief  Gets the LCD X size.
+   * @retval Used LCD X size
+   */
+ uint32_t BSP_LCD_GetXSize(void)
+ {
+   return hLtdcHandler.LayerCfg[ActiveLayer].ImageWidth;
+ }
+ 
+ /**
+   * @brief  Gets the LCD Y size.
+   * @retval Used LCD Y size
+   */
+ uint32_t BSP_LCD_GetYSize(void)
+ {
+   return hLtdcHandler.LayerCfg[ActiveLayer].ImageHeight;
+ }
+ 
+ /**
+   * @brief  Set the LCD X size.
+   * @param  imageWidthPixels : image width in pixels unit
+   * @retval None
+   */
+ void BSP_LCD_SetXSize(uint32_t imageWidthPixels)
+ {
+   hLtdcHandler.LayerCfg[ActiveLayer].ImageWidth = imageWidthPixels;
+ }
+ 
+ /**
+   * @brief  Set the LCD Y size.
+   * @param  imageHeightPixels : image height in lines unit
+   * @retval None
+   */
+ void BSP_LCD_SetYSize(uint32_t imageHeightPixels)
+ {
+   hLtdcHandler.LayerCfg[ActiveLayer].ImageHeight = imageHeightPixels;
+ }
+ 
+ /**
+   * @brief  Initializes the LCD layer in ARGB8888 format (32 bits per pixel).
+   * @param  LayerIndex: Layer foreground or background
+   * @param  FB_Address: Layer frame buffer
+   * @retval None
+   */
+ void BSP_LCD_LayerDefaultInit(uint16_t LayerIndex, uint32_t FB_Address)
+ {
+   LCD_LayerCfgTypeDef  layer_cfg;
+ 
+   /* Layer Init */
+   layer_cfg.WindowX0 = 0;
+   layer_cfg.WindowX1 = BSP_LCD_GetXSize();
+   layer_cfg.WindowY0 = 0;
+   layer_cfg.WindowY1 = BSP_LCD_GetYSize();
+   layer_cfg.PixelFormat = LTDC_PIXEL_FORMAT_ARGB8888;
+   layer_cfg.FBStartAdress = FB_Address;
+   layer_cfg.Alpha = 255;
+   layer_cfg.Alpha0 = 0;
+   layer_cfg.Backcolor.Blue = 0;
+   layer_cfg.Backcolor.Green = 0;
+   layer_cfg.Backcolor.Red = 0;
+   layer_cfg.BlendingFactor1 = LTDC_BLENDING_FACTOR1_PAxCA;
+   layer_cfg.BlendingFactor2 = LTDC_BLENDING_FACTOR2_PAxCA;
+   layer_cfg.ImageWidth = BSP_LCD_GetXSize();
+   layer_cfg.ImageHeight = BSP_LCD_GetYSize();
+ 
+   HAL_LTDC_ConfigLayer(&hLtdcHandler, &layer_cfg, LayerIndex);
+ 
+   DrawProp[LayerIndex].BackColor = LCD_COLOR_WHITE;
+   DrawProp[LayerIndex].pFont     = &Font24;
+   DrawProp[LayerIndex].TextColor = LCD_COLOR_BLACK;
+ }
+ 
+ 
+ 
+ 
+ /**
+   * @brief  Sets the LCD text font.
+   * @param  fonts: Layer font to be used
+   * @retval None
+   */
+ void BSP_LCD_SetFont(sFONT *fonts)
+ {
+   DrawProp[ActiveLayer].pFont = fonts;
+ }
+ 
+ /**
+   * @brief  Selects the LCD Layer.
+   * @param  LayerIndex: Layer foreground or background
+   * @retval None
+   */
+ void BSP_LCD_SelectLayer(uint32_t LayerIndex)
+ {
+   ActiveLayer = LayerIndex;
+ }
+ 
+ 
+ /**
+   * @brief  Disables the color keying without reloading.
+   * @param  ReloadType: can be one of the following values
+   *         - LCD_RELOAD_IMMEDIATE
+   *         - LCD_RELOAD_VERTICAL_BLANKING
+   * @retval None
+   */
+ void BSP_LCD_Reload(uint32_t ReloadType)
+ {
+   HAL_LTDC_Reload (&hLtdcHandler, ReloadType);
+ }
+ 
+ /**
+   * @brief  Sets the LCD text color.
+   * @param  Color: Text color code ARGB(8-8-8-8)
+   * @retval None
+   */
+ void BSP_LCD_SetTextColor(uint32_t Color)
+ {
+   DrawProp[ActiveLayer].TextColor = Color;
+ }
+ 
+ /**
+   * @brief  Gets the LCD text color.
+   * @retval Used text color.
+   */
+ uint32_t BSP_LCD_GetTextColor(void)
+ {
+   return DrawProp[ActiveLayer].TextColor;
+ }
+ 
+ /**
+   * @brief  Sets the LCD background color.
+   * @param  Color: Layer background color code ARGB(8-8-8-8)
+   * @retval None
+   */
+ void BSP_LCD_SetBackColor(uint32_t Color)
+ {
+   DrawProp[ActiveLayer].BackColor = Color;
+ }
+ 
+ /**
+   * @brief  Gets the LCD background color.
+   * @retval Used background colour
+   */
+ uint32_t BSP_LCD_GetBackColor(void)
+ {
+   return DrawProp[ActiveLayer].BackColor;
+ }
+ 
+ 
+ /**
+   * @brief  Gets the LCD text font.
+   * @retval Used layer font
+   */
+ sFONT *BSP_LCD_GetFont(void)
+ {
+   return DrawProp[ActiveLayer].pFont;
+ }
+ 
+ 
+ 
+ 
+ /**
+   * @brief  Clears the hole LCD.
+   * @param  Color: Color of the background
+   * @retval None
+   */
+ void BSP_LCD_Clear(uint32_t Color)
+ {
+   /* Clear the LCD */
+   //LL_FillBuffer(ActiveLayer, (uint32_t *)(hLtdcHandler.LayerCfg[ActiveLayer].FBStartAdress), BSP_LCD_GetXSize(), BSP_LCD_GetYSize(), 0, Color);
+ }
+ 
+ 
+ void Display_DemoDescription(void)
+ {
+   //uint8_t desc[50];
+   /* Set LCD Foreground Layer  */
+   BSP_LCD_SelectLayer(LTDC_ACTIVE_LAYER);
+   BSP_LCD_SetFont(&LCD_DEFAULT_FONT);
+   /* Clear the LCD */
+   BSP_LCD_SetBackColor(LCD_COLOR_WHITE);
+ #if 0
+   BSP_LCD_Clear(LCD_COLOR_WHITE);
+ 
+   /* Set the LCD Text Color */
+   BSP_LCD_SetTextColor(LCD_COLOR_DARKBLUE);
+ 
+   /* Display LCD messages */
+   BSP_LCD_DisplayStringAt(0, 10, (uint8_t *)"STM32F746G BSP", CENTER_MODE);
+   BSP_LCD_DisplayStringAt(0, 35, (uint8_t *)"Drivers examples", CENTER_MODE);
+ 
+   /* Draw Bitmap */
+   BSP_LCD_DrawBitmap((BSP_LCD_GetXSize() - 80) / 2, 65, (uint8_t *)stlogo);
+ 
+   BSP_LCD_SetFont(&Font12);
+   BSP_LCD_DisplayStringAt(0, BSP_LCD_GetYSize() - 20, (uint8_t *)"Copyright (c) STMicroelectronics 2015", CENTER_MODE);
+ 
+   BSP_LCD_SetFont(&Font16);
+   BSP_LCD_SetTextColor(LCD_COLOR_BLUE);
+   BSP_LCD_FillRect(0, BSP_LCD_GetYSize() / 2 + 15, BSP_LCD_GetXSize(), 60);
+   BSP_LCD_SetTextColor(LCD_COLOR_WHITE);
+   BSP_LCD_SetBackColor(LCD_COLOR_BLUE);
+   BSP_LCD_DisplayStringAt(0, BSP_LCD_GetYSize() / 2 + 30, (uint8_t *)"Press User Button to start :", CENTER_MODE);
+   sprintf((char *)desc, "%s example", BSP_examples[DemoIndex].DemoName);
+   BSP_LCD_DisplayStringAt(0, BSP_LCD_GetYSize() / 2 + 45, (uint8_t *)desc, CENTER_MODE);
+ #endif
+ }
+ 
+ 
+ 
+ 
diff -crNb MicorpythonOriginal1.12/micropython/ports/stm32/lcd_init.h micropython1.12_withUlab/micropython/ports/stm32/lcd_init.h
*** MicorpythonOriginal1.12/micropython/ports/stm32/lcd_init.h	1970-01-01 02:00:00.000000000 +0200
--- micropython1.12_withUlab/micropython/ports/stm32/lcd_init.h	2020-06-16 17:27:23.896473514 +0200
***************
*** 0 ****
--- 1,22 ----
+ /*
+  * lcd_init.h
+  *
+  *  Created on: 21 Jul 2017
+  *      Author: graeme
+  */
+ 
+ #ifndef LCD_INIT_H_
+ #define LCD_INIT_H_
+ 
+ #define LTDC_ACTIVE_LAYER	     ((uint32_t)1) /* Layer 1 */
+ 
+ uint32_t BSP_LCD_GetYSize(void);
+ uint32_t BSP_LCD_GetXSize(void);
+ 
+ uint8_t BSP_LCD_Init(void);
+ void BSP_LCD_LayerDefaultInit(uint16_t LayerIndex, uint32_t FB_Address);
+ void Display_DemoDescription(void);
+ 
+ #define SDRAM_DEVICE_ADDR  ((uint32_t)0xC0100000)
+ #define LCD_FRAME_BUFFER	SDRAM_DEVICE_ADDR
+ #endif /* LCD_INIT_H_ */
diff -crNb MicorpythonOriginal1.12/micropython/ports/stm32/led.c micropython1.12_withUlab/micropython/ports/stm32/led.c
*** MicorpythonOriginal1.12/micropython/ports/stm32/led.c	2020-04-13 07:21:17.000000000 +0200
--- micropython1.12_withUlab/micropython/ports/stm32/led.c	2020-06-16 10:42:20.221893533 +0200
***************
*** 31,36 ****
--- 31,38 ----
  #include "timer.h"
  #include "led.h"
  #include "pin.h"
+ #include "lcd_init.h"
+ 
  
  #if defined(MICROPY_HW_LED1)
  
diff -crNb MicorpythonOriginal1.12/micropython/ports/stm32/main.c micropython1.12_withUlab/micropython/ports/stm32/main.c
*** MicorpythonOriginal1.12/micropython/ports/stm32/main.c	2020-04-13 07:21:17.000000000 +0200
--- micropython1.12_withUlab/micropython/ports/stm32/main.c	2020-06-16 18:29:34.734020442 +0200
***************
*** 436,442 ****
      #endif
  
      SCB_EnableICache();
!     SCB_EnableDCache();
  
      #elif defined(STM32L4)
  
--- 436,442 ----
      #endif
  
      SCB_EnableICache();
!     //SCB_EnableDCache();
  
      #elif defined(STM32L4)
  
***************
*** 501,507 ****
      #if MICROPY_HW_SDRAM_SIZE
      sdram_init();
      #if MICROPY_HW_SDRAM_STARTUP_TEST
!     sdram_test(true);
      #endif
      #endif
      #if MICROPY_PY_THREAD
--- 501,507 ----
      #if MICROPY_HW_SDRAM_SIZE
      sdram_init();
      #if MICROPY_HW_SDRAM_STARTUP_TEST
!     //sdram_test(true);
      #endif
      #endif
      #if MICROPY_PY_THREAD
diff -crNb MicorpythonOriginal1.12/micropython/ports/stm32/Makefile micropython1.12_withUlab/micropython/ports/stm32/Makefile
*** MicorpythonOriginal1.12/micropython/ports/stm32/Makefile	2020-04-13 07:21:17.000000000 +0200
--- micropython1.12_withUlab/micropython/ports/stm32/Makefile	2020-06-19 17:22:30.486612202 +0200
***************
*** 1,5 ****
--- 1,6 ----
  # Select the board to build for: if not given on the command line,
  # then default to PYBV10.
+ DEBUG=1
  BOARD ?= PYBV10
  
  # If the build directory is not given, make it reflect the board name.
***************
*** 87,93 ****
  CFLAGS_MCU_h7 = $(CFLAGS_CORTEX_M) -mtune=cortex-m7 -mcpu=cortex-m7
  CFLAGS_MCU_wb = $(CFLAGS_CORTEX_M) -mtune=cortex-m4 -mcpu=cortex-m4
  
! CFLAGS = $(INC) -Wall -Wpointer-arith -Werror -std=gnu99 -nostdlib $(CFLAGS_MOD) $(CFLAGS_EXTRA)
  CFLAGS += -D$(CMSIS_MCU)
  CFLAGS += $(CFLAGS_MCU_$(MCU_SERIES))
  CFLAGS += $(COPT)
--- 88,95 ----
  CFLAGS_MCU_h7 = $(CFLAGS_CORTEX_M) -mtune=cortex-m7 -mcpu=cortex-m7
  CFLAGS_MCU_wb = $(CFLAGS_CORTEX_M) -mtune=cortex-m4 -mcpu=cortex-m4
  
! #CFLAGS = $(INC) -Wall -Wpointer-arith -Werror -std=gnu99 -nostdlib $(CFLAGS_MOD) $(CFLAGS_EXTRA)
! CFLAGS = $(INC) -Wall -Wpointer-arith  -std=gnu99 -nostdlib $(CFLAGS_MOD) $(CFLAGS_EXTRA)
  CFLAGS += -D$(CMSIS_MCU)
  CFLAGS += $(CFLAGS_MCU_$(MCU_SERIES))
  CFLAGS += $(COPT)
***************
*** 205,210 ****
--- 207,213 ----
  	kf_tan.c \
  	log1pf.c \
  	nearbyintf.c \
+     roundf.c \
  	sf_cos.c \
  	sf_erf.c \
  	sf_frexp.c \
***************
*** 298,303 ****
--- 301,311 ----
  	sdram.c \
  	fatfs_port.c \
  	lcd.c \
+ 	lcd_init.c \
+ 	dma_init.c \
+ 	font24.c \
+ 	ts_init.c\
+ 	ft5336.c\
  	accel.c \
  	servo.c \
  	dac.c \
***************
*** 347,352 ****
--- 355,362 ----
  	hal_spi.c \
  	hal_tim.c \
  	hal_tim_ex.c \
+ 	hal_ltdc.c \
+ 	hal_ltdc_ex.c \
  	hal_uart.c \
  	)
  
diff -crNb MicorpythonOriginal1.12/micropython/ports/stm32/mpconfigboard_common.h micropython1.12_withUlab/micropython/ports/stm32/mpconfigboard_common.h
*** MicorpythonOriginal1.12/micropython/ports/stm32/mpconfigboard_common.h	2020-04-13 07:21:17.000000000 +0200
--- micropython1.12_withUlab/micropython/ports/stm32/mpconfigboard_common.h	2020-06-14 17:44:30.000000000 +0200
***************
*** 119,125 ****
  
  // Whether to enable the LCD32MK driver, exposed as pyb.LCD
  #ifndef MICROPY_HW_HAS_LCD
! #define MICROPY_HW_HAS_LCD (0)
  #endif
  
  // The volume label used when creating the flash filesystem
--- 119,125 ----
  
  // Whether to enable the LCD32MK driver, exposed as pyb.LCD
  #ifndef MICROPY_HW_HAS_LCD
! #define MICROPY_HW_HAS_LCD (1)
  #endif
  
  // The volume label used when creating the flash filesystem
diff -crNb MicorpythonOriginal1.12/micropython/ports/stm32/mpconfigport.h micropython1.12_withUlab/micropython/ports/stm32/mpconfigport.h
*** MicorpythonOriginal1.12/micropython/ports/stm32/mpconfigport.h	2020-04-13 07:21:17.000000000 +0200
--- micropython1.12_withUlab/micropython/ports/stm32/mpconfigport.h	2020-06-19 19:36:41.642110748 +0200
***************
*** 31,36 ****
--- 31,40 ----
  #include "mpconfigboard.h"
  #include "mpconfigboard_common.h"
  
+ #ifndef MICROPY_PY_UASYNCIO
+ #define MICROPY_PY_UASYNCIO         (1)
+ #endif
+ 
  // memory allocation policies
  #ifndef MICROPY_GC_STACK_ENTRY_TYPE
  #if MICROPY_HW_SDRAM_SIZE
diff -crNb MicorpythonOriginal1.12/micropython/ports/stm32/mphalport.c micropython1.12_withUlab/micropython/ports/stm32/mphalport.c
*** MicorpythonOriginal1.12/micropython/ports/stm32/mphalport.c	2020-04-13 07:21:17.000000000 +0200
--- micropython1.12_withUlab/micropython/ports/stm32/mphalport.c	2020-06-16 10:08:35.047370943 +0200
***************
*** 7,20 ****
  #include "extmod/misc.h"
  #include "usb.h"
  #include "uart.h"
  
  // this table converts from HAL_StatusTypeDef to POSIX errno
! const byte mp_hal_status_to_errno_table[4] = {
!     [HAL_OK] = 0,
!     [HAL_ERROR] = MP_EIO,
!     [HAL_BUSY] = MP_EBUSY,
!     [HAL_TIMEOUT] = MP_ETIMEDOUT,
! };
  
  NORETURN void mp_hal_raise(HAL_StatusTypeDef status) {
      mp_raise_OSError(mp_hal_status_to_errno_table[status]);
--- 7,17 ----
  #include "extmod/misc.h"
  #include "usb.h"
  #include "uart.h"
+ #include "lcd_init.h"
  
  // this table converts from HAL_StatusTypeDef to POSIX errno
! const byte mp_hal_status_to_errno_table[4] = { [HAL_OK] = 0, [HAL_ERROR
! 		] = MP_EIO, [HAL_BUSY] = MP_EBUSY, [HAL_TIMEOUT] = MP_ETIMEDOUT, };
  
  NORETURN void mp_hal_raise(HAL_StatusTypeDef status) {
  	mp_raise_OSError(mp_hal_status_to_errno_table[status]);
***************
*** 24,31 ****
      uintptr_t ret = 0;
      if (MP_STATE_PORT(pyb_stdio_uart) != NULL) {
          int errcode;
!         const mp_stream_p_t *stream_p = mp_get_stream(MP_STATE_PORT(pyb_stdio_uart));
!         ret = stream_p->ioctl(MP_STATE_PORT(pyb_stdio_uart), MP_STREAM_POLL, poll_flags, &errcode);
      }
      return ret | mp_uos_dupterm_poll(poll_flags);
  }
--- 21,30 ----
  	uintptr_t ret = 0;
  	if (MP_STATE_PORT(pyb_stdio_uart) != NULL) {
  		int errcode;
! 		const mp_stream_p_t *stream_p = mp_get_stream(
! 				MP_STATE_PORT(pyb_stdio_uart));
! 		ret = stream_p->ioctl(MP_STATE_PORT(pyb_stdio_uart), MP_STREAM_POLL,
! 				poll_flags, &errcode);
  	}
  	return ret | mp_uos_dupterm_poll(poll_flags);
  }
***************
*** 41,47 ****
          }
  #endif
  #endif
!         if (MP_STATE_PORT(pyb_stdio_uart) != NULL && uart_rx_any(MP_STATE_PORT(pyb_stdio_uart))) {
              return uart_rx_char(MP_STATE_PORT(pyb_stdio_uart));
          }
          int dupterm_c = mp_uos_dupterm_rx_chr();
--- 40,47 ----
          }
  #endif
  #endif
! 		if (MP_STATE_PORT(pyb_stdio_uart) != NULL
! 				&& uart_rx_any(MP_STATE_PORT(pyb_stdio_uart))) {
  			return uart_rx_char(MP_STATE_PORT(pyb_stdio_uart));
  		}
  		int dupterm_c = mp_uos_dupterm_rx_chr();
***************
*** 101,107 ****
  #endif
  
  void mp_hal_gpio_clock_enable(GPIO_TypeDef *gpio) {
!     #if defined(STM32L476xx) || defined(STM32L496xx)
      if (gpio == GPIOG) {
          // Port G pins 2 thru 15 are powered using VddIO2 on these MCUs.
          HAL_PWREx_EnableVddIO2();
--- 101,107 ----
  #endif
  
  void mp_hal_gpio_clock_enable(GPIO_TypeDef *gpio) {
! #if defined(STM32L476xx) || defined(STM32L496xx)
      if (gpio == GPIOG) {
          // Port G pins 2 thru 15 are powered using VddIO2 on these MCUs.
          HAL_PWREx_EnableVddIO2();
***************
*** 110,122 ****
  
      // This logic assumes that all the GPIOx_EN bits are adjacent and ordered in one register
  
!     #if defined(STM32F0)
      #define AHBxENR AHBENR
      #define AHBxENR_GPIOAEN_Pos RCC_AHBENR_GPIOAEN_Pos
      #elif defined(STM32F4) || defined(STM32F7)
!     #define AHBxENR AHB1ENR
!     #define AHBxENR_GPIOAEN_Pos RCC_AHB1ENR_GPIOAEN_Pos
!     #elif defined(STM32H7)
      #define AHBxENR AHB4ENR
      #define AHBxENR_GPIOAEN_Pos RCC_AHB4ENR_GPIOAEN_Pos
      #elif defined(STM32L0)
--- 110,122 ----
  
  	// This logic assumes that all the GPIOx_EN bits are adjacent and ordered in one register
  
! #if defined(STM32F0)
      #define AHBxENR AHBENR
      #define AHBxENR_GPIOAEN_Pos RCC_AHBENR_GPIOAEN_Pos
      #elif defined(STM32F4) || defined(STM32F7)
! #define AHBxENR AHB1ENR
! #define AHBxENR_GPIOAEN_Pos RCC_AHB1ENR_GPIOAEN_Pos
! #elif defined(STM32H7)
      #define AHBxENR AHB4ENR
      #define AHBxENR_GPIOAEN_Pos RCC_AHB4ENR_GPIOAEN_Pos
      #elif defined(STM32L0)
***************
*** 127,156 ****
      #define AHBxENR_GPIOAEN_Pos RCC_AHB2ENR_GPIOAEN_Pos
      #endif
  
!     uint32_t gpio_idx = ((uint32_t)gpio - GPIOA_BASE) / (GPIOB_BASE - GPIOA_BASE);
      RCC->AHBxENR |= 1 << (AHBxENR_GPIOAEN_Pos + gpio_idx);
      volatile uint32_t tmp = RCC->AHBxENR; // Delay after enabling clock
!     (void)tmp;
  }
  
! void mp_hal_pin_config(mp_hal_pin_obj_t pin_obj, uint32_t mode, uint32_t pull, uint32_t alt) {
      GPIO_TypeDef *gpio = pin_obj->gpio;
      uint32_t pin = pin_obj->pin;
      mp_hal_gpio_clock_enable(gpio);
      gpio->MODER = (gpio->MODER & ~(3 << (2 * pin))) | ((mode & 3) << (2 * pin));
!     #if defined(GPIO_ASCR_ASC0)
      // The L4 has a special analog switch to connect the GPIO to the ADC
      gpio->OTYPER = (gpio->OTYPER & ~(1 << pin)) | (((mode >> 2) & 1) << pin);
      gpio->ASCR = (gpio->ASCR & ~(1 << pin)) | ((mode >> 3) & 1) << pin;
      #else
      gpio->OTYPER = (gpio->OTYPER & ~(1 << pin)) | ((mode >> 2) << pin);
!     #endif
      gpio->OSPEEDR = (gpio->OSPEEDR & ~(3 << (2 * pin))) | (2 << (2 * pin)); // full speed
      gpio->PUPDR = (gpio->PUPDR & ~(3 << (2 * pin))) | (pull << (2 * pin));
!     gpio->AFR[pin >> 3] = (gpio->AFR[pin >> 3] & ~(15 << (4 * (pin & 7)))) | (alt << (4 * (pin & 7)));
  }
  
! bool mp_hal_pin_config_alt(mp_hal_pin_obj_t pin, uint32_t mode, uint32_t pull, uint8_t fn, uint8_t unit) {
      const pin_af_obj_t *af = pin_find_af(pin, fn, unit);
      if (af == NULL) {
          return false;
--- 127,160 ----
      #define AHBxENR_GPIOAEN_Pos RCC_AHB2ENR_GPIOAEN_Pos
      #endif
  
! 	uint32_t gpio_idx = ((uint32_t) gpio - GPIOA_BASE)
! 			/ (GPIOB_BASE - GPIOA_BASE);
  	RCC->AHBxENR |= 1 << (AHBxENR_GPIOAEN_Pos + gpio_idx);
  	volatile uint32_t tmp = RCC->AHBxENR; // Delay after enabling clock
! 	(void) tmp;
  }
  
! void mp_hal_pin_config(mp_hal_pin_obj_t pin_obj, uint32_t mode, uint32_t pull,
! 		uint32_t alt) {
  	GPIO_TypeDef *gpio = pin_obj->gpio;
  	uint32_t pin = pin_obj->pin;
  	mp_hal_gpio_clock_enable(gpio);
  	gpio->MODER = (gpio->MODER & ~(3 << (2 * pin))) | ((mode & 3) << (2 * pin));
! #if defined(GPIO_ASCR_ASC0)
      // The L4 has a special analog switch to connect the GPIO to the ADC
      gpio->OTYPER = (gpio->OTYPER & ~(1 << pin)) | (((mode >> 2) & 1) << pin);
      gpio->ASCR = (gpio->ASCR & ~(1 << pin)) | ((mode >> 3) & 1) << pin;
      #else
  	gpio->OTYPER = (gpio->OTYPER & ~(1 << pin)) | ((mode >> 2) << pin);
! #endif
  	gpio->OSPEEDR = (gpio->OSPEEDR & ~(3 << (2 * pin))) | (2 << (2 * pin)); // full speed
  	gpio->PUPDR = (gpio->PUPDR & ~(3 << (2 * pin))) | (pull << (2 * pin));
! 	gpio->AFR[pin >> 3] = (gpio->AFR[pin >> 3] & ~(15 << (4 * (pin & 7))))
! 			| (alt << (4 * (pin & 7)));
  }
  
! bool mp_hal_pin_config_alt(mp_hal_pin_obj_t pin, uint32_t mode, uint32_t pull,
! 		uint8_t fn, uint8_t unit) {
  	const pin_af_obj_t *af = pin_find_af(pin, fn, unit);
  	if (af == NULL) {
  		return false;
***************
*** 159,164 ****
--- 163,175 ----
  	return true;
  }
  
+ void lcd_function(void)
+ {
+ 	//BSP_LCD_Init();
+ 	//HAL_LTDC_Init(NULL);
+ 
+ }
+ 
  void mp_hal_pin_config_speed(mp_hal_pin_obj_t pin_obj, uint32_t speed) {
  	GPIO_TypeDef *gpio = pin_obj->gpio;
  	uint32_t pin = pin_obj->pin;
***************
*** 167,176 ****
  
  /*******************************************************************************/
  // MAC address
- 
  // Generate a random locally administered MAC address (LAA)
  void mp_hal_generate_laa_mac(int idx, uint8_t buf[6]) {
!     uint8_t *id = (uint8_t *)MP_HAL_UNIQUE_ID_ADDRESS;
      buf[0] = 0x02; // LAA range
      buf[1] = (id[11] << 4) | (id[10] & 0xf);
      buf[2] = (id[9] << 4) | (id[8] & 0xf);
--- 178,186 ----
  
  /*******************************************************************************/
  // MAC address
  // Generate a random locally administered MAC address (LAA)
  void mp_hal_generate_laa_mac(int idx, uint8_t buf[6]) {
! 	uint8_t *id = (uint8_t*) MP_HAL_UNIQUE_ID_ADDRESS;
  	buf[0] = 0x02; // LAA range
  	buf[1] = (id[11] << 4) | (id[10] & 0xf);
  	buf[2] = (id[9] << 4) | (id[8] & 0xf);
diff -crNb MicorpythonOriginal1.12/micropython/ports/stm32/mphalport.h micropython1.12_withUlab/micropython/ports/stm32/mphalport.h
*** MicorpythonOriginal1.12/micropython/ports/stm32/mphalport.h	2020-04-13 07:21:17.000000000 +0200
--- micropython1.12_withUlab/micropython/ports/stm32/mphalport.h	2020-06-16 09:56:08.768703879 +0200
***************
*** 85,87 ****
--- 85,89 ----
  void mp_hal_generate_laa_mac(int idx, uint8_t buf[6]);
  void mp_hal_get_mac(int idx, uint8_t buf[6]);
  void mp_hal_get_mac_ascii(int idx, size_t chr_off, size_t chr_len, char *dest);
+ 
+ void lcd_function(void);
diff -crNb MicorpythonOriginal1.12/micropython/ports/stm32/ts_init.c micropython1.12_withUlab/micropython/ports/stm32/ts_init.c
*** MicorpythonOriginal1.12/micropython/ports/stm32/ts_init.c	1970-01-01 02:00:00.000000000 +0200
--- micropython1.12_withUlab/micropython/ports/stm32/ts_init.c	2020-06-13 11:45:57.000000000 +0200
***************
*** 0 ****
--- 1,346 ----
+ /*
+  * ts_init.c
+  *
+  *  Created on: 22 Jul 2017
+  *      Author: graeme
+  */
+ 
+ /**
+   * @brief  Initializes and configures the touch screen functionalities and
+   *         configures all necessary hardware resources (GPIOs, I2C, clocks..).
+   * @param  ts_SizeX: Maximum X size of the TS area on LCD
+   * @param  ts_SizeY: Maximum Y size of the TS area on LCD
+   * @retval TS_OK if all initializations are OK. Other value if error.
+   */
+ 
+ 
+ #include <stdio.h>
+ #include <string.h>
+ 
+ #include "py/mphal.h"
+ #include "py/nlr.h"
+ #include "py/runtime.h"
+ 
+ #include "pin.h"
+ #include "genhdr/pins.h"
+ #include "bufhelper.h"
+ #include "spi.h"
+ #include "font_petme128_8x8.h"
+ #include "lcd.h"
+ #include "dma_init.h"
+ #include "lcd_init.h"
+ #include "font24.h"
+ #include "ts_init.h"
+ #include "ft5336.h"
+ 
+ 
+ static TS_DrvTypeDef *tsDriver;
+ static uint16_t tsXBoundary, tsYBoundary;
+ static uint8_t  tsOrientation;
+ static uint8_t  I2cAddress;
+ 
+ #define TS_I2C_ADDRESS                   ((uint16_t)0x70)
+ #define TS_SWAP_NONE                    ((uint8_t) 0x01)
+ #define TS_SWAP_X                       ((uint8_t) 0x02)
+ #define TS_SWAP_Y                       ((uint8_t) 0x04)
+ #define TS_SWAP_XY                      ((uint8_t) 0x08)
+ 
+ 
+ 
+ static I2C_HandleTypeDef hI2cAudioHandler = {0};
+ //static I2C_HandleTypeDef hI2cExtHandler = {0};
+ static void I2Cx_Error(I2C_HandleTypeDef *i2c_handler, uint8_t Addr);
+ 
+ /*******************************************************************************
+                             BUS OPERATIONS
+ *******************************************************************************/
+ 
+ /******************************* I2C Routines *********************************/
+ 
+ /**
+   * @brief  Writes a value in a register of the device through BUS in using DMA mode.
+   * @param  i2c_handler : I2C handler
+   * @param  Addr: Device address on BUS Bus.
+   * @param  Reg: The target register address to write
+   * @param  MemAddress: Memory address
+   * @param  Buffer: The target register value to be written
+   * @param  Length: buffer size to be written
+   * @retval HAL status
+   */
+ static HAL_StatusTypeDef I2Cx_WriteMultiple(I2C_HandleTypeDef *i2c_handler,
+                                             uint8_t Addr,
+                                             uint16_t Reg,
+                                             uint16_t MemAddress,
+                                             uint8_t *Buffer,
+                                             uint16_t Length)
+ {
+   HAL_StatusTypeDef status = HAL_OK;
+ 
+   status = HAL_I2C_Mem_Write(i2c_handler, Addr, (uint16_t)Reg, MemAddress, Buffer, Length, 1000);
+ 
+   /* Check the communication status */
+   if(status != HAL_OK)
+   {
+     /* Re-Initiaize the I2C Bus */
+     I2Cx_Error(i2c_handler, Addr);
+   }
+   return status;
+ }
+ 
+ /**
+   * @brief  Initializes I2C MSP.
+   * @param  i2c_handler : I2C handler
+   * @retval None
+   */
+ static void I2Cx_MspInit(I2C_HandleTypeDef *i2c_handler)
+ {
+   GPIO_InitTypeDef  gpio_init_structure;
+ 
+   if (i2c_handler == (I2C_HandleTypeDef*)(&hI2cAudioHandler))
+   {
+     /* AUDIO and LCD I2C MSP init */
+ 
+     /*** Configure the GPIOs ***/
+     /* Enable GPIO clock */
+     DISCOVERY_AUDIO_I2Cx_SCL_SDA_GPIO_CLK_ENABLE();
+ 
+     /* Configure I2C Tx as alternate function */
+     gpio_init_structure.Pin = DISCOVERY_AUDIO_I2Cx_SCL_PIN;
+     gpio_init_structure.Mode = GPIO_MODE_AF_OD;
+     gpio_init_structure.Pull = GPIO_NOPULL;
+     gpio_init_structure.Speed = GPIO_SPEED_FAST;
+     gpio_init_structure.Alternate = DISCOVERY_AUDIO_I2Cx_SCL_SDA_AF;
+     HAL_GPIO_Init(DISCOVERY_AUDIO_I2Cx_SCL_SDA_GPIO_PORT, &gpio_init_structure);
+ 
+     /* Configure I2C Rx as alternate function */
+     gpio_init_structure.Pin = DISCOVERY_AUDIO_I2Cx_SDA_PIN;
+     HAL_GPIO_Init(DISCOVERY_AUDIO_I2Cx_SCL_SDA_GPIO_PORT, &gpio_init_structure);
+ 
+     /*** Configure the I2C peripheral ***/
+     /* Enable I2C clock */
+     DISCOVERY_AUDIO_I2Cx_CLK_ENABLE();
+ 
+     /* Force the I2C peripheral clock reset */
+     DISCOVERY_AUDIO_I2Cx_FORCE_RESET();
+ 
+     /* Release the I2C peripheral clock reset */
+     DISCOVERY_AUDIO_I2Cx_RELEASE_RESET();
+ 
+     /* Enable and set I2Cx Interrupt to a lower priority */
+     HAL_NVIC_SetPriority(DISCOVERY_AUDIO_I2Cx_EV_IRQn, 0x05, 0);
+     HAL_NVIC_EnableIRQ(DISCOVERY_AUDIO_I2Cx_EV_IRQn);
+ 
+     /* Enable and set I2Cx Interrupt to a lower priority */
+     HAL_NVIC_SetPriority(DISCOVERY_AUDIO_I2Cx_ER_IRQn, 0x05, 0);
+     HAL_NVIC_EnableIRQ(DISCOVERY_AUDIO_I2Cx_ER_IRQn);
+   }
+   else
+   {
+     /* External, camera and Arduino connector I2C MSP init */
+ 
+     /*** Configure the GPIOs ***/
+     /* Enable GPIO clock */
+     DISCOVERY_EXT_I2Cx_SCL_SDA_GPIO_CLK_ENABLE();
+ 
+     /* Configure I2C Tx as alternate function */
+     gpio_init_structure.Pin = DISCOVERY_EXT_I2Cx_SCL_PIN;
+     gpio_init_structure.Mode = GPIO_MODE_AF_OD;
+     gpio_init_structure.Pull = GPIO_NOPULL;
+     gpio_init_structure.Speed = GPIO_SPEED_FAST;
+     gpio_init_structure.Alternate = DISCOVERY_EXT_I2Cx_SCL_SDA_AF;
+     HAL_GPIO_Init(DISCOVERY_EXT_I2Cx_SCL_SDA_GPIO_PORT, &gpio_init_structure);
+ 
+     /* Configure I2C Rx as alternate function */
+     gpio_init_structure.Pin = DISCOVERY_EXT_I2Cx_SDA_PIN;
+     HAL_GPIO_Init(DISCOVERY_EXT_I2Cx_SCL_SDA_GPIO_PORT, &gpio_init_structure);
+ 
+     /*** Configure the I2C peripheral ***/
+     /* Enable I2C clock */
+     DISCOVERY_EXT_I2Cx_CLK_ENABLE();
+ 
+     /* Force the I2C peripheral clock reset */
+     DISCOVERY_EXT_I2Cx_FORCE_RESET();
+ 
+     /* Release the I2C peripheral clock reset */
+     DISCOVERY_EXT_I2Cx_RELEASE_RESET();
+ 
+     /* Enable and set I2Cx Interrupt to a lower priority */
+     HAL_NVIC_SetPriority(DISCOVERY_EXT_I2Cx_EV_IRQn, 0x05, 0);
+     HAL_NVIC_EnableIRQ(DISCOVERY_EXT_I2Cx_EV_IRQn);
+ 
+     /* Enable and set I2Cx Interrupt to a lower priority */
+     HAL_NVIC_SetPriority(DISCOVERY_EXT_I2Cx_ER_IRQn, 0x05, 0);
+     HAL_NVIC_EnableIRQ(DISCOVERY_EXT_I2Cx_ER_IRQn);
+   }
+ }
+ 
+ /**
+   * @brief  Initializes I2C HAL.
+   * @param  i2c_handler : I2C handler
+   * @retval None
+   */
+ static void I2Cx_Init(I2C_HandleTypeDef *i2c_handler)
+ {
+   if(HAL_I2C_GetState(i2c_handler) == HAL_I2C_STATE_RESET)
+   {
+     if (i2c_handler == (I2C_HandleTypeDef*)(&hI2cAudioHandler))
+     {
+       /* Audio and LCD I2C configuration */
+       i2c_handler->Instance = DISCOVERY_AUDIO_I2Cx;
+     }
+     else
+     {
+       /* External, camera and Arduino connector  I2C configuration */
+       i2c_handler->Instance = DISCOVERY_EXT_I2Cx;
+     }
+     i2c_handler->Init.Timing           = DISCOVERY_I2Cx_TIMING;
+     i2c_handler->Init.OwnAddress1      = 0;
+     i2c_handler->Init.AddressingMode   = I2C_ADDRESSINGMODE_7BIT;
+     i2c_handler->Init.DualAddressMode  = I2C_DUALADDRESS_DISABLE;
+     i2c_handler->Init.OwnAddress2      = 0;
+     i2c_handler->Init.GeneralCallMode  = I2C_GENERALCALL_DISABLE;
+     i2c_handler->Init.NoStretchMode    = I2C_NOSTRETCH_DISABLE;
+ 
+     /* Init the I2C */
+     I2Cx_MspInit(i2c_handler);
+     HAL_I2C_Init(i2c_handler);
+   }
+ }
+ 
+ 
+ /**
+   * @brief  Manages error callback by re-initializing I2C.
+   * @param  i2c_handler : I2C handler
+   * @param  Addr: I2C Address
+   * @retval None
+   */
+ static void I2Cx_Error(I2C_HandleTypeDef *i2c_handler, uint8_t Addr)
+ {
+   /* De-initialize the I2C communication bus */
+   HAL_I2C_DeInit(i2c_handler);
+ 
+   /* Re-Initialize the I2C communication bus */
+   I2Cx_Init(i2c_handler);
+ }
+ 
+ 
+ /**
+   * @brief  Reads multiple data.
+   * @param  i2c_handler : I2C handler
+   * @param  Addr: I2C address
+   * @param  Reg: Reg address
+   * @param  MemAddress: Memory address
+   * @param  Buffer: Pointer to data buffer
+   * @param  Length: Length of the data
+   * @retval Number of read data
+   */
+ static HAL_StatusTypeDef I2Cx_ReadMultiple(I2C_HandleTypeDef *i2c_handler,
+                                            uint8_t Addr,
+                                            uint16_t Reg,
+                                            uint16_t MemAddress,
+                                            uint8_t *Buffer,
+                                            uint16_t Length)
+ {
+   HAL_StatusTypeDef status = HAL_OK;
+ 
+   status = HAL_I2C_Mem_Read(i2c_handler, Addr, (uint16_t)Reg, MemAddress, Buffer, Length, 1000);
+ 
+   /* Check the communication status */
+   if(status != HAL_OK)
+   {
+     /* I2C error occurred */
+     I2Cx_Error(i2c_handler, Addr);
+   }
+   return status;
+ }
+ 
+ 
+ 
+ 
+ /**
+   * @brief  Writes a single data.
+   * @param  Addr: I2C address
+   * @param  Reg: Reg address
+   * @param  Value: Data to be written
+   * @retval None
+   */
+ void TS_IO_Write(uint8_t Addr, uint8_t Reg, uint8_t Value)
+ {
+   I2Cx_WriteMultiple(&hI2cAudioHandler, Addr, (uint16_t)Reg, I2C_MEMADD_SIZE_8BIT,(uint8_t*)&Value, 1);
+ }
+ 
+ /**
+   * @brief  Initializes Touchscreen low level.
+   * @retval None
+   */
+ void TS_IO_Init(void)
+ {
+   I2Cx_Init(&hI2cAudioHandler);
+ }
+ 
+ 
+ 
+ /**
+   * @brief  Reads a single data.
+   * @param  Addr: I2C address
+   * @param  Reg: Reg address
+   * @retval Data to be read
+   */
+ uint8_t TS_IO_Read(uint8_t Addr, uint8_t Reg)
+ {
+   uint8_t read_value = 0;
+ 
+   I2Cx_ReadMultiple(&hI2cAudioHandler, Addr, Reg, I2C_MEMADD_SIZE_8BIT, (uint8_t*)&read_value, 1);
+ 
+   return read_value;
+ }
+ 
+ /**
+   * @brief  TS delay
+   * @param  Delay: Delay in ms
+   * @retval None
+   */
+ void TS_IO_Delay(uint32_t Delay)
+ {
+   HAL_Delay(Delay);
+ }
+ 
+ 
+ uint8_t BSP_TS_Init(uint16_t ts_SizeX, uint16_t ts_SizeY);
+ void TS_Init(void)
+ {
+ 	BSP_TS_Init(BSP_LCD_GetXSize(), BSP_LCD_GetYSize());
+ }
+ 
+ 
+ uint8_t BSP_TS_Init(uint16_t ts_SizeX, uint16_t ts_SizeY)
+ {
+   uint8_t status = TS_OK;
+   tsXBoundary = ts_SizeX;
+   tsYBoundary = ts_SizeY;
+ 
+   /* Read ID and verify if the touch screen driver is ready */
+   ft5336_ts_drv.Init(TS_I2C_ADDRESS);
+   if(ft5336_ts_drv.ReadID(TS_I2C_ADDRESS) == FT5336_ID_VALUE)
+   {
+     /* Initialize the TS driver structure */
+     tsDriver = &ft5336_ts_drv;
+     I2cAddress = TS_I2C_ADDRESS;
+     tsOrientation = TS_SWAP_XY;
+ 
+     /* Initialize the TS driver */
+     tsDriver->Start(I2cAddress);
+   }
+   else
+   {
+     status = TS_DEVICE_NOT_FOUND;
+   }
+ 
+   return status;
+ }
+ 
+ 
+ 
+ 
+ 
+ 
diff -crNb MicorpythonOriginal1.12/micropython/ports/stm32/ts_init.h micropython1.12_withUlab/micropython/ports/stm32/ts_init.h
*** MicorpythonOriginal1.12/micropython/ports/stm32/ts_init.h	1970-01-01 02:00:00.000000000 +0200
--- micropython1.12_withUlab/micropython/ports/stm32/ts_init.h	2020-06-13 11:45:57.000000000 +0200
***************
*** 0 ****
--- 1,109 ----
+ /*
+  * ts_init.h
+  *
+  *  Created on: 22 Jul 2017
+  *      Author: graeme
+  */
+ 
+ #ifndef TS_INIT_H_
+ #define TS_INIT_H_
+ 
+ void TS_IO_Write(uint8_t Addr, uint8_t Reg, uint8_t Value);
+ void TS_IO_Init(void);
+ void TS_IO_Delay(uint32_t Delay);
+ uint8_t TS_IO_Read(uint8_t Addr, uint8_t Reg);
+ 
+ 
+ void TS_Init(void);
+ 
+ /** @defgroup TS_Driver_structure  Touch Sensor Driver structure
+   * @{
+   */
+ typedef struct
+ {
+   void       (*Init)(uint16_t);
+   uint16_t   (*ReadID)(uint16_t);
+   void       (*Reset)(uint16_t);
+   void       (*Start)(uint16_t);
+   uint8_t    (*DetectTouch)(uint16_t);
+   void       (*GetXY)(uint16_t, uint16_t*, uint16_t*);
+   void       (*EnableIT)(uint16_t);
+   void       (*ClearIT)(uint16_t);
+   uint8_t    (*GetITStatus)(uint16_t);
+   void       (*DisableIT)(uint16_t);
+ }TS_DrvTypeDef;
+ 
+ /** @defgroup STM32746G_DISCOVERY_TS_Exported_Constants STM32746G_DISCOVERY_TS Exported Constants
+   * @{
+   */
+ 
+ typedef enum
+ {
+   TS_OK                = 0x00, /*!< Touch Ok */
+   TS_ERROR             = 0x01, /*!< Touch Error */
+   TS_TIMEOUT           = 0x02, /*!< Touch Timeout */
+   TS_DEVICE_NOT_FOUND  = 0x03  /*!< Touchscreen device not found */
+ }TS_StatusTypeDef;
+ 
+ /**
+  *  @brief TS_GestureIdTypeDef
+  *  Define Possible managed gesture identification values returned by touch screen
+  *  driver.
+  */
+ typedef enum
+ {
+   GEST_ID_NO_GESTURE = 0x00, /*!< Gesture not defined / recognized */
+   GEST_ID_MOVE_UP    = 0x01, /*!< Gesture Move Up */
+   GEST_ID_MOVE_RIGHT = 0x02, /*!< Gesture Move Right */
+   GEST_ID_MOVE_DOWN  = 0x03, /*!< Gesture Move Down */
+   GEST_ID_MOVE_LEFT  = 0x04, /*!< Gesture Move Left */
+   GEST_ID_ZOOM_IN    = 0x05, /*!< Gesture Zoom In */
+   GEST_ID_ZOOM_OUT   = 0x06, /*!< Gesture Zoom Out */
+   GEST_ID_NB_MAX     = 0x07  /*!< max number of gesture id */
+ 
+ } TS_GestureIdTypeDef;
+ 
+ 
+ /* User can use this section to tailor I2Cx/I2Cx instance used and associated
+    resources */
+ /* Definition for AUDIO and LCD I2Cx resources */
+ #define DISCOVERY_AUDIO_I2Cx                             I2C3
+ #define DISCOVERY_AUDIO_I2Cx_CLK_ENABLE()                __HAL_RCC_I2C3_CLK_ENABLE()
+ #define DISCOVERY_AUDIO_DMAx_CLK_ENABLE()                __HAL_RCC_DMA1_CLK_ENABLE()
+ #define DISCOVERY_AUDIO_I2Cx_SCL_SDA_GPIO_CLK_ENABLE()   __HAL_RCC_GPIOH_CLK_ENABLE()
+ 
+ #define DISCOVERY_AUDIO_I2Cx_FORCE_RESET()               __HAL_RCC_I2C3_FORCE_RESET()
+ #define DISCOVERY_AUDIO_I2Cx_RELEASE_RESET()             __HAL_RCC_I2C3_RELEASE_RESET()
+ 
+ /* Definition for I2Cx Pins */
+ #define DISCOVERY_AUDIO_I2Cx_SCL_PIN                     GPIO_PIN_7
+ #define DISCOVERY_AUDIO_I2Cx_SCL_SDA_GPIO_PORT           GPIOH
+ #define DISCOVERY_AUDIO_I2Cx_SCL_SDA_AF                  GPIO_AF4_I2C3
+ #define DISCOVERY_AUDIO_I2Cx_SDA_PIN                     GPIO_PIN_8
+ 
+ /* I2C interrupt requests */
+ #define DISCOVERY_AUDIO_I2Cx_EV_IRQn                     I2C3_EV_IRQn
+ #define DISCOVERY_AUDIO_I2Cx_ER_IRQn                     I2C3_ER_IRQn
+ 
+ /* Definition for external, camera and Arduino connector I2Cx resources */
+ #define DISCOVERY_EXT_I2Cx                               I2C1
+ #define DISCOVERY_EXT_I2Cx_CLK_ENABLE()                  __HAL_RCC_I2C1_CLK_ENABLE()
+ #define DISCOVERY_EXT_DMAx_CLK_ENABLE()                  __HAL_RCC_DMA1_CLK_ENABLE()
+ #define DISCOVERY_EXT_I2Cx_SCL_SDA_GPIO_CLK_ENABLE()     __HAL_RCC_GPIOB_CLK_ENABLE()
+ 
+ #define DISCOVERY_EXT_I2Cx_FORCE_RESET()                 __HAL_RCC_I2C1_FORCE_RESET()
+ #define DISCOVERY_EXT_I2Cx_RELEASE_RESET()               __HAL_RCC_I2C1_RELEASE_RESET()
+ 
+ /* Definition for I2Cx Pins */
+ #define DISCOVERY_EXT_I2Cx_SCL_PIN                       GPIO_PIN_8
+ #define DISCOVERY_EXT_I2Cx_SCL_SDA_GPIO_PORT             GPIOB
+ #define DISCOVERY_EXT_I2Cx_SCL_SDA_AF                    GPIO_AF4_I2C1
+ #define DISCOVERY_EXT_I2Cx_SDA_PIN                       GPIO_PIN_9
+ 
+ /* I2C interrupt requests */
+ #define DISCOVERY_EXT_I2Cx_EV_IRQn                       I2C1_EV_IRQn
+ #define DISCOVERY_EXT_I2Cx_ER_IRQn                       I2C1_ER_IRQn
+ #define DISCOVERY_I2Cx_TIMING                      ((uint32_t)0x40912732)
+ 
+ 
+ #endif /* TS_INIT_H_ */
diff -crNb MicorpythonOriginal1.12/micropython/ports/stm32/Untitled.ipynb micropython1.12_withUlab/micropython/ports/stm32/Untitled.ipynb
*** MicorpythonOriginal1.12/micropython/ports/stm32/Untitled.ipynb	1970-01-01 02:00:00.000000000 +0200
--- micropython1.12_withUlab/micropython/ports/stm32/Untitled.ipynb	2020-06-19 21:41:49.248547223 +0200
***************
*** 0 ****
--- 1,859 ----
+ {
+  "cells": [
+   {
+    "cell_type": "code",
+    "execution_count": 104,
+    "metadata": {},
+    "outputs": [
+     {
+      "name": "stdout",
+      "output_type": "stream",
+      "text": [
+       "Found serial ports: /dev/ttyACM0, /dev/ttyS0 \n",
+       "\u001b[34mConnecting to --port=/dev/ttyACM0 --baud=115200 \u001b[0m\n",
+       "\u001b[34mReady.\n",
+       "\u001b[0m"
+      ]
+     }
+    ],
+    "source": [
+     "%serialconnect ttyACM0"
+    ]
+   },
+   {
+    "cell_type": "code",
+    "execution_count": 145,
+    "metadata": {},
+    "outputs": [],
+    "source": [
+     "import ulab as np\n",
+     "import pyb\n",
+     "import uasyncio\n",
+     "from pyb import LCD\n",
+     "lcd = LCD(0)\n",
+     "\n",
+     "\n",
+     "\n",
+     "lcd.showimage('test.data')\n",
+     "\n",
+     "lcd.drawline(0,0,400,220,0xffffff)\n"
+    ]
+   },
+   {
+    "cell_type": "code",
+    "execution_count": null,
+    "metadata": {},
+    "outputs": [],
+    "source": [
+     "lcd.drawline(0,0,200,220,0xffffff)"
+    ]
+   },
+   {
+    "cell_type": "code",
+    "execution_count": null,
+    "metadata": {},
+    "outputs": [],
+    "source": [
+     "print(a)"
+    ]
+   },
+   {
+    "cell_type": "code",
+    "execution_count": null,
+    "metadata": {},
+    "outputs": [],
+    "source": [
+     "i"
+    ]
+   },
+   {
+    "cell_type": "code",
+    "execution_count": null,
+    "metadata": {},
+    "outputs": [],
+    "source": [
+     "import asyncio"
+    ]
+   },
+   {
+    "cell_type": "code",
+    "execution_count": 85,
+    "metadata": {},
+    "outputs": [
+     {
+      "name": "stdout",
+      "output_type": "stream",
+      "text": [
+       "waiting for lock\n",
+       "Acquired lock in task 1\n",
+       "waiting for lock\n",
+       "Acquired lock in task 2\n",
+       "35\n",
+       "waiting for lock\n",
+       "Acquired lock in task 3\n",
+       "waiting for lock\n",
+       "Acquired lock in task 1\n",
+       "36\n",
+       "waiting for lock\n",
+       "Acquired lock in task 2\n",
+       ".waiting for lock\n",
+       "Acquired lock in task 3\n",
+       "37\n",
+       "waiting for lock\n",
+       "Acquired lock in task 1\n",
+       "waiting for lock\n",
+       "Acquired lock in task 2\n",
+       "38\n",
+       "waiting for lock\n",
+       "Acquired lock in task 3\n",
+       "waiting for lock\n",
+       "Acquired lock in task 1\n",
+       "39\n",
+       "waiting for lock\n",
+       "Acquired lock in task 2\n",
+       "waiting for lock\n",
+       "Acquired lock in task 3\n",
+       "40\n",
+       "waiting for lock\n",
+       "Acquired lock in task 1\n",
+       "waiting for lock\n",
+       "Acquired lock in task 2\n",
+       "41\n",
+       "waiting for lock\n",
+       "Acquired lock in task 3\n",
+       "waiting for lock\n",
+       "Acquired lock in task 1\n",
+       "42\n",
+       "waiting for lock\n",
+       "Acquired lock in task 2\n",
+       "waiting for lock\n",
+       "Acquired lock in task 3\n",
+       "43\n",
+       "waiting for lock\n",
+       "Acquired lock in task 1\n",
+       "waiting for lock\n",
+       "Acquired lock in task 2\n",
+       "44\n",
+       "waiting for lock\n",
+       "Acquired lock in task 3\n",
+       "waiting for lock\n",
+       "Acquired lock in task 1\n",
+       "45\n",
+       "waiting for lock\n",
+       "Acquired lock in task 2\n",
+       "waiting for lock\n",
+       "Acquired lock in task 3\n",
+       "46\n",
+       "waiting for lock\n",
+       "Acquired lock in task 1\n",
+       "waiting for lock\n",
+       "Acquired lock in task 2\n",
+       "47\n",
+       "waiting for lock\n",
+       "Acquired lock in task 3\n",
+       "waiting for lock\n",
+       "Acquired lock in task 1\n",
+       "48\n",
+       "waiting for lock\n",
+       "Acquired lock in task 2\n",
+       "waiting for lock\n",
+       "Acquired lock in task 3\n",
+       "49\n",
+       "MicroPython v1.12 on 2020-06-19; F7DISC with STM32F746\n",
+       "Type \"help()\" for more information.\n",
+       ">>>[reboot detected 0]repl is in normal command mode\n",
+       "[\\r\\x03\\x03] b'\\r\\n>>> '\n",
+       "[\\r\\x01] b'\\r\\n>>> \\r\\nraw REPL; CTRL-B to exit\\r\\n>' "
+      ]
+     }
+    ],
+    "source": [
+     "import uasyncio as asyncio\n",
+     "async def bar():\n",
+     "    count = 0\n",
+     "    while True:\n",
+     "        count += 1\n",
+     "        print(count)\n",
+     "        await asyncio.sleep(1)  # Pause 1s\n",
+     "\n",
+     "loop = asyncio.get_event_loop()\n",
+     "loop.create_task(bar()) # Schedule ASAP\n",
+     "loop.run_forever()\n"
+    ]
+   },
+   {
+    "cell_type": "code",
+    "execution_count": 90,
+    "metadata": {},
+    "outputs": [
+     {
+      "name": "stderr",
+      "output_type": "stream",
+      "text": [
+       "Traceback (most recent call last):\n",
+       "  File \"<stdin>\", line 3, in <module>\n",
+       "  File \"uasyncio/queues.py\", line 1, in <module>\n",
+       "ImportError: no module named 'collections'\n"
+      ]
+     }
+    ],
+    "source": [
+     "import uasyncio as asyncio\n",
+     "from uasyncio.synchro import Lock\n",
+     "from uasyncio import queues\n",
+     "\n",
+     "\n",
+     "async def task(i, lock):\n",
+     "    while 1:\n",
+     "        print('waiting for lock')\n",
+     "        await lock.acquire()\n",
+     "        print(\"Acquired lock in task\", i)\n",
+     "        await asyncio.sleep(0.5)\n",
+     "        lock.release()\n",
+     "\n",
+     "async def killer():\n",
+     "    await asyncio.sleep(30)\n",
+     "\n",
+     "loop = asyncio.get_event_loop()\n",
+     "\n",
+     "lock = Lock()  # The global Lock instance\n",
+     "lock.release()\n",
+     "\n",
+     "loop.create_task(task(1, lock))\n",
+     "loop.create_task(task(2, lock))\n",
+     "loop.create_task(task(3, lock))\n",
+     "\n",
+     "loop.run_until_complete(killer())  # Run for 10s"
+    ]
+   },
+   {
+    "cell_type": "code",
+    "execution_count": null,
+    "metadata": {},
+    "outputs": [],
+    "source": [
+     "print('hello')\n"
+    ]
+   },
+   {
+    "cell_type": "code",
+    "execution_count": 91,
+    "metadata": {},
+    "outputs": [
+     {
+      "name": "stderr",
+      "output_type": "stream",
+      "text": [
+       "Traceback (most recent call last):\n",
+       "  File \"<stdin>\", line 1, in <module>\n",
+       "ImportError: cannot import name Queue\n"
+      ]
+     }
+    ],
+    "source": [
+     "from uasyncio.queues import Queue"
+    ]
+   },
+   {
+    "cell_type": "code",
+    "execution_count": 92,
+    "metadata": {},
+    "outputs": [],
+    "source": [
+     "from uasyncio.core import sleep"
+    ]
+   },
+   {
+    "cell_type": "code",
+    "execution_count": 94,
+    "metadata": {},
+    "outputs": [],
+    "source": [
+     "sleep(1000)"
+    ]
+   },
+   {
+    "cell_type": "code",
+    "execution_count": 95,
+    "metadata": {},
+    "outputs": [
+     {
+      "name": "stdout",
+      "output_type": "stream",
+      "text": [
+       "waiting for foo\n",
+       "__await__ called\n",
+       "__await__ called\n",
+       "__await__ called\n",
+       "__await__ called\n",
+       "__await__ called\n",
+       ".done 42\n"
+      ]
+     }
+    ],
+    "source": [
+     "import uasyncio as asyncio\n",
+     "\n",
+     "class Foo():\n",
+     "    def __await__(self):\n",
+     "        for n in range(5):\n",
+     "            print('__await__ called')\n",
+     "            yield from asyncio.sleep(1) # Other coros get scheduled here\n",
+     "        return 42\n",
+     "\n",
+     "    __iter__ = __await__  # See note below\n",
+     "\n",
+     "async def bar():\n",
+     "    foo = Foo()  # Foo is an awaitable class\n",
+     "    print('waiting for foo')\n",
+     "    res = await foo  # Retrieve result\n",
+     "    print('done', res)\n",
+     "\n",
+     "loop = asyncio.get_event_loop()\n",
+     "loop.run_until_complete(bar())"
+    ]
+   },
+   {
+    "cell_type": "code",
+    "execution_count": 96,
+    "metadata": {},
+    "outputs": [
+     {
+      "name": "stdout",
+      "output_type": "stream",
+      "text": [
+       "waiting for foo\n",
+       "__await__ called\n",
+       "__await__ called\n",
+       "__await__ called\n",
+       "__await__ called\n",
+       "__await__ called\n",
+       "done 32\n"
+      ]
+     }
+    ],
+    "source": [
+     "up = False  # Running under MicroPython?\n",
+     "try:\n",
+     "    import uasyncio as asyncio\n",
+     "    up = True  # Or can use sys.implementation.name\n",
+     "except ImportError:\n",
+     "    import asyncio\n",
+     "\n",
+     "async def times_two(n):  # Coro to await\n",
+     "    await asyncio.sleep(1)\n",
+     "    return 2 * n\n",
+     "\n",
+     "class Foo():\n",
+     "    def __await__(self):\n",
+     "        res = 1\n",
+     "        for n in range(5):\n",
+     "            print('__await__ called')\n",
+     "            if up:  # MicroPython\n",
+     "                res = yield from times_two(res)\n",
+     "            else:  # CPython\n",
+     "                res = yield from times_two(res).__await__()\n",
+     "        return res\n",
+     "\n",
+     "    __iter__ = __await__\n",
+     "\n",
+     "async def bar():\n",
+     "    foo = Foo()  # foo is awaitable\n",
+     "    print('waiting for foo')\n",
+     "    res = await foo  # Retrieve value\n",
+     "    print('done', res)\n",
+     "\n",
+     "loop = asyncio.get_event_loop()\n",
+     "loop.run_until_complete(bar())"
+    ]
+   },
+   {
+    "cell_type": "code",
+    "execution_count": 98,
+    "metadata": {},
+    "outputs": [
+     {
+      "name": "stdout",
+      "output_type": "stream",
+      "text": [
+       "About to throw exception.\n",
+       "foo was interrupted by zero division\n",
+       "Shutdown is running.\n",
+       "done\n"
+      ]
+     }
+    ],
+    "source": [
+     "import uasyncio as asyncio\n",
+     "async def foo():\n",
+     "    await asyncio.sleep(3)\n",
+     "    print('About to throw exception.')\n",
+     "    1/0\n",
+     "\n",
+     "async def bar():\n",
+     "    try:\n",
+     "        await foo()\n",
+     "    except ZeroDivisionError:\n",
+     "        print('foo was interrupted by zero division')  # Happens\n",
+     "        raise  # Force shutdown to run by propagating to loop.\n",
+     "    except KeyboardInterrupt:\n",
+     "        print('foo was interrupted by ctrl-c')  # NEVER HAPPENS\n",
+     "        raise\n",
+     "\n",
+     "async def shutdown():\n",
+     "    print('Shutdown is running.')  # Happens in both cases\n",
+     "    await asyncio.sleep(1)\n",
+     "    print('done')\n",
+     "\n",
+     "loop = asyncio.get_event_loop()\n",
+     "try:\n",
+     "    loop.run_until_complete(bar())\n",
+     "except ZeroDivisionError:\n",
+     "    loop.run_until_complete(shutdown())\n",
+     "except KeyboardInterrupt:\n",
+     "    print('Keyboard interrupt at loop level.')\n",
+     "    loop.run_until_complete(shutdown())"
+    ]
+   },
+   {
+    "cell_type": "code",
+    "execution_count": 99,
+    "metadata": {},
+    "outputs": [
+     {
+      "name": "stdout",
+      "output_type": "stream",
+      "text": [
+       "Starting\n",
+       "Got here\n",
+       "Got here\n",
+       "Got here\n",
+       "Got here\n",
+       "Got here\n",
+       "Got here\n",
+       "Got here\n",
+       "Got here\n",
+       "Got here\n",
+       "Got here\n",
+       "Got here\n",
+       "Got here\n",
+       "Got here\n",
+       "Got here\n",
+       "Got here\n",
+       "Got here\n",
+       "Got timeout\n",
+       "."
+      ]
+     }
+    ],
+    "source": [
+     "import uasyncio as asyncio\n",
+     "\n",
+     "async def forever():\n",
+     "    try:\n",
+     "        print('Starting')\n",
+     "        while True:\n",
+     "            await asyncio.sleep_ms(300)\n",
+     "            print('Got here')\n",
+     "    except asyncio.TimeoutError:\n",
+     "        print('Got timeout')  # And return\n",
+     "\n",
+     "async def foo():\n",
+     "    await asyncio.wait_for(forever(), 5)\n",
+     "    await asyncio.sleep(2)\n",
+     "\n",
+     "loop = asyncio.get_event_loop()\n",
+     "loop.run_until_complete(foo())"
+    ]
+   },
+   {
+    "cell_type": "code",
+    "execution_count": 103,
+    "metadata": {},
+    "outputs": [
+     {
+      "name": "stdout",
+      "output_type": "stream",
+      "text": [
+       ".....MicroPython v1.12 on 2020-06-19; F7DISC with STM32F746\n",
+       "Type \"help()\" for more information.\n",
+       ">>>[reboot detected 0]repl is in normal command mode\n",
+       "[\\r\\x03\\x03] b'\\r\\n>>> '\n",
+       "[\\r\\x01] b'\\r\\n>>> \\r\\nraw REPL; CTRL-B to exit\\r\\n>' "
+      ]
+     }
+    ],
+    "source": [
+     "import uasyncio as asyncio\n",
+     "from pyb import UART\n",
+     "\n",
+     "class RecordOrientedUart():\n",
+     "    DELIMITER = b'\\0'\n",
+     "    def __init__(self):\n",
+     "        self.uart = UART(6, 9600)\n",
+     "        self.data = b''\n",
+     "\n",
+     "    def __iter__(self):  # Not __await__ issue #2678\n",
+     "        data = b''\n",
+     "        while not data.endswith(self.DELIMITER):\n",
+     "            yield from asyncio.sleep(0) # Necessary because:\n",
+     "            while not self.uart.any():\n",
+     "                yield from asyncio.sleep(0) # timing may mean this is never called\n",
+     "            data = b''.join((data, self.uart.read(self.uart.any())))\n",
+     "        self.data = data\n",
+     "\n",
+     "    async def send_record(self, data):\n",
+     "        data = b''.join((data, self.DELIMITER))\n",
+     "        self.uart.write(data)\n",
+     "        await self._send_complete()\n",
+     "\n",
+     "    # In a real device driver we would poll the hardware\n",
+     "    # for completion in a loop with await asyncio.sleep(0)\n",
+     "    async def _send_complete(self):\n",
+     "        await asyncio.sleep(0.1)\n",
+     "\n",
+     "    def read_record(self):  # Synchronous: await the object before calling\n",
+     "        return self.data[0:-1] # Discard delimiter\n",
+     "\n",
+     "async def run():\n",
+     "    foo = RecordOrientedUart()\n",
+     "    rx_data = b''\n",
+     "    await foo.send_record(b'A line of text.')\n",
+     "    for _ in range(20):\n",
+     "        await foo  # Other coros are scheduled while we wait\n",
+     "        rx_data = foo.read_record()\n",
+     "        print('Got: {}'.format(rx_data))\n",
+     "        await foo.send_record(rx_data)\n",
+     "        rx_data = b''\n",
+     "\n",
+     "loop = asyncio.get_event_loop()\n",
+     "loop.run_until_complete(run())\n"
+    ]
+   },
+   {
+    "cell_type": "code",
+    "execution_count": 106,
+    "metadata": {},
+    "outputs": [
+     {
+      "name": "stdout",
+      "output_type": "stream",
+      "text": [
+       "independent values:\t array([0.0, 1.0, 2.0, 3.0, 4.0, 5.0, 6.0], dtype=float)\n",
+       "dependent values:\t array([9.0, 4.0, 1.0, 0.0, 1.0, 4.0, 9.0], dtype=float)\n",
+       "fitted values:\t\t array([1.0, -6.0, 8.999998], dtype=float)\n",
+       "\n",
+       "dependent values:\t array([9.0, 4.0, 1.0, 0.0, 1.0, 4.0, 9.0], dtype=float)\n",
+       "fitted values:\t\t array([1.0, -6.0, 8.999998], dtype=float)\n"
+      ]
+     }
+    ],
+    "source": [
+     "import ulab as np\n",
+     "from ulab import poly\n",
+     "\n",
+     "x = np.array([0, 1, 2, 3, 4, 5, 6])\n",
+     "y = np.array([9, 4, 1, 0, 1, 4, 9])\n",
+     "print('independent values:\\t', x)\n",
+     "print('dependent values:\\t', y)\n",
+     "print('fitted values:\\t\\t', poly.polyfit(x, y, 2))\n",
+     "\n",
+     "# the same with missing x\n",
+     "print('\\ndependent values:\\t', y)\n",
+     "print('fitted values:\\t\\t', poly.polyfit(y, 2))"
+    ]
+   },
+   {
+    "cell_type": "code",
+    "execution_count": 107,
+    "metadata": {},
+    "outputs": [
+     {
+      "name": "stdout",
+      "output_type": "stream",
+      "text": [
+       "real part:\t array([5119.996, -5.004679, -5.004785, ..., -5.005471, -5.005643, -5.006584], dtype=float)\n",
+       "\n",
+       "imaginary part:\t array([0.0, 1631.333, 815.6588, ..., -543.764, -815.6588, -1631.333], dtype=float)\n",
+       "\n",
+       "real part:\t array([5119.996, -5.004679, -5.004785, ..., -5.005471, -5.005643, -5.006584], dtype=float)\n",
+       "\n",
+       "imaginary part:\t array([0.0, 1631.333, 815.6588, ..., -543.764, -815.6588, -1631.333], dtype=float)\n"
+      ]
+     }
+    ],
+    "source": [
+     "import ulab as np\n",
+     "from ulab import vector\n",
+     "from ulab import fft\n",
+     "\n",
+     "x = np.linspace(0, 10, num=1024)\n",
+     "y = vector.sin(x)\n",
+     "z = np.zeros(len(x))\n",
+     "\n",
+     "a, b = fft.fft(x)\n",
+     "print('real part:\\t', a)\n",
+     "print('\\nimaginary part:\\t', b)\n",
+     "\n",
+     "c, d = fft.fft(x, z)\n",
+     "print('\\nreal part:\\t', c)\n",
+     "print('\\nimaginary part:\\t', d)"
+    ]
+   },
+   {
+    "cell_type": "code",
+    "execution_count": 108,
+    "metadata": {},
+    "outputs": [
+     {
+      "name": "stdout",
+      "output_type": "stream",
+      "text": [
+       "original vector:\t array([0.0, 0.009775016, 0.0195491, ..., -0.5275068, -0.5357859, -0.5440139], dtype=float)\n",
+       "\n",
+       "spectrum:\t array([187.8641, 315.3125, 347.8804, ..., 84.4587, 347.8803, 315.3124], dtype=float)\n"
+      ]
+     }
+    ],
+    "source": [
+     "\n",
+     "import ulab as np\n",
+     "from ulab import vector\n",
+     "from ulab import extras\n",
+     "\n",
+     "x = np.linspace(0, 10, num=1024)\n",
+     "y = vector.sin(x)\n",
+     "\n",
+     "a = extras.spectrogram(y)\n",
+     "\n",
+     "print('original vector:\\t', y)\n",
+     "print('\\nspectrum:\\t', a)"
+    ]
+   },
+   {
+    "cell_type": "code",
+    "execution_count": 109,
+    "metadata": {},
+    "outputs": [
+     {
+      "name": "stdout",
+      "output_type": "stream",
+      "text": [
+       "a:  array([0.0, 1.0, 2.0, 3.0, 4.0, 5.0, 6.0, 7.0, 8.0], dtype=float)\n",
+       "b:  array([0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0], dtype=float)\n",
+       "\n",
+       "a == b:  [True, False, False, False, False, False, False, False, False]\n",
+       "a != b:  [False, True, True, True, True, True, True, True, True]\n",
+       "a == 2:  [False, False, True, False, False, False, False, False, False]\n"
+      ]
+     }
+    ],
+    "source": [
+     "import ulab as np\n",
+     "\n",
+     "a = np.array(range(9))\n",
+     "b = np.zeros(9)\n",
+     "\n",
+     "print('a: ', a)\n",
+     "print('b: ', b)\n",
+     "print('\\na == b: ', np.compare.equal(a, b))\n",
+     "print('a != b: ', np.compare.not_equal(a, b))\n",
+     "\n",
+     "# comparison with scalars\n",
+     "print('a == 2: ', np.compare.equal(a, 2))"
+    ]
+   },
+   {
+    "cell_type": "code",
+    "execution_count": 110,
+    "metadata": {},
+    "outputs": [
+     {
+      "name": "stdout",
+      "output_type": "stream",
+      "text": [
+       "1.260135\r\n"
+      ]
+     }
+    ],
+    "source": [
+     "import ulab\n",
+     "from ulab import approx\n",
+     "\n",
+     "def f(x):\n",
+     "    return x*x*x - 2.0\n",
+     "\n",
+     "print(approx.newton(f, 3., tol=0.001, rtol=0.01))"
+    ]
+   },
+   {
+    "cell_type": "code",
+    "execution_count": 117,
+    "metadata": {},
+    "outputs": [
+     {
+      "name": "stdout",
+      "output_type": "stream",
+      "text": [
+       "bisect running in python\n",
+       "execution time:  3273  us\n",
+       "bisect running in C\n",
+       "execution time:  1424  us\n"
+      ]
+     }
+    ],
+    "source": [
+     "import ulab\n",
+     "from ulab import approx\n",
+     "import utime\n",
+     "\n",
+     "\n",
+     "def timeit(f, *args, **kwargs):\n",
+     "    func_name = str(f).split(' ')[1]\n",
+     "    def new_func(*args, **kwargs):\n",
+     "        t = utime.ticks_us()\n",
+     "        result = f(*args, **kwargs)\n",
+     "        print('execution time: ', utime.ticks_diff(utime.ticks_us(), t), ' us')\n",
+     "        return result\n",
+     "    return new_func\n",
+     "\n",
+     "def f(x):\n",
+     "    return (x-1)*(x-1) - 2.0\n",
+     "\n",
+     "def bisect(f, a, b, xtol=2.4e-7, maxiter=100):\n",
+     "    if f(a) * f(b) > 0:\n",
+     "        raise ValueError\n",
+     "\n",
+     "    rtb = a if f(a) < 0.0 else b\n",
+     "    dx = b - a if f(a) < 0.0 else a - b\n",
+     "    for i in range(maxiter):\n",
+     "        dx *= 0.5\n",
+     "        x_mid = rtb + dx\n",
+     "        mid_value = f(x_mid)\n",
+     "        if mid_value < 0:\n",
+     "            rtb = x_mid\n",
+     "        if abs(dx) < xtol:\n",
+     "            break\n",
+     "\n",
+     "    return rtb\n",
+     "\n",
+     "@timeit\n",
+     "def bisect_approx(f, a, b):\n",
+     "    return approx.bisect(f, a, b)\n",
+     "\n",
+     "@timeit\n",
+     "def bisect_timed(f, a, b):\n",
+     "    return bisect(f, a, b)\n",
+     "\n",
+     "print('bisect running in python')\n",
+     "bisect_timed(f, 3, 2)\n",
+     "\n",
+     "print('bisect running in C')\n",
+     "bisect_approx(f, 3, 2)\n"
+    ]
+   },
+   {
+    "cell_type": "code",
+    "execution_count": 121,
+    "metadata": {},
+    "outputs": [
+     {
+      "name": "stdout",
+      "output_type": "stream",
+      "text": [
+       "a:\n",
+       " array([1, 2, 3], dtype=int8)\n",
+       "itemsize of a: 1\n",
+       "\n",
+       "b:\n",
+       " array([[1.0, 2.0],\n",
+       "\t [3.0, 4.0]], dtype=float)\n",
+       "itemsize of b: 4\n"
+      ]
+     }
+    ],
+    "source": [
+     "import ulab as np\n",
+     "\n",
+     "a = np.array([1, 2, 3], dtype=np.int8)\n",
+     "print(\"a:\\n\", a)\n",
+     "print(\"itemsize of a:\", a.itemsize())\n",
+     "\n",
+     "b= np.array([[1, 2], [3, 4]], dtype=np.float)\n",
+     "print(\"\\nb:\\n\", b)\n",
+     "print(\"itemsize of b:\", b.itemsize())"
+    ]
+   },
+   {
+    "cell_type": "code",
+    "execution_count": 122,
+    "metadata": {},
+    "outputs": [
+     {
+      "name": "stdout",
+      "output_type": "stream",
+      "text": [
+       "a: \t\t array([1, 2, 3, 4], dtype=int8)\n",
+       "a flattened: \t array([1, 2, 3, 4], dtype=int8)\n",
+       "\n",
+       "b: array([[1, 2, 3],\n",
+       "\t [4, 5, 6]], dtype=int8)\n",
+       "b flattened (C): \t array([1, 2, 3, 4, 5, 6], dtype=int8)\n",
+       "b flattened (F): \t array([1, 4, 2, 5, 3, 6], dtype=int8)\n"
+      ]
+     }
+    ],
+    "source": [
+     "import ulab as np\n",
+     "\n",
+     "a = np.array([1, 2, 3, 4], dtype=np.int8)\n",
+     "print(\"a: \\t\\t\", a)\n",
+     "print(\"a flattened: \\t\", a.flatten())\n",
+     "\n",
+     "b = np.array([[1, 2, 3], [4, 5, 6]], dtype=np.int8)\n",
+     "print(\"\\nb:\", b)\n",
+     "\n",
+     "print(\"b flattened (C): \\t\", b.flatten())\n",
+     "print(\"b flattened (F): \\t\", b.flatten(order='F'))"
+    ]
+   },
+   {
+    "cell_type": "code",
+    "execution_count": 148,
+    "metadata": {},
+    "outputs": [],
+    "source": [
+     "import time,pyb\n",
+     "import math\n",
+     "\n",
+     "for i in range(200):\n",
+     "    lcd.drawline(120,i,int(2*math.sin(i)),int(2*math.cos(i)),0xffff00)\n",
+     "    time.sleep(0.01)\n",
+     "\n",
+     "\n"
+    ]
+   },
+   {
+    "cell_type": "code",
+    "execution_count": null,
+    "metadata": {},
+    "outputs": [],
+    "source": []
+   }
+  ],
+  "metadata": {
+   "kernelspec": {
+    "display_name": "MicroPython - USB",
+    "language": "micropython",
+    "name": "micropython"
+   },
+   "language_info": {
+    "codemirror_mode": "python",
+    "file_extension": ".py",
+    "mimetype": "text/python",
+    "name": "micropython"
+   }
+  },
+  "nbformat": 4,
+  "nbformat_minor": 4
+ }
diff -crNb MicorpythonOriginal1.12/micropython/py/builtin.h micropython1.12_withUlab/micropython/py/builtin.h
*** MicorpythonOriginal1.12/micropython/py/builtin.h	2020-04-13 07:21:17.000000000 +0200
--- micropython1.12_withUlab/micropython/py/builtin.h	2020-06-19 19:53:33.241673393 +0200
***************
*** 103,108 ****
--- 103,109 ----
  extern const mp_obj_dict_t mp_module_builtins_globals;
  
  // extmod modules
+ extern const mp_obj_module_t mp_module_uasyncio;
  extern const mp_obj_module_t mp_module_uerrno;
  extern const mp_obj_module_t mp_module_uctypes;
  extern const mp_obj_module_t mp_module_uzlib;
diff -crNb MicorpythonOriginal1.12/micropython/py/dynruntime.h micropython1.12_withUlab/micropython/py/dynruntime.h
*** MicorpythonOriginal1.12/micropython/py/dynruntime.h	2020-04-13 07:21:17.000000000 +0200
--- micropython1.12_withUlab/micropython/py/dynruntime.h	2020-06-16 15:27:45.342466202 +0200
***************
*** 101,107 ****
  #define mp_obj_new_str(data, len)           (mp_fun_table.obj_new_str((data), (len)))
  #define mp_obj_new_str_of_type(t, d, l)     (mp_obj_new_str_of_type_dyn((t), (d), (l)))
  #define mp_obj_new_bytes(data, len)         (mp_fun_table.obj_new_bytes((data), (len)))
! #define mp_obj_new_bytearray_by_ref(n, i)   (mp_fun_table.obj_new_bytearray_by_ref((n), (i)))
  #define mp_obj_new_tuple(n, items)          (mp_fun_table.new_tuple((n), (items)))
  #define mp_obj_new_list(n, items)           (mp_fun_table.new_list((n), (items)))
  
--- 101,107 ----
  #define mp_obj_new_str(data, len)           (mp_fun_table.obj_new_str((data), (len)))
  #define mp_obj_new_str_of_type(t, d, l)     (mp_obj_new_str_of_type_dyn((t), (d), (l)))
  #define mp_obj_new_bytes(data, len)         (mp_fun_table.obj_new_bytes((data), (len)))
! //#define mp_obj_new_bytearray_by_ref(n, i)   (mp_fun_table.obj_new_bytearray_by_ref((n), (i)))
  #define mp_obj_new_tuple(n, items)          (mp_fun_table.new_tuple((n), (items)))
  #define mp_obj_new_list(n, items)           (mp_fun_table.new_list((n), (items)))
  
diff -crNb MicorpythonOriginal1.12/micropython/py/mpfile.c micropython1.12_withUlab/micropython/py/mpfile.c
*** MicorpythonOriginal1.12/micropython/py/mpfile.c	1970-01-01 02:00:00.000000000 +0200
--- micropython1.12_withUlab/micropython/py/mpfile.c	2020-06-16 11:48:30.294886696 +0200
***************
*** 0 ****
--- 1,118 ----
+  /*This file is part of the Micro Python project, http://micropython.org/
+  *
+  * The MIT License (MIT)
+  *
+  * Copyright (c) 2016 Dave Hylands
+  *
+  * Permission is hereby granted, free of charge, to any person obtaining a copy
+  * of this software and associated documentation files (the "Software"), to deal
+  * in the Software without restriction, including without limitation the rights
+  * to use, copy, modify, merge, publish, distribute, sublicense, and/or sell
+  * copies of the Software, and to permit persons to whom the Software is
+  * furnished to do so, subject to the following conditions:
+  *
+  * The above copyright notice and this permission notice shall be included in
+  * all copies or substantial portions of the Software.
+  *
+  * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
+  * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
+  * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE
+  * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
+  * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,
+  * OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN
+  * THE SOFTWARE.
+  */
+ 
+ #include "py/mpfile.h"
+ 
+ #include "py/builtin.h"
+ #include "py/misc.h"
+ #include "py/runtime.h"
+ 
+ #include <string.h>
+ 
+ #if 1
+ 
+ STATIC const mp_obj_type_t mp_file_type;
+ STATIC mp_obj_t mp___del__(mp_obj_t self);
+ 
+ mp_file_t *mp_file_from_file_obj(mp_obj_t file_obj) {
+     mp_file_t *file = m_new_obj_with_finaliser(mp_file_t);
+     memset(file, 0, sizeof(*file));
+     file->base.type = &mp_file_type;
+     file->file_obj = file_obj;
+     file->readinto_fn = mp_const_none;
+     file->seek_fn = mp_const_none;
+     file->tell_fn = mp_const_none;
+ 
+     return file;
+ }
+ 
+ mp_file_t *mp_open(const char *filename, const char *mode) {
+     mp_obj_t filename_obj = mp_obj_new_str(filename, strlen(filename));
+     mp_obj_t mode_obj = mp_obj_new_str(mode, strlen(mode));
+     mp_obj_t args[2] = { filename_obj, mode_obj };
+     return mp_file_from_file_obj(mp_builtin_open(2, args, (mp_map_t *)&mp_const_empty_map));
+ }
+ 
+ mp_int_t mp_readinto(mp_file_t *file, void *buf, size_t num_bytes) {
+     if (file->readinto_fn == mp_const_none) {
+         file->readinto_fn = mp_load_attr(file->file_obj, MP_QSTR_readinto);
+     }
+     mp_obj_t bytearray = mp_obj_new_bytearray_by_ref(num_bytes, buf);
+     mp_obj_t bytes_read = mp_call_function_1(file->readinto_fn, bytearray);
+     if (bytes_read == mp_const_none) {
+         return 0;
+     }
+     return mp_obj_get_int(bytes_read);
+ }
+ 
+ off_t mp_seek(mp_file_t *file, off_t offset, int whence) {
+     if (file->seek_fn == mp_const_none) {
+         file->seek_fn = mp_load_attr(file->file_obj, MP_QSTR_seek);
+     }
+     return mp_obj_get_int(mp_call_function_2(file->seek_fn,
+                                              MP_OBJ_NEW_SMALL_INT(offset),
+                                              MP_OBJ_NEW_SMALL_INT(whence)));
+ }
+ 
+ off_t mp_tell(mp_file_t *file) {
+     if (file->tell_fn == mp_const_none) {
+         file->tell_fn = mp_load_attr(file->file_obj, MP_QSTR_tell);
+     }
+     return mp_obj_get_int(mp_call_function_0(file->tell_fn));
+ }
+ 
+ void mp_close(mp_file_t *file) {
+     mp_obj_t close_fn = mp_load_attr(file->file_obj, MP_QSTR_close);
+     file->file_obj = mp_const_none;
+     file->readinto_fn = mp_const_none;
+     file->seek_fn = mp_const_none;
+     file->tell_fn = mp_const_none;
+     mp_call_function_0(close_fn);
+ }
+ 
+ STATIC void mp_file_print(const mp_print_t *print, mp_obj_t self, mp_print_kind_t kind) {
+     (void)kind;
+     mp_printf(print, "<mp_file %p>", self);
+ }
+ 
+ STATIC mp_obj_t mp___del__(mp_obj_t self) {
+     mp_close(MP_OBJ_TO_PTR(self));              
+     return mp_const_none;
+ }
+ STATIC MP_DEFINE_CONST_FUN_OBJ_1(mp___del___obj, mp___del__);
+ 
+ STATIC const mp_rom_map_elem_t mp_file_locals_dict_table[] = {
+     { MP_ROM_QSTR(MP_QSTR___del__), MP_ROM_PTR(&mp___del___obj) },
+ };
+ STATIC MP_DEFINE_CONST_DICT(mp_file_locals_dict, mp_file_locals_dict_table);
+ 
+ STATIC const mp_obj_type_t mp_file_type = {
+     .base = { &mp_type_type },
+     .name = MP_QSTR_mp_file,
+     .print = mp_file_print,
+     .locals_dict = (mp_obj_dict_t *)&mp_file_locals_dict,
+ };
+ 
+ #endif // MICROPY_PY_FILE_LIKE
diff -crNb MicorpythonOriginal1.12/micropython/py/mpfile.h micropython1.12_withUlab/micropython/py/mpfile.h
*** MicorpythonOriginal1.12/micropython/py/mpfile.h	1970-01-01 02:00:00.000000000 +0200
--- micropython1.12_withUlab/micropython/py/mpfile.h	2020-06-13 11:45:57.133607000 +0200
***************
*** 0 ****
--- 1,55 ----
+ /*
+  * This file is part of the Micro Python project, http://micropython.org/
+  *
+  * The MIT License (MIT)
+  *
+  * Copyright (c) 2016 Dave Hylands
+  *
+  * Permission is hereby granted, free of charge, to any person obtaining a copy
+  * of this software and associated documentation files (the "Software"), to deal
+  * in the Software without restriction, including without limitation the rights
+  * to use, copy, modify, merge, publish, distribute, sublicense, and/or sell
+  * copies of the Software, and to permit persons to whom the Software is
+  * furnished to do so, subject to the following conditions:
+  *
+  * The above copyright notice and this permission notice shall be included in
+  * all copies or substantial portions of the Software.
+  *
+  * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
+  * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
+  * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE
+  * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
+  * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,
+  * OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN
+  * THE SOFTWARE.
+  */
+ 
+ #ifndef __MICROPY_INCLUDED_PY_MPFILE_H__
+ #define __MICROPY_INCLUDED_PY_MPFILE_H__
+ 
+ #include "py/obj.h"
+ #include <sys/types.h>  // for off_t
+ 
+ // A C API for performing I/O on files or file-like objects.
+ 
+ typedef struct {
+     mp_obj_base_t   base;
+     mp_obj_t        file_obj;
+     mp_obj_t        readinto_fn;
+     mp_obj_t        seek_fn;
+     mp_obj_t        tell_fn;
+ } mp_file_t;
+ 
+ #define MP_SEEK_SET 0
+ #define MP_SEEK_CUR 1
+ #define MP_SEEK_END 2
+ 
+ mp_file_t *mp_file_from_file_obj(mp_obj_t file_obj);
+ mp_file_t *mp_open(const char *filename, const char *mode);
+ mp_int_t mp_readinto(mp_file_t *file, void *buf, size_t num_bytes);
+ off_t mp_seek(mp_file_t *file, off_t offset, int whence);
+ off_t mp_tell(mp_file_t *file);
+ void mp_close(mp_file_t *file);
+ 
+ 
+ #endif // __MICROPY_INCLUDED_PY_MPFILE_H__
diff -crNb MicorpythonOriginal1.12/micropython/py/objmodule.c micropython1.12_withUlab/micropython/py/objmodule.c
*** MicorpythonOriginal1.12/micropython/py/objmodule.c	2020-04-13 07:21:17.000000000 +0200
--- micropython1.12_withUlab/micropython/py/objmodule.c	2020-06-19 19:51:25.594616211 +0200
***************
*** 169,175 ****
  #endif
  
      // extmod modules
! 
  #if MICROPY_PY_UERRNO
      { MP_ROM_QSTR(MP_QSTR_uerrno), MP_ROM_PTR(&mp_module_uerrno) },
  #endif
--- 169,177 ----
  #endif
  
      // extmod modules
! #if MICROPY_PY_UASYNCIO
! { MP_ROM_QSTR(MP_QSTR__uasyncio), MP_ROM_PTR(&mp_module_uasyncio) },
! #endif
  #if MICROPY_PY_UERRNO
      { MP_ROM_QSTR(MP_QSTR_uerrno), MP_ROM_PTR(&mp_module_uerrno) },
  #endif
diff -crNb MicorpythonOriginal1.12/micropython/py/pairheap.c micropython1.12_withUlab/micropython/py/pairheap.c
*** MicorpythonOriginal1.12/micropython/py/pairheap.c	1970-01-01 02:00:00.000000000 +0200
--- micropython1.12_withUlab/micropython/py/pairheap.c	2020-06-18 19:00:45.042879000 +0200
***************
*** 0 ****
--- 1,147 ----
+ /*
+  * This file is part of the MicroPython project, http://micropython.org/
+  *
+  * The MIT License (MIT)
+  *
+  * Copyright (c) 2020 Damien P. George
+  *
+  * Permission is hereby granted, free of charge, to any person obtaining a copy
+  * of this software and associated documentation files (the "Software"), to deal
+  * in the Software without restriction, including without limitation the rights
+  * to use, copy, modify, merge, publish, distribute, sublicense, and/or sell
+  * copies of the Software, and to permit persons to whom the Software is
+  * furnished to do so, subject to the following conditions:
+  *
+  * The above copyright notice and this permission notice shall be included in
+  * all copies or substantial portions of the Software.
+  *
+  * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
+  * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
+  * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE
+  * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
+  * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,
+  * OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN
+  * THE SOFTWARE.
+  */
+ 
+ #include "py/pairheap.h"
+ 
+ // The mp_pairheap_t.next pointer can take one of the following values:
+ //   - NULL: the node is the top of the heap
+ //   - LSB set: the node is the last of the children and points to its parent node
+ //   - other: the node is a child and not the last child
+ // The macros below help manage this pointer.
+ #define NEXT_MAKE_RIGHTMOST_PARENT(parent) ((void *)((uintptr_t)(parent) | 1))
+ #define NEXT_IS_RIGHTMOST_PARENT(next) ((uintptr_t)(next) & 1)
+ #define NEXT_GET_RIGHTMOST_PARENT(next) ((void *)((uintptr_t)(next) & ~1))
+ 
+ // O(1), stable
+ mp_pairheap_t *mp_pairheap_meld(mp_pairheap_lt_t lt, mp_pairheap_t *heap1, mp_pairheap_t *heap2) {
+     if (heap1 == NULL) {
+         return heap2;
+     }
+     if (heap2 == NULL) {
+         return heap1;
+     }
+     if (lt(heap1, heap2)) {
+         if (heap1->child == NULL) {
+             heap1->child = heap2;
+         } else {
+             heap1->child_last->next = heap2;
+         }
+         heap1->child_last = heap2;
+         heap2->next = NEXT_MAKE_RIGHTMOST_PARENT(heap1);
+         return heap1;
+     } else {
+         heap1->next = heap2->child;
+         heap2->child = heap1;
+         if (heap1->next == NULL) {
+             heap2->child_last = heap1;
+             heap1->next = NEXT_MAKE_RIGHTMOST_PARENT(heap2);
+         }
+         return heap2;
+     }
+ }
+ 
+ // amortised O(log N), stable
+ mp_pairheap_t *mp_pairheap_pairing(mp_pairheap_lt_t lt, mp_pairheap_t *child) {
+     if (child == NULL) {
+         return NULL;
+     }
+     mp_pairheap_t *heap = NULL;
+     while (!NEXT_IS_RIGHTMOST_PARENT(child)) {
+         mp_pairheap_t *n1 = child;
+         child = child->next;
+         n1->next = NULL;
+         if (!NEXT_IS_RIGHTMOST_PARENT(child)) {
+             mp_pairheap_t *n2 = child;
+             child = child->next;
+             n2->next = NULL;
+             n1 = mp_pairheap_meld(lt, n1, n2);
+         }
+         heap = mp_pairheap_meld(lt, heap, n1);
+     }
+     heap->next = NULL;
+     return heap;
+ }
+ 
+ // amortised O(log N), stable
+ mp_pairheap_t *mp_pairheap_delete(mp_pairheap_lt_t lt, mp_pairheap_t *heap, mp_pairheap_t *node) {
+     // Simple case of the top being the node to delete
+     if (node == heap) {
+         mp_pairheap_t *child = heap->child;
+         node->child = NULL;
+         return mp_pairheap_pairing(lt, child);
+     }
+ 
+     // Case where node is not in the heap
+     if (node->next == NULL) {
+         return heap;
+     }
+ 
+     // Find parent of node
+     mp_pairheap_t *parent = node;
+     while (!NEXT_IS_RIGHTMOST_PARENT(parent->next)) {
+         parent = parent->next;
+     }
+     parent = NEXT_GET_RIGHTMOST_PARENT(parent->next);
+ 
+     // Replace node with pairing of its children
+     mp_pairheap_t *next;
+     if (node == parent->child && node->child == NULL) {
+         if (NEXT_IS_RIGHTMOST_PARENT(node->next)) {
+             parent->child = NULL;
+         } else {
+             parent->child = node->next;
+         }
+         node->next = NULL;
+         return heap;
+     } else if (node == parent->child) {
+         mp_pairheap_t *child = node->child;
+         next = node->next;
+         node->child = NULL;
+         node->next = NULL;
+         node = mp_pairheap_pairing(lt, child);
+         parent->child = node;
+     } else {
+         mp_pairheap_t *n = parent->child;
+         while (node != n->next) {
+             n = n->next;
+         }
+         mp_pairheap_t *child = node->child;
+         next = node->next;
+         node->child = NULL;
+         node->next = NULL;
+         node = mp_pairheap_pairing(lt, child);
+         if (node == NULL) {
+             node = n;
+         } else {
+             n->next = node;
+         }
+     }
+     node->next = next;
+     if (NEXT_IS_RIGHTMOST_PARENT(next)) {
+         parent->child_last = node;
+     }
+     return heap;
+ }
diff -crNb MicorpythonOriginal1.12/micropython/py/pairheap.h micropython1.12_withUlab/micropython/py/pairheap.h
*** MicorpythonOriginal1.12/micropython/py/pairheap.h	1970-01-01 02:00:00.000000000 +0200
--- micropython1.12_withUlab/micropython/py/pairheap.h	2020-06-18 19:00:45.042879000 +0200
***************
*** 0 ****
--- 1,100 ----
+ /*
+  * This file is part of the MicroPython project, http://micropython.org/
+  *
+  * The MIT License (MIT)
+  *
+  * Copyright (c) 2020 Damien P. George
+  *
+  * Permission is hereby granted, free of charge, to any person obtaining a copy
+  * of this software and associated documentation files (the "Software"), to deal
+  * in the Software without restriction, including without limitation the rights
+  * to use, copy, modify, merge, publish, distribute, sublicense, and/or sell
+  * copies of the Software, and to permit persons to whom the Software is
+  * furnished to do so, subject to the following conditions:
+  *
+  * The above copyright notice and this permission notice shall be included in
+  * all copies or substantial portions of the Software.
+  *
+  * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
+  * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
+  * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE
+  * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
+  * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,
+  * OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN
+  * THE SOFTWARE.
+  */
+ #ifndef MICROPY_INCLUDED_PY_PAIRHEAP_H
+ #define MICROPY_INCLUDED_PY_PAIRHEAP_H
+ 
+ // This is an implementation of a pairing heap.  It is stable and has deletion
+ // support.  Only the less-than operation needs to be defined on elements.
+ //
+ // See original paper for details:
+ // Michael L. Fredman, Robert Sedjewick, Daniel D. Sleator, and Robert E. Tarjan.
+ // The Pairing Heap: A New Form of Self-Adjusting Heap.
+ // Algorithmica 1:111-129, 1986.
+ // https://www.cs.cmu.edu/~sleator/papers/pairing-heaps.pdf
+ 
+ #include <assert.h>
+ #include "py/obj.h"
+ 
+ // This struct forms the nodes of the heap and is intended to be extended, by
+ // placing it first in another struct, to include additional information for the
+ // element stored in the heap.  It includes "base" so it can be a MicroPython
+ // object allocated on the heap and the GC can automatically trace all nodes by
+ // following the tree structure.
+ typedef struct _mp_pairheap_t {
+     mp_obj_base_t base;
+     struct _mp_pairheap_t *child;
+     struct _mp_pairheap_t *child_last;
+     struct _mp_pairheap_t *next;
+ } mp_pairheap_t;
+ 
+ // This is the function for the less-than operation on nodes/elements.
+ typedef int (*mp_pairheap_lt_t)(mp_pairheap_t *, mp_pairheap_t *);
+ 
+ // Core functions.
+ mp_pairheap_t *mp_pairheap_meld(mp_pairheap_lt_t lt, mp_pairheap_t *heap1, mp_pairheap_t *heap2);
+ mp_pairheap_t *mp_pairheap_pairing(mp_pairheap_lt_t lt, mp_pairheap_t *child);
+ mp_pairheap_t *mp_pairheap_delete(mp_pairheap_lt_t lt, mp_pairheap_t *heap, mp_pairheap_t *node);
+ 
+ // Create a new heap.
+ static inline mp_pairheap_t *mp_pairheap_new(mp_pairheap_lt_t lt) {
+     (void)lt;
+     return NULL;
+ }
+ 
+ // Initialise a single pairing-heap node so it is ready to push on to a heap.
+ static inline void mp_pairheap_init_node(mp_pairheap_lt_t lt, mp_pairheap_t *node) {
+     (void)lt;
+     node->child = NULL;
+     node->next = NULL;
+ }
+ 
+ // Test if the heap is empty.
+ static inline bool mp_pairheap_is_empty(mp_pairheap_lt_t lt, mp_pairheap_t *heap) {
+     (void)lt;
+     return heap == NULL;
+ }
+ 
+ // Peek at the top of the heap.  Will return NULL if empty.
+ static inline mp_pairheap_t *mp_pairheap_peek(mp_pairheap_lt_t lt, mp_pairheap_t *heap) {
+     (void)lt;
+     return heap;
+ }
+ 
+ // Push new node onto existing heap.  Returns the new heap.
+ static inline mp_pairheap_t *mp_pairheap_push(mp_pairheap_lt_t lt, mp_pairheap_t *heap, mp_pairheap_t *node) {
+     assert(node->child == NULL && node->next == NULL);
+     return mp_pairheap_meld(lt, node, heap); // node is first to be stable
+ }
+ 
+ // Pop the top off the heap, which must not be empty.  Returns the new heap.
+ static inline mp_pairheap_t *mp_pairheap_pop(mp_pairheap_lt_t lt, mp_pairheap_t *heap) {
+     assert(heap->next == NULL);
+     mp_pairheap_t *child = heap->child;
+     heap->child = NULL;
+     return mp_pairheap_pairing(lt, child);
+ }
+ 
+ #endif // MICROPY_INCLUDED_PY_PAIRHEAP_H
Binary files MicorpythonOriginal1.12/micropython/py/__pycache__/makeqstrdata.cpython-36.pyc and micropython1.12_withUlab/micropython/py/__pycache__/makeqstrdata.cpython-36.pyc differ
diff -crNb MicorpythonOriginal1.12/micropython/py/py.mk micropython1.12_withUlab/micropython/py/py.mk
*** MicorpythonOriginal1.12/micropython/py/py.mk	2020-04-13 07:21:17.000000000 +0200
--- micropython1.12_withUlab/micropython/py/py.mk	2020-06-19 20:01:35.027693739 +0200
***************
*** 62,67 ****
--- 62,68 ----
  	parse.o \
  	scope.o \
  	compile.o \
+ 	mpfile.o\
  	emitcommon.o \
  	emitbc.o \
  	asmbase.o \
***************
*** 87,92 ****
--- 88,94 ----
  	runtime_utils.o \
  	scheduler.o \
  	nativeglue.o \
+ 	pairheap.o \
  	ringbuf.o \
  	stackctrl.o \
  	argcheck.o \
***************
*** 160,165 ****
--- 162,168 ----
  	)
  
  PY_EXTMOD_O_BASENAME = \
+ 	extmod/moduasyncio.o \
  	extmod/moductypes.o \
  	extmod/modujson.o \
  	extmod/modure.o \
diff -crNb MicorpythonOriginal1.12/micropython/py/qstrdefs.h micropython1.12_withUlab/micropython/py/qstrdefs.h
*** MicorpythonOriginal1.12/micropython/py/qstrdefs.h	2020-04-13 07:21:17.000000000 +0200
--- micropython1.12_withUlab/micropython/py/qstrdefs.h	2020-06-16 11:42:54.201669638 +0200
***************
*** 57,63 ****
  Q(<string>)
  Q(<stdin>)
  Q(utf-8)
! 
  #if MICROPY_ENABLE_PYSTACK
  Q(pystack exhausted)
  #endif
--- 57,63 ----
  Q(<string>)
  Q(<stdin>)
  Q(utf-8)
! Q(mp_file)
  #if MICROPY_ENABLE_PYSTACK
  Q(pystack exhausted)
  #endif
diff -crNb MicorpythonOriginal1.12/ulab/build.sh micropython1.12_withUlab/ulab/build.sh
*** MicorpythonOriginal1.12/ulab/build.sh	1970-01-01 02:00:00.000000000 +0200
--- micropython1.12_withUlab/ulab/build.sh	2020-06-18 18:25:25.706905000 +0200
***************
*** 0 ****
--- 1,17 ----
+ #!/bin/sh
+ set -e
+ HERE="$(dirname -- "$(readlink -f -- "${0}")" )"
+ [ -e micropython/py/py.mk ] || git clone https://github.com/micropython/micropython
+ [ -e micropython/lib/libffi/autogen.sh ] || (cd micropython && git submodule update --init lib/libffi )
+ #git clone https://github.com/micropython/micropython
+ make -C micropython/mpy-cross -j$(nproc)
+ make -C micropython/ports/unix -j$(nproc) deplibs
+ make -C micropython/ports/unix -j$(nproc) USER_C_MODULES="${HERE}" DEBUG=1 STRIP=:
+ 
+ if ! env MICROPY_MICROPYTHON=micropython/ports/unix/micropython micropython/tests/run-tests -d tests; then
+     for exp in *.exp; do
+         testbase=$(basename $exp .exp);
+         echo -e "\nFAILURE $testbase";
+         diff -u $testbase.exp $testbase.out;
+     done
+ fi
diff -crNb MicorpythonOriginal1.12/ulab/code/approx.c micropython1.12_withUlab/ulab/code/approx.c
*** MicorpythonOriginal1.12/ulab/code/approx.c	1970-01-01 02:00:00.000000000 +0200
--- micropython1.12_withUlab/ulab/code/approx.c	2020-06-18 18:25:25.706905000 +0200
***************
*** 0 ****
--- 1,396 ----
+ /*
+  * This file is part of the micropython-ulab project,
+  *
+  * https://github.com/v923z/micropython-ulab
+  *
+  * The MIT License (MIT)
+  *
+  * Copyright (c) 2020 Zoltán Vörös
+ */
+ 
+ #include <math.h>
+ #include <stdlib.h>
+ #include <string.h>
+ #include "py/obj.h"
+ #include "py/runtime.h"
+ #include "py/misc.h"
+ #include "linalg.h"
+ #include "approx.h"
+ 
+ #if ULAB_APPROX_MODULE
+ 
+ const mp_obj_float_t xtolerance = {{&mp_type_float}, 2.4e-7};
+ const mp_obj_float_t rtolerance = {{&mp_type_float}, 0.0};
+ 
+ STATIC mp_float_t approx_python_call(const mp_obj_type_t *type, mp_obj_t fun, mp_float_t x, mp_obj_t *fargs, uint8_t nparams) {
+ 	// Helper function for calculating the value of f(x, a, b, c, ...), 
+ 	// where f is defined in python. Takes a float, returns a float.
+     // The array of mp_obj_t type must be supplied, as must the number of parameters (a, b, c...) in nparams
+ 	fargs[0] = mp_obj_new_float(x);
+ 	return mp_obj_get_float(type->call(fun, nparams+1, 0, fargs));
+ }
+ 
+ STATIC mp_obj_t approx_bisect(size_t n_args, const mp_obj_t *pos_args, mp_map_t *kw_args) {
+ 	// Simple bisection routine
+     static const mp_arg_t allowed_args[] = {
+         { MP_QSTR_, MP_ARG_REQUIRED | MP_ARG_OBJ, {.u_rom_obj = mp_const_none } },
+         { MP_QSTR_, MP_ARG_REQUIRED | MP_ARG_OBJ, {.u_rom_obj = mp_const_none } },
+         { MP_QSTR_, MP_ARG_REQUIRED | MP_ARG_OBJ, {.u_rom_obj = mp_const_none} },
+         { MP_QSTR_xtol, MP_ARG_KW_ONLY | MP_ARG_OBJ, {.u_rom_obj = MP_ROM_PTR(&xtolerance)} },
+         { MP_QSTR_maxiter, MP_ARG_KW_ONLY | MP_ARG_INT, {.u_int = 100} },
+     };
+ 
+     mp_arg_val_t args[MP_ARRAY_SIZE(allowed_args)];
+     mp_arg_parse_all(n_args, pos_args, kw_args, MP_ARRAY_SIZE(allowed_args), allowed_args, args);
+ 
+ 	mp_obj_t fun = args[0].u_obj;
+ 	const mp_obj_type_t *type = mp_obj_get_type(fun);
+ 	if(type->call == NULL) {
+ 		mp_raise_TypeError(translate("first argument must be a function"));
+ 	}
+ 	mp_float_t xtol = mp_obj_get_float(args[3].u_obj);
+ 	mp_obj_t *fargs = m_new(mp_obj_t, 1);
+ 	mp_float_t left, right;
+ 	mp_float_t x_mid;
+ 	mp_float_t a = mp_obj_get_float(args[1].u_obj);
+ 	mp_float_t b = mp_obj_get_float(args[2].u_obj);
+ 	left = approx_python_call(type, fun, a, fargs, 0);
+ 	right = approx_python_call(type, fun, b, fargs, 0);
+ 	if(left * right > 0) {
+ 		mp_raise_ValueError(translate("function has the same sign at the ends of interval"));
+ 	}
+ 	mp_float_t rtb = left < 0.0 ? a : b;
+ 	mp_float_t dx = left < 0.0 ? b - a : a - b;
+ 	
+ 	for(uint16_t i=0; i < args[4].u_int; i++) {
+ 		dx *= 0.5;
+ 		x_mid = rtb + dx;
+ 		if(approx_python_call(type, fun, x_mid, fargs, 0) < 0.0) {
+ 			rtb = x_mid;
+ 		}
+ 		if(MICROPY_FLOAT_C_FUN(fabs)(dx) < xtol) break;
+ 	}
+ 	return mp_obj_new_float(rtb);
+ }
+ 
+ MP_DEFINE_CONST_FUN_OBJ_KW(approx_bisect_obj, 3, approx_bisect);
+ 
+ STATIC mp_obj_t approx_newton(size_t n_args, const mp_obj_t *pos_args, mp_map_t *kw_args) {
+ 	// this is actually the secant method, as the first derivative of the function 
+ 	// is not accepted as an argument. The function whose root we want to solve for 
+ 	// must depend on a single variable without parameters, i.e., f(x)
+     static const mp_arg_t allowed_args[] = {
+         { MP_QSTR_, MP_ARG_REQUIRED | MP_ARG_OBJ, {.u_rom_obj = mp_const_none } },
+         { MP_QSTR_, MP_ARG_REQUIRED | MP_ARG_OBJ, {.u_rom_obj = mp_const_none } },
+         { MP_QSTR_tol, MP_ARG_KW_ONLY | MP_ARG_OBJ, {.u_rom_obj = MP_ROM_PTR(&xtolerance)} },
+         { MP_QSTR_rtol, MP_ARG_KW_ONLY | MP_ARG_OBJ, {.u_rom_obj = MP_ROM_PTR(&rtolerance)} },
+         { MP_QSTR_maxiter, MP_ARG_KW_ONLY | MP_ARG_INT, {.u_int = 50} },
+     };
+ 
+     mp_arg_val_t args[MP_ARRAY_SIZE(allowed_args)];
+     mp_arg_parse_all(n_args, pos_args, kw_args, MP_ARRAY_SIZE(allowed_args), allowed_args, args);
+ 
+ 	mp_obj_t fun = args[0].u_obj;
+ 	const mp_obj_type_t *type = mp_obj_get_type(fun);
+ 	if(type->call == NULL) {
+ 		mp_raise_TypeError(translate("first argument must be a function"));
+ 	}
+ 	mp_float_t x = mp_obj_get_float(args[1].u_obj);
+ 	mp_float_t tol = mp_obj_get_float(args[2].u_obj);
+ 	mp_float_t rtol = mp_obj_get_float(args[3].u_obj);
+ 	mp_float_t dx, df, fx;
+ 	dx = x > 0.0 ? APPROX_EPS * x : -APPROX_EPS * x;
+ 	mp_obj_t *fargs = m_new(mp_obj_t, 1);
+ 	for(uint16_t i=0; i < args[4].u_int; i++) {
+ 		fx = approx_python_call(type, fun, x, fargs, 0);
+ 		df = (approx_python_call(type, fun, x + dx, fargs, 0) - fx) / dx;
+ 		dx = fx / df;
+ 		x -= dx;
+ 		if(MICROPY_FLOAT_C_FUN(fabs)(dx) < (tol + rtol * MICROPY_FLOAT_C_FUN(fabs)(x))) break;
+ 	}
+ 	return mp_obj_new_float(x);
+ }
+ 
+ MP_DEFINE_CONST_FUN_OBJ_KW(approx_newton_obj, 2, approx_newton);
+ 
+ STATIC mp_obj_t approx_fmin(size_t n_args, const mp_obj_t *pos_args, mp_map_t *kw_args) {
+ 	// downhill simplex method in 1D
+     static const mp_arg_t allowed_args[] = {
+         { MP_QSTR_, MP_ARG_REQUIRED | MP_ARG_OBJ, {.u_rom_obj = mp_const_none } },
+         { MP_QSTR_, MP_ARG_REQUIRED | MP_ARG_OBJ, {.u_rom_obj = mp_const_none } },
+         { MP_QSTR_xatol, MP_ARG_KW_ONLY | MP_ARG_OBJ, {.u_rom_obj = MP_ROM_PTR(&xtolerance)} },
+         { MP_QSTR_fatol, MP_ARG_KW_ONLY | MP_ARG_OBJ, {.u_rom_obj = MP_ROM_PTR(&xtolerance)} },
+         { MP_QSTR_maxiter, MP_ARG_KW_ONLY | MP_ARG_OBJ, {.u_rom_obj = mp_const_none} },
+     };
+ 
+     mp_arg_val_t args[MP_ARRAY_SIZE(allowed_args)];
+     mp_arg_parse_all(n_args, pos_args, kw_args, MP_ARRAY_SIZE(allowed_args), allowed_args, args);
+ 
+ 	mp_obj_t fun = args[0].u_obj;
+ 	const mp_obj_type_t *type = mp_obj_get_type(fun);
+ 	if(type->call == NULL) {
+ 		mp_raise_TypeError(translate("first argument must be a function"));
+ 	}
+ 	
+ 	// parameters controlling convergence conditions
+ 	mp_float_t xatol = mp_obj_get_float(args[2].u_obj);
+ 	mp_float_t fatol = mp_obj_get_float(args[3].u_obj);	
+ 	uint16_t maxiter = args[4].u_obj == mp_const_none ? 200 : mp_obj_get_int(args[4].u_obj);
+ 	
+ 	mp_float_t x0 = mp_obj_get_float(args[1].u_obj);
+ 	mp_float_t x1 = x0 != 0.0 ? (1.0 + APPROX_NONZDELTA) * x0 : APPROX_ZDELTA;
+ 	mp_obj_t *fargs = m_new(mp_obj_t, 1);
+ 	mp_float_t f0 = approx_python_call(type, fun, x0, fargs, 0);
+ 	mp_float_t f1 = approx_python_call(type, fun, x1, fargs, 0);
+ 	if(f1 < f0) {
+ 		SWAP(mp_float_t, x0, x1);
+ 		SWAP(mp_float_t, f0, f1);
+ 	}
+ 	for(uint16_t i=0; i < maxiter; i++) {
+ 		uint8_t shrink = 0;
+ 		f0 = approx_python_call(type, fun, x0, fargs, 0);
+ 		f1 = approx_python_call(type, fun, x1, fargs, 0);
+ 		
+ 		// reflection
+ 		mp_float_t xr = (1.0 + APPROX_ALPHA) * x0 - APPROX_ALPHA * x1;
+ 		mp_float_t fr = approx_python_call(type, fun, xr, fargs, 0);
+ 		if(fr < f0) { // expansion
+ 			mp_float_t xe = (1 + APPROX_ALPHA * APPROX_BETA) * x0 - APPROX_ALPHA * APPROX_BETA * x1;
+ 			mp_float_t fe = approx_python_call(type, fun, xe, fargs, 0);
+ 			if(fe < fr) {
+ 				x1 = xe;
+ 				f1 = fe;
+ 			} else {
+ 				x1 = xr;
+ 				f1 = fr;
+ 			}
+ 		} else {
+ 			if(fr < f1) { // contraction
+ 				mp_float_t xc = (1 + APPROX_GAMMA * APPROX_ALPHA) * x0 - APPROX_GAMMA * APPROX_ALPHA * x1;
+ 				mp_float_t fc = approx_python_call(type, fun, xc, fargs, 0);
+ 				if(fc < fr) {
+ 					x1 = xc;
+ 					f1 = fc;
+ 				} else {
+ 					shrink = 1;
+ 				}
+ 			} else { // inside contraction
+ 				mp_float_t xc = (1.0 - APPROX_GAMMA) * x0 + APPROX_GAMMA * x1;
+ 				mp_float_t fc = approx_python_call(type, fun, xc, fargs, 0);
+ 				if(fc < f1) {
+ 					x1 = xc;
+ 					f1 = fc;
+ 				} else {
+ 					shrink = 1;
+ 				}
+ 			}
+ 			if(shrink == 1) {
+ 				x1 = x0 + APPROX_DELTA * (x1 - x0);
+ 				f1 = approx_python_call(type, fun, x1, fargs, 0);
+ 			}
+ 			if((MICROPY_FLOAT_C_FUN(fabs)(f1 - f0) < fatol) || 
+ 				(MICROPY_FLOAT_C_FUN(fabs)(x1 - x0) < xatol)) {
+ 				break;
+ 			}
+ 			if(f1 < f0) {
+ 				SWAP(mp_float_t, x0, x1);
+ 				SWAP(mp_float_t, f0, f1);
+ 			}
+ 		}
+ 	}
+ 	return mp_obj_new_float(x0);
+ }
+ 
+ MP_DEFINE_CONST_FUN_OBJ_KW(approx_fmin_obj, 2, approx_fmin);
+ 
+ #if 0
+ static void approx_jacobi(const mp_obj_type_t *type, mp_obj_t fun, mp_float_t *x, mp_float_t *y, uint16_t len, mp_float_t *params, uint8_t nparams, mp_float_t *jacobi, mp_float_t *grad) {
+     /* Calculates the Jacobian and the gradient of the cost function
+      * 
+      * The entries in the Jacobian are 
+      * J(m, n) = de_m/da_n, 
+      * 
+      * where 
+      * 
+      * e_m = (f(x_m, a1, a2, ...) - y_m)/sigma_m is the error at x_m, 
+      * 
+      * and
+      * 
+      * a1, a2, ..., a_n are the free parameters
+      */
+     mp_obj_t *fargs0 = m_new(mp_obj_t, lenp+1); 
+     mp_obj_t *fargs1 = m_new(mp_obj_t, lenp+1);
+     for(uint8_t p=0; p < nparams; p++) {
+         fargs0[p+1] = mp_obj_new_float(params[p]);
+         fargs1[p+1] = mp_obj_new_float(params[p]);
+     }
+     for(uint8_t p=0; p < nparams; p++) {
+         mp_float_t da = params[p] != 0.0 ? (1.0 + APPROX_NONZDELTA) * params[p] : APPROX_ZDELTA;
+         fargs1[p+1] = mp_obj_new_float(params[p] + da);
+         grad[p] = 0.0;
+         for(uint16_t i=0; i < len; i++) {
+             mp_float_t f0 = approx_python_call(type, fun, x[i], fargs0, nparams);
+             mp_float_t f1 = approx_python_call(type, fun, x[i], fargs1, nparams);
+             jacobi[i*nparamp+p] = (f1 - f0) / da;
+             grad[p] += (f0 - y[i]) * jacobi[i*nparamp+p];
+         }
+         fargs1[p+1] = fargs0[p+1]; // set back to the original value
+     }
+ }
+ 
+ static void approx_delta(mp_float_t *jacobi, mp_float_t *grad, uint16_t len, uint8_t nparams, mp_float_t lambda) {
+     // 
+ }
+ 
+ mp_obj_t approx_curve_fit(size_t n_args, const mp_obj_t *pos_args, mp_map_t *kw_args) {
+ 	// Levenberg-Marquardt non-linear fit
+     // The implementation follows the introductory discussion in Mark Tanstrum's paper, https://arxiv.org/abs/1201.5885
+     static const mp_arg_t allowed_args[] = {
+         { MP_QSTR_, MP_ARG_REQUIRED | MP_ARG_OBJ, {.u_rom_obj = mp_const_none } },
+         { MP_QSTR_, MP_ARG_REQUIRED | MP_ARG_OBJ, {.u_rom_obj = mp_const_none } },
+         { MP_QSTR_, MP_ARG_REQUIRED | MP_ARG_OBJ, {.u_rom_obj = mp_const_none } },
+         { MP_QSTR_p0, MP_ARG_REQUIRED | MP_ARG_OBJ, {.u_rom_obj = mp_const_none } },
+         { MP_QSTR_xatol, MP_ARG_KW_ONLY | MP_ARG_OBJ, {.u_rom_obj = MP_ROM_PTR(&xtolerance)} },
+         { MP_QSTR_fatol, MP_ARG_KW_ONLY | MP_ARG_OBJ, {.u_rom_obj = MP_ROM_PTR(&xtolerance)} },
+         { MP_QSTR_maxiter, MP_ARG_KW_ONLY | MP_ARG_OBJ, {.u_rom_obj = mp_const_none} },
+     };
+ 
+     mp_arg_val_t args[MP_ARRAY_SIZE(allowed_args)];
+     mp_arg_parse_all(n_args, pos_args, kw_args, MP_ARRAY_SIZE(allowed_args), allowed_args, args);
+ 
+ 	mp_obj_t fun = args[0].u_obj;
+ 	const mp_obj_type_t *type = mp_obj_get_type(fun);
+ 	if(type->call == NULL) {
+ 		mp_raise_TypeError(translate("first argument must be a function"));
+ 	}
+     
+ 	mp_obj_t x_obj = args[1].u_obj;
+ 	mp_obj_t y_obj = args[2].u_obj;
+     mp_obj_t p0_obj = args[3].u_obj;
+     if(!ndarray_object_is_nditerable(x_obj) || !ndarray_object_is_nditerable(y_obj)) {
+         mp_raise_TypeError(translate("data must be iterable"));
+     }
+     if(!ndarray_object_is_nditerable(p0_obj)) {
+         mp_raise_TypeError(translate("initial values must be iterable"));
+     }
+     uint16_t len = (uint16_t)mp_obj_get_int(mp_obj_len_maybe(x_obj));
+     uint8_t lenp = (uint8_t)mp_obj_get_int(mp_obj_len_maybe(p0_obj));
+     if(len != (uint16_t)mp_obj_get_int(mp_obj_len_maybe(y_obj))) {
+         mp_raise_ValueError(translate("data must be of equal length"));
+     }
+ 
+     mp_float_t *x = m_new(mp_float_t, len);
+     fill_array_iterable(x, x_obj);
+     mp_float_t *y = m_new(mp_float_t, len);
+     fill_array_iterable(y, y_obj);
+     mp_float_t *p0 = m_new(mp_float_t, lenp);
+     fill_array_iterable(p0, p0_obj);
+     mp_float_t *grad = m_new(mp_float_t, len);
+     mp_float_t *jacobi = m_new(mp_float_t, len*len);
+     mp_obj_t *fargs = m_new(mp_obj_t, lenp+1);
+ 
+     m_del(mp_float_t, p0, lenp);
+ 	// parameters controlling convergence conditions
+ 	//mp_float_t xatol = mp_obj_get_float(args[2].u_obj);
+ 	//mp_float_t fatol = mp_obj_get_float(args[3].u_obj);	
+     
+     // this has finite binary representation; we will multiply/divide by 4
+     //mp_float_t lambda = 0.0078125; 
+     
+     //linalg_invert_matrix(mp_float_t *data, size_t N)
+     
+     m_del(mp_float_t, x, len);
+     m_del(mp_float_t, y, len);
+     m_del(mp_float_t, grad, len);
+     m_del(mp_float_t, jacobi, len*len);
+     m_del(mp_obj_t, fargs, lenp+1);
+     return mp_const_none;
+ }
+ 
+ MP_DEFINE_CONST_FUN_OBJ_KW(approx_curve_fit_obj, 2, approx_curve_fit);
+ 
+ #endif
+ 
+ STATIC mp_obj_t approx_interp(size_t n_args, const mp_obj_t *pos_args, mp_map_t *kw_args) {
+     static const mp_arg_t allowed_args[] = {
+         { MP_QSTR_, MP_ARG_REQUIRED | MP_ARG_OBJ, {.u_rom_obj = mp_const_none } },
+         { MP_QSTR_, MP_ARG_REQUIRED | MP_ARG_OBJ, {.u_rom_obj = mp_const_none } },
+         { MP_QSTR_, MP_ARG_REQUIRED | MP_ARG_OBJ, {.u_rom_obj = mp_const_none } },
+         { MP_QSTR_left, MP_ARG_KW_ONLY | MP_ARG_OBJ, {.u_rom_obj = mp_const_none} },
+         { MP_QSTR_right, MP_ARG_KW_ONLY | MP_ARG_OBJ, {.u_rom_obj = mp_const_none} },
+     };
+ 	mp_arg_val_t args[MP_ARRAY_SIZE(allowed_args)];
+     mp_arg_parse_all(n_args, pos_args, kw_args, MP_ARRAY_SIZE(allowed_args), allowed_args, args);
+ 	
+ 	ndarray_obj_t *x = ndarray_from_mp_obj(args[0].u_obj);
+ 	ndarray_obj_t *xp = ndarray_from_mp_obj(args[1].u_obj); // xp must hold an increasing sequence of independent values
+ 	ndarray_obj_t *fp = ndarray_from_mp_obj(args[2].u_obj);
+ 	// TODO: check if the shape is (1, n), or (m, 1)
+ 	if(((xp->m != 1) && (xp->n != 1)) || ((fp->m != 1) && (fp->n != 1)) || 
+ 		(xp->array->len < 2) || (fp->array->len < 2) || (xp->array->len != fp->array->len)) {
+ 		mp_raise_ValueError(translate("interp is defined for 1D arrays of equal length"));
+ 	}
+ 	ndarray_obj_t *y = create_new_ndarray(x->m, x->n, NDARRAY_FLOAT);
+ 	mp_float_t left_value, right_value;
+ 	mp_float_t xp_left = ndarray_get_float_value(xp->array->items, xp->array->typecode, 0);
+ 	mp_float_t xp_right = ndarray_get_float_value(xp->array->items, xp->array->typecode, xp->array->len-1);
+ 	if(args[3].u_obj == mp_const_none) {
+ 		left_value = ndarray_get_float_value(fp->array->items, fp->array->typecode, 0);
+ 	} else {
+ 		left_value = mp_obj_get_float(args[3].u_obj);
+ 	}
+ 	if(args[4].u_obj == mp_const_none) {
+ 		right_value = ndarray_get_float_value(fp->array->items, fp->array->typecode, fp->array->len-1);
+ 	} else {
+ 		right_value = mp_obj_get_float(args[4].u_obj);
+ 	}
+ 	mp_float_t *yarray = (mp_float_t *)y->array->items;
+ 	for(size_t i=0; i < x->array->len; i++, yarray++) {
+ 		mp_float_t x_value = ndarray_get_float_value(x->array->items, x->array->typecode, i);
+ 		if(x_value <= xp_left) {
+ 			*yarray = left_value;
+ 		} else if(x_value >= xp_right) {
+ 			*yarray = right_value;
+ 		} else { // do the binary search here
+ 			mp_float_t xp_left_, xp_right_;
+ 			mp_float_t fp_left, fp_right;
+ 			size_t left_index = 0, right_index = xp->array->len - 1, middle_index;
+ 			while(right_index - left_index > 1) {
+ 				middle_index = left_index + (right_index - left_index) / 2;
+ 				mp_float_t xp_middle = ndarray_get_float_value(xp->array->items, xp->array->typecode, middle_index);
+ 				if(x_value <= xp_middle) {
+ 					right_index = middle_index;
+ 				} else {
+ 					left_index = middle_index;
+ 				}
+ 			}
+ 			xp_left_ = ndarray_get_float_value(xp->array->items, xp->array->typecode, left_index);
+ 			xp_right_ = ndarray_get_float_value(xp->array->items, xp->array->typecode, right_index);
+ 			fp_left = ndarray_get_float_value(fp->array->items, fp->array->typecode, left_index);
+ 			fp_right = ndarray_get_float_value(fp->array->items, fp->array->typecode, right_index);
+ 			*yarray = fp_left + (x_value - xp_left_) * (fp_right - fp_left) / (xp_right_ - xp_left_);
+ 		}
+ 	}
+ 	return MP_OBJ_FROM_PTR(y);
+ }
+ 
+ MP_DEFINE_CONST_FUN_OBJ_KW(approx_interp_obj, 2, approx_interp);
+ 
+ STATIC const mp_rom_map_elem_t ulab_approx_globals_table[] = {
+     { MP_OBJ_NEW_QSTR(MP_QSTR___name__), MP_OBJ_NEW_QSTR(MP_QSTR_approx) },
+     { MP_OBJ_NEW_QSTR(MP_QSTR_bisect), (mp_obj_t)&approx_bisect_obj },
+     { MP_OBJ_NEW_QSTR(MP_QSTR_newton), (mp_obj_t)&approx_newton_obj },
+     { MP_OBJ_NEW_QSTR(MP_QSTR_fmin), (mp_obj_t)&approx_fmin_obj },
+ //    { MP_OBJ_NEW_QSTR(MP_QSTR_curve_fit), (mp_obj_t)&approx_curve_fit_obj },
+     { MP_OBJ_NEW_QSTR(MP_QSTR_interp), (mp_obj_t)&approx_interp_obj },
+ };
+ 
+ STATIC MP_DEFINE_CONST_DICT(mp_module_ulab_approx_globals, ulab_approx_globals_table);
+ 
+ mp_obj_module_t ulab_approx_module = {
+     .base = { &mp_type_module },
+     .globals = (mp_obj_dict_t*)&mp_module_ulab_approx_globals,
+ };
+ 
+ #endif
+ 
diff -crNb MicorpythonOriginal1.12/ulab/code/approx.h micropython1.12_withUlab/ulab/code/approx.h
*** MicorpythonOriginal1.12/ulab/code/approx.h	1970-01-01 02:00:00.000000000 +0200
--- micropython1.12_withUlab/ulab/code/approx.h	2020-06-18 18:25:25.706905000 +0200
***************
*** 0 ****
--- 1,42 ----
+ 
+ /*
+  * This file is part of the micropython-ulab project,
+  *
+  * https://github.com/v923z/micropython-ulab
+  *
+  * The MIT License (MIT)
+  *
+  * Copyright (c) 2020 Zoltán Vörös
+ */
+ 
+ #ifndef _APPROX_
+ #define _APPROX_
+ 
+ #include "ulab.h"
+ #include "ndarray.h"
+ 
+ #if ULAB_APPROX_MODULE
+ 
+ // this typedef is lifted from objfloat.c, because mp_obj_float_t is not exposed
+ typedef struct _mp_obj_float_t {
+     mp_obj_base_t base;
+     mp_float_t value;
+ } mp_obj_float_t;
+ 
+ #define 	APPROX_EPS			1.0e-4
+ #define 	APPROX_NONZDELTA	0.05
+ #define 	APPROX_ZDELTA		0.00025
+ #define		APPROX_ALPHA		1.0
+ #define		APPROX_BETA			2.0
+ #define		APPROX_GAMMA		0.5
+ #define		APPROX_DELTA		0.5
+ 
+ extern mp_obj_module_t ulab_approx_module;
+ 
+ MP_DECLARE_CONST_FUN_OBJ_KW(approx_bisect_obj);
+ MP_DECLARE_CONST_FUN_OBJ_KW(approx_newton_obj);
+ MP_DECLARE_CONST_FUN_OBJ_KW(approx_fmin_obj);
+ MP_DECLARE_CONST_FUN_OBJ_KW(approx_interp_obj);
+ 
+ #endif
+ #endif
diff -crNb MicorpythonOriginal1.12/ulab/code/compare.c micropython1.12_withUlab/ulab/code/compare.c
*** MicorpythonOriginal1.12/ulab/code/compare.c	1970-01-01 02:00:00.000000000 +0200
--- micropython1.12_withUlab/ulab/code/compare.c	2020-06-18 18:25:25.706905000 +0200
***************
*** 0 ****
--- 1,194 ----
+ 
+ /*
+  * This file is part of the micropython-ulab project,
+  *
+  * https://github.com/v923z/micropython-ulab
+  *
+  * The MIT License (MIT)
+  *
+  * Copyright (c) 2020 Zoltán Vörös
+ */
+ 
+ #include <math.h>
+ #include <stdlib.h>
+ #include <string.h>
+ #include "py/obj.h"
+ #include "py/runtime.h"
+ #include "py/misc.h"
+ #include "compare.h"
+ 
+ #if ULAB_COMPARE_MODULE
+ 
+ static mp_obj_t compare_function(mp_obj_t x1, mp_obj_t x2, uint8_t comptype) {
+ 	// the function is implemented for scalars and ndarrays only, with partial 
+ 	// broadcasting: arguments must be either scalars, or ndarrays of equal size/shape
+ 	if(!(MP_OBJ_IS_INT(x1) || mp_obj_is_float(x1) || MP_OBJ_IS_TYPE(x1, &ulab_ndarray_type)) &&
+ 		!(MP_OBJ_IS_INT(x2) || mp_obj_is_float(x2) || MP_OBJ_IS_TYPE(x2, &ulab_ndarray_type))) {
+ 		mp_raise_TypeError(translate("function is implemented for scalars and ndarrays only"));
+ 	}
+ 	ndarray_obj_t *ndarray1 = ndarray_from_mp_obj(x1);
+ 	ndarray_obj_t *ndarray2 = ndarray_from_mp_obj(x2); 
+ 	// check, whether partial broadcasting is possible here
+ 	if((ndarray1->m != ndarray2->m) || (ndarray1->n != ndarray2->n)) {
+ 		if((ndarray1->array->len != 1) && (ndarray2->array->len != 1)) {
+             mp_raise_ValueError(translate("operands could not be broadcast together"));
+ 		}
+ 	}
+ 	if((comptype == MP_BINARY_OP_EQUAL) || (comptype == MP_BINARY_OP_NOT_EQUAL)) {
+ 		return ndarray_binary_op(comptype, x1, x2);
+ 	}
+ 	size_t m = MAX(ndarray1->m, ndarray2->m);
+ 	size_t n = MAX(ndarray1->n, ndarray2->n);
+ 	size_t len = MAX(ndarray1->array->len, ndarray2->array->len);
+ 	size_t inc1 = ndarray1->array->len == 1 ? 0 : 1;
+ 	size_t inc2 = ndarray2->array->len == 1 ? 0 : 1;
+ 	// These are the upcasting rules
+ 	// float always becomes float
+ 	// operation on identical types preserves type
+ 	// uint8 + int8 => int16
+ 	// uint8 + int16 => int16
+ 	// uint8 + uint16 => uint16
+ 	// int8 + int16 => int16
+ 	// int8 + uint16 => uint16
+ 	// uint16 + int16 => float
+ 	// The parameters of RUN_BINARY_LOOP are 
+ 	// typecode of result, type_out, type_left, type_right, lhs operand, rhs operand, operator
+ 	if(ndarray1->array->typecode == NDARRAY_UINT8) {
+ 		if(ndarray2->array->typecode == NDARRAY_UINT8) {
+ 			RUN_COMPARE_LOOP(NDARRAY_UINT8, uint8_t, uint8_t, uint8_t, ndarray1, ndarray2, comptype, m, n, len, inc1, inc2);
+ 		} else if(ndarray2->array->typecode == NDARRAY_INT8) {
+ 			RUN_COMPARE_LOOP(NDARRAY_INT16, int16_t, uint8_t, int8_t, ndarray1, ndarray2, comptype, m, n, len, inc1, inc2);
+ 		} else if(ndarray2->array->typecode == NDARRAY_UINT16) {
+ 			RUN_COMPARE_LOOP(NDARRAY_UINT16, uint16_t, uint8_t, uint16_t, ndarray1, ndarray2, comptype, m, n, len, inc1, inc2);
+ 		} else if(ndarray2->array->typecode == NDARRAY_INT16) {
+ 			RUN_COMPARE_LOOP(NDARRAY_INT16, int16_t, uint8_t, int16_t, ndarray1, ndarray2, comptype, m, n, len, inc1, inc2);
+ 		} else if(ndarray2->array->typecode == NDARRAY_FLOAT) {
+ 			RUN_COMPARE_LOOP(NDARRAY_FLOAT, mp_float_t, uint8_t, mp_float_t, ndarray1, ndarray2, comptype, m, n, len, inc1, inc2);
+ 		}
+ 	} else if(ndarray1->array->typecode == NDARRAY_INT8) {
+ 		if(ndarray2->array->typecode == NDARRAY_UINT8) {
+ 			RUN_COMPARE_LOOP(NDARRAY_INT16, int16_t, int8_t, uint8_t, ndarray1, ndarray2, comptype, m, n, len, inc1, inc2);
+ 		} else if(ndarray2->array->typecode == NDARRAY_INT8) {
+ 			RUN_COMPARE_LOOP(NDARRAY_INT8, int8_t, int8_t, int8_t, ndarray1, ndarray2, comptype, m, n, len, inc1, inc2);
+ 		} else if(ndarray2->array->typecode == NDARRAY_UINT16) {
+ 			RUN_COMPARE_LOOP(NDARRAY_INT16, int16_t, int8_t, uint16_t, ndarray1, ndarray2, comptype, m, n, len, inc1, inc2);
+ 		} else if(ndarray2->array->typecode == NDARRAY_INT16) {
+ 			RUN_COMPARE_LOOP(NDARRAY_INT16, int16_t, int8_t, int16_t, ndarray1, ndarray2, comptype, m, n, len, inc1, inc2);
+ 		} else if(ndarray2->array->typecode == NDARRAY_FLOAT) {
+ 			RUN_COMPARE_LOOP(NDARRAY_FLOAT, mp_float_t, int8_t, mp_float_t, ndarray1, ndarray2, comptype, m, n, len, inc1, inc2);
+ 		}                
+ 	} else if(ndarray1->array->typecode == NDARRAY_UINT16) {
+ 		if(ndarray2->array->typecode == NDARRAY_UINT8) {
+ 			RUN_COMPARE_LOOP(NDARRAY_UINT16, uint16_t, uint16_t, uint8_t, ndarray1, ndarray2, comptype, m, n, len, inc1, inc2);
+ 		} else if(ndarray2->array->typecode == NDARRAY_INT8) {
+ 			RUN_COMPARE_LOOP(NDARRAY_UINT16, uint16_t, uint16_t, int8_t, ndarray1, ndarray2, comptype, m, n, len, inc1, inc2);
+ 		} else if(ndarray2->array->typecode == NDARRAY_UINT16) {
+ 			RUN_COMPARE_LOOP(NDARRAY_UINT16, uint16_t, uint16_t, uint16_t, ndarray1, ndarray2, comptype, m, n, len, inc1, inc2);
+ 		} else if(ndarray2->array->typecode == NDARRAY_INT16) {
+ 			RUN_COMPARE_LOOP(NDARRAY_FLOAT, mp_float_t, uint16_t, int16_t, ndarray1, ndarray2, comptype, m, n, len, inc1, inc2);
+ 		} else if(ndarray2->array->typecode == NDARRAY_FLOAT) {
+ 			RUN_COMPARE_LOOP(NDARRAY_FLOAT, mp_float_t, uint8_t, mp_float_t, ndarray1, ndarray2, comptype, m, n, len, inc1, inc2);
+ 		}
+ 	} else if(ndarray1->array->typecode == NDARRAY_INT16) {
+ 		if(ndarray2->array->typecode == NDARRAY_UINT8) {
+ 			RUN_COMPARE_LOOP(NDARRAY_INT16, int16_t, int16_t, uint8_t, ndarray1, ndarray2, comptype, m, n, len, inc1, inc2);
+ 		} else if(ndarray2->array->typecode == NDARRAY_INT8) {
+ 			RUN_COMPARE_LOOP(NDARRAY_INT16, int16_t, int16_t, int8_t, ndarray1, ndarray2, comptype, m, n, len, inc1, inc2);
+ 		} else if(ndarray2->array->typecode == NDARRAY_UINT16) {
+ 			RUN_COMPARE_LOOP(NDARRAY_FLOAT, mp_float_t, int16_t, uint16_t, ndarray1, ndarray2, comptype, m, n, len, inc1, inc2);
+ 		} else if(ndarray2->array->typecode == NDARRAY_INT16) {
+ 			RUN_COMPARE_LOOP(NDARRAY_INT16, int16_t, int16_t, int16_t, ndarray1, ndarray2, comptype, m, n, len, inc1, inc2);
+ 		} else if(ndarray2->array->typecode == NDARRAY_FLOAT) {
+ 			RUN_COMPARE_LOOP(NDARRAY_FLOAT, mp_float_t, uint16_t, mp_float_t, ndarray1, ndarray2, comptype, m, n, len, inc1, inc2);
+ 		}
+ 	} else if(ndarray1->array->typecode == NDARRAY_FLOAT) {
+ 		if(ndarray2->array->typecode == NDARRAY_UINT8) {
+ 			RUN_COMPARE_LOOP(NDARRAY_FLOAT, mp_float_t, mp_float_t, uint8_t, ndarray1, ndarray2, comptype, m, n, len, inc1, inc2);
+ 		} else if(ndarray2->array->typecode == NDARRAY_INT8) {
+ 			RUN_COMPARE_LOOP(NDARRAY_FLOAT, mp_float_t, mp_float_t, int8_t, ndarray1, ndarray2, comptype, m, n, len, inc1, inc2);
+ 		} else if(ndarray2->array->typecode == NDARRAY_UINT16) {
+ 			RUN_COMPARE_LOOP(NDARRAY_FLOAT, mp_float_t, mp_float_t, uint16_t, ndarray1, ndarray2, comptype, m, n, len, inc1, inc2);
+ 		} else if(ndarray2->array->typecode == NDARRAY_INT16) {
+ 			RUN_COMPARE_LOOP(NDARRAY_FLOAT, mp_float_t, mp_float_t, int16_t, ndarray1, ndarray2, comptype, m, n, len, inc1, inc2);
+ 		} else if(ndarray2->array->typecode == NDARRAY_FLOAT) {
+ 			RUN_COMPARE_LOOP(NDARRAY_FLOAT, mp_float_t, mp_float_t, mp_float_t, ndarray1, ndarray2, comptype, m, n, len, inc1, inc2);
+ 		}
+ 	}
+     return mp_const_none; // we should never reach this point
+ }
+ 
+ static mp_obj_t compare_equal_helper(mp_obj_t x1, mp_obj_t x2, uint8_t comptype) {
+ 	// scalar comparisons should return a single object of mp_obj_t type
+ 	mp_obj_t result = compare_function(x1, x2, comptype);
+ 	if((MP_OBJ_IS_INT(x1) || mp_obj_is_float(x1)) && (MP_OBJ_IS_INT(x2) || mp_obj_is_float(x2))) {
+ 		mp_obj_iter_buf_t iter_buf;
+ 		mp_obj_t iterable = mp_getiter(result, &iter_buf);
+ 		mp_obj_t item = mp_iternext(iterable);
+ 		return item;
+ 	}
+ 	return result;	
+ 
+ }
+ static mp_obj_t compare_equal(mp_obj_t x1, mp_obj_t x2) {
+ 	return compare_equal_helper(x1, x2, MP_BINARY_OP_EQUAL);
+ }
+ 
+ MP_DEFINE_CONST_FUN_OBJ_2(compare_equal_obj, compare_equal);
+ 
+ static mp_obj_t compare_not_equal(mp_obj_t x1, mp_obj_t x2) {
+ 	return compare_equal_helper(x1, x2, MP_BINARY_OP_NOT_EQUAL);
+ }
+ 
+ MP_DEFINE_CONST_FUN_OBJ_2(compare_not_equal_obj, compare_not_equal);
+ 
+ static mp_obj_t compare_minimum(mp_obj_t x1, mp_obj_t x2) {
+ 	// extra round, so that we can return minimum(3, 4) properly
+ 	mp_obj_t result = compare_function(x1, x2, COMPARE_MINIMUM);
+ 	if((MP_OBJ_IS_INT(x1) || mp_obj_is_float(x1)) && (MP_OBJ_IS_INT(x2) || mp_obj_is_float(x2))) {
+ 		ndarray_obj_t *ndarray = MP_OBJ_TO_PTR(result);
+ 		return mp_binary_get_val_array(ndarray->array->typecode, ndarray->array->items, 0);
+ 	}
+ 	return result;
+ }
+ 
+ MP_DEFINE_CONST_FUN_OBJ_2(compare_minimum_obj, compare_minimum);
+ 
+ static mp_obj_t compare_maximum(mp_obj_t x1, mp_obj_t x2) {
+ 	// extra round, so that we can return maximum(3, 4) properly
+ 	mp_obj_t result = compare_function(x1, x2, COMPARE_MAXIMUM);
+ 	if((MP_OBJ_IS_INT(x1) || mp_obj_is_float(x1)) && (MP_OBJ_IS_INT(x2) || mp_obj_is_float(x2))) {
+ 		ndarray_obj_t *ndarray = MP_OBJ_TO_PTR(result);
+ 		return mp_binary_get_val_array(ndarray->array->typecode, ndarray->array->items, 0);
+ 	}
+ 	return result;
+ }
+ 
+ MP_DEFINE_CONST_FUN_OBJ_2(compare_maximum_obj, compare_maximum);
+ 
+ static mp_obj_t compare_clip(mp_obj_t x1, mp_obj_t x2, mp_obj_t x3) {
+ 	// Note: this function could be made faster by implementing a single-loop comparison in 
+ 	// RUN_COMPARE_LOOP. However, that would add around 2 kB of compile size, while we 
+ 	// would not gain a factor of two in speed, since the two comparisons should still be 
+ 	// evaluated. In contrast, calling the function twice adds only 140 bytes to the firmware
+ 	return compare_function(x2, compare_function(x1, x3, COMPARE_MINIMUM), COMPARE_MAXIMUM);
+ }
+ 
+ MP_DEFINE_CONST_FUN_OBJ_3(compare_clip_obj, compare_clip);
+ 
+ STATIC const mp_rom_map_elem_t ulab_compare_globals_table[] = {
+     { MP_OBJ_NEW_QSTR(MP_QSTR___name__), MP_OBJ_NEW_QSTR(MP_QSTR_compare) },
+     { MP_OBJ_NEW_QSTR(MP_QSTR_equal), (mp_obj_t)&compare_equal_obj },
+     { MP_OBJ_NEW_QSTR(MP_QSTR_not_equal), (mp_obj_t)&compare_not_equal_obj },
+ 	{ MP_OBJ_NEW_QSTR(MP_QSTR_maximum), (mp_obj_t)&compare_maximum_obj },
+     { MP_OBJ_NEW_QSTR(MP_QSTR_minimum), (mp_obj_t)&compare_minimum_obj },
+ 	{ MP_OBJ_NEW_QSTR(MP_QSTR_clip), (mp_obj_t)&compare_clip_obj },
+ };
+ 
+ STATIC MP_DEFINE_CONST_DICT(mp_module_ulab_compare_globals, ulab_compare_globals_table);
+ 
+ mp_obj_module_t ulab_compare_module = {
+     .base = { &mp_type_module },
+     .globals = (mp_obj_dict_t*)&mp_module_ulab_compare_globals,
+ };
+ 
+ #endif
diff -crNb MicorpythonOriginal1.12/ulab/code/compare.h micropython1.12_withUlab/ulab/code/compare.h
*** MicorpythonOriginal1.12/ulab/code/compare.h	1970-01-01 02:00:00.000000000 +0200
--- micropython1.12_withUlab/ulab/code/compare.h	2020-06-18 18:25:25.706905000 +0200
***************
*** 0 ****
--- 1,45 ----
+ 
+ /*
+  * This file is part of the micropython-ulab project,
+  *
+  * https://github.com/v923z/micropython-ulab
+  *
+  * The MIT License (MIT)
+  *
+  * Copyright (c) 2020 Zoltán Vörös
+ */
+ 
+ #ifndef _COMPARE_
+ #define _COMPARE_
+ 
+ #include "ulab.h"
+ #include "ndarray.h"
+ 
+ #if ULAB_COMPARE_MODULE
+ 
+ enum COMPARE_FUNCTION_TYPE {
+     COMPARE_MINIMUM,
+     COMPARE_MAXIMUM,
+     COMPARE_CLIP,
+ };
+ 
+ extern mp_obj_module_t ulab_compare_module;
+ 
+ MP_DECLARE_CONST_FUN_OBJ_2(compare_equal_obj);
+ MP_DECLARE_CONST_FUN_OBJ_2(compare_not_equal_obj);
+ MP_DECLARE_CONST_FUN_OBJ_2(compare_minimum_obj);
+ MP_DECLARE_CONST_FUN_OBJ_2(compare_maximum_obj);
+ MP_DECLARE_CONST_FUN_OBJ_3(compare_clip_obj);
+ 
+ #define RUN_COMPARE_LOOP(typecode, type_out, type1, type2, nd1, nd2, op, m, n, len, inc1, inc2) do {\
+ 	type1 *array1 = (type1 *)(nd1)->array->items;\
+     type2 *array2 = (type2 *)(nd2)->array->items;\
+ 	ndarray_obj_t *out = create_new_ndarray((m), (n), (typecode));\
+ 	type_out *(odata) = (type_out *)out->array->items;\
+ 	if((op) == COMPARE_MINIMUM) { for(size_t i=0; i < (len); i++, array1+=(inc1), array2+=(inc2)) *odata++ = *array1 < *array2 ? *array1 : *array2; }\
+ 	if((op) == COMPARE_MAXIMUM) { for(size_t i=0; i < (len); i++, array1+=(inc1), array2+=(inc2)) *odata++ = *array1 > *array2 ? *array1 : *array2; }\
+ 	return MP_OBJ_FROM_PTR(out);\
+ } while(0)
+ 
+ #endif
+ #endif
diff -crNb MicorpythonOriginal1.12/ulab/code/create.c micropython1.12_withUlab/ulab/code/create.c
*** MicorpythonOriginal1.12/ulab/code/create.c	1970-01-01 02:00:00.000000000 +0200
--- micropython1.12_withUlab/ulab/code/create.c	2020-06-18 18:25:25.706905000 +0200
***************
*** 0 ****
--- 1,155 ----
+ /*
+  * This file is part of the micropython-ulab project,
+  *
+  * https://github.com/v923z/micropython-ulab
+  *
+  * The MIT License (MIT)
+  *
+  * Copyright (c) 2020 Jeff Epler for Adafruit Industries
+  * 				 2019-2020 Zoltán Vörös
+ */
+ 
+ 
+ #include "py/obj.h"
+ #include "py/runtime.h"
+ #include "create.h"
+ 
+ static mp_obj_t create_zeros_ones(size_t n_args, const mp_obj_t *pos_args, mp_map_t *kw_args, uint8_t kind) {
+     static const mp_arg_t allowed_args[] = {
+         { MP_QSTR_, MP_ARG_REQUIRED | MP_ARG_OBJ, {.u_obj = MP_OBJ_NULL} } ,
+         { MP_QSTR_dtype, MP_ARG_KW_ONLY | MP_ARG_INT, {.u_int = NDARRAY_FLOAT} },
+     };
+ 
+     mp_arg_val_t args[MP_ARRAY_SIZE(allowed_args)];
+     mp_arg_parse_all(n_args, pos_args, kw_args, MP_ARRAY_SIZE(allowed_args), allowed_args, args);
+     
+     uint8_t dtype = args[1].u_int;
+     if(!MP_OBJ_IS_INT(args[0].u_obj) && !MP_OBJ_IS_TYPE(args[0].u_obj, &mp_type_tuple)) {
+         mp_raise_TypeError(translate("input argument must be an integer or a 2-tuple"));
+     }
+     ndarray_obj_t *ndarray = NULL;
+     if(MP_OBJ_IS_INT(args[0].u_obj)) {
+         size_t n = mp_obj_get_int(args[0].u_obj);
+         ndarray = create_new_ndarray(1, n, dtype);
+     } else if(MP_OBJ_IS_TYPE(args[0].u_obj, &mp_type_tuple)) {
+         mp_obj_tuple_t *tuple = MP_OBJ_TO_PTR(args[0].u_obj);
+         if(tuple->len != 2) {
+             mp_raise_TypeError(translate("input argument must be an integer or a 2-tuple"));
+         }
+         ndarray = create_new_ndarray(mp_obj_get_int(tuple->items[0]), 
+                                                   mp_obj_get_int(tuple->items[1]), dtype);
+     }
+     if(kind == 1) {
+         mp_obj_t one = mp_obj_new_int(1);
+         for(size_t i=0; i < ndarray->array->len; i++) {
+             mp_binary_set_val_array(dtype, ndarray->array->items, i, one);
+         }
+     }
+     return MP_OBJ_FROM_PTR(ndarray);
+ }
+ 
+ mp_obj_t create_zeros(size_t n_args, const mp_obj_t *pos_args, mp_map_t *kw_args) {
+     return create_zeros_ones(n_args, pos_args, kw_args, 0);
+ }
+ 
+ MP_DEFINE_CONST_FUN_OBJ_KW(create_zeros_obj, 0, create_zeros);
+ 
+ mp_obj_t create_ones(size_t n_args, const mp_obj_t *pos_args, mp_map_t *kw_args) {
+     return create_zeros_ones(n_args, pos_args, kw_args, 1);
+ }
+ 
+ MP_DEFINE_CONST_FUN_OBJ_KW(create_ones_obj, 0, create_ones);
+ 
+ mp_obj_t create_eye(size_t n_args, const mp_obj_t *pos_args, mp_map_t *kw_args) {
+     static const mp_arg_t allowed_args[] = {
+         { MP_QSTR_, MP_ARG_REQUIRED | MP_ARG_INT, {.u_int = 0} },
+         { MP_QSTR_M, MP_ARG_KW_ONLY | MP_ARG_OBJ, {.u_rom_obj = mp_const_none } },
+         { MP_QSTR_k, MP_ARG_KW_ONLY | MP_ARG_INT, {.u_int = 0} },        
+         { MP_QSTR_dtype, MP_ARG_KW_ONLY | MP_ARG_INT, {.u_int = NDARRAY_FLOAT} },
+     };
+ 
+     mp_arg_val_t args[MP_ARRAY_SIZE(allowed_args)];
+     mp_arg_parse_all(n_args, pos_args, kw_args, MP_ARRAY_SIZE(allowed_args), allowed_args, args);
+ 
+     size_t n = args[0].u_int, m;
+     size_t k = args[2].u_int;
+     uint8_t dtype = args[3].u_int;
+     if(args[1].u_rom_obj == mp_const_none) {
+         m = n;
+     } else {
+         m = mp_obj_get_int(args[1].u_rom_obj);
+     }
+     
+     ndarray_obj_t *ndarray = create_new_ndarray(m, n, dtype);
+     mp_obj_t one = mp_obj_new_int(1);
+     size_t i = 0;
+     if((k >= 0) && (k < n)) {
+         while(k < n) {
+             mp_binary_set_val_array(dtype, ndarray->array->items, i*n+k, one);
+             k++;
+             i++;
+         }
+     } else if((k < 0) && (-k < m)) {
+         k = -k;
+         i = 0;
+         while(k < m) {
+             mp_binary_set_val_array(dtype, ndarray->array->items, k*n+i, one);
+             k++;
+             i++;
+         }
+     }
+     return MP_OBJ_FROM_PTR(ndarray);
+ }
+ 
+ MP_DEFINE_CONST_FUN_OBJ_KW(create_eye_obj, 0, create_eye);
+ 
+ mp_obj_t create_linspace(size_t n_args, const mp_obj_t *pos_args, mp_map_t *kw_args) {
+     static const mp_arg_t allowed_args[] = {
+         { MP_QSTR_, MP_ARG_REQUIRED | MP_ARG_OBJ, {.u_rom_obj = mp_const_none } },
+         { MP_QSTR_, MP_ARG_REQUIRED | MP_ARG_OBJ, {.u_rom_obj = mp_const_none } },
+         { MP_QSTR_num, MP_ARG_INT, {.u_int = 50} },
+         { MP_QSTR_endpoint, MP_ARG_KW_ONLY | MP_ARG_OBJ, {.u_rom_obj = mp_const_true} },
+         { MP_QSTR_retstep, MP_ARG_KW_ONLY | MP_ARG_OBJ, {.u_rom_obj = mp_const_false} },
+         { MP_QSTR_dtype, MP_ARG_KW_ONLY | MP_ARG_INT, {.u_int = NDARRAY_FLOAT} },
+     };
+ 
+     mp_arg_val_t args[MP_ARRAY_SIZE(allowed_args)];
+     mp_arg_parse_all(n_args, pos_args, kw_args, MP_ARRAY_SIZE(allowed_args), allowed_args, args);
+ 
+     uint16_t len = args[2].u_int;
+     if(len < 2) {
+         mp_raise_ValueError(translate("number of points must be at least 2"));
+     }
+     mp_float_t value, step;
+     value = mp_obj_get_float(args[0].u_obj);
+     uint8_t typecode = args[5].u_int;
+     if(args[3].u_obj == mp_const_true) step = (mp_obj_get_float(args[1].u_obj)-value)/(len-1);
+     else step = (mp_obj_get_float(args[1].u_obj)-value)/len;
+     ndarray_obj_t *ndarray = create_new_ndarray(1, len, typecode);
+     if(typecode == NDARRAY_UINT8) {
+         uint8_t *array = (uint8_t *)ndarray->array->items;
+         for(size_t i=0; i < len; i++, value += step) array[i] = (uint8_t)value;
+     } else if(typecode == NDARRAY_INT8) {
+         int8_t *array = (int8_t *)ndarray->array->items;
+         for(size_t i=0; i < len; i++, value += step) array[i] = (int8_t)value;
+     } else if(typecode == NDARRAY_UINT16) {
+         uint16_t *array = (uint16_t *)ndarray->array->items;
+         for(size_t i=0; i < len; i++, value += step) array[i] = (uint16_t)value;
+     } else if(typecode == NDARRAY_INT16) {
+         int16_t *array = (int16_t *)ndarray->array->items;
+         for(size_t i=0; i < len; i++, value += step) array[i] = (int16_t)value;
+     } else {
+         mp_float_t *array = (mp_float_t *)ndarray->array->items;
+         for(size_t i=0; i < len; i++, value += step) array[i] = value;
+     }
+     if(args[4].u_obj == mp_const_false) {
+         return MP_OBJ_FROM_PTR(ndarray);
+     } else {
+         mp_obj_t tuple[2];
+         tuple[0] = ndarray;
+         tuple[1] = mp_obj_new_float(step);
+         return mp_obj_new_tuple(2, tuple);
+     }
+ }
+ 
+ MP_DEFINE_CONST_FUN_OBJ_KW(create_linspace_obj, 2, create_linspace);
diff -crNb MicorpythonOriginal1.12/ulab/code/create.h micropython1.12_withUlab/ulab/code/create.h
*** MicorpythonOriginal1.12/ulab/code/create.h	1970-01-01 02:00:00.000000000 +0200
--- micropython1.12_withUlab/ulab/code/create.h	2020-06-18 18:25:25.706905000 +0200
***************
*** 0 ****
--- 1,28 ----
+ /*
+  * This file is part of the micropython-ulab project,
+  *
+  * https://github.com/v923z/micropython-ulab
+  *
+  * The MIT License (MIT)
+  *
+  * Copyright (c) 2020 Jeff Epler for Adafruit Industries
+  * 				 2019-2020 Zoltán Vörös
+ */
+ 
+ #ifndef _CREATE_
+ #define _CREATE_
+ 
+ #include "ulab.h"
+ #include "ndarray.h"
+ 
+ mp_obj_t create_zeros(size_t , const mp_obj_t *, mp_map_t *);
+ mp_obj_t create_ones(size_t , const mp_obj_t *, mp_map_t *);
+ mp_obj_t create_eye(size_t , const mp_obj_t *, mp_map_t *);
+ mp_obj_t create_linspace(size_t , const mp_obj_t *, mp_map_t *);
+ 
+ MP_DECLARE_CONST_FUN_OBJ_KW(create_ones_obj);
+ MP_DECLARE_CONST_FUN_OBJ_KW(create_zeros_obj);
+ MP_DECLARE_CONST_FUN_OBJ_KW(create_eye_obj);
+ MP_DECLARE_CONST_FUN_OBJ_KW(create_linspace_obj);
+ 
+ #endif
diff -crNb MicorpythonOriginal1.12/ulab/code/extras.c micropython1.12_withUlab/ulab/code/extras.c
*** MicorpythonOriginal1.12/ulab/code/extras.c	1970-01-01 02:00:00.000000000 +0200
--- micropython1.12_withUlab/ulab/code/extras.c	2020-06-18 18:25:25.706905000 +0200
***************
*** 0 ****
--- 1,44 ----
+ 
+ /*
+  * This file is part of the micropython-ulab project,
+  *
+  * https://github.com/v923z/micropython-ulab
+  *
+  * The MIT License (MIT)
+  *
+  * Copyright (c) 2020 Zoltán Vörös
+ */
+ 
+ #include <math.h>
+ #include <stdlib.h>
+ #include <string.h>
+ #include "py/obj.h"
+ #include "py/runtime.h"
+ #include "py/misc.h"
+ #include "extras.h"
+ 
+ #if ULAB_EXTRAS_MODULE
+ 
+ static mp_obj_t extras_spectrogram(size_t n_args, const mp_obj_t *args) {
+     if(n_args == 2) {
+         return fft_fft_ifft_spectrum(n_args, args[0], args[1], FFT_SPECTRUM);
+     } else {
+         return fft_fft_ifft_spectrum(n_args, args[0], mp_const_none, FFT_SPECTRUM);
+     }
+ }
+ 
+ MP_DEFINE_CONST_FUN_OBJ_VAR_BETWEEN(extras_spectrogram_obj, 1, 2, extras_spectrogram);
+ 
+ STATIC const mp_rom_map_elem_t ulab_extras_globals_table[] = {
+     { MP_OBJ_NEW_QSTR(MP_QSTR___name__), MP_OBJ_NEW_QSTR(MP_QSTR_extras) },
+ 	{ MP_OBJ_NEW_QSTR(MP_QSTR_spectrogram), (mp_obj_t)&extras_spectrogram_obj },
+ };
+ 
+ STATIC MP_DEFINE_CONST_DICT(mp_module_ulab_extras_globals, ulab_extras_globals_table);
+ 
+ mp_obj_module_t ulab_extras_module = {
+     .base = { &mp_type_module },
+     .globals = (mp_obj_dict_t*)&mp_module_ulab_extras_globals,
+ };
+ 
+ #endif
diff -crNb MicorpythonOriginal1.12/ulab/code/extras.h micropython1.12_withUlab/ulab/code/extras.h
*** MicorpythonOriginal1.12/ulab/code/extras.h	1970-01-01 02:00:00.000000000 +0200
--- micropython1.12_withUlab/ulab/code/extras.h	2020-06-18 18:25:25.706905000 +0200
***************
*** 0 ****
--- 1,24 ----
+ 
+ /*
+  * This file is part of the micropython-ulab project,
+  *
+  * https://github.com/v923z/micropython-ulab
+  *
+  * The MIT License (MIT)
+  *
+  * Copyright (c) 2020 Zoltán Vörös
+ */
+ 
+ #ifndef _EXTRA_
+ #define _EXTRA_
+ 
+ #include "ulab.h"
+ #include "ndarray.h"
+ #include "fft.h"
+ 
+ #if ULAB_EXTRAS_MODULE
+ 
+ mp_obj_module_t ulab_extras_module;
+ 
+ #endif
+ #endif
diff -crNb MicorpythonOriginal1.12/ulab/code/fft.c micropython1.12_withUlab/ulab/code/fft.c
*** MicorpythonOriginal1.12/ulab/code/fft.c	1970-01-01 02:00:00.000000000 +0200
--- micropython1.12_withUlab/ulab/code/fft.c	2020-06-18 18:25:25.706905000 +0200
***************
*** 0 ****
--- 1,182 ----
+ 
+ /*
+  * This file is part of the micropython-ulab project, 
+  *
+  * https://github.com/v923z/micropython-ulab
+  *
+  * The MIT License (MIT)
+  *
+  * Copyright (c) 2019-2020 Zoltán Vörös
+ */
+ 
+ #include <math.h>
+ #include <stdio.h>
+ #include <stdlib.h>
+ #include <string.h>
+ #include "py/runtime.h"
+ #include "py/builtin.h"
+ #include "py/binary.h"
+ #include "py/obj.h"
+ #include "py/objarray.h"
+ #include "ndarray.h"
+ #include "fft.h"
+ 
+ #if ULAB_FFT_MODULE
+ 
+ static void fft_kernel(mp_float_t *real, mp_float_t *imag, int n, int isign) {
+     // This is basically a modification of four1 from Numerical Recipes
+     // The main difference is that this function takes two arrays, one 
+     // for the real, and one for the imaginary parts. 
+     int j, m, mmax, istep;
+     mp_float_t tempr, tempi;
+     mp_float_t wtemp, wr, wpr, wpi, wi, theta;
+ 
+     j = 0;
+     for(int i = 0; i < n; i++) {
+         if (j > i) {
+             SWAP(mp_float_t, real[i], real[j]);
+             SWAP(mp_float_t, imag[i], imag[j]);
+         }
+         m = n >> 1;
+         while (j >= m && m > 0) {
+             j -= m;
+             m >>= 1;
+         }
+         j += m;
+     }
+ 
+     mmax = 1;
+     while (n > mmax) {
+         istep = mmax << 1;
+         theta = -2.0*isign*MP_PI/istep;
+         wtemp = MICROPY_FLOAT_C_FUN(sin)(0.5 * theta);
+         wpr = -2.0 * wtemp * wtemp;
+         wpi = MICROPY_FLOAT_C_FUN(sin)(theta);
+         wr = 1.0;
+         wi = 0.0;
+         for(m = 0; m < mmax; m++) {
+             for(int i = m; i < n; i += istep) {
+                 j = i + mmax;
+                 tempr = wr * real[j] - wi * imag[j];
+                 tempi = wr * imag[j] + wi * real[j];
+                 real[j] = real[i] - tempr;
+                 imag[j] = imag[i] - tempi;
+                 real[i] += tempr;
+                 imag[i] += tempi;
+             }
+             wtemp = wr;
+             wr = wr*wpr - wi*wpi + wr;
+             wi = wi*wpr + wtemp*wpi + wi;
+         }
+         mmax = istep;
+     }
+ }
+ 
+ mp_obj_t fft_fft_ifft_spectrum(size_t n_args, mp_obj_t arg_re, mp_obj_t arg_im, uint8_t type) {
+     if(!MP_OBJ_IS_TYPE(arg_re, &ulab_ndarray_type)) {
+         mp_raise_NotImplementedError(translate("FFT is defined for ndarrays only"));
+     } 
+     if(n_args == 2) {
+         if(!MP_OBJ_IS_TYPE(arg_im, &ulab_ndarray_type)) {
+             mp_raise_NotImplementedError(translate("FFT is defined for ndarrays only"));
+         }
+     }
+     // Check if input is of length of power of 2
+     ndarray_obj_t *re = MP_OBJ_TO_PTR(arg_re);
+     uint16_t len = re->array->len;
+     if((len & (len-1)) != 0) {
+         mp_raise_ValueError(translate("input array length must be power of 2"));
+     }
+     
+     ndarray_obj_t *out_re = create_new_ndarray(1, len, NDARRAY_FLOAT);
+     mp_float_t *data_re = (mp_float_t *)out_re->array->items;
+     
+     if(re->array->typecode == NDARRAY_FLOAT) { 
+         // By treating this case separately, we can save a bit of time.
+         // I don't know if it is worthwhile, though...
+         memcpy((mp_float_t *)out_re->array->items, (mp_float_t *)re->array->items, re->bytes);
+     } else {
+         for(size_t i=0; i < len; i++) {
+             *data_re++ = ndarray_get_float_value(re->array->items, re->array->typecode, i);
+         }
+         data_re -= len;
+     }
+     ndarray_obj_t *out_im = create_new_ndarray(1, len, NDARRAY_FLOAT);
+     mp_float_t *data_im = (mp_float_t *)out_im->array->items;
+ 
+     if(n_args == 2) {
+         ndarray_obj_t *im = MP_OBJ_TO_PTR(arg_im);
+         if (re->array->len != im->array->len) {
+             mp_raise_ValueError(translate("real and imaginary parts must be of equal length"));
+         }
+         if(im->array->typecode == NDARRAY_FLOAT) {
+             memcpy((mp_float_t *)out_im->array->items, (mp_float_t *)im->array->items, im->bytes);
+         } else {
+             for(size_t i=0; i < len; i++) {
+                *data_im++ = ndarray_get_float_value(im->array->items, im->array->typecode, i);
+             }
+             data_im -= len;
+         }
+     }
+ 
+     if((type == FFT_FFT) || (type == FFT_SPECTRUM)) {
+         fft_kernel(data_re, data_im, len, 1);
+         if(type == FFT_SPECTRUM) {
+             for(size_t i=0; i < len; i++) {
+                 *data_re = MICROPY_FLOAT_C_FUN(sqrt)(*data_re * *data_re + *data_im * *data_im);
+                 data_re++;
+                 data_im++;
+             }
+         }
+     } else { // inverse transform
+         fft_kernel(data_re, data_im, len, -1);
+         // TODO: numpy accepts the norm keyword argument
+         for(size_t i=0; i < len; i++) {
+             *data_re++ /= len;
+             *data_im++ /= len;
+         }
+     }
+     if(type == FFT_SPECTRUM) {
+         return MP_OBJ_TO_PTR(out_re);
+     } else {
+         mp_obj_t tuple[2];
+         tuple[0] = out_re;
+         tuple[1] = out_im;
+         return mp_obj_new_tuple(2, tuple);
+     }
+ }
+ 
+ static mp_obj_t fft_fft(size_t n_args, const mp_obj_t *args) {
+     if(n_args == 2) {
+         return fft_fft_ifft_spectrum(n_args, args[0], args[1], FFT_FFT);
+     } else {
+         return fft_fft_ifft_spectrum(n_args, args[0], mp_const_none, FFT_FFT);        
+     }
+ }
+ 
+ MP_DEFINE_CONST_FUN_OBJ_VAR_BETWEEN(fft_fft_obj, 1, 2, fft_fft);
+ 
+ static mp_obj_t fft_ifft(size_t n_args, const mp_obj_t *args) {
+     if(n_args == 2) {
+         return fft_fft_ifft_spectrum(n_args, args[0], args[1], FFT_IFFT);
+     } else {
+         return fft_fft_ifft_spectrum(n_args, args[0], mp_const_none, FFT_IFFT);
+     }
+ }
+ 
+ MP_DEFINE_CONST_FUN_OBJ_VAR_BETWEEN(fft_ifft_obj, 1, 2, fft_ifft);
+ 
+ STATIC const mp_rom_map_elem_t ulab_fft_globals_table[] = {
+     { MP_OBJ_NEW_QSTR(MP_QSTR___name__), MP_OBJ_NEW_QSTR(MP_QSTR_fft) },
+     { MP_OBJ_NEW_QSTR(MP_QSTR_fft), (mp_obj_t)&fft_fft_obj },
+     { MP_OBJ_NEW_QSTR(MP_QSTR_ifft), (mp_obj_t)&fft_ifft_obj },
+ };
+ 
+ STATIC MP_DEFINE_CONST_DICT(mp_module_ulab_fft_globals, ulab_fft_globals_table);
+ 
+ mp_obj_module_t ulab_fft_module = {
+     .base = { &mp_type_module },
+     .globals = (mp_obj_dict_t*)&mp_module_ulab_fft_globals,
+ };
+ 
+ #endif
diff -crNb MicorpythonOriginal1.12/ulab/code/fft.h micropython1.12_withUlab/ulab/code/fft.h
*** MicorpythonOriginal1.12/ulab/code/fft.h	1970-01-01 02:00:00.000000000 +0200
--- micropython1.12_withUlab/ulab/code/fft.h	2020-06-18 18:25:25.706905000 +0200
***************
*** 0 ****
--- 1,39 ----
+ 
+ /*
+  * This file is part of the micropython-ulab project, 
+  *
+  * https://github.com/v923z/micropython-ulab
+  *
+  * The MIT License (MIT)
+  *
+  * Copyright (c) 2019-2020 Zoltán Vörös
+ */
+ 
+ #ifndef _FFT_
+ #define _FFT_
+ #include "ulab.h"
+ 
+ #ifndef MP_PI
+ #define MP_PI MICROPY_FLOAT_CONST(3.14159265358979323846)
+ #endif
+ 
+ #define SWAP(t, a, b) { t tmp = a; a = b; b = tmp; }
+ 
+ enum FFT_TYPE {
+     FFT_FFT,
+     FFT_IFFT,
+     FFT_SPECTRUM,
+ };
+ 
+ #if ULAB_FFT_MODULE
+ 
+ extern mp_obj_module_t ulab_fft_module;
+ 
+ MP_DECLARE_CONST_FUN_OBJ_VAR_BETWEEN(fft_fft_obj);
+ MP_DECLARE_CONST_FUN_OBJ_VAR_BETWEEN(fft_ifft_obj);
+ MP_DECLARE_CONST_FUN_OBJ_VAR_BETWEEN(fft_spectrum_obj);
+ 
+ mp_obj_t fft_fft_ifft_spectrum(size_t , mp_obj_t , mp_obj_t , uint8_t );
+ 
+ #endif
+ #endif
diff -crNb MicorpythonOriginal1.12/ulab/code/filter.c micropython1.12_withUlab/ulab/code/filter.c
*** MicorpythonOriginal1.12/ulab/code/filter.c	1970-01-01 02:00:00.000000000 +0200
--- micropython1.12_withUlab/ulab/code/filter.c	2020-06-18 18:25:25.706905000 +0200
***************
*** 0 ****
--- 1,99 ----
+ 
+ /*
+  * This file is part of the micropython-ulab project,
+  *
+  * https://github.com/v923z/micropython-ulab
+  *
+  * The MIT License (MIT)
+  *
+  * Copyright (c) 2020 Jeff Epler for Adafruit Industries
+ */
+ 
+ #include <math.h>
+ #include <stdlib.h>
+ #include <string.h>
+ #include "py/obj.h"
+ #include "py/runtime.h"
+ #include "py/misc.h"
+ #include "filter.h"
+ 
+ #if ULAB_FILTER_MODULE
+ static mp_obj_t filter_convolve(size_t n_args, const mp_obj_t *pos_args, mp_map_t *kw_args) {
+     static const mp_arg_t allowed_args[] = {
+         { MP_QSTR_a, MP_ARG_REQUIRED | MP_ARG_OBJ, {.u_rom_obj = mp_const_none } },
+         { MP_QSTR_v, MP_ARG_REQUIRED | MP_ARG_OBJ, {.u_rom_obj = mp_const_none } },
+     };
+ 
+     mp_arg_val_t args[MP_ARRAY_SIZE(allowed_args)];
+     mp_arg_parse_all(n_args, pos_args, kw_args, MP_ARRAY_SIZE(allowed_args), allowed_args, args);
+ 
+     if(!MP_OBJ_IS_TYPE(args[0].u_obj, &ulab_ndarray_type) || !MP_OBJ_IS_TYPE(args[1].u_obj, &ulab_ndarray_type)) {
+         mp_raise_TypeError(translate("convolve arguments must be ndarrays"));
+     }
+ 
+     ndarray_obj_t *a = MP_OBJ_TO_PTR(args[0].u_obj);
+     ndarray_obj_t *c = MP_OBJ_TO_PTR(args[1].u_obj);
+     size_t len_a = a->array->len;
+     size_t len_c = c->array->len;
+     // deal with linear arrays only
+     if(a->m*a->n != len_a || c->m*c->n != len_c) {
+         mp_raise_TypeError(translate("convolve arguments must be linear arrays"));
+     }
+     if(len_a == 0 || len_c == 0) {
+         mp_raise_TypeError(translate("convolve arguments must not be empty"));
+     }
+ 
+     int len = len_a + len_c - 1; // convolve mode "full"
+     ndarray_obj_t *out = create_new_ndarray(1, len, NDARRAY_FLOAT);
+     mp_float_t *outptr = out->array->items;
+     int off = len_c-1;
+ 
+     if(a->array->typecode == NDARRAY_FLOAT && c->array->typecode == NDARRAY_FLOAT) {
+         mp_float_t* a_items = (mp_float_t*)a->array->items;
+         mp_float_t* c_items = (mp_float_t*)c->array->items;
+         for(int k=-off; k<len-off; k++) {
+             mp_float_t accum = (mp_float_t)0;
+             int top_n = MIN(len_c, len_a - k);
+             int bot_n = MAX(-k, 0);
+             mp_float_t* a_ptr = a_items + bot_n + k;
+             mp_float_t* a_end = a_ptr + (top_n - bot_n);
+             mp_float_t* c_ptr = c_items + len_c - bot_n - 1;
+             for(; a_ptr != a_end;) {
+                 accum += *a_ptr++ * *c_ptr--;
+             }
+             *outptr++ = accum;
+         }
+     } else {
+         for(int k=-off; k<len-off; k++) {
+             mp_float_t accum = (mp_float_t)0;
+             int top_n = MIN(len_c, len_a - k);
+             int bot_n = MAX(-k, 0);
+             for(int n=bot_n; n<top_n; n++) {
+                 int idx_c = len_c - n - 1;
+                 int idx_a = n+k;
+                 mp_float_t ai = ndarray_get_float_value(a->array->items, a->array->typecode, idx_a);
+                 mp_float_t ci = ndarray_get_float_value(c->array->items, c->array->typecode, idx_c);
+                 accum += ai * ci;
+             }
+             *outptr++ = accum;
+         }
+     }
+ 
+     return out;
+ }
+ 
+ MP_DEFINE_CONST_FUN_OBJ_KW(filter_convolve_obj, 2, filter_convolve);
+ 
+ STATIC const mp_rom_map_elem_t ulab_filter_globals_table[] = {
+     { MP_OBJ_NEW_QSTR(MP_QSTR___name__), MP_OBJ_NEW_QSTR(MP_QSTR_filter) },
+     { MP_OBJ_NEW_QSTR(MP_QSTR_convolve), (mp_obj_t)&filter_convolve_obj },
+ };
+ 
+ STATIC MP_DEFINE_CONST_DICT(mp_module_ulab_filter_globals, ulab_filter_globals_table);
+ 
+ mp_obj_module_t ulab_filter_module = {
+     .base = { &mp_type_module },
+     .globals = (mp_obj_dict_t*)&mp_module_ulab_filter_globals,
+ };
+ 
+ #endif
diff -crNb MicorpythonOriginal1.12/ulab/code/filter.h micropython1.12_withUlab/ulab/code/filter.h
*** MicorpythonOriginal1.12/ulab/code/filter.h	1970-01-01 02:00:00.000000000 +0200
--- micropython1.12_withUlab/ulab/code/filter.h	2020-06-18 18:25:25.706905000 +0200
***************
*** 0 ****
--- 1,25 ----
+ 
+ /*
+  * This file is part of the micropython-ulab project,
+  *
+  * https://github.com/v923z/micropython-ulab
+  *
+  * The MIT License (MIT)
+  *
+  * Copyright (c) 2020 Jeff Epler for Adafruit Industries
+ */
+ 
+ #ifndef _FILTER_
+ #define _FILTER_
+ 
+ #include "ulab.h"
+ #include "ndarray.h"
+ 
+ #if ULAB_FILTER_MODULE
+ 
+ extern mp_obj_module_t ulab_filter_module;
+ 
+ MP_DECLARE_CONST_FUN_OBJ_KW(filter_convolve_obj);
+ 
+ #endif
+ #endif
diff -crNb MicorpythonOriginal1.12/ulab/code/linalg.c micropython1.12_withUlab/ulab/code/linalg.c
*** MicorpythonOriginal1.12/ulab/code/linalg.c	1970-01-01 02:00:00.000000000 +0200
--- micropython1.12_withUlab/ulab/code/linalg.c	2020-06-18 18:25:25.710905000 +0200
***************
*** 0 ****
--- 1,410 ----
+ 
+ /*
+  * This file is part of the micropython-ulab project, 
+  *
+  * https://github.com/v923z/micropython-ulab
+  *
+  * The MIT License (MIT)
+  *
+  * Copyright (c) 2019-2020 Zoltán Vörös
+ */
+ 
+ #include <stdlib.h>
+ #include <string.h>
+ #include <math.h>
+ #include "py/obj.h"
+ #include "py/runtime.h"
+ #include "py/misc.h"
+ #include "linalg.h"
+ 
+ #if ULAB_LINALG_MODULE
+ 
+ static ndarray_obj_t *linalg_object_is_square(mp_obj_t obj) {
+ 	// Returns an ndarray, if the object is a square ndarray, 
+ 	// raises the appropriate exception otherwise
+ 	if(!MP_OBJ_IS_TYPE(obj, &ulab_ndarray_type)) {
+         mp_raise_TypeError(translate("size is defined for ndarrays only"));
+     }
+ 	ndarray_obj_t *ndarray = MP_OBJ_TO_PTR(obj);
+ 	if(ndarray->m != ndarray->n) {
+ 		mp_raise_ValueError(translate("input must be square matrix"));
+ 	}
+ 	return ndarray;
+ }
+ 
+ static mp_obj_t linalg_size(size_t n_args, const mp_obj_t *pos_args, mp_map_t *kw_args) {
+     static const mp_arg_t allowed_args[] = {
+         { MP_QSTR_, MP_ARG_REQUIRED | MP_ARG_OBJ, {.u_rom_obj = mp_const_none } },
+         { MP_QSTR_axis, MP_ARG_KW_ONLY | MP_ARG_OBJ, {.u_rom_obj = mp_const_none } },
+     };
+ 
+     mp_arg_val_t args[MP_ARRAY_SIZE(allowed_args)];
+     mp_arg_parse_all(n_args, pos_args, kw_args, MP_ARRAY_SIZE(allowed_args), allowed_args, args);
+ 
+     if(!MP_OBJ_IS_TYPE(args[0].u_obj, &ulab_ndarray_type)) {
+         mp_raise_TypeError(translate("size is defined for ndarrays only"));
+     } else {
+         ndarray_obj_t *ndarray = MP_OBJ_TO_PTR(args[0].u_obj);
+         if(args[1].u_obj == mp_const_none) {
+             return mp_obj_new_int(ndarray->array->len);
+         } else if(MP_OBJ_IS_INT(args[1].u_obj)) {
+             uint8_t ax = mp_obj_get_int(args[1].u_obj);
+             if(ax == 0) {
+                 if(ndarray->m == 1) {
+                     return mp_obj_new_int(ndarray->n);
+                 } else {
+                     return mp_obj_new_int(ndarray->m);                    
+                 }
+             } else if(ax == 1) {
+                 if(ndarray->m == 1) {
+                     mp_raise_ValueError(translate("tuple index out of range"));
+                 } else {
+                     return mp_obj_new_int(ndarray->n);
+                 }
+             } else {
+                     mp_raise_ValueError(translate("tuple index out of range"));
+             }
+         } else {
+             mp_raise_TypeError(translate("wrong argument type"));
+         }
+     }
+ }
+ 
+ MP_DEFINE_CONST_FUN_OBJ_KW(linalg_size_obj, 1, linalg_size);
+ 
+ bool linalg_invert_matrix(mp_float_t *data, size_t N) {
+     // returns true, of the inversion was successful, 
+     // false, if the matrix is singular
+     
+     // initially, this is the unit matrix: the contents of this matrix is what 
+     // will be returned after all the transformations
+     mp_float_t *unit = m_new(mp_float_t, N*N);
+ 
+     mp_float_t elem = 1.0;
+     // initialise the unit matrix
+     memset(unit, 0, sizeof(mp_float_t)*N*N);
+     for(size_t m=0; m < N; m++) {
+         memcpy(&unit[m*(N+1)], &elem, sizeof(mp_float_t));
+     }
+     for(size_t m=0; m < N; m++){
+         // this could be faster with ((c < epsilon) && (c > -epsilon))
+         if(MICROPY_FLOAT_C_FUN(fabs)(data[m*(N+1)]) < epsilon) {
+             m_del(mp_float_t, unit, N*N);
+             return false;
+         }
+         for(size_t n=0; n < N; n++){
+             if(m != n){
+                 elem = data[N*n+m] / data[m*(N+1)];
+                 for(size_t k=0; k < N; k++){
+                     data[N*n+k] -= elem * data[N*m+k];
+                     unit[N*n+k] -= elem * unit[N*m+k];
+                 }
+             }
+         }
+     }
+     for(size_t m=0; m < N; m++){ 
+         elem = data[m*(N+1)];
+         for(size_t n=0; n < N; n++){
+             data[N*m+n] /= elem;
+             unit[N*m+n] /= elem;
+         }
+     }
+     memcpy(data, unit, sizeof(mp_float_t)*N*N);
+     m_del(mp_float_t, unit, N*N);
+     return true;
+ }
+ 
+ static mp_obj_t linalg_inv(mp_obj_t o_in) {
+ 	ndarray_obj_t *o = linalg_object_is_square(o_in);
+     ndarray_obj_t *inverted = create_new_ndarray(o->m, o->n, NDARRAY_FLOAT);
+     mp_float_t *data = (mp_float_t *)inverted->array->items;
+     mp_obj_t elem;
+     for(size_t m=0; m < o->m; m++) { // rows first
+         for(size_t n=0; n < o->n; n++) { // columns next
+             // this could, perhaps, be done in single line... 
+             // On the other hand, we probably spend little time here
+             elem = mp_binary_get_val_array(o->array->typecode, o->array->items, m*o->n+n);
+             data[m*o->n+n] = (mp_float_t)mp_obj_get_float(elem);
+         }
+     }
+     
+     if(!linalg_invert_matrix(data, o->m)) {
+         // TODO: I am not sure this is needed here. Otherwise, 
+         // how should we free up the unused RAM of inverted?
+         m_del(mp_float_t, inverted->array->items, o->n*o->n);
+         mp_raise_ValueError(translate("input matrix is singular"));
+     }
+     return MP_OBJ_FROM_PTR(inverted);
+ }
+ 
+ MP_DEFINE_CONST_FUN_OBJ_1(linalg_inv_obj, linalg_inv);
+ 
+ static mp_obj_t linalg_dot(mp_obj_t _m1, mp_obj_t _m2) {
+     // TODO: should the results be upcast?
+     if(!MP_OBJ_IS_TYPE(_m1, &ulab_ndarray_type) || !MP_OBJ_IS_TYPE(_m2, &ulab_ndarray_type)) {
+         mp_raise_TypeError(translate("arguments must be ndarrays"));
+     }
+     ndarray_obj_t *m1 = MP_OBJ_TO_PTR(_m1);
+     ndarray_obj_t *m2 = MP_OBJ_TO_PTR(_m2);    
+     if(m1->n != m2->m) {
+         mp_raise_ValueError(translate("matrix dimensions do not match"));
+     }
+     // TODO: numpy uses upcasting here
+     ndarray_obj_t *out = create_new_ndarray(m1->m, m2->n, NDARRAY_FLOAT);
+     mp_float_t *outdata = (mp_float_t *)out->array->items;
+     for(size_t i=0; i < m1->m; i++) { // rows of m1
+         for(size_t j=0; j < m2->n; j++) { // columns of m2
+             mp_float_t sum = 0.0, v1, v2;
+             for(size_t k=0; k < m2->m; k++) {
+                 // (i, k) * (k, j)
+                 v1 = ndarray_get_float_value(m1->array->items, m1->array->typecode, i*m1->n+k);
+                 v2 = ndarray_get_float_value(m2->array->items, m2->array->typecode, k*m2->n+j);
+                 sum += v1 * v2;
+             }
+             outdata[i*m2->n+j] = sum;
+         }
+     }
+     return MP_OBJ_FROM_PTR(out);
+ }
+ 
+ MP_DEFINE_CONST_FUN_OBJ_2(linalg_dot_obj, linalg_dot);
+ 
+ static mp_obj_t linalg_det(mp_obj_t oin) {
+     ndarray_obj_t *in = linalg_object_is_square(oin);  
+     mp_float_t *tmp = m_new(mp_float_t, in->n*in->n);
+     for(size_t i=0; i < in->array->len; i++){
+         tmp[i] = ndarray_get_float_value(in->array->items, in->array->typecode, i);
+     }
+     mp_float_t c;
+     for(size_t m=0; m < in->m-1; m++){
+         if(MICROPY_FLOAT_C_FUN(fabs)(tmp[m*(in->n+1)]) < epsilon) {
+             m_del(mp_float_t, tmp, in->n*in->n);
+             return mp_obj_new_float(0.0);
+         }
+         for(size_t n=0; n < in->n; n++){
+             if(m != n) {
+                 c = tmp[in->n*n+m] / tmp[m*(in->n+1)];
+                 for(size_t k=0; k < in->n; k++){
+                     tmp[in->n*n+k] -= c * tmp[in->n*m+k];
+                 }
+             }
+         }
+     }
+     mp_float_t det = 1.0;
+                             
+     for(size_t m=0; m < in->m; m++){ 
+         det *= tmp[m*(in->n+1)];
+     }
+     m_del(mp_float_t, tmp, in->n*in->n);
+     return mp_obj_new_float(det);
+ }
+ 
+ MP_DEFINE_CONST_FUN_OBJ_1(linalg_det_obj, linalg_det);
+ 
+ static mp_obj_t linalg_eig(mp_obj_t oin) {
+ 	ndarray_obj_t *in = linalg_object_is_square(oin);
+     mp_float_t *array = m_new(mp_float_t, in->array->len);
+     for(size_t i=0; i < in->array->len; i++) {
+         array[i] = ndarray_get_float_value(in->array->items, in->array->typecode, i);
+     }
+     // make sure the matrix is symmetric
+     for(size_t m=0; m < in->m; m++) {
+         for(size_t n=m+1; n < in->n; n++) {
+             // compare entry (m, n) to (n, m)
+             // TODO: this must probably be scaled!
+             if(epsilon < MICROPY_FLOAT_C_FUN(fabs)(array[m*in->n + n] - array[n*in->n + m])) {
+                 mp_raise_ValueError(translate("input matrix is asymmetric"));
+             }
+         }
+     }
+     
+     // if we got this far, then the matrix will be symmetric
+     
+     ndarray_obj_t *eigenvectors = create_new_ndarray(in->m, in->n, NDARRAY_FLOAT);
+     mp_float_t *eigvectors = (mp_float_t *)eigenvectors->array->items;
+     // start out with the unit matrix
+     for(size_t m=0; m < in->m; m++) {
+         eigvectors[m*(in->n+1)] = 1.0;
+     }
+     mp_float_t largest, w, t, c, s, tau, aMk, aNk, vm, vn;
+     size_t M, N;
+     size_t iterations = JACOBI_MAX*in->n*in->n;
+     do {
+         iterations--;
+         // find the pivot here
+         M = 0;
+         N = 0;
+         largest = 0.0;
+         for(size_t m=0; m < in->m-1; m++) { // -1: no need to inspect last row
+             for(size_t n=m+1; n < in->n; n++) {
+                 w = MICROPY_FLOAT_C_FUN(fabs)(array[m*in->n + n]);
+                 if((largest < w) && (epsilon < w)) {
+                     M = m;
+                     N = n;
+                     largest = w;
+                 }
+             }
+         }
+         if(M+N == 0) { // all entries are smaller than epsilon, there is not much we can do...
+             break;
+         }
+         // at this point, we have the pivot, and it is the entry (M, N)
+         // now we have to find the rotation angle
+         w = (array[N*in->n + N] - array[M*in->n + M]) / (2.0*array[M*in->n + N]);
+         // The following if/else chooses the smaller absolute value for the tangent 
+         // of the rotation angle. Going with the smaller should be numerically stabler.
+         if(w > 0) {
+             t = MICROPY_FLOAT_C_FUN(sqrt)(w*w + 1.0) - w;
+         } else {
+             t = -1.0*(MICROPY_FLOAT_C_FUN(sqrt)(w*w + 1.0) + w);
+         }
+         s = t / MICROPY_FLOAT_C_FUN(sqrt)(t*t + 1.0); // the sine of the rotation angle
+         c = 1.0 / MICROPY_FLOAT_C_FUN(sqrt)(t*t + 1.0); // the cosine of the rotation angle
+         tau = (1.0-c)/s; // this is equal to the tangent of the half of the rotation angle
+         
+         // at this point, we have the rotation angles, so we can transform the matrix
+         // first the two diagonal elements
+         // a(M, M) = a(M, M) - t*a(M, N)
+         array[M*in->n + M] = array[M*in->n + M] - t * array[M*in->n + N];
+         // a(N, N) = a(N, N) + t*a(M, N)
+         array[N*in->n + N] = array[N*in->n + N] + t * array[M*in->n + N];
+         // after the rotation, the a(M, N), and a(N, M) entries should become zero
+         array[M*in->n + N] = array[N*in->n + M] = 0.0;
+         // then all other elements in the column
+         for(size_t k=0; k < in->m; k++) {
+             if((k == M) || (k == N)) {
+                 continue;
+             }
+             aMk = array[M*in->n + k];
+             aNk = array[N*in->n + k];
+             // a(M, k) = a(M, k) - s*(a(N, k) + tau*a(M, k))
+             array[M*in->n + k] -= s*(aNk + tau*aMk);
+             // a(N, k) = a(N, k) + s*(a(M, k) - tau*a(N, k))
+             array[N*in->n + k] += s*(aMk - tau*aNk);
+             // a(k, M) = a(M, k)
+             array[k*in->n + M] = array[M*in->n + k];
+             // a(k, N) = a(N, k)
+             array[k*in->n + N] = array[N*in->n + k];
+         }
+         // now we have to update the eigenvectors
+         // the rotation matrix, R, multiplies from the right
+         // R is the unit matrix, except for the 
+         // R(M,M) = R(N, N) = c
+         // R(N, M) = s
+         // (M, N) = -s
+         // entries. This means that only the Mth, and Nth columns will change
+         for(size_t m=0; m < in->m; m++) {
+             vm = eigvectors[m*in->n+M];
+             vn = eigvectors[m*in->n+N];
+             // the new value of eigvectors(m, M)
+             eigvectors[m*in->n+M] = c * vm - s * vn;
+             // the new value of eigvectors(m, N)
+             eigvectors[m*in->n+N] = s * vm + c * vn;
+         }
+     } while(iterations > 0);
+     
+     if(iterations == 0) { 
+         // the computation did not converge; numpy raises LinAlgError
+         m_del(mp_float_t, array, in->array->len);
+         mp_raise_ValueError(translate("iterations did not converge"));
+     }
+     ndarray_obj_t *eigenvalues = create_new_ndarray(1, in->n, NDARRAY_FLOAT);
+     mp_float_t *eigvalues = (mp_float_t *)eigenvalues->array->items;
+     for(size_t i=0; i < in->n; i++) {
+         eigvalues[i] = array[i*(in->n+1)];
+     }
+     m_del(mp_float_t, array, in->array->len);
+     
+     mp_obj_tuple_t *tuple = MP_OBJ_TO_PTR(mp_obj_new_tuple(2, NULL));
+     tuple->items[0] = MP_OBJ_FROM_PTR(eigenvalues);
+     tuple->items[1] = MP_OBJ_FROM_PTR(eigenvectors);
+     return tuple;
+     return MP_OBJ_FROM_PTR(eigenvalues);
+ }
+ 
+ MP_DEFINE_CONST_FUN_OBJ_1(linalg_eig_obj, linalg_eig);
+ 
+ static mp_obj_t linalg_cholesky(mp_obj_t oin) {
+ 	ndarray_obj_t *in = MP_OBJ_TO_PTR(oin);
+ 	ndarray_obj_t *L = create_new_ndarray(in->n, in->n, NDARRAY_FLOAT);
+     mp_float_t *array = (mp_float_t *)L->array->items;
+ 
+ 	size_t pos = 0;
+     for(size_t m=0; m < in->m; m++) { // rows
+ 		for(size_t n=0; n < in->n; n++) { // columns
+ 			array[m*in->m+n] = ndarray_get_float_value(in->array->items, in->array->typecode, pos++);
+ 		}
+ 	}
+ 
+ 	// make sure the matrix is symmetric
+     for(size_t m=0; m < in->m; m++) { // rows
+         for(size_t n=m+1; n < in->n; n++) { // columns
+             // compare entry (m, n) to (n, m)
+             if(epsilon < MICROPY_FLOAT_C_FUN(fabs)(array[m*in->n + n] - array[n*in->n + m])) {
+                 mp_raise_ValueError(translate("input matrix is asymmetric"));
+             }
+         }
+     }
+ 	
+ 	// this is actually not needed, but Cholesky in numpy returns the lower triangular matrix
+ 	for(size_t i=0; i < in->m; i++) { // rows
+ 		for(size_t j=i+1; j < in->n; j++) { // columns
+ 			array[i*in->m + j] = 0.0;
+ 		}
+ 	}	
+ 	mp_float_t sum = 0.0;
+ 	for(size_t i=0; i < in->m; i++) { // rows
+ 		for(size_t j=0; j <= i; j++) { // columns
+ 			sum = array[i*in->m + j];
+ 			for(size_t k=0; k < j; k++) {
+ 				sum -= array[i*in->n + k] * array[j*in->n + k];
+ 			}
+ 			if(i == j) {
+ 				if(sum <= 0.0) {
+ 					mp_raise_ValueError(translate("matrix is not positive definite"));
+ 				} else {
+ 					array[i*in->m+i] = MICROPY_FLOAT_C_FUN(sqrt)(sum);
+ 				}
+ 			} else {
+ 				array[i*in->m + j] = sum / array[j*in->m+j];
+ 			}
+ 		}
+ 	}
+ 	return MP_OBJ_FROM_PTR(L);
+ }
+ 
+ MP_DEFINE_CONST_FUN_OBJ_1(linalg_cholesky_obj, linalg_cholesky);
+ 
+ static mp_obj_t linalg_trace(mp_obj_t oin) {
+ 	ndarray_obj_t *ndarray = linalg_object_is_square(oin);
+ 	mp_float_t trace = 0.0;
+ 	for(size_t pos=0; pos < ndarray->array->len; pos+=(ndarray->m+1)) {
+ 		trace += ndarray_get_float_value(ndarray->array->items, ndarray->array->typecode, pos);
+ 	}
+ 	if(ndarray->array->typecode == NDARRAY_FLOAT) {
+ 		return mp_obj_new_float(trace);
+ 	}
+ 	return mp_obj_new_int_from_float(trace);
+ }
+ 
+ MP_DEFINE_CONST_FUN_OBJ_1(linalg_trace_obj, linalg_trace);
+ 
+ STATIC const mp_rom_map_elem_t ulab_linalg_globals_table[] = {
+ 	{ MP_OBJ_NEW_QSTR(MP_QSTR___name__), MP_OBJ_NEW_QSTR(MP_QSTR_linalg) },
+ 	{ MP_ROM_QSTR(MP_QSTR_size), (mp_obj_t)&linalg_size_obj },
+ 	{ MP_ROM_QSTR(MP_QSTR_inv), (mp_obj_t)&linalg_inv_obj },
+ 	{ MP_ROM_QSTR(MP_QSTR_dot), (mp_obj_t)&linalg_dot_obj },
+ 	{ MP_ROM_QSTR(MP_QSTR_det), (mp_obj_t)&linalg_det_obj },
+ 	{ MP_ROM_QSTR(MP_QSTR_eig), (mp_obj_t)&linalg_eig_obj },
+ 	{ MP_ROM_QSTR(MP_QSTR_cholesky), (mp_obj_t)&linalg_cholesky_obj },
+ 	{ MP_ROM_QSTR(MP_QSTR_trace), (mp_obj_t)&linalg_trace_obj },	
+ };
+ 
+ STATIC MP_DEFINE_CONST_DICT(mp_module_ulab_linalg_globals, ulab_linalg_globals_table);
+ 
+ mp_obj_module_t ulab_linalg_module = {
+     .base = { &mp_type_module },
+     .globals = (mp_obj_dict_t*)&mp_module_ulab_linalg_globals,
+ };
+ 
+ #endif
diff -crNb MicorpythonOriginal1.12/ulab/code/linalg.h micropython1.12_withUlab/ulab/code/linalg.h
*** MicorpythonOriginal1.12/ulab/code/linalg.h	1970-01-01 02:00:00.000000000 +0200
--- micropython1.12_withUlab/ulab/code/linalg.h	2020-06-18 18:25:25.710905000 +0200
***************
*** 0 ****
--- 1,41 ----
+ 
+ /*
+  * This file is part of the micropython-ulab project, 
+  *
+  * https://github.com/v923z/micropython-ulab
+  *
+  * The MIT License (MIT)
+  *
+  * Copyright (c) 2019-2020 Zoltán Vörös
+ */
+ 
+ #ifndef _LINALG_
+ #define _LINALG_
+ 
+ #include "ulab.h"
+ #include "ndarray.h"
+ 
+ #if MICROPY_FLOAT_IMPL == MICROPY_FLOAT_IMPL_FLOAT
+ #define epsilon        1.2e-7
+ #elif MICROPY_FLOAT_IMPL == MICROPY_FLOAT_IMPL_DOUBLE
+ #define epsilon        2.3e-16
+ #endif
+ 
+ #define JACOBI_MAX     20
+ 
+ #if ULAB_LINALG_MODULE || ULAB_POLY_MODULE
+ bool linalg_invert_matrix(mp_float_t *, size_t );
+ #endif
+ 
+ #if ULAB_LINALG_MODULE
+ 
+ extern mp_obj_module_t ulab_linalg_module;
+ 
+ MP_DECLARE_CONST_FUN_OBJ_KW(linalg_size_obj);
+ MP_DECLARE_CONST_FUN_OBJ_1(linalg_inv_obj);
+ MP_DECLARE_CONST_FUN_OBJ_2(linalg_dot_obj);
+ MP_DECLARE_CONST_FUN_OBJ_1(linalg_det_obj);
+ MP_DECLARE_CONST_FUN_OBJ_1(linalg_eig_obj);
+ 
+ #endif
+ #endif
diff -crNb MicorpythonOriginal1.12/ulab/code/micropython.mk micropython1.12_withUlab/ulab/code/micropython.mk
*** MicorpythonOriginal1.12/ulab/code/micropython.mk	1970-01-01 02:00:00.000000000 +0200
--- micropython1.12_withUlab/ulab/code/micropython.mk	2020-06-19 17:24:26.016968686 +0200
***************
*** 0 ****
--- 1,22 ----
+ 
+ USERMODULES_DIR := $(USERMOD_DIR)
+ 
+ # Add all C files to SRC_USERMOD.
+ SRC_USERMOD += $(USERMODULES_DIR)/ndarray.c
+ SRC_USERMOD += $(USERMODULES_DIR)/create.c
+ SRC_USERMOD += $(USERMODULES_DIR)/linalg.c
+ SRC_USERMOD += $(USERMODULES_DIR)/vectorise.c
+ SRC_USERMOD += $(USERMODULES_DIR)/poly.c
+ SRC_USERMOD += $(USERMODULES_DIR)/fft.c
+ SRC_USERMOD += $(USERMODULES_DIR)/numerical.c
+ SRC_USERMOD += $(USERMODULES_DIR)/filter.c
+ SRC_USERMOD += $(USERMODULES_DIR)/compare.c
+ SRC_USERMOD += $(USERMODULES_DIR)/approx.c
+ SRC_USERMOD += $(USERMODULES_DIR)/extras.c
+ SRC_USERMOD += $(USERMODULES_DIR)/ulab.c
+ 
+ # We can add our module folder to include paths if needed
+ # This is not actually needed in this example.
+ CFLAGS_USERMOD += -I$(USERMODULES_DIR)
+ 
+ CFLAGS_EXTRA = -DMODULE_ULAB_ENABLED=1
diff -crNb MicorpythonOriginal1.12/ulab/code/ndarray.c micropython1.12_withUlab/ulab/code/ndarray.c
*** MicorpythonOriginal1.12/ulab/code/ndarray.c	1970-01-01 02:00:00.000000000 +0200
--- micropython1.12_withUlab/ulab/code/ndarray.c	2020-06-18 18:25:25.710905000 +0200
***************
*** 0 ****
--- 1,1121 ----
+ 
+ /*
+  * This file is part of the micropython-ulab project, 
+  *
+  * https://github.com/v923z/micropython-ulab
+  *
+  * The MIT License (MIT)
+  *
+  * Copyright (c) 2019-2020 Zoltán Vörös
+ */
+ 
+ #include <unistd.h>
+ #include <math.h>
+ #include <stdio.h>
+ #include <stdlib.h>
+ #include <string.h>
+ #include "py/runtime.h"
+ #include "py/binary.h"
+ #include "py/obj.h"
+ #include "py/objtuple.h"
+ #include "ndarray.h"
+ 
+ mp_uint_t ndarray_print_threshold = NDARRAY_PRINT_THRESHOLD;
+ mp_uint_t ndarray_print_edgeitems = NDARRAY_PRINT_EDGEITEMS;
+ 
+ // This function is copied verbatim from objarray.c
+ STATIC mp_obj_array_t *array_new(char typecode, size_t n) {
+     int typecode_size = mp_binary_get_size('@', typecode, NULL);
+     mp_obj_array_t *o = m_new_obj(mp_obj_array_t);
+     // this step could probably be skipped: we are never going to store a bytearray per se
+     #if MICROPY_PY_BUILTINS_BYTEARRAY && MICROPY_PY_ARRAY
+     o->base.type = (typecode == BYTEARRAY_TYPECODE) ? &mp_type_bytearray : &mp_type_array;
+     #elif MICROPY_PY_BUILTINS_BYTEARRAY
+     o->base.type = &mp_type_bytearray;
+     #else
+     o->base.type = &mp_type_array;
+     #endif
+     o->typecode = typecode;
+     o->free = 0;
+     o->len = n;
+     o->items = m_new(byte, typecode_size * o->len);
+     return o;
+ }
+ 
+ #ifdef OPENMV
+ void mp_obj_slice_indices(mp_obj_t self_in, mp_int_t length, mp_bound_slice_t *result) {
+     mp_obj_slice_t *self = MP_OBJ_TO_PTR(self_in);
+     mp_int_t start, stop, step;
+ 
+     if (self->step == mp_const_none) {
+         step = 1;
+     } else {
+         step = mp_obj_get_int(self->step);
+         if (step == 0) {
+             mp_raise_ValueError(translate("slice step can't be zero"));
+         }
+     }
+ 
+     if (step > 0) {
+         // Positive step
+         if (self->start == mp_const_none) {
+             start = 0;
+         } else {
+             start = mp_obj_get_int(self->start);
+             if (start < 0) {
+                 start += length;
+             }
+             start = MIN(length, MAX(start, 0));
+         }
+ 
+         if (self->stop == mp_const_none) {
+             stop = length;
+         } else {
+             stop = mp_obj_get_int(self->stop);
+             if (stop < 0) {
+                 stop += length;
+             }
+             stop = MIN(length, MAX(stop, 0));
+         }
+     } else {
+         // Negative step
+         if (self->start == mp_const_none) {
+             start = length - 1;
+         } else {
+             start = mp_obj_get_int(self->start);
+             if (start < 0) {
+                 start += length;
+             }
+             start = MIN(length - 1, MAX(start, -1));
+         }
+ 
+         if (self->stop == mp_const_none) {
+             stop = -1;
+         } else {
+             stop = mp_obj_get_int(self->stop);
+             if (stop < 0) {
+                 stop += length;
+             }
+             stop = MIN(length - 1, MAX(stop, -1));
+         }
+     }
+ 
+     result->start = start;
+     result->stop = stop;
+     result->step = step;
+ }
+ #endif
+ 
+ mp_float_t ndarray_get_float_value(void *data, uint8_t typecode, size_t index) {
+     if(typecode == NDARRAY_UINT8) {
+         return (mp_float_t)((uint8_t *)data)[index];
+     } else if(typecode == NDARRAY_INT8) {
+         return (mp_float_t)((int8_t *)data)[index];
+     } else if(typecode == NDARRAY_UINT16) {
+         return (mp_float_t)((uint16_t *)data)[index];
+     } else if(typecode == NDARRAY_INT16) {
+         return (mp_float_t)((int16_t *)data)[index];
+     } else {
+         return (mp_float_t)((mp_float_t *)data)[index];
+     }
+ }
+ 
+ bool ndarray_object_is_nditerable(mp_obj_t o_in) {
+     if(MP_OBJ_IS_TYPE(o_in, &ulab_ndarray_type) || 
+       MP_OBJ_IS_TYPE(o_in, &mp_type_tuple) || 
+       MP_OBJ_IS_TYPE(o_in, &mp_type_list) || 
+       MP_OBJ_IS_TYPE(o_in, &mp_type_range)) {
+         return true;
+     }
+     return false;
+ }
+ 
+ void fill_array_iterable(mp_float_t *array, mp_obj_t iterable) {
+     mp_obj_iter_buf_t x_buf;
+     mp_obj_t x_item, x_iterable = mp_getiter(iterable, &x_buf);
+     size_t i=0;
+     while ((x_item = mp_iternext(x_iterable)) != MP_OBJ_STOP_ITERATION) {
+         array[i] = (mp_float_t)mp_obj_get_float(x_item);
+         i++;
+     }
+ }
+ 
+ mp_obj_t ndarray_set_printoptions(size_t n_args, const mp_obj_t *pos_args, mp_map_t *kw_args) {
+ 	static const mp_arg_t allowed_args[] = {
+ 		{ MP_QSTR_threshold, MP_ARG_KW_ONLY | MP_ARG_OBJ, {.u_rom_obj = mp_const_none} },
+ 		{ MP_QSTR_edgeitems, MP_ARG_KW_ONLY | MP_ARG_OBJ, {.u_rom_obj = mp_const_none} },
+ 	};
+ 
+ 	mp_arg_val_t args[MP_ARRAY_SIZE(allowed_args)];
+ 	mp_arg_parse_all(n_args, pos_args, kw_args, MP_ARRAY_SIZE(allowed_args), allowed_args, args);
+ 	if(args[0].u_rom_obj != mp_const_none) {
+ 		ndarray_print_threshold = mp_obj_get_int(args[0].u_rom_obj);
+ 	}
+ 	if(args[1].u_rom_obj != mp_const_none) {
+ 		ndarray_print_edgeitems = mp_obj_get_int(args[1].u_rom_obj);
+ 	}
+ 	return mp_const_none;
+ }
+ 
+ MP_DEFINE_CONST_FUN_OBJ_KW(ndarray_set_printoptions_obj, 0, ndarray_set_printoptions);
+ 
+ mp_obj_t ndarray_get_printoptions(void) {
+ 	mp_obj_t dict = mp_obj_new_dict(2);
+ 	mp_obj_dict_store(MP_OBJ_FROM_PTR(dict), MP_OBJ_NEW_QSTR(MP_QSTR_threshold), mp_obj_new_int(ndarray_print_threshold));
+ 	mp_obj_dict_store(MP_OBJ_FROM_PTR(dict), MP_OBJ_NEW_QSTR(MP_QSTR_edgeitems), mp_obj_new_int(ndarray_print_edgeitems));
+     return dict;
+ }
+ 
+ MP_DEFINE_CONST_FUN_OBJ_0(ndarray_get_printoptions_obj, ndarray_get_printoptions);
+ 
+ void ndarray_print_row(const mp_print_t *print, mp_obj_array_t *data, size_t n0, size_t n) {
+     mp_print_str(print, "[");
+     if((n <= ndarray_print_threshold) || (n <= 2*ndarray_print_edgeitems)) { // if the array is short, print everything
+         mp_obj_print_helper(print, mp_binary_get_val_array(data->typecode, data->items, n0), PRINT_REPR);
+         for(size_t i=1; i < n; i++) {
+             mp_print_str(print, ", ");
+             mp_obj_print_helper(print, mp_binary_get_val_array(data->typecode, data->items, n0+i), PRINT_REPR);
+         }
+     } else {
+         mp_obj_print_helper(print, mp_binary_get_val_array(data->typecode, data->items, n0), PRINT_REPR);
+         for(size_t i=1; i < ndarray_print_edgeitems; i++) {
+             mp_print_str(print, ", ");
+             mp_obj_print_helper(print, mp_binary_get_val_array(data->typecode, data->items, n0+i), PRINT_REPR);
+         }
+         mp_printf(print, ", ..., ");
+         mp_obj_print_helper(print, mp_binary_get_val_array(data->typecode, data->items, n0+n-ndarray_print_edgeitems), PRINT_REPR);
+         for(size_t i=1; i < ndarray_print_edgeitems; i++) {
+             mp_print_str(print, ", ");
+             mp_obj_print_helper(print, mp_binary_get_val_array(data->typecode, data->items, n0+n-ndarray_print_edgeitems+i), PRINT_REPR);
+         }
+     }
+     mp_print_str(print, "]");
+ }
+ 
+ void ndarray_print(const mp_print_t *print, mp_obj_t self_in, mp_print_kind_t kind) {
+     (void)kind;
+     ndarray_obj_t *self = MP_OBJ_TO_PTR(self_in);
+     mp_print_str(print, "array(");
+     
+     if(self->array->len == 0) {
+         mp_print_str(print, "[]");
+     } else {
+         if((self->m == 1) || (self->n == 1)) {
+             ndarray_print_row(print, self->array, 0, self->array->len);
+         } else {
+             // TODO: add vertical ellipses
+             mp_print_str(print, "[");
+             ndarray_print_row(print, self->array, 0, self->n);
+             for(size_t i=1; i < self->m; i++) {
+                 mp_print_str(print, ",\n\t ");
+                 ndarray_print_row(print, self->array, i*self->n, self->n);
+             }
+             mp_print_str(print, "]");
+         }
+     }
+     if(self->array->typecode == NDARRAY_UINT8) {
+         mp_print_str(print, ", dtype=uint8)");
+     } else if(self->array->typecode == NDARRAY_INT8) {
+         mp_print_str(print, ", dtype=int8)");
+     } else if(self->array->typecode == NDARRAY_UINT16) {
+         mp_print_str(print, ", dtype=uint16)");
+     } else if(self->array->typecode == NDARRAY_INT16) {
+         mp_print_str(print, ", dtype=int16)");
+     } else if(self->array->typecode == NDARRAY_FLOAT) {
+         mp_print_str(print, ", dtype=float)");
+     }
+ }
+ 
+ void ndarray_assign_elements(mp_obj_array_t *data, mp_obj_t iterable, uint8_t typecode, size_t *idx) {
+     // assigns a single row in the matrix
+     mp_obj_t item;
+     while ((item = mp_iternext(iterable)) != MP_OBJ_STOP_ITERATION) {
+         mp_binary_set_val_array(typecode, data->items, (*idx)++, item);
+     }
+ }
+ 
+ ndarray_obj_t *create_new_ndarray(size_t m, size_t n, uint8_t typecode) {
+     // Creates the base ndarray with shape (m, n), and initialises the values to straight 0s
+     ndarray_obj_t *ndarray = m_new_obj(ndarray_obj_t);
+     ndarray->base.type = &ulab_ndarray_type;
+     ndarray->m = m;
+     ndarray->n = n;
+     mp_obj_array_t *array = array_new(typecode, m*n);
+     ndarray->bytes = m * n * mp_binary_get_size('@', typecode, NULL);
+     // this should set all elements to 0, irrespective of the of the typecode (all bits are zero)
+     // we could, perhaps, leave this step out, and initialise the array only, when needed
+     memset(array->items, 0, ndarray->bytes); 
+     ndarray->array = array;
+     return ndarray;
+ }
+ 
+ mp_obj_t ndarray_copy(mp_obj_t self_in) {
+     // returns a verbatim (shape and typecode) copy of self_in
+     ndarray_obj_t *self = MP_OBJ_TO_PTR(self_in);
+     ndarray_obj_t *out = create_new_ndarray(self->m, self->n, self->array->typecode);
+     memcpy(out->array->items, self->array->items, self->bytes);
+     return MP_OBJ_FROM_PTR(out);
+ }
+ 
+ STATIC uint8_t ndarray_init_helper(size_t n_args, const mp_obj_t *pos_args, mp_map_t *kw_args) {
+     static const mp_arg_t allowed_args[] = {
+         { MP_QSTR_, MP_ARG_REQUIRED | MP_ARG_OBJ, {.u_rom_obj = mp_const_none } },
+         { MP_QSTR_dtype, MP_ARG_KW_ONLY | MP_ARG_INT, {.u_int = NDARRAY_FLOAT } },
+     };
+     
+     mp_arg_val_t args[MP_ARRAY_SIZE(allowed_args)];
+     mp_arg_parse_all(n_args, pos_args, kw_args, MP_ARRAY_SIZE(allowed_args), allowed_args, args);
+     
+     uint8_t dtype = args[1].u_int;
+     return dtype;
+ }
+ 
+ STATIC mp_obj_t ndarray_make_new_core(size_t n_args, const mp_obj_t *args, mp_map_t *kw_args) {
+     uint8_t dtype = ndarray_init_helper(n_args, args, kw_args);
+     
+ 	if(MP_OBJ_IS_TYPE(args[0], &ulab_ndarray_type)) {
+ 		ndarray_obj_t *ndarray = MP_OBJ_TO_PTR(args[0]);
+ 		if(dtype == ndarray->array->typecode) {
+ 			return ndarray_copy(args[0]);
+ 		}
+ 		ndarray_obj_t *ndarray_new = create_new_ndarray(ndarray->m, ndarray->n, dtype);
+ 		mp_obj_t item;
+ 		if((ndarray->array->typecode == NDARRAY_FLOAT) &&(dtype != NDARRAY_FLOAT)) {
+ 			for(size_t i=0; i < ndarray->array->len; i++) {
+ 				mp_float_t f = ndarray_get_float_value(ndarray->array->items, ndarray->array->typecode, i);
+ 				item = mp_obj_new_int((int32_t)MICROPY_FLOAT_C_FUN(floor)(f));
+ 				mp_binary_set_val_array(dtype, ndarray_new->array->items, i, item);
+ 			}
+ 		} else {
+ 			for(size_t i=0; i < ndarray->array->len; i++) {
+ 				item = mp_binary_get_val_array(ndarray->array->typecode, ndarray->array->items, i);
+ 				mp_binary_set_val_array(dtype, ndarray_new->array->items, i, item);
+ 			}
+ 		}
+ 		return MP_OBJ_FROM_PTR(ndarray_new);
+ 	}
+ 
+     size_t len1, len2 = 0, i = 0;
+     mp_obj_t len_in = mp_obj_len_maybe(args[0]);
+     if (len_in == MP_OBJ_NULL) {
+         mp_raise_ValueError(translate("first argument must be an iterable"));
+     } else {
+         // len1 is either the number of rows (for matrices), or the number of elements (row vectors)
+         len1 = MP_OBJ_SMALL_INT_VALUE(len_in);
+     }
+ 
+     // We have to figure out, whether the first element of the iterable is an iterable itself
+     // Perhaps, there is a more elegant way of handling this
+     mp_obj_iter_buf_t iter_buf1;
+     mp_obj_t item1, iterable1 = mp_getiter(args[0], &iter_buf1);
+     while ((item1 = mp_iternext(iterable1)) != MP_OBJ_STOP_ITERATION) {
+         len_in = mp_obj_len_maybe(item1);
+         if(len_in != MP_OBJ_NULL) { // indeed, this seems to be an iterable
+             // Next, we have to check, whether all elements in the outer loop have the same length
+             if(i > 0) {
+                 if(len2 != (size_t)MP_OBJ_SMALL_INT_VALUE(len_in)) {
+                     mp_raise_ValueError(translate("iterables are not of the same length"));
+                 }
+             }
+             len2 = MP_OBJ_SMALL_INT_VALUE(len_in);
+             i++;
+         }
+     }
+     // By this time, it should be established, what the shape is, so we can now create the array
+     ndarray_obj_t *self = create_new_ndarray((len2 == 0) ? 1 : len1, (len2 == 0) ? len1 : len2, dtype);
+     iterable1 = mp_getiter(args[0], &iter_buf1);
+     i = 0;
+     if(len2 == 0) { // the first argument is a single iterable
+         ndarray_assign_elements(self->array, iterable1, dtype, &i);
+     } else {
+         mp_obj_iter_buf_t iter_buf2;
+         mp_obj_t iterable2; 
+ 
+         while ((item1 = mp_iternext(iterable1)) != MP_OBJ_STOP_ITERATION) {
+             iterable2 = mp_getiter(item1, &iter_buf2);
+             ndarray_assign_elements(self->array, iterable2, dtype, &i);
+         }
+     }
+     return MP_OBJ_FROM_PTR(self);
+ }
+ 
+ #ifdef CIRCUITPY
+ mp_obj_t ndarray_make_new(const mp_obj_type_t *type, size_t n_args, const mp_obj_t *args, mp_map_t *kw_args) {
+     (void) type;
+     mp_arg_check_num(n_args, kw_args, 1, 2, true);
+     size_t n_kw = 0;
+     if (kw_args != 0) {
+         n_kw = kw_args->used;
+     }
+     mp_map_init_fixed_table(kw_args, n_kw, args + n_args);
+     return ndarray_make_new_core(n_args, args, kw_args);
+ }
+ #else
+ mp_obj_t ndarray_make_new(const mp_obj_type_t *type, size_t n_args, size_t n_kw, const mp_obj_t *args) {
+     (void) type;
+     mp_arg_check_num(n_args, n_kw, 1, 2, true);
+     mp_map_t kw_args;
+     mp_map_init_fixed_table(&kw_args, n_kw, args + n_args);
+     return ndarray_make_new_core(n_args, args, &kw_args);
+ }
+ #endif
+ 
+ static size_t slice_length(mp_bound_slice_t slice) {
+     ssize_t len, correction = 1;
+     if(slice.step > 0) correction = -1;
+     len = (ssize_t)(slice.stop - slice.start + (slice.step + correction)) / slice.step;
+     if(len < 0) return 0;
+     return (size_t)len;
+ }
+ 
+ static size_t true_length(mp_obj_t bool_list) {
+     // returns the number of Trues in a Boolean list
+     // I wonder, wouldn't this be faster, if we looped through bool_list->items instead?
+     mp_obj_iter_buf_t iter_buf;
+     mp_obj_t item, iterable = mp_getiter(bool_list, &iter_buf);
+     size_t trues = 0;
+     while((item = mp_iternext(iterable)) != MP_OBJ_STOP_ITERATION) {
+         if(!mp_obj_is_bool(item)) {
+                 // numpy seems to be a little bit inconsistent in when an index is considered
+                 // to be True/False. Bail out immediately, if the items are not True/False
+                 mp_raise_TypeError(translate("wrong index type"));
+         }
+         if(mp_obj_is_true(item)) {
+             trues++;
+         }
+     }
+     return trues;
+ }
+ 
+ static mp_bound_slice_t generate_slice(mp_int_t n, mp_obj_t index) {
+     // micropython seems to have difficulties with negative steps
+     mp_bound_slice_t slice;
+     if(MP_OBJ_IS_TYPE(index, &mp_type_slice)) {
+         mp_obj_slice_indices(index, n, &slice);
+     } else if(MP_OBJ_IS_INT(index)) {
+         mp_int_t _index = mp_obj_get_int(index);
+         if(_index < 0) {
+             _index += n;
+         } 
+         if((_index >= n) || (_index < 0)) {
+             mp_raise_msg(&mp_type_IndexError, translate("index is out of bounds"));
+         }
+         slice.start = _index;
+         slice.stop = _index + 1;
+         slice.step = 1;
+     } else {
+         mp_raise_msg(&mp_type_IndexError, translate("indices must be integers, slices, or Boolean lists"));
+     }
+     return slice;
+ }
+ 
+ static mp_bound_slice_t simple_slice(int16_t start, int16_t stop, int16_t step) {
+     mp_bound_slice_t slice;
+     slice.start = start;
+     slice.stop = stop;
+     slice.step = step;
+     return slice;
+ }
+ 
+ static void insert_binary_value(ndarray_obj_t *ndarray, size_t nd_index, ndarray_obj_t *values, size_t value_index) {
+     // there is probably a more elegant implementation...
+     mp_obj_t tmp = mp_binary_get_val_array(values->array->typecode, values->array->items, value_index);
+     if((values->array->typecode == NDARRAY_FLOAT) && (ndarray->array->typecode != NDARRAY_FLOAT)) {
+         // workaround: rounding seems not to work in the arm compiler
+         int32_t x = (int32_t)MICROPY_FLOAT_C_FUN(floor)(mp_obj_get_float(tmp)+0.5);
+         tmp = mp_obj_new_int(x);
+     }
+     mp_binary_set_val_array(ndarray->array->typecode, ndarray->array->items, nd_index, tmp); 
+ }
+ 
+ static mp_obj_t insert_slice_list(ndarray_obj_t *ndarray, size_t m, size_t n, 
+                             mp_bound_slice_t row, mp_bound_slice_t column, 
+                             mp_obj_t row_list, mp_obj_t column_list, 
+                             ndarray_obj_t *values) {
+     if((m != values->m) && (n != values->n)) {
+         if(values->array->len != 1) { // not a single item
+             mp_raise_ValueError(translate("could not broadast input array from shape"));
+         }
+     }
+     size_t cindex, rindex;
+     // M, and N are used to manipulate how the source index is incremented in the loop
+     uint8_t M = 1, N = 1;
+     if(values->m == 1) {
+         M = 0;
+     }
+     if(values->n == 1) {
+         N = 0;
+     }
+     
+     if(row_list == mp_const_none) { // rows are indexed by a slice
+         rindex = row.start;
+         if(column_list == mp_const_none) { // columns are indexed by a slice
+             for(size_t i=0; i < m; i++) {
+                 cindex = column.start;
+                 for(size_t j=0; j < n; j++) {
+                     insert_binary_value(ndarray, rindex*ndarray->n+cindex, values, i*M*n+j*N);
+                     cindex += column.step;
+                 }
+                 rindex += row.step;
+             }
+         } else { // columns are indexed by a Boolean list
+             mp_obj_iter_buf_t column_iter_buf;
+             mp_obj_t column_item, column_iterable;
+             for(size_t i=0; i < m; i++) {
+                 column_iterable = mp_getiter(column_list, &column_iter_buf);
+                 size_t j = 0;
+                 cindex = 0;
+                 while((column_item = mp_iternext(column_iterable)) != MP_OBJ_STOP_ITERATION) {
+                     if(mp_obj_is_true(column_item)) {
+                         insert_binary_value(ndarray, rindex*ndarray->n+cindex, values, i*M*n+j*N);
+                         j++;
+                     }
+                     cindex++;
+                 }
+                 rindex += row.step;
+             }
+         }
+     } else { // rows are indexed by a Boolean list
+         mp_obj_iter_buf_t row_iter_buf;
+         mp_obj_t row_item, row_iterable;
+         row_iterable = mp_getiter(row_list, &row_iter_buf);
+         size_t i = 0;
+         rindex = 0;
+         if(column_list == mp_const_none) { // columns are indexed by a slice
+             while((row_item = mp_iternext(row_iterable)) != MP_OBJ_STOP_ITERATION) {
+                 if(mp_obj_is_true(row_item)) {
+                     cindex = column.start;
+                     for(size_t j=0; j < n; j++) {
+                         insert_binary_value(ndarray, rindex*ndarray->n+cindex, values, i*M*n+j*N);
+                         cindex += column.step;
+                     }
+                     i++;
+                 }
+                 rindex++;
+             } 
+         } else { // columns are indexed by a list
+             mp_obj_iter_buf_t column_iter_buf;
+             mp_obj_t column_item, column_iterable;
+             size_t j = 0;
+             cindex = 0;
+             while((row_item = mp_iternext(row_iterable)) != MP_OBJ_STOP_ITERATION) {
+                 if(mp_obj_is_true(row_item)) {
+                     column_iterable = mp_getiter(column_list, &column_iter_buf);                   
+                     while((column_item = mp_iternext(column_iterable)) != MP_OBJ_STOP_ITERATION) {
+                         if(mp_obj_is_true(column_item)) {
+                             insert_binary_value(ndarray, rindex*ndarray->n+cindex, values, i*M*n+j*N);
+                             j++;
+                         }
+                         cindex++;
+                     }
+                     i++;
+                 }
+                 rindex++;
+             }
+         }
+     }
+     return mp_const_none;
+ }
+ 
+ static mp_obj_t iterate_slice_list(ndarray_obj_t *ndarray, size_t m, size_t n, 
+                             mp_bound_slice_t row, mp_bound_slice_t column, 
+                             mp_obj_t row_list, mp_obj_t column_list, 
+                             ndarray_obj_t *values) {
+     if(values != NULL) {
+         return insert_slice_list(ndarray, m, n, row, column, row_list, column_list, values);
+     }
+     uint8_t _sizeof = mp_binary_get_size('@', ndarray->array->typecode, NULL);
+     ndarray_obj_t *out = create_new_ndarray(m, n, ndarray->array->typecode);
+     uint8_t *target = (uint8_t *)out->array->items;
+     uint8_t *source = (uint8_t *)ndarray->array->items;
+     size_t cindex, rindex;    
+     if(row_list == mp_const_none) { // rows are indexed by a slice
+         rindex = row.start;
+         if(column_list == mp_const_none) { // columns are indexed by a slice
+             for(size_t i=0; i < m; i++) {
+                 cindex = column.start;
+                 for(size_t j=0; j < n; j++) {
+                     memcpy(target+(i*n+j)*_sizeof, source+(rindex*ndarray->n+cindex)*_sizeof, _sizeof);
+                     cindex += column.step;
+                 }
+                 rindex += row.step;
+             }
+         } else { // columns are indexed by a Boolean list
+             // TODO: the list must be exactly as long as the axis
+             mp_obj_iter_buf_t column_iter_buf;
+             mp_obj_t column_item, column_iterable;
+             for(size_t i=0; i < m; i++) {
+                 column_iterable = mp_getiter(column_list, &column_iter_buf);
+                 size_t j = 0;
+                 cindex = 0;
+                 while((column_item = mp_iternext(column_iterable)) != MP_OBJ_STOP_ITERATION) {
+                     if(mp_obj_is_true(column_item)) {
+                         memcpy(target+(i*n+j)*_sizeof, source+(rindex*ndarray->n+cindex)*_sizeof, _sizeof);
+                         j++;
+                     }
+                     cindex++;
+                 }
+                 rindex += row.step;
+             }
+         }
+     } else { // rows are indexed by a Boolean list
+         mp_obj_iter_buf_t row_iter_buf;
+         mp_obj_t row_item, row_iterable;
+         row_iterable = mp_getiter(row_list, &row_iter_buf);
+         size_t i = 0;
+         rindex = 0;
+         if(column_list == mp_const_none) { // columns are indexed by a slice
+             while((row_item = mp_iternext(row_iterable)) != MP_OBJ_STOP_ITERATION) {
+                 if(mp_obj_is_true(row_item)) {
+                     cindex = column.start;
+                     for(size_t j=0; j < n; j++) {
+                         memcpy(target+(i*n+j)*_sizeof, source+(rindex*ndarray->n+cindex)*_sizeof, _sizeof);
+                         cindex += column.step;
+                     }
+                     i++;
+                 }
+                 rindex++;
+             } 
+         } else { // columns are indexed by a list
+             mp_obj_iter_buf_t column_iter_buf;
+             mp_obj_t column_item, column_iterable;
+             size_t j = 0;
+             cindex = 0;
+             while((row_item = mp_iternext(row_iterable)) != MP_OBJ_STOP_ITERATION) {
+                 if(mp_obj_is_true(row_item)) {
+                     column_iterable = mp_getiter(column_list, &column_iter_buf);                   
+                     while((column_item = mp_iternext(column_iterable)) != MP_OBJ_STOP_ITERATION) {
+                         if(mp_obj_is_true(column_item)) {
+                             memcpy(target+(i*n+j)*_sizeof, source+(rindex*ndarray->n+cindex)*_sizeof, _sizeof);
+                             j++;
+                         }
+                         cindex++;
+                     }
+                     i++;
+                 }
+                 rindex++;
+             }
+         }
+     }
+     return MP_OBJ_FROM_PTR(out);
+ }
+ 
+ static mp_obj_t ndarray_get_slice(ndarray_obj_t *ndarray, mp_obj_t index, ndarray_obj_t *values) {
+     mp_bound_slice_t row_slice = simple_slice(0, 0, 1), column_slice = simple_slice(0, 0, 1);
+ 
+     size_t m = 0, n = 0;
+     if(MP_OBJ_IS_INT(index) && (ndarray->m == 1) && (values == NULL)) { 
+         // we have a row vector, and don't want to assign
+         column_slice = generate_slice(ndarray->n, index);
+         if(slice_length(column_slice) == 1) { // we were asked for a single item
+             // subscribe returns an mp_obj_t, if and only, if the index is an integer, and we have a row vector
+             return mp_binary_get_val_array(ndarray->array->typecode, ndarray->array->items, column_slice.start);
+         }
+     }
+     
+     if(MP_OBJ_IS_INT(index) || MP_OBJ_IS_TYPE(index, &mp_type_slice)) {
+         if(ndarray->m == 1) { // we have a row vector
+             column_slice = generate_slice(ndarray->n, index);
+             row_slice = simple_slice(0, 1, 1);
+         } else { // we have a matrix
+             row_slice = generate_slice(ndarray->m, index);
+             column_slice = simple_slice(0, ndarray->n, 1); // take all columns
+         }
+         m = slice_length(row_slice);
+         n = slice_length(column_slice);
+         return iterate_slice_list(ndarray, m, n, row_slice, column_slice, mp_const_none, mp_const_none, values);
+     } else if(MP_OBJ_IS_TYPE(index, &mp_type_list)) {
+         n = true_length(index);
+         if(ndarray->m == 1) { // we have a flat array
+             // we might have to separate the n == 1 case
+             row_slice = simple_slice(0, 1, 1);
+             return iterate_slice_list(ndarray, 1, n, row_slice, column_slice, mp_const_none, index, values);
+         } else { // we have a matrix
+             return iterate_slice_list(ndarray, 1, n, row_slice, column_slice, mp_const_none, index, values);
+         }
+     }
+     else { // we certainly have a tuple, so let us deal with it
+         mp_obj_tuple_t *tuple = MP_OBJ_TO_PTR(index);
+         if(tuple->len != 2) {
+             mp_raise_msg(&mp_type_IndexError, translate("too many indices"));
+         }
+         if(!(MP_OBJ_IS_TYPE(tuple->items[0], &mp_type_list) || 
+             MP_OBJ_IS_TYPE(tuple->items[0], &mp_type_slice) || 
+             MP_OBJ_IS_INT(tuple->items[0])) || 
+            !(MP_OBJ_IS_TYPE(tuple->items[1], &mp_type_list) || 
+             MP_OBJ_IS_TYPE(tuple->items[1], &mp_type_slice) || 
+             MP_OBJ_IS_INT(tuple->items[1]))) {
+                 mp_raise_msg(&mp_type_IndexError, translate("indices must be integers, slices, or Boolean lists"));
+         }
+         if(MP_OBJ_IS_TYPE(tuple->items[0], &mp_type_list)) { // rows are indexed by Boolean list
+             m = true_length(tuple->items[0]);
+             if(MP_OBJ_IS_TYPE(tuple->items[1], &mp_type_list)) {
+                 n = true_length(tuple->items[1]);
+                 return iterate_slice_list(ndarray, m, n, row_slice, column_slice, 
+                                           tuple->items[0], tuple->items[1], values);
+             } else { // the column is indexed by an integer, or a slice
+                 column_slice = generate_slice(ndarray->n, tuple->items[1]);
+                 n = slice_length(column_slice);
+                 return iterate_slice_list(ndarray, m, n, row_slice, column_slice, 
+                                           tuple->items[0], mp_const_none, values);
+             }
+             
+         } else { // rows are indexed by a slice, or an integer
+             row_slice = generate_slice(ndarray->m, tuple->items[0]);
+             m = slice_length(row_slice);
+             if(MP_OBJ_IS_TYPE(tuple->items[1], &mp_type_list)) { // columns are indexed by a Boolean list
+                 n = true_length(tuple->items[1]);
+                 return iterate_slice_list(ndarray, m, n, row_slice, column_slice, 
+                                          mp_const_none, tuple->items[1], values);
+             } else { // columns are indexed by an integer, or a slice
+                 column_slice = generate_slice(ndarray->n, tuple->items[1]);
+                 n = slice_length(column_slice);
+                 return iterate_slice_list(ndarray, m, n, row_slice, column_slice, 
+                                           mp_const_none, mp_const_none, values);             
+                 
+             }
+         }
+     }
+ }
+ 
+ mp_obj_t ndarray_subscr(mp_obj_t self_in, mp_obj_t index, mp_obj_t value) {
+     ndarray_obj_t *self = MP_OBJ_TO_PTR(self_in);
+     
+     if (value == MP_OBJ_SENTINEL) { // return value(s)
+         return ndarray_get_slice(self, index, NULL);    
+     } else { // assignment to slices; the value must be an ndarray, or a scalar
+         if(!MP_OBJ_IS_TYPE(value, &ulab_ndarray_type) && 
+           !MP_OBJ_IS_INT(value) && !mp_obj_is_float(value)) {
+             mp_raise_ValueError(translate("right hand side must be an ndarray, or a scalar"));
+         } else {
+             ndarray_obj_t *values = NULL;
+             if(MP_OBJ_IS_INT(value)) {
+                 values = create_new_ndarray(1, 1, self->array->typecode);
+                 mp_binary_set_val_array(values->array->typecode, values->array->items, 0, value);   
+             } else if(mp_obj_is_float(value)) {
+                 values = create_new_ndarray(1, 1, NDARRAY_FLOAT);
+                 mp_binary_set_val_array(NDARRAY_FLOAT, values->array->items, 0, value);
+             } else {
+                 values = MP_OBJ_TO_PTR(value);
+             }
+             return ndarray_get_slice(self, index, values);
+         }
+     }      
+     return mp_const_none;
+ }
+ 
+ // itarray iterator
+ 
+ mp_obj_t ndarray_getiter(mp_obj_t o_in, mp_obj_iter_buf_t *iter_buf) {
+     return mp_obj_new_ndarray_iterator(o_in, 0, iter_buf);
+ }
+ 
+ typedef struct _mp_obj_ndarray_it_t {
+     mp_obj_base_t base;
+     mp_fun_1_t iternext;
+     mp_obj_t ndarray;
+     size_t cur;
+ } mp_obj_ndarray_it_t;
+ 
+ static mp_obj_t ndarray_iternext(mp_obj_t self_in) {
+     mp_obj_ndarray_it_t *self = MP_OBJ_TO_PTR(self_in);
+     ndarray_obj_t *ndarray = MP_OBJ_TO_PTR(self->ndarray);
+     // TODO: in numpy, ndarrays are iterated with respect to the first axis. 
+     size_t iter_end = 0;
+     if(ndarray->m == 1) {
+         iter_end = ndarray->array->len;
+     } else {
+         iter_end = ndarray->m;
+     }
+     if(self->cur < iter_end) {
+         if(ndarray->n == ndarray->array->len) { // we have a linear array
+             // read the current value
+             mp_obj_t value;
+             value = mp_binary_get_val_array(ndarray->array->typecode, ndarray->array->items, self->cur);
+             self->cur++;
+             return value;
+         } else { // we have a matrix, return the number of rows
+             ndarray_obj_t *value = create_new_ndarray(1, ndarray->n, ndarray->array->typecode);
+             // copy the memory content here
+             uint8_t *tmp = (uint8_t *)ndarray->array->items;
+             size_t strip_size = ndarray->n * mp_binary_get_size('@', ndarray->array->typecode, NULL);
+             memcpy(value->array->items, &tmp[self->cur*strip_size], strip_size);
+             self->cur++;
+             return value;
+         }
+     } else {
+         return MP_OBJ_STOP_ITERATION;
+     }
+ }
+ 
+ mp_obj_t mp_obj_new_ndarray_iterator(mp_obj_t ndarray, size_t cur, mp_obj_iter_buf_t *iter_buf) {
+     assert(sizeof(mp_obj_ndarray_it_t) <= sizeof(mp_obj_iter_buf_t));
+     mp_obj_ndarray_it_t *o = (mp_obj_ndarray_it_t*)iter_buf;
+     o->base.type = &mp_type_polymorph_iter;
+     o->iternext = ndarray_iternext;
+     o->ndarray = ndarray;
+     o->cur = cur;
+     return MP_OBJ_FROM_PTR(o);
+ }
+ 
+ mp_obj_t ndarray_shape(mp_obj_t self_in) {
+     ndarray_obj_t *self = MP_OBJ_TO_PTR(self_in);
+     mp_obj_t tuple[2] = {
+         mp_obj_new_int(self->m),
+         mp_obj_new_int(self->n)
+     };
+     return mp_obj_new_tuple(2, tuple);
+ }
+ 
+ mp_obj_t ndarray_size(mp_obj_t self_in) {
+     ndarray_obj_t *self = MP_OBJ_TO_PTR(self_in);
+     return mp_obj_new_int(self->array->len);
+ }
+ 
+ mp_obj_t ndarray_itemsize(mp_obj_t self_in) {
+     ndarray_obj_t *self = MP_OBJ_TO_PTR(self_in);
+     return MP_OBJ_NEW_SMALL_INT(mp_binary_get_size('@', self->array->typecode, NULL));
+ }
+ 
+ mp_obj_t ndarray_flatten(size_t n_args, const mp_obj_t *pos_args, mp_map_t *kw_args) {
+     static const mp_arg_t allowed_args[] = {
+         { MP_QSTR_order, MP_ARG_KW_ONLY | MP_ARG_OBJ, {.u_rom_obj = MP_ROM_QSTR(MP_QSTR_C)} },
+     };
+ 
+     mp_arg_val_t args[MP_ARRAY_SIZE(allowed_args)];
+     mp_arg_parse_all(n_args - 1, pos_args + 1, kw_args, MP_ARRAY_SIZE(allowed_args), allowed_args, args);
+     mp_obj_t self_copy = ndarray_copy(pos_args[0]);
+     ndarray_obj_t *ndarray = MP_OBJ_TO_PTR(self_copy);
+     
+     GET_STR_DATA_LEN(args[0].u_obj, order, len);    
+     if((len != 1) || ((memcmp(order, "C", 1) != 0) && (memcmp(order, "F", 1) != 0))) {
+         mp_raise_ValueError(translate("flattening order must be either 'C', or 'F'"));
+     }
+ 
+     // if order == 'C', we simply have to set m, and n, there is nothing else to do
+     if(memcmp(order, "F", 1) == 0) {
+         ndarray_obj_t *self = MP_OBJ_TO_PTR(pos_args[0]);
+         uint8_t _sizeof = mp_binary_get_size('@', self->array->typecode, NULL);
+         // get the data of self_in: we won't need a temporary buffer for the transposition
+         uint8_t *self_array = (uint8_t *)self->array->items;
+         uint8_t *array = (uint8_t *)ndarray->array->items;
+         size_t i=0;
+         for(size_t n=0; n < self->n; n++) {
+             for(size_t m=0; m < self->m; m++) {
+                 memcpy(array+_sizeof*i, self_array+_sizeof*(m*self->n + n), _sizeof);
+                 i++;
+             }
+         }        
+     }
+     ndarray->n = ndarray->array->len;
+     ndarray->m = 1;
+     return self_copy;
+ }
+ 
+ // Binary operations
+ ndarray_obj_t *ndarray_from_mp_obj(mp_obj_t obj) {
+ 	// creates an ndarray from an micropython int or float
+ 	// if the input is an ndarray, it is returned
+ 	ndarray_obj_t *ndarray;
+ 	if(MP_OBJ_IS_INT(obj)) {
+ 		int32_t ivalue = mp_obj_get_int(obj);
+ 		if((ivalue > 0) && (ivalue < 256)) {
+ 			CREATE_SINGLE_ITEM(ndarray, uint8_t, NDARRAY_UINT8, ivalue);
+ 		} else if((ivalue > 255) && (ivalue < 65535)) {
+ 			CREATE_SINGLE_ITEM(ndarray, uint16_t, NDARRAY_UINT16, ivalue);
+ 		} else if((ivalue < 0) && (ivalue > -128)) {
+ 			CREATE_SINGLE_ITEM(ndarray, int8_t, NDARRAY_INT8, ivalue);
+ 		} else if((ivalue < -127) && (ivalue > -32767)) {
+ 			CREATE_SINGLE_ITEM(ndarray, int16_t, NDARRAY_INT16, ivalue);
+ 		} else { // the integer value clearly does not fit the ulab types, so move on to float
+ 			CREATE_SINGLE_ITEM(ndarray, mp_float_t, NDARRAY_FLOAT, ivalue);
+ 		}
+ 	} else if(mp_obj_is_float(obj)) {
+ 		mp_float_t fvalue = mp_obj_get_float(obj);
+ 		CREATE_SINGLE_ITEM(ndarray, mp_float_t, NDARRAY_FLOAT, fvalue);
+ 	} else if(MP_OBJ_IS_TYPE(obj, &ulab_ndarray_type)){
+ 		ndarray = MP_OBJ_TO_PTR(obj);
+ 	} else {
+ 		mp_raise_TypeError(translate("wrong operand type"));
+ 	}
+ 	return ndarray;
+ }
+ 
+ mp_obj_t ndarray_binary_op(mp_binary_op_t _op, mp_obj_t lhs, mp_obj_t rhs) {
+ 	// if the ndarray stands on the right hand side of the expression, simply swap the operands
+ 	ndarray_obj_t *ol, *or;
+ 	mp_binary_op_t op = _op;
+ 	if((op == MP_BINARY_OP_REVERSE_ADD) || (op == MP_BINARY_OP_REVERSE_MULTIPLY) || 
+ 		(op == MP_BINARY_OP_REVERSE_POWER) || (op == MP_BINARY_OP_REVERSE_SUBTRACT) || 
+ 		(op == MP_BINARY_OP_REVERSE_TRUE_DIVIDE)) {
+ 		ol = ndarray_from_mp_obj(rhs);
+ 		or = ndarray_from_mp_obj(lhs);		
+ 	} else {
+ 		ol = ndarray_from_mp_obj(lhs);
+ 		or = ndarray_from_mp_obj(rhs);
+ 	}
+ 	if(op == MP_BINARY_OP_REVERSE_ADD) {
+ 		op = MP_BINARY_OP_ADD;
+ 	} else if(op == MP_BINARY_OP_REVERSE_MULTIPLY) {
+ 		op = MP_BINARY_OP_MULTIPLY;
+ 	} else if(op == MP_BINARY_OP_REVERSE_POWER) {
+ 		op = MP_BINARY_OP_POWER;
+ 	} else if(op == MP_BINARY_OP_REVERSE_SUBTRACT) {
+ 		op = MP_BINARY_OP_SUBTRACT;
+ 	} else if(op == MP_BINARY_OP_REVERSE_TRUE_DIVIDE) {
+ 		op = MP_BINARY_OP_TRUE_DIVIDE;
+ 	}
+     // One of the operands is a scalar
+     // TODO: conform to numpy with the upcasting
+     // TODO: implement in-place operators
+ 	// these are partial broadcasting rules: either the two arrays 
+ 	// are of the same shape, or one of them is of length 1
+ 	if(((ol->m != or->m) || (ol->n != or->n))) {
+ 		if((ol->array->len != 1) && (or->array->len != 1)) {
+ 			if(op == MP_BINARY_OP_EQUAL) {
+ 				return mp_const_false;
+ 			} else if(op == MP_BINARY_OP_NOT_EQUAL) {
+ 				return mp_const_true;
+ 			}
+             mp_raise_ValueError(translate("operands could not be broadcast together"));
+ 		}
+ 	}
+ 	uint8_t linc = ol->array->len == 1 ? 0 : 1;
+ 	uint8_t rinc = or->array->len == 1 ? 0 : 1;
+ 	// do the partial broadcasting here
+ 	size_t m = MAX(ol->m, or->m);
+ 	size_t n = MAX(ol->n, or->n);
+ 	size_t len = MAX(ol->array->len, or->array->len);
+ 	if((ol->array->len == 0) || (or->array->len == 0)) {
+ 		len = 0;
+ 	}
+ 	switch(op) {
+ 		case MP_BINARY_OP_EQUAL:
+ 		case MP_BINARY_OP_NOT_EQUAL:
+ 		case MP_BINARY_OP_LESS:
+ 		case MP_BINARY_OP_LESS_EQUAL:
+ 		case MP_BINARY_OP_MORE:
+ 		case MP_BINARY_OP_MORE_EQUAL:
+ 		case MP_BINARY_OP_ADD:
+ 		case MP_BINARY_OP_SUBTRACT:
+ 		case MP_BINARY_OP_TRUE_DIVIDE:
+ 		case MP_BINARY_OP_MULTIPLY:
+ 		case MP_BINARY_OP_POWER:       
+ 			// TODO: I believe, this part can be made significantly smaller (compiled size)
+ 			// by doing only the typecasting in the large ifs, and moving the loops outside
+ 			// These are the upcasting rules
+ 			// float always becomes float
+ 			// operation on identical types preserves type
+ 			// uint8 + int8 => int16
+ 			// uint8 + int16 => int16
+ 			// uint8 + uint16 => uint16
+ 			// int8 + int16 => int16
+ 			// int8 + uint16 => uint16
+ 			// uint16 + int16 => float
+ 			// The parameters of RUN_BINARY_LOOP are 
+ 			// typecode of result, type_out, type_left, type_right, lhs operand, rhs operand, operator
+ 			if(ol->array->typecode == NDARRAY_UINT8) {
+ 				if(or->array->typecode == NDARRAY_UINT8) {
+ 					RUN_BINARY_LOOP(NDARRAY_UINT8, uint8_t, uint8_t, uint8_t, ol, or, op, m, n, len, linc, rinc);
+ 				} else if(or->array->typecode == NDARRAY_INT8) {
+ 					RUN_BINARY_LOOP(NDARRAY_INT16, int16_t, uint8_t, int8_t, ol, or, op, m, n, len, linc, rinc);
+ 				} else if(or->array->typecode == NDARRAY_UINT16) {
+ 					RUN_BINARY_LOOP(NDARRAY_UINT16, uint16_t, uint8_t, uint16_t, ol, or, op, m, n, len, linc, rinc);
+ 				} else if(or->array->typecode == NDARRAY_INT16) {
+ 					RUN_BINARY_LOOP(NDARRAY_INT16, int16_t, uint8_t, int16_t, ol, or, op, m, n, len, linc, rinc);
+ 				} else if(or->array->typecode == NDARRAY_FLOAT) {
+ 					RUN_BINARY_LOOP(NDARRAY_FLOAT, mp_float_t, uint8_t, mp_float_t, ol, or, op, m, n, len, linc, rinc);
+ 				}
+ 			} else if(ol->array->typecode == NDARRAY_INT8) {
+ 				if(or->array->typecode == NDARRAY_UINT8) {
+ 					RUN_BINARY_LOOP(NDARRAY_INT16, int16_t, int8_t, uint8_t, ol, or, op, m, n, len, linc, rinc);
+ 				} else if(or->array->typecode == NDARRAY_INT8) {
+ 					RUN_BINARY_LOOP(NDARRAY_INT8, int8_t, int8_t, int8_t, ol, or, op, m, n, len, linc, rinc);
+ 				} else if(or->array->typecode == NDARRAY_UINT16) {
+ 					RUN_BINARY_LOOP(NDARRAY_INT16, int16_t, int8_t, uint16_t, ol, or, op, m, n, len, linc, rinc);
+ 				} else if(or->array->typecode == NDARRAY_INT16) {
+ 					RUN_BINARY_LOOP(NDARRAY_INT16, int16_t, int8_t, int16_t, ol, or, op, m, n, len, linc, rinc);
+ 				} else if(or->array->typecode == NDARRAY_FLOAT) {
+ 					RUN_BINARY_LOOP(NDARRAY_FLOAT, mp_float_t, int8_t, mp_float_t, ol, or, op, m, n, len, linc, rinc);
+ 				}                
+ 			} else if(ol->array->typecode == NDARRAY_UINT16) {
+ 				if(or->array->typecode == NDARRAY_UINT8) {
+ 					RUN_BINARY_LOOP(NDARRAY_UINT16, uint16_t, uint16_t, uint8_t, ol, or, op, m, n, len, linc, rinc);
+ 				} else if(or->array->typecode == NDARRAY_INT8) {
+ 					RUN_BINARY_LOOP(NDARRAY_UINT16, uint16_t, uint16_t, int8_t, ol, or, op, m, n, len, linc, rinc);
+ 				} else if(or->array->typecode == NDARRAY_UINT16) {
+ 					RUN_BINARY_LOOP(NDARRAY_UINT16, uint16_t, uint16_t, uint16_t, ol, or, op, m, n, len, linc, rinc);
+ 				} else if(or->array->typecode == NDARRAY_INT16) {
+ 					RUN_BINARY_LOOP(NDARRAY_FLOAT, mp_float_t, uint16_t, int16_t, ol, or, op, m, n, len, linc, rinc);
+ 				} else if(or->array->typecode == NDARRAY_FLOAT) {
+ 					RUN_BINARY_LOOP(NDARRAY_FLOAT, mp_float_t, uint16_t, mp_float_t, ol, or, op, m, n, len, linc, rinc);
+ 				}
+ 			} else if(ol->array->typecode == NDARRAY_INT16) {
+ 				if(or->array->typecode == NDARRAY_UINT8) {
+ 					RUN_BINARY_LOOP(NDARRAY_INT16, int16_t, int16_t, uint8_t, ol, or, op, m, n, len, linc, rinc);
+ 				} else if(or->array->typecode == NDARRAY_INT8) {
+ 					RUN_BINARY_LOOP(NDARRAY_INT16, int16_t, int16_t, int8_t, ol, or, op, m, n, len, linc, rinc);
+ 				} else if(or->array->typecode == NDARRAY_UINT16) {
+ 					RUN_BINARY_LOOP(NDARRAY_FLOAT, mp_float_t, int16_t, uint16_t, ol, or, op, m, n, len, linc, rinc);
+ 				} else if(or->array->typecode == NDARRAY_INT16) {
+ 					RUN_BINARY_LOOP(NDARRAY_INT16, int16_t, int16_t, int16_t, ol, or, op, m, n, len, linc, rinc);
+ 				} else if(or->array->typecode == NDARRAY_FLOAT) {
+ 					RUN_BINARY_LOOP(NDARRAY_FLOAT, mp_float_t, uint16_t, mp_float_t, ol, or, op, m, n, len, linc, rinc);
+ 				}
+ 			} else if(ol->array->typecode == NDARRAY_FLOAT) {
+ 				if(or->array->typecode == NDARRAY_UINT8) {
+ 					RUN_BINARY_LOOP(NDARRAY_FLOAT, mp_float_t, mp_float_t, uint8_t, ol, or, op, m, n, len, linc, rinc);
+ 				} else if(or->array->typecode == NDARRAY_INT8) {
+ 					RUN_BINARY_LOOP(NDARRAY_FLOAT, mp_float_t, mp_float_t, int8_t, ol, or, op, m, n, len, linc, rinc);
+ 				} else if(or->array->typecode == NDARRAY_UINT16) {
+ 					RUN_BINARY_LOOP(NDARRAY_FLOAT, mp_float_t, mp_float_t, uint16_t, ol, or, op, m, n, len, linc, rinc);
+ 				} else if(or->array->typecode == NDARRAY_INT16) {
+ 					RUN_BINARY_LOOP(NDARRAY_FLOAT, mp_float_t, mp_float_t, int16_t, ol, or, op, m, n, len, linc, rinc);
+ 				} else if(or->array->typecode == NDARRAY_FLOAT) {
+ 					RUN_BINARY_LOOP(NDARRAY_FLOAT, mp_float_t, mp_float_t, mp_float_t, ol, or, op, m, n, len, linc, rinc);
+ 				}
+ 			}
+ 			// this instruction should never be reached, but we have to make the compiler happy
+ 			return MP_OBJ_NULL;
+ 			break;
+ 		default:
+ 			return MP_OBJ_NULL; // op not supported
+ 			break;
+ 	}
+ 	return MP_OBJ_NULL;
+ }
+ 
+ mp_obj_t ndarray_unary_op(mp_unary_op_t op, mp_obj_t self_in) {
+     ndarray_obj_t *self = MP_OBJ_TO_PTR(self_in);
+     ndarray_obj_t *ndarray = NULL;
+     switch (op) {
+         case MP_UNARY_OP_LEN: 
+             if(self->m > 1) {
+                 return mp_obj_new_int(self->m);
+             } else {
+                 return mp_obj_new_int(self->n);
+             }
+             break;
+         
+         case MP_UNARY_OP_INVERT:
+             if(self->array->typecode == NDARRAY_FLOAT) {
+                 mp_raise_ValueError(translate("operation is not supported for given type"));
+             }
+             // we can invert the content byte by byte, there is no need to distinguish 
+             // between different typecodes
+             ndarray = MP_OBJ_TO_PTR(ndarray_copy(self_in));
+             {
+                 uint8_t *array = (uint8_t *)ndarray->array->items;
+                 for(size_t i=0; i < self->bytes; i++) array[i] = ~array[i];
+                 return MP_OBJ_FROM_PTR(ndarray);
+             }
+             break;
+         
+         case MP_UNARY_OP_NEGATIVE:
+             ndarray = MP_OBJ_TO_PTR(ndarray_copy(self_in));
+             if(self->array->typecode == NDARRAY_UINT8) {
+                 uint8_t *array = (uint8_t *)ndarray->array->items;
+                 for(size_t i=0; i < self->array->len; i++) array[i] = -array[i];
+             } else if(self->array->typecode == NDARRAY_INT8) {
+                 int8_t *array = (int8_t *)ndarray->array->items;
+                 for(size_t i=0; i < self->array->len; i++) array[i] = -array[i];
+             } else if(self->array->typecode == NDARRAY_UINT16) {                
+                 uint16_t *array = (uint16_t *)ndarray->array->items;
+                 for(size_t i=0; i < self->array->len; i++) array[i] = -array[i];
+             } else if(self->array->typecode == NDARRAY_INT16) {
+                 int16_t *array = (int16_t *)ndarray->array->items;
+                 for(size_t i=0; i < self->array->len; i++) array[i] = -array[i];
+             } else {
+                 mp_float_t *array = (mp_float_t *)ndarray->array->items;
+                 for(size_t i=0; i < self->array->len; i++) array[i] = -array[i];
+             }
+             return MP_OBJ_FROM_PTR(ndarray);
+             break;
+ 
+         case MP_UNARY_OP_POSITIVE:
+             return ndarray_copy(self_in);
+ 
+         case MP_UNARY_OP_ABS:
+             if((self->array->typecode == NDARRAY_UINT8) || (self->array->typecode == NDARRAY_UINT16)) {
+                 return ndarray_copy(self_in);
+             }
+             ndarray = MP_OBJ_TO_PTR(ndarray_copy(self_in));
+             if(self->array->typecode == NDARRAY_INT8) {
+                 int8_t *array = (int8_t *)ndarray->array->items;
+                 for(size_t i=0; i < self->array->len; i++) {
+                     if(array[i] < 0) array[i] = -array[i];
+                 }
+             } else if(self->array->typecode == NDARRAY_INT16) {
+                 int16_t *array = (int16_t *)ndarray->array->items;
+                 for(size_t i=0; i < self->array->len; i++) {
+                     if(array[i] < 0) array[i] = -array[i];
+                 }
+             } else {
+                 mp_float_t *array = (mp_float_t *)ndarray->array->items;
+                 for(size_t i=0; i < self->array->len; i++) {
+                     if(array[i] < 0) array[i] = -array[i];
+                 }                
+             }
+             return MP_OBJ_FROM_PTR(ndarray);
+             break;
+         default: return MP_OBJ_NULL; // operator not supported
+     }
+ }
+ 
+ mp_obj_t ndarray_transpose(mp_obj_t self_in) {
+     ndarray_obj_t *self = MP_OBJ_TO_PTR(self_in);
+     
+     //  In the old matrix, the coordinate (m, n) is m*self->n + n
+     //  We have to assign this to the coordinate (n, m) in the new 
+     //  matrix, i.e., to n*self->m + m (since the new matrix has self->m columns)
+ 
+ 	ndarray_obj_t *ndarray = create_new_ndarray(self->n,  self->m, self->array->typecode);
+     // one-dimensional arrays can be transposed by simply swapping the dimensions
+     if((self->m == 1) || (self->n == 1)) {
+         memcpy(ndarray->array->items, self->array->items, self->bytes);
+ 	} else {
+ 		// the size of a single item in the array
+ 		uint8_t itemsize = mp_binary_get_size('@', self->array->typecode, NULL);
+         uint8_t *sarray = (uint8_t *)self->array->items;
+         uint8_t *narray = (uint8_t *)ndarray->array->items;
+         for(size_t m=0; m < self->m; m++) {
+             for(size_t n=0; n < self->n; n++) {
+                 memcpy(narray+itemsize*(n*self->m + m), sarray, itemsize);
+                 sarray += itemsize;
+             }
+         }
+     } 
+     return MP_OBJ_FROM_PTR(ndarray);
+ }
+ 
+ MP_DEFINE_CONST_FUN_OBJ_1(ndarray_transpose_obj, ndarray_transpose);
+ 
+ mp_obj_t ndarray_reshape(mp_obj_t self_in, mp_obj_t shape) {
+     ndarray_obj_t *self = MP_OBJ_TO_PTR(self_in);
+     if(!MP_OBJ_IS_TYPE(shape, &mp_type_tuple) || (MP_OBJ_SMALL_INT_VALUE(mp_obj_len_maybe(shape)) != 2)) {
+         mp_raise_ValueError(translate("shape must be a 2-tuple"));
+     }
+ 
+     mp_obj_iter_buf_t iter_buf;
+     mp_obj_t item, iterable = mp_getiter(shape, &iter_buf);
+     uint16_t m, n;
+     item = mp_iternext(iterable);
+     m = mp_obj_get_int(item);
+     item = mp_iternext(iterable);
+     n = mp_obj_get_int(item);
+     if(m*n != self->m*self->n) {
+         // TODO: the proper error message would be "cannot reshape array of size %d into shape (%d, %d)"
+         mp_raise_ValueError(translate("cannot reshape array (incompatible input/output shape)"));
+     }
+     self->m = m;
+     self->n = n;
+     return MP_OBJ_FROM_PTR(self);
+ }
+ 
+ MP_DEFINE_CONST_FUN_OBJ_2(ndarray_reshape_obj, ndarray_reshape);
+ 
+ mp_int_t ndarray_get_buffer(mp_obj_t self_in, mp_buffer_info_t *bufinfo, mp_uint_t flags) {
+     ndarray_obj_t *self = MP_OBJ_TO_PTR(self_in);
+     // buffer_p.get_buffer() returns zero for success, while mp_get_buffer returns true for success
+     return !mp_get_buffer(self->array, bufinfo, flags);
+ }
diff -crNb MicorpythonOriginal1.12/ulab/code/ndarray.h micropython1.12_withUlab/ulab/code/ndarray.h
*** MicorpythonOriginal1.12/ulab/code/ndarray.h	1970-01-01 02:00:00.000000000 +0200
--- micropython1.12_withUlab/ulab/code/ndarray.h	2020-06-19 17:15:18.407567475 +0200
***************
*** 0 ****
--- 1,163 ----
+ 
+ /*
+  * This file is part of the micropython-ulab project, 
+  *
+  * https://github.com/v923z/micropython-ulab
+  *
+  * The MIT License (MIT)
+  *
+  * Copyright (c) 2019-2020 Zoltán Vörös
+ */
+ 
+ #ifndef _NDARRAY_
+ #define _NDARRAY_
+ 
+ #include "py/objarray.h"
+ #include "py/binary.h"
+ #include "py/objstr.h"
+ #include "py/objlist.h"
+ 
+ #define NDARRAY_PRINT_THRESHOLD  	10
+ #define NDARRAY_PRINT_EDGEITEMS		3
+ 
+ #if MICROPY_FLOAT_IMPL == MICROPY_FLOAT_IMPL_FLOAT
+ #define FLOAT_TYPECODE 'f'
+ #elif MICROPY_FLOAT_IMPL == MICROPY_FLOAT_IMPL_DOUBLE
+ #define FLOAT_TYPECODE 'd'
+ #endif
+ 
+ #define OPENMV
+ #ifdef OPENMV
+ #define mp_obj_is_bool(o) (MP_OBJ_IS_TYPE((o), &mp_type_bool))
+ #define translate(x) x
+ 
+ typedef struct _mp_obj_slice_t {
+     mp_obj_base_t base;
+     mp_obj_t start;
+     mp_obj_t stop;
+     mp_obj_t step;
+ } mp_obj_slice_t;
+ 
+ void mp_obj_slice_get(mp_obj_t self_in, mp_obj_t *, mp_obj_t *, mp_obj_t *);
+ #else
+ #if CIRCUITPY
+ #define mp_obj_is_bool(o) (MP_OBJ_IS_TYPE((o), &mp_type_bool))
+ #define mp_obj_is_int(x) (MP_OBJ_IS_INT((x)))
+ #else
+ #define translate(x) MP_ERROR_TEXT(x)
+ #endif
+ #endif
+ 
+ #define SWAP(t, a, b) { t tmp = a; a = b; b = tmp; }
+ 
+ extern const mp_obj_type_t ulab_ndarray_type;
+ 
+ enum NDARRAY_TYPE {
+     NDARRAY_UINT8 = 'B',
+     NDARRAY_INT8 = 'b',
+     NDARRAY_UINT16 = 'H', 
+     NDARRAY_INT16 = 'h',
+     NDARRAY_FLOAT = FLOAT_TYPECODE,
+ };
+ 
+ typedef struct _ndarray_obj_t {
+     mp_obj_base_t base;
+     size_t m, n;
+     size_t len;
+     mp_obj_array_t *array;
+     size_t bytes;
+ } ndarray_obj_t;
+ 
+ mp_obj_t mp_obj_new_ndarray_iterator(mp_obj_t , size_t , mp_obj_iter_buf_t *);
+ 
+ mp_float_t ndarray_get_float_value(void *, uint8_t , size_t );
+ bool ndarray_object_is_nditerable(mp_obj_t );
+ void fill_array_iterable(mp_float_t *, mp_obj_t );
+ 
+ mp_obj_t ndarray_set_printoptions(size_t , const mp_obj_t *, mp_map_t *);
+ MP_DECLARE_CONST_FUN_OBJ_KW(ndarray_set_printoptions_obj);
+ mp_obj_t ndarray_get_printoptions(void);
+ MP_DECLARE_CONST_FUN_OBJ_0(ndarray_get_printoptions_obj);
+ void ndarray_print_row(const mp_print_t *, mp_obj_array_t *, size_t , size_t );
+ void ndarray_print(const mp_print_t *, mp_obj_t , mp_print_kind_t );
+ void ndarray_assign_elements(mp_obj_array_t *, mp_obj_t , uint8_t , size_t *);
+ ndarray_obj_t *create_new_ndarray(size_t , size_t , uint8_t );
+ 
+ mp_obj_t ndarray_copy(mp_obj_t );
+ #ifdef CIRCUITPY
+ mp_obj_t ndarray_make_new(const mp_obj_type_t *type, size_t n_args, const mp_obj_t *args, mp_map_t *kw_args);
+ #else
+ mp_obj_t ndarray_make_new(const mp_obj_type_t *, size_t , size_t , const mp_obj_t *);
+ #endif
+ mp_obj_t ndarray_subscr(mp_obj_t , mp_obj_t , mp_obj_t );
+ mp_obj_t ndarray_getiter(mp_obj_t , mp_obj_iter_buf_t *);
+ mp_obj_t ndarray_binary_op(mp_binary_op_t , mp_obj_t , mp_obj_t );
+ mp_obj_t ndarray_unary_op(mp_unary_op_t , mp_obj_t );
+ 
+ mp_obj_t ndarray_shape(mp_obj_t );
+ mp_obj_t ndarray_size(mp_obj_t );
+ mp_obj_t ndarray_itemsize(mp_obj_t );
+ mp_obj_t ndarray_flatten(size_t , const mp_obj_t *, mp_map_t *);
+ 
+ mp_obj_t ndarray_reshape(mp_obj_t , mp_obj_t );
+ MP_DECLARE_CONST_FUN_OBJ_2(ndarray_reshape_obj);
+ 
+ mp_obj_t ndarray_transpose(mp_obj_t );
+ MP_DECLARE_CONST_FUN_OBJ_1(ndarray_transpose_obj);
+ 
+ mp_int_t ndarray_get_buffer(mp_obj_t obj, mp_buffer_info_t *bufinfo, mp_uint_t flags);
+ //void ndarray_attributes(mp_obj_t , qstr , mp_obj_t *);
+ 
+ ndarray_obj_t *ndarray_from_mp_obj(mp_obj_t );
+ 
+ #define CREATE_SINGLE_ITEM(outarray, type, typecode, value) do {\
+     ndarray_obj_t *tmp = create_new_ndarray(1, 1, (typecode));\
+     type *tmparr = (type *)tmp->array->items;\
+     tmparr[0] = (type)(value);\
+     (outarray) = MP_OBJ_FROM_PTR(tmp);\
+ } while(0)
+ 
+ /*  
+     mp_obj_t row = mp_obj_new_list(n, NULL);
+     mp_obj_list_t *row_ptr = MP_OBJ_TO_PTR(row);
+     
+     should work outside the loop, but it doesn't. Go figure! 
+ */
+ 
+ #define RUN_BINARY_LOOP(typecode, type_out, type_left, type_right, ol, or, op, m, n, len, linc, rinc) do {\
+     type_left *left = (type_left *)(ol)->array->items;\
+     type_right *right = (type_right *)(or)->array->items;\
+     if(((op) == MP_BINARY_OP_ADD) || ((op) == MP_BINARY_OP_SUBTRACT) || ((op) == MP_BINARY_OP_MULTIPLY) || ((op) == MP_BINARY_OP_POWER)) {\
+         ndarray_obj_t *out = create_new_ndarray((m), (n), (typecode));\
+         type_out *(odata) = (type_out *)out->array->items;\
+         if((op) == MP_BINARY_OP_ADD) { for(size_t i=0; i < (len); i++, left+=linc, right+=rinc) *odata++ = *left + *right; }\
+ 		else if((op) == MP_BINARY_OP_MULTIPLY) { for(size_t i=0; i < (len); i++, left+=linc, right+=rinc) *odata++ = *left * *right; }\
+         else if((op) == MP_BINARY_OP_POWER) { for(size_t i=0; i < (len); i++, left+=linc, right+=rinc) *odata++ = (type_out)MICROPY_FLOAT_C_FUN(pow)(*left, *right); }\
+         else if((op) == MP_BINARY_OP_SUBTRACT) { for(size_t i=0; i < (len); i++, left+=linc, right+=rinc) *odata++ = *left - *right; }\
+         return MP_OBJ_FROM_PTR(out);\
+ 	} else if((op) == MP_BINARY_OP_TRUE_DIVIDE) {\
+         ndarray_obj_t *out = create_new_ndarray((m), (n), NDARRAY_FLOAT);\
+         mp_float_t *odata = (mp_float_t *)out->array->items;\
+         for(size_t i=0; i < (len); i++, left+=linc, right+=rinc) {*odata++ = (mp_float_t)(*left)/(mp_float_t)(*right);}\
+         return MP_OBJ_FROM_PTR(out);\
+ 	} else if(((op) == MP_BINARY_OP_LESS) || ((op) == MP_BINARY_OP_LESS_EQUAL) ||  \
+              ((op) == MP_BINARY_OP_MORE) || ((op) == MP_BINARY_OP_MORE_EQUAL) || \
+              ((op) == MP_BINARY_OP_EQUAL) || ((op) == MP_BINARY_OP_NOT_EQUAL)) {\
+         mp_obj_t out_list = mp_obj_new_list(0, NULL);\
+         for(size_t i=0; i < m; i++) {\
+             mp_obj_t row = mp_obj_new_list(n, NULL);\
+             mp_obj_list_t *row_ptr = MP_OBJ_TO_PTR(row);\
+ 			if((op) == MP_BINARY_OP_LESS) { for(size_t j=0; j < n; j++, left+=linc, right+=rinc) row_ptr->items[j] = *left < *right ? mp_const_true : mp_const_false; }\
+ 			else if((op) == MP_BINARY_OP_LESS_EQUAL) { for(size_t j=0; j < n; j++, left+=linc, right+=rinc) row_ptr->items[j] = *left <= *right ? mp_const_true : mp_const_false; }\
+ 			else if((op) == MP_BINARY_OP_MORE) { for(size_t j=0; j < n; j++, left+=linc, right+=rinc) row_ptr->items[j] = *left > *right ? mp_const_true : mp_const_false; }\
+ 			else if((op) == MP_BINARY_OP_MORE_EQUAL) { for(size_t j=0; j < n; j++, left+=linc, right+=rinc) row_ptr->items[j] = *left >= *right ? mp_const_true : mp_const_false; }\
+ 			else if((op) == MP_BINARY_OP_EQUAL) { for(size_t j=0; j < n; j++, left+=linc, right+=rinc) row_ptr->items[j] = *left == *right ? mp_const_true : mp_const_false; }\
+ 			else if((op) == MP_BINARY_OP_NOT_EQUAL) { for(size_t j=0; j < n; j++, left+=linc, right+=rinc) row_ptr->items[j] = *left != *right ? mp_const_true : mp_const_false; }\
+             if(m == 1) return row;\
+             mp_obj_list_append(out_list, row);\
+ 		}\
+         return out_list;\
+     }\
+ } while(0)
+ 
+ #endif
diff -crNb MicorpythonOriginal1.12/ulab/code/ndarray_properties.h micropython1.12_withUlab/ulab/code/ndarray_properties.h
*** MicorpythonOriginal1.12/ulab/code/ndarray_properties.h	1970-01-01 02:00:00.000000000 +0200
--- micropython1.12_withUlab/ulab/code/ndarray_properties.h	2020-06-18 18:25:25.710905000 +0200
***************
*** 0 ****
--- 1,61 ----
+ 
+ /*
+  * This file is part of the micropython-ulab project, 
+  *
+  * https://github.com/v923z/micropython-ulab
+  *
+  * The MIT License (MIT)
+  *
+  * Copyright (c) 2020 Jeff Epler for Adafruit Industries
+  *               2020 Zoltán Vörös   
+ */
+ 
+ #ifndef _NDARRAY_PROPERTIES_
+ #define _NDARRAY_PROPERTIES_
+ 
+ #include "py/runtime.h"
+ #include "py/binary.h"
+ #include "py/obj.h"
+ #include "py/objarray.h"
+ 
+ #include "ndarray.h"
+ 
+ #if CIRCUITPY
+ typedef struct _mp_obj_property_t {
+     mp_obj_base_t base;
+     mp_obj_t proxy[3]; // getter, setter, deleter
+ } mp_obj_property_t;
+ 
+ MP_DEFINE_CONST_FUN_OBJ_1(ndarray_get_shape_obj, ndarray_shape);
+ MP_DEFINE_CONST_FUN_OBJ_1(ndarray_get_size_obj, ndarray_size);
+ MP_DEFINE_CONST_FUN_OBJ_1(ndarray_get_itemsize_obj, ndarray_itemsize);
+ 
+ STATIC const mp_obj_property_t ndarray_shape_obj = {
+     .base.type = &mp_type_property,
+     .proxy = {(mp_obj_t)&ndarray_get_shape_obj,
+               mp_const_none,
+               mp_const_none },
+ };
+ 
+ STATIC const mp_obj_property_t ndarray_size_obj = {
+     .base.type = &mp_type_property,
+     .proxy = {(mp_obj_t)&ndarray_get_size_obj,
+               mp_const_none,
+               mp_const_none },
+ };
+ 
+ STATIC const mp_obj_property_t ndarray_itemsize_obj = {
+     .base.type = &mp_type_property,
+     .proxy = {(mp_obj_t)&ndarray_get_itemsize_obj,
+               mp_const_none,
+               mp_const_none },
+ };
+ #else
+ 
+ MP_DEFINE_CONST_FUN_OBJ_1(ndarray_size_obj, ndarray_size);
+ MP_DEFINE_CONST_FUN_OBJ_1(ndarray_itemsize_obj, ndarray_itemsize);
+ MP_DEFINE_CONST_FUN_OBJ_1(ndarray_shape_obj, ndarray_shape);
+ 
+ #endif
+ 
+ #endif
diff -crNb MicorpythonOriginal1.12/ulab/code/numerical.c micropython1.12_withUlab/ulab/code/numerical.c
*** MicorpythonOriginal1.12/ulab/code/numerical.c	1970-01-01 02:00:00.000000000 +0200
--- micropython1.12_withUlab/ulab/code/numerical.c	2020-06-18 18:25:25.710905000 +0200
***************
*** 0 ****
--- 1,731 ----
+ 
+ /*
+  * This file is part of the micropython-ulab project, 
+  *
+  * https://github.com/v923z/micropython-ulab
+  *
+  * The MIT License (MIT)
+  *
+  * Copyright (c) 2019-2020 Zoltán Vörös
+ */
+ 
+ #include <math.h>
+ #include <stdlib.h>
+ #include <string.h>
+ #include "py/obj.h"
+ #include "py/objint.h"
+ #include "py/runtime.h"
+ #include "py/builtin.h"
+ #include "py/misc.h"
+ #include "numerical.h"
+ 
+ #if ULAB_NUMERICAL_MODULE
+ 
+ enum NUMERICAL_FUNCTION_TYPE {
+     NUMERICAL_MIN,
+     NUMERICAL_MAX,
+     NUMERICAL_ARGMIN,
+     NUMERICAL_ARGMAX,
+     NUMERICAL_SUM,
+     NUMERICAL_MEAN,
+     NUMERICAL_STD,
+ };
+ 
+ static void axis_sorter(ndarray_obj_t *ndarray, mp_obj_t axis, size_t *m, size_t *n, size_t *N, 
+                  size_t *increment, size_t *len, size_t *start_inc) {
+     if(axis == mp_const_none) { // flatten the array
+         *m = 1;
+         *n = 1;
+         *len = ndarray->array->len;
+         *N = 1;
+         *increment = 1;
+         *start_inc = ndarray->array->len;
+     } else if((mp_obj_get_int(axis) == 1)) { // along the horizontal axis
+         *m = ndarray->m;
+         *n = 1;
+         *len = ndarray->n;
+         *N = ndarray->m;
+         *increment = 1;
+         *start_inc = ndarray->n;
+     } else { // along vertical axis
+         *m = 1;
+         *n = ndarray->n;
+         *len = ndarray->m;
+         *N = ndarray->n;
+         *increment = ndarray->n;
+         *start_inc = 1;
+     }    
+ }
+ 
+ static mp_obj_t numerical_sum_mean_std_iterable(mp_obj_t oin, uint8_t optype, size_t ddof) {
+     mp_float_t value, sum = 0.0, sq_sum = 0.0;
+     mp_obj_iter_buf_t iter_buf;
+     mp_obj_t item, iterable = mp_getiter(oin, &iter_buf);
+     mp_int_t len = mp_obj_get_int(mp_obj_len(oin));
+     while ((item = mp_iternext(iterable)) != MP_OBJ_STOP_ITERATION) {
+         value = mp_obj_get_float(item);
+         sum += value;
+     }
+     if(optype ==  NUMERICAL_SUM) {
+         return mp_obj_new_float(sum);
+     } else if(optype == NUMERICAL_MEAN) {
+         return mp_obj_new_float(sum/len);
+     } else { // this should be the case of the standard deviation
+         // TODO: note that we could get away with a single pass, if we used the Weldorf algorithm
+         // That should save a fair amount of time, because we would have to extract the values only once
+         iterable = mp_getiter(oin, &iter_buf);
+         sum /= len; // this is now the mean!
+         while ((item = mp_iternext(iterable)) != MP_OBJ_STOP_ITERATION) {
+             value = mp_obj_get_float(item) - sum;
+             sq_sum += value * value;
+         }
+         return mp_obj_new_float(MICROPY_FLOAT_C_FUN(sqrt)(sq_sum/(len-ddof)));
+     }
+ }
+ 
+ STATIC mp_obj_t numerical_sum_mean_ndarray(ndarray_obj_t *ndarray, mp_obj_t axis, uint8_t optype) {
+     size_t m, n, increment, start, start_inc, N, len; 
+     axis_sorter(ndarray, axis, &m, &n, &N, &increment, &len, &start_inc);
+     ndarray_obj_t *results = create_new_ndarray(m, n, NDARRAY_FLOAT);
+     mp_float_t sum, sq_sum;
+     mp_float_t *farray = (mp_float_t *)results->array->items;
+     for(size_t j=0; j < N; j++) { // result index
+         start = j * start_inc;
+         sum = sq_sum = 0.0;
+         if(ndarray->array->typecode == NDARRAY_UINT8) {
+             RUN_SUM(ndarray, uint8_t, optype, len, start, increment);
+         } else if(ndarray->array->typecode == NDARRAY_INT8) {
+             RUN_SUM(ndarray, int8_t, optype, len, start, increment);
+         } else if(ndarray->array->typecode == NDARRAY_UINT16) {
+             RUN_SUM(ndarray, uint16_t, optype, len, start, increment);
+         } else if(ndarray->array->typecode == NDARRAY_INT16) {
+             RUN_SUM(ndarray, int16_t, optype, len, start, increment);
+         } else { // this will be mp_float_t, no need to check
+             RUN_SUM(ndarray, mp_float_t, optype, len, start, increment);
+         }
+         if(optype == NUMERICAL_SUM) {
+             farray[j] = sum;
+         } else { // this is the case of the mean
+             farray[j] = sum / len;
+         }
+     }
+     if(results->array->len == 1) {
+         return mp_obj_new_float(farray[0]);
+     }
+     return MP_OBJ_FROM_PTR(results);
+ }
+ 
+ static mp_obj_t numerical_std_ndarray(ndarray_obj_t *ndarray, mp_obj_t axis, size_t ddof) {
+     size_t m, n, increment, start, start_inc, N, len; 
+     mp_float_t sum, sum_sq;
+     
+     axis_sorter(ndarray, axis, &m, &n, &N, &increment, &len, &start_inc);
+     if(ddof > len) {
+         mp_raise_ValueError(translate("ddof must be smaller than length of data set"));
+     }
+     ndarray_obj_t *results = create_new_ndarray(m, n, NDARRAY_FLOAT);
+     mp_float_t *farray = (mp_float_t *)results->array->items;
+     for(size_t j=0; j < N; j++) { // result index
+         start = j * start_inc;
+         sum = 0.0;
+         sum_sq = 0.0;
+         if(ndarray->array->typecode == NDARRAY_UINT8) {
+             RUN_STD(ndarray, uint8_t, len, start, increment);
+         } else if(ndarray->array->typecode == NDARRAY_INT8) {
+             RUN_STD(ndarray, int8_t, len, start, increment);
+         } else if(ndarray->array->typecode == NDARRAY_UINT16) {
+             RUN_STD(ndarray, uint16_t, len, start, increment);
+         } else if(ndarray->array->typecode == NDARRAY_INT16) {
+             RUN_STD(ndarray, int16_t, len, start, increment);
+         } else { // this will be mp_float_t, no need to check
+             RUN_STD(ndarray, mp_float_t, len, start, increment);
+         }
+         farray[j] = MICROPY_FLOAT_C_FUN(sqrt)(sum_sq/(len - ddof));
+     }
+     if(results->array->len == 1) {
+         return mp_obj_new_float(farray[0]);
+     }
+     return MP_OBJ_FROM_PTR(results);
+ }
+ 
+ static mp_obj_t numerical_argmin_argmax_iterable(mp_obj_t oin, uint8_t optype) {
+ 	if(MP_OBJ_SMALL_INT_VALUE(mp_obj_len_maybe(oin)) == 0) {
+ 		mp_raise_ValueError(translate("attempt to get argmin/argmax of an empty sequence"));
+ 	}
+     size_t idx = 0, best_idx = 0;
+     mp_obj_iter_buf_t iter_buf;
+     mp_obj_t iterable = mp_getiter(oin, &iter_buf);
+     mp_obj_t item;
+     uint8_t op = 0; // argmin, min
+     if((optype == NUMERICAL_ARGMAX) || (optype == NUMERICAL_MAX)) op = 1;
+     item = mp_iternext(iterable);
+ 	mp_obj_t best_obj = item;
+     mp_float_t value, best_value = mp_obj_get_float(item);
+     value = best_value;
+     while((item = mp_iternext(iterable)) != MP_OBJ_STOP_ITERATION) {
+ 		idx++;
+ 		value = mp_obj_get_float(item);
+ 		if((op == 0) && (value < best_value)) {
+ 			best_obj = item;
+ 			best_idx = idx;
+ 			best_value = value;
+ 		} else if((op == 1) && (value > best_value)) {
+ 			best_obj = item;
+ 			best_idx = idx;
+ 			best_value = value;
+ 		}
+     }
+     if((optype == NUMERICAL_ARGMIN) || (optype == NUMERICAL_ARGMAX)) {
+         return MP_OBJ_NEW_SMALL_INT(best_idx);
+     } else {
+         return best_obj;
+     }    
+ }
+ 
+ static mp_obj_t numerical_argmin_argmax_ndarray(ndarray_obj_t *ndarray, mp_obj_t axis, uint8_t optype) {
+     size_t m, n, increment, start, start_inc, N, len;
+     axis_sorter(ndarray, axis, &m, &n, &N, &increment, &len, &start_inc);
+     ndarray_obj_t *results;
+     if((optype == NUMERICAL_ARGMIN) || (optype == NUMERICAL_ARGMAX)) {
+         // we could save some RAM by taking NDARRAY_UINT8, if the dimensions 
+         // are smaller than 256, but the code would become more involving 
+         // (we would also need extra flash space)
+         if(ndarray->array->len == 0) {
+ 			mp_raise_ValueError(translate("attempt to get argmin/argmax of an empty sequence"));
+ 		}
+         results = create_new_ndarray(m, n, NDARRAY_UINT16);
+     } else {
+         results = create_new_ndarray(m, n, ndarray->array->typecode);
+     }
+     
+     for(size_t j=0; j < N; j++) { // result index
+         start = j * start_inc;
+         if((optype == NUMERICAL_MAX) || (optype == NUMERICAL_MIN)) {
+             if((ndarray->array->typecode == NDARRAY_UINT8)) {
+                 RUN_ARGMIN(ndarray, results, uint8_t, uint8_t, len, start, increment, optype, j);
+             } else if((ndarray->array->typecode == NDARRAY_INT8)) {
+                 RUN_ARGMIN(ndarray, results, int8_t, int8_t, len, start, increment, optype, j);
+             } if((ndarray->array->typecode == NDARRAY_UINT16)) {
+                 RUN_ARGMIN(ndarray, results, uint16_t, uint16_t, len, start, increment, optype, j);
+             } else if((ndarray->array->typecode == NDARRAY_INT16)) {
+                 RUN_ARGMIN(ndarray, results, int16_t, int16_t, len, start, increment, optype, j);
+             } else {
+                 RUN_ARGMIN(ndarray, results, mp_float_t, mp_float_t, len, start, increment, optype, j);
+             }
+         } else {
+             if((ndarray->array->typecode == NDARRAY_UINT8)) {
+                 RUN_ARGMIN(ndarray, results, uint8_t, uint16_t, len, start, increment, optype, j);
+             } else if((ndarray->array->typecode == NDARRAY_INT8)) {
+                 RUN_ARGMIN(ndarray, results, int8_t, uint16_t, len, start, increment, optype, j);
+             } if((ndarray->array->typecode == NDARRAY_UINT16)) {
+                 RUN_ARGMIN(ndarray, results, uint16_t, uint16_t, len, start, increment, optype, j);
+             } else if((ndarray->array->typecode == NDARRAY_INT16)) {
+                 RUN_ARGMIN(ndarray, results, int16_t, uint16_t, len, start, increment, optype, j);
+             } else {
+                 RUN_ARGMIN(ndarray, results, mp_float_t, uint16_t, len, start, increment, optype, j);
+             }
+         }
+     }
+ 	if(results->array->len == 1) {
+ 		return mp_binary_get_val_array(results->array->typecode, results->array->items, 0);
+ 	}
+     return MP_OBJ_FROM_PTR(results);
+ }
+ 
+ STATIC mp_obj_t numerical_function(size_t n_args, const mp_obj_t *pos_args, mp_map_t *kw_args, uint8_t optype) {
+     static const mp_arg_t allowed_args[] = {
+         { MP_QSTR_, MP_ARG_REQUIRED | MP_ARG_OBJ, {.u_rom_obj = mp_const_none} } ,
+         { MP_QSTR_axis, MP_ARG_OBJ, {.u_rom_obj = mp_const_none } },
+     };
+ 
+     mp_arg_val_t args[MP_ARRAY_SIZE(allowed_args)];
+     mp_arg_parse_all(n_args, pos_args, kw_args, MP_ARRAY_SIZE(allowed_args), allowed_args, args);
+     
+     mp_obj_t oin = args[0].u_obj;
+     mp_obj_t axis = args[1].u_obj;
+     if((axis != mp_const_none) && (mp_obj_get_int(axis) != 0) && (mp_obj_get_int(axis) != 1)) {
+         // this seems to pass with False, and True...
+         mp_raise_ValueError(translate("axis must be None, 0, or 1"));
+     }
+     
+     if(MP_OBJ_IS_TYPE(oin, &mp_type_tuple) || MP_OBJ_IS_TYPE(oin, &mp_type_list) || 
+         MP_OBJ_IS_TYPE(oin, &mp_type_range)) {
+         switch(optype) {
+             case NUMERICAL_MIN:
+             case NUMERICAL_ARGMIN:
+             case NUMERICAL_MAX:
+             case NUMERICAL_ARGMAX:
+                 return numerical_argmin_argmax_iterable(oin, optype);
+             case NUMERICAL_SUM:
+             case NUMERICAL_MEAN:
+                 return numerical_sum_mean_std_iterable(oin, optype, 0);
+             default: // we should never reach this point, but whatever
+                 return mp_const_none;
+         }
+     } else if(MP_OBJ_IS_TYPE(oin, &ulab_ndarray_type)) {
+         ndarray_obj_t *ndarray = MP_OBJ_TO_PTR(oin);
+         switch(optype) {
+             case NUMERICAL_MIN:
+             case NUMERICAL_MAX:
+             case NUMERICAL_ARGMIN:
+             case NUMERICAL_ARGMAX:
+                 return numerical_argmin_argmax_ndarray(ndarray, axis, optype);
+             case NUMERICAL_SUM:
+             case NUMERICAL_MEAN:
+                 return numerical_sum_mean_ndarray(ndarray, axis, optype);
+             default:
+                 mp_raise_NotImplementedError(translate("operation is not implemented on ndarrays"));
+         }
+     } else {
+         mp_raise_TypeError(translate("input must be tuple, list, range, or ndarray"));
+     }
+     return mp_const_none;
+ }
+ 
+ static mp_obj_t numerical_min(size_t n_args, const mp_obj_t *pos_args, mp_map_t *kw_args) {
+     return numerical_function(n_args, pos_args, kw_args, NUMERICAL_MIN);
+ }
+ 
+ MP_DEFINE_CONST_FUN_OBJ_KW(numerical_min_obj, 1, numerical_min);
+ 
+ static mp_obj_t numerical_max(size_t n_args, const mp_obj_t *pos_args, mp_map_t *kw_args) {
+     return numerical_function(n_args, pos_args, kw_args, NUMERICAL_MAX);
+ }
+ 
+ MP_DEFINE_CONST_FUN_OBJ_KW(numerical_max_obj, 1, numerical_max);
+ 
+ static mp_obj_t numerical_argmin(size_t n_args, const mp_obj_t *pos_args, mp_map_t *kw_args) {
+     return numerical_function(n_args, pos_args, kw_args, NUMERICAL_ARGMIN);
+ }
+ 
+ MP_DEFINE_CONST_FUN_OBJ_KW(numerical_argmin_obj, 1, numerical_argmin);
+ 
+ static mp_obj_t numerical_argmax(size_t n_args, const mp_obj_t *pos_args, mp_map_t *kw_args) {
+     return numerical_function(n_args, pos_args, kw_args, NUMERICAL_ARGMAX);
+ }
+ 
+ MP_DEFINE_CONST_FUN_OBJ_KW(numerical_argmax_obj, 1, numerical_argmax);
+ 
+ static mp_obj_t numerical_sum(size_t n_args, const mp_obj_t *pos_args, mp_map_t *kw_args) {
+     return numerical_function(n_args, pos_args, kw_args, NUMERICAL_SUM);
+ }
+ 
+ MP_DEFINE_CONST_FUN_OBJ_KW(numerical_sum_obj, 1, numerical_sum);
+ 
+ static mp_obj_t numerical_mean(size_t n_args, const mp_obj_t *pos_args, mp_map_t *kw_args) {
+     return numerical_function(n_args, pos_args, kw_args, NUMERICAL_MEAN);
+ }
+ 
+ MP_DEFINE_CONST_FUN_OBJ_KW(numerical_mean_obj, 1, numerical_mean);
+ 
+ static mp_obj_t numerical_std(size_t n_args, const mp_obj_t *pos_args, mp_map_t *kw_args) {
+     static const mp_arg_t allowed_args[] = {
+         { MP_QSTR_, MP_ARG_REQUIRED | MP_ARG_OBJ, {.u_rom_obj = mp_const_none } } ,
+         { MP_QSTR_axis, MP_ARG_OBJ, {.u_rom_obj = mp_const_none } },
+         { MP_QSTR_ddof, MP_ARG_KW_ONLY | MP_ARG_INT, {.u_int = 0} },
+     };
+ 
+     mp_arg_val_t args[MP_ARRAY_SIZE(allowed_args)];
+     mp_arg_parse_all(n_args, pos_args, kw_args, MP_ARRAY_SIZE(allowed_args), allowed_args, args);
+     
+     mp_obj_t oin = args[0].u_obj;
+     mp_obj_t axis = args[1].u_obj;
+     size_t ddof = args[2].u_int;
+     if((axis != mp_const_none) && (mp_obj_get_int(axis) != 0) && (mp_obj_get_int(axis) != 1)) {
+         // this seems to pass with False, and True...
+         mp_raise_ValueError(translate("axis must be None, 0, or 1"));
+     }
+     if(MP_OBJ_IS_TYPE(oin, &mp_type_tuple) || MP_OBJ_IS_TYPE(oin, &mp_type_list) || MP_OBJ_IS_TYPE(oin, &mp_type_range)) {
+         return numerical_sum_mean_std_iterable(oin, NUMERICAL_STD, ddof);
+     } else if(MP_OBJ_IS_TYPE(oin, &ulab_ndarray_type)) {
+         ndarray_obj_t *ndarray = MP_OBJ_TO_PTR(oin);
+         return numerical_std_ndarray(ndarray, axis, ddof);
+     } else {
+         mp_raise_TypeError(translate("input must be tuple, list, range, or ndarray"));
+     }
+     return mp_const_none;
+ }
+ 
+ MP_DEFINE_CONST_FUN_OBJ_KW(numerical_std_obj, 1, numerical_std);
+ 
+ static mp_obj_t numerical_roll(size_t n_args, const mp_obj_t *pos_args, mp_map_t *kw_args) {
+     static const mp_arg_t allowed_args[] = {
+         { MP_QSTR_, MP_ARG_REQUIRED | MP_ARG_OBJ, {.u_rom_obj = mp_const_none  } },
+         { MP_QSTR_, MP_ARG_REQUIRED | MP_ARG_OBJ, {.u_rom_obj = mp_const_none } },
+         { MP_QSTR_axis, MP_ARG_KW_ONLY | MP_ARG_OBJ, {.u_rom_obj = mp_const_none } },
+     };
+ 
+     mp_arg_val_t args[MP_ARRAY_SIZE(allowed_args)];
+     mp_arg_parse_all(n_args, pos_args, kw_args, MP_ARRAY_SIZE(allowed_args), allowed_args, args);
+     
+     mp_obj_t oin = args[0].u_obj;
+     int16_t shift = mp_obj_get_int(args[1].u_obj);
+     if((args[2].u_obj != mp_const_none) && 
+            (mp_obj_get_int(args[2].u_obj) != 0) && 
+            (mp_obj_get_int(args[2].u_obj) != 1)) {
+         mp_raise_ValueError(translate("axis must be None, 0, or 1"));
+     }
+ 
+     ndarray_obj_t *in = MP_OBJ_TO_PTR(oin);
+     uint8_t _sizeof = mp_binary_get_size('@', in->array->typecode, NULL);
+     size_t len;
+     int16_t _shift;
+     uint8_t *array = (uint8_t *)in->array->items;
+     // TODO: transpose the matrix, if axis == 0. Though, that is hard on the RAM...
+     if(shift < 0) {
+         _shift = -shift;
+     } else {
+         _shift = shift;
+     }
+     if((args[2].u_obj == mp_const_none) || (mp_obj_get_int(args[2].u_obj) == 1)) { // shift horizontally
+         uint16_t M;
+         if(args[2].u_obj == mp_const_none) {
+             len = in->array->len;
+             M = 1;
+         } else {
+             len = in->n;
+             M = in->m;
+         }
+         _shift = _shift % len;
+         if(shift < 0) _shift = len - _shift;
+         // TODO: if(shift > len/2), we should move in the opposite direction. That would save RAM
+         _shift *= _sizeof;
+         uint8_t *tmp = m_new(uint8_t, _shift);
+         for(size_t m=0; m < M; m++) {
+             memmove(tmp, &array[m*len*_sizeof], _shift);
+             memmove(&array[m*len*_sizeof], &array[m*len*_sizeof+_shift], len*_sizeof-_shift);
+             memmove(&array[(m+1)*len*_sizeof-_shift], tmp, _shift);
+         }
+         m_del(uint8_t, tmp, _shift);
+         return mp_const_none;
+     } else {
+         len = in->m;
+         // temporary buffer
+         uint8_t *_data = m_new(uint8_t, _sizeof*len);
+         
+         _shift = _shift % len;
+         if(shift < 0) _shift = len - _shift;
+         _shift *= _sizeof;
+         uint8_t *tmp = m_new(uint8_t, _shift);
+ 
+         for(size_t n=0; n < in->n; n++) {
+             for(size_t m=0; m < len; m++) {
+                 // this loop should fill up the temporary buffer
+                 memmove(&_data[m*_sizeof], &array[(m*in->n+n)*_sizeof], _sizeof);
+             }
+             // now, the actual shift
+             memmove(tmp, _data, _shift);
+             memmove(_data, &_data[_shift], len*_sizeof-_shift);
+             memmove(&_data[len*_sizeof-_shift], tmp, _shift);
+             for(size_t m=0; m < len; m++) {
+                 // this loop should dump the content of the temporary buffer into data
+                 memmove(&array[(m*in->n+n)*_sizeof], &_data[m*_sizeof], _sizeof);
+             }            
+         }
+         m_del(uint8_t, tmp, _shift);
+         m_del(uint8_t, _data, _sizeof*len);
+         return mp_const_none;
+     }
+ }
+ 
+ MP_DEFINE_CONST_FUN_OBJ_KW(numerical_roll_obj, 2, numerical_roll);
+ 
+ static mp_obj_t numerical_flip(size_t n_args, const mp_obj_t *pos_args, mp_map_t *kw_args) {
+     static const mp_arg_t allowed_args[] = {
+         { MP_QSTR_, MP_ARG_REQUIRED | MP_ARG_OBJ, {.u_rom_obj = mp_const_none } },
+         { MP_QSTR_axis, MP_ARG_KW_ONLY | MP_ARG_OBJ, {.u_rom_obj = mp_const_none } },
+     };
+ 
+     mp_arg_val_t args[MP_ARRAY_SIZE(allowed_args)];
+     mp_arg_parse_all(n_args, pos_args, kw_args, MP_ARRAY_SIZE(allowed_args), allowed_args, args);
+     
+     if(!MP_OBJ_IS_TYPE(args[0].u_obj, &ulab_ndarray_type)) {
+         mp_raise_TypeError(translate("flip argument must be an ndarray"));
+     }
+     if((args[1].u_obj != mp_const_none) && 
+            (mp_obj_get_int(args[1].u_obj) != 0) && 
+            (mp_obj_get_int(args[1].u_obj) != 1)) {
+         mp_raise_ValueError(translate("axis must be None, 0, or 1"));
+     }
+ 
+     ndarray_obj_t *in = MP_OBJ_TO_PTR(args[0].u_obj);
+     mp_obj_t oout = ndarray_copy(args[0].u_obj);
+     ndarray_obj_t *out = MP_OBJ_TO_PTR(oout);
+     uint8_t _sizeof = mp_binary_get_size('@', in->array->typecode, NULL);
+     uint8_t *array_in = (uint8_t *)in->array->items;
+     uint8_t *array_out = (uint8_t *)out->array->items;    
+     size_t len;
+     if((args[1].u_obj == mp_const_none) || (mp_obj_get_int(args[1].u_obj) == 1)) { // flip horizontally
+         uint16_t M = in->m;
+         len = in->n;
+         if(args[1].u_obj == mp_const_none) { // flip flattened array
+             len = in->array->len;
+             M = 1;
+         }
+         for(size_t m=0; m < M; m++) {
+             for(size_t n=0; n < len; n++) {
+                 memcpy(array_out+_sizeof*(m*len+n), array_in+_sizeof*((m+1)*len-n-1), _sizeof);
+             }
+         }
+     } else { // flip vertically
+         for(size_t m=0; m < in->m; m++) {
+             for(size_t n=0; n < in->n; n++) {
+                 memcpy(array_out+_sizeof*(m*in->n+n), array_in+_sizeof*((in->m-m-1)*in->n+n), _sizeof);
+             }
+         }
+     }
+     return out;
+ }
+ 
+ MP_DEFINE_CONST_FUN_OBJ_KW(numerical_flip_obj, 1, numerical_flip);
+ 
+ static mp_obj_t numerical_diff(size_t n_args, const mp_obj_t *pos_args, mp_map_t *kw_args) {
+     static const mp_arg_t allowed_args[] = {
+         { MP_QSTR_, MP_ARG_REQUIRED | MP_ARG_OBJ, {.u_rom_obj = mp_const_none } },
+         { MP_QSTR_n, MP_ARG_KW_ONLY | MP_ARG_INT, {.u_int = 1 } },
+         { MP_QSTR_axis, MP_ARG_KW_ONLY | MP_ARG_INT, {.u_int = -1 } },
+     };
+ 
+     mp_arg_val_t args[MP_ARRAY_SIZE(allowed_args)];
+     mp_arg_parse_all(n_args, pos_args, kw_args, MP_ARRAY_SIZE(allowed_args), allowed_args, args);
+     
+     if(!MP_OBJ_IS_TYPE(args[0].u_obj, &ulab_ndarray_type)) {
+         mp_raise_TypeError(translate("diff argument must be an ndarray"));
+     }
+     
+     ndarray_obj_t *in = MP_OBJ_TO_PTR(args[0].u_obj);
+     size_t increment, N, M;
+     if((args[2].u_int == -1) || (args[2].u_int == 1)) { // differentiate along the horizontal axis
+         increment = 1;
+     } else if(args[2].u_int == 0) { // differtiate along vertical axis
+         increment = in->n;
+     } else {
+         mp_raise_ValueError(translate("axis must be -1, 0, or 1"));
+     }
+     if((args[1].u_int < 0) || (args[1].u_int > 9)) {
+         mp_raise_ValueError(translate("n must be between 0, and 9"));
+     }
+     uint8_t n = args[1].u_int;
+     int8_t *stencil = m_new(int8_t, n+1);
+     stencil[0] = 1;
+     for(uint8_t i=1; i < n+1; i++) {
+         stencil[i] = -stencil[i-1]*(n-i+1)/i;
+     }
+ 
+     ndarray_obj_t *out;
+     
+     if(increment == 1) { // differentiate along the horizontal axis 
+         if(n >= in->n) {
+             out = create_new_ndarray(in->m, 0, in->array->typecode);
+             m_del(uint8_t, stencil, n);
+             return MP_OBJ_FROM_PTR(out);
+         }
+         N = in->n - n;
+         M = in->m;
+     } else { // differentiate along vertical axis
+         if(n >= in->m) {
+             out = create_new_ndarray(0, in->n, in->array->typecode);
+             m_del(uint8_t, stencil, n);
+             return MP_OBJ_FROM_PTR(out);
+         }
+         M = in->m - n;
+         N = in->n;
+     }
+     out = create_new_ndarray(M, N, in->array->typecode);
+     if(in->array->typecode == NDARRAY_UINT8) {
+         CALCULATE_DIFF(in, out, uint8_t, M, N, in->n, increment);
+     } else if(in->array->typecode == NDARRAY_INT8) {
+         CALCULATE_DIFF(in, out, int8_t, M, N, in->n, increment);
+     }  else if(in->array->typecode == NDARRAY_UINT16) {
+         CALCULATE_DIFF(in, out, uint16_t, M, N, in->n, increment);
+     } else if(in->array->typecode == NDARRAY_INT16) {
+         CALCULATE_DIFF(in, out, int16_t, M, N, in->n, increment);
+     } else {
+         CALCULATE_DIFF(in, out, mp_float_t, M, N, in->n, increment);
+     }
+     m_del(int8_t, stencil, n);
+     return MP_OBJ_FROM_PTR(out);
+ }
+ 
+ MP_DEFINE_CONST_FUN_OBJ_KW(numerical_diff_obj, 1, numerical_diff);
+ 
+ static mp_obj_t numerical_sort_helper(mp_obj_t oin, mp_obj_t axis, uint8_t inplace) {
+     if(!MP_OBJ_IS_TYPE(oin, &ulab_ndarray_type)) {
+         mp_raise_TypeError(translate("sort argument must be an ndarray"));
+     }
+ 
+     ndarray_obj_t *ndarray;
+     mp_obj_t out;
+     if(inplace == 1) {
+         ndarray = MP_OBJ_TO_PTR(oin);
+     } else {
+         out = ndarray_copy(oin);
+         ndarray = MP_OBJ_TO_PTR(out);
+     }
+     size_t increment, start_inc, end, N;
+     if(axis == mp_const_none) { // flatten the array
+         ndarray->m = 1;
+         ndarray->n = ndarray->array->len;
+         increment = 1;
+         start_inc = ndarray->n;
+         end = ndarray->n;
+         N = ndarray->n;
+     } else if((mp_obj_get_int(axis) == -1) || 
+               (mp_obj_get_int(axis) == 1)) { // sort along the horizontal axis
+         increment = 1;
+         start_inc = ndarray->n;
+         end = ndarray->array->len;
+         N = ndarray->n;
+     } else if(mp_obj_get_int(axis) == 0) { // sort along vertical axis
+         increment = ndarray->n;
+         start_inc = 1;
+         end = ndarray->n;
+         N = ndarray->m;
+     } else {
+         mp_raise_ValueError(translate("axis must be -1, 0, None, or 1"));
+     }
+     
+     size_t q, k, p, c;
+ 
+     for(size_t start=0; start < end; start+=start_inc) {
+         q = N;
+         k = (q >> 1);
+         if((ndarray->array->typecode == NDARRAY_UINT8) || (ndarray->array->typecode == NDARRAY_INT8)) {
+             HEAPSORT(uint8_t, ndarray);
+         } else if((ndarray->array->typecode == NDARRAY_INT16) || (ndarray->array->typecode == NDARRAY_INT16)) {
+             HEAPSORT(uint16_t, ndarray);
+         } else {
+             HEAPSORT(mp_float_t, ndarray);
+         }
+     }
+     if(inplace == 1) {
+         return mp_const_none;
+     } else {
+         return out;
+     }
+ }
+ 
+ // numpy function
+ static mp_obj_t numerical_sort(size_t n_args, const mp_obj_t *pos_args, mp_map_t *kw_args) {
+     static const mp_arg_t allowed_args[] = {
+         { MP_QSTR_, MP_ARG_REQUIRED | MP_ARG_OBJ, {.u_rom_obj = mp_const_none } },
+         { MP_QSTR_axis, MP_ARG_KW_ONLY | MP_ARG_OBJ, {.u_int = -1 } },
+     };
+ 
+     mp_arg_val_t args[MP_ARRAY_SIZE(allowed_args)];
+     mp_arg_parse_all(n_args, pos_args, kw_args, MP_ARRAY_SIZE(allowed_args), allowed_args, args);
+ 
+     return numerical_sort_helper(args[0].u_obj, args[1].u_obj, 0);
+ }
+ 
+ MP_DEFINE_CONST_FUN_OBJ_KW(numerical_sort_obj, 1, numerical_sort);
+ 
+ // method of an ndarray
+ static mp_obj_t numerical_sort_inplace(size_t n_args, const mp_obj_t *pos_args, mp_map_t *kw_args) {
+     static const mp_arg_t allowed_args[] = {
+         { MP_QSTR_, MP_ARG_REQUIRED | MP_ARG_OBJ, {.u_rom_obj = mp_const_none } },
+         { MP_QSTR_axis, MP_ARG_KW_ONLY | MP_ARG_OBJ, {.u_int = -1 } },
+     };
+ 
+     mp_arg_val_t args[MP_ARRAY_SIZE(allowed_args)];
+     mp_arg_parse_all(n_args, pos_args, kw_args, MP_ARRAY_SIZE(allowed_args), allowed_args, args);
+ 
+     return numerical_sort_helper(args[0].u_obj, args[1].u_obj, 1);
+ }
+ 
+ MP_DEFINE_CONST_FUN_OBJ_KW(numerical_sort_inplace_obj, 1, numerical_sort_inplace);
+ 
+ static mp_obj_t numerical_argsort(size_t n_args, const mp_obj_t *pos_args, mp_map_t *kw_args) {
+     static const mp_arg_t allowed_args[] = {
+         { MP_QSTR_, MP_ARG_REQUIRED | MP_ARG_OBJ, {.u_rom_obj = mp_const_none } },
+         { MP_QSTR_axis, MP_ARG_KW_ONLY | MP_ARG_OBJ, {.u_int = -1 } },
+     };
+     mp_arg_val_t args[MP_ARRAY_SIZE(allowed_args)];
+     mp_arg_parse_all(n_args, pos_args, kw_args, MP_ARRAY_SIZE(allowed_args), allowed_args, args);
+     if(!MP_OBJ_IS_TYPE(args[0].u_obj, &ulab_ndarray_type)) {
+         mp_raise_TypeError(translate("argsort argument must be an ndarray"));
+     }
+ 
+     ndarray_obj_t *ndarray = MP_OBJ_TO_PTR(args[0].u_obj);
+     size_t increment, start_inc, end, N, m, n;
+     if(args[1].u_obj == mp_const_none) { // flatten the array
+         m = 1;
+         n = ndarray->array->len;
+         increment = 1;
+         start_inc = ndarray->n;
+         end = ndarray->n;
+         N = n;
+     } else if((mp_obj_get_int(args[1].u_obj) == -1) || 
+               (mp_obj_get_int(args[1].u_obj) == 1)) { // sort along the horizontal axis
+         m = ndarray->m;
+         n = ndarray->n;
+         increment = 1;
+         start_inc = n;
+         end = ndarray->array->len;
+         N = n;
+     } else if(mp_obj_get_int(args[1].u_obj) == 0) { // sort along vertical axis
+         m = ndarray->m;
+         n = ndarray->n;
+         increment = n;
+         start_inc = 1;
+         end = n;
+         N = m;
+     } else {
+         mp_raise_ValueError(translate("axis must be -1, 0, None, or 1"));
+     }
+ 
+     // at the expense of flash, we could save RAM by creating 
+     // an NDARRAY_UINT16 ndarray only, if needed, otherwise, NDARRAY_UINT8
+     ndarray_obj_t *indices = create_new_ndarray(m, n, NDARRAY_UINT16);
+     uint16_t *index_array = (uint16_t *)indices->array->items;
+     // initialise the index array
+     // if array is flat: 0 to indices->n
+     // if sorting vertically, identical indices are arranged row-wise
+     // if sorting horizontally, identical indices are arranged colunn-wise
+     for(uint16_t start=0; start < end; start+=start_inc) {
+         for(uint16_t s=0; s < N; s++) {
+             index_array[start+s*increment] = s;
+         }
+     }
+ 
+     size_t q, k, p, c;
+     for(size_t start=0; start < end; start+=start_inc) {
+         q = N; 
+         k = (q >> 1);
+         if((ndarray->array->typecode == NDARRAY_UINT8) || (ndarray->array->typecode == NDARRAY_INT8)) {
+             HEAP_ARGSORT(uint8_t, ndarray, index_array);
+         } else if((ndarray->array->typecode == NDARRAY_INT16) || (ndarray->array->typecode == NDARRAY_INT16)) {
+             HEAP_ARGSORT(uint16_t, ndarray, index_array);
+         } else {
+             HEAP_ARGSORT(mp_float_t, ndarray, index_array);
+         }
+     }
+     return MP_OBJ_FROM_PTR(indices);
+ }
+ 
+ MP_DEFINE_CONST_FUN_OBJ_KW(numerical_argsort_obj, 1, numerical_argsort);
+ 
+ STATIC const mp_rom_map_elem_t ulab_numerical_globals_table[] = {
+     { MP_OBJ_NEW_QSTR(MP_QSTR___name__), MP_OBJ_NEW_QSTR(MP_QSTR_numerical) },
+     { MP_OBJ_NEW_QSTR(MP_QSTR_sum), (mp_obj_t)&numerical_sum_obj },
+     { MP_OBJ_NEW_QSTR(MP_QSTR_mean), (mp_obj_t)&numerical_mean_obj },
+     { MP_OBJ_NEW_QSTR(MP_QSTR_std), (mp_obj_t)&numerical_std_obj },
+     { MP_OBJ_NEW_QSTR(MP_QSTR_min), (mp_obj_t)&numerical_min_obj },
+     { MP_OBJ_NEW_QSTR(MP_QSTR_max), (mp_obj_t)&numerical_max_obj },
+     { MP_OBJ_NEW_QSTR(MP_QSTR_argmin), (mp_obj_t)&numerical_argmin_obj },
+     { MP_OBJ_NEW_QSTR(MP_QSTR_argmax), (mp_obj_t)&numerical_argmax_obj },
+     { MP_OBJ_NEW_QSTR(MP_QSTR_roll), (mp_obj_t)&numerical_roll_obj },
+     { MP_OBJ_NEW_QSTR(MP_QSTR_flip), (mp_obj_t)&numerical_flip_obj },
+     { MP_OBJ_NEW_QSTR(MP_QSTR_diff), (mp_obj_t)&numerical_diff_obj },
+     { MP_OBJ_NEW_QSTR(MP_QSTR_sort), (mp_obj_t)&numerical_sort_obj },
+     { MP_OBJ_NEW_QSTR(MP_QSTR_argsort), (mp_obj_t)&numerical_argsort_obj },    
+ };
+ 
+ STATIC MP_DEFINE_CONST_DICT(mp_module_ulab_numerical_globals, ulab_numerical_globals_table);
+ 
+ mp_obj_module_t ulab_numerical_module = {
+     .base = { &mp_type_module },
+     .globals = (mp_obj_dict_t*)&mp_module_ulab_numerical_globals,
+ };
+ 
+ #endif
diff -crNb MicorpythonOriginal1.12/ulab/code/numerical.h micropython1.12_withUlab/ulab/code/numerical.h
*** MicorpythonOriginal1.12/ulab/code/numerical.h	1970-01-01 02:00:00.000000000 +0200
--- micropython1.12_withUlab/ulab/code/numerical.h	2020-06-18 18:25:25.710905000 +0200
***************
*** 0 ****
--- 1,165 ----
+ 
+ /*
+  * This file is part of the micropython-ulab project, 
+  *
+  * https://github.com/v923z/micropython-ulab
+  *
+  * The MIT License (MIT)
+  *
+  * Copyright (c) 2019-2020 Zoltán Vörös
+ */
+ 
+ #ifndef _NUMERICAL_
+ #define _NUMERICAL_
+ 
+ #include "ulab.h"
+ #include "ndarray.h"
+ 
+ #if ULAB_NUMERICAL_MODULE
+ 
+ extern mp_obj_module_t ulab_numerical_module;
+ 
+ // TODO: implement cumsum
+ //mp_obj_t numerical_cumsum(size_t , const mp_obj_t *, mp_map_t *);
+ 
+ #define RUN_ARGMIN(in, out, typein, typeout, len, start, increment, op, pos) do {\
+     typein *array = (typein *)(in)->array->items;\
+     typeout *outarray = (typeout *)(out)->array->items;\
+     size_t best_index = 0;\
+     if(((op) == NUMERICAL_MAX) || ((op) == NUMERICAL_ARGMAX)) {\
+         for(size_t i=1; i < (len); i++) {\
+             if(array[(start)+i*(increment)] > array[(start)+best_index*(increment)]) best_index = i;\
+         }\
+         if((op) == NUMERICAL_MAX) outarray[(pos)] = (typeout)array[(start)+best_index*(increment)];\
+         else outarray[(pos)] = best_index;\
+     } else{\
+         for(size_t i=1; i < (len); i++) {\
+             if(array[(start)+i*(increment)] < array[(start)+best_index*(increment)]) best_index = i;\
+         }\
+         if((op) == NUMERICAL_MIN) outarray[(pos)] = (typeout)array[(start)+best_index*(increment)];\
+         else outarray[(pos)] = best_index;\
+     }\
+ } while(0)
+ 
+ #define RUN_SUM(ndarray, type, optype, len, start, increment) do {\
+     type *array = (type *)(ndarray)->array->items;\
+     type value;\
+     for(size_t k=0; k < (len); k++) {\
+         value = array[(start)+k*(increment)];\
+         sum += value;\
+     }\
+ } while(0)
+ 
+ #define RUN_STD(ndarray, type, len, start, increment) do {\
+     type *array = (type *)(ndarray)->array->items;\
+     mp_float_t value;\
+     for(size_t k=0; k < (len); k++) {\
+         sum += array[(start)+k*(increment)];\
+     }\
+     sum /= (len);\
+     for(size_t k=0; k < (len); k++) {\
+         value = (array[(start)+k*(increment)] - sum);\
+         sum_sq += value * value;\
+     }\
+ } while(0)
+ 
+ #define CALCULATE_DIFF(in, out, type, M, N, inn, increment) do {\
+     type *source = (type *)(in)->array->items;\
+     type *target = (type *)(out)->array->items;\
+     for(size_t i=0; i < (M); i++) {\
+         for(size_t j=0; j < (N); j++) {\
+             for(uint8_t k=0; k < n+1; k++) {\
+                 target[i*(N)+j] -= stencil[k]*source[i*(inn)+j+k*(increment)];\
+             }\
+         }\
+     }\
+ } while(0)
+ 
+ #define HEAPSORT(type, ndarray) do {\
+     type *array = (type *)(ndarray)->array->items;\
+     array += start;\
+     type tmp;\
+     for (;;) {\
+         if (k > 0) {\
+             tmp = array[(--k)*increment];\
+         } else {\
+             q--;\
+             if(q == 0) {\
+                 break;\
+             }\
+             tmp = array[q*increment];\
+             array[q*increment] = array[0];\
+         }\
+         p = k;\
+         c = k + k + 1;\
+         while (c < q) {\
+             if((c + 1 < q)  &&  (array[(c+1)*increment] > array[c*increment])) {\
+                 c++;\
+             }\
+             if(array[c*increment] > tmp) {\
+                 array[p*increment] = array[c*increment];\
+                 p = c;\
+                 c = p + p + 1;\
+             } else {\
+                 break;\
+             }\
+         }\
+         array[p*increment] = tmp;\
+     }\
+ } while(0)
+ 
+ // This is pretty similar to HEAPSORT above; perhaps, the two could be combined somehow
+ // On the other hand, since this is a macro, it doesn't really matter
+ // Keep in mind that initially, index_array[start+s*increment] = s
+ #define HEAP_ARGSORT(type, ndarray, index_array) do {\
+     type *array = (type *)(ndarray)->array->items;\
+     type tmp;\
+     uint16_t itmp;\
+     for (;;) {\
+         if (k > 0) {\
+             k--;\
+             tmp = array[start+index_array[start+k*increment]*increment];\
+             itmp = index_array[start+k*increment];\
+         } else {\
+             q--;\
+             if(q == 0) {\
+                 break;\
+             }\
+             tmp = array[start+index_array[start+q*increment]*increment];\
+             itmp = index_array[start+q*increment];\
+             index_array[start+q*increment] = index_array[start];\
+         }\
+         p = k;\
+         c = k + k + 1;\
+         while (c < q) {\
+             if((c + 1 < q)  &&  (array[start+index_array[start+(c+1)*increment]*increment] > array[start+index_array[start+c*increment]*increment])) {\
+                 c++;\
+             }\
+             if(array[start+index_array[start+c*increment]*increment] > tmp) {\
+                 index_array[start+p*increment] = index_array[start+c*increment];\
+                 p = c;\
+                 c = p + p + 1;\
+             } else {\
+                 break;\
+             }\
+         }\
+         index_array[start+p*increment] = itmp;\
+     }\
+ } while(0)
+ 
+ MP_DECLARE_CONST_FUN_OBJ_KW(numerical_min_obj);
+ MP_DECLARE_CONST_FUN_OBJ_KW(numerical_max_obj);
+ MP_DECLARE_CONST_FUN_OBJ_KW(numerical_argmin_obj);
+ MP_DECLARE_CONST_FUN_OBJ_KW(numerical_argmax_obj);
+ MP_DECLARE_CONST_FUN_OBJ_KW(numerical_sum_obj);
+ MP_DECLARE_CONST_FUN_OBJ_KW(numerical_mean_obj);
+ MP_DECLARE_CONST_FUN_OBJ_KW(numerical_std_obj);
+ MP_DECLARE_CONST_FUN_OBJ_KW(numerical_roll_obj);
+ MP_DECLARE_CONST_FUN_OBJ_KW(numerical_flip_obj);
+ MP_DECLARE_CONST_FUN_OBJ_KW(numerical_diff_obj);
+ MP_DECLARE_CONST_FUN_OBJ_KW(numerical_sort_obj);
+ MP_DECLARE_CONST_FUN_OBJ_KW(numerical_sort_inplace_obj);
+ MP_DECLARE_CONST_FUN_OBJ_KW(numerical_argsort_obj);
+ 
+ #endif
+ #endif
diff -crNb MicorpythonOriginal1.12/ulab/code/poly.c micropython1.12_withUlab/ulab/code/poly.c
*** MicorpythonOriginal1.12/ulab/code/poly.c	1970-01-01 02:00:00.000000000 +0200
--- micropython1.12_withUlab/ulab/code/poly.c	2020-06-18 18:25:25.710905000 +0200
***************
*** 0 ****
--- 1,199 ----
+ 
+ /*
+  * This file is part of the micropython-ulab project, 
+  *
+  * https://github.com/v923z/micropython-ulab
+  *
+  * The MIT License (MIT)
+  *
+  * Copyright (c) 2020 Jeff Epler for Adafruit Industries
+  *               2019-2020 Zoltán Vörös
+  *
+ */
+ 
+ #include "py/obj.h"
+ #include "py/runtime.h"
+ #include "py/objarray.h"
+ #include "ndarray.h"
+ #include "linalg.h"
+ #include "poly.h"
+ 
+ #if ULAB_POLY_MODULE
+ static mp_obj_t poly_polyval(mp_obj_t o_p, mp_obj_t o_x) {
+     // TODO: return immediately, if o_p is not an iterable
+     // TODO: there is a bug here: matrices won't work, 
+     // because there is a single iteration loop
+     size_t m, n;
+     if(MP_OBJ_IS_TYPE(o_x, &ulab_ndarray_type)) {
+         ndarray_obj_t *ndx = MP_OBJ_TO_PTR(o_x);
+         m = ndx->m;
+         n = ndx->n;
+     } else {
+         mp_obj_array_t *ix = MP_OBJ_TO_PTR(o_x);
+         m = 1;
+         n = ix->len;
+     }
+     // polynomials are going to be of type float, except, when both 
+     // the coefficients and the independent variable are integers
+     ndarray_obj_t *out = create_new_ndarray(m, n, NDARRAY_FLOAT);
+     mp_obj_iter_buf_t x_buf;
+     mp_obj_t x_item, x_iterable = mp_getiter(o_x, &x_buf);
+ 
+     mp_obj_iter_buf_t p_buf;
+     mp_obj_t p_item, p_iterable;
+ 
+     mp_float_t x, y;
+     mp_float_t *outf = (mp_float_t *)out->array->items;
+     uint8_t plen = mp_obj_get_int(mp_obj_len_maybe(o_p));
+     mp_float_t *p = m_new(mp_float_t, plen);
+     p_iterable = mp_getiter(o_p, &p_buf);
+     uint16_t i = 0;    
+     while((p_item = mp_iternext(p_iterable)) != MP_OBJ_STOP_ITERATION) {
+         p[i] = mp_obj_get_float(p_item);
+         i++;
+     }
+     i = 0;
+     while ((x_item = mp_iternext(x_iterable)) != MP_OBJ_STOP_ITERATION) {
+         x = mp_obj_get_float(x_item);
+         y = p[0];
+         for(uint8_t j=0; j < plen-1; j++) {
+             y *= x;
+             y += p[j+1];
+         }
+         outf[i++] = y;
+     }
+     m_del(mp_float_t, p, plen);
+     return MP_OBJ_FROM_PTR(out);
+ }
+ 
+ MP_DEFINE_CONST_FUN_OBJ_2(poly_polyval_obj, poly_polyval);
+ 
+ static mp_obj_t poly_polyfit(size_t  n_args, const mp_obj_t *args) {
+     if((n_args != 2) && (n_args != 3)) {
+         mp_raise_ValueError(translate("number of arguments must be 2, or 3"));
+     }
+     if(!ndarray_object_is_nditerable(args[0])) {
+         mp_raise_ValueError(translate("input data must be an iterable"));
+     }
+     uint16_t lenx = 0, leny = 0;
+     uint8_t deg = 0;
+     mp_float_t *x, *XT, *y, *prod;
+ 
+     if(n_args == 2) { // only the y values are supplied
+         // TODO: this is actually not enough: the first argument can very well be a matrix, 
+         // in which case we are between the rock and a hard place
+         leny = (uint16_t)mp_obj_get_int(mp_obj_len_maybe(args[0]));
+         deg = (uint8_t)mp_obj_get_int(args[1]);
+         if(leny < deg) {
+             mp_raise_ValueError(translate("more degrees of freedom than data points"));
+         }
+         lenx = leny;
+         x = m_new(mp_float_t, lenx); // assume uniformly spaced data points
+         for(size_t i=0; i < lenx; i++) {
+             x[i] = i;
+         }
+         y = m_new(mp_float_t, leny);
+         fill_array_iterable(y, args[0]);
+     } else /* n_args == 3 */ {
+         if(!ndarray_object_is_nditerable(args[1])) {
+             mp_raise_ValueError(translate("input data must be an iterable"));
+         }
+         lenx = (uint16_t)mp_obj_get_int(mp_obj_len_maybe(args[0]));
+         leny = (uint16_t)mp_obj_get_int(mp_obj_len_maybe(args[1]));
+         if(lenx != leny) {
+             mp_raise_ValueError(translate("input vectors must be of equal length"));
+         }
+         deg = (uint8_t)mp_obj_get_int(args[2]);
+         if(leny < deg) {
+             mp_raise_ValueError(translate("more degrees of freedom than data points"));
+         }
+         x = m_new(mp_float_t, lenx);
+         fill_array_iterable(x, args[0]);
+         y = m_new(mp_float_t, leny);
+         fill_array_iterable(y, args[1]);
+     }
+     
+     // one could probably express X as a function of XT, 
+     // and thereby save RAM, because X is used only in the product
+     XT = m_new(mp_float_t, (deg+1)*leny); // XT is a matrix of shape (deg+1, len) (rows, columns)
+     for(uint8_t i=0; i < leny; i++) { // column index
+         XT[i+0*lenx] = 1.0; // top row
+         for(uint8_t j=1; j < deg+1; j++) { // row index
+             XT[i+j*leny] = XT[i+(j-1)*leny]*x[i];
+         }
+     }
+     
+     prod = m_new(mp_float_t, (deg+1)*(deg+1)); // the product matrix is of shape (deg+1, deg+1)
+     mp_float_t sum;
+     for(uint16_t i=0; i < deg+1; i++) { // column index
+         for(uint16_t j=0; j < deg+1; j++) { // row index
+             sum = 0.0;
+             for(size_t k=0; k < lenx; k++) {
+                 // (j, k) * (k, i) 
+                 // Note that the second matrix is simply the transpose of the first: 
+                 // X(k, i) = XT(i, k) = XT[k*lenx+i]
+                 sum += XT[j*lenx+k]*XT[i*lenx+k]; // X[k*(deg+1)+i];
+             }
+             prod[j*(deg+1)+i] = sum;
+         }
+     }
+     if(!linalg_invert_matrix(prod, deg+1)) {
+         // Although X was a Vandermonde matrix, whose inverse is guaranteed to exist, 
+         // we bail out here, if prod couldn't be inverted: if the values in x are not all 
+         // distinct, prod is singular
+         m_del(mp_float_t, XT, (deg+1)*lenx);
+         m_del(mp_float_t, x, lenx);
+         m_del(mp_float_t, y, lenx);
+         m_del(mp_float_t, prod, (deg+1)*(deg+1));
+         mp_raise_ValueError(translate("could not invert Vandermonde matrix"));
+     } 
+     // at this point, we have the inverse of X^T * X
+     // y is a column vector; x is free now, we can use it for storing intermediate values
+     for(uint16_t i=0; i < deg+1; i++) { // row index
+         sum = 0.0;
+         for(uint16_t j=0; j < lenx; j++) { // column index
+             sum += XT[i*lenx+j]*y[j];
+         }
+         x[i] = sum;
+     }
+     // XT is no longer needed
+     m_del(mp_float_t, XT, (deg+1)*leny);
+     
+     ndarray_obj_t *beta = create_new_ndarray(deg+1, 1, NDARRAY_FLOAT);
+     mp_float_t *betav = (mp_float_t *)beta->array->items;
+     // x[0..(deg+1)] contains now the product X^T * y; we can get rid of y
+     m_del(float, y, leny);
+     
+     // now, we calculate beta, i.e., we apply prod = (X^T * X)^(-1) on x = X^T * y; x is a column vector now
+     for(uint16_t i=0; i < deg+1; i++) {
+         sum = 0.0;
+         for(uint16_t j=0; j < deg+1; j++) {
+             sum += prod[i*(deg+1)+j]*x[j];
+         }
+         betav[i] = sum;
+     }
+     m_del(mp_float_t, x, lenx);
+     m_del(mp_float_t, prod, (deg+1)*(deg+1));
+     for(uint8_t i=0; i < (deg+1)/2; i++) {
+         // We have to reverse the array, for the leading coefficient comes first. 
+         SWAP(mp_float_t, betav[i], betav[deg-i]);
+     }
+     return MP_OBJ_FROM_PTR(beta);
+ }
+ 
+ MP_DEFINE_CONST_FUN_OBJ_VAR_BETWEEN(poly_polyfit_obj, 2, 3, poly_polyfit);
+ 
+ STATIC const mp_rom_map_elem_t ulab_poly_globals_table[] = {
+     { MP_OBJ_NEW_QSTR(MP_QSTR___name__), MP_OBJ_NEW_QSTR(MP_QSTR_poly) },
+     { MP_OBJ_NEW_QSTR(MP_QSTR_polyval), (mp_obj_t)&poly_polyval_obj },
+     { MP_OBJ_NEW_QSTR(MP_QSTR_polyfit), (mp_obj_t)&poly_polyfit_obj },
+ };
+ 
+ STATIC MP_DEFINE_CONST_DICT(mp_module_ulab_poly_globals, ulab_poly_globals_table);
+ 
+ mp_obj_module_t ulab_poly_module = {
+     .base = { &mp_type_module },
+     .globals = (mp_obj_dict_t*)&mp_module_ulab_poly_globals,
+ };
+ 
+ #endif
diff -crNb MicorpythonOriginal1.12/ulab/code/poly.h micropython1.12_withUlab/ulab/code/poly.h
*** MicorpythonOriginal1.12/ulab/code/poly.h	1970-01-01 02:00:00.000000000 +0200
--- micropython1.12_withUlab/ulab/code/poly.h	2020-06-18 18:25:25.710905000 +0200
***************
*** 0 ****
--- 1,25 ----
+ 
+ /*
+  * This file is part of the micropython-ulab project, 
+  *
+  * https://github.com/v923z/micropython-ulab
+  *
+  * The MIT License (MIT)
+  *
+  * Copyright (c) 2019-2020 Zoltán Vörös
+ */
+ 
+ #ifndef _POLY_
+ #define _POLY_
+ 
+ #include "ulab.h"
+ 
+ #if ULAB_POLY_MODULE
+ 
+ extern mp_obj_module_t ulab_poly_module;
+ 
+ MP_DECLARE_CONST_FUN_OBJ_2(poly_polyval_obj);
+ MP_DECLARE_CONST_FUN_OBJ_VAR_BETWEEN(poly_polyfit_obj);
+ 
+ #endif
+ #endif
diff -crNb MicorpythonOriginal1.12/ulab/code/ulab.c micropython1.12_withUlab/ulab/code/ulab.c
*** MicorpythonOriginal1.12/ulab/code/ulab.c	1970-01-01 02:00:00.000000000 +0200
--- micropython1.12_withUlab/ulab/code/ulab.c	2020-06-18 18:25:25.710905000 +0200
***************
*** 0 ****
--- 1,128 ----
+ 
+ /*
+  * This file is part of the micropython-ulab project,
+  *
+  * https://github.com/v923z/micropython-ulab
+  *
+  * The MIT License (MIT)
+  *
+  * Copyright (c) 2019-2020 Zoltán Vörös
+ */
+ 
+ #include <math.h>
+ #include <stdio.h>
+ #include <stdlib.h>
+ #include <string.h>
+ #include "py/runtime.h"
+ #include "py/binary.h"
+ #include "py/obj.h"
+ #include "py/objarray.h"
+ 
+ #include "ulab.h"
+ #include "ndarray.h"
+ #include "ndarray_properties.h"
+ #include "create.h"
+ #include "linalg.h"
+ #include "vectorise.h"
+ #include "poly.h"
+ #include "fft.h"
+ #include "filter.h"
+ #include "numerical.h"
+ #include "compare.h"
+ #include "approx.h"
+ #include "extras.h"
+ 
+ STATIC MP_DEFINE_STR_OBJ(ulab_version_obj, "0.50.2");
+ 
+ MP_DEFINE_CONST_FUN_OBJ_KW(ndarray_flatten_obj, 1, ndarray_flatten);
+ 
+ STATIC const mp_rom_map_elem_t ulab_ndarray_locals_dict_table[] = {
+     { MP_ROM_QSTR(MP_QSTR_reshape), MP_ROM_PTR(&ndarray_reshape_obj) },
+     { MP_ROM_QSTR(MP_QSTR_transpose), MP_ROM_PTR(&ndarray_transpose_obj) },
+     { MP_ROM_QSTR(MP_QSTR_flatten), MP_ROM_PTR(&ndarray_flatten_obj) },
+     { MP_ROM_QSTR(MP_QSTR_shape), MP_ROM_PTR(&ndarray_shape_obj) },
+     { MP_ROM_QSTR(MP_QSTR_size), MP_ROM_PTR(&ndarray_size_obj) },
+     { MP_ROM_QSTR(MP_QSTR_itemsize), MP_ROM_PTR(&ndarray_itemsize_obj) },
+ #if CIRCUITPY
+     { MP_ROM_QSTR(MP_QSTR_sort), MP_ROM_PTR(&numerical_sort_inplace_obj) },
+ #endif
+ };
+ 
+ STATIC MP_DEFINE_CONST_DICT(ulab_ndarray_locals_dict, ulab_ndarray_locals_dict_table);
+ 
+ const mp_obj_type_t ulab_ndarray_type = {
+     { &mp_type_type },
+ #if defined(MP_TYPE_FLAG_EQ_CHECKS_OTHER_TYPE) && defined(MP_TYPE_FLAG_EQ_HAS_NEQ_TEST)
+     .flags = MP_TYPE_FLAG_EQ_CHECKS_OTHER_TYPE | MP_TYPE_FLAG_EQ_HAS_NEQ_TEST,
+ #endif
+     .name = MP_QSTR_ndarray,
+     .print = ndarray_print,
+     .make_new = ndarray_make_new,
+     .subscr = ndarray_subscr,
+     .getiter = ndarray_getiter,
+     .unary_op = ndarray_unary_op,
+     .binary_op = ndarray_binary_op,
+     .buffer_p = { .get_buffer = ndarray_get_buffer, },
+     .locals_dict = (mp_obj_dict_t*)&ulab_ndarray_locals_dict,
+ };
+ 
+ STATIC const mp_map_elem_t ulab_globals_table[] = {
+     { MP_OBJ_NEW_QSTR(MP_QSTR___name__), MP_OBJ_NEW_QSTR(MP_QSTR_ulab) },
+     { MP_ROM_QSTR(MP_QSTR___version__), MP_ROM_PTR(&ulab_version_obj) },
+     { MP_ROM_QSTR(MP_QSTR_set_printoptions), (mp_obj_t)&ndarray_set_printoptions_obj },
+     { MP_ROM_QSTR(MP_QSTR_get_printoptions), (mp_obj_t)&ndarray_get_printoptions_obj },
+     { MP_OBJ_NEW_QSTR(MP_QSTR_array), (mp_obj_t)&ulab_ndarray_type },
+     { MP_ROM_QSTR(MP_QSTR_zeros), (mp_obj_t)&create_zeros_obj },
+     { MP_ROM_QSTR(MP_QSTR_ones), (mp_obj_t)&create_ones_obj },
+     { MP_ROM_QSTR(MP_QSTR_eye), (mp_obj_t)&create_eye_obj },
+     { MP_ROM_QSTR(MP_QSTR_linspace), (mp_obj_t)&create_linspace_obj },
+     #if ULAB_LINALG_MODULE
+     { MP_ROM_QSTR(MP_QSTR_linalg), MP_ROM_PTR(&ulab_linalg_module) },
+     #endif
+     #if ULAB_VECTORISE_MODULE
+     { MP_ROM_QSTR(MP_QSTR_vector), MP_ROM_PTR(&ulab_vectorise_module) },
+     #endif
+     #if ULAB_NUMERICAL_MODULE
+     { MP_ROM_QSTR(MP_QSTR_numerical), MP_ROM_PTR(&ulab_numerical_module) },
+     #endif
+     #if ULAB_POLY_MODULE
+     { MP_ROM_QSTR(MP_QSTR_poly), MP_ROM_PTR(&ulab_poly_module) },
+     #endif
+     #if ULAB_FFT_MODULE
+     { MP_ROM_QSTR(MP_QSTR_fft), MP_ROM_PTR(&ulab_fft_module) },
+     #endif
+     #if ULAB_FILTER_MODULE
+     { MP_ROM_QSTR(MP_QSTR_filter), MP_ROM_PTR(&ulab_filter_module) },
+     #endif
+     #if ULAB_COMPARE_MODULE
+     { MP_ROM_QSTR(MP_QSTR_compare), MP_ROM_PTR(&ulab_compare_module) },
+     #endif
+     #if ULAB_APPROX_MODULE
+     { MP_ROM_QSTR(MP_QSTR_approx), MP_ROM_PTR(&ulab_approx_module) },
+     #endif
+     #if ULAB_EXTRAS_MODULE
+     { MP_ROM_QSTR(MP_QSTR_extras), MP_ROM_PTR(&ulab_extras_module) },
+     #endif
+     // class constants
+     { MP_ROM_QSTR(MP_QSTR_uint8), MP_ROM_INT(NDARRAY_UINT8) },
+     { MP_ROM_QSTR(MP_QSTR_int8), MP_ROM_INT(NDARRAY_INT8) },
+     { MP_ROM_QSTR(MP_QSTR_uint16), MP_ROM_INT(NDARRAY_UINT16) },
+     { MP_ROM_QSTR(MP_QSTR_int16), MP_ROM_INT(NDARRAY_INT16) },
+     { MP_ROM_QSTR(MP_QSTR_float), MP_ROM_INT(NDARRAY_FLOAT) },
+ };
+ 
+ STATIC MP_DEFINE_CONST_DICT (
+     mp_module_ulab_globals,
+     ulab_globals_table
+ );
+ 
+ #ifdef OPENMV
+ const struct _mp_obj_module_t ulab_user_cmodule = {
+ #else
+ const mp_obj_module_t ulab_user_cmodule = {
+ #endif
+     .base = { &mp_type_module },
+     .globals = (mp_obj_dict_t*)&mp_module_ulab_globals,
+ };
+ 
+ MP_REGISTER_MODULE(MP_QSTR_ulab, ulab_user_cmodule, MODULE_ULAB_ENABLED);
diff -crNb MicorpythonOriginal1.12/ulab/code/ulab.h micropython1.12_withUlab/ulab/code/ulab.h
*** MicorpythonOriginal1.12/ulab/code/ulab.h	1970-01-01 02:00:00.000000000 +0200
--- micropython1.12_withUlab/ulab/code/ulab.h	2020-06-18 18:25:25.710905000 +0200
***************
*** 0 ****
--- 1,63 ----
+ 
+ /*
+  * This file is part of the micropython-ulab project, 
+  *
+  * https://github.com/v923z/micropython-ulab
+  *
+  * The MIT License (MIT)
+  *
+  * Copyright (c) 2019-2020 Zoltán Vörös
+ */
+ 
+ #ifndef __ULAB__
+ #define __ULAB__
+ 
+ // the create module is always included
+ #define ULAB_CREATE_MODULE (1)
+ 
+ // vectorise (all functions) takes approx. 6 kB of flash space
+ #ifndef ULAB_VECTORISE_MODULE
+ #define ULAB_VECTORISE_MODULE (1)
+ #endif
+ 
+ // linalg adds around 6 kB to the firmware
+ #ifndef ULAB_LINALG_MODULE
+ #define ULAB_LINALG_MODULE (1)
+ #endif
+ 
+ // poly requires approx. 2.5 kB
+ #ifndef ULAB_POLY_MODULE
+ #define ULAB_POLY_MODULE (1)
+ #endif
+ 
+ // numerical is about 12 kB
+ #ifndef ULAB_NUMERICAL_MODULE
+ #define ULAB_NUMERICAL_MODULE (1)
+ #endif
+ 
+ // FFT costs about 2 kB of flash space
+ #ifndef ULAB_FFT_MODULE
+ #define ULAB_FFT_MODULE (1)
+ #endif
+ 
+ // the filter module occupies about 1 kB of flash space
+ #ifndef ULAB_FILTER_MODULE
+ #define ULAB_FILTER_MODULE (1)
+ #endif
+ 
+ // the compare module consumes about 4 kB of flash space
+ #ifndef ULAB_COMPARE_MODULE
+ #define ULAB_COMPARE_MODULE (1)
+ #endif
+ 
+ // the approx module consumes about ... kB of flash space
+ #ifndef ULAB_APPROX_MODULE
+ #define ULAB_APPROX_MODULE (1)
+ #endif
+ 
+ // user-defined modules
+ #ifndef ULAB_EXTRAS_MODULE
+ #define ULAB_EXTRAS_MODULE (1)
+ #endif
+ 
+ #endif
diff -crNb MicorpythonOriginal1.12/ulab/code/vectorise.c micropython1.12_withUlab/ulab/code/vectorise.c
*** MicorpythonOriginal1.12/ulab/code/vectorise.c	1970-01-01 02:00:00.000000000 +0200
--- micropython1.12_withUlab/ulab/code/vectorise.c	2020-06-18 18:25:25.710905000 +0200
***************
*** 0 ****
--- 1,334 ----
+ 
+ /*
+  * This file is part of the micropython-ulab project, 
+  *
+  * https://github.com/v923z/micropython-ulab
+  *
+  * The MIT License (MIT)
+  *
+  * Copyright (c) 2019-2020 Zoltán Vörös
+ */
+ 
+ #include <math.h>
+ #include <stdio.h>
+ #include <stdlib.h>
+ #include "py/runtime.h"
+ #include "py/binary.h"
+ #include "py/obj.h"
+ #include "py/objarray.h"
+ #include "vectorise.h"
+ 
+ #ifndef MP_PI
+ #define MP_PI MICROPY_FLOAT_CONST(3.14159265358979323846)
+ #endif
+     
+ #if ULAB_VECTORISE_MODULE
+ static mp_obj_t vectorise_generic_vector(mp_obj_t o_in, mp_float_t (*f)(mp_float_t)) {
+     // Return a single value, if o_in is not iterable
+     if(mp_obj_is_float(o_in) || MP_OBJ_IS_INT(o_in)) {
+             return mp_obj_new_float(f(mp_obj_get_float(o_in)));
+     }
+     mp_float_t x;
+     if(MP_OBJ_IS_TYPE(o_in, &ulab_ndarray_type)) {
+         ndarray_obj_t *source = MP_OBJ_TO_PTR(o_in);
+         ndarray_obj_t *ndarray = create_new_ndarray(source->m, source->n, NDARRAY_FLOAT);
+         mp_float_t *dataout = (mp_float_t *)ndarray->array->items;
+         if(source->array->typecode == NDARRAY_UINT8) {
+             ITERATE_VECTOR(uint8_t, source, dataout);
+         } else if(source->array->typecode == NDARRAY_INT8) {
+             ITERATE_VECTOR(int8_t, source, dataout);
+         } else if(source->array->typecode == NDARRAY_UINT16) {
+             ITERATE_VECTOR(uint16_t, source, dataout);
+         } else if(source->array->typecode == NDARRAY_INT16) {
+             ITERATE_VECTOR(int16_t, source, dataout);
+         } else {
+             ITERATE_VECTOR(mp_float_t, source, dataout);
+         }
+         return MP_OBJ_FROM_PTR(ndarray);
+     } else if(MP_OBJ_IS_TYPE(o_in, &mp_type_tuple) || MP_OBJ_IS_TYPE(o_in, &mp_type_list) || 
+         MP_OBJ_IS_TYPE(o_in, &mp_type_range)) { // i.e., the input is a generic iterable
+             mp_obj_array_t *o = MP_OBJ_TO_PTR(o_in);
+             ndarray_obj_t *out = create_new_ndarray(1, o->len, NDARRAY_FLOAT);
+             mp_float_t *dataout = (mp_float_t *)out->array->items;
+             mp_obj_iter_buf_t iter_buf;
+             mp_obj_t item, iterable = mp_getiter(o_in, &iter_buf);
+             size_t i=0;
+             while ((item = mp_iternext(iterable)) != MP_OBJ_STOP_ITERATION) {
+                 x = mp_obj_get_float(item);
+                 dataout[i++] = f(x);
+             }
+         return MP_OBJ_FROM_PTR(out);
+     }
+     return mp_const_none;
+ }
+ 
+ 
+ MATH_FUN_1(acos, acos);
+ MP_DEFINE_CONST_FUN_OBJ_1(vectorise_acos_obj, vectorise_acos);
+ 
+ MATH_FUN_1(acosh, acosh);
+ MP_DEFINE_CONST_FUN_OBJ_1(vectorise_acosh_obj, vectorise_acosh);
+ 
+ MATH_FUN_1(asin, asin);
+ MP_DEFINE_CONST_FUN_OBJ_1(vectorise_asin_obj, vectorise_asin);
+ 
+ MATH_FUN_1(asinh, asinh);
+ MP_DEFINE_CONST_FUN_OBJ_1(vectorise_asinh_obj, vectorise_asinh);
+ 
+ MATH_FUN_1(atan, atan);
+ MP_DEFINE_CONST_FUN_OBJ_1(vectorise_atan_obj, vectorise_atan);
+ 
+ MATH_FUN_1(atanh, atanh);
+ MP_DEFINE_CONST_FUN_OBJ_1(vectorise_atanh_obj, vectorise_atanh);
+ 
+ MATH_FUN_1(ceil, ceil);
+ MP_DEFINE_CONST_FUN_OBJ_1(vectorise_ceil_obj, vectorise_ceil);
+ 
+ MATH_FUN_1(cos, cos);
+ MP_DEFINE_CONST_FUN_OBJ_1(vectorise_cos_obj, vectorise_cos);
+ 
+ MATH_FUN_1(cosh, cosh);
+ MP_DEFINE_CONST_FUN_OBJ_1(vectorise_cosh_obj, vectorise_cosh);
+ 
+ MATH_FUN_1(erf, erf);
+ MP_DEFINE_CONST_FUN_OBJ_1(vectorise_erf_obj, vectorise_erf);
+ 
+ MATH_FUN_1(erfc, erfc);
+ MP_DEFINE_CONST_FUN_OBJ_1(vectorise_erfc_obj, vectorise_erfc);
+ 
+ MATH_FUN_1(exp, exp);
+ MP_DEFINE_CONST_FUN_OBJ_1(vectorise_exp_obj, vectorise_exp);
+ 
+ MATH_FUN_1(expm1, expm1);
+ MP_DEFINE_CONST_FUN_OBJ_1(vectorise_expm1_obj, vectorise_expm1);
+ 
+ MATH_FUN_1(floor, floor);
+ MP_DEFINE_CONST_FUN_OBJ_1(vectorise_floor_obj, vectorise_floor);
+ 
+ MATH_FUN_1(gamma, tgamma);
+ MP_DEFINE_CONST_FUN_OBJ_1(vectorise_gamma_obj, vectorise_gamma);
+ 
+ MATH_FUN_1(lgamma, lgamma);
+ MP_DEFINE_CONST_FUN_OBJ_1(vectorise_lgamma_obj, vectorise_lgamma);
+ 
+ MATH_FUN_1(log, log);
+ MP_DEFINE_CONST_FUN_OBJ_1(vectorise_log_obj, vectorise_log);
+ 
+ MATH_FUN_1(log10, log10);
+ MP_DEFINE_CONST_FUN_OBJ_1(vectorise_log10_obj, vectorise_log10);
+ 
+ MATH_FUN_1(log2, log2);
+ MP_DEFINE_CONST_FUN_OBJ_1(vectorise_log2_obj, vectorise_log2);
+ 
+ MATH_FUN_1(sin, sin);
+ MP_DEFINE_CONST_FUN_OBJ_1(vectorise_sin_obj, vectorise_sin);
+ 
+ MATH_FUN_1(sinh, sinh);
+ MP_DEFINE_CONST_FUN_OBJ_1(vectorise_sinh_obj, vectorise_sinh);
+ 
+ MATH_FUN_1(sqrt, sqrt);
+ MP_DEFINE_CONST_FUN_OBJ_1(vectorise_sqrt_obj, vectorise_sqrt);
+ 
+ MATH_FUN_1(tan, tan);
+ MP_DEFINE_CONST_FUN_OBJ_1(vectorise_tan_obj, vectorise_tan);
+ 
+ MATH_FUN_1(tanh, tanh);
+ MP_DEFINE_CONST_FUN_OBJ_1(vectorise_tanh_obj, vectorise_tanh);
+ 
+ static mp_obj_t vectorise_around(size_t n_args, const mp_obj_t *pos_args, mp_map_t *kw_args) {
+     static const mp_arg_t allowed_args[] = {
+         { MP_QSTR_, MP_ARG_REQUIRED | MP_ARG_OBJ, {.u_rom_obj = mp_const_none} },
+         { MP_QSTR_decimals, MP_ARG_KW_ONLY | MP_ARG_INT, {.u_int = 0 } }
+     };
+ 
+     mp_arg_val_t args[MP_ARRAY_SIZE(allowed_args)];
+     mp_arg_parse_all(n_args, pos_args, kw_args, MP_ARRAY_SIZE(allowed_args), allowed_args, args);
+ 	if(!MP_OBJ_IS_TYPE(args[0].u_obj, &ulab_ndarray_type)) {
+ 		mp_raise_TypeError(translate("first argument must be an ndarray"));
+ 	}
+     int8_t n = args[1].u_int;
+ 	mp_float_t mul = MICROPY_FLOAT_C_FUN(pow)(10.0, n);
+     ndarray_obj_t *ndarray = MP_OBJ_TO_PTR(args[0].u_obj);
+     ndarray_obj_t *result = create_new_ndarray(ndarray->m, ndarray->n, NDARRAY_FLOAT);
+     mp_float_t *array = (mp_float_t *)result->array->items;
+     for(size_t i=0; i < ndarray->array->len; i++) {
+ 		mp_float_t f = ndarray_get_float_value(ndarray->array->items, ndarray->array->typecode, i);
+ 		*array++ = MICROPY_FLOAT_C_FUN(round)(f * mul) / mul;
+ 	}
+     return MP_OBJ_FROM_PTR(result);
+ }
+ 
+ MP_DEFINE_CONST_FUN_OBJ_KW(vectorise_around_obj, 1, vectorise_around);
+ 
+ static mp_obj_t vectorise_arctan2(mp_obj_t x, mp_obj_t y) {
+ 	// the function is implemented for scalars and ndarrays only, with partial 
+ 	// broadcasting: arguments must be either scalars, or ndarrays of equal size/shape
+ 	if(!(MP_OBJ_IS_INT(x) || mp_obj_is_float(x) || MP_OBJ_IS_TYPE(x, &ulab_ndarray_type)) &&
+ 		!(MP_OBJ_IS_INT(y) || mp_obj_is_float(y) || MP_OBJ_IS_TYPE(y, &ulab_ndarray_type))) {
+ 		mp_raise_TypeError(translate("arctan2 is implemented for scalars and ndarrays only"));
+ 	}
+ 	ndarray_obj_t *ndarray_x, *ndarray_y;
+ 	if(MP_OBJ_IS_INT(x) || mp_obj_is_float(x)) {
+ 		ndarray_x = create_new_ndarray(1, 1, NDARRAY_FLOAT);
+ 		mp_float_t *array_x = (mp_float_t *)ndarray_x->array->items;
+ 		*array_x = mp_obj_get_float(x);
+ 	} else {
+ 		ndarray_x = MP_OBJ_TO_PTR(x);
+ 	}
+ 	if(MP_OBJ_IS_INT(y) || mp_obj_is_float(y)) {
+ 		ndarray_y = create_new_ndarray(1, 1, NDARRAY_FLOAT);
+ 		mp_float_t *array_y = (mp_float_t *)ndarray_y->array->items;
+ 		*array_y = mp_obj_get_float(y);
+ 	} else {
+ 		ndarray_y = MP_OBJ_TO_PTR(y);
+ 	}
+ 	// check, whether partial broadcasting is possible here
+ 	if((ndarray_x->m != ndarray_y->m) || (ndarray_x->n != ndarray_y->n)) {
+ 		if((ndarray_x->array->len != 1) && (ndarray_y->array->len != 1)) {
+             mp_raise_ValueError(translate("operands could not be broadcast together"));
+ 		}
+ 	}
+ 	size_t xinc = 0, yinc = 0;
+ 	size_t m = MAX(ndarray_x->m, ndarray_y->m);
+ 	size_t n = MAX(ndarray_x->n, ndarray_y->n);
+ 	size_t len = MAX(ndarray_x->array->len, ndarray_y->array->len);
+ 	if(ndarray_x->array->len != 1) {
+ 		xinc = 1;
+ 	}
+ 	if(ndarray_y->array->len != 1) {
+ 		yinc = 1;
+ 	}
+ 	size_t posx = 0, posy = 0;
+ 	ndarray_obj_t *result = create_new_ndarray(m, n, NDARRAY_FLOAT);
+ 	mp_float_t *array_r = (mp_float_t *)result->array->items;
+ 	for(size_t i=0; i < len; i++) {
+ 		mp_float_t value_x = ndarray_get_float_value(ndarray_x->array->items, ndarray_x->array->typecode, posx);
+ 		mp_float_t value_y = ndarray_get_float_value(ndarray_y->array->items, ndarray_y->array->typecode, posy);
+ 		*array_r++ = MICROPY_FLOAT_C_FUN(atan2)(value_x, value_y);
+ 		posx += xinc;
+ 		posy += yinc;
+ 	}
+     return MP_OBJ_FROM_PTR(result);
+ }
+ 
+ MP_DEFINE_CONST_FUN_OBJ_2(vectorise_arctan2_obj, vectorise_arctan2);
+ 
+ static mp_obj_t vectorise_vectorized_function_call(mp_obj_t self_in, size_t n_args, size_t n_kw, const mp_obj_t *args) {
+     (void) n_args;
+     (void) n_kw;
+     vectorized_function_obj_t *self = MP_OBJ_TO_PTR(self_in);
+     mp_obj_t avalue[1];
+     mp_obj_t fvalue;
+     if(MP_OBJ_IS_TYPE(args[0], &ulab_ndarray_type)) {
+         ndarray_obj_t *source = MP_OBJ_TO_PTR(args[0]);
+         ndarray_obj_t *target = create_new_ndarray(source->m, source->n, self->otypes);
+         for(size_t i=0; i < source->array->len; i++) {
+             avalue[0] = mp_binary_get_val_array(source->array->typecode, source->array->items, i);
+             fvalue = self->type->call(self->fun, 1, 0, avalue);
+             mp_binary_set_val_array(self->otypes, target->array->items, i, fvalue);
+         }
+         return MP_OBJ_FROM_PTR(target);
+     } else if(MP_OBJ_IS_TYPE(args[0], &mp_type_tuple) || MP_OBJ_IS_TYPE(args[0], &mp_type_list) ||
+         MP_OBJ_IS_TYPE(args[0], &mp_type_range)) { // i.e., the input is a generic iterable
+         size_t len = (size_t)mp_obj_get_int(mp_obj_len_maybe(args[0]));
+         ndarray_obj_t *target = create_new_ndarray(1, len, self->otypes);
+         mp_obj_iter_buf_t iter_buf;
+         mp_obj_t iterable = mp_getiter(args[0], &iter_buf);
+         size_t i=0;
+         while ((avalue[0] = mp_iternext(iterable)) != MP_OBJ_STOP_ITERATION) {
+             fvalue = self->type->call(self->fun, 1, 0, avalue);
+             mp_binary_set_val_array(self->otypes, target->array->items, i, fvalue);
+             i++;
+         }
+         return MP_OBJ_FROM_PTR(target);
+     } else if(mp_obj_is_int(args[0]) || mp_obj_is_float(args[0])) {
+         ndarray_obj_t *target = create_new_ndarray(1, 1, self->otypes);
+         fvalue = self->type->call(self->fun, 1, 0, args);
+         mp_binary_set_val_array(self->otypes, target->array->items, 0, fvalue);
+         return MP_OBJ_FROM_PTR(target);
+     } else {
+         mp_raise_ValueError(translate("wrong input type"));
+     }
+     return mp_const_none;
+ }
+ 
+ const mp_obj_type_t vectorise_function_type = {
+     { &mp_type_type },
+     .name = MP_QSTR_,
+     .call = vectorise_vectorized_function_call,
+ };
+ 
+ static mp_obj_t vectorise_vectorize(size_t n_args, const mp_obj_t *pos_args, mp_map_t *kw_args) {
+     static const mp_arg_t allowed_args[] = {
+         { MP_QSTR_, MP_ARG_REQUIRED | MP_ARG_OBJ, {.u_rom_obj = mp_const_none} },
+         { MP_QSTR_otypes, MP_ARG_KW_ONLY | MP_ARG_OBJ, {.u_rom_obj = mp_const_none} }
+     };
+     mp_arg_val_t args[MP_ARRAY_SIZE(allowed_args)];
+     mp_arg_parse_all(n_args, pos_args, kw_args, MP_ARRAY_SIZE(allowed_args), allowed_args, args);
+     const mp_obj_type_t *type = mp_obj_get_type(args[0].u_obj);
+     if(type->call == NULL) {
+         mp_raise_TypeError(translate("first argument must be a callable"));
+     }
+     mp_obj_t _otypes = args[1].u_obj;
+     uint8_t otypes = NDARRAY_FLOAT;
+     if(_otypes == mp_const_none) {
+         // TODO: is this what numpy does?
+         otypes = NDARRAY_FLOAT;
+     } else if(mp_obj_is_int(_otypes)) {
+         otypes = mp_obj_get_int(_otypes);
+         if(otypes != NDARRAY_FLOAT && otypes != NDARRAY_UINT8 && otypes != NDARRAY_INT8 &&
+             otypes != NDARRAY_UINT16 && otypes != NDARRAY_INT16) {
+                 mp_raise_ValueError(translate("wrong output type"));
+         }
+     }
+     else {
+         mp_raise_ValueError(translate("wrong output type"));
+     }
+     vectorized_function_obj_t *function = m_new_obj(vectorized_function_obj_t);
+     function->base.type = &vectorise_function_type;
+     function->otypes = otypes;
+     function->fun = args[0].u_obj;
+     function->type = type;
+     return MP_OBJ_FROM_PTR(function);
+ }
+ 
+ MP_DEFINE_CONST_FUN_OBJ_KW(vectorise_vectorize_obj, 1, vectorise_vectorize);
+ 
+ STATIC const mp_rom_map_elem_t ulab_vectorise_globals_table[] = {
+     { MP_OBJ_NEW_QSTR(MP_QSTR___name__), MP_OBJ_NEW_QSTR(MP_QSTR_vector) },
+     { MP_OBJ_NEW_QSTR(MP_QSTR_acos), (mp_obj_t)&vectorise_acos_obj },
+     { MP_OBJ_NEW_QSTR(MP_QSTR_acosh), (mp_obj_t)&vectorise_acosh_obj },
+     { MP_OBJ_NEW_QSTR(MP_QSTR_arctan2), (mp_obj_t)&vectorise_arctan2_obj },
+     { MP_OBJ_NEW_QSTR(MP_QSTR_around), (mp_obj_t)&vectorise_around_obj },
+     { MP_OBJ_NEW_QSTR(MP_QSTR_asin), (mp_obj_t)&vectorise_asin_obj },
+     { MP_OBJ_NEW_QSTR(MP_QSTR_asinh), (mp_obj_t)&vectorise_asinh_obj },
+     { MP_OBJ_NEW_QSTR(MP_QSTR_atan), (mp_obj_t)&vectorise_atan_obj },
+     { MP_OBJ_NEW_QSTR(MP_QSTR_atanh), (mp_obj_t)&vectorise_atanh_obj },
+     { MP_OBJ_NEW_QSTR(MP_QSTR_ceil), (mp_obj_t)&vectorise_ceil_obj },
+     { MP_OBJ_NEW_QSTR(MP_QSTR_cos), (mp_obj_t)&vectorise_cos_obj },
+     { MP_OBJ_NEW_QSTR(MP_QSTR_erf), (mp_obj_t)&vectorise_erf_obj },
+     { MP_OBJ_NEW_QSTR(MP_QSTR_erfc), (mp_obj_t)&vectorise_erfc_obj },
+     { MP_OBJ_NEW_QSTR(MP_QSTR_exp), (mp_obj_t)&vectorise_exp_obj },
+     { MP_OBJ_NEW_QSTR(MP_QSTR_expm1), (mp_obj_t)&vectorise_expm1_obj },
+     { MP_OBJ_NEW_QSTR(MP_QSTR_floor), (mp_obj_t)&vectorise_floor_obj },
+     { MP_OBJ_NEW_QSTR(MP_QSTR_gamma), (mp_obj_t)&vectorise_gamma_obj },
+     { MP_OBJ_NEW_QSTR(MP_QSTR_lgamma), (mp_obj_t)&vectorise_lgamma_obj },
+     { MP_OBJ_NEW_QSTR(MP_QSTR_log), (mp_obj_t)&vectorise_log_obj },
+     { MP_OBJ_NEW_QSTR(MP_QSTR_log10), (mp_obj_t)&vectorise_log10_obj },
+     { MP_OBJ_NEW_QSTR(MP_QSTR_log2), (mp_obj_t)&vectorise_log2_obj },
+     { MP_OBJ_NEW_QSTR(MP_QSTR_sin), (mp_obj_t)&vectorise_sin_obj },
+     { MP_OBJ_NEW_QSTR(MP_QSTR_sinh), (mp_obj_t)&vectorise_sinh_obj },
+     { MP_OBJ_NEW_QSTR(MP_QSTR_sqrt), (mp_obj_t)&vectorise_sqrt_obj },
+     { MP_OBJ_NEW_QSTR(MP_QSTR_tan), (mp_obj_t)&vectorise_tan_obj },
+     { MP_OBJ_NEW_QSTR(MP_QSTR_tanh), (mp_obj_t)&vectorise_tanh_obj },
+     { MP_OBJ_NEW_QSTR(MP_QSTR_vectorize), (mp_obj_t)&vectorise_vectorize_obj },
+ };
+ 
+ STATIC MP_DEFINE_CONST_DICT(mp_module_ulab_vectorise_globals, ulab_vectorise_globals_table);
+ 
+ mp_obj_module_t ulab_vectorise_module = {
+     .base = { &mp_type_module },
+     .globals = (mp_obj_dict_t*)&mp_module_ulab_vectorise_globals,
+ };
+ 
+ #endif
diff -crNb MicorpythonOriginal1.12/ulab/code/vectorise.h micropython1.12_withUlab/ulab/code/vectorise.h
*** MicorpythonOriginal1.12/ulab/code/vectorise.h	1970-01-01 02:00:00.000000000 +0200
--- micropython1.12_withUlab/ulab/code/vectorise.h	2020-06-18 18:25:25.710905000 +0200
***************
*** 0 ****
--- 1,42 ----
+ 
+ /*
+  * This file is part of the micropython-ulab project, 
+  *
+  * https://github.com/v923z/micropython-ulab
+  *
+  * The MIT License (MIT)
+  *
+  * Copyright (c) 2019-2020 Zoltán Vörös
+ */
+ 
+ #ifndef _VECTORISE_
+ #define _VECTORISE_
+ 
+ #include "ulab.h"
+ #include "ndarray.h"
+ 
+ #if ULAB_VECTORISE_MODULE
+ 
+ typedef struct _vectorized_function_obj_t {
+     mp_obj_base_t base;
+     uint8_t otypes;
+     mp_obj_t fun;
+     const mp_obj_type_t *type;
+ } vectorized_function_obj_t;
+ 
+ mp_obj_module_t ulab_vectorise_module;
+ 
+ #define ITERATE_VECTOR(type, source, out) do {\
+     type *input = (type *)(source)->array->items;\
+     for(size_t i=0; i < (source)->array->len; i++) {\
+                 (out)[i] = f(input[i]);\
+     }\
+ } while(0)
+ 
+ #define MATH_FUN_1(py_name, c_name) \
+     static mp_obj_t vectorise_ ## py_name(mp_obj_t x_obj) { \
+         return vectorise_generic_vector(x_obj, MICROPY_FLOAT_C_FUN(c_name)); \
+ }
+     
+ #endif
+ #endif
diff -crNb MicorpythonOriginal1.12/ulab/docs/manual/Makefile micropython1.12_withUlab/ulab/docs/manual/Makefile
*** MicorpythonOriginal1.12/ulab/docs/manual/Makefile	1970-01-01 02:00:00.000000000 +0200
--- micropython1.12_withUlab/ulab/docs/manual/Makefile	2020-06-18 18:25:25.710905000 +0200
***************
*** 0 ****
--- 1,20 ----
+ # Minimal makefile for Sphinx documentation
+ #
+ 
+ # You can set these variables from the command line, and also
+ # from the environment for the first two.
+ SPHINXOPTS    ?=
+ SPHINXBUILD   ?= sphinx-build
+ SOURCEDIR     = source
+ BUILDDIR      = build
+ 
+ # Put it first so that "make" without argument is like "make help".
+ help:
+ 	@$(SPHINXBUILD) -M help "$(SOURCEDIR)" "$(BUILDDIR)" $(SPHINXOPTS) $(O)
+ 
+ .PHONY: help Makefile
+ 
+ # Catch-all target: route all unknown targets to Sphinx using the new
+ # "make mode" option.  $(O) is meant as a shortcut for $(SPHINXOPTS).
+ %: Makefile
+ 	@$(SPHINXBUILD) -M $@ "$(SOURCEDIR)" "$(BUILDDIR)" $(SPHINXOPTS) $(O)
diff -crNb MicorpythonOriginal1.12/ulab/docs/manual/source/conf.py micropython1.12_withUlab/ulab/docs/manual/source/conf.py
*** MicorpythonOriginal1.12/ulab/docs/manual/source/conf.py	1970-01-01 02:00:00.000000000 +0200
--- micropython1.12_withUlab/ulab/docs/manual/source/conf.py	2020-06-18 18:25:25.710905000 +0200
***************
*** 0 ****
--- 1,66 ----
+ # Configuration file for the Sphinx documentation builder.
+ #
+ # This file only contains a selection of the most common options. For a full
+ # list see the documentation:
+ # http://www.sphinx-doc.org/en/master/config
+ 
+ # -- Path setup --------------------------------------------------------------
+ 
+ # If extensions (or modules to document with autodoc) are in another directory,
+ # add these directories to sys.path here. If the directory is relative to the
+ # documentation root, use os.path.abspath to make it absolute, like shown here.
+ #
+ # import os
+ # import sys
+ # sys.path.insert(0, os.path.abspath('.'))
+ 
+ 
+ # -- Project information -----------------------------------------------------
+ 
+ project = 'micropython-ulab'
+ copyright = '2019-2020, Zoltán Vörös'
+ author = 'Zoltán Vörös'
+ 
+ # The full version, including alpha/beta/rc tags
+ release = '0.50.0'
+ 
+ # -- General configuration ---------------------------------------------------
+ 
+ # Add any Sphinx extension module names here, as strings. They can be
+ # extensions coming with Sphinx (named 'sphinx.ext.*') or your custom
+ # ones.
+ extensions = [
+ ]
+ 
+ # Add any paths that contain templates here, relative to this directory.
+ templates_path = ['_templates']
+ 
+ # List of patterns, relative to source directory, that match files and
+ # directories to ignore when looking for source files.
+ # This pattern also affects html_static_path and html_extra_path.
+ exclude_patterns = []
+ 
+ 
+ # -- Options for HTML output -------------------------------------------------
+ 
+ # The theme to use for HTML and HTML Help pages.  See the documentation for
+ # a list of builtin themes.
+ #
+ html_theme = 'sphinx_rtd_theme'
+ 
+ # Add any paths that contain custom static files (such as style sheets) here,
+ # relative to this directory. They are copied after the builtin static files,
+ # so a file named "default.css" will overwrite the builtin "default.css".
+ html_static_path = ['_static']
+ 
+ master_doc = 'index'
+ 
+ author=u'Zoltán Vörös'
+ copyright=author
+ language='en'
+ 
+ latex_documents = [
+ (master_doc, 'ulab-manual.tex', 'Micropython ulab documentation', 
+ 'Zoltán Vörös', 'manual'),
+ ]
+    
diff -crNb MicorpythonOriginal1.12/ulab/docs/manual/source/index.rst micropython1.12_withUlab/ulab/docs/manual/source/index.rst
*** MicorpythonOriginal1.12/ulab/docs/manual/source/index.rst	1970-01-01 02:00:00.000000000 +0200
--- micropython1.12_withUlab/ulab/docs/manual/source/index.rst	2020-06-18 18:25:25.710905000 +0200
***************
*** 0 ****
--- 1,20 ----
+ .. ulab-manual documentation master file, created by
+    sphinx-quickstart on Sat Oct 19 12:48:00 2019.
+    You can adapt this file completely to your liking, but it should at least
+    contain the root `toctree` directive.
+ 
+ Welcome to micropython-ulab's documentation!
+ =======================================
+ 
+ .. toctree::
+    :maxdepth: 2
+    :caption: Contents:
+ 
+    ulab
+ 
+ Indices and tables
+ ==================
+ 
+ * :ref:`genindex`
+ * :ref:`modindex`
+ * :ref:`search`
diff -crNb MicorpythonOriginal1.12/ulab/docs/manual/source/ulab.rst micropython1.12_withUlab/ulab/docs/manual/source/ulab.rst
*** MicorpythonOriginal1.12/ulab/docs/manual/source/ulab.rst	1970-01-01 02:00:00.000000000 +0200
--- micropython1.12_withUlab/ulab/docs/manual/source/ulab.rst	2020-06-18 18:25:25.710905000 +0200
***************
*** 0 ****
--- 1,4445 ----
+ Introduction
+ ============
+ 
+ In the `last
+ chapter <https://micropython-usermod.readthedocs.io/en/latest/usermods_15.html>`__
+ of the usermod documentation, I mentioned that I have another story, for
+ another day. The day has come, so here is my story.
+ 
+ Enter ulab
+ ----------
+ 
+ ``ulab`` is a ``numpy``-like module for ``micropython``, meant to
+ simplify and speed up common mathematical operations on arrays. The
+ primary goal was to implement a small subset of ``numpy`` that might be
+ useful in the context of a microcontroller. This means low-level data
+ processing of linear (array) and two-dimensional (matrix) data.
+ 
+ Purpose
+ -------
+ 
+ Of course, the first question that one has to answer is, why on Earth
+ one would need a fast math library on a microcontroller. After all, it
+ is not expected that heavy number crunching is going to take place on
+ bare metal. It is not meant to. On a PC, the main reason for writing
+ fast code is the sheer amount of data that one wants to process. On a
+ microcontroller, the data volume is probably small, but it might lead to
+ catastrophic system failure, if these data are not processed in time,
+ because the microcontroller is supposed to interact with the outside
+ world in a timely fashion. In fact, this latter objective was the
+ initiator of this project: I needed the Fourier transform of a signal
+ coming from the ADC of the pyboard, and all available options were
+ simply too slow.
+ 
+ In addition to speed, another issue that one has to keep in mind when
+ working with embedded systems is the amount of available RAM: I believe,
+ everything here could be implemented in pure python with relatively
+ little effort, but the price we would have to pay for that is not only
+ speed, but RAM, too. python code, if is not frozen, and compiled into
+ the firmware, has to be compiled at runtime, which is not exactly a
+ cheap process. On top of that, if numbers are stored in a list or tuple,
+ which would be the high-level container, then they occupy 8 bytes, no
+ matter, whether they are all smaller than 100, or larger than one
+ hundred million. This is obviously a waste of resources in an
+ environment, where resources are scarce.
+ 
+ Finally, there is a reason for using ``micropython`` in the first place.
+ Namely, that a microcontroller can be programmed in a very elegant, and
+ *pythonic* way. But if it is so, why should we not extend this idea to
+ other tasks and concepts that might come up in this context? If there
+ was no other reason than this *elegance*, I would find that convincing
+ enough.
+ 
+ Based on the above-mentioned considerations, all functions in ``ulab``
+ are implemented in a way that
+ 
+ 1. conforms to ``numpy`` as much as possible
+ 2. is so frugal with RAM as possible,
+ 3. and yet, fast. Much faster than pure python. Think of a number
+    between 30 and 50!
+ 
+ The main points of ``ulab`` are
+ 
+ -  compact, iterable and slicable containers of numerical data in 1, and
+    2 dimensions (arrays and matrices). These containers support all the
+    relevant unary and binary operators (e.g., ``len``, ==, +, \*, etc.)
+ -  vectorised computations on micropython iterables and numerical
+    arrays/matrices (in ``numpy``-speak, universal functions)
+ -  basic linear algebra routines (matrix inversion, multiplication,
+    reshaping, transposition, determinant, and eigenvalues)
+ -  polynomial fits to numerical data
+ -  fast Fourier transforms
+ 
+ At the time of writing this manual (for version 0.50.0), the library
+ adds approximately 40 kB of extra compiled code to the micropython
+ (pyboard.v.11) firmware. However, if you are tight with flash space, you
+ can easily shave off a couple of kB. See the section on `customising
+ ulab <#Custom_builds>`__.
+ 
+ Resources and legal matters
+ ---------------------------
+ 
+ The source code of the module can be found under
+ https://github.com/v923z/micropython-ulab/tree/master/code. The source
+ of this user manual is under
+ https://github.com/v923z/micropython-ulab/tree/master/docs, while the
+ technical details of the implementation are discussed at great length in
+ https://github.com/v923z/micropython-ulab/tree/master/docs/ulab.ipynb.
+ If you want an even thorougher explanation on why the various constructs
+ of the implementation work, and work in that particular way, you can
+ read more on the subject under
+ https://micropython-usermod.readthedocs.io/en/latest/, where I
+ demonstrate, what you have to do, if you want to make a C object behave
+ in a *pythonic* way.
+ 
+ The MIT licence applies to all material.
+ 
+ Friendly request
+ ----------------
+ 
+ If you use ``ulab``, and bump into a bug, or think that a particular
+ function is missing, or its behaviour does not conform to ``numpy``,
+ please, raise a `ulab
+ issue <#https://github.com/v923z/micropython-ulab/issues>`__ on github,
+ so that the community can profit from your experiences.
+ 
+ Even better, if you find the project useful, and think that it could be
+ made better, faster, tighter, and shinier, please, consider
+ contributing, and issue a pull request with the implementation of your
+ improvements and new features. ``ulab`` can only become successful, if
+ it offers what the community needs.
+ 
+ These last comments apply to the documentation, too. If, in your
+ opinion, the documentation is obscure, misleading, or not detailed
+ enough, please, let me know, so that *we* can fix it.
+ 
+ Differences between micropython-ulab and circuitpython-ulab
+ -----------------------------------------------------------
+ 
+ ``ulab`` has originally been developed for ``micropython``, but has
+ since been integrated into a number of its flavours. Most of these
+ flavours are simply forks of ``micropython`` itself, with some
+ additional functionality. One of the notable exceptions is
+ ``circuitpython``, which has slightly diverged at the core level, and
+ this has some minor consequences. Some of these concern the C
+ implementation details only, which all have been sorted out with the
+ generous and enthusiastic support of Jeff Epler from `Adafruit
+ Industries <http://www.adafruit.com>`__.
+ 
+ There are, however, a couple of instances, where the usage in the two
+ environments is slightly different at the python level. These are how
+ the packages can be imported, and how the class properties can be
+ accessed. In both cases, the ``circuitpython`` implementation results in
+ ``numpy``-conform code. ``numpy``-compatibility in ``micropython`` will
+ be implemented as soon as ``micropython`` itself has the required tools.
+ Till then we have to live with a workaround, which I will point out at
+ the relevant places.
+ 
+ Customising ``ulab``
+ ====================
+ 
+ ``ulab`` implements a great number of functions, which are organised in
+ sub-modules. E.g., functions related to Fourier transforms are located
+ in the ``ulab.fft`` sub-module, so you would import ``fft`` as
+ 
+ .. code:: python
+ 
+    import ulab
+    from ulab import fft
+ 
+ by which point you can get the FFT of your data by calling
+ ``fft.fft(...)``.
+ 
+ The idea of such grouping of functions and methods is to provide a means
+ for granularity: It is quite possible that you do not need all functions
+ in a particular application. If you want to save some flash space, you
+ can easily exclude arbitrary sub-modules from the firmware. The
+ `ulab.h <https://github.com/v923z/micropython-ulab/blob/master/code/ulab.h>`__
+ header file contains a pre-processor flag for each sub-module. The
+ default setting is 1 for each of them. Setting them to 0 removes the
+ module from the compiled firmware.
+ 
+ The first couple of lines of the file look like this
+ 
+ .. code:: c
+ 
+    // vectorise (all functions) takes approx. 6 kB of flash space
+    #define ULAB_VECTORISE_MODULE (1)
+ 
+    // linalg adds around 6 kB
+    #define ULAB_LINALG_MODULE (1)
+ 
+    // poly requires approx. 2.5 kB
+    #define ULAB_POLY_MODULE (1)
+ 
+ In order to simplify navigation in the header, each flag begins with
+ ``ULAB_``, and continues with the name of the sub-module. This name is
+ also the ``.c`` file, where the sub-module is implemented. So, e.g., the
+ linear algebra routines can be found in ``linalg.c``, and the
+ corresponding compiler flag is ``ULAB_LINALG_MODULE``. Each section
+ displays a hint as to how much space you can save by un-setting the
+ flag.
+ 
+ At first, having to import everything in this way might appear to be
+ overly complicated, but there is a very good reason behind all this: you
+ can find out at the time of importing, whether a function or sub-module
+ is part of your ``ulab`` firmware, or not. The alternative, namely, that
+ you do not have to import anything beyond ``ulab``, could prove
+ catastrophic: you would learn only at run time (at the moment of calling
+ the function in your code) that a particular function is not in the
+ firmware, and that is most probably too late.
+ 
+ Except for ``fft``, the standard sub-modules, ``vector``, ``linalg``,
+ ``numerical``, and ``poly`` are all ``numpy``-compatible. User-defined
+ functions that accept ``ndarray``\ s as their argument should be
+ implemented in the ``extras`` sub-module, or its sub-modules. Hints as
+ to how to do that can be found in the section `Extending
+ ulab <#Extending-ulab>`__.
+ 
+ Supported functions and methods
+ ===============================
+ 
+ ``ulab`` supports a number of array operators, which are listed here. I
+ tried to follow the specifications of the ``numpy`` interface as closely
+ as possible, though, it was not always practical to implement verbatim
+ behaviour. The differences, if any, are in each case small (e.g., a
+ function cannot take all possible keyword arguments), and should not
+ hinder everyday use. In the list below, a single asterisk denotes slight
+ deviations from ``numpy``\ ’s nomenclature, and a double asterisk
+ denotes those cases, where a bit more caution should be exercised,
+ though this usually means functions that are not supported by ``numpy``.
+ 
+ The detailed discussion of the various functions always contains a link
+ to the corresponding ``numpy`` documentation. However, before going down
+ the rabbit hole, the module also defines a constant, the version, which
+ can always be queried as
+ 
+ .. code::
+         
+     # code to be run in micropython
+     
+     import ulab as np
+     
+     print('you are running ulab version', np.__version__)
+ 
+ .. parsed-literal::
+ 
+     you are running ulab version 0.40.0
+     
+     
+ 
+ 
+ If you find a bug, please, include this number in your report!
+ 
+ Basic ndarray operations
+ ------------------------
+ 
+ `Unary operators <#Unary-operators>`__
+ 
+ `Binary operators <#Binary-operators>`__
+ 
+ `Indexing and slicing <#Slicing-and-indexing>`__
+ 
+ `ndarray iterators <#Iterating-over-arrays>`__
+ 
+ `Comparison operators\* <#Comparison-operators>`__
+ 
+ `Universal functions <#Universal-functions>`__ (also support function
+ calls on general iterables, and vectorisation of user-defined ``python``
+ functions.)
+ 
+ Methods of ndarrays
+ -------------------
+ 
+ `.shape\* <#.shape>`__
+ 
+ `size\* <#size>`__
+ 
+ `itemsize\* <#itemsize>`__
+ 
+ `.reshape <#.reshape>`__
+ 
+ `.transpose <#.transpose>`__
+ 
+ `.flatten\*\* <#.flatten>`__
+ 
+ Matrix methods
+ --------------
+ 
+ `inv <#inv>`__
+ 
+ `dot <#dot>`__
+ 
+ `det <#det>`__
+ 
+ `roll <#roll>`__
+ 
+ `flip <#flip>`__
+ 
+ Array initialisation functions
+ ------------------------------
+ 
+ `eye <#eye>`__
+ 
+ `ones <#ones,-zeros>`__
+ 
+ `zeros <#ones,-zeros>`__
+ 
+ `linspace <#linspace>`__
+ 
+ Statistical and other properties of arrays
+ ------------------------------------------
+ 
+ `min <#min,-argmin,-max,-argmax>`__
+ 
+ `argmin <#min,-argmin,-max,-argmax>`__
+ 
+ `max <#min,-argmin,-max,-argmax>`__
+ 
+ `argmax <#min,-argmin,-max,-argmax>`__
+ 
+ `sum <#sum,-std,-mean>`__
+ 
+ `std <#sum,-std,-mean>`__
+ 
+ `mean <#sum,-std,-mean>`__
+ 
+ `diff <#diff>`__
+ 
+ `sort <#sort>`__
+ 
+ `argsort <#argsort>`__
+ 
+ Linear algebra functions
+ ------------------------
+ 
+ `size <#size>`__
+ 
+ `inv <#inv>`__
+ 
+ `dot <#dot>`__
+ 
+ `det <#det>`__
+ 
+ `eig <#eig>`__
+ 
+ `cholesky <#cholesky>`__
+ 
+ `trace <#trace>`__
+ 
+ Manipulation of polynomials
+ ---------------------------
+ 
+ `polyval <#polyval>`__
+ 
+ `polyfit <#polyfit>`__
+ 
+ FFT routines
+ ------------
+ 
+ `fft\*\* <#fft>`__
+ 
+ `ifft\*\* <#ifft>`__
+ 
+ `spectrogram\*\* <#spectrogram>`__
+ 
+ Filter functions
+ ----------------
+ 
+ `convolve <#convolve>`__
+ 
+ Comparison of arrays
+ --------------------
+ 
+ `equal <#equal,-not_equal>`__
+ 
+ `not_equal <#equal,-not_equal>`__
+ 
+ `minimum <#minimum>`__
+ 
+ `maximum <#maximum>`__
+ 
+ `clip <#clip>`__
+ 
+ Interpolation, root finding, function minimasation
+ --------------------------------------------------
+ 
+ `interp <#interp>`__
+ 
+ `newton <#newton>`__
+ 
+ `fmin <#fmin>`__
+ 
+ `bisect <#bisect>`__
+ 
+ ndarray, the basic container
+ ============================
+ 
+ The ``ndarray`` is the underlying container of numerical data. It is
+ derived from micropython’s own ``array`` object, but has a great number
+ of extra features starting with how it can be initialised, which
+ operations can be done on it, and which functions can accept it as an
+ argument. One important property of an ``ndarray`` is that it is also a
+ proper ``micropython`` iterable.
+ 
+ Since the ``ndarray`` is a binary container, it is also compact, meaning
+ that it takes only a couple of bytes of extra RAM in addition to what is
+ required for storing the numbers themselves. ``ndarray``\ s are also
+ type-aware, i.e., one can save RAM by specifying a data type, and using
+ the smallest reasonable one. Five such types are defined, namely
+ ``uint8``, ``int8``, which occupy a single byte of memory per datum,
+ ``uint16``, and ``int16``, which occupy two bytes per datum, and
+ ``float``, which occupies four or eight bytes per datum. The
+ precision/size of the ``float`` type depends on the definition of
+ ``mp_float_t``. Some platforms, e.g., the PYBD, implement ``double``\ s,
+ but some, e.g., the pyboard.v.11, don’t. You can find out, what type of
+ float your particular platform implements by looking at the output of
+ the `.itemsize <#.itemsize>`__ class property.
+ 
+ On the following pages, we will see how one can work with
+ ``ndarray``\ s. Those familiar with ``numpy`` should find that the
+ nomenclature and naming conventions of ``numpy`` are adhered to as
+ closely as possible. I will point out the few differences, where
+ necessary.
+ 
+ For the sake of comparison, in addition to the ``ulab`` code snippets,
+ sometimes the equivalent ``numpy`` code is also presented. You can find
+ out, where the snippet is supposed to run by looking at its first line,
+ the header.
+ 
+ Hint: you can easily port existing ``numpy`` code, if you
+ ``import ulab as np``.
+ 
+ Initialising an array
+ ---------------------
+ 
+ A new array can be created by passing either a standard micropython
+ iterable, or another ``ndarray`` into the constructor.
+ 
+ Initialising by passing iterables
+ ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
+ 
+ If the iterable is one-dimensional, i.e., one whose elements are
+ numbers, then a row vector will be created and returned. If the iterable
+ is two-dimensional, i.e., one whose elements are again iterables, a
+ matrix will be created. If the lengths of the iterables are not
+ consistent, a ``ValueError`` will be raised. Iterables of different
+ types can be mixed in the initialisation function.
+ 
+ If the ``dtype`` keyword with the possible
+ ``uint8/int8/uint16/int16/float`` values is supplied, the new
+ ``ndarray`` will have that type, otherwise, it assumes ``float`` as
+ default.
+ 
+ .. code::
+         
+     # code to be run in micropython
+     
+     import ulab as np
+     
+     a = [1, 2, 3, 4, 5, 6, 7, 8]
+     b = np.array(a)
+     
+     print("a:\t", a)
+     print("b:\t", b)
+     
+     # a two-dimensional array with mixed-type initialisers
+     c = np.array([range(5), range(20, 25, 1), [44, 55, 66, 77, 88]], dtype=np.uint8)
+     print("\nc:\t", c)
+     
+     # and now we throw an exception
+     d = np.array([range(5), range(10), [44, 55, 66, 77, 88]], dtype=np.uint8)
+     print("\nd:\t", d)
+ 
+ .. parsed-literal::
+ 
+     a:	 [1, 2, 3, 4, 5, 6, 7, 8]
+     b:	 array([1.0, 2.0, 3.0, 4.0, 5.0, 6.0, 7.0, 8.0], dtype=float)
+     
+     c:	 array([[0, 1, 2, 3, 4],
+     	 [20, 21, 22, 23, 24],
+     	 [44, 55, 66, 77, 88]], dtype=uint8)
+     
+     Traceback (most recent call last):
+       File "/dev/shm/micropython.py", line 15, in <module>
+     ValueError: iterables are not of the same length
+     
+ 
+ 
+ Initialising by passing arrays
+ ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
+ 
+ An ``ndarray`` can be initialised by supplying another array. This
+ statement is almost trivial, since ``ndarray``\ s are iterables
+ themselves, though it should be pointed out that initialising through
+ arrays is faster, because simply a new copy is created, without
+ inspection, iteration etc. It is also possible to coerce type conversion
+ of the output (with type conversion, the iteration cannot be avoided,
+ therefore, this case will always be slower than straight copying):
+ 
+ .. code::
+         
+     # code to be run in micropython
+     
+     import ulab as np
+     
+     a = [1, 2, 3, 4, 5, 6, 7, 8]
+     b = np.array(a)
+     c = np.array(b)
+     d = np.array(b, dtype=np.uint8)
+     
+     print("a:\t", a)
+     print("\nb:\t", b)
+     print("\nc:\t", c)
+     print("\nd:\t", d)
+ 
+ .. parsed-literal::
+ 
+     a:	 [1, 2, 3, 4, 5, 6, 7, 8]
+     
+     b:	 array([1.0, 2.0, 3.0, 4.0, 5.0, 6.0, 7.0, 8.0], dtype=float)
+     
+     c:	 array([1.0, 2.0, 3.0, 4.0, 5.0, 6.0, 7.0, 8.0], dtype=float)
+     
+     d:	 array([1, 2, 3, 4, 5, 6, 7, 8], dtype=uint8)
+     
+     
+ 
+ 
+ Note that the default type of the ``ndarray`` is ``float``. Hence, if
+ the array is initialised from another array, type conversion will always
+ take place, except, when the output type is specifically supplied. I.e.,
+ 
+ .. code::
+         
+     # code to be run in micropython
+     
+     import ulab as np
+     
+     a = np.array(range(5), dtype=np.uint8)
+     b = np.array(a)
+     print("a:\t", a)
+     print("\nb:\t", b)
+ 
+ .. parsed-literal::
+ 
+     a:	 array([0, 1, 2, 3, 4], dtype=uint8)
+     
+     b:	 array([0.0, 1.0, 2.0, 3.0, 4.0], dtype=float)
+     
+     
+ 
+ 
+ will iterate over the elements in ``a``, since in the assignment
+ ``b = np.array(a)`` no output type was given, therefore, ``float`` was
+ assumed. On the other hand,
+ 
+ .. code::
+         
+     # code to be run in micropython
+     
+     import ulab as np
+     
+     a = np.array(range(5), dtype=np.uint8)
+     b = np.array(a, dtype=np.uint8)
+     print("a:\t", a)
+     print("\nb:\t", b)
+ 
+ .. parsed-literal::
+ 
+     a:	 array([0, 1, 2, 3, 4], dtype=uint8)
+     
+     b:	 array([0, 1, 2, 3, 4], dtype=uint8)
+     
+     
+ 
+ 
+ will simply copy the content of ``a`` into ``b`` without any iteration,
+ and will, therefore, be faster. Keep this in mind, whenever the output
+ type, or performance is important.
+ 
+ Array initialisation functions
+ ------------------------------
+ 
+ There are four functions that can be used for initialising an array.
+ These are bound to ``ulab`` itself at the top level, i.e., no module has
+ to be imported for the function invocations.
+ 
+ ones, zeros
+ ~~~~~~~~~~~
+ 
+ ``numpy``:
+ https://docs.scipy.org/doc/numpy/reference/generated/numpy.zeros.html
+ 
+ ``numpy``:
+ https://docs.scipy.org/doc/numpy/reference/generated/numpy.ones.html
+ 
+ A couple of special arrays and matrices can easily be initialised by
+ calling one of the ``ones``, or ``zeros`` functions. ``ones`` and
+ ``zeros`` follow the same pattern, and have the call signature
+ 
+ .. code:: python
+ 
+    ones(shape, dtype=float)
+    zeros(shape, dtype=float)
+ 
+ where shape is either an integer, or a 2-tuple.
+ 
+ .. code::
+         
+     # code to be run in micropython
+     
+     import ulab as np
+     
+     print(np.ones(6, dtype=np.uint8))
+     print(np.zeros((6, 4)))
+ 
+ .. parsed-literal::
+ 
+     array([1, 1, 1, 1, 1, 1], dtype=uint8)
+     array([[0.0, 0.0, 0.0, 0.0],
+     	 [0.0, 0.0, 0.0, 0.0],
+     	 [0.0, 0.0, 0.0, 0.0],
+     	 [0.0, 0.0, 0.0, 0.0],
+     	 [0.0, 0.0, 0.0, 0.0],
+     	 [0.0, 0.0, 0.0, 0.0]], dtype=float)
+     
+     
+ 
+ 
+ eye
+ ~~~
+ 
+ ``numpy``:
+ https://docs.scipy.org/doc/numpy/reference/generated/numpy.eye.html
+ 
+ Another special array method is the ``eye`` function, whose call
+ signature is
+ 
+ .. code:: python
+ 
+    eye(N, M, k=0, dtype=float)
+ 
+ where ``N`` (``M``) specify the dimensions of the matrix (if only ``N``
+ is supplied, then we get a square matrix, otherwise one with ``M`` rows,
+ and ``N`` columns), and ``k`` is the shift of the ones (the main
+ diagonal corresponds to ``k=0``). Here are a couple of examples.
+ 
+ With a single argument
+ ^^^^^^^^^^^^^^^^^^^^^^
+ 
+ .. code::
+         
+     # code to be run in micropython
+     
+     import ulab as np
+     
+     print(np.eye(5))
+ 
+ .. parsed-literal::
+ 
+     array([[1.0, 0.0, 0.0, 0.0, 0.0],
+     	 [0.0, 1.0, 0.0, 0.0, 0.0],
+     	 [0.0, 0.0, 1.0, 0.0, 0.0],
+     	 [0.0, 0.0, 0.0, 1.0, 0.0],
+     	 [0.0, 0.0, 0.0, 0.0, 1.0]], dtype=float)
+     
+     
+ 
+ 
+ Specifying the dimensions of the matrix
+ ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
+ 
+ .. code::
+ 
+     # code to be run in CPython
+     
+     ### Shifting the diagonal
+     
+     %%micropython -unix 1
+     
+     import ulab as np
+     
+     print(np.eye(4, M=6, k=-1, dtype=np.int16))
+ 
+ .. parsed-literal::
+ 
+     array([[0, 0, 0, 0],
+     	 [1, 0, 0, 0],
+     	 [0, 1, 0, 0],
+     	 [0, 0, 1, 0],
+     	 [0, 0, 0, 1],
+     	 [0, 0, 0, 0]], dtype=int16)
+     
+     
+ 
+ 
+ .. code::
+         
+     # code to be run in micropython
+     
+     import ulab as np
+     
+     print(np.eye(4, M=6, dtype=np.int8))
+ 
+ .. parsed-literal::
+ 
+     array([[1, 0, 0, 0],
+     	 [0, 1, 0, 0],
+     	 [0, 0, 1, 0],
+     	 [0, 0, 0, 1],
+     	 [0, 0, 0, 0],
+     	 [0, 0, 0, 0]], dtype=int8)
+     
+     
+ 
+ 
+ linspace
+ ~~~~~~~~
+ 
+ ``numpy``:
+ https://docs.scipy.org/doc/numpy/reference/generated/numpy.linspace.html
+ 
+ This function returns an array, whose elements are uniformly spaced
+ between the ``start``, and ``stop`` points. The number of intervals is
+ determined by the ``num`` keyword argument, whose default value is 50.
+ With the ``endpoint`` keyword argument (defaults to ``True``) one can
+ include ``stop`` in the sequence. In addition, the ``dtype`` keyword can
+ be supplied to force type conversion of the output. The default is
+ ``float``. Note that, when ``dtype`` is of integer type, the sequence is
+ not necessarily evenly spaced. This is not an error, rather a
+ consequence of rounding. (This is also the ``numpy`` behaviour.)
+ 
+ .. code::
+         
+     # code to be run in micropython
+     
+     import ulab as np
+     
+     # generate a sequence with defaults
+     print('default sequence:\t', np.linspace(0, 10))
+     
+     # num=5
+     print('num=5:\t\t\t', np.linspace(0, 10, num=5))
+     
+     # num=5, endpoint=False
+     print('num=5:\t\t\t', np.linspace(0, 10, num=5, endpoint=False))
+     
+     # num=5, endpoint=False, dtype=uint8
+     print('num=5:\t\t\t', np.linspace(0, 5, num=7, endpoint=False, dtype=np.uint8))
+ 
+ .. parsed-literal::
+ 
+     default sequence:	 array([0.0, 0.2040816396474838, 0.4081632792949677, ..., 9.591833114624023, 9.795914649963379, 9.999996185302734], dtype=float)
+     num=5:			 array([0.0, 2.5, 5.0, 7.5, 10.0], dtype=float)
+     num=5:			 array([0.0, 2.0, 4.0, 6.0, 8.0], dtype=float)
+     num=5:			 array([0, 0, 1, 2, 2, 3, 4], dtype=uint8)
+     
+     
+ 
+ 
+ Customising array printouts
+ ---------------------------
+ 
+ ``ndarray``\ s are pretty-printed, i.e., if the length is larger than 10
+ (default value), then only the first and last three entries will be
+ printed. Also note that, as opposed to ``numpy``, the printout always
+ contains the ``dtype``.
+ 
+ .. code::
+         
+     # code to be run in micropython
+     
+     import ulab as np
+     
+     a = np.array(range(200))
+     print("a:\t", a)
+ 
+ .. parsed-literal::
+ 
+     a:	 array([0.0, 1.0, 2.0, ..., 197.0, 198.0, 199.0], dtype=float)
+     
+     
+ 
+ 
+ set_printoptions
+ ~~~~~~~~~~~~~~~~
+ 
+ The default values can be overwritten by means of the
+ ``set_printoptions`` function
+ `numpy.set_printoptions <https://numpy.org/doc/1.18/reference/generated/numpy.set_printoptions.html>`__,
+ which accepts two keywords arguments, the ``threshold``, and the
+ ``edgeitems``. The first of these arguments determines the length of the
+ longest array that will be printed in full, while the second is the
+ number of items that will be printed on the left and right hand side of
+ the ellipsis, if the array is longer than ``threshold``.
+ 
+ .. code::
+         
+     # code to be run in micropython
+     
+     import ulab as np
+     
+     a = np.array(range(20))
+     print("a printed with defaults:\t", a)
+     
+     np.set_printoptions(threshold=200)
+     print("\na printed in full:\t\t", a)
+     
+     np.set_printoptions(threshold=10, edgeitems=2)
+     print("\na truncated with 2 edgeitems:\t", a)
+ 
+ .. parsed-literal::
+ 
+     a printed with defaults:	 array([0.0, 1.0, 2.0, ..., 17.0, 18.0, 19.0], dtype=float)
+     
+     a printed in full:		 array([0.0, 1.0, 2.0, 3.0, 4.0, 5.0, 6.0, 7.0, 8.0, 9.0, 10.0, 11.0, 12.0, 13.0, 14.0, 15.0, 16.0, 17.0, 18.0, 19.0], dtype=float)
+     
+     a truncated with 2 edgeitems:	 array([0.0, 1.0, ..., 18.0, 19.0], dtype=float)
+     
+     
+ 
+ 
+ get_printoptions
+ ~~~~~~~~~~~~~~~~
+ 
+ The set value of the ``threshold`` and ``edgeitems`` can be retrieved by
+ calling the ``get_printoptions`` function with no arguments. The
+ function returns a dictionary with two keys.
+ 
+ .. code::
+         
+     # code to be run in micropython
+     
+     import ulab as np
+     
+     np.set_printoptions(threshold=100, edgeitems=20)
+     print(np.get_printoptions())
+ 
+ .. parsed-literal::
+ 
+     {'threshold': 100, 'edgeitems': 20}
+     
+     
+ 
+ 
+ Methods of ndarrays
+ -------------------
+ 
+ .shape
+ ~~~~~~
+ 
+ The ``.shape`` method (property) returns a 2-tuple with the number of
+ rows, and columns.
+ 
+ **WARNING:** In ``circuitpython``, you can call the method as a
+ property, i.e.,
+ 
+ .. code::
+         
+     # code to be run in micropython
+     
+     import ulab as np
+     
+     a = np.array([1, 2, 3, 4], dtype=np.int8)
+     print("a:\n", a)
+     print("shape of a:", a.shape)
+     
+     b= np.array([[1, 2], [3, 4]], dtype=np.int8)
+     print("\nb:\n", b)
+     print("shape of b:", b.shape)
+ 
+ .. parsed-literal::
+ 
+     a:
+      array([1, 2, 3, 4], dtype=int8)
+     shape of a: (1, 4)
+     
+     b:
+      array([[1, 2],
+     	 [3, 4]], dtype=int8)
+     shape of b: (2, 2)
+     
+     
+ 
+ 
+ **WARNING:** On the other hand, since properties are not implemented in
+ ``micropython``, there you would call the method as a function, i.e.,
+ 
+ .. code::
+         
+     # code to be run in micropython
+     
+     import ulab as np
+     
+     a = np.array([1, 2, 3, 4], dtype=np.int8)
+     print("a:\n", a)
+     print("shape of a:", a.shape)
+     
+     b= np.array([[1, 2], [3, 4]], dtype=np.int8)
+     print("\nb:\n", b)
+     print("shape of b:", b.shape())
+ 
+ .. parsed-literal::
+ 
+     a:
+      array([1, 2, 3, 4], dtype=int8)
+     shape of a: (1, 4)
+     
+     b:
+      array([[1, 2],
+     	 [3, 4]], dtype=int8)
+     shape of b: (2, 2)
+     
+     
+ 
+ 
+ .size
+ ~~~~~
+ 
+ The ``.size`` method (property) returns an integer with the number of
+ elements in the array.
+ 
+ **WARNING:** In ``circuitpython``, the ``numpy`` nomenclature applies,
+ i.e.,
+ 
+ .. code::
+         
+     # code to be run in micropython
+     
+     import ulab as np
+     
+     a = np.array([1, 2, 3], dtype=np.int8)
+     print("a:\n", a)
+     print("size of a:", a.size)
+     
+     b= np.array([[1, 2], [3, 4]], dtype=np.int8)
+     print("\nb:\n", b)
+     print("size of b:", b.size)
+ 
+ .. parsed-literal::
+ 
+     a:
+      array([1, 2, 3], dtype=int8)
+     size of a: 3
+     
+     b:
+      array([[1, 2],
+     	 [3, 4]], dtype=int8)
+     size of b: 4
+     
+     
+ 
+ 
+ **WARNING:** In ``micropython``, ``size`` is a method, i.e.,
+ 
+ .. code::
+         
+     # code to be run in micropython
+     
+     import ulab as np
+     
+     a = np.array([1, 2, 3], dtype=np.int8)
+     print("a:\n", a)
+     print("size of a:", a.size)
+     
+     b= np.array([[1, 2], [3, 4]], dtype=np.int8)
+     print("\nb:\n", b)
+     print("size of b:", b.size())
+ 
+ .. parsed-literal::
+ 
+     a:
+      array([1, 2, 3], dtype=int8)
+     size of a: 3
+     
+     b:
+      array([[1, 2],
+     	 [3, 4]], dtype=int8)
+     size of b: 4
+     
+     
+ 
+ 
+ .itemsize
+ ~~~~~~~~~
+ 
+ The ``.itemsize`` method (property) returns an integer with the siz
+ enumber of elements in the array.
+ 
+ **WARNING:** In ``circuitpython``:
+ 
+ .. code::
+         
+     # code to be run in micropython
+     
+     import ulab as np
+     
+     a = np.array([1, 2, 3], dtype=np.int8)
+     print("a:\n", a)
+     print("itemsize of a:", a.itemsize)
+     
+     b= np.array([[1, 2], [3, 4]], dtype=np.float)
+     print("\nb:\n", b)
+     print("itemsize of b:", b.itemsize)
+ 
+ .. parsed-literal::
+ 
+     a:
+      array([1, 2, 3], dtype=int8)
+     itemsize of a: 1
+     
+     b:
+      array([[1.0, 2.0],
+     	 [3.0, 4.0]], dtype=float)
+     itemsize of b: 8
+     
+     
+ 
+ 
+ **WARNING:** In ``micropython``:
+ 
+ .. code::
+         
+     # code to be run in micropython
+     
+     import ulab as np
+     
+     a = np.array([1, 2, 3], dtype=np.int8)
+     print("a:\n", a)
+     print("itemsize of a:", a.itemsize)
+     
+     b= np.array([[1, 2], [3, 4]], dtype=np.float)
+     print("\nb:\n", b)
+     print("itemsize of b:", b.itemsize())
+ 
+ .. parsed-literal::
+ 
+     a:
+      array([1, 2, 3], dtype=int8)
+     itemsize of a: 1
+     
+     b:
+      array([[1.0, 2.0],
+     	 [3.0, 4.0]], dtype=float)
+     itemsize of b: 8
+     
+     
+ 
+ 
+ .reshape
+ ~~~~~~~~
+ 
+ ``numpy``:
+ https://docs.scipy.org/doc/numpy/reference/generated/numpy.reshape.html
+ 
+ ``reshape`` re-writes the shape properties of an ``ndarray``, but the
+ array will not be modified in any other way. The function takes a single
+ 2-tuple with two integers as its argument. The 2-tuple should specify
+ the desired number of rows and columns. If the new shape is not
+ consistent with the old, a ``ValueError`` exception will be raised.
+ 
+ .. code::
+         
+     # code to be run in micropython
+     
+     import ulab as np
+     
+     a = np.array([[1, 2, 3, 4], [5, 6, 7, 8], [9, 10, 11, 12], [13, 14, 15, 16]], dtype=np.uint8)
+     print('a (4 by 4):', a)
+     print('a (2 by 8):', a.reshape((2, 8)))
+     print('a (1 by 16):', a.reshape((1, 16)))
+ 
+ .. parsed-literal::
+ 
+     a (4 by 4): array([[1, 2, 3, 4],
+     	 [5, 6, 7, 8],
+     	 [9, 10, 11, 12],
+     	 [13, 14, 15, 16]], dtype=uint8)
+     a (2 by 8): array([[1, 2, 3, 4, 5, 6, 7, 8],
+     	 [9, 10, 11, 12, 13, 14, 15, 16]], dtype=uint8)
+     a (1 by 16): array([1, 2, 3, ..., 14, 15, 16], dtype=uint8)
+     
+     
+ 
+ 
+ .flatten
+ ~~~~~~~~
+ 
+ ``numpy``:
+ https://docs.scipy.org/doc/numpy/reference/generated/numpy.ndarray.flatten.htm
+ 
+ ``.flatten`` returns the flattened array. The array can be flattened in
+ ``C`` style (i.e., moving horizontally in the matrix), or in ``fortran``
+ style (i.e., moving vertically in the matrix). The ``C``-style
+ flattening is the default, and it is also fast, because this is just a
+ verbatim copy of the contents.
+ 
+ .. code::
+         
+     # code to be run in micropython
+     
+     import ulab as np
+     
+     a = np.array([1, 2, 3, 4], dtype=np.int8)
+     print("a: \t\t", a)
+     print("a flattened: \t", a.flatten())
+     
+     b = np.array([[1, 2, 3], [4, 5, 6]], dtype=np.int8)
+     print("\nb:", b)
+     
+     print("b flattened (C): \t", b.flatten())
+     print("b flattened (F): \t", b.flatten(order='F'))
+ 
+ .. parsed-literal::
+ 
+     a: 		 array([1, 2, 3, 4], dtype=int8)
+     a flattened: 	 array([1, 2, 3, 4], dtype=int8)
+     
+     b: array([[1, 2, 3],
+     	 [4, 5, 6]], dtype=int8)
+     b flattened (C): 	 array([1, 2, 3, 4, 5, 6], dtype=int8)
+     b flattened (F): 	 array([1, 4, 2, 5, 3, 6], dtype=int8)
+     
+     
+ 
+ 
+ .transpose
+ ~~~~~~~~~~
+ 
+ ``numpy``:
+ https://docs.scipy.org/doc/numpy/reference/generated/numpy.transpose.html
+ 
+ .. code::
+         
+     # code to be run in micropython
+     
+     import ulab as np
+     
+     a = np.array([[1, 2, 3], [4, 5, 6], [7, 8, 9], [10, 11, 12]], dtype=np.uint8)
+     print('a:\n', a)
+     print('shape of a:', a.shape())
+     a.transpose()
+     print('\ntranspose of a:\n', a)
+     print('shape of a:', a.shape())
+ 
+ .. parsed-literal::
+ 
+     a:
+      array([[1, 2, 3],
+     	 [4, 5, 6],
+     	 [7, 8, 9],
+     	 [10, 11, 12]], dtype=uint8)
+     shape of a: (4, 3)
+     
+     transpose of a:
+      array([[1, 4, 7, 10],
+     	 [2, 5, 8, 11],
+     	 [3, 6, 9, 12]], dtype=uint8)
+     shape of a: (3, 4)
+     
+     
+ 
+ 
+ .sort
+ ~~~~~
+ 
+ ``numpy``:
+ https://docs.scipy.org/doc/numpy/reference/generated/numpy.sort.html
+ 
+ In-place sorting of an ``ndarray``. For a more detailed exposition, see
+ `sort <#sort>`__.
+ 
+ .. code::
+         
+     # code to be run in micropython
+     
+     import ulab as np
+     
+     a = np.array([[1, 12, 3, 0], [5, 3, 4, 1], [9, 11, 1, 8], [7, 10, 0, 1]], dtype=np.uint8)
+     print('\na:\n', a)
+     a.sort(axis=0)
+     print('\na sorted along vertical axis:\n', a)
+     
+     a = np.array([[1, 12, 3, 0], [5, 3, 4, 1], [9, 11, 1, 8], [7, 10, 0, 1]], dtype=np.uint8)
+     a.sort(a, axis=1)
+     print('\na sorted along horizontal axis:\n', a)
+     
+     a = np.array([[1, 12, 3, 0], [5, 3, 4, 1], [9, 11, 1, 8], [7, 10, 0, 1]], dtype=np.uint8)
+     a.sort(a, axis=None)
+     print('\nflattened a sorted:\n', a)
+ 
+ .. parsed-literal::
+ 
+     
+     a:
+      array([[1, 12, 3, 0],
+     	 [5, 3, 4, 1],
+     	 [9, 11, 1, 8],
+     	 [7, 10, 0, 1]], dtype=uint8)
+     
+     a sorted along vertical axis:
+      array([[1, 3, 0, 0],
+     	 [5, 10, 1, 1],
+     	 [7, 11, 3, 1],
+     	 [9, 12, 4, 8]], dtype=uint8)
+     
+     a sorted along horizontal axis:
+      array([[0, 1, 3, 12],
+     	 [1, 3, 4, 5],
+     	 [1, 8, 9, 11],
+     	 [0, 1, 7, 10]], dtype=uint8)
+     
+     flattened a sorted:
+      array([0, 0, 1, ..., 10, 11, 12], dtype=uint8)
+     
+     
+ 
+ 
+ Unary operators
+ ---------------
+ 
+ With the exception of ``len``, which returns a single number, all unary
+ operators manipulate the underlying data element-wise.
+ 
+ len
+ ~~~
+ 
+ This operator takes a single argument, and returns either the length
+ (for row vectors), or the number of rows (for matrices) of its argument.
+ 
+ .. code::
+         
+     # code to be run in micropython
+     
+     import ulab as np
+     
+     a = np.array([1, 2, 3, 4, 5], dtype=np.uint8)
+     b = np.array([range(5), range(5), range(5), range(5)], dtype=np.uint8)
+     
+     print("a:\t", a)
+     print("length of a: ", len(a))
+     print("shape of a: ", a.shape())
+     print("\nb:\t", b)
+     print("length of b: ", len(b))
+     print("shape of b: ", b.shape())
+ 
+ .. parsed-literal::
+ 
+     a:	 array([1, 2, 3, 4, 5], dtype=uint8)
+     length of a:  5
+     shape of a:  (1, 5)
+     
+     b:	 array([[0, 1, 2, 3, 4],
+     	 [0, 1, 2, 3, 4],
+     	 [0, 1, 2, 3, 4],
+     	 [0, 1, 2, 3, 4]], dtype=uint8)
+     length of b:  4
+     shape of b:  (4, 5)
+     
+     
+ 
+ 
+ The number returned by ``len`` is also the length of the iterations,
+ when the array supplies the elements for an iteration (see later).
+ 
+ invert
+ ~~~~~~
+ 
+ The function is defined for integer data types (``uint8``, ``int8``,
+ ``uint16``, and ``int16``) only, takes a single argument, and returns
+ the element-by-element, bit-wise inverse of the array. If a ``float`` is
+ supplied, the function raises a ``ValueError`` exception.
+ 
+ With signed integers (``int8``, and ``int16``), the results might be
+ unexpected, as in the example below:
+ 
+ .. code::
+         
+     # code to be run in micropython
+     
+     import ulab as np
+     
+     a = np.array([0, -1, -100], dtype=np.int8)
+     print("a:\t\t", a)
+     print("inverse of a:\t", ~a)
+     
+     a = np.array([0, 1, 254, 255], dtype=np.uint8)
+     print("\na:\t\t", a)
+     print("inverse of a:\t", ~a)
+ 
+ .. parsed-literal::
+ 
+     a:		 array([0, -1, -100], dtype=int8)
+     inverse of a:	 array([-1, 0, 99], dtype=int8)
+     
+     a:		 array([0, 1, 254, 255], dtype=uint8)
+     inverse of a:	 array([255, 254, 1, 0], dtype=uint8)
+     
+     
+ 
+ 
+ abs
+ ~~~
+ 
+ This function takes a single argument, and returns the
+ element-by-element absolute value of the array. When the data type is
+ unsigned (``uint8``, or ``uint16``), a copy of the array will be
+ returned immediately, and no calculation takes place.
+ 
+ .. code::
+         
+     # code to be run in micropython
+     
+     import ulab as np
+     
+     a = np.array([0, -1, -100], dtype=np.int8)
+     print("a:\t\t\t ", a)
+     print("absolute value of a:\t ", abs(a))
+ 
+ .. parsed-literal::
+ 
+     a:			  array([0, -1, -100], dtype=int8)
+     absolute value of a:	  array([0, 1, 100], dtype=int8)
+     
+     
+ 
+ 
+ neg
+ ~~~
+ 
+ This operator takes a single argument, and changes the sign of each
+ element in the array. Unsigned values are wrapped.
+ 
+ .. code::
+         
+     # code to be run in micropython
+     
+     import ulab as np
+     
+     a = np.array([10, -1, 1], dtype=np.int8)
+     print("a:\t\t", a)
+     print("negative of a:\t", -a)
+     
+     b = np.array([0, 100, 200], dtype=np.uint8)
+     print("\nb:\t\t", b)
+     print("negative of b:\t", -b)
+ 
+ .. parsed-literal::
+ 
+     a:		 array([10, -1, 1], dtype=int8)
+     negative of a:	 array([-10, 1, -1], dtype=int8)
+     
+     b:		 array([0, 100, 200], dtype=uint8)
+     negative of b:	 array([0, 156, 56], dtype=uint8)
+     
+     
+ 
+ 
+ pos
+ ~~~
+ 
+ This function takes a single argument, and simply returns a copy of the
+ array.
+ 
+ .. code::
+         
+     # code to be run in micropython
+     
+     import ulab as np
+     
+     a = np.array([10, -1, 1], dtype=np.int8)
+     print("a:\t\t", a)
+     print("positive of a:\t", +a)
+ 
+ .. parsed-literal::
+ 
+     a:		 array([10, -1, 1], dtype=int8)
+     positive of a:	 array([10, -1, 1], dtype=int8)
+     
+     
+ 
+ 
+ Binary operators
+ ----------------
+ 
+ ``ulab`` implements the ``+``, ``-``, ``*``, ``/``, ``**``, ``<``,
+ ``>``, ``<=``, ``>=``, ``==``, ``!=`` binary operators that work
+ element-wise. Partial broadcasting is available, meaning that the
+ operands either must have the same shape, or one of them must be a
+ scalar.
+ 
+ The operators raise a ``ValueError`` exception, if partial broadcasting
+ is not possible. The only exceptions are the ``==`` and ``!=`` operators
+ that will return ``False`` in this case.
+ 
+ **WARNING**: note that relational operators (``<``, ``>``, ``<=``,
+ ``>=``, ``==``, ``!=``) should have the ``ndarray`` on their left hand
+ side, when compared to scalars. This means that the following works
+ 
+ .. code::
+         
+     # code to be run in micropython
+     
+     import ulab
+     a = ulab.array([1, 2, 3])
+     print(a > 2)
+ 
+ .. parsed-literal::
+ 
+     [False, False, True]
+     
+     
+ 
+ 
+ while the equivalent statement, ``2 < a``, will raise a ``TypeError``
+ exception:
+ 
+ .. code::
+         
+     # code to be run in micropython
+     
+     import ulab
+     a = ulab.array([1, 2, 3])
+     print(2 < a)
+ 
+ .. parsed-literal::
+ 
+     
+     Traceback (most recent call last):
+       File "/dev/shm/micropython.py", line 4, in <module>
+     TypeError: unsupported types for __lt__: 'int', 'ndarray'
+     
+ 
+ 
+ **WARNING:** ``numpy`` also allows operations between a matrix, and a
+ row vector, if the row vector has exactly as many elements, as many
+ columns the matrix has. This feature will be added in future versions of
+ ``ulab``.
+ 
+ .. code::
+ 
+     # code to be run in CPython
+     
+     a = array([[1, 2, 3], [4, 5, 6], [7, 8, 6]])
+     b = array([10, 20, 30])
+     a+b
+ 
+ 
+ 
+ .. parsed-literal::
+ 
+     array([[11, 22, 33],
+            [14, 25, 36],
+            [17, 28, 36]])
+ 
+ 
+ 
+ **WARNING:** ``circuitpython`` users should use the ``equal``, and
+ ``not_equal`` operators instead of ``==``, and ``!=``. See the section
+ on `array comparison <#Comparison-of-arrays>`__ for details.
+ 
+ Upcasting
+ ~~~~~~~~~
+ 
+ Binary operations require special attention, because two arrays with
+ different typecodes can be the operands of an operation, in which case
+ it is not trivial, what the typecode of the result is. This decision on
+ the result’s typecode is called upcasting. Since the number of typecodes
+ in ``ulab`` is significantly smaller than in ``numpy``, we have to
+ define new upcasting rules. Where possible, I followed ``numpy``\ ’s
+ conventions.
+ 
+ ``ulab`` observes the following upcasting rules:
+ 
+ 1. Operations with two ``ndarray``\ s of the same ``dtype`` preserve
+    their ``dtype``, even when the results overflow.
+ 
+ 2. if either of the operands is a float, the result is automatically a
+    float
+ 
+ 3. When the right hand side of a binary operator is a micropython
+    variable, ``mp_obj_int``, or ``mp_obj_float``, then the result will
+    be promoted to ``dtype`` ``float``. This is necessary, because a
+    micropython integer can be 31 bites wide. Other micropython types
+    (e.g., lists, tuples, etc.) raise a ``TypeError`` exception.
+ 
+ 4. 
+ 
+ ============== =============== =========== ============
+ left hand side right hand side ulab result numpy result
+ ============== =============== =========== ============
+ ``uint8``      ``int8``        ``int16``   ``int16``
+ ``uint8``      ``int16``       ``int16``   ``int16``
+ ``uint8``      ``uint16``      ``uint16``  ``uint16``
+ ``int8``       ``int16``       ``int16``   ``int16``
+ ``int8``       ``uint16``      ``uint16``  ``int32``
+ ``uint16``     ``int16``       ``float``   ``int32``
+ ============== =============== =========== ============
+ 
+ Note that the last two operations are promoted to ``int32`` in
+ ``numpy``.
+ 
+ **WARNING:** Due to the lower number of available data types, the
+ upcasting rules of ``ulab`` are slightly different to those of
+ ``numpy``. Watch out for this, when porting code!
+ 
+ When one of the operands is a scalar, it will internally be turned into
+ a single-element ``ndarray`` with the *smallest* possible ``dtype``.
+ Thus, e.g., if the scalar is 123, it will be converted to an array of
+ ``dtype`` ``uint8``.
+ 
+ Upcasting can be seen in action in the following snippet:
+ 
+ .. code::
+         
+     # code to be run in micropython
+     
+     import ulab as np
+     
+     a = np.array([1, 2, 3, 4], dtype=np.uint8)
+     b = np.array([1, 2, 3, 4], dtype=np.int8)
+     print("a:\t", a)
+     print("b:\t", b)
+     print("a+b:\t", a+b)
+     
+     c = np.array([1, 2, 3, 4], dtype=np.float)
+     print("\na:\t", a)
+     print("c:\t", c)
+     print("a*c:\t", a*c)
+ 
+ .. parsed-literal::
+ 
+     a:	 array([1, 2, 3, 4], dtype=uint8)
+     b:	 array([1, 2, 3, 4], dtype=int8)
+     a+b:	 array([2, 4, 6, 8], dtype=int16)
+     
+     a:	 array([1, 2, 3, 4], dtype=uint8)
+     c:	 array([1.0, 2.0, 3.0, 4.0], dtype=float)
+     a*c:	 array([1.0, 4.0, 9.0, 16.0], dtype=float)
+     
+     
+ 
+ 
+ Benchmarks
+ ~~~~~~~~~~
+ 
+ The following snippet compares the performance of binary operations to a
+ possible implementation in python. For the time measurement, we will
+ take the following snippet from the micropython manual:
+ 
+ .. code::
+         
+     # code to be run in micropython
+     
+     import utime
+     
+     def timeit(f, *args, **kwargs):
+         func_name = str(f).split(' ')[1]
+         def new_func(*args, **kwargs):
+             t = utime.ticks_us()
+             result = f(*args, **kwargs)
+             print('execution time: ', utime.ticks_diff(utime.ticks_us(), t), ' us')
+             return result
+         return new_func
+ 
+ .. parsed-literal::
+ 
+     
+ 
+ 
+ .. code::
+         
+     # code to be run in micropython
+     
+     import ulab as np
+     
+     @timeit
+     def py_add(a, b):
+         return [a[i]+b[i] for i in range(1000)]
+     
+     @timeit
+     def py_multiply(a, b):
+         return [a[i]*b[i] for i in range(1000)]
+     
+     @timeit
+     def ulab_add(a, b):
+         return a + b
+     
+     @timeit
+     def ulab_multiply(a, b):
+         return a * b
+     
+     a = [0.0]*1000
+     b = range(1000)
+     
+     print('python add:')
+     py_add(a, b)
+     
+     print('\npython multiply:')
+     py_multiply(a, b)
+     
+     a = np.linspace(0, 10, num=1000)
+     b = np.ones(1000)
+     
+     print('\nulab add:')
+     ulab_add(a, b)
+     
+     print('\nulab multiply:')
+     ulab_multiply(a, b)
+ 
+ .. parsed-literal::
+ 
+     python add:
+     execution time:  10051  us
+     
+     python multiply:
+     execution time:  14175  us
+     
+     ulab add:
+     execution time:  222  us
+     
+     ulab multiply:
+     execution time:  213  us
+     
+ 
+ 
+ I do not claim that the python implementation above is perfect, and
+ certainly, there is much room for improvement. However, the factor of 50
+ difference in execution time is very spectacular. This is nothing but a
+ consequence of the fact that the ``ulab`` functions run ``C`` code, with
+ very little python overhead. The factor of 50 appears to be quite
+ universal: the FFT routine obeys similar scaling (see `Speed of
+ FFTs <#Speed-of-FFTs>`__), and this number came up with font rendering,
+ too: `fast font rendering on graphical
+ displays <https://forum.micropython.org/viewtopic.php?f=15&t=5815&p=33362&hilit=ufont#p33383>`__.
+ 
+ Comparison operators
+ --------------------
+ 
+ The smaller than, greater than, smaller or equal, and greater or equal
+ operators return a vector of Booleans indicating the positions
+ (``True``), where the condition is satisfied.
+ 
+ .. code::
+         
+     # code to be run in micropython
+     
+     import ulab as np
+     
+     a = np.array([1, 2, 3, 4, 5, 6, 7, 8], dtype=np.uint8)
+     print(a < 5)
+ 
+ .. parsed-literal::
+ 
+     [True, True, True, True, False, False, False, False]
+     
+     
+ 
+ 
+ **WARNING**: at the moment, due to implementation details, the
+ ``ndarray`` must be on the left hand side of the relational operators.
+ This will change in a future version of ``ulab``.
+ 
+ That is, while ``a < 5`` and ``5 > a`` have the same meaning, the
+ following code will not work:
+ 
+ .. code::
+         
+     # code to be run in micropython
+     
+     import ulab as np
+     
+     a = np.array([1, 2, 3, 4, 5, 6, 7, 8], dtype=np.uint8)
+     print(5 > a)
+ 
+ .. parsed-literal::
+ 
+     
+     Traceback (most recent call last):
+       File "/dev/shm/micropython.py", line 5, in <module>
+     TypeError: unsupported types for __gt__: 'int', 'ndarray'
+     
+ 
+ 
+ **WARNING:** Note that ``numpy`` returns an array of Booleans. For most
+ use cases this fact should not make a difference.
+ 
+ .. code::
+ 
+     # code to be run in CPython
+     
+     a = array([1, 2, 3, 4, 5, 6, 7, 8])
+     a < 5
+ 
+ 
+ 
+ .. parsed-literal::
+ 
+     array([ True,  True,  True,  True, False, False, False, False])
+ 
+ 
+ 
+ These operators work with matrices, too, in which case a list of lists
+ of Booleans will be returned:
+ 
+ .. code::
+         
+     # code to be run in micropython
+     
+     import ulab as np
+     
+     a = np.array([range(0, 5, 1), range(1, 6, 1), range(2, 7, 1)], dtype=np.uint8)
+     print(a)
+     print(a < 5)
+ 
+ .. parsed-literal::
+ 
+     array([[0, 1, 2, 3, 4],
+     	 [1, 2, 3, 4, 5],
+     	 [2, 3, 4, 5, 6]], dtype=uint8)
+     [[True, True, True, True, True], [True, True, True, True, False], [True, True, True, False, False]]
+     
+     
+ 
+ 
+ Iterating over arrays
+ ---------------------
+ 
+ ``ndarray``\ s are iterable, which means that their elements can also be
+ accessed as can the elements of a list, tuple, etc. If the array is
+ one-dimensional, the iterator returns scalars, otherwise a new
+ one-dimensional ``ndarray``, which is simply a copy of the corresponding
+ row of the matrix, i.e, its data type will be inherited.
+ 
+ .. code::
+         
+     # code to be run in micropython
+     
+     import ulab as np
+     
+     a = np.array([1, 2, 3, 4, 5], dtype=np.uint8)
+     b = np.array([range(5), range(10, 15, 1), range(20, 25, 1), range(30, 35, 1)], dtype=np.uint8)
+     
+     print("a:\t", a)
+     
+     for i, _a in enumerate(a):
+         print("element %d in a:"%i, _a)
+         
+     print("\nb:\t", b)
+     
+     for i, _b in enumerate(b):
+         print("element %d in b:"%i, _b)
+ 
+ .. parsed-literal::
+ 
+     a:	 array([1, 2, 3, 4, 5], dtype=uint8)
+     element 0 in a: 1
+     element 1 in a: 2
+     element 2 in a: 3
+     element 3 in a: 4
+     element 4 in a: 5
+     
+     b:	 array([[0, 1, 2, 3, 4],
+     	 [10, 11, 12, 13, 14],
+     	 [20, 21, 22, 23, 24],
+     	 [30, 31, 32, 33, 34]], dtype=uint8)
+     element 0 in b: array([0, 1, 2, 3, 4], dtype=uint8)
+     element 1 in b: array([10, 11, 12, 13, 14], dtype=uint8)
+     element 2 in b: array([20, 21, 22, 23, 24], dtype=uint8)
+     element 3 in b: array([30, 31, 32, 33, 34], dtype=uint8)
+     
+     
+ 
+ 
+ Slicing and indexing
+ --------------------
+ 
+ Copies of sub-arrays can be created by indexing, and slicing.
+ 
+ Indexing
+ ~~~~~~~~
+ 
+ The simplest form of indexing is specifying a single integer between the
+ square brackets as in
+ 
+ .. code::
+         
+     # code to be run in micropython
+     
+     import ulab as np
+     
+     a = np.array(range(10), dtype=np.uint8)
+     print("a:\t\t\t\t\t\t", a)
+     print("the first, and first from right element of a:\t", a[0], a[-1])
+     print("the second, and second from right element of a:\t", a[1], a[-2])
+ 
+ .. parsed-literal::
+ 
+     a:						 array([0, 1, 2, ..., 7, 8, 9], dtype=uint8)
+     the first, and first from right element of a:	 0 9
+     the second, and second from right element of a:	 1 8
+     
+     
+ 
+ 
+ Indices are (not necessarily non-negative) integers, or a list of
+ Booleans. By using a Boolean list, we can select those elements of an
+ array that satisfy a specific condition. At the moment, such indexing is
+ defined for row vectors only, for matrices the function raises a
+ ``ValueError`` exception, though this will be rectified in a future
+ version of ``ulab``.
+ 
+ .. code::
+         
+     # code to be run in micropython
+     
+     import ulab as np
+     
+     a = np.array(range(9), dtype=np.float)
+     print("a:\t", a)
+     print("a < 5:\t", a[a < 5])
+ 
+ .. parsed-literal::
+ 
+     a:	 array([0.0, 1.0, 2.0, 3.0, 4.0, 5.0, 6.0, 7.0, 8.0], dtype=float)
+     a < 5:	 array([0.0, 1.0, 2.0, 3.0, 4.0], dtype=float)
+     
+     
+ 
+ 
+ Indexing with Boolean arrays can take more complicated expressions. This
+ is a very concise way of comparing two vectors, e.g.:
+ 
+ .. code::
+         
+     # code to be run in micropython
+     
+     import ulab as np
+     
+     a = np.array(range(9), dtype=np.uint8)
+     b = np.array([4, 4, 4, 3, 3, 3, 13, 13, 13], dtype=np.uint8)
+     print("a:\t", a)
+     print("\na**2:\t", a*a)
+     print("\nb:\t", b)
+     print("\n100*sin(b):\t", np.sin(b)*100.0)
+     print("\na[a*a > np.sin(b)*100.0]:\t", a[a*a > np.sin(b)*100.0])
+ 
+ .. parsed-literal::
+ 
+     a:	 array([0, 1, 2, 3, 4, 5, 6, 7, 8], dtype=uint8)
+     
+     a**2:	 array([0, 1, 4, 9, 16, 25, 36, 49, 64], dtype=uint8)
+     
+     b:	 array([4, 4, 4, 3, 3, 3, 13, 13, 13], dtype=uint8)
+     
+     100*sin(b):	 array([-75.68025, -75.68025, -75.68025, 14.112, 14.112, 14.112, 42.01671, 42.01671, 42.01671], dtype=float)
+     
+     a[a*a > np.sin(b)*100.0]:	 array([0, 1, 2, 4, 5, 7, 8], dtype=uint8)
+     
+ 
+ 
+ Slicing and assigning to slices
+ ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
+ 
+ You can also generate sub-arrays by specifying slices as the index of an
+ array. Slices are special python objects of the form
+ 
+ .. code:: python
+ 
+    slice = start:end:stop
+ 
+ where ``start``, ``end``, and ``stop`` are (not necessarily
+ non-negative) integers. Not all of these three numbers must be specified
+ in an index, in fact, all three of them can be missing. The interpreter
+ takes care of filling in the missing values. (Note that slices cannot be
+ defined in this way, only there, where an index is expected.) For a good
+ explanation on how slices work in python, you can read the stackoverflow
+ question
+ https://stackoverflow.com/questions/509211/understanding-slice-notation.
+ 
+ Slices work on both axes:
+ 
+ .. code::
+         
+     # code to be run in micropython
+     
+     import ulab as np
+     
+     a = np.array([[1, 2, 3], [4, 5, 6], [7, 8, 9]], dtype=np.uint8)
+     print('a:\n', a)
+     
+     # the first row
+     print('\na[0]:\n', a[0])
+     
+     # the first two elements of the first row
+     print('\na[0,:2]:\n', a[0,:2])
+     
+     # the zeroth element in each row (also known as the zeroth column)
+     print('\na[:,0]:\n', a[:,0])
+     
+     # the last but one row
+     print('\na[-1]:\n', a[-1])
+     
+     # the last two rows backwards
+     print('\na[::1]:\n', a[::-1])
+ 
+ .. parsed-literal::
+ 
+     a:
+      array([[1, 2, 3],
+     	 [4, 5, 6],
+     	 [7, 8, 9]], dtype=uint8)
+     
+     a[0]:
+      array([1, 2, 3], dtype=uint8)
+     
+     a[0,:2]:
+      array([1, 2], dtype=uint8)
+     
+     a[:,0]:
+      array([1, 4, 7], dtype=uint8)
+     
+     a[-1]:
+      array([7, 8, 9], dtype=uint8)
+     
+     a[::1]:
+      array([[7, 8, 9],
+     	 [4, 5, 6]], dtype=uint8)
+     
+     
+ 
+ 
+ Assignment to slices can be done for the whole slice, per row, and per
+ column. A couple of examples should make these statements clearer:
+ 
+ .. code::
+         
+     # code to be run in micropython
+     
+     import ulab as np
+     
+     zero_list = [0, 0, 0]
+     a = np.array([zero_list, zero_list, zero_list], dtype=np.uint8)
+     print('a:\n', a)
+     
+     # assigning to the whole row
+     a[0] = 1
+     print('\na[0] = 1\n', a)
+     
+     # assigning to the whole row
+     a[0] = np.array([1, 2, -333], dtype=np.float)
+     print('\na[0] = np.array([1, 2, 3])\n', a)
+     
+     # assigning to a column
+     a[:,2] = 3.0
+     print('\na[:,0]:\n', a)
+ 
+ .. parsed-literal::
+ 
+     a:
+      array([[0, 0, 0],
+     	 [0, 0, 0],
+     	 [0, 0, 0]], dtype=uint8)
+     
+     a[0] = 1
+      array([[1, 1, 1],
+     	 [0, 0, 0],
+     	 [0, 0, 0]], dtype=uint8)
+     
+     a[0] = np.array([1, 2, 3])
+      array([[1, 2, 179],
+     	 [0, 0, 0],
+     	 [0, 0, 0]], dtype=uint8)
+     
+     a[:,0]:
+      array([[1, 2, 3],
+     	 [0, 0, 3],
+     	 [0, 0, 3]], dtype=uint8)
+     
+     
+ 
+ 
+ Universal functions
+ ===================
+ 
+ Standard mathematical functions are defined in the ``vector``
+ sub-module, and can be calculated on any scalar, scalar-valued iterable
+ (ranges, lists, tuples containing numbers), and on ``ndarray``\ s
+ without having to change the call signature. In all cases the functions
+ return a new ``ndarray`` of typecode ``float`` (since these functions
+ usually generate float values, anyway). The functions execute faster
+ with ``ndarray`` arguments than with iterables, because the values of
+ the input vector can be extracted faster.
+ 
+ At present, the following functions are supported:
+ 
+ ``acos``, ``acosh``, ``arctan2``, ``around``, ``asin``, ``asinh``,
+ ``atan``, ``atanh``, ``ceil``, ``cos``, ``erf``, ``erfc``, ``exp``,
+ ``expm1``, ``floor``, ``tgamma``, ``lgamma``, ``log``, ``log10``,
+ ``log2``, ``sin``, ``sinh``, ``sqrt``, ``tan``, ``tanh``.
+ 
+ These functions are applied element-wise to the arguments, thus, e.g.,
+ the exponential of a matrix cannot be calculated in this way. The
+ functions can be invoked by importing the ``vector`` sub-module first.
+ 
+ .. code::
+         
+     # code to be run in micropython
+     
+     import ulab as np
+     from ulab import vector
+     
+     a = range(9)
+     b = np.array(a)
+     
+     # works with ranges, lists, tuples etc.
+     print('a:\t', a)
+     print('exp(a):\t', vector.exp(a))
+     
+     # with 1D arrays
+     print('\nb:\t', b)
+     print('exp(b):\t', vector.exp(b))
+     
+     # as well as with matrices
+     c = np.array([[1, 2, 3], [4, 5, 6], [7, 8, 9]])
+     print('\nc:\t', c)
+     print('exp(c):\t', vector.exp(c))
+ 
+ .. parsed-literal::
+ 
+     a:	 range(0, 9)
+     exp(a):	 array([1.0, 2.718282, 7.389056, 20.08554, 54.59816, 148.4132, 403.4288, 1096.633, 2980.958], dtype=float)
+     
+     b:	 array([0.0, 1.0, 2.0, 3.0, 4.0, 5.0, 6.0, 7.0, 8.0], dtype=float)
+     exp(b):	 array([1.0, 2.718282, 7.389056, 20.08554, 54.59816, 148.4132, 403.4288, 1096.633, 2980.958], dtype=float)
+     
+     c:	 array([[1.0, 2.0, 3.0],
+     	 [4.0, 5.0, 6.0],
+     	 [7.0, 8.0, 9.0]], dtype=float)
+     exp(c):	 array([[2.718282, 7.389056, 20.08554],
+     	 [54.59816, 148.4132, 403.4288],
+     	 [1096.633, 2980.958, 8103.084]], dtype=float)
+     
+ 
+ 
+ Computation expenses
+ --------------------
+ 
+ The overhead for calculating with micropython iterables is quite
+ significant: for the 1000 samples below, the difference is more than 800
+ microseconds, because internally the function has to create the
+ ``ndarray`` for the output, has to fetch the iterable’s items of unknown
+ type, and then convert them to floats. All these steps are skipped for
+ ``ndarray``\ s, because these pieces of information are already known.
+ 
+ Doing the same with ``list`` comprehension requires 30 times more time
+ than with the ``ndarray``, which would become even more, if we converted
+ the resulting list to an ``ndarray``.
+ 
+ .. code::
+         
+     # code to be run in micropython
+     
+     import ulab as np
+     from ulab import vector
+     import math
+     
+     a = [0]*1000
+     b = np.array(a)
+     
+     @timeit
+     def timed_vector(iterable):
+         return vector.exp(iterable)
+     
+     @timeit
+     def timed_list(iterable):
+         return [math.exp(i) for i in iterable]
+     
+     print('iterating over ndarray in ulab')
+     timed_vector(b)
+     
+     print('\niterating over list in ulab')
+     timed_vector(a)
+     
+     print('\niterating over list in python')
+     timed_list(a)
+ 
+ .. parsed-literal::
+ 
+     iterating over ndarray in ulab
+     execution time:  441  us
+     
+     iterating over list in ulab
+     execution time:  1266  us
+     
+     iterating over list in python
+     execution time:  11379  us
+     
+ 
+ 
+ Vectorising generic python functions
+ ------------------------------------
+ 
+ ``numpy``:
+ https://numpy.org/doc/stable/reference/generated/numpy.vectorize.html
+ 
+ The examples above use factory functions. In fact, they are nothing but
+ the vectorised versions of the standard mathematical functions.
+ User-defined ``python`` functions can also be vectorised by help of
+ ``vectorize``. This function takes a positional argument, namely, the
+ ``python`` function that you want to vectorise, and a non-mandatory
+ keyword argument, ``otypes``, which determines the ``dtype`` of the
+ output array. The ``otypes`` must be ``None`` (default), or any of the
+ ``dtypes`` defined in ``ulab``. With ``None``, the output is
+ automatically turned into a float array.
+ 
+ The return value of ``vectorize`` is a ``micropython`` object that can
+ be called as a standard function, but which now accepts either a scalar,
+ an ``ndarray``, or a generic ``micropython`` iterable as its sole
+ argument. Note that the function that is to be vectorised must have a
+ single argument.
+ 
+ .. code::
+         
+     # code to be run in micropython
+     
+     import ulab as np
+     from ulab import vector
+     
+     def f(x):
+         return x*x
+     
+     vf = vector.vectorize(f)
+     
+     # calling with a scalar
+     print('{:20}'.format('f on a scalar: '), vf(44.0))
+     
+     # calling with an ndarray
+     a = np.array([1, 2, 3, 4])
+     print('{:20}'.format('f on an ndarray: '), vf(a))
+     
+     # calling with a list
+     print('{:20}'.format('f on a list: '), vf([2, 3, 4]))
+ 
+ .. parsed-literal::
+ 
+     f on a scalar:       array([1936.0], dtype=float)
+     f on an ndarray:     array([1.0, 4.0, 9.0, 16.0], dtype=float)
+     f on a list:         array([4.0, 9.0, 16.0], dtype=float)
+     
+     
+ 
+ 
+ As mentioned, the ``dtype`` of the resulting ``ndarray`` can be
+ specified via the ``otypes`` keyword. The value is bound to the function
+ object that ``vectorize`` returns, therefore, if the same function is to
+ be vectorised with different output types, then for each type a new
+ function object must be created.
+ 
+ .. code::
+         
+     # code to be run in micropython
+     
+     import ulab as np
+     from ulab import vector
+     
+     l = [1, 2, 3, 4]
+     def f(x):
+         return x*x
+     
+     vf1 = vector.vectorize(f, otypes=np.uint8)
+     vf2 = vector.vectorize(f, otypes=np.float)
+     
+     print('{:20}'.format('output is uint8: '), vf1(l))
+     print('{:20}'.format('output is float: '), vf2(l))
+ 
+ .. parsed-literal::
+ 
+     output is uint8:     array([1, 4, 9, 16], dtype=uint8)
+     output is float:     array([1.0, 4.0, 9.0, 16.0], dtype=float)
+     
+     
+ 
+ 
+ The ``otypes`` keyword argument cannot be used for type coercion: if the
+ function evaluates to a float, but ``otypes`` would dictate an integer
+ type, an exception will be raised:
+ 
+ .. code::
+         
+     # code to be run in micropython
+     
+     import ulab as np
+     from ulab import vector
+     
+     int_list = [1, 2, 3, 4]
+     float_list = [1.0, 2.0, 3.0, 4.0]
+     def f(x):
+         return x*x
+     
+     vf = vector.vectorize(f, otypes=np.uint8)
+     
+     print('{:20}'.format('integer list: '), vf(int_list))
+     # this will raise a TypeError exception
+     print(vf(float_list))
+ 
+ .. parsed-literal::
+ 
+     integer list:        array([1, 4, 9, 16], dtype=uint8)
+     
+     Traceback (most recent call last):
+       File "/dev/shm/micropython.py", line 14, in <module>
+     TypeError: can't convert float to int
+     
+ 
+ 
+ Benchmarks
+ ~~~~~~~~~~
+ 
+ It should be pointed out that the ``vectorize`` function produces the
+ pseudo-vectorised version of the ``python`` function that is fed into
+ it, i.e., on the C level, the same ``python`` function is called, with
+ the all-encompassing ``mp_obj_t`` type arguments, and all that happens
+ is that the ``for`` loop in ``[f(i) for i in iterable]`` runs purely in
+ C. Since type checking and type conversion in ``f()`` is expensive, the
+ speed-up is not so spectacular as when iterating over an ``ndarray``
+ with a factory function: a gain of approximately 30% can be expected,
+ when a native ``python`` type (e.g., ``list``) is returned by the
+ function, and this becomes around 50% (a factor of 2), if conversion to
+ an ``ndarray`` is also counted.
+ 
+ The following code snippet calculates the square of a 1000 numbers with
+ the vectorised function (which returns an ``ndarray``), with ``list``
+ comprehension, and with ``list`` comprehension followed by conversion to
+ an ``ndarray``. For comparison, the execution time is measured also for
+ the case, when the square is calculated entirely in ``ulab``.
+ 
+ .. code::
+         
+     # code to be run in micropython
+     
+     import ulab as np
+     from ulab import vector
+     
+     def f(x):
+         return x*x
+     
+     vf = vector.vectorize(f)
+     
+     @timeit
+     def timed_vectorised_square(iterable):
+         return vf(iterable)
+     
+     @timeit
+     def timed_python_square(iterable):
+         return [f(i) for i in iterable]
+     
+     @timeit
+     def timed_ndarray_square(iterable):
+         return np.array([f(i) for i in iterable])
+     
+     @timeit
+     def timed_ulab_square(ndarray):
+         return ndarray**2
+     
+     print('vectorised function')
+     squares = timed_vectorised_square(range(1000))
+     
+     print('\nlist comprehension')
+     squares = timed_python_square(range(1000))
+     
+     print('\nlist comprehension + ndarray conversion')
+     squares = timed_ndarray_square(range(1000))
+     
+     print('\nsquaring an ndarray entirely in ulab')
+     a = np.array(range(1000))
+     squares = timed_ulab_square(a)
+ 
+ .. parsed-literal::
+ 
+     vectorised function
+     execution time:  7237  us
+     
+     list comprehension
+     execution time:  10248  us
+     
+     list comprehension + ndarray conversion
+     execution time:  12562  us
+     
+     squaring an ndarray entirely in ulab
+     execution time:  560  us
+     
+ 
+ 
+ From the comparisons above, it is obvious that ``python`` functions
+ should only be vectorised, when the same effect cannot be gotten in
+ ``ulab`` only. However, although the time savings are not significant,
+ there is still a good reason for caring about vectorised functions.
+ Namely, user-defined ``python`` functions become universal, i.e., they
+ can accept generic iterables as well as ``ndarray``\ s as their
+ arguments. A vectorised function is still a one-liner, resulting in
+ transparent and elegant code.
+ 
+ A final comment on this subject: the ``f(x)`` that we defined is a
+ *generic* ``python`` function. This means that it is not required that
+ it just crunches some numbers. It has to return a number object, but it
+ can still access the hardware in the meantime. So, e.g.,
+ 
+ .. code:: python
+ 
+ 
+    led = pyb.LED(2)
+ 
+    def f(x):
+        if x < 100:
+            led.toggle()
+        return x*x
+ 
+ is perfectly valid code.
+ 
+ around
+ ------
+ 
+ ``numpy``:
+ https://docs.scipy.org/doc/numpy-1.17.0/reference/generated/numpy.around.html
+ 
+ ``numpy``\ ’s ``around`` function can also be found in the ``vector``
+ sub-module. The function implements the ``decimals`` keyword argument
+ with default value ``0``. The first argument must be an ``ndarray``. If
+ this is not the case, the function raises a ``TypeError`` exception.
+ Note that ``numpy`` accepts general iterables. The ``out`` keyword
+ argument known from ``numpy`` is not accepted. The function always
+ returns an ndarray of type ``mp_float_t``.
+ 
+ .. code::
+         
+     # code to be run in micropython
+     
+     import ulab as np
+     from ulab import vector
+     
+     a = np.array([1, 2.2, 33.33, 444.444])
+     print('a:\t\t', a)
+     print('\ndecimals = 0\t', vector.around(a, decimals=0))
+     print('\ndecimals = 1\t', vector.around(a, decimals=1))
+     print('\ndecimals = -1\t', vector.around(a, decimals=-1))
+ 
+ .. parsed-literal::
+ 
+     a:		 array([1.0, 2.2, 33.33, 444.444], dtype=float)
+     
+     decimals = 0	 array([1.0, 2.0, 33.0, 444.0], dtype=float)
+     
+     decimals = 1	 array([1.0, 2.2, 33.3, 444.4], dtype=float)
+     
+     decimals = -1	 array([0.0, 0.0, 30.0, 440.0], dtype=float)
+     
+     
+ 
+ 
+ arctan2
+ -------
+ 
+ ``numpy``:
+ https://docs.scipy.org/doc/numpy-1.17.0/reference/generated/numpy.arctan2.html
+ 
+ The two-argument inverse tangent function is also part of the ``vector``
+ sub-module. The function implements only partial broadcasting, i.e., its
+ two arguments either have the same shape, or at least one of them must
+ be a single-element array. Scalars (``micropython`` integers or floats)
+ are also allowed.
+ 
+ .. code::
+         
+     # code to be run in micropython
+     
+     import ulab as np
+     from ulab import vector
+     
+     a = np.array([1, 2.2, 33.33, 444.444])
+     print('a:\t\t', a)
+     print('\narctan2(a, 1.0)\t', vector.arctan2(a, 1.0))
+     print('\narctan2(1.0, a)\t', vector.arctan2(1.0, a))
+     print('\narctan2(a, a): \t', vector.arctan2(a, a))
+ 
+ .. parsed-literal::
+ 
+     a:		 array([1.0, 2.2, 33.33, 444.444], dtype=float)
+     
+     arctan2(a, 1.0)	 array([0.7853981633974483, 1.14416883366802, 1.5408023243361, 1.568546328341769], dtype=float)
+     
+     arctan2(1.0, a)	 array([0.7853981633974483, 0.426627493126876, 0.02999400245879636, 0.002249998453127392], dtype=float)
+     
+     arctan2(a, a): 	 array([0.7853981633974483, 0.7853981633974483, 0.7853981633974483, 0.7853981633974483], dtype=float)
+     
+     
+ 
+ 
+ Numerical
+ =========
+ 
+ Function in the ``numerical`` sub-module can be called by importing the
+ sub-module first.
+ 
+ min, argmin, max, argmax
+ ------------------------
+ 
+ ``numpy``:
+ https://docs.scipy.org/doc/numpy/reference/generated/numpy.min.html
+ 
+ ``numpy``:
+ https://docs.scipy.org/doc/numpy/reference/generated/numpy.argmax.html
+ 
+ ``numpy``:
+ https://docs.scipy.org/doc/numpy/reference/generated/numpy.max.html
+ 
+ ``numpy``:
+ https://docs.scipy.org/doc/numpy/reference/generated/numpy.argmax.html
+ 
+ **WARNING:** Difference to ``numpy``: the ``out`` keyword argument is
+ not implemented.
+ 
+ These functions follow the same pattern, and work with generic
+ iterables, and ``ndarray``\ s. ``min``, and ``max`` return the minimum
+ or maximum of a sequence. If the input array is two-dimensional, the
+ ``axis`` keyword argument can be supplied, in which case the
+ minimum/maximum along the given axis will be returned. If ``axis=None``
+ (this is also the default value), the minimum/maximum of the flattened
+ array will be determined.
+ 
+ ``argmin/argmax`` return the position (index) of the minimum/maximum in
+ the sequence.
+ 
+ .. code::
+         
+     # code to be run in micropython
+     
+     import ulab as np
+     from ulab import numerical
+     
+     a = np.array([1, 2, 0, 1, 10])
+     print('a:', a)
+     print('min of a:', numerical.min(a))
+     print('argmin of a:', numerical.argmin(a))
+     
+     b = np.array([[1, 2, 0], [1, 10, -1]])
+     print('\nb:\n', b)
+     print('min of b (flattened):', numerical.min(b))
+     print('min of b (axis=0):', numerical.min(b, axis=0))
+     print('min of b (axis=1):', numerical.min(b, axis=1))
+ 
+ .. parsed-literal::
+ 
+     a: array([1.0, 2.0, 0.0, 1.0, 10.0], dtype=float)
+     min of a: 0.0
+     argmin of a: 2
+     
+     b:
+      array([[1.0, 2.0, 0.0],
+     	 [1.0, 10.0, -1.0]], dtype=float)
+     min of b (flattened): -1.0
+     min of b (axis=0): array([1.0, 2.0, -1.0], dtype=float)
+     min of b (axis=1): array([0.0, -1.0], dtype=float)
+     
+     
+ 
+ 
+ sum, std, mean
+ --------------
+ 
+ ``numpy``:
+ https://docs.scipy.org/doc/numpy/reference/generated/numpy.sum.html
+ 
+ ``numpy``:
+ https://docs.scipy.org/doc/numpy/reference/generated/numpy.std.html
+ 
+ ``numpy``:
+ https://docs.scipy.org/doc/numpy/reference/generated/numpy.mean.html
+ 
+ These three functions follow the same pattern: if the axis keyword is
+ not specified, it assumes the default value of ``None``, and returns the
+ result of the computation for the flattened array. Otherwise, the
+ calculation is along the given axis.
+ 
+ .. code::
+         
+     # code to be run in micropython
+     
+     import ulab as np
+     from ulab import numerical
+     
+     a = np.array([[1, 2, 3], [4, 5, 6], [7, 8, 9]])
+     print('a: \n', a)
+     
+     print('sum, flat array: ', numerical.sum(a))
+     
+     print('mean, horizontal: ', numerical.mean(a, axis=1))
+     
+     print('std, vertical: ', numerical.std(a, axis=0))
+ 
+ .. parsed-literal::
+ 
+     a: 
+      array([[1.0, 2.0, 3.0],
+     	 [4.0, 5.0, 6.0],
+     	 [7.0, 8.0, 9.0]], dtype=float)
+     sum, flat array:  45.0
+     mean, horizontal:  array([2.0, 5.0, 8.0], dtype=float)
+     std, vertical:  array([2.44949, 2.44949, 2.44949], dtype=float)
+     
+ 
+ 
+ roll
+ ----
+ 
+ ``numpy``:
+ https://docs.scipy.org/doc/numpy/reference/generated/numpy.roll.html
+ 
+ The roll function shifts the content of a vector by the positions given
+ as the second argument. If the ``axis`` keyword is supplied, the shift
+ is applied to the given axis.
+ 
+ .. code::
+         
+     # code to be run in micropython
+     
+     import ulab as np
+     from ulab import numerical
+     
+     a = np.array([1, 2, 3, 4, 5, 6, 7, 8])
+     print("a:\t\t\t", a)
+     
+     numerical.roll(a, 2)
+     print("a rolled to the left:\t", a)
+     
+     # this should be the original vector
+     numerical.roll(a, -2)
+     print("a rolled to the right:\t", a)
+ 
+ .. parsed-literal::
+ 
+     a:			 array([1.0, 2.0, 3.0, 4.0, 5.0, 6.0, 7.0, 8.0], dtype=float)
+     a rolled to the left:	 array([3.0, 4.0, 5.0, 6.0, 7.0, 8.0, 1.0, 2.0], dtype=float)
+     a rolled to the right:	 array([1.0, 2.0, 3.0, 4.0, 5.0, 6.0, 7.0, 8.0], dtype=float)
+     
+     
+ 
+ 
+ Rolling works with matrices, too. If the ``axis`` keyword is 0, the
+ matrix is rolled along its vertical axis, otherwise, horizontally.
+ 
+ Horizontal rolls are faster, because they require fewer steps, and
+ larger memory chunks are copied, however, they also require more RAM:
+ basically the whole row must be stored internally. Most expensive are
+ the ``None`` keyword values, because with ``axis = None``, the array is
+ flattened first, hence the row’s length is the size of the whole matrix.
+ 
+ Vertical rolls require two internal copies of single columns.
+ 
+ .. code::
+         
+     # code to be run in micropython
+     
+     import ulab as np
+     from ulab import numerical
+     
+     a = np.array([[1, 2, 3, 4], [5, 6, 7, 8]])
+     print("a:\n", a)
+     
+     numerical.roll(a, 2)
+     print("\na rolled to the left:\n", a)
+     
+     numerical.roll(a, -1, axis=1)
+     print("\na rolled up:\n", a)
+     
+     numerical.roll(a, 1, axis=None)
+     print("\na rolled with None:\n", a)
+ 
+ .. parsed-literal::
+ 
+     a:
+      array([[1.0, 2.0, 3.0, 4.0],
+     	 [5.0, 6.0, 7.0, 8.0]], dtype=float)
+     
+     a rolled to the left:
+      array([[3.0, 4.0, 5.0, 6.0],
+     	 [7.0, 8.0, 1.0, 2.0]], dtype=float)
+     
+     a rolled up:
+      array([[6.0, 3.0, 4.0, 5.0],
+     	 [2.0, 7.0, 8.0, 1.0]], dtype=float)
+     
+     a rolled with None:
+      array([[3.0, 4.0, 5.0, 2.0],
+     	 [7.0, 8.0, 1.0, 6.0]], dtype=float)
+     
+     
+ 
+ 
+ Simple running weighted average
+ ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
+ 
+ As a demonstration of the conciseness of ``ulab/numpy`` operations, we
+ will calculate an exponentially weighted running average of a
+ measurement vector in just a couple of lines. I chose this particular
+ example, because I think that this can indeed be used in real-life
+ applications.
+ 
+ .. code::
+         
+     # code to be run in micropython
+     
+     import ulab as np
+     from ulab import numerical
+     from ulab import vector
+     
+     def dummy_adc():
+         # dummy adc function, so that the results are reproducible
+         return 2
+         
+     n = 10
+     # These are the normalised weights; the last entry is the most dominant
+     weight = vector.exp([1, 2, 3, 4, 5])
+     weight = weight/numerical.sum(weight)
+     
+     print(weight)
+     # initial array of samples
+     samples = np.array([0]*n)
+     
+     for i in range(n):
+         # a new datum is inserted on the right hand side. This simply overwrites whatever was in the last slot
+         samples[-1] = dummy_adc()
+         print(numerical.mean(samples[-5:]*weight))
+         print(samples[-5:])
+         # the data are shifted by one position to the left
+         numerical.roll(samples, 1)
+ 
+ .. parsed-literal::
+ 
+     array([0.01165623031556606, 0.03168492019176483, 0.08612854033708572, 0.234121635556221, 0.6364086270332336], dtype=float)
+     0.2545634508132935
+     array([0.0, 0.0, 0.0, 0.0, 2.0], dtype=float)
+     0.3482121050357819
+     array([0.0, 0.0, 0.0, 2.0, 2.0], dtype=float)
+     0.3826635211706161
+     array([0.0, 0.0, 2.0, 2.0, 2.0], dtype=float)
+     0.3953374892473221
+     array([0.0, 2.0, 2.0, 2.0, 2.0], dtype=float)
+     0.3999999813735485
+     array([2.0, 2.0, 2.0, 2.0, 2.0], dtype=float)
+     0.3999999813735485
+     array([2.0, 2.0, 2.0, 2.0, 2.0], dtype=float)
+     0.3999999813735485
+     array([2.0, 2.0, 2.0, 2.0, 2.0], dtype=float)
+     0.3999999813735485
+     array([2.0, 2.0, 2.0, 2.0, 2.0], dtype=float)
+     0.3999999813735485
+     array([2.0, 2.0, 2.0, 2.0, 2.0], dtype=float)
+     0.3999999813735485
+     array([2.0, 2.0, 2.0, 2.0, 2.0], dtype=float)
+     
+     
+ 
+ 
+ flip
+ ----
+ 
+ ``numpy``:
+ https://docs.scipy.org/doc/numpy/reference/generated/numpy.flip.html
+ 
+ The ``flip`` function takes one positional, an ``ndarray``, and one
+ keyword argument, ``axis = None``, and reverses the order of elements
+ along the given axis. If the keyword argument is ``None``, the matrix’
+ entries are flipped along all axes. ``flip`` returns a new copy of the
+ array.
+ 
+ .. code::
+         
+     # code to be run in micropython
+     
+     import ulab as np
+     from ulab import numerical
+     
+     a = np.array([1, 2, 3, 4, 5])
+     print("a: \t", a)
+     print("a flipped:\t", np.flip(a))
+     
+     a = np.array([[1, 2, 3], [4, 5, 6], [7, 8, 9]], dtype=np.uint8)
+     print("\na flipped horizontally\n", numerical.flip(a, axis=1))
+     print("\na flipped vertically\n", numerical.flip(a, axis=0))
+     print("\na flipped horizontally+vertically\n", numerical.flip(a))
+ 
+ .. parsed-literal::
+ 
+     a: 	 array([1.0, 2.0, 3.0, 4.0, 5.0], dtype=float)
+     a flipped:	 array([5.0, 4.0, 3.0, 2.0, 1.0], dtype=float)
+     
+     a flipped horizontally
+      array([[3, 2, 1],
+     	 [6, 5, 4],
+     	 [9, 8, 7]], dtype=uint8)
+     
+     a flipped vertically
+      array([[7, 8, 9],
+     	 [4, 5, 6],
+     	 [1, 2, 3]], dtype=uint8)
+     
+     a flipped horizontally+vertically
+      array([[9, 8, 7],
+     	 [6, 5, 4],
+     	 [3, 2, 1]], dtype=uint8)
+     
+     
+ 
+ 
+ diff
+ ----
+ 
+ ``numpy``:
+ https://docs.scipy.org/doc/numpy/reference/generated/numpy.diff.html
+ 
+ The ``diff`` function returns the numerical derivative of the forward
+ scheme, or more accurately, the differences of an ``ndarray`` along a
+ given axis. The order of derivative can be stipulated with the ``n``
+ keyword argument, which should be between 0, and 9. Default is 1. If
+ higher order derivatives are required, they can be gotten by repeated
+ calls to the function. The ``axis`` keyword argument should be -1 (last
+ axis, in ``ulab`` equivalent to the second axis, and this also happens
+ to be the default value), 0, or 1.
+ 
+ Beyond the output array, the function requires only a couple of bytes of
+ extra RAM for the differentiation stencil. (The stencil is an ``int8``
+ array, one byte longer than ``n``. This also explains, why the highest
+ order is 9: the coefficients of a ninth-order stencil all fit in signed
+ bytes, while 10 would require ``int16``.) Note that as usual in
+ numerical differentiation (and also in ``numpy``), the length of the
+ respective axis will be reduced by ``n`` after the operation. If ``n``
+ is larger than, or equal to the length of the axis, an empty array will
+ be returned.
+ 
+ **WARNING**: the ``diff`` function does not implement the ``prepend``
+ and ``append`` keywords that can be found in ``numpy``.
+ 
+ .. code::
+         
+     # code to be run in micropython
+     
+     import ulab as np
+     from ulab import numerical
+     
+     a = np.array(range(9), dtype=np.uint8)
+     print('a:\n', a)
+     
+     print('\nfirst derivative:\n', numerical.diff(a, n=1))
+     print('\nsecond derivative:\n', numerical.diff(a, n=2))
+     
+     c = np.array([[1, 2, 3, 4], [4, 3, 2, 1], [1, 4, 9, 16], [0, 0, 0, 0]])
+     print('\nc:\n', c)
+     print('\nfirst derivative, first axis:\n', numerical.diff(c, axis=0))
+     print('\nfirst derivative, second axis:\n', numerical.diff(c, axis=1))
+ 
+ .. parsed-literal::
+ 
+     a:
+      array([0, 1, 2, 3, 4, 5, 6, 7, 8], dtype=uint8)
+     
+     first derivative:
+      array([1, 1, 1, 1, 1, 1, 1, 1], dtype=uint8)
+     
+     second derivative:
+      array([0, 0, 0, 0, 0, 0, 0], dtype=uint8)
+     
+     c:
+      array([[1.0, 2.0, 3.0, 4.0],
+     	 [4.0, 3.0, 2.0, 1.0],
+     	 [1.0, 4.0, 9.0, 16.0],
+     	 [0.0, 0.0, 0.0, 0.0]], dtype=float)
+     
+     first derivative, first axis:
+      array([[3.0, 1.0, -1.0, -3.0],
+     	 [-3.0, 1.0, 7.0, 15.0],
+     	 [-1.0, -4.0, -9.0, -16.0]], dtype=float)
+     
+     first derivative, second axis:
+      array([[1.0, 1.0, 1.0],
+     	 [-1.0, -1.0, -1.0],
+     	 [3.0, 5.0, 7.0],
+     	 [0.0, 0.0, 0.0]], dtype=float)
+     
+     
+ 
+ 
+ sort
+ ----
+ 
+ ``numpy``:
+ https://docs.scipy.org/doc/numpy/reference/generated/numpy.sort.html
+ 
+ The sort function takes an ndarray, and sorts its elements in ascending
+ order along the specified axis using a heap sort algorithm. As opposed
+ to the ``.sort()`` method discussed earlier, this function creates a
+ copy of its input before sorting, and at the end, returns this copy.
+ Sorting takes place in place, without auxiliary storage. The ``axis``
+ keyword argument takes on the possible values of -1 (the last axis, in
+ ``ulab`` equivalent to the second axis, and this also happens to be the
+ default value), 0, 1, or ``None``. The first three cases are identical
+ to those in `diff <#diff>`__, while the last one flattens the array
+ before sorting.
+ 
+ If descending order is required, the result can simply be ``flip``\ ped,
+ see `flip <#flip>`__.
+ 
+ **WARNING:** ``numpy`` defines the ``kind``, and ``order`` keyword
+ arguments that are not implemented here. The function in ``ulab`` always
+ uses heap sort, and since ``ulab`` does not have the concept of data
+ fields, the ``order`` keyword argument would have no meaning.
+ 
+ .. code::
+         
+     # code to be run in micropython
+     
+     import ulab as np
+     from ulab import numerical
+     
+     a = np.array([[1, 12, 3, 0], [5, 3, 4, 1], [9, 11, 1, 8], [7, 10, 0, 1]], dtype=np.float)
+     print('\na:\n', a)
+     b = numerical.sort(a, axis=0)
+     print('\na sorted along vertical axis:\n', b)
+     
+     c = numerical.sort(a, axis=1)
+     print('\na sorted along horizontal axis:\n', c)
+     
+     c = numerical.sort(a, axis=None)
+     print('\nflattened a sorted:\n', c)
+ 
+ .. parsed-literal::
+ 
+     
+     a:
+      array([[1.0, 12.0, 3.0, 0.0],
+     	 [5.0, 3.0, 4.0, 1.0],
+     	 [9.0, 11.0, 1.0, 8.0],
+     	 [7.0, 10.0, 0.0, 1.0]], dtype=float)
+     
+     a sorted along vertical axis:
+      array([[1.0, 3.0, 0.0, 0.0],
+     	 [5.0, 10.0, 1.0, 1.0],
+     	 [7.0, 11.0, 3.0, 1.0],
+     	 [9.0, 12.0, 4.0, 8.0]], dtype=float)
+     
+     a sorted along horizontal axis:
+      array([[0.0, 1.0, 3.0, 12.0],
+     	 [1.0, 3.0, 4.0, 5.0],
+     	 [1.0, 8.0, 9.0, 11.0],
+     	 [0.0, 1.0, 7.0, 10.0]], dtype=float)
+     
+     flattened a sorted:
+      array([0.0, 0.0, 1.0, ..., 10.0, 11.0, 12.0], dtype=float)
+     
+     
+ 
+ 
+ Heap sort requires :math:`\sim N\log N` operations, and notably, the
+ worst case costs only 20% more time than the average. In order to get an
+ order-of-magnitude estimate, we will take the sine of 1000 uniformly
+ spaced numbers between 0, and two pi, and sort them:
+ 
+ .. code::
+         
+     # code to be run in micropython
+     
+     import ulab as np
+     from ulab import vector
+     from ulab import numerical
+     
+     @timeit
+     def sort_time(array):
+         return numerical.sort(array)
+     
+     b = vector.sin(np.linspace(0, 6.28, num=1000))
+     print('b: ', b)
+     sort_time(b)
+     print('\nb sorted:\n', b)
+ argsort
+ -------
+ 
+ ``numpy``:
+ https://docs.scipy.org/doc/numpy/reference/generated/numpy.argsort.html
+ 
+ Similarly to `sort <#sort>`__, ``argsort`` takes a positional, and a
+ keyword argument, and returns an unsigned short index array of type
+ ``ndarray`` with the same dimensions as the input, or, if ``axis=None``,
+ as a row vector with length equal to the number of elements in the input
+ (i.e., the flattened array). The indices in the output sort the input in
+ ascending order. The routine in ``argsort`` is the same as in ``sort``,
+ therefore, the comments on computational expenses (time and RAM) also
+ apply. In particular, since no copy of the original data is required,
+ virtually no RAM beyond the output array is used.
+ 
+ Since the underlying container of the output array is of type
+ ``uint16_t``, neither of the output dimensions should be larger than
+ 65535.
+ 
+ .. code::
+         
+     # code to be run in micropython
+     
+     import ulab as np
+     from ulab import numerical
+     
+     a = np.array([[1, 12, 3, 0], [5, 3, 4, 1], [9, 11, 1, 8], [7, 10, 0, 1]], dtype=np.float)
+     print('\na:\n', a)
+     b = numerical.argsort(a, axis=0)
+     print('\na sorted along vertical axis:\n', b)
+     
+     c = numerical.argsort(a, axis=1)
+     print('\na sorted along horizontal axis:\n', c)
+     
+     c = numerical.argsort(a, axis=None)
+     print('\nflattened a sorted:\n', c)
+ 
+ .. parsed-literal::
+ 
+     
+     a:
+      array([[1.0, 12.0, 3.0, 0.0],
+     	 [5.0, 3.0, 4.0, 1.0],
+     	 [9.0, 11.0, 1.0, 8.0],
+     	 [7.0, 10.0, 0.0, 1.0]], dtype=float)
+     
+     a sorted along vertical axis:
+      array([[0, 1, 3, 0],
+     	 [1, 3, 2, 1],
+     	 [3, 2, 0, 3],
+     	 [2, 0, 1, 2]], dtype=uint16)
+     
+     a sorted along horizontal axis:
+      array([[3, 0, 2, 1],
+     	 [3, 1, 2, 0],
+     	 [2, 3, 0, 1],
+     	 [2, 3, 0, 1]], dtype=uint16)
+     
+     flattened a sorted:
+      array([3, 14, 0, ..., 13, 9, 1], dtype=uint16)
+     
+     
+ 
+ 
+ Since during the sorting, only the indices are shuffled, ``argsort``
+ does not modify the input array, as one can verify this by the following
+ example:
+ 
+ .. code::
+         
+     # code to be run in micropython
+     
+     import ulab as np
+     from ulab import numerical
+     
+     a = np.array([0, 5, 1, 3, 2, 4], dtype=np.uint8)
+     print('\na:\n', a)
+     b = numerical.argsort(a, axis=1)
+     print('\nsorting indices:\n', b)
+     print('\nthe original array:\n', a)
+ 
+ .. parsed-literal::
+ 
+     
+     a:
+      array([0, 5, 1, 3, 2, 4], dtype=uint8)
+     
+     sorting indices:
+      array([0, 2, 4, 3, 5, 1], dtype=uint16)
+     
+     the original array:
+      array([0, 5, 1, 3, 2, 4], dtype=uint8)
+     
+     
+ 
+ 
+ Linalg
+ ======
+ 
+ Functions in the ``linalg`` module can be called by importing the
+ sub-module first.
+ 
+ size
+ ----
+ 
+ ``size`` takes a single argument, the axis, whose size is to be
+ returned. Depending on the value of the argument, the following
+ information will be returned:
+ 
+ 1. argument is 0: the number of elements of the array
+ 2. argument is 1: the number of rows
+ 3. argument is 2: the number of columns
+ 
+ .. code::
+         
+     # code to be run in micropython
+     
+     import ulab as np
+     from ulab import linalg
+     
+     a = np.array([1, 2, 3, 4], dtype=np.int8)
+     print("a:\n", a)
+     print("size of a:", linalg.size(a, axis=None), ",", linalg.size(a, axis=0))
+     
+     b= np.array([[1, 2], [3, 4]], dtype=np.int8)
+     print("\nb:\n", b)
+     print("size of b:", linalg.size(b, axis=None), ",", linalg.size(b, axis=0), ",", linalg.size(b, axis=1))
+ 
+ .. parsed-literal::
+ 
+     a:
+      array([1, 2, 3, 4], dtype=int8)
+     size of a: 4 , 4
+     
+     b:
+      array([[1, 2],
+     	 [3, 4]], dtype=int8)
+     size of b: 4 , 2 , 2
+     
+     
+ 
+ 
+ inv
+ ---
+ 
+ ``numpy``:
+ https://docs.scipy.org/doc/numpy-1.17.0/reference/generated/numpy.linalg.inv.html
+ 
+ A square matrix, provided that it is not singular, can be inverted by
+ calling the ``inv`` function that takes a single argument. The inversion
+ is based on successive elimination of elements in the lower left
+ triangle, and raises a ``ValueError`` exception, if the matrix turns out
+ to be singular (i.e., one of the diagonal entries is zero).
+ 
+ .. code::
+         
+     # code to be run in micropython
+     
+     import ulab as np
+     from ulab import linalg
+     
+     m = np.array([[1, 2, 3, 4], [4, 5, 6, 4], [7, 8.6, 9, 4], [3, 4, 5, 6]])
+     
+     print(linalg.inv(m))
+ 
+ .. parsed-literal::
+ 
+     array([[-2.166666, 1.499999, -0.8333326, 1.0],
+     	 [1.666666, -3.333331, 1.666666, -4.768516e-08],
+     	 [0.1666672, 2.166666, -0.8333327, -1.0],
+     	 [-0.1666666, -0.3333334, 4.96705e-08, 0.5]], dtype=float)
+     
+ 
+ 
+ Computation expenses
+ ~~~~~~~~~~~~~~~~~~~~
+ 
+ Note that the cost of inverting a matrix is approximately twice as many
+ floats (RAM), as the number of entries in the original matrix, and
+ approximately as many operations, as the number of entries. Here are a
+ couple of numbers:
+ 
+ .. code::
+         
+     # code to be run in micropython
+     
+     import ulab as np
+     from ulab import linalg
+     
+     @timeit
+     def invert_matrix(m):
+         return linalg.inv(m)
+     
+     m = np.array([[1, 2,], [4, 5]])
+     print('2 by 2 matrix:')
+     invert_matrix(m)
+     
+     m = np.array([[1, 2, 3, 4], [4, 5, 6, 4], [7, 8.6, 9, 4], [3, 4, 5, 6]])
+     print('\n4 by 4 matrix:')
+     invert_matrix(m)
+     
+     m = np.array([[1, 2, 3, 4, 5, 6, 7, 8], [0, 5, 6, 4, 5, 6, 4, 5], 
+                   [0, 0, 9, 7, 8, 9, 7, 8], [0, 0, 0, 10, 11, 12, 11, 12], 
+                  [0, 0, 0, 0, 4, 6, 7, 8], [0, 0, 0, 0, 0, 5, 6, 7], 
+                  [0, 0, 0, 0, 0, 0, 7, 6], [0, 0, 0, 0, 0, 0, 0, 2]])
+     print('\n8 by 8 matrix:')
+     invert_matrix(m)
+ 
+ .. parsed-literal::
+ 
+     2 by 2 matrix:
+     execution time:  65  us
+     
+     4 by 4 matrix:
+     execution time:  105  us
+     
+     8 by 8 matrix:
+     execution time:  299  us
+     
+ 
+ 
+ The above-mentioned scaling is not obeyed strictly. The reason for the
+ discrepancy is that the function call is still the same for all three
+ cases: the input must be inspected, the output array must be created,
+ and so on.
+ 
+ dot
+ ---
+ 
+ ``numpy``:
+ https://docs.scipy.org/doc/numpy/reference/generated/numpy.dot.html
+ 
+ **WARNING:** numpy applies upcasting rules for the multiplication of
+ matrices, while ``ulab`` simply returns a float matrix.
+ 
+ Once you can invert a matrix, you might want to know, whether the
+ inversion is correct. You can simply take the original matrix and its
+ inverse, and multiply them by calling the ``dot`` function, which takes
+ the two matrices as its arguments. If the matrix dimensions do not
+ match, the function raises a ``ValueError``. The result of the
+ multiplication is expected to be the unit matrix, which is demonstrated
+ below.
+ 
+ .. code::
+         
+     # code to be run in micropython
+     
+     import ulab as np
+     from ulab import linalg
+     
+     m = np.array([[1, 2, 3], [4, 5, 6], [7, 10, 9]], dtype=np.uint8)
+     n = linalg.inv(m)
+     print("m:\n", m)
+     print("\nm^-1:\n", n)
+     # this should be the unit matrix
+     print("\nm*m^-1:\n", linalg.dot(m, n))
+ 
+ .. parsed-literal::
+ 
+     m:
+      array([[1, 2, 3],
+     	 [4, 5, 6],
+     	 [7, 10, 9]], dtype=uint8)
+     
+     m^-1:
+      array([[-1.25, 1.0, -0.25],
+     	 [0.5, -1.0, 0.5],
+     	 [0.4166667, 0.3333334, -0.25]], dtype=float)
+     
+     m*m^-1:
+      array([[1.0, 2.384186e-07, -1.490116e-07],
+     	 [-2.980232e-07, 1.000001, -4.172325e-07],
+     	 [-3.278255e-07, 1.311302e-06, 0.9999992]], dtype=float)
+     
+ 
+ 
+ Note that for matrix multiplication you don’t necessarily need square
+ matrices, it is enough, if their dimensions are compatible (i.e., the
+ the left-hand-side matrix has as many columns, as does the
+ right-hand-side matrix rows):
+ 
+ .. code::
+         
+     # code to be run in micropython
+     
+     import ulab as np
+     from ulab import linalg
+     
+     m = np.array([[1, 2, 3, 4], [5, 6, 7, 8]], dtype=np.uint8)
+     n = np.array([[1, 2], [3, 4], [5, 6], [7, 8]], dtype=np.uint8)
+     print(m)
+     print(n)
+     print(linalg.dot(m, n))
+ 
+ .. parsed-literal::
+ 
+     array([[1, 2, 3, 4],
+     	 [5, 6, 7, 8]], dtype=uint8)
+     array([[1, 2],
+     	 [3, 4],
+     	 [5, 6],
+     	 [7, 8]], dtype=uint8)
+     array([[7.0, 10.0],
+     	 [23.0, 34.0]], dtype=float)
+     
+     
+ 
+ 
+ det
+ ---
+ 
+ ``numpy``:
+ https://docs.scipy.org/doc/numpy/reference/generated/numpy.linalg.det.html
+ 
+ The ``det`` function takes a square matrix as its single argument, and
+ calculates the determinant. The calculation is based on successive
+ elimination of the matrix elements, and the return value is a float,
+ even if the input array was of integer type.
+ 
+ .. code::
+         
+     # code to be run in micropython
+     
+     import ulab as np
+     from ulab import linalg
+     
+     a = np.array([[1, 2], [3, 4]], dtype=np.uint8)
+     print(linalg.det(a))
+ 
+ .. parsed-literal::
+ 
+     -2.0
+     
+ 
+ 
+ Benchmark
+ ~~~~~~~~~
+ 
+ Since the routine for calculating the determinant is pretty much the
+ same as for finding the `inverse of a matrix <#inv>`__, the execution
+ times are similar:
+ 
+ .. code::
+         
+     # code to be run in micropython
+     
+     @timeit
+     def matrix_det(m):
+         return linalg.inv(m)
+     
+     m = np.array([[1, 2, 3, 4, 5, 6, 7, 8], [0, 5, 6, 4, 5, 6, 4, 5], 
+                   [0, 0, 9, 7, 8, 9, 7, 8], [0, 0, 0, 10, 11, 12, 11, 12], 
+                  [0, 0, 0, 0, 4, 6, 7, 8], [0, 0, 0, 0, 0, 5, 6, 7], 
+                  [0, 0, 0, 0, 0, 0, 7, 6], [0, 0, 0, 0, 0, 0, 0, 2]])
+     
+     matrix_det(m)
+ 
+ .. parsed-literal::
+ 
+     execution time:  294  us
+     
+ 
+ 
+ eig
+ ---
+ 
+ ``numpy``:
+ https://docs.scipy.org/doc/numpy/reference/generated/numpy.linalg.eig.html
+ 
+ The ``eig`` function calculates the eigenvalues and the eigenvectors of
+ a real, symmetric square matrix. If the matrix is not symmetric, a
+ ``ValueError`` will be raised. The function takes a single argument, and
+ returns a tuple with the eigenvalues, and eigenvectors. With the help of
+ the eigenvectors, amongst other things, you can implement sophisticated
+ stabilisation routines for robots.
+ 
+ .. code::
+         
+     # code to be run in micropython
+     
+     import ulab as np
+     from ulab import linalg
+     
+     a = np.array([[1, 2, 1, 4], [2, 5, 3, 5], [1, 3, 6, 1], [4, 5, 1, 7]], dtype=np.uint8)
+     x, y = linalg.eig(a)
+     print('eigenvectors of a:\n', x)
+     print('\neigenvalues of a:\n', y)
+ 
+ .. parsed-literal::
+ 
+     eigenvectors of a:
+      array([-1.165288, 0.8029362, 5.585626, 13.77673], dtype=float)
+     
+     eigenvalues of a:
+      array([[0.8151754, -0.4499267, -0.1643907, 0.3256237],
+     	 [0.2211193, 0.7847154, 0.08373602, 0.5729892],
+     	 [-0.1340859, -0.3100657, 0.8742685, 0.3486182],
+     	 [-0.5182822, -0.2926556, -0.4490192, 0.6664218]], dtype=float)
+     
+ 
+ 
+ The same matrix diagonalised with ``numpy`` yields:
+ 
+ .. code::
+ 
+     # code to be run in CPython
+     
+     a = array([[1, 2, 1, 4], [2, 5, 3, 5], [1, 3, 6, 1], [4, 5, 1, 7]], dtype=np.uint8)
+     x, y = eig(a)
+     print('eigenvectors of a:\n', x)
+     print('\neigenvalues of a:\n', y)
+ 
+ .. parsed-literal::
+ 
+     eigenvectors of a:
+      [13.77672606 -1.16528837  0.80293655  5.58562576]
+     
+     eigenvalues of a:
+      [[ 0.32561419  0.815156    0.44994112 -0.16446602]
+      [ 0.57300777  0.22113342 -0.78469926  0.08372081]
+      [ 0.34861093 -0.13401142  0.31007764  0.87427868]
+      [ 0.66641421 -0.51832581  0.29266348 -0.44897499]]
+ 
+ 
+ When comparing results, we should keep two things in mind:
+ 
+ 1. the eigenvalues and eigenvectors are not necessarily sorted in the
+    same way
+ 2. an eigenvector can be multiplied by an arbitrary non-zero scalar, and
+    it is still an eigenvector with the same eigenvalue. This is why all
+    signs of the eigenvector belonging to 5.58, and 0.80 are flipped in
+    ``ulab`` with respect to ``numpy``. This difference, however, is of
+    absolutely no consequence.
+ 
+ Computation expenses
+ ~~~~~~~~~~~~~~~~~~~~
+ 
+ Since the function is based on `Givens
+ rotations <https://en.wikipedia.org/wiki/Givens_rotation>`__ and runs
+ till convergence is achieved, or till the maximum number of allowed
+ rotations is exhausted, there is no universal estimate for the time
+ required to find the eigenvalues. However, an order of magnitude can, at
+ least, be guessed based on the measurement below:
+ 
+ .. code::
+         
+     # code to be run in micropython
+     
+     import ulab as np
+     from ulab import linalg
+     
+     @timeit
+     def matrix_eig(a):
+         return linalg.eig(a)
+     
+     a = np.array([[1, 2, 1, 4], [2, 5, 3, 5], [1, 3, 6, 1], [4, 5, 1, 7]], dtype=np.uint8)
+     
+     matrix_eig(a)
+ 
+ .. parsed-literal::
+ 
+     execution time:  111  us
+     
+ 
+ 
+ Cholesky decomposition
+ ----------------------
+ 
+ ``numpy``:
+ https://docs.scipy.org/doc/numpy-1.17.0/reference/generated/numpy.linalg.cholesky.html
+ 
+ ``cholesky`` takes a positive definite, symmetric square matrix as its
+ single argument, and returns *square root matrix* in the lower
+ triangular form. If the input argument does not fulfill the positivity
+ or symmetry condition, a ``ValueError`` is raised.
+ 
+ .. code::
+         
+     # code to be run in micropython
+     
+     import ulab
+     from ulab import linalg
+     
+     a = ulab.array([[25, 15, -5], [15, 18,  0], [-5,  0, 11]])
+     print('a: ', a)
+     print('\n' + '='*20 + '\nCholesky decomposition\n', linalg.cholesky(a))
+ 
+ .. parsed-literal::
+ 
+     a:  array([[25.0, 15.0, -5.0],
+     	 [15.0, 18.0, 0.0],
+     	 [-5.0, 0.0, 11.0]], dtype=float)
+     
+     ====================
+     Cholesky decomposition
+      array([[5.0, 0.0, 0.0],
+     	 [3.0, 3.0, 0.0],
+     	 [-1.0, 1.0, 3.0]], dtype=float)
+     
+     
+ 
+ 
+ trace
+ -----
+ 
+ ``numpy``:
+ https://docs.scipy.org/doc/numpy-1.17.0/reference/generated/numpy.linalg.trace.html
+ 
+ The ``trace`` function returns the sum of the diagonal elements of a
+ square matrix. If the input argument is not a square matrix, an
+ exception will be raised.
+ 
+ The scalar so returned will inherit the type of the input array, i.e.,
+ integer arrays have integer trace, and floating point arrays a floating
+ point trace.
+ 
+ .. code::
+         
+     # code to be run in micropython
+     
+     import ulab
+     from ulab import linalg
+     
+     a = ulab.array([[25, 15, -5], [15, 18,  0], [-5,  0, 11]], dtype=ulab.int8)
+     print('a: ', a)
+     print('\ntrace of a: ', linalg.trace(a))
+     
+     b = ulab.array([[25, 15, -5], [15, 18,  0], [-5,  0, 11]], dtype=ulab.float)
+     
+     print('='*20 + '\nb: ', b)
+     print('\ntrace of b: ', linalg.trace(b))
+ 
+ .. parsed-literal::
+ 
+     a:  array([[25, 15, -5],
+     	 [15, 18, 0],
+     	 [-5, 0, 11]], dtype=int8)
+     
+     trace of a:  54
+     ====================
+     b:  array([[25.0, 15.0, -5.0],
+     	 [15.0, 18.0, 0.0],
+     	 [-5.0, 0.0, 11.0]], dtype=float)
+     
+     trace of b:  54.0
+     
+     
+ 
+ 
+ Polynomials
+ ===========
+ 
+ Functions in the polynomial sub-module can be invoked by importing the
+ module first.
+ 
+ polyval
+ -------
+ 
+ ``numpy``:
+ https://docs.scipy.org/doc/numpy/reference/generated/numpy.polyval.html
+ 
+ ``polyval`` takes two arguments, both arrays or other iterables.
+ 
+ .. code::
+         
+     # code to be run in micropython
+     
+     import ulab as np
+     from ulab import poly
+     
+     p = [1, 1, 1, 0]
+     x = [0, 1, 2, 3, 4]
+     print('coefficients: ', p)
+     print('independent values: ', x)
+     print('\nvalues of p(x): ', poly.polyval(p, x))
+     
+     # the same works with one-dimensional ndarrays
+     a = np.array(x)
+     print('\nndarray (a): ', a)
+     print('value of p(a): ', poly.polyval(p, a))
+ 
+ .. parsed-literal::
+ 
+     coefficients:  [1, 1, 1, 0]
+     independent values:  [0, 1, 2, 3, 4]
+     
+     values of p(x):  array([0.0, 3.0, 14.0, 39.0, 84.0], dtype=float)
+     
+     ndarray (a):  array([0.0, 1.0, 2.0, 3.0, 4.0], dtype=float)
+     value of p(a):  array([0.0, 3.0, 14.0, 39.0, 84.0], dtype=float)
+     
+     
+ 
+ 
+ polyfit
+ -------
+ 
+ ``numpy``:
+ https://docs.scipy.org/doc/numpy/reference/generated/numpy.polyfit.html
+ 
+ polyfit takes two, or three arguments. The last one is the degree of the
+ polynomial that will be fitted, the last but one is an array or iterable
+ with the ``y`` (dependent) values, and the first one, an array or
+ iterable with the ``x`` (independent) values, can be dropped. If that is
+ the case, ``x`` will be generated in the function, assuming uniform
+ sampling.
+ 
+ If the length of ``x``, and ``y`` are not the same, the function raises
+ a ``ValueError``.
+ 
+ .. code::
+         
+     # code to be run in micropython
+     
+     import ulab as np
+     from ulab import poly
+     
+     x = np.array([0, 1, 2, 3, 4, 5, 6])
+     y = np.array([9, 4, 1, 0, 1, 4, 9])
+     print('independent values:\t', x)
+     print('dependent values:\t', y)
+     print('fitted values:\t\t', poly.polyfit(x, y, 2))
+     
+     # the same with missing x
+     print('\ndependent values:\t', y)
+     print('fitted values:\t\t', poly.polyfit(y, 2))
+ 
+ .. parsed-literal::
+ 
+     independent values:	 array([0.0, 1.0, 2.0, 3.0, 4.0, 5.0, 6.0], dtype=float)
+     dependent values:	 array([9.0, 4.0, 1.0, 0.0, 1.0, 4.0, 9.0], dtype=float)
+     fitted values:		 array([1.0, -6.0, 9.000000000000004], dtype=float)
+     
+     dependent values:	 array([9.0, 4.0, 1.0, 0.0, 1.0, 4.0, 9.0], dtype=float)
+     fitted values:		 array([1.0, -6.0, 9.000000000000004], dtype=float)
+     
+     
+ 
+ 
+ Execution time
+ ~~~~~~~~~~~~~~
+ 
+ ``polyfit`` is based on the inversion of a matrix (there is more on the
+ background in https://en.wikipedia.org/wiki/Polynomial_regression), and
+ it requires the intermediate storage of ``2*N*(deg+1)`` floats, where
+ ``N`` is the number of entries in the input array, and ``deg`` is the
+ fit’s degree. The additional computation costs of the matrix inversion
+ discussed in `inv <#inv>`__ also apply. The example from above needs
+ around 150 microseconds to return:
+ 
+ .. code::
+         
+     # code to be run in micropython
+     
+     import ulab as np
+     from ulab import poly
+     
+     @timeit
+     def time_polyfit(x, y, n):
+         return poly.polyfit(x, y, n)
+     
+     x = np.array([0, 1, 2, 3, 4, 5, 6])
+     y = np.array([9, 4, 1, 0, 1, 4, 9])
+     
+     time_polyfit(x, y, 2)
+ 
+ .. parsed-literal::
+ 
+     execution time:  153  us
+     
+ 
+ 
+ Fourier transforms
+ ==================
+ 
+ Functions related to Fourier transforms can be called by importing the
+ ``fft`` sub-module first.
+ 
+ ``numpy``:
+ https://docs.scipy.org/doc/numpy/reference/generated/numpy.fft.ifft.html
+ 
+ fft
+ ---
+ 
+ Since ``ulab``\ ’s ``ndarray`` does not support complex numbers, the
+ invocation of the Fourier transform differs from that in ``numpy``. In
+ ``numpy``, you can simply pass an array or iterable to the function, and
+ it will be treated as a complex array:
+ 
+ .. code::
+ 
+     # code to be run in CPython
+     
+     fft.fft([1, 2, 3, 4, 1, 2, 3, 4])
+ 
+ 
+ 
+ .. parsed-literal::
+ 
+     array([20.+0.j,  0.+0.j, -4.+4.j,  0.+0.j, -4.+0.j,  0.+0.j, -4.-4.j,
+             0.+0.j])
+ 
+ 
+ 
+ **WARNING:** The array that is returned is also complex, i.e., the real
+ and imaginary components are cast together. In ``ulab``, the real and
+ imaginary parts are treated separately: you have to pass two
+ ``ndarray``\ s to the function, although, the second argument is
+ optional, in which case the imaginary part is assumed to be zero.
+ 
+ **WARNING:** The function, as opposed to ``numpy``, returns a 2-tuple,
+ whose elements are two ``ndarray``\ s, holding the real and imaginary
+ parts of the transform separately.
+ 
+ .. code::
+         
+     # code to be run in micropython
+     
+     import ulab as np
+     from ulab import vector
+     from ulab import fft
+     
+     x = np.linspace(0, 10, num=1024)
+     y = vector.sin(x)
+     z = np.zeros(len(x))
+     
+     a, b = fft.fft(x)
+     print('real part:\t', a)
+     print('\nimaginary part:\t', b)
+     
+     c, d = fft.fft(x, z)
+     print('\nreal part:\t', c)
+     print('\nimaginary part:\t', d)
+ 
+ .. parsed-literal::
+ 
+     real part:	 array([5119.996, -5.004663, -5.004798, ..., -5.005482, -5.005643, -5.006577], dtype=float)
+     
+     imaginary part:	 array([0.0, 1631.333, 815.659, ..., -543.764, -815.6588, -1631.333], dtype=float)
+     
+     real part:	 array([5119.996, -5.004663, -5.004798, ..., -5.005482, -5.005643, -5.006577], dtype=float)
+     
+     imaginary part:	 array([0.0, 1631.333, 815.659, ..., -543.764, -815.6588, -1631.333], dtype=float)
+     
+ 
+ 
+ ifft
+ ----
+ 
+ The above-mentioned rules apply to the inverse Fourier transform. The
+ inverse is also normalised by ``N``, the number of elements, as is
+ customary in ``numpy``. With the normalisation, we can ascertain that
+ the inverse of the transform is equal to the original array.
+ 
+ .. code::
+         
+     # code to be run in micropython
+     
+     import ulab as np
+     from ulab import vector
+     from ulab import fft
+     
+     x = np.linspace(0, 10, num=1024)
+     y = vector.sin(x)
+     
+     a, b = fft.fft(y)
+     
+     print('original vector:\t', y)
+     
+     y, z = fft.ifft(a, b)
+     # the real part should be equal to y
+     print('\nreal part of inverse:\t', y)
+     # the imaginary part should be equal to zero
+     print('\nimaginary part of inverse:\t', z)
+ 
+ .. parsed-literal::
+ 
+     original vector:	 array([0.0, 0.009775016, 0.0195491, ..., -0.5275068, -0.5357859, -0.5440139], dtype=float)
+     
+     real part of inverse:	 array([-2.980232e-08, 0.0097754, 0.0195494, ..., -0.5275064, -0.5357857, -0.5440133], dtype=float)
+     
+     imaginary part of inverse:	 array([-2.980232e-08, -1.451171e-07, 3.693752e-08, ..., 6.44871e-08, 9.34986e-08, 2.18336e-07], dtype=float)
+     
+ 
+ 
+ Note that unlike in ``numpy``, the length of the array on which the
+ Fourier transform is carried out must be a power of 2. If this is not
+ the case, the function raises a ``ValueError`` exception.
+ 
+ spectrogram
+ -----------
+ 
+ In addition to the Fourier transform and its inverse, ``ulab`` also
+ sports a function called ``spectrogram``, which returns the absolute
+ value of the Fourier transform. This could be used to find the dominant
+ spectral component in a time series. The arguments are treated in the
+ same way as in ``fft``, and ``ifft``. In order to keep compatibility of
+ the core modules with ``numpy``, this function is defined in the
+ ``extras`` sub-module.
+ 
+ .. code::
+         
+     # code to be run in micropython
+     
+     import ulab as np
+     from ulab import vector
+     from ulab import extras
+     
+     x = np.linspace(0, 10, num=1024)
+     y = vector.sin(x)
+     
+     a = extras.spectrogram(y)
+     
+     print('original vector:\t', y)
+     print('\nspectrum:\t', a)
+ 
+ .. parsed-literal::
+ 
+     original vector:	 array([0.0, 0.009775015390171337, 0.01954909674625918, ..., -0.5275140569487312, -0.5357931822978732, -0.5440211108893639], dtype=float)
+     
+     spectrum:	 array([187.8635087634579, 315.3112063607119, 347.8814873399374, ..., 84.45888934298905, 347.8814873399374, 315.3112063607118], dtype=float)
+     
+     
+ 
+ 
+ As such, ``spectrogram`` is really just a shorthand for
+ ``np.sqrt(a*a + b*b)``:
+ 
+ .. code::
+         
+     # code to be run in micropython
+     
+     import ulab as np
+     from ulab import fft
+     from ulab import vector
+     from ulab import extras
+     
+     x = np.linspace(0, 10, num=1024)
+     y = vector.sin(x)
+     
+     a, b = fft.fft(y)
+     
+     print('\nspectrum calculated the hard way:\t', vector.sqrt(a*a + b*b))
+     
+     a = extras.spectrogram(y)
+     
+     print('\nspectrum calculated the lazy way:\t', a)
+ 
+ .. parsed-literal::
+ 
+     
+     spectrum calculated the hard way:	 array([187.8641, 315.3125, 347.8804, ..., 84.4587, 347.8803, 315.3124], dtype=float)
+     
+     spectrum calculated the lazy way:	 array([187.8641, 315.3125, 347.8804, ..., 84.4587, 347.8803, 315.3124], dtype=float)
+     
+ 
+ 
+ Computation and storage costs
+ -----------------------------
+ 
+ RAM
+ ~~~
+ 
+ The FFT routine of ``ulab`` calculates the transform in place. This
+ means that beyond reserving space for the two ``ndarray``\ s that will
+ be returned (the computation uses these two as intermediate storage
+ space), only a handful of temporary variables, all floats or 32-bit
+ integers, are required.
+ 
+ Speed of FFTs
+ ~~~~~~~~~~~~~
+ 
+ A comment on the speed: a 1024-point transform implemented in python
+ would cost around 90 ms, and 13 ms in assembly, if the code runs on the
+ pyboard, v.1.1. You can gain a factor of four by moving to the D series
+ https://github.com/peterhinch/micropython-fourier/blob/master/README.md#8-performance.
+ 
+ .. code::
+         
+     # code to be run in micropython
+     
+     import ulab as np
+     from ulab import vector
+     from ulab import fft
+     
+     x = np.linspace(0, 10, num=1024)
+     y = vector.sin(x)
+     
+     @timeit
+     def np_fft(y):
+         return fft.fft(y)
+     
+     a, b = np_fft(y)
+ 
+ .. parsed-literal::
+ 
+     execution time:  1985  us
+     
+ 
+ 
+ The C implementation runs in less than 2 ms on the pyboard (we have just
+ measured that), and has been reported to run in under 0.8 ms on the D
+ series board. That is an improvement of at least a factor of four.
+ 
+ Filter routines
+ ===============
+ 
+ Functions in the ``filter`` module can be called by importing the
+ sub-module first.
+ 
+ convolve
+ --------
+ 
+ ``numpy``:
+ https://docs.scipy.org/doc/numpy/reference/generated/numpy.convolve.html
+ 
+ Returns the discrete, linear convolution of two one-dimensional
+ sequences.
+ 
+ Only the ``full`` mode is supported, and the ``mode`` named parameter is
+ not accepted. Note that all other modes can be had by slicing a ``full``
+ result.
+ 
+ .. code::
+         
+     # code to be run in micropython
+     
+     import ulab as np
+     from ulab import filter
+     
+     x = np.array((1,2,3))
+     y = np.array((1,10,100,1000))
+     
+     print(filter.convolve(x, y))
+ 
+ .. parsed-literal::
+ 
+     array([1.0, 12.0, 123.0, 1230.0, 2300.0, 3000.0], dtype=float)
+     
+     
+ 
+ 
+ Comparison of arrays
+ ====================
+ 
+ Functions in the ``compare`` module can be called by importing the
+ sub-module first.
+ 
+ equal, not_equal
+ ----------------
+ 
+ ``numpy``:
+ https://numpy.org/doc/stable/reference/generated/numpy.equal.html
+ 
+ ``numpy``:
+ https://numpy.org/doc/stable/reference/generated/numpy.not_equal.html
+ 
+ In ``micropython``, equality of arrays or scalars can be established by
+ utilising the ``==``, ``!=``, ``<``, ``>``, ``<=``, or ``=>`` binary
+ operators. In ``circuitpython``, ``==`` and ``!=`` will produce
+ unexpected results. In order to avoid this discrepancy, and to maintain
+ compatibility with ``numpy``, ``ulab`` implements the ``equal`` and
+ ``not_equal`` operators that return the same results, irrespective of
+ the ``python`` implementation.
+ 
+ These two functions take two ``ndarray``\ s, or scalars as their
+ arguments. No keyword arguments are implemented.
+ 
+ .. code::
+         
+     # code to be run in micropython
+     
+     import ulab as np
+     
+     a = np.array(range(9))
+     b = np.zeros(9)
+     
+     print('a: ', a)
+     print('b: ', b)
+     print('\na == b: ', np.compare.equal(a, b))
+     print('a != b: ', np.compare.not_equal(a, b))
+     
+     # comparison with scalars
+     print('a == 2: ', np.compare.equal(a, 2))
+ 
+ .. parsed-literal::
+ 
+     a:  array([0.0, 1.0, 2.0, 3.0, 4.0, 5.0, 6.0, 7.0, 8.0], dtype=float)
+     b:  array([0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0], dtype=float)
+     
+     a == b:  [True, False, False, False, False, False, False, False, False]
+     a != b:  [False, True, True, True, True, True, True, True, True]
+     a == 2:  [False, False, True, False, False, False, False, False, False]
+     
+     
+ 
+ 
+ minimum
+ -------
+ 
+ ``numpy``:
+ https://docs.scipy.org/doc/numpy/reference/generated/numpy.minimum.html
+ 
+ Returns the minimum of two arrays, or two scalars, or an array, and a
+ scalar. Partial broadcasting is implemented. If the arrays are of
+ different ``dtype``, the output is upcast as in `Binary
+ operators <#Binary-operators>`__. If both inputs are scalars, a scalar
+ is returned. Only positional arguments are implemented.
+ 
+ maximum
+ -------
+ 
+ ``numpy``:
+ https://docs.scipy.org/doc/numpy/reference/generated/numpy.maximum.html
+ 
+ Returns the maximum of two arrays, or two scalars, or an array, and a
+ scalar. Partial broadcasting is implemented. If the arrays are of
+ different ``dtype``, the output is upcast as in `Binary
+ operators <#Binary-operators>`__. If both inputs are scalars, a scalar
+ is returned. Only positional arguments are implemented.
+ 
+ .. code::
+         
+     # code to be run in micropython
+     
+     import ulab
+     
+     a = ulab.array([1, 2, 3, 4, 5], dtype=ulab.uint8)
+     b = ulab.array([5, 4, 3, 2, 1], dtype=ulab.float)
+     print('minimum of a, and b:')
+     print(ulab.compare.minimum(a, b))
+     
+     print('\nmaximum of a, and b:')
+     print(ulab.compare.maximum(a, b))
+     
+     print('\nmaximum of 1, and 5.5:')
+     print(ulab.compare.maximum(1, 5.5))
+ 
+ .. parsed-literal::
+ 
+     minimum of a, and b:
+     array([1.0, 2.0, 3.0, 2.0, 1.0], dtype=float)
+     
+     maximum of a, and b:
+     array([5.0, 4.0, 3.0, 4.0, 5.0], dtype=float)
+     
+     maximum of 1, and 5.5:
+     5.5
+     
+     
+ 
+ 
+ clip
+ ----
+ 
+ ``numpy``:
+ https://docs.scipy.org/doc/numpy/reference/generated/numpy.clip.html
+ 
+ Clips an array, i.e., values that are outside of an interval are clipped
+ to the interval edges. The function is equivalent to
+ ``maximum(a_min, minimum(a, a_max))``. or two scalars, hence partial
+ broadcasting takes place exactly as in `minimum <#minimum>`__. If the
+ arrays are of different ``dtype``, the output is upcast as in `Binary
+ operators <#Binary-operators>`__.
+ 
+ .. code::
+         
+     # code to be run in micropython
+     
+     import ulab
+     
+     a = ulab.array(range(9), dtype=ulab.uint8)
+     print('a:\t\t', a)
+     print('clipped:\t', ulab.compare.clip(a, 3, 7))
+     
+     b = 3 * ulab.ones(len(a), dtype=ulab.float)
+     print('\na:\t\t', a)
+     print('b:\t\t', b)
+     print('clipped:\t', ulab.compare.clip(a, b, 7))
+ 
+ .. parsed-literal::
+ 
+     a:		 array([0, 1, 2, 3, 4, 5, 6, 7, 8], dtype=uint8)
+     clipped:	 array([3, 3, 3, 3, 4, 5, 6, 7, 7], dtype=uint8)
+     
+     a:		 array([0, 1, 2, 3, 4, 5, 6, 7, 8], dtype=uint8)
+     b:		 array([3.0, 3.0, 3.0, 3.0, 3.0, 3.0, 3.0, 3.0, 3.0], dtype=float)
+     clipped:	 array([3.0, 3.0, 3.0, 3.0, 4.0, 5.0, 6.0, 7.0, 7.0], dtype=float)
+     
+     
+ 
+ 
+ Interpolation, root finding, and function minimisation
+ ======================================================
+ 
+ The ``approx`` sub-module defines functions for interpolating numerical
+ data, and finding the roots and the minimum of arbitrary functions
+ defined in ``python``. Note that routines that work with user-defined
+ functions still have to call the underlying ``python`` code, and
+ therefore, gains in speed are not as significant as with other
+ vectorised operations. As a rule of thumb, a factor of two can be
+ expected, when compared to an optimised python implementation.
+ 
+ interp
+ ------
+ 
+ ``numpy``: https://docs.scipy.org/doc/numpy/numpy.interp
+ 
+ The ``interp`` function returns the linearly interpolated values of a
+ one-dimensional numerical array. It requires three positional
+ arguments,\ ``x``, at which the interpolated values are evaluated,
+ ``xp``, the array of the independent variables of the data, and ``fp``,
+ the array of the dependent values of the data. ``xp`` must be a
+ monotonically increasing sequence of numbers.
+ 
+ Two keyword arguments, ``left``, and ``right`` can also be supplied;
+ these determine the return values, if ``x < xp[0]``, and ``x > xp[-1]``,
+ respectively. If these arguments are not supplied, ``left``, and
+ ``right`` default to ``fp[0]``, and ``fp[-1]``, respectively.
+ 
+ .. code::
+         
+     # code to be run in micropython
+     
+     import ulab
+     from ulab import approx
+     
+     x = ulab.array([1, 2, 3, 4, 5])
+     xp = ulab.array([1, 2, 3, 4])
+     fp = ulab.array([1, 2, 3, 5])
+     x = x - 0.2
+     print(x)
+     print(approx.interp(x, xp, fp))
+     print(approx.interp(x, xp, fp, left=0.0))
+     print(approx.interp(x, xp, fp, right=10.0))
+ 
+ .. parsed-literal::
+ 
+     array([0.8, 1.8, 2.8, 3.8, 4.8], dtype=float)
+     array([1.0, 1.8, 2.8, 4.6, 5.0], dtype=float)
+     array([0.0, 1.8, 2.8, 4.6, 5.0], dtype=float)
+     array([1.0, 1.8, 2.8, 4.6, 10.0], dtype=float)
+     
+     
+ 
+ 
+ newton
+ ------
+ 
+ ``scipy``:https://docs.scipy.org/doc/scipy/reference/generated/scipy.optimize.newton.html
+ 
+ ``newton`` finds a zero of a real, user-defined function using the
+ Newton-Raphson (or secant or Halley’s) method. The routine requires two
+ positional arguments, the function, and the initial value. Three keyword
+ arguments can be supplied to control the iteration. These are the
+ absolute and relative tolerances ``tol``, and ``rtol``, respectively,
+ and the number of iterations before stopping, ``maxiter``. The function
+ retuns a single scalar, the position of the root.
+ 
+ .. code::
+         
+     # code to be run in micropython
+     
+     import ulab
+     from ulab import approx
+         
+     def f(x):
+         return x*x*x - 2.0
+     
+     print(approx.newton(f, 3., tol=0.001, rtol=0.01))
+ 
+ .. parsed-literal::
+ 
+     1.260135727246117
+     
+     
+ 
+ 
+ bisect
+ ------
+ 
+ ``scipy``:
+ https://docs.scipy.org/doc/scipy/reference/generated/scipy.optimize.bisect.html
+ 
+ ``bisect`` finds the root of a function of one variable using a simple
+ bisection routine. It takes three positional arguments, the function
+ itself, and two starting points. The function must have opposite signs
+ at the starting points. Returned is the position of the root.
+ 
+ Two keyword arguments, ``xtol``, and ``maxiter`` can be supplied to
+ control the accuracy, and the number of bisections, respectively.
+ 
+ .. code::
+         
+     # code to be run in micropython
+     
+     import ulab
+     from ulab import approx
+         
+     def f(x):
+         return x*x - 1
+     
+     print(approx.bisect(f, 0, 4))
+     
+     print('only 8 bisections: ',  approx.bisect(f, 0, 4, maxiter=8))
+     
+     print('with 0.1 accuracy: ',  approx.bisect(f, 0, 4, xtol=0.1))
+ 
+ .. parsed-literal::
+ 
+     0.9999997615814209
+     only 8 bisections:  0.984375
+     with 0.1 accuracy:  0.9375
+     
+     
+ 
+ 
+ Performance
+ ~~~~~~~~~~~
+ 
+ Since the ``bisect`` routine calls user-defined ``python`` functions,
+ the speed gain is only about a factor of two, if compared to a purely
+ ``python`` implementation.
+ 
+ .. code::
+         
+     # code to be run in micropython
+     
+     import ulab
+     from ulab import approx
+     
+     def f(x):
+         return (x-1)*(x-1) - 2.0
+     
+     def bisect(f, a, b, xtol=2.4e-7, maxiter=100):
+         if f(a) * f(b) > 0:
+             raise ValueError
+     
+         rtb = a if f(a) < 0.0 else b
+         dx = b - a if f(a) < 0.0 else a - b
+         for i in range(maxiter):
+             dx *= 0.5
+             x_mid = rtb + dx
+             mid_value = f(x_mid)
+             if mid_value < 0:
+                 rtb = x_mid
+             if abs(dx) < xtol:
+                 break
+     
+         return rtb
+     
+     @timeit
+     def bisect_approx(f, a, b):
+         return approx.bisect(f, a, b)
+     
+     @timeit
+     def bisect_timed(f, a, b):
+         return bisect(f, a, b)
+     
+     print('bisect running in python')
+     bisect_timed(f, 3, 2)
+     
+     print('bisect running in C')
+     bisect_approx(f, 3, 2)
+ 
+ .. parsed-literal::
+ 
+     bisect running in python
+     execution time:  1270  us
+     bisect running in C
+     execution time:  642  us
+     
+ 
+ 
+ fmin
+ ----
+ 
+ ``scipy``:
+ https://docs.scipy.org/doc/scipy/reference/generated/scipy.optimize.fmin.html
+ 
+ The ``fmin`` function finds the position of the minimum of a
+ user-defined function by using the downhill simplex method. Requires two
+ positional arguments, the function, and the initial value. Three keyword
+ arguments, ``xatol``, ``fatol``, and ``maxiter`` stipulate conditions
+ for stopping.
+ 
+ .. code::
+         
+     # code to be run in micropython
+     import ulab
+     from ulab import approx
+     
+     def f(x):
+         return (x-1)**2 - 1
+     
+     print(approx.fmin(f, 3.0))
+     print(approx.fmin(f, 3.0, xatol=0.1))
+ 
+ .. parsed-literal::
+ 
+     0.9996093749999952
+     1.199999999999996
+     
+     
+ 
+ 
+ Extending ulab
+ ==============
+ 
+ As mentioned at the beginning, ``ulab`` is a set of sub-modules, out of
+ which one, ``extra`` is explicitly reserved for user code. You should
+ implement your functions in this sub-module, or sub-modules thereof.
+ 
+ The new functions can easily be added to ``extra`` in a couple of simple
+ steps. At the C level, the type definition of an ``ndarray`` is as
+ follows:
+ 
+ .. code:: c
+ 
+    typedef struct _ndarray_obj_t {
+        mp_obj_base_t base;
+        size_t m, n;
+        mp_obj_array_t *array;
+        size_t bytes;
+    } ndarray_obj_t;
+ 
+ Creating a new ndarray
+ ----------------------
+ 
+ A new ``ndarray`` can be created by calling
+ 
+ .. code:: c
+ 
+    ndarray_obj_t *new_ndarray = create_new_ndarray(m, n, typecode);
+ 
+ where ``m``, and ``n`` are the number of rows and columns, respectively,
+ and ``typecode`` is one of the values from
+ 
+ .. code:: c
+ 
+    enum NDARRAY_TYPE {
+        NDARRAY_UINT8 = 'B',
+        NDARRAY_INT8 = 'b',
+        NDARRAY_UINT16 = 'H', 
+        NDARRAY_INT16 = 'h',
+        NDARRAY_FLOAT = 'f',
+    };
+ 
+ or
+ 
+ .. code:: c
+ 
+    enum NDARRAY_TYPE {
+        NDARRAY_UINT8 = 'B',
+        NDARRAY_INT8 = 'b',
+        NDARRAY_UINT16 = 'H', 
+        NDARRAY_INT16 = 'h',
+        NDARRAY_FLOAT = 'd',
+    };
+ 
+ The ambiguity is caused by the fact that not all platforms implement
+ ``double``, and there one has to take ``float``\ s. But you haven’t
+ actually got to be concerned by this, because at the very beginning of
+ ``ndarray.h``, this is already taken care of: the pre-processor figures
+ out, what the ``float`` implementation of the hardware platform is, and
+ defines the ``NDARRAY_FLOAT`` typecode accordingly. All you have to keep
+ in mind is that wherever you would use ``float`` or ``double``, you have
+ to use ``mp_float_t``. That type is defined in ``py/mpconfig.h`` of the
+ micropython code base.
+ 
+ Therefore, a 4-by-5 matrix of type float can be created as
+ 
+ .. code:: c
+ 
+    ndarray_obj_t *new_ndarray = create_new_ndarray(4, 5, NDARRAY_FLOAT);
+ 
+ This function also fills in the ``ndarray`` structure’s ``m``, ``n``,
+ and ``bytes`` members, as well initialises the ``array`` member with
+ zeros.
+ 
+ Alternatively, a one-to-one copy of an ``ndarray`` can be gotten by
+ calling
+ 
+ .. code:: c
+ 
+    mp_obj_t copy_of_input_object = ndarray_copy(object_in);
+ 
+ Note, however, that this function takes an input object of type
+ ``mp_obj_t``, and returns a copy of type ``mp_obj_t``, i.e., something
+ that can be taken from, and can immediately be returned to the
+ interpreter. If you want to work on the data in the copy, you still have
+ to create a pointer to it
+ 
+ .. code:: c
+ 
+    ndarray_obj_t *ndarray = MP_OBJ_TO_PTR(copy_of_input_object);
+ 
+ The values stored in ``array`` can be modified or retrieved by accessing
+ ``array->items``. Note that ``array->items`` is a void pointer,
+ therefore, it must be cast before trying to access the elements.
+ ``array`` has at least two useful members. One of them is ``len``, which
+ is the number of elements that the array holds, while the second one is
+ the ``typecode`` that we passed to ``create_new_ndarray`` earlier.
+ 
+ Thus, staying with our example of a 4-by-5 float matrix, we can loop
+ through all entries as
+ 
+ .. code:: c
+ 
+    mp_float_t *items = (mp_float_t *)new_ndarray->array->items;
+    mp_float_t item;
+ 
+    for(size_t i=0; i < new_ndarray->array->len; i++) {
+        item = items[i];
+        // do something with item...
+    }
+ 
+ or, since the data are stored in the pointer in a C-like fashion, as
+ 
+ .. code:: c
+ 
+    mp_float_t *items = (mp_float_t *)new_ndarray->array->items;
+    mp_float_t item;
+ 
+    for(size_t m=0; m < new_ndarray->m; m++) { // loop through the rows
+        for(size_t n=0; n < new_ndarray->n; n++) { // loop through the columns
+            item = items[m*new_ndarray->n+n]; // get the (m,n) entry
+            // do something with item...
+        }
+    }
+ 
+ Accessing data in the ndarray
+ -----------------------------
+ 
+ We have already seen, how the entries of an array can be accessed. If
+ the object in question comes from the user (i.e., via the micropython
+ interface), we can get a pointer to it by calling
+ 
+ .. code:: c
+ 
+    ndarray_obj_t *ndarray = MP_OBJ_TO_PTR(object_in);
+ 
+ Once the pointer is at our disposal, we can get a pointer to the
+ underlying numerical array as discussed earlier.
+ 
+ If you need to find out the typecode of the array, you can get it by
+ accessing the ``typecode`` member of ``array``, i.e.,
+ 
+ .. code:: c
+ 
+    ndarray->array->typecode
+ 
+ should be equal to ``B``, ``b``, ``H``, ``h``, or ``f``. The size of a
+ single item is returned by the function
+ ``mp_binary_get_size('@', ndarray->array->typecode, NULL)``. This number
+ is equal to 1, if the typecode is ``B``, or ``b``, 2, if the typecode is
+ ``H``, or ``h``, 4, if the typecode is ``f``, and 8 for ``d``.
+ 
+ Alternatively, the size can be found out by dividing ``ndarray->bytes``
+ with the product of ``m``, and ``n``, i.e.,
+ 
+ .. code:: c
+ 
+    ndarray->bytes/(ndarray->m*ndarray*n) 
+ 
+ is equal to ``mp_binary_get_size('@', ndarray->array->typecode, NULL)``.
+ 
+ Making certain that we have an ndarray
+ --------------------------------------
+ 
+ A number of operations make sense for ``ndarray``\ s only, therefore,
+ before doing any heavy work on the data, it might be reasonable to
+ check, whether the input argument is of the proper type. This you do by
+ evaluating
+ 
+ .. code:: c
+ 
+    mp_obj_is_type(object_in, &ulab_ndarray_type)
+ 
+ which should return ``true``.
+ 
+ Boilerplate of sorts
+ --------------------
+ 
+ To summarise the contents of the previous three sections, here is a
+ useless function that prints out the size (``m``, and ``n``) of an
+ array, creates a copy of the input, and fills up the resulting matrix
+ with 13.
+ 
+ .. code:: c
+ 
+    mp_obj_t useless_function(mp_obj_t object_in) {
+        if(!mp_obj_is_type(object_in, &ulab_ndarray_type)) {
+            mp_raise_TypeError("useless_function takes only ndarray arguments");
+        }
+        
+        mp_obj_t object_out = ndarray_copy(object_int);
+        
+        ndarray_obj_t *ndarray = MP_OBJ_TO_PTR(object_out);
+        printf("\nsize (m): %ld, size (n): %ld\n", ndarray->m, ndarray->n);
+        printf("\nlength (len): %ld, typecode: %d\n", ndarray->array->len, ndarray->array->typecode);
+        if(ndarray->array->typecode == NDARRAY_UINT8) {
+            // cast the pointer to the items
+            uint8_t *items = (uint8_t *)ndarray->array->items;
+            // retrieve the length of the array, and loop over the elements
+            for(size_t i=0; i < ndarray->array->len; i++) items[i] = 13;
+        } else if(ndarray->array->typecode == NDARRAY_INT8) {
+            int8_t *items = (int8_t *)ndarray->array->items;
+            for(size_t i=0; i < ndarray->array->len; i++) items[i] = 13;
+        } else if(ndarray->array->typecode == NDARRAY_UINT16) {
+            uint16_t *items = (uint16_t *)ndarray->array->items;
+            for(size_t i=0; i < ndarray->array->len; i++) items[i] = 13;
+        } else if(ndarray->array->typecode == NDARRAY_INT16) {
+            int16_t *items = (int16_t *)ndarray->array->items;
+            for(size_t i=0; i < ndarray->array->len; i++) items[i] = 13;
+        } else {
+            float *items = (mp_float_t *)ndarray->array->items;
+            for(size_t i=0; i < ndarray->array->len; i++) items[i] = 13;
+        }
+        return object_out;
+    }
+ 
+ If, on the other hand, you want to create an ``ndarray`` from scratch,
+ and return that, you could work along the following lines:
+ 
+ .. code:: c
+ 
+    mp_obj_t useless_function(mp_obj_t object_in) {
+        uint16_t m = mp_obj_get_int(object_in);
+        
+        ndarray_obj_t *ndarray = create_new_ndarray(1, m, NDARRAY_UINT8);
+        
+        uint8_t *items = (uint8_t *)ndarray->array->items;
+        // do something with the array's entries
+        // ...
+        
+        // and at the very end, return an mp_object_t
+        return MP_PTR_TO_OBJ(ndarray);
+    }
+ 
+ Once the function implementation is done, you should add the function
+ object to the globals dictionary of the ``extra`` sub-module as
+ 
+ .. code:: c
+ 
+    ...
+        MP_DEFINE_CONST_FUN_OBJ_1(useless_function_obj, userless_function);
+    ...
+        STATIC const mp_map_elem_t extra_globals_table[] = {
+    ...
+        { MP_OBJ_NEW_QSTR(MP_QSTR_useless), (mp_obj_t)&useless_function_obj },
+    ...
+    };
+ 
+ The exact form of the function object definition
+ 
+ .. code:: c
+ 
+        MP_DEFINE_CONST_FUN_OBJ_1(useless_function_obj, userless_function);
+ 
+ depends naturally on what exactly you implemented, i.e., how many
+ arguments the function takes, whether only positional arguments allowed
+ and so on. For a thorough discussion on how function objects have to be
+ defined, see, e.g., the `user module programming
+ manual <#https://micropython-usermod.readthedocs.io/en/latest/>`__.
+ 
+ And with that, you are done. You can simply call the compiler as
+ 
+ .. code:: bash
+ 
+    make BOARD=PYBV11 USER_C_MODULES=../../../ulab all
+ 
+ and the rest is taken care of.
+ 
+ In the boilerplate above, we cast the pointer to ``array->items`` to the
+ required type. There are certain operations, however, when you do not
+ need the casting. If you do not want to change the array’s values, only
+ their position within the array, you can get away with copying the
+ memory content, regardless the type. A good example for such a scenario
+ is the transpose function in
+ https://github.com/v923z/micropython-ulab/blob/master/code/linalg.c.
diff -crNb MicorpythonOriginal1.12/ulab/docs/source/ulab.rst micropython1.12_withUlab/ulab/docs/source/ulab.rst
*** MicorpythonOriginal1.12/ulab/docs/source/ulab.rst	1970-01-01 02:00:00.000000000 +0200
--- micropython1.12_withUlab/ulab/docs/source/ulab.rst	2020-06-18 18:25:25.710905000 +0200
***************
*** 0 ****
--- 1,4945 ----
+ 
+ ipython3.. code ::
+         
+     %pylab inline
+ .. parsed-literal::
+ 
+     Populating the interactive namespace from numpy and matplotlib
+ 
+ Introduction
+ ============
+ 
+ ulab is a C module for micropython. My goal was to implement a small
+ subset of numpy. I chose those functions and methods that might be
+ useful in the context of a microcontroller. This means low-level data
+ processing of linear (array) and two-dimensional (matrix) data.
+ 
+ The main points of ulab are
+ 
+ -  compact, iterable and slicable container of numerical data in 1, and
+    2 dimensions (arrays and matrices). In addition, these containers
+    support all the relevant unary and binary operators (e.g., ``len``,
+    ==, +, \*, etc.)
+ -  vectorised computations on micropython iterables and numerical
+    arrays/matrices (universal functions)
+ -  basic linear algebra routines (matrix inversion, matrix reshaping,
+    and transposition)
+ -  polynomial fits to numerical data
+ -  fast Fourier transforms
+ 
+ The code itself is split into submodules. This should make exclusion of
+ unnecessary functions, if storage space is a concern. Each section of
+ the implementation part kicks out with a short discussion on what can be
+ done with the particular submodule, and what are the tripping points at
+ the C level. I hope that these musings can be used as a starting point
+ for further discussion on the code.
+ 
+ The code and its documentation can be found under
+ https://github.com/v923z/micropython-ulab/. The MIT licence applies to
+ all material.
+ 
+ Environmental settings and magic commands
+ =========================================
+ 
+ The entire C source code, as well as the documentation (mainly verbose
+ comments on certain aspects of the implementation) are contained in this
+ notebook. The code is exported to separate C files in ``/ulab/``, and
+ then compiled from this notebook. However, I would like to stress that
+ the compilation does not require a jupyter notebook. It can be done from
+ the command line by invoking the command in the `make <#make>`__, or
+ `Compiling the module <#Compiling-the-module>`__. After all, the ipython
+ kernel simply passes the ``make`` commands to the underlying operating
+ system.
+ 
+ Testing is done on the unix and stm32 ports of micropython, also
+ directly from the notebook. This is why this section contains a couple
+ of magic functions. But once again: the C module can be used without the
+ notebook.
+ 
+ ipython3.. code ::
+         
+     %cd ../../micropython/ports/unix/
+ .. parsed-literal::
+ 
+     /home/v923z/sandbox/micropython/v1.11/micropython/ports/unix
+ 
+ ipython3.. code ::
+         
+     from IPython.core.magic import Magics, magics_class, line_cell_magic
+     from IPython.core.magic import cell_magic, register_cell_magic, register_line_magic
+     from IPython.core.magic_arguments import argument, magic_arguments, parse_argstring
+     import subprocess
+     import os
+ ipython3.. code ::
+         
+     def string_to_matrix(string):
+         matrix = []
+         string = string.replace("array(\'d\', ", '').replace(')', '').replace('[', '').replace(']', '')
+         for _str in string.split('\r\n'):
+             if len(_str) > 0:
+                 matrix.append([float(n) for n in _str.split(',')])
+         return array(matrix)
+ micropython magic command
+ -------------------------
+ 
+ The following magic class takes the content of a cell, and depending on
+ the arguments, either passes it to the unix, or the stm32
+ implementation. In the latter case, a pyboard must be connected to the
+ computer, and must be initialised beforehand.
+ 
+ ipython3.. code ::
+         
+     @magics_class
+     class PyboardMagic(Magics):
+         @cell_magic
+         @magic_arguments()
+         @argument('-skip')
+         @argument('-unix')
+         @argument('-file')
+         @argument('-data')
+         @argument('-time')
+         @argument('-memory')
+         def micropython(self, line='', cell=None):
+             args = parse_argstring(self.micropython, line)
+             if args.skip: # doesn't care about the cell's content
+                 print('skipped execution')
+                 return None # do not parse the rest
+             if args.unix: # tests the code on the unix port. Note that this works on unix only
+                 with open('/dev/shm/micropython.py', 'w') as fout:
+                     fout.write(cell)
+                 proc = subprocess.Popen(["./micropython", "/dev/shm/micropython.py"], 
+                                         stdout=subprocess.PIPE, stderr=subprocess.PIPE)
+                 print(proc.stdout.read().decode("utf-8"))
+                 print(proc.stderr.read().decode("utf-8"))
+                 return None
+             if args.file: # can be used to copy the cell content onto the pyboard's flash
+                 spaces = "    "
+                 try:
+                     with open(args.file, 'w') as fout:
+                         fout.write(cell.replace('\t', spaces))
+                         printf('written cell to {}'.format(args.file))
+                 except:
+                     print('Failed to write to disc!')
+                 return None # do not parse the rest
+             if args.data: # can be used to load data from the pyboard directly into kernel space
+                 message = pyb.exec(cell)
+                 if len(message) == 0:
+                     print('pyboard >>>')
+                 else:
+                     print(message.decode('utf-8'))
+                     # register new variable in user namespace
+                     self.shell.user_ns[args.data] = string_to_matrix(message.decode("utf-8"))
+             
+             if args.time: # measures the time of executions
+                 pyb.exec('import utime')
+                 message = pyb.exec('t = utime.ticks_us()\n' + cell + '\ndelta = utime.ticks_diff(utime.ticks_us(), t)' + 
+                                    "\nprint('execution time: {:d} us'.format(delta))")
+                 print(message.decode('utf-8'))
+             
+             if args.memory: # prints out memory information 
+                 message = pyb.exec('from micropython import mem_info\nprint(mem_info())\n')
+                 print("memory before execution:\n========================\n", message.decode('utf-8'))
+                 message = pyb.exec(cell)
+                 print(">>> ", message.decode('utf-8'))
+                 message = pyb.exec('print(mem_info())')
+                 print("memory after execution:\n========================\n", message.decode('utf-8'))
+     
+             else:
+                 message = pyb.exec(cell)
+                 print(message.decode('utf-8'))
+     
+     ip = get_ipython()
+     ip.register_magics(PyboardMagic)
+ pyboard initialisation
+ ~~~~~~~~~~~~~~~~~~~~~~
+ 
+ ipython3.. code ::
+         
+     import pyboard
+     pyb = pyboard.Pyboard('/dev/ttyACM0')
+     pyb.enter_raw_repl()
+ pyboad detach
+ ~~~~~~~~~~~~~
+ 
+ ipython3.. code ::
+         
+     pyb.exit_raw_repl()
+     pyb.close()
+ ipython3.. code ::
+         
+     import IPython
+     
+     js = """
+         (function () {
+             var defaults = IPython.CodeCell.config_defaults || IPython.CodeCell.options_default;
+             defaults.highlight_modes['magic_text/x-csrc'] = {'reg':[/^\\s*%%ccode/]};
+         })();
+         """
+     cjs = """
+             IPython.CodeCell.options_default.highlight_modes['magic_text/x-csrc'] = {'reg':[/^\\s*%%ccode/]};
+         """
+     
+     IPython.core.display.display_javascript(cjs, raw=True)
+     
+     js = """
+         (function () {
+             var defaults = IPython.CodeCell.config_defaults || IPython.CodeCell.options_default;
+             defaults.highlight_modes['magic_text/x-csrc'] = {'reg':[/^\\s*%%makefile/]};
+         })();
+         """
+     IPython.core.display.display_javascript(js, raw=True)
+ 
+ 
+ 
+ 
+ 
+ Code magic
+ ----------
+ 
+ The following cell magic simply writes a licence header, and the
+ contents of the cell to the file given in the header of the cell.
+ 
+ ipython3.. code ::
+         
+     @magics_class
+     class MyMagics(Magics):
+             
+         @cell_magic
+         def ccode(self, line, cell):
+             copyright = """/*
+      * This file is part of the micropython-ulab project, 
+      *
+      * https://github.com/v923z/micropython-ulab
+      *
+      * The MIT License (MIT)
+      *
+      * Copyright (c) 2019 Zoltán Vörös
+     */
+         """
+             if line:
+                 with open('../../../ulab/code/'+line, 'w') as cout:
+                     cout.write(copyright)
+                     cout.write(cell)
+                 print('written %d bytes to %s'%(len(copyright) + len(cell), line))
+                 return None
+     
+     ip = get_ipython()
+     ip.register_magics(MyMagics)
+ Notebook conversion
+ ===================
+ 
+ ipython3.. code ::
+         
+     %cd ../../../ulab/docs/
+ .. parsed-literal::
+ 
+     /home/v923z/sandbox/micropython/v1.11/ulab/docs
+ 
+ ipython3.. code ::
+         
+     import nbformat as nb
+     import nbformat.v4.nbbase as nb4
+     from nbconvert import RSTExporter
+     
+     def convert_notebook(nbfile, rstfile):
+         (rst, resources) = rstexporter.from_filename(nbfile)
+         with open(rstfile, 'w') as fout:
+             fout.write(rst)
+             
+     rstexporter = RSTExporter()
+     rstexporter.template_file = './templates/rst.tpl'
+     
+     convert_notebook('ulab.ipynb', './source/ulab.rst')
+ .. parsed-literal::
+ 
+     /home/v923z/anaconda3/lib/python3.7/site-packages/nbconvert/filters/datatypefilter.py:41: UserWarning: Your element with mimetype(s) dict_keys(['application/javascript']) is not able to be represented.
+       mimetypes=output.keys())
+ 
+ Compiling the module
+ ====================
+ 
+ Detailed instructions on how to set up and compile a C module can be
+ found in chapter 2 of
+ https://micropython-usermod.readthedocs.io/en/latest/.
+ 
+ First, on the command line, you should clone both the micropython, and
+ the ``ulab`` repositories:
+ 
+ .. code:: bash
+ 
+    git clone https://github.com/micropython/micropython.git
+ 
+ Then navigate to your micropython folder, and run
+ 
+ .. code:: bash
+ 
+    git clone https://github.com/v923z/micropython-ulab.git ulab
+ 
+ Finally, in the ``mpconfigport.h`` header file of the port that you want
+ to compile for, you have to define the variable ``MODULE_ULAB_ENABLED``
+ 
+ .. code:: make
+ 
+    #define MODULE_ULAB_ENABLED (1)
+ 
+ At this point, you should be able to run make in the port’s root folder:
+ 
+ .. code:: bash
+ 
+    make USER_C_MODULES=../../../ulab all
+ 
+ (unix port) or
+ 
+ .. code:: bash
+ 
+    make BOARD=PYBV11 CROSS_COMPILE=<Path where you uncompressed the toolchain>/bin/arm-none-eabi-
+ 
+ (pyboard). When compiling for the pyboard (or any other hardware
+ platform), you might or might not have to set the cross-compiler’s path.
+ If your installation of the cross-compiler is system-wide, you can drop
+ the ``make`` argument ``CROSS_COMPILE``.
+ 
+ The ndarray type
+ ================
+ 
+ General comments
+ ----------------
+ 
+ ``ndarrays`` are efficient containers of numerical data of the same type
+ (i.e., signed/unsigned chars, signed/unsigned integers or floats).
+ Beyond storing the actual data, the type definition has three additional
+ members (on top of the ``base`` type). Namely, two ``size_t`` objects,
+ ``m``, and ``n``, which give the dimensions of the matrix (obviously, if
+ the ``ndarray`` is meant to be linear, either ``m``, or ``n`` is equal
+ to 1), as well as the byte size, ``bytes``, i.e., the total number of
+ bytes consumed by the data container. ``bytes`` is equal to ``m*n`` for
+ ``byte`` types (``uint8``, and ``int8``), to ``2*m*n`` for integers
+ (``uint16``, and ``int16``), and ``4*m*n`` for floats.
+ 
+ The type definition is as follows:
+ 
+ .. code:: c
+ 
+    typedef struct _ndarray_obj_t {
+        mp_obj_base_t base;
+        size_t m, n;
+        mp_obj_array_t *data;
+        size_t bytes;
+    } ndarray_obj_t;
+ 
+ **NOTE: with a little bit of extra effort, mp_obj_array_t can be
+ replaced by a single void array. We should, perhaps, consider the pros
+ and cons of that. One patent advantage is that we could get rid of the
+ verbatim copy of array_new function in ndarray.c. On the other hand,
+ objarray.c facilities couldn’t be used anymore.**
+ 
+ Handling different types
+ ------------------------
+ 
+ In order to make the code type-agnostic, we will resort to macros, where
+ necessary. This will inevitably add to the firmware size, because, in
+ effect, we unroll the code for each possible case. However, the source
+ will be much more readable. Also note that by unrolling, we no longer
+ need intermediate containers and we no longer need to dispatch
+ type-conversion functions, which means that we should be able to gain in
+ speed.
+ 
+ Additional structure members in numpy
+ ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
+ 
+ Also note that, in addition, ``numpy`` defines the following members:
+ 
+ -  ``.ndim``: the number of dimensions of the array (in our case, it
+    would be 1, or 2)
+ -  ``.size``: the number of elements in the array; it is the product of
+    m, and n
+ -  ``.dtype``: the data type; in our case, it is basically stored in
+    data->typecode
+ -  ``.itemsize``: the size of a single element in the array: this can be
+    gotten by calling ``mp_binary_get_size('@', data->typecode, NULL)``.
+ 
+ One should, perhaps, consider, whether these are necessary fields. E.g.,
+ if ``ndim`` were defined, then
+ 
+ .. code:: c
+ 
+    if((myarray->m == 1) || (myarray->n == 1)) {
+        ...
+    }
+ 
+ could be replaced by
+ 
+ .. code:: c
+ 
+    if(myarray->ndim == 1) {
+        ...
+    }
+ 
+ and
+ 
+ .. code:: c
+ 
+    if((myarray->m > 1) && (myarray->n > 1)) {
+        ...
+    }
+ 
+ would be equivalent to
+ 
+ .. code:: c
+ 
+    if(myarray->ndim == 2) {
+        ...
+    }
+ 
+ One could also save the extra function call
+ ``mp_binary_get_size('@', data->typecode, NULL)``, if ``itemsize`` is
+ available.
+ 
+ Returning and accepting raw bytes
+ ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
+ 
+ It might make sense to have a function that returns the raw content of
+ the ``ndarray``. The rationale for this is that this would make direct
+ use of calculation results a piece of cake. E.g., the DAC could be fed
+ as
+ 
+ .. code:: python
+ 
+    length = 100
+    amp = 127
+ 
+    x = linspace(0, 2*pi, length)
+    y = ndarray(128 + amp*sin(x), dtype=uint8)
+    buf = y.bytearray()
+ 
+    dac = DAC(1)
+    dac.write_timed(buf, 400*length, mode=DAC.CIRCULAR)
+ 
+ Likewise, having the option of writing raw data directly into the
+ ``ndarray`` could simplify data analysis. E.g., ADC results could be
+ processed as follows:
+ 
+ .. code:: python
+ 
+    length = 100
+    y = ndarray([0]*length, dtype=uint16)
+ 
+    adc = pyb.ADC(pyb.Pin.board.X19)
+    tim = pyb.Timer(6, freq=10)
+    buf = y.bytearray()
+    adc.read_timed(buf, tim)
+ 
+    y.reshape((10, 10)) # or whatever
+ 
+ Exposed functions and properties
+ ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
+ 
+ Most of the functions in ndarray.c are internal (i.e., not exposed to
+ the python interpreter). Exception to this rule are the ``shape``,
+ ``size``, and ``rawsize`` functions, and the ``.unary_op``,
+ ``.binary_op``, and ``.iter_next`` class methods. Note that ``rawsize``
+ is is not standard in numpy, and is meant to return the total number of
+ bytes used by the container. Since the RAM of a microcontroller is
+ limited, I deemed this to be a reasonable addition for optimisation
+ purposes, but could later be removed, if it turns out to be of no
+ interest.
+ 
+ As mentioned above, ``numpy`` defines a number of extra members in its
+ ``ndarray``. It would be great, if we could return these members as
+ properties of the ``ndarray`` instance. At the moment, ``shape`` is a
+ function, as is ``rawsize``.
+ 
+ Initialisation
+ --------------
+ 
+ An ``ndarray`` can be initialised by passing an iterable (linear
+ arrays), or an iterable of iterables (matrices) into the constructor. In
+ addition, the constructor can take a keyword argument, ``dtype``, that
+ will force type conversion. The default value is ``float``.
+ 
+ ipython3.. code ::
+         
+     %%micropython -unix 1
+     
+     from ulab import ndarray
+     
+     a = ndarray([1, 2, 3, 4])
+     print(a)
+     a = ndarray([[1, 2, 3, 4], [2, 3, 4, 5]])
+     print('\n', a)
+     a = ndarray([range(10), range(10)])
+     print('\n', a)
+ .. parsed-literal::
+ 
+     ndarray([1.0, 2.0, 3.0, 4.0], dtype=float)
+     
+      ndarray([[1.0, 2.0, 3.0, 4.0],
+     	 [2.0, 3.0, 4.0, 5.0]], dtype=float)
+     
+      ndarray([[0.0, 1.0, 2.0, ..., 7.0, 8.0, 9.0],
+     	 [0.0, 1.0, 2.0, ..., 7.0, 8.0, 9.0]], dtype=float)
+     
+     
+ 
+ Slicing and subscriptions
+ -------------------------
+ 
+ Slicing and subscription work work only partially. This has to do with
+ the fact that slices can be given only in the form ``myobject[1:10:2]``,
+ and slice objects cannot be separated by commas, i.e., this won’t be
+ interpreted:
+ 
+ .. code:: python
+ 
+    ndarray[1:10:2, 3:10:3]
+ 
+ This is something that should be sorted out in the future. As a
+ temporary solution, we could implement the ``getter`` and ``setter``
+ special methods that handle this issue.
+ 
+ ipython3.. code ::
+         
+     %%micropython -unix 1
+     
+     from ulab import ndarray
+     
+     # initialise a matrix
+     a = ndarray([[1, 2, 3, 4], [6, 7, 8, 9]])
+     print('2D array: \n', a)
+     
+     # print out the second row
+     print('second row of matrix: ', a[1])
+     
+     #initialise an array
+     a = ndarray([1, 2, 3, 4, 5, 6, 7, 8, 9])
+     print('\n1D array: ', a)
+     # slice the array
+     print('slize between 1, and 5: ', a[1:5])
+ .. parsed-literal::
+ 
+     2D array: 
+      ndarray([[1.0, 2.0, 3.0, 4.0],
+     	 [6.0, 7.0, 8.0, 9.0]], dtype=float)
+     second row of matrix:  ndarray([6.0, 7.0, 8.0, 9.0], dtype=float)
+     
+     1D array:  ndarray([1.0, 2.0, 3.0, 4.0, 5.0, 6.0, 7.0, 8.0, 9.0], dtype=float)
+     slize between 1, and 5:  ndarray([2.0, 3.0, 4.0, 5.0], dtype=float)
+     
+     
+ 
+ Iterators
+ ---------
+ 
+ ``ndarray`` objects can be iterated on, and just as in numpy, matrices
+ are iterated along their first axis, and they return ``ndarray``\ s.
+ 
+ ipython3.. code ::
+         
+     %%micropython -unix 1
+     
+     from ulab import ndarray
+     
+     #  initialise a matrix
+     a = ndarray([[1, 2, 3, 4], [6, 7, 8, 9]])
+     print('2D array: \n', a)
+     
+     # print out the matrix' rows, one by one
+     for i, _a in enumerate(a): 
+         print('\nrow %d: '%i, _a)
+ .. parsed-literal::
+ 
+     2D array: 
+      ndarray([[1.0, 2.0, 3.0, 4.0],
+     	 [6.0, 7.0, 8.0, 9.0]], dtype=float)
+     
+     row 0:  ndarray([1.0, 2.0, 3.0, 4.0], dtype=float)
+     
+     row 1:  ndarray([6.0, 7.0, 8.0, 9.0], dtype=float)
+     
+     
+ 
+ On the other hand, flat arrays return their elements:
+ 
+ ipython3.. code ::
+         
+     %%micropython -unix 1
+     
+     from ulab import ndarray, uint8
+     
+     # initialise an array
+     a = ndarray(range(10), dtype=uint8)
+     print('1D array: ', a)
+     
+     # print out the array's elements, one by one
+     for i, _a in enumerate(a): 
+         print('element %d: '%i, _a)
+ .. parsed-literal::
+ 
+     1D array:  ndarray([0, 1, 2, ..., 7, 8, 9], dtype=uint8)
+     element 0:  0
+     element 1:  1
+     element 2:  2
+     element 3:  3
+     element 4:  4
+     element 5:  5
+     element 6:  6
+     element 7:  7
+     element 8:  8
+     element 9:  9
+     
+     
+ 
+ Upcasting
+ ---------
+ 
+ The following section shows the upcasting rules of ``numpy``, and
+ immediately after each case, the test for ``ulab``.
+ 
+ uint8
+ ~~~~~
+ 
+ ipython3.. code ::
+         
+     a = array([100], dtype=uint8)
+     b = array([101], dtype=uint8)
+     a+b, a-b, a*b, a/b
+ 
+ 
+ 
+ 
+ .. parsed-literal::
+ 
+     (array([201], dtype=uint8),
+      array([255], dtype=uint8),
+      array([116], dtype=uint8),
+      array([0.99009901]))
+ 
+ 
+ 
+ ipython3.. code ::
+         
+     %%micropython -unix 1
+     
+     import ulab
+     
+     a = ulab.ndarray([100], dtype=ulab.uint8)
+     b = ulab.ndarray([101], dtype=ulab.uint8)
+     print(a+b)
+     print(a-b)
+     print(a*b)
+     print(a/b)
+ .. parsed-literal::
+ 
+     ndarray([201], dtype=uint8)
+     ndarray([255], dtype=uint8)
+     ndarray([116], dtype=uint8)
+     ndarray([0.9900990128517151], dtype=float)
+     
+     
+ 
+ ipython3.. code ::
+         
+     a = array([100], dtype=uint8)
+     b = array([101], dtype=int8)
+     a+b, a-b, a*b, a/b
+ 
+ 
+ 
+ 
+ .. parsed-literal::
+ 
+     (array([201], dtype=int16),
+      array([-1], dtype=int16),
+      array([10100], dtype=int16),
+      array([0.99009901]))
+ 
+ 
+ 
+ ipython3.. code ::
+         
+     %%micropython -unix 1
+     
+     import ulab
+     
+     a = ulab.ndarray([100], dtype=ulab.uint8)
+     b = ulab.ndarray([101], dtype=ulab.int8)
+     print(a+b)
+     print(a-b)
+     print(a*b)
+     print(a/b)
+ .. parsed-literal::
+ 
+     ndarray([201], dtype=int16)
+     ndarray([-1], dtype=int16)
+     ndarray([10100], dtype=int16)
+     ndarray([0.9900990128517151], dtype=float)
+     
+     
+ 
+ ipython3.. code ::
+         
+     a = array([100], dtype=uint8)
+     b = array([101], dtype=uint16)
+     a+b, a-b, a*b, a/b
+ 
+ 
+ 
+ 
+ .. parsed-literal::
+ 
+     (array([201], dtype=uint16),
+      array([65535], dtype=uint16),
+      array([10100], dtype=uint16),
+      array([0.99009901]))
+ 
+ 
+ 
+ ipython3.. code ::
+         
+     %%micropython -unix 1
+     
+     import ulab
+     
+     a = ulab.ndarray([100], dtype=ulab.uint8)
+     b = ulab.ndarray([101], dtype=ulab.uint16)
+     print(a+b)
+     print(a-b)
+     print(a*b)
+     print(a/b)
+ .. parsed-literal::
+ 
+     ndarray([201], dtype=uint16)
+     ndarray([65535], dtype=uint16)
+     ndarray([10100], dtype=uint16)
+     ndarray([0.9900990128517151], dtype=float)
+     
+     
+ 
+ ipython3.. code ::
+         
+     a = array([100], dtype=uint8)
+     b = array([101], dtype=int16)
+     a+b, a-b, a*b, a/b
+ 
+ 
+ 
+ 
+ .. parsed-literal::
+ 
+     (array([201], dtype=int16),
+      array([-1], dtype=int16),
+      array([10100], dtype=int16),
+      array([0.99009901]))
+ 
+ 
+ 
+ ipython3.. code ::
+         
+     %%micropython -unix 1
+     
+     import ulab
+     
+     a = ulab.ndarray([100], dtype=ulab.uint8)
+     b = ulab.ndarray([101], dtype=ulab.int16)
+     print(a+b)
+     print(a-b)
+     print(a*b)
+     print(a/b)
+ .. parsed-literal::
+ 
+     ndarray([201], dtype=int16)
+     ndarray([-1], dtype=int16)
+     ndarray([10100], dtype=int16)
+     ndarray([0.9900990128517151], dtype=float)
+     
+     
+ 
+ ipython3.. code ::
+         
+     a = array([100], dtype=uint8)
+     b = array([101], dtype=float)
+     a+b, a-b, a*b, a/b
+ 
+ 
+ 
+ 
+ .. parsed-literal::
+ 
+     (array([201.]), array([-1.]), array([10100.]), array([0.99009901]))
+ 
+ 
+ 
+ ipython3.. code ::
+         
+     %%micropython -unix 1
+     
+     import ulab
+     
+     a = ulab.ndarray([100], dtype=ulab.uint8)
+     b = ulab.ndarray([101], dtype=ulab.float)
+     print(a+b)
+     print(a-b)
+     print(a*b)
+     print(a/b)
+ .. parsed-literal::
+ 
+     ndarray([201.0], dtype=float)
+     ndarray([-1.0], dtype=float)
+     ndarray([10100.0], dtype=float)
+     ndarray([0.9900990128517151], dtype=float)
+     
+     
+ 
+ int8
+ ~~~~
+ 
+ ipython3.. code ::
+         
+     a = array([100], dtype=int8)
+     b = array([101], dtype=uint8)
+     a + b, a-b, a*b, a/b
+ 
+ 
+ 
+ 
+ .. parsed-literal::
+ 
+     (array([201], dtype=int16),
+      array([-1], dtype=int16),
+      array([10100], dtype=int16),
+      array([0.99009901]))
+ 
+ 
+ 
+ ipython3.. code ::
+         
+     %%micropython -unix 1
+     
+     import ulab
+     
+     a = ulab.ndarray([100], dtype=ulab.int8)
+     b = ulab.ndarray([101], dtype=ulab.uint8)
+     print(a+b)
+     print(a-b)
+     print(a*b)
+     print(a/b)
+ .. parsed-literal::
+ 
+     ndarray([201], dtype=int16)
+     ndarray([-1], dtype=int16)
+     ndarray([10100], dtype=int16)
+     ndarray([0.9900990128517151], dtype=float)
+     
+     
+ 
+ ipython3.. code ::
+         
+     a = array([100, 101], dtype=int8)
+     b = array([200, 101], dtype=int8)
+     a+b, a-b, a*b, a/b
+ 
+ 
+ 
+ 
+ .. parsed-literal::
+ 
+     (array([ 44, -54], dtype=int8),
+      array([-100,    0], dtype=int8),
+      array([ 32, -39], dtype=int8),
+      array([-1.78571429,  1.        ]))
+ 
+ 
+ 
+ ipython3.. code ::
+         
+     %%micropython -unix 1
+     
+     import ulab
+     
+     a = ulab.ndarray([100, 101], dtype=ulab.int8)
+     b = ulab.ndarray([200, 101], dtype=ulab.int8)
+     print(a+b)
+     print(a-b)
+     print(a*b)
+     print(a/b)
+ .. parsed-literal::
+ 
+     ndarray([44, -54], dtype=int8)
+     ndarray([-100, 0], dtype=int8)
+     ndarray([32, -39], dtype=int8)
+     ndarray([-1.785714268684387, 1.0], dtype=float)
+     
+     
+ 
+ ipython3.. code ::
+         
+     a = array([100], dtype=int8)
+     b = array([200], dtype=uint16)
+     a+b, a-b, a*b, a/b
+ 
+ 
+ 
+ 
+ .. parsed-literal::
+ 
+     (array([300], dtype=int32),
+      array([-100], dtype=int32),
+      array([20000], dtype=int32),
+      array([0.5]))
+ 
+ 
+ 
+ ipython3.. code ::
+         
+     %%micropython -unix 1
+     
+     import ulab
+     
+     a = ulab.ndarray([100], dtype=ulab.int8)
+     b = ulab.ndarray([200], dtype=ulab.uint16)
+     print(a+b)
+     print(a-b)
+     print(a*b)
+     print(a/b)
+ .. parsed-literal::
+ 
+     ndarray([300], dtype=int16)
+     ndarray([-100], dtype=int16)
+     ndarray([20000], dtype=int16)
+     ndarray([0], dtype=int16)
+     
+     
+ 
+ ipython3.. code ::
+         
+     a = array([100], dtype=int8)
+     b = array([200], dtype=int16)
+     a+b, a-b, a*b, a/b
+ 
+ 
+ 
+ 
+ .. parsed-literal::
+ 
+     (array([300], dtype=int16),
+      array([-100], dtype=int16),
+      array([20000], dtype=int16),
+      array([0.5]))
+ 
+ 
+ 
+ ipython3.. code ::
+         
+     %%micropython -unix 1
+     
+     import ulab
+     
+     a = ulab.ndarray([100], dtype=ulab.int8)
+     b = ulab.ndarray([200], dtype=ulab.int16)
+     print(a+b)
+     print(a-b)
+     print(a*b)
+     print(a/b)
+ .. parsed-literal::
+ 
+     ndarray([300], dtype=int16)
+     ndarray([-100], dtype=int16)
+     ndarray([20000], dtype=int16)
+     ndarray([0.5], dtype=float)
+     
+     
+ 
+ ipython3.. code ::
+         
+     a = array([100, 101], dtype=int8)
+     b = array([200, 101], dtype=float)
+     a+b, a-b, a*b, a/b
+ 
+ 
+ 
+ 
+ .. parsed-literal::
+ 
+     (array([300., 202.]),
+      array([-100.,    0.]),
+      array([20000., 10201.]),
+      array([0.5, 1. ]))
+ 
+ 
+ 
+ ipython3.. code ::
+         
+     %%micropython -unix 1
+     
+     import ulab
+     
+     a = ulab.ndarray([100, 101], dtype=ulab.int8)
+     b = ulab.ndarray([200, 101], dtype=ulab.float)
+     print(a+b)
+     print(a-b)
+     print(a*b)
+     print(a/b)
+ .. parsed-literal::
+ 
+     ndarray([300.0, 202.0], dtype=float)
+     ndarray([-100.0, 0.0], dtype=float)
+     ndarray([20000.0, 10201.0], dtype=float)
+     ndarray([0.5, 1.0], dtype=float)
+     
+     
+ 
+ uint16
+ ~~~~~~
+ 
+ ipython3.. code ::
+         
+     a = array([100, 101], dtype=uint16)
+     b = array([200, 101], dtype=uint8)
+     a+b, a-b, a*b, a/b
+ 
+ 
+ 
+ 
+ .. parsed-literal::
+ 
+     (array([300, 202], dtype=uint16),
+      array([65436,     0], dtype=uint16),
+      array([20000, 10201], dtype=uint16),
+      array([0.5, 1. ]))
+ 
+ 
+ 
+ ipython3.. code ::
+         
+     %%micropython -unix 1
+     
+     import ulab
+     
+     a = ulab.ndarray([100, 101], dtype=ulab.uint16)
+     b = ulab.ndarray([200, 101], dtype=ulab.uint8)
+     print(a+b)
+     print(a-b)
+     print(a*b)
+     print(a/b)
+ .. parsed-literal::
+ 
+     ndarray([300, 202], dtype=uint16)
+     ndarray([65436, 0], dtype=uint16)
+     ndarray([20000, 10201], dtype=uint16)
+     ndarray([0.5, 1.0], dtype=float)
+     
+     
+ 
+ ipython3.. code ::
+         
+     a = array([100, 101], dtype=uint16)
+     b = array([200, 101], dtype=int8)
+     a+b, a-b, a*b, a/b
+ 
+ 
+ 
+ 
+ .. parsed-literal::
+ 
+     (array([ 44, 202], dtype=int32),
+      array([156,   0], dtype=int32),
+      array([-5600, 10201], dtype=int32),
+      array([-1.78571429,  1.        ]))
+ 
+ 
+ 
+ **This deviates from numpy’s behaviour, because we don’t have int32.**
+ 
+ ipython3.. code ::
+         
+     %%micropython -unix 1
+     
+     import ulab
+     
+     a = ulab.ndarray([100, 101], dtype=ulab.uint16)
+     b = ulab.ndarray([200, 101], dtype=ulab.int8)
+     print(a+b)
+     print(a-b)
+     print(a*b)
+     print(a/b)
+ .. parsed-literal::
+ 
+     ndarray([44, 202], dtype=uint16)
+     ndarray([156, 0], dtype=uint16)
+     ndarray([59936, 10201], dtype=uint16)
+     ndarray([-1.785714268684387, 1.0], dtype=float)
+     
+     
+ 
+ ipython3.. code ::
+         
+     a = array([100], dtype=uint16)
+     b = array([101], dtype=uint16)
+     a+b, a-b, a*b, a/b
+ 
+ 
+ 
+ 
+ .. parsed-literal::
+ 
+     (array([201], dtype=uint16),
+      array([65535], dtype=uint16),
+      array([10100], dtype=uint16),
+      array([0.99009901]))
+ 
+ 
+ 
+ ipython3.. code ::
+         
+     %%micropython -unix 1
+     
+     import ulab
+     
+     a = ulab.ndarray([100], dtype=ulab.uint16)
+     b = ulab.ndarray([101], dtype=ulab.uint16)
+     print(a+b)
+     print(a-b)
+     print(a*b)
+     print(a/b)
+ .. parsed-literal::
+ 
+     ndarray([201], dtype=uint16)
+     ndarray([65535], dtype=uint16)
+     ndarray([10100], dtype=uint16)
+     ndarray([0.9900990128517151], dtype=float)
+     
+     
+ 
+ ipython3.. code ::
+         
+     a = array([100], dtype=uint16)
+     b = array([101], dtype=int16)
+     a+b, a-b, a*b, a/b
+ 
+ 
+ 
+ 
+ .. parsed-literal::
+ 
+     (array([201], dtype=int32),
+      array([-1], dtype=int32),
+      array([10100], dtype=int32),
+      array([0.99009901]))
+ 
+ 
+ 
+ **Again, in numpy, the result is an int32**
+ 
+ ipython3.. code ::
+         
+     %%micropython -unix 1
+     
+     import ulab
+     
+     a = ulab.ndarray([100], dtype=ulab.uint16)
+     b = ulab.ndarray([101], dtype=ulab.int16)
+     print(a+b)
+     print(a-b)
+     print(a*b)
+     print(a/b)
+ .. parsed-literal::
+ 
+     ndarray([201.0], dtype=float)
+     ndarray([-1.0], dtype=float)
+     ndarray([10100.0], dtype=float)
+     ndarray([0.9900990128517151], dtype=float)
+     
+     
+ 
+ ipython3.. code ::
+         
+     a = array([100], dtype=uint16)
+     b = array([101], dtype=float)
+     a+b, a-b, a*b, a/b
+ 
+ 
+ 
+ 
+ .. parsed-literal::
+ 
+     (array([201.]), array([-1.]), array([10100.]), array([0.99009901]))
+ 
+ 
+ 
+ ipython3.. code ::
+         
+     %%micropython -unix 1
+     
+     import ulab
+     
+     a = ulab.ndarray([100], dtype=ulab.uint16)
+     b = ulab.ndarray([101], dtype=ulab.float)
+     print(a+b)
+     print(a-b)
+     print(a*b)
+     print(a/b)
+ .. parsed-literal::
+ 
+     ndarray([201.0], dtype=float)
+     ndarray([-1.0], dtype=float)
+     ndarray([10100.0], dtype=float)
+     ndarray([0.9900990128517151], dtype=float)
+     
+     
+ 
+ int16
+ ~~~~~
+ 
+ ipython3.. code ::
+         
+     a = array([100], dtype=int16)
+     b = array([101], dtype=uint8)
+     a+b, a-b, a*b, a/b
+ 
+ 
+ 
+ 
+ .. parsed-literal::
+ 
+     (array([201], dtype=int16),
+      array([-1], dtype=int16),
+      array([10100], dtype=int16),
+      array([0.99009901]))
+ 
+ 
+ 
+ ipython3.. code ::
+         
+     %%micropython -unix 1
+     
+     import ulab
+     
+     a = ulab.ndarray([100], dtype=ulab.int16)
+     b = ulab.ndarray([101], dtype=ulab.uint8)
+     print(a+b)
+     print(a-b)
+     print(a*b)
+     print(a/b)
+ .. parsed-literal::
+ 
+     ndarray([201], dtype=int16)
+     ndarray([-1], dtype=int16)
+     ndarray([10100], dtype=int16)
+     ndarray([0.9900990128517151], dtype=float)
+     
+     
+ 
+ ipython3.. code ::
+         
+     a = array([100], dtype=int16)
+     b = array([101], dtype=int8)
+     a+b, a-b, a*b, a/b
+ 
+ 
+ 
+ 
+ .. parsed-literal::
+ 
+     (array([201], dtype=int16),
+      array([-1], dtype=int16),
+      array([10100], dtype=int16),
+      array([0.99009901]))
+ 
+ 
+ 
+ ipython3.. code ::
+         
+     %%micropython -unix 1
+     
+     import ulab
+     
+     a = ulab.ndarray([100], dtype=ulab.int16)
+     b = ulab.ndarray([101], dtype=ulab.int8)
+     print(a+b)
+     print(a-b)
+     print(a*b)
+     print(a/b)
+ .. parsed-literal::
+ 
+     ndarray([201], dtype=int16)
+     ndarray([-1], dtype=int16)
+     ndarray([10100], dtype=int16)
+     ndarray([0.9900990128517151], dtype=float)
+     
+     
+ 
+ ipython3.. code ::
+         
+     a = array([100], dtype=int16)
+     b = array([101], dtype=uint16)
+     a+b, a-b, a*b, a/b
+ 
+ 
+ 
+ 
+ .. parsed-literal::
+ 
+     (array([201], dtype=int32),
+      array([-1], dtype=int32),
+      array([10100], dtype=int32),
+      array([0.99009901]))
+ 
+ 
+ 
+ **While the results are correct, here we have float instead of int32**
+ 
+ ipython3.. code ::
+         
+     %%micropython -unix 1
+     
+     import ulab
+     
+     a = ulab.ndarray([100], dtype=ulab.int16)
+     b = ulab.ndarray([101], dtype=ulab.uint16)
+     print(a+b)
+     print(a-b)
+     print(a*b)
+     print(a/b)
+ .. parsed-literal::
+ 
+     ndarray([201.0], dtype=float)
+     ndarray([-1.0], dtype=float)
+     ndarray([10100.0], dtype=float)
+     ndarray([0.0], dtype=float)
+     
+     
+ 
+ ipython3.. code ::
+         
+     a = array([100], dtype=int16)
+     b = array([101], dtype=int16)
+     a+b, a-b, a*b, a/b
+ 
+ 
+ 
+ 
+ .. parsed-literal::
+ 
+     (array([201], dtype=int16),
+      array([-1], dtype=int16),
+      array([10100], dtype=int16),
+      array([0.99009901]))
+ 
+ 
+ 
+ ipython3.. code ::
+         
+     %%micropython -unix 1
+     
+     import ulab
+     
+     a = ulab.ndarray([100], dtype=ulab.int16)
+     b = ulab.ndarray([101], dtype=ulab.int16)
+     print(a+b)
+     print(a-b)
+     print(a*b)
+     print(a/b)
+ .. parsed-literal::
+ 
+     ndarray([201], dtype=int16)
+     ndarray([-1], dtype=int16)
+     ndarray([10100], dtype=int16)
+     ndarray([0], dtype=int16)
+     
+     
+ 
+ ipython3.. code ::
+         
+     a = array([100], dtype=int16)
+     b = array([101], dtype=float)
+     a+b, a-b, a*b, a/b
+ 
+ 
+ 
+ 
+ .. parsed-literal::
+ 
+     (array([201.]), array([-1.]), array([10100.]), array([0.99009901]))
+ 
+ 
+ 
+ ipython3.. code ::
+         
+     %%micropython -unix 1
+     
+     import ulab
+     
+     a = ulab.ndarray([100], dtype=ulab.int16)
+     b = ulab.ndarray([101], dtype=ulab.float)
+     print(a+b)
+     print(a-b)
+     print(a*b)
+     print(a/b)
+ .. parsed-literal::
+ 
+     ndarray([201.0], dtype=float)
+     ndarray([-1.0], dtype=float)
+     ndarray([10100.0], dtype=float)
+     ndarray([0.9900990128517151], dtype=float)
+     
+     
+ 
+ When in an operation the ``dtype`` of two arrays is different, the
+ result’s ``dtype`` will be decided by the following upcasting rules:
+ 
+ 1. Operations with two ``ndarray``\ s of the same ``dtype`` preserve
+    their ``dtype``, even when the results overflow.
+ 
+ 2. if either of the operands is a float, the results is also a float
+ 
+ 3. 
+ 
+    -  ``uint8`` + ``int8`` => ``int16``,
+ 
+    -  ``uint8`` + ``int16`` => ``int16``
+ 
+    -  ``uint8`` + ``uint16`` => ``uint16``
+ 
+    -  ``int8`` + ``int16`` => ``int16``
+ 
+    -  ``int8`` + ``uint16`` => ``uint16`` (in numpy, it is a ``int32``)
+ 
+    -  ``uint16`` + ``int16`` => ``float`` (in numpy, it is a ``int32``)
+ 
+ 4. When the right hand side of a binary operator is a micropython
+    variable, ``mp_obj_int``, or ``mp_obj_float``, then the result will
+    be promoted to ``dtype`` ``float``. This is necessary, because a
+    micropython integer can be 31 bites wide.
+ 
+ ``numpy`` is also inconsistent in how it represents ``dtype``: as an
+ argument, it is denoted by the constants ``int8``, ``uint8``, etc.,
+ while a string will be returned, if the user asks for the type of an
+ array.
+ 
+ The upcasting rules are stipulated in a single C function,
+ ``upcasting()``.
+ 
+ upcasting rules with scalars
+ ~~~~~~~~~~~~~~~~~~~~~~~~~~~~
+ 
+ When a
+ 
+ ipython3.. code ::
+         
+     a = array([1, 2, 3], dtype=int8)
+     b = a * 555
+     a *= -555
+     b.dtype, b, a.dtype, a
+ 
+ 
+ 
+ 
+ .. parsed-literal::
+ 
+     (dtype('int16'),
+      array([ 555, 1110, 1665], dtype=int16),
+      dtype('int8'),
+      array([-43, -86, 127], dtype=int8))
+ 
+ 
+ 
+ Binary operations
+ -----------------
+ 
+ In the standard binary operations, the operands are either two
+ ``ndarray``\ s or an ``ndarray``, and a number. From the C standpoint,
+ these operations are probably the most difficult: the problem is that
+ two operands, each with 5 possible C types are added, multiplied,
+ subtracted, or divided, hence making the number of possible combinations
+ large. In order to mitigate the situation, we make use of macros: this
+ would make most of the code type-agnostic.
+ 
+ Also, when an operation involves a scalar, and an ``ndarray``, we will
+ turn the scalar into an ``ndarray`` of length 1. In this way, we can
+ reduce the code size of the binary handler by almost a factor of two.
+ 
+ ipython3.. code ::
+         
+     %%micropython -unix 1
+     
+     from ulab import ndarray, float
+     
+     a = ndarray([1, 2, 3], dtype=float)
+     print(a + a)
+     print(a * 5.0)
+     print(a / 2)
+     print(a - 10)
+ .. parsed-literal::
+ 
+     ndarray([2.0, 4.0, 6.0], dtype=float)
+     ndarray([5.0, 10.0, 15.0], dtype=float)
+     ndarray([0.5, 1.0, 1.5], dtype=float)
+     ndarray([-9.0, -8.0, -7.0], dtype=float)
+     
+     
+ 
+ in-place operators
+ ~~~~~~~~~~~~~~~~~~
+ 
+ In-place operators preserve the type of the array’s type. Here are a
+ couple of caveats:
+ 
+ 1. overflow obviously occurs
+ 2. float can be added only to float type
+ 3. true divide fails, except when the array is of type float
+ 
+ ipython3.. code ::
+         
+     a = array([1, 2, 3, 40], dtype=uint8)
+     a += 220
+     a
+ 
+ 
+ 
+ 
+ .. parsed-literal::
+ 
+     array([221, 222, 223,   4], dtype=uint8)
+ 
+ 
+ 
+ ipython3.. code ::
+         
+     a = array([1, 2, 3, 40], dtype=int8)
+     a += 220
+     a
+ 
+ 
+ 
+ 
+ .. parsed-literal::
+ 
+     array([-35, -34, -33,   4], dtype=int8)
+ 
+ 
+ 
+ ipython3.. code ::
+         
+     a = array([1, 2, 3, 40], dtype=uint16)
+     a += 220
+     a
+ 
+ 
+ 
+ 
+ .. parsed-literal::
+ 
+     array([221, 222, 223, 260], dtype=uint16)
+ 
+ 
+ 
+ ipython3.. code ::
+         
+     a = array([1, 2, 3, 40], dtype=int16)
+     a += 220
+     a
+ 
+ 
+ 
+ 
+ .. parsed-literal::
+ 
+     array([221, 222, 223, 260], dtype=int16)
+ 
+ 
+ 
+ ipython3.. code ::
+         
+     a = array([1, 2, 3, 40], dtype=float)
+     a += 220
+     a
+ 
+ 
+ 
+ 
+ .. parsed-literal::
+ 
+     array([221., 222., 223., 260.])
+ 
+ 
+ 
+ ipython3.. code ::
+         
+     a = array([1, 2, 3, 40], dtype=uint8)
+     a += 220.0
+     a
+ 
+ ::
+ 
+ 
+     ---------------------------------------------------------------------------
+ 
+     TypeError                                 Traceback (most recent call last)
+ 
+     <ipython-input-406-658f10292bb1> in <module>
+           1 a = array([1, 2, 3, 40], dtype=uint8)
+     ----> 2 a += 220.0
+           3 a
+ 
+ 
+     TypeError: Cannot cast ufunc add output from dtype('float64') to dtype('uint8') with casting rule 'same_kind'
+ 
+ 
+ ipython3.. code ::
+         
+     a = array([1, 2, 3, 40], dtype=uint8)
+     a /= 22
+     a
+ 
+ ::
+ 
+ 
+     ---------------------------------------------------------------------------
+ 
+     TypeError                                 Traceback (most recent call last)
+ 
+     <ipython-input-407-1ed2746d8aeb> in <module>
+           1 a = array([1, 2, 3, 40], dtype=uint8)
+     ----> 2 a /= 22
+           3 a
+ 
+ 
+     TypeError: No loop matching the specified signature and casting
+     was found for ufunc true_divide
+ 
+ 
+ ipython3.. code ::
+         
+     a = array([1, 2, 3, 40], dtype=float)
+     a += 220
+     a
+ 
+ 
+ 
+ 
+ .. parsed-literal::
+ 
+     array([221., 222., 223., 260.])
+ 
+ 
+ 
+ ipython3.. code ::
+         
+     a = array([1, 2, 3, 4], dtype=int8)
+     b = array([5, 10, 15, 20], dtype=float)
+     a /= b
+     a
+ 
+ ::
+ 
+ 
+     ---------------------------------------------------------------------------
+ 
+     TypeError                                 Traceback (most recent call last)
+ 
+     <ipython-input-413-80e572931886> in <module>
+           1 a = array([1, 2, 3, 4], dtype=int8)
+           2 b = array([5, 10, 15, 20], dtype=float)
+     ----> 3 a /= b
+           4 a
+ 
+ 
+     TypeError: ufunc 'true_divide' output (typecode 'd') could not be coerced to provided output parameter (typecode 'b') according to the casting rule ''same_kind''
+ 
+ 
+ ipython3.. code ::
+         
+     a = array([1, 2, 3, 4], dtype=int8)
+     b = array([5, 10, 15, 20], dtype=int8)
+     a /= b
+     a
+ 
+ ::
+ 
+ 
+     ---------------------------------------------------------------------------
+ 
+     TypeError                                 Traceback (most recent call last)
+ 
+     <ipython-input-414-a76603b93818> in <module>
+           1 a = array([1, 2, 3, 4], dtype=int8)
+           2 b = array([5, 10, 15, 20], dtype=int8)
+     ----> 3 a /= b
+           4 a
+ 
+ 
+     TypeError: No loop matching the specified signature and casting
+     was found for ufunc true_divide
+ 
+ 
+ ipython3.. code ::
+         
+     a = array([1, 2, 3, 4], dtype=int8)
+     b = array([5, 10, 15, 100], dtype=int16)
+     a *= b
+     a
+ 
+ 
+ 
+ 
+ .. parsed-literal::
+ 
+     array([   5,   20,   45, -112], dtype=int8)
+ 
+ 
+ 
+ ipython3.. code ::
+         
+     a = array([1, 2, 3, 4], dtype=int8)
+     a **= 2
+     a
+ 
+ 
+ 
+ 
+ .. parsed-literal::
+ 
+     array([ 1,  4,  9, 16], dtype=int8)
+ 
+ 
+ 
+ Comparison operators
+ ~~~~~~~~~~~~~~~~~~~~
+ 
+ These return list(s) of Booleans.
+ 
+ ipython3.. code ::
+         
+     %%micropython -unix 1
+     
+     import ulab
+     
+     a = ulab.ndarray([1, 2, 3, 4, 5, 6, 7, 8])
+     a.reshape((1, 8))
+     print(a < 4)
+     print(a <= 4)
+     print(a > 4)
+     print(a >= 4)
+ .. parsed-literal::
+ 
+     [True, True, True, False, False, False, False, False]
+     [True, True, True, True, False, False, False, False]
+     [False, False, False, False, True, True, True, True]
+     [False, False, False, True, True, True, True, True]
+     
+     
+ 
+ ipython3.. code ::
+         
+     %%micropython -unix 1
+     
+     import ulab
+     
+     a = ulab.ndarray([[1, 2, 3, 4], [5, 6, 7, 8]])
+     print(a < 4)
+     print(a <= 4)
+     print(a > 4)
+     print(a >= 4)
+ .. parsed-literal::
+ 
+     [[True, True, True, False], [False, False, False, False]]
+     [[True, True, True, True], [False, False, False, False]]
+     [[False, False, False, False], [True, True, True, True]]
+     [[False, False, False, True], [True, True, True, True]]
+     
+     
+ 
+ ipython3.. code ::
+         
+     %%micropython -unix 1
+     
+     import ulab
+     
+     a = ulab.ndarray([1, 2, 3, 4, 4, 6, 7, 8])
+     a.transpose()
+     b = ulab.ndarray([8, 7, 6, 5, 4, 3, 2, 1])
+     b.transpose()
+     print(a < b)
+     print(a <= b)
+     print(a > b)
+     print(a >= b)
+ .. parsed-literal::
+ 
+     [True, True, True, True, False, False, False, False]
+     [True, True, True, True, True, False, False, False]
+     [False, False, False, False, False, True, True, True]
+     [False, False, False, False, True, True, True, True]
+     
+     
+ 
+ ipython3.. code ::
+         
+     %%micropython -unix 1
+     
+     import ulab
+     
+     a = ulab.ndarray([[1, 2, 3, 4], [5, 6, 7, 8]])
+     b = ulab.ndarray([[8, 7, 1, 1], [4, 3, 2, 1]], dtype=ulab.int8)
+     print(a < b)
+     print(a <= b)
+     print(a > b)
+     print(a >= b)
+ .. parsed-literal::
+ 
+     [[True, True, False, False], [False, False, False, False]]
+     [[True, True, False, False], [False, False, False, False]]
+     [[False, False, True, True], [True, True, True, True]]
+     [[False, False, True, True], [True, True, True, True]]
+     
+     
+ 
+ Simple running weighted average
+ ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
+ 
+ With the subscription tools, a weighted running average can very easily
+ be implemented as follows:
+ 
+ ipython3.. code ::
+         
+     %%micropython -unix 1
+     
+     from ulab import ndarray, mean, roll
+     
+     # These are the weights; the last entry is the most dominant
+     weight = ndarray([1, 2, 3, 4, 5]) 
+     
+     # initial array of samples
+     samples = ndarray([0]*5)
+     
+     for i in range(5):
+         # a new datum is inserted on the right hand side. This simply overwrites whatever was in the last slot
+         samples[-1] = 2
+         print(mean(samples*weight))
+         # the data are shifted by one position to the left
+         roll(samples, 1)
+ .. parsed-literal::
+ 
+     2.0
+     3.6
+     4.8
+     5.6
+     6.0
+     
+     
+ 
+ Unary operators
+ ---------------
+ 
+ At the moment, only ``len`` is implemented, which returns the number of
+ elements for one-dimensional arrays, and the length of the first axis
+ for matrices. One should consider other possibilities.
+ 
+ ipython3.. code ::
+         
+     %%micropython -unix 1
+     
+     from ulab import ndarray
+     
+     # initialise an array
+     a = ndarray(range(10))
+     print('1D array: ', a)
+     
+     # print out the array's length
+     print('length of array: ', len(a))
+ .. parsed-literal::
+ 
+     1D array:  ndarray([0.0, 1.0, 2.0, ..., 7.0, 8.0, 9.0], dtype=float)
+     length of array:  10
+     
+     
+ 
+ ipython3.. code ::
+         
+     %%micropython -unix 1
+     
+     from ulab import ndarray
+     
+     # initialise a matrix
+     a = ndarray([range(10), range(10), range(10)])
+     print('2D array: \n', a)
+     
+     # print out the array's elements, one by one
+     print('length of array: ', len(a))
+ .. parsed-literal::
+ 
+     2D array: 
+      ndarray([[0.0, 1.0, 2.0, ..., 7.0, 8.0, 9.0],
+     	 [0.0, 1.0, 2.0, ..., 7.0, 8.0, 9.0],
+     	 [0.0, 1.0, 2.0, ..., 7.0, 8.0, 9.0]], dtype=float)
+     length of array:  3
+     
+     
+ 
+ Class methods: shape, size, rawsize, flatten
+ --------------------------------------------
+ 
+ ipython3.. code ::
+         
+     %%micropython -unix 1
+     
+     from ulab import ndarray
+     
+     # initialise an array
+     a = ndarray(range(10))
+     print('1D array: ', a)
+     
+     # print out the shape
+     print('shape: ', a.shape())
+     
+     #print out the size
+     print('size 0: ', a.size(0), '\nsize 1: ', a.size(1), '\nsize 2: ', a.size(2))
+     
+     #print out the raw size
+     print('raw size: ', a.rawsize())
+     
+     # initialise a matrix
+     a = ndarray([range(10), range(10), range(10)])
+     print('\n2D array: \n', a)
+     
+     # print out the shape
+     print('shape: ', a.shape())
+     
+     #print out the size
+     print('size 0: ', a.size(0), '\nsize 1: ', a.size(1), '\nsize 2: ', a.size(2))
+     
+     #print out the raw size
+     print('raw size: ', a.rawsize())
+     
+     #flattened array
+     a = ndarray([range(3), range(3), range(3)])
+     print('\n2D array: \n', a)
+     print('flattened array: (C)', a.flatten(order='C'))
+     print('flattened array: (F)', a.flatten(order='F'))
+ .. parsed-literal::
+ 
+     1D array:  ndarray([0.0, 1.0, 2.0, ..., 7.0, 8.0, 9.0], dtype=float)
+     shape:  (10, 1)
+     size 0:  10 
+     size 1:  10 
+     size 2:  1
+     raw size:  (10, 1, 40, 10, 4)
+     
+     2D array: 
+      ndarray([[0.0, 1.0, 2.0, ..., 7.0, 8.0, 9.0],
+     	 [0.0, 1.0, 2.0, ..., 7.0, 8.0, 9.0],
+     	 [0.0, 1.0, 2.0, ..., 7.0, 8.0, 9.0]], dtype=float)
+     shape:  (3, 10)
+     size 0:  30 
+     size 1:  3 
+     size 2:  10
+     raw size:  (3, 10, 120, 30, 4)
+     
+     2D array: 
+      ndarray([[0.0, 1.0, 2.0],
+     	 [0.0, 1.0, 2.0],
+     	 [0.0, 1.0, 2.0]], dtype=float)
+     flattened array: (C) ndarray([0.0, 1.0, 2.0, 0.0, 1.0, 2.0, 0.0, 1.0, 2.0], dtype=float)
+     flattened array: (F) ndarray([0.0, 0.0, 0.0, 1.0, 1.0, 1.0, 2.0, 2.0, 2.0], dtype=float)
+     
+     
+ 
+ ndarray.h
+ ---------
+ 
+ https://github.com/v923z/micropython-ulab/tree/master/code/ndarray.h
+ 
+ .. code:: cpp
+         
+     
+     #ifndef _NDARRAY_
+     #define _NDARRAY_
+     
+     #include "py/objarray.h"
+     #include "py/binary.h"
+     #include "py/objstr.h"
+     #include "py/objlist.h"
+     
+     #define PRINT_MAX  10
+     
+     
+     const mp_obj_type_t ulab_ndarray_type;
+     
+     #define CREATE_SINGLE_ITEM(outarray, type, typecode, value) do {\
+         ndarray_obj_t *tmp = create_new_ndarray(1, 1, (typecode));\
+         type *tmparr = (type *)tmp->array->items;\
+         tmparr[0] = (type)(value);\
+         (outarray) = MP_OBJ_FROM_PTR(tmp);\
+     } while(0)
+     
+     /*  
+         mp_obj_t row = mp_obj_new_list(n, NULL);
+         mp_obj_list_t *row_ptr = MP_OBJ_TO_PTR(row);
+         
+         should work outside the loop, but it doesn't. Go figure! 
+     */
+     
+     #define RUN_BINARY_LOOP(typecode, type_out, type_left, type_right, ol, or, op) do {\
+         type_left *left = (type_left *)(ol)->array->items;\
+         type_right *right = (type_right *)(or)->array->items;\
+         uint8_t inc = 0;\
+         if((or)->array->len > 1) inc = 1;\
+         if(((op) == MP_BINARY_OP_ADD) || ((op) == MP_BINARY_OP_SUBTRACT) || ((op) == MP_BINARY_OP_MULTIPLY)) {\
+             ndarray_obj_t *out = create_new_ndarray(ol->m, ol->n, typecode);\
+             type_out *(odata) = (type_out *)out->array->items;\
+             if((op) == MP_BINARY_OP_ADD) { for(size_t i=0, j=0; i < (ol)->array->len; i++, j+=inc) odata[i] = left[i] + right[j];}\
+             if((op) == MP_BINARY_OP_SUBTRACT) { for(size_t i=0, j=0; i < (ol)->array->len; i++, j+=inc) odata[i] = left[i] - right[j];}\
+             if((op) == MP_BINARY_OP_MULTIPLY) { for(size_t i=0, j=0; i < (ol)->array->len; i++, j+=inc) odata[i] = left[i] * right[j];}\
+             return MP_OBJ_FROM_PTR(out);\
+         } else if((op) == MP_BINARY_OP_TRUE_DIVIDE) {\
+             ndarray_obj_t *out = create_new_ndarray(ol->m, ol->n, NDARRAY_FLOAT);\
+             float *odata = (float *)out->array->items;\
+             for(size_t i=0, j=0; i < (ol)->array->len; i++, j+=inc) odata[i] = (float)left[i]/(float)right[j];\
+             return MP_OBJ_FROM_PTR(out);\
+         } else if(((op) == MP_BINARY_OP_LESS) || ((op) == MP_BINARY_OP_LESS_EQUAL) ||  \
+                  ((op) == MP_BINARY_OP_MORE) || ((op) == MP_BINARY_OP_MORE_EQUAL)) {\
+             mp_obj_t out_list = mp_obj_new_list(0, NULL);\
+             size_t m = (ol)->m, n = (ol)->n;\
+             for(size_t i=0, r=0; i < m; i++, r+=inc) {\
+                 mp_obj_t row = mp_obj_new_list(n, NULL);\
+                 mp_obj_list_t *row_ptr = MP_OBJ_TO_PTR(row);\
+                 for(size_t j=0, s=0; j < n; j++, s+=inc) {\
+                     row_ptr->items[j] = mp_const_false;\
+                     if((op) == MP_BINARY_OP_LESS) {\
+                         if(left[i*n+j] < right[r*n+s]) row_ptr->items[j] = mp_const_true;\
+                     } else if((op) == MP_BINARY_OP_LESS_EQUAL) {\
+                         if(left[i*n+j] <= right[r*n+s]) row_ptr->items[j] = mp_const_true;\
+                     } else if((op) == MP_BINARY_OP_MORE) {\
+                         if(left[i*n+j] > right[r*n+s]) row_ptr->items[j] = mp_const_true;\
+                     } else if((op) == MP_BINARY_OP_MORE_EQUAL) {\
+                         if(left[i*n+j] >= right[r*n+s]) row_ptr->items[j] = mp_const_true;\
+                     }\
+                 }\
+                 if(m == 1) return row;\
+                 mp_obj_list_append(out_list, row);\
+             }\
+             return out_list;\
+         }\
+     } while(0)
+     
+     enum NDARRAY_TYPE {
+         NDARRAY_UINT8 = 'B',
+         NDARRAY_INT8 = 'b',
+         NDARRAY_UINT16 = 'H', 
+         NDARRAY_INT16 = 'h',
+         NDARRAY_FLOAT = 'f',
+     };
+     
+     typedef struct _ndarray_obj_t {
+         mp_obj_base_t base;
+         size_t m, n;
+         size_t len;
+         mp_obj_array_t *array;
+         size_t bytes;
+     } ndarray_obj_t;
+     
+     mp_obj_t mp_obj_new_ndarray_iterator(mp_obj_t , size_t , mp_obj_iter_buf_t *);
+     
+     float ndarray_get_float_value(void *, uint8_t , size_t );
+     void fill_array_iterable(float *, mp_obj_t );
+     
+     void ndarray_print_row(const mp_print_t *, mp_obj_array_t *, size_t , size_t );
+     void ndarray_print(const mp_print_t *, mp_obj_t , mp_print_kind_t );
+     void ndarray_assign_elements(mp_obj_array_t *, mp_obj_t , uint8_t , size_t *);
+     ndarray_obj_t *create_new_ndarray(size_t , size_t , uint8_t );
+     
+     mp_obj_t ndarray_copy(mp_obj_t );
+     mp_obj_t ndarray_make_new(const mp_obj_type_t *, size_t , size_t , const mp_obj_t *);
+     mp_obj_t ndarray_subscr(mp_obj_t , mp_obj_t , mp_obj_t );
+     mp_obj_t ndarray_getiter(mp_obj_t , mp_obj_iter_buf_t *);
+     mp_obj_t ndarray_binary_op(mp_binary_op_t , mp_obj_t , mp_obj_t );
+     mp_obj_t ndarray_unary_op(mp_unary_op_t , mp_obj_t );
+     
+     mp_obj_t ndarray_shape(mp_obj_t );
+     mp_obj_t ndarray_size(mp_obj_t , mp_obj_t );
+     mp_obj_t ndarray_rawsize(mp_obj_t );
+     mp_obj_t ndarray_flatten(size_t , const mp_obj_t *, mp_map_t *);
+     
+     #endif
+ 
+ ndarray.c
+ ---------
+ 
+ https://github.com/v923z/micropython-ulab/tree/master/code/ndarray.c
+ 
+ .. code:: cpp
+         
+     
+     #include <math.h>
+     #include <stdio.h>
+     #include <stdlib.h>
+     #include <string.h>
+     #include "py/runtime.h"
+     #include "py/binary.h"
+     #include "py/obj.h"
+     #include "py/objtuple.h"
+     #include "ndarray.h"
+     
+     // This function is copied verbatim from objarray.c
+     STATIC mp_obj_array_t *array_new(char typecode, size_t n) {
+         int typecode_size = mp_binary_get_size('@', typecode, NULL);
+         mp_obj_array_t *o = m_new_obj(mp_obj_array_t);
+         // this step could probably be skipped: we are never going to store a bytearray per se
+         #if MICROPY_PY_BUILTINS_BYTEARRAY && MICROPY_PY_ARRAY
+         o->base.type = (typecode == BYTEARRAY_TYPECODE) ? &mp_type_bytearray : &mp_type_array;
+         #elif MICROPY_PY_BUILTINS_BYTEARRAY
+         o->base.type = &mp_type_bytearray;
+         #else
+         o->base.type = &mp_type_array;
+         #endif
+         o->typecode = typecode;
+         o->free = 0;
+         o->len = n;
+         o->items = m_new(byte, typecode_size * o->len);
+         return o;
+     }
+     
+     float ndarray_get_float_value(void *data, uint8_t typecode, size_t index) {
+         if(typecode == NDARRAY_UINT8) {
+             return (float)((uint8_t *)data)[index];
+         } else if(typecode == NDARRAY_INT8) {
+             return (float)((int8_t *)data)[index];
+         } else if(typecode == NDARRAY_UINT16) {
+             return (float)((uint16_t *)data)[index];
+         } else if(typecode == NDARRAY_INT16) {
+             return (float)((int16_t *)data)[index];
+         } else {
+             return (float)((float_t *)data)[index];
+         }
+     }
+     
+     void fill_array_iterable(float *array, mp_obj_t iterable) {
+         mp_obj_iter_buf_t x_buf;
+         mp_obj_t x_item, x_iterable = mp_getiter(iterable, &x_buf);
+         size_t i=0;
+         while ((x_item = mp_iternext(x_iterable)) != MP_OBJ_STOP_ITERATION) {
+             array[i] = (float)mp_obj_get_float(x_item);
+             i++;
+         }
+     }
+     
+     void ndarray_print_row(const mp_print_t *print, mp_obj_array_t *data, size_t n0, size_t n) {
+         mp_print_str(print, "[");
+         size_t i;
+         if(n < PRINT_MAX) { // if the array is short, print everything
+             mp_obj_print_helper(print, mp_binary_get_val_array(data->typecode, data->items, n0), PRINT_REPR);
+             for(i=1; i<n; i++) {
+                 mp_print_str(print, ", ");
+                 mp_obj_print_helper(print, mp_binary_get_val_array(data->typecode, data->items, n0+i), PRINT_REPR);
+             }
+         } else {
+             mp_obj_print_helper(print, mp_binary_get_val_array(data->typecode, data->items, n0), PRINT_REPR);
+             for(i=1; i<3; i++) {
+                 mp_print_str(print, ", ");
+                 mp_obj_print_helper(print, mp_binary_get_val_array(data->typecode, data->items, n0+i), PRINT_REPR);
+             }
+             mp_printf(print, ", ..., ");
+             mp_obj_print_helper(print, mp_binary_get_val_array(data->typecode, data->items, n0+n-3), PRINT_REPR);
+             for(size_t i=1; i<3; i++) {
+                 mp_print_str(print, ", ");
+                 mp_obj_print_helper(print, mp_binary_get_val_array(data->typecode, data->items, n0+n-3+i), PRINT_REPR);
+             }
+         }
+         mp_print_str(print, "]");
+     }
+     
+     void ndarray_print(const mp_print_t *print, mp_obj_t self_in, mp_print_kind_t kind) {
+         (void)kind;
+         ndarray_obj_t *self = MP_OBJ_TO_PTR(self_in);
+         mp_print_str(print, "ndarray(");
+         if((self->m == 1) || (self->n == 1)) {
+             ndarray_print_row(print, self->array, 0, self->array->len);
+         } else {
+             // TODO: add vertical ellipses for the case, when self->m > PRINT_MAX
+             mp_print_str(print, "[");
+             ndarray_print_row(print, self->array, 0, self->n);
+             for(size_t i=1; i < self->m; i++) {
+                 mp_print_str(print, ",\n\t ");
+                 ndarray_print_row(print, self->array, i*self->n, self->n);
+             }
+             mp_print_str(print, "]");
+         }
+         // TODO: print typecode
+         if(self->array->typecode == NDARRAY_UINT8) {
+             printf(", dtype=uint8)");
+         } else if(self->array->typecode == NDARRAY_INT8) {
+             printf(", dtype=int8)");
+         } else if(self->array->typecode == NDARRAY_UINT16) {
+             printf(", dtype=uint16)");
+         } else if(self->array->typecode == NDARRAY_INT16) {
+             printf(", dtype=int16)");
+         } else if(self->array->typecode == NDARRAY_FLOAT) {
+             printf(", dtype=float)");
+         } 
+     }
+     
+     void ndarray_assign_elements(mp_obj_array_t *data, mp_obj_t iterable, uint8_t typecode, size_t *idx) {
+         // assigns a single row in the matrix
+         mp_obj_t item;
+         while ((item = mp_iternext(iterable)) != MP_OBJ_STOP_ITERATION) {
+             mp_binary_set_val_array(typecode, data->items, (*idx)++, item);
+         }
+     }
+     
+     ndarray_obj_t *create_new_ndarray(size_t m, size_t n, uint8_t typecode) {
+         // Creates the base ndarray with shape (m, n), and initialises the values to straight 0s
+         ndarray_obj_t *ndarray = m_new_obj(ndarray_obj_t);
+         ndarray->base.type = &ulab_ndarray_type;
+         ndarray->m = m;
+         ndarray->n = n;
+         mp_obj_array_t *array = array_new(typecode, m*n);
+         ndarray->bytes = m * n * mp_binary_get_size('@', typecode, NULL);
+         // this should set all elements to 0, irrespective of the of the typecode (all bits are zero)
+         // we could, perhaps, leave this step out, and initialise the array only, when needed
+         memset(array->items, 0, ndarray->bytes); 
+         ndarray->array = array;
+         return ndarray;
+     }
+     
+     mp_obj_t ndarray_copy(mp_obj_t self_in) {
+         // returns a verbatim (shape and typecode) copy of self_in
+         ndarray_obj_t *self = MP_OBJ_TO_PTR(self_in);
+         ndarray_obj_t *out = create_new_ndarray(self->m, self->n, self->array->typecode);
+         memcpy(out->array->items, self->array->items, self->bytes);
+         return MP_OBJ_FROM_PTR(out);
+     }
+     
+     STATIC uint8_t ndarray_init_helper(size_t n_args, const mp_obj_t *pos_args, mp_map_t *kw_args) {
+         static const mp_arg_t allowed_args[] = {
+             { MP_QSTR_, MP_ARG_REQUIRED | MP_ARG_OBJ, {.u_rom_obj = MP_ROM_PTR(&mp_const_none_obj)} },
+             { MP_QSTR_dtype, MP_ARG_KW_ONLY | MP_ARG_INT, {.u_int = NDARRAY_FLOAT } },
+         };
+         
+         mp_arg_val_t args[MP_ARRAY_SIZE(allowed_args)];
+         mp_arg_parse_all(1, pos_args, kw_args, MP_ARRAY_SIZE(allowed_args), allowed_args, args);
+         
+         uint8_t dtype = args[1].u_int;
+         return dtype;
+     }
+     
+     mp_obj_t ndarray_make_new(const mp_obj_type_t *type, size_t n_args, size_t n_kw, const mp_obj_t *args) {
+         mp_arg_check_num(n_args, n_kw, 1, 2, true);
+         mp_map_t kw_args;
+         mp_map_init_fixed_table(&kw_args, n_kw, args + n_args);
+         uint8_t dtype = ndarray_init_helper(n_args, args, &kw_args);
+     
+         size_t len1, len2=0, i=0;
+         mp_obj_t len_in = mp_obj_len_maybe(args[0]);
+         if (len_in == MP_OBJ_NULL) {
+             mp_raise_ValueError("first argument must be an iterable");
+         } else {
+             len1 = MP_OBJ_SMALL_INT_VALUE(len_in);
+         }
+     
+         // We have to figure out, whether the first element of the iterable is an iterable itself
+         // Perhaps, there is a more elegant way of handling this
+         mp_obj_iter_buf_t iter_buf1;
+         mp_obj_t item1, iterable1 = mp_getiter(args[0], &iter_buf1);
+         while ((item1 = mp_iternext(iterable1)) != MP_OBJ_STOP_ITERATION) {
+             len_in = mp_obj_len_maybe(item1);
+             if(len_in != MP_OBJ_NULL) { // indeed, this seems to be an iterable
+                 // Next, we have to check, whether all elements in the outer loop have the same length
+                 if(i > 0) {
+                     if(len2 != MP_OBJ_SMALL_INT_VALUE(len_in)) {
+                         mp_raise_ValueError("iterables are not of the same length");
+                     }
+                 }
+                 len2 = MP_OBJ_SMALL_INT_VALUE(len_in);
+                 i++;
+             }
+         }
+         // By this time, it should be established, what the shape is, so we can now create the array
+         ndarray_obj_t *self = create_new_ndarray(len1, (len2 == 0) ? 1 : len2, dtype);
+         iterable1 = mp_getiter(args[0], &iter_buf1);
+         i = 0;
+         if(len2 == 0) { // the first argument is a single iterable
+             ndarray_assign_elements(self->array, iterable1, dtype, &i);
+         } else {
+             mp_obj_iter_buf_t iter_buf2;
+             mp_obj_t iterable2; 
+     
+             while ((item1 = mp_iternext(iterable1)) != MP_OBJ_STOP_ITERATION) {
+                 iterable2 = mp_getiter(item1, &iter_buf2);
+                 ndarray_assign_elements(self->array, iterable2, dtype, &i);
+             }
+         }
+         return MP_OBJ_FROM_PTR(self);
+     }
+     
+     mp_obj_t ndarray_subscr(mp_obj_t self_in, mp_obj_t index, mp_obj_t value) {
+         // NOTE: this will work only on the flattened array!
+         ndarray_obj_t *self = MP_OBJ_TO_PTR(self_in);
+         if (value == MP_OBJ_SENTINEL) { 
+             // simply return the values at index, no assignment
+             if (MP_OBJ_IS_TYPE(index, &mp_type_slice)) {
+                 mp_bound_slice_t slice;
+                 mp_seq_get_fast_slice_indexes(self->array->len, index, &slice);
+                 // TODO: this won't work with index reversion!!!
+                 size_t len = (slice.stop - slice.start) / slice.step;
+                 ndarray_obj_t *out = create_new_ndarray(1, len, self->array->typecode);
+                 int _sizeof = mp_binary_get_size('@', self->array->typecode, NULL);
+                 uint8_t *indata = (uint8_t *)self->array->items;
+                 uint8_t *outdata = (uint8_t *)out->array->items;
+                 for(size_t i=0; i < len; i++) {
+                     memcpy(outdata+(i*_sizeof), indata+(slice.start+i*slice.step)*_sizeof, _sizeof);
+                 }
+                 return MP_OBJ_FROM_PTR(out);
+             }
+             // we have a single index, return either a single number (arrays), or an array (matrices)
+             int16_t idx = mp_obj_get_int(index);
+             if(idx < 0) {
+                 idx = self->m > 1 ? self->m + idx : self->n + idx;
+             }
+             if(self->m > 1) { // we do have a matrix
+                 if(idx >= self->m) {
+                     mp_raise_ValueError("index is out of range");
+                 }
+                 if(self->n == 1) { // the matrix is actually a column vector
+                     return mp_binary_get_val_array(self->array->typecode, self->array->items, idx);
+                 }
+                 // return an array
+                 ndarray_obj_t *out = create_new_ndarray(1, self->n, self->array->typecode);
+                 int _sizeof = mp_binary_get_size('@', self->array->typecode, NULL);
+                 uint8_t *indata = (uint8_t *)self->array->items;
+                 uint8_t *outdata = (uint8_t *)out->array->items;
+                 memcpy(outdata, &indata[idx*self->n*_sizeof], self->n*_sizeof);
+                 return MP_OBJ_FROM_PTR(out);            
+             }
+             // since self->m == 1, we have a flat array, hence, we've got to return a single number
+             if(idx >= self->n) {
+                 mp_raise_ValueError("index is out of range");
+             }
+             return mp_binary_get_val_array(self->array->typecode, self->array->items, idx);
+         } else { 
+             int16_t idx = mp_obj_get_int(index);
+             if((self->m == 1) || (self->n == 1)) {
+                 if(idx < 0) {
+                     idx = self->m > 1 ? self->m + idx : self->n + idx;
+                 }
+                 if((idx > self->m) && (idx > self->n)) {
+                     mp_raise_ValueError("index is out of range");                
+                 }
+                 mp_binary_set_val_array(self->array->typecode, self->array->items, idx, value);
+             } else { // do not deal with assignment, bail out, if the array is two-dimensional
+                 mp_raise_NotImplementedError("subcript assignment is not implemented for 2D arrays");
+             }
+         }
+         return mp_const_none;
+     }
+     
+     // itarray iterator
+     
+     mp_obj_t ndarray_getiter(mp_obj_t o_in, mp_obj_iter_buf_t *iter_buf) {
+         return mp_obj_new_ndarray_iterator(o_in, 0, iter_buf);
+     }
+     
+     typedef struct _mp_obj_ndarray_it_t {
+         mp_obj_base_t base;
+         mp_fun_1_t iternext;
+         mp_obj_t ndarray;
+         size_t cur;
+     } mp_obj_ndarray_it_t;
+     
+     mp_obj_t ndarray_iternext(mp_obj_t self_in) {
+         mp_obj_ndarray_it_t *self = MP_OBJ_TO_PTR(self_in);
+         ndarray_obj_t *ndarray = MP_OBJ_TO_PTR(self->ndarray);
+         // TODO: in numpy, ndarrays are iterated with respect to the first axis. 
+         size_t iter_end = 0;
+         if((ndarray->m == 1) || (ndarray->n ==1)) {
+             iter_end = ndarray->array->len;
+         } else {
+             iter_end = ndarray->m;
+         }
+         if(self->cur < iter_end) {
+             if(ndarray->m == ndarray->array->len) { // we have a linear array
+                 // read the current value
+                 mp_obj_t value;
+                 value = mp_binary_get_val_array(ndarray->array->typecode, ndarray->array->items, self->cur);
+                 self->cur++;
+                 return value;
+             } else { // we have a matrix, return the number of rows
+                 ndarray_obj_t *value = create_new_ndarray(1, ndarray->n, ndarray->array->typecode);
+                 // copy the memory content here
+                 uint8_t *tmp = (uint8_t *)ndarray->array->items;
+                 size_t strip_size = ndarray->n * mp_binary_get_size('@', ndarray->array->typecode, NULL);
+                 memcpy(value->array->items, &tmp[self->cur*strip_size], strip_size);
+                 self->cur++;
+                 return value;
+             }
+         } else {
+             return MP_OBJ_STOP_ITERATION;
+         }
+     }
+     
+     mp_obj_t mp_obj_new_ndarray_iterator(mp_obj_t ndarray, size_t cur, mp_obj_iter_buf_t *iter_buf) {
+         assert(sizeof(mp_obj_ndarray_it_t) <= sizeof(mp_obj_iter_buf_t));
+         mp_obj_ndarray_it_t *o = (mp_obj_ndarray_it_t*)iter_buf;
+         o->base.type = &mp_type_polymorph_iter;
+         o->iternext = ndarray_iternext;
+         o->ndarray = ndarray;
+         o->cur = cur;
+         return MP_OBJ_FROM_PTR(o);
+     }
+     
+     mp_obj_t ndarray_shape(mp_obj_t self_in) {
+         ndarray_obj_t *self = MP_OBJ_TO_PTR(self_in);
+         mp_obj_t tuple[2] = {
+             mp_obj_new_int(self->m),
+             mp_obj_new_int(self->n)
+         };
+         return mp_obj_new_tuple(2, tuple);
+     }
+     
+     mp_obj_t ndarray_size(mp_obj_t self_in, mp_obj_t axis) {
+         ndarray_obj_t *self = MP_OBJ_TO_PTR(self_in);
+         uint8_t ax = mp_obj_get_int(axis);
+         if(ax == 0) {
+             return mp_obj_new_int(self->array->len);
+         } else if(ax == 1) {
+             return mp_obj_new_int(self->m);
+         } else if(ax == 2) {
+             return mp_obj_new_int(self->n);
+         } else {
+             return mp_const_none;
+         }
+     }
+     
+     mp_obj_t ndarray_rawsize(mp_obj_t self_in) {
+         // returns a 5-tuple with the 
+         // 
+         // 1. number of rows
+         // 2. number of columns
+         // 3. length of the storage (should be equal to the product of 1. and 2.)
+         // 4. length of the data storage in bytes
+         // 5. datum size in bytes
+         ndarray_obj_t *self = MP_OBJ_TO_PTR(self_in);
+         mp_obj_tuple_t *tuple = MP_OBJ_TO_PTR(mp_obj_new_tuple(5, NULL));
+         tuple->items[0] = MP_OBJ_NEW_SMALL_INT(self->m);
+         tuple->items[1] = MP_OBJ_NEW_SMALL_INT(self->n);
+         tuple->items[2] = MP_OBJ_NEW_SMALL_INT(self->bytes);
+         tuple->items[3] = MP_OBJ_NEW_SMALL_INT(self->array->len);
+         tuple->items[4] = MP_OBJ_NEW_SMALL_INT(mp_binary_get_size('@', self->array->typecode, NULL));
+         return tuple;
+     }
+     
+     mp_obj_t ndarray_flatten(size_t n_args, const mp_obj_t *pos_args, mp_map_t *kw_args) {
+         static const mp_arg_t allowed_args[] = {
+             { MP_QSTR_order, MP_ARG_KW_ONLY | MP_ARG_OBJ, {.u_rom_obj = MP_ROM_QSTR(MP_QSTR_C)} },
+         };
+     
+         mp_arg_val_t args[MP_ARRAY_SIZE(allowed_args)];
+         mp_arg_parse_all(n_args - 1, pos_args + 1, kw_args, MP_ARRAY_SIZE(allowed_args), allowed_args, args);
+         mp_obj_t self_copy = ndarray_copy(pos_args[0]);
+         ndarray_obj_t *ndarray = MP_OBJ_TO_PTR(self_copy);
+         
+         GET_STR_DATA_LEN(args[0].u_obj, order, len);    
+         if((len != 1) || ((memcmp(order, "C", 1) != 0) && (memcmp(order, "F", 1) != 0))) {
+             mp_raise_ValueError("flattening order must be either 'C', or 'F'");        
+         }
+     
+         // if order == 'C', we simply have to set m, and n, there is nothing else to do
+         if(memcmp(order, "F", 1) == 0) {
+             ndarray_obj_t *self = MP_OBJ_TO_PTR(pos_args[0]);
+             uint8_t _sizeof = mp_binary_get_size('@', self->array->typecode, NULL);
+             // get the data of self_in: we won't need a temporary buffer for the transposition
+             uint8_t *self_array = (uint8_t *)self->array->items;
+             uint8_t *array = (uint8_t *)ndarray->array->items;
+             size_t i=0;
+             for(size_t n=0; n < self->n; n++) {
+                 for(size_t m=0; m < self->m; m++) {
+                     memcpy(array+_sizeof*i, self_array+_sizeof*(m*self->n + n), _sizeof);
+                     i++;
+                 }
+             }        
+         }
+         ndarray->n = ndarray->array->len;
+         ndarray->m = 1;
+         return self_copy;
+     }
+     
+     // Binary operations
+     
+     mp_obj_t ndarray_binary_op(mp_binary_op_t op, mp_obj_t lhs, mp_obj_t rhs) {
+         // One of the operands is a scalar
+         // TODO: conform to numpy with the upcasting
+         // TODO: implement in-place operators
+         mp_obj_t RHS = MP_OBJ_NULL;
+         bool rhs_is_scalar = true;
+         if(mp_obj_is_int(rhs)) {
+             size_t ivalue = mp_obj_get_int(rhs);
+             if((ivalue > 0) && (ivalue < 256)) {
+                 CREATE_SINGLE_ITEM(RHS, uint8_t, NDARRAY_UINT8, ivalue);
+             }
+             else if((ivalue > 0) && (ivalue < 65535)) {
+                 CREATE_SINGLE_ITEM(RHS, uint16_t, NDARRAY_UINT16, ivalue);
+             }
+             else if((ivalue < 0) && (ivalue > -128)) {
+                 CREATE_SINGLE_ITEM(RHS, int8_t, NDARRAY_INT8, ivalue);
+             }
+             else if((ivalue < 0) && (ivalue > -32767)) {
+                 CREATE_SINGLE_ITEM(RHS, int16_t, NDARRAY_INT16, ivalue);
+             }
+         } else if(mp_obj_is_float(rhs)) {
+             float fvalue = mp_obj_get_float(rhs);        
+             CREATE_SINGLE_ITEM(RHS, float, NDARRAY_FLOAT, fvalue);
+         } else {
+             RHS = rhs;
+             rhs_is_scalar = false;
+         }
+         //else 
+         if(mp_obj_is_type(lhs, &ulab_ndarray_type) && mp_obj_is_type(RHS, &ulab_ndarray_type)) { 
+             // next, the ndarray stuff
+             ndarray_obj_t *ol = MP_OBJ_TO_PTR(lhs);
+             ndarray_obj_t *or = MP_OBJ_TO_PTR(RHS);
+             if(!rhs_is_scalar && ((ol->m != or->m) || (ol->n != or->n))) {
+                 mp_raise_ValueError("operands could not be broadcast together");
+             }
+             // At this point, the operands should have the same shape
+             switch(op) {
+                 case MP_BINARY_OP_EQUAL:
+                     // Two arrays are equal, if their shape, typecode, and elements are equal
+                     if((ol->m != or->m) || (ol->n != or->n) || (ol->array->typecode != or->array->typecode)) {
+                         return mp_const_false;
+                     } else {
+                         size_t i = ol->bytes;
+                         uint8_t *l = (uint8_t *)ol->array->items;
+                         uint8_t *r = (uint8_t *)or->array->items;
+                         while(i) { // At this point, we can simply compare the bytes, the type is irrelevant
+                             if(*l++ != *r++) {
+                                 return mp_const_false;
+                             }
+                             i--;
+                         }
+                         return mp_const_true;
+                     }
+                     break;
+                 case MP_BINARY_OP_LESS:
+                 case MP_BINARY_OP_LESS_EQUAL:
+                 case MP_BINARY_OP_MORE:
+                 case MP_BINARY_OP_MORE_EQUAL:
+                 case MP_BINARY_OP_ADD:
+                 case MP_BINARY_OP_SUBTRACT:
+                 case MP_BINARY_OP_TRUE_DIVIDE:
+                 case MP_BINARY_OP_MULTIPLY:
+                     // These are the upcasting rules
+                     // float always becomes float
+                     // operation on identical types preserves type
+                     // uint8 + int8 => int16
+                     // uint8 + int16 => int16
+                     // uint8 + uint16 => uint16
+                     // int8 + int16 => int16
+                     // int8 + uint16 => uint16
+                     // uint16 + int16 => float
+                     // The parameters of RUN_BINARY_LOOP are 
+                     // typecode of result, type_out, type_left, type_right, lhs operand, rhs operand, operator
+                     if(ol->array->typecode == NDARRAY_UINT8) {
+                         if(or->array->typecode == NDARRAY_UINT8) {
+                             RUN_BINARY_LOOP(NDARRAY_UINT8, uint8_t, uint8_t, uint8_t, ol, or, op);
+                         } else if(or->array->typecode == NDARRAY_INT8) {
+                             RUN_BINARY_LOOP(NDARRAY_INT16, int16_t, uint8_t, int8_t, ol, or, op);
+                         } else if(or->array->typecode == NDARRAY_UINT16) {
+                             RUN_BINARY_LOOP(NDARRAY_UINT16, uint16_t, uint8_t, uint16_t, ol, or, op);
+                         } else if(or->array->typecode == NDARRAY_INT16) {
+                             RUN_BINARY_LOOP(NDARRAY_INT16, int16_t, uint8_t, int16_t, ol, or, op);
+                         } else if(or->array->typecode == NDARRAY_FLOAT) {
+                             RUN_BINARY_LOOP(NDARRAY_FLOAT, float, uint8_t, float, ol, or, op);
+                         }
+                     } else if(ol->array->typecode == NDARRAY_INT8) {
+                         if(or->array->typecode == NDARRAY_UINT8) {
+                             RUN_BINARY_LOOP(NDARRAY_INT16, int16_t, int8_t, uint8_t, ol, or, op);
+                         } else if(or->array->typecode == NDARRAY_INT8) {
+                             RUN_BINARY_LOOP(NDARRAY_INT8, int8_t, int8_t, int8_t, ol, or, op);
+                         } else if(or->array->typecode == NDARRAY_UINT16) {
+                             RUN_BINARY_LOOP(NDARRAY_INT16, int16_t, int8_t, uint16_t, ol, or, op);
+                         } else if(or->array->typecode == NDARRAY_INT16) {
+                             RUN_BINARY_LOOP(NDARRAY_INT16, int16_t, int8_t, int16_t, ol, or, op);
+                         } else if(or->array->typecode == NDARRAY_FLOAT) {
+                             RUN_BINARY_LOOP(NDARRAY_FLOAT, float, int8_t, float, ol, or, op);
+                         }                
+                     } else if(ol->array->typecode == NDARRAY_UINT16) {
+                         if(or->array->typecode == NDARRAY_UINT8) {
+                             RUN_BINARY_LOOP(NDARRAY_UINT16, uint16_t, uint16_t, uint8_t, ol, or, op);
+                         } else if(or->array->typecode == NDARRAY_INT8) {
+                             RUN_BINARY_LOOP(NDARRAY_UINT16, uint16_t, uint16_t, int8_t, ol, or, op);
+                         } else if(or->array->typecode == NDARRAY_UINT16) {
+                             RUN_BINARY_LOOP(NDARRAY_UINT16, uint16_t, uint16_t, uint16_t, ol, or, op);
+                         } else if(or->array->typecode == NDARRAY_INT16) {
+                             RUN_BINARY_LOOP(NDARRAY_FLOAT, float, uint16_t, int16_t, ol, or, op);
+                         } else if(or->array->typecode == NDARRAY_FLOAT) {
+                             RUN_BINARY_LOOP(NDARRAY_FLOAT, float, uint8_t, float, ol, or, op);
+                         }
+                     } else if(ol->array->typecode == NDARRAY_INT16) {
+                         if(or->array->typecode == NDARRAY_UINT8) {
+                             RUN_BINARY_LOOP(NDARRAY_INT16, int16_t, int16_t, uint8_t, ol, or, op);
+                         } else if(or->array->typecode == NDARRAY_INT8) {
+                             RUN_BINARY_LOOP(NDARRAY_INT16, int16_t, int16_t, int8_t, ol, or, op);
+                         } else if(or->array->typecode == NDARRAY_UINT16) {
+                             RUN_BINARY_LOOP(NDARRAY_FLOAT, float, int16_t, uint16_t, ol, or, op);
+                         } else if(or->array->typecode == NDARRAY_INT16) {
+                             RUN_BINARY_LOOP(NDARRAY_INT16, int16_t, int16_t, int16_t, ol, or, op);
+                         } else if(or->array->typecode == NDARRAY_FLOAT) {
+                             RUN_BINARY_LOOP(NDARRAY_FLOAT, float, uint16_t, float, ol, or, op);
+                         }
+                     } else if(ol->array->typecode == NDARRAY_FLOAT) {
+                         if(or->array->typecode == NDARRAY_UINT8) {
+                             RUN_BINARY_LOOP(NDARRAY_FLOAT, float, float, uint8_t, ol, or, op);
+                         } else if(or->array->typecode == NDARRAY_INT8) {
+                             RUN_BINARY_LOOP(NDARRAY_FLOAT, float, float, int8_t, ol, or, op);
+                         } else if(or->array->typecode == NDARRAY_UINT16) {
+                             RUN_BINARY_LOOP(NDARRAY_FLOAT, float, float, uint16_t, ol, or, op);
+                         } else if(or->array->typecode == NDARRAY_INT16) {
+                             RUN_BINARY_LOOP(NDARRAY_FLOAT, float, float, int16_t, ol, or, op);
+                         } else if(or->array->typecode == NDARRAY_FLOAT) {
+                             RUN_BINARY_LOOP(NDARRAY_FLOAT, float, float, float, ol, or, op);
+                         }
+                     } else { // this should never happen
+                         mp_raise_TypeError("wrong input type");
+                     }
+                     // this instruction should never be reached, but we have to make the compiler happy
+                     return MP_OBJ_NULL; 
+                 default:
+                     return MP_OBJ_NULL; // op not supported                                                        
+             }
+         } else {
+             mp_raise_TypeError("wrong operand type on the right hand side");
+         }
+     }
+     
+     mp_obj_t ndarray_unary_op(mp_unary_op_t op, mp_obj_t self_in) {
+         ndarray_obj_t *self = MP_OBJ_TO_PTR(self_in);
+         ndarray_obj_t *ndarray = NULL;
+         switch (op) {
+             case MP_UNARY_OP_LEN: 
+                 if(self->m > 1) {
+                     return mp_obj_new_int(self->m);
+                 } else {
+                     return mp_obj_new_int(self->len);
+                 }
+                 break;
+             
+             case MP_UNARY_OP_INVERT:
+                 if(self->array->typecode == NDARRAY_FLOAT) {
+                     mp_raise_ValueError("operation is not supported for given type");
+                 }
+                 // we can invert the content byte by byte, there is no need to distinguish 
+                 // between different typecodes
+                 ndarray = MP_OBJ_TO_PTR(ndarray_copy(self_in));
+                 uint8_t *array = (uint8_t *)ndarray->array->items;
+                 for(size_t i=0; i < self->bytes; i++) array[i] = ~array[i];
+                 return MP_OBJ_FROM_PTR(ndarray);
+                 break;
+             
+             case MP_UNARY_OP_NEGATIVE:
+                 ndarray = MP_OBJ_TO_PTR(ndarray_copy(self_in));
+                 if(self->array->typecode == NDARRAY_UINT8) {
+                     uint8_t *array = (uint8_t *)ndarray->array->items;
+                     for(size_t i=0; i < self->array->len; i++) array[i] = -array[i];
+                 } else if(self->array->typecode == NDARRAY_INT8) {
+                     int8_t *array = (int8_t *)ndarray->array->items;
+                     for(size_t i=0; i < self->array->len; i++) array[i] = -array[i];
+                 } else if(self->array->typecode == NDARRAY_UINT16) {                
+                     uint16_t *array = (uint16_t *)ndarray->array->items;
+                     for(size_t i=0; i < self->array->len; i++) array[i] = -array[i];
+                 } else if(self->array->typecode == NDARRAY_INT16) {
+                     int16_t *array = (int16_t *)ndarray->array->items;
+                     for(size_t i=0; i < self->array->len; i++) array[i] = -array[i];
+                 } else {
+                     float *array = (float *)ndarray->array->items;
+                     for(size_t i=0; i < self->array->len; i++) array[i] = -array[i];
+                 }
+                 return MP_OBJ_FROM_PTR(ndarray);
+                 break;
+     
+             case MP_UNARY_OP_POSITIVE:
+                 return ndarray_copy(self_in);
+     
+             case MP_UNARY_OP_ABS:
+                 if((self->array->typecode == NDARRAY_UINT8) || (self->array->typecode == NDARRAY_UINT16)) {
+                     return ndarray_copy(self_in);
+                 }
+                 ndarray = MP_OBJ_TO_PTR(ndarray_copy(self_in));
+                 if((self->array->typecode == NDARRAY_INT8)) {
+                     int8_t *array = (int8_t *)ndarray->array->items;
+                     for(size_t i=0; i < self->array->len; i++) {
+                         if(array[i] < 0) array[i] = -array[i];
+                     }
+                 } else if((self->array->typecode == NDARRAY_INT16)) {
+                     int16_t *array = (int16_t *)ndarray->array->items;
+                     for(size_t i=0; i < self->array->len; i++) {
+                         if(array[i] < 0) array[i] = -array[i];
+                     }
+                 } else {
+                     float *array = (float *)ndarray->array->items;
+                     for(size_t i=0; i < self->array->len; i++) {
+                         if(array[i] < 0) array[i] = -array[i];
+                     }                
+                 }
+                 return MP_OBJ_FROM_PTR(ndarray);
+                 break;
+             default: return MP_OBJ_NULL; // operator not supported
+         }
+     }
+ 
+ ipython3.. code ::
+         
+     a = array([1, 2, 3, 4])
+     a < a[2]
+ 
+ 
+ 
+ 
+ .. parsed-literal::
+ 
+     array([ True,  True, False, False])
+ 
+ 
+ 
+ ipython3.. code ::
+         
+     %%micropython -unix 1
+     
+     import ulab
+     
+     a = ulab.ndarray([1, -2, 3], dtype=ulab.int8)
+     
+     print(abs(a))
+     
+     a = ulab.ndarray([1, 2, 3], dtype=ulab.uint8)
+     print(~a)
+     
+     a = ulab.ndarray([1, 2, 3], dtype=ulab.int8)
+     print(~a)
+ .. parsed-literal::
+ 
+     ndarray([1, 2, 3], dtype=int8)
+     ndarray([254, 253, 252], dtype=uint8)
+     ndarray([-2, -3, -4], dtype=int8)
+     
+     
+ 
+ ipython3.. code ::
+         
+     a = array([1, -2, 3], dtype=int8)
+     print(-a, +a)
+     
+     a = array([1, 2, 3], dtype=uint8)
+     print(-a, +a)
+     
+     a = array([1, 2, -3], dtype=float)
+     print(-a, +a)
+ .. parsed-literal::
+ 
+     [-1  2 -3] [ 1 -2  3]
+     [255 254 253] [1 2 3]
+     [-1. -2.  3.] [ 1.  2. -3.]
+ 
+ ipython3.. code ::
+         
+     %%micropython -unix 1
+     
+     import ulab
+     
+     a = ulab.ndarray([1, -2, 3], dtype=ulab.int8)
+     print(-a, +a)
+     
+     a = ulab.ndarray([1, 2, 3], dtype=ulab.uint8)
+     print(-a, +a)
+     
+     a = ulab.ndarray([1, 2, -3], dtype=ulab.float)
+     print(-a, +a)
+ .. parsed-literal::
+ 
+     ndarray([-1, 2, -3], dtype=int8) ndarray([1, -2, 3], dtype=int8)
+     ndarray([255, 254, 253], dtype=uint8) ndarray([1, 2, 3], dtype=uint8)
+     ndarray([-1.0, -2.0, 3.0], dtype=float) ndarray([1.0, 2.0, -3.0], dtype=float)
+     
+     
+ 
+ ipython3.. code ::
+         
+     a = array([1, 2, 3], dtype=int8)
+     
+     print(~a)
+ .. parsed-literal::
+ 
+     [-2 -3 -4]
+ 
+ ipython3.. code ::
+         
+     a = array([[1, 2, 3], [4, 5, 6], [7, 8, 9]])
+ ipython3.. code ::
+         
+     a[0, 1]
+ 
+ 
+ 
+ 
+ .. parsed-literal::
+ 
+     2
+ 
+ 
+ 
+ Linear algebra
+ ==============
+ 
+ This module contains very basic matrix operators, such as transposing,
+ reshaping, inverting, and matrix multiplication. The actual inversion is
+ factored out into a helper function, so that the routine can be re-used
+ in other modules. (The ``polyfit`` function in ``poly.c`` uses that.)
+ Also note that inversion is based on the notion of a *small number*
+ (epsilon). During the computation of the inverse, a number is treated as
+ 0, if its absolute value is smaller than epsilon. This precaution is
+ required, otherwise, one might run into singular matrices.
+ 
+ As in ``numpy``, ``inv`` is not a class method, but it should be applied
+ only on ``ndarray``\ s. This is why one has to check the argument type
+ at the beginning of the functions.
+ 
+ Examples
+ --------
+ 
+ Transpose of one- and two-dimensional arrays, .transpose()
+ ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
+ 
+ ipython3.. code ::
+         
+     %%micropython -unix 1
+     
+     from ulab import ndarray
+     
+     a = ndarray(range(10))
+     print('1D array: ', a)
+     print('shape of a: ', a.shape())
+     
+     a.transpose()
+     print('\ntranspose of array: ', a)
+     print('shape of a: ', a.shape())
+     
+     
+     a = ndarray([[1, 2, 3, 4], [5, 6, 7, 8]])
+     print('\n2D array: \n', a)
+     print('shape of a: ', a.shape())
+     
+     a.transpose()
+     print('\ntranspose of array: \n', a)
+     print('shape of a: ', a.shape())
+ .. parsed-literal::
+ 
+     1D array:  ndarray([0.0, 1.0, 2.0, ..., 7.0, 8.0, 9.0], dtype=float)
+     shape of a:  (10, 1)
+     
+     transpose of array:  ndarray([0.0, 1.0, 2.0, ..., 7.0, 8.0, 9.0], dtype=float)
+     shape of a:  (1, 10)
+     
+     2D array: 
+      ndarray([[1.0, 2.0, 3.0, 4.0],
+     	 [5.0, 6.0, 7.0, 8.0]], dtype=float)
+     shape of a:  (2, 4)
+     
+     transpose of array: 
+      ndarray([[1.0, 5.0],
+     	 [2.0, 6.0],
+     	 [3.0, 7.0],
+     	 [4.0, 8.0]], dtype=float)
+     shape of a:  (4, 2)
+     
+     
+ 
+ .reshape()
+ ~~~~~~~~~~
+ 
+ ipython3.. code ::
+         
+     %%micropython -unix 1
+     
+     from ulab import ndarray
+     
+     a = ndarray(range(15))
+     print('1D array: ', a)
+     print('shape of a: ', a.shape())
+     
+     a.reshape((3, 5))
+     print('\n2D array: \n', a)
+     print('shape of a: ', a.shape())
+ .. parsed-literal::
+ 
+     1D array:  ndarray([0.0, 1.0, 2.0, ..., 12.0, 13.0, 14.0], dtype=float)
+     shape of a:  (15, 1)
+     
+     2D array: 
+      ndarray([[0.0, 1.0, 2.0, 3.0, 4.0],
+     	 [5.0, 6.0, 7.0, 8.0, 9.0],
+     	 [10.0, 11.0, 12.0, 13.0, 14.0]], dtype=float)
+     shape of a:  (3, 5)
+     
+     
+ 
+ inverse of a matrix (inv)
+ ~~~~~~~~~~~~~~~~~~~~~~~~~
+ 
+ ipython3.. code ::
+         
+     %%micropython -unix 1
+     
+     from ulab import ndarray, inv
+     
+     a = ndarray([[1, 2], [3, 4]])
+     print('2D matrix (a): \n', a)
+     b = inv(a)
+     print('\ninverse of a: \n', b)
+ .. parsed-literal::
+ 
+     2D matrix (a): 
+      ndarray([[1.0, 2.0],
+     	 [3.0, 4.0]], dtype=float)
+     
+     inverse of a: 
+      ndarray([[-2.0, 1.0],
+     	 [1.5, -0.5]], dtype=float)
+     
+     
+ 
+ matrix multiplication (dot)
+ ~~~~~~~~~~~~~~~~~~~~~~~~~~~
+ 
+ With the ``dot`` function, we can now check, whether the inverse of the
+ matrix was correct:
+ 
+ ipython3.. code ::
+         
+     %%micropython -unix 1
+     
+     from ulab import ndarray, inv, dot
+     
+     
+     a = ndarray([[1, 2], [3, 4]])
+     print('2D matrix (a): \n', a)
+     b = inv(a)
+     print('\ninverse of a: \n', b)
+     
+     c = dot(a, b)
+     print('\na multiplied by its inverse: \n', c)
+ .. parsed-literal::
+ 
+     2D matrix (a): 
+      ndarray([[1.0, 2.0],
+     	 [3.0, 4.0]], dtype=float)
+     
+     inverse of a: 
+      ndarray([[-2.0, 1.0],
+     	 [1.5, -0.5]], dtype=float)
+     
+     a multiplied by its inverse: 
+      ndarray([[1.0, 0.0],
+     	 [0.0, 1.0]], dtype=float)
+     
+     
+ 
+ zeros, ones, eye
+ ~~~~~~~~~~~~~~~~
+ 
+ ipython3.. code ::
+         
+     %%micropython -unix 1
+     
+     import ulab
+     
+     print(ulab.zeros(3, dtype=ulab.int16))
+     print(ulab.zeros((5, 3), dtype=ulab.float))
+     
+     print("\n====================\n");
+     print(ulab.ones(3, dtype=ulab.int16))
+     print(ulab.ones((5, 3), dtype=ulab.float))
+     
+     print("\n====================\n");
+     print(ulab.eye(5, dtype=ulab.int16))
+     print(ulab.eye(5, M=3, dtype=ulab.float))
+     
+     print(ulab.eye(5, k=1, dtype=ulab.uint8))
+     print(ulab.eye(5, k=-3, dtype=ulab.uint8))
+ .. parsed-literal::
+ 
+     ndarray([0, 0, 0], dtype=int16)
+     ndarray([[0.0, 0.0, 0.0],
+     	 [0.0, 0.0, 0.0],
+     	 [0.0, 0.0, 0.0],
+     	 [0.0, 0.0, 0.0],
+     	 [0.0, 0.0, 0.0]], dtype=float)
+     
+     ====================
+     
+     ndarray([1, 1, 1], dtype=int16)
+     ndarray([[1.0, 1.0, 1.0],
+     	 [1.0, 1.0, 1.0],
+     	 [1.0, 1.0, 1.0],
+     	 [1.0, 1.0, 1.0],
+     	 [1.0, 1.0, 1.0]], dtype=float)
+     
+     ====================
+     
+     ndarray([[1, 0, 0, 0, 0],
+     	 [0, 1, 0, 0, 0],
+     	 [0, 0, 1, 0, 0],
+     	 [0, 0, 0, 1, 0],
+     	 [0, 0, 0, 0, 1]], dtype=int16)
+     ndarray([[1.0, 0.0, 0.0, 0.0, 0.0],
+     	 [0.0, 1.0, 0.0, 0.0, 0.0],
+     	 [0.0, 0.0, 1.0, 0.0, 0.0]], dtype=float)
+     ndarray([[0, 1, 0, 0, 0],
+     	 [0, 0, 1, 0, 0],
+     	 [0, 0, 0, 1, 0],
+     	 [0, 0, 0, 0, 1],
+     	 [0, 0, 0, 0, 0]], dtype=uint8)
+     ndarray([[0, 0, 0, 0, 0],
+     	 [0, 0, 0, 0, 0],
+     	 [0, 0, 0, 0, 0],
+     	 [1, 0, 0, 0, 0],
+     	 [0, 1, 0, 0, 0]], dtype=uint8)
+     
+     
+ 
+ linalg.h
+ --------
+ 
+ https://github.com/v923z/micropython-ulab/tree/master/code/linalg.h
+ 
+ .. code:: cpp
+         
+     
+     #ifndef _LINALG_
+     #define _LINALG_
+     
+     #include "ndarray.h"
+     
+     #define SWAP(t, a, b) { t tmp = a; a = b; b = tmp; }
+     #define epsilon        1e-6
+     
+     mp_obj_t linalg_transpose(mp_obj_t );
+     mp_obj_t linalg_reshape(mp_obj_t , mp_obj_t );
+     bool linalg_invert_matrix(float *, size_t );
+     mp_obj_t linalg_inv(mp_obj_t );
+     mp_obj_t linalg_dot(mp_obj_t , mp_obj_t );
+     mp_obj_t linalg_zeros(size_t , const mp_obj_t *, mp_map_t *);
+     mp_obj_t linalg_ones(size_t , const mp_obj_t *, mp_map_t *);
+     mp_obj_t linalg_eye(size_t , const mp_obj_t *, mp_map_t *);
+     
+     #endif
+ 
+ linalg.c
+ --------
+ 
+ https://github.com/v923z/micropython-ulab/tree/master/code/linalg.c
+ 
+ .. code:: cpp
+         
+     
+     #include <stdlib.h>
+     #include <string.h>
+     #include "py/obj.h"
+     #include "py/runtime.h"
+     #include "py/misc.h"
+     #include "linalg.h"
+     
+     mp_obj_t linalg_transpose(mp_obj_t self_in) {
+         ndarray_obj_t *self = MP_OBJ_TO_PTR(self_in);
+         // the size of a single item in the array
+         uint8_t _sizeof = mp_binary_get_size('@', self->array->typecode, NULL);
+         
+         // NOTE: In principle, we could simply specify the stride direction, and then we wouldn't 
+         // even have to shuffle the elements. The downside of that approach is that we would have 
+         // to implement two versions of the matrix multiplication and inversion functions
+         
+         // NOTE: 
+         // if the matrices are square, we can simply swap items, but 
+         // generic matrices can't be transposed in place, so we have to 
+         // declare a temporary variable
+         
+         // NOTE: 
+         //  In the old matrix, the coordinate (m, n) is m*self->n + n
+         //  We have to assign this to the coordinate (n, m) in the new 
+         //  matrix, i.e., to n*self->m + m
+         
+         // one-dimensional arrays can be transposed by simply swapping the dimensions
+         if((self->m != 1) && (self->n != 1)) {
+             uint8_t *c = (uint8_t *)self->array->items;
+             // self->bytes is the size of the bytearray, irrespective of the typecode
+             uint8_t *tmp = m_new(uint8_t, self->bytes);
+             for(size_t m=0; m < self->m; m++) {
+                 for(size_t n=0; n < self->n; n++) {
+                     memcpy(tmp+_sizeof*(n*self->m + m), c+_sizeof*(m*self->n + n), _sizeof);
+                 }
+             }
+             memcpy(self->array->items, tmp, self->bytes);
+             m_del(uint8_t, tmp, self->bytes);
+         } 
+         SWAP(size_t, self->m, self->n);
+         return mp_const_none;
+     }
+     
+     mp_obj_t linalg_reshape(mp_obj_t self_in, mp_obj_t shape) {
+         ndarray_obj_t *self = MP_OBJ_TO_PTR(self_in);
+         if(!MP_OBJ_IS_TYPE(shape, &mp_type_tuple) || (MP_OBJ_SMALL_INT_VALUE(mp_obj_len_maybe(shape)) != 2)) {
+             mp_raise_ValueError("shape must be a 2-tuple");
+         }
+     
+         mp_obj_iter_buf_t iter_buf;
+         mp_obj_t item, iterable = mp_getiter(shape, &iter_buf);
+         uint16_t m, n;
+         item = mp_iternext(iterable);
+         m = mp_obj_get_int(item);
+         item = mp_iternext(iterable);
+         n = mp_obj_get_int(item);
+         if(m*n != self->m*self->n) {
+             // TODO: the proper error message would be "cannot reshape array of size %d into shape (%d, %d)"
+             mp_raise_ValueError("cannot reshape array (incompatible input/output shape)");
+         }
+         self->m = m;
+         self->n = n;
+         return MP_OBJ_FROM_PTR(self);
+     }
+     
+     bool linalg_invert_matrix(float *data, size_t N) {
+         // returns true, of the inversion was successful, 
+         // false, if the matrix is singular
+         
+         // initially, this is the unit matrix: the contents of this matrix is what 
+         // will be returned after all the transformations
+         float *unit = m_new(float, N*N);
+     
+         float elem = 1.0;
+         // initialise the unit matrix
+         memset(unit, 0, sizeof(float)*N*N);
+         for(size_t m=0; m < N; m++) {
+             memcpy(&unit[m*(N+1)], &elem, sizeof(float));
+         }
+         for(size_t m=0; m < N; m++){
+             // this could be faster with ((c < epsilon) && (c > -epsilon))
+             if(abs(data[m*(N+1)]) < epsilon) {
+                 m_del(float, unit, N*N);
+                 return false;
+             }
+             for(size_t n=0; n < N; n++){
+                 if(m != n){
+                     elem = data[N*n+m] / data[m*(N+1)];
+                     for(size_t k=0; k < N; k++){
+                         data[N*n+k] -= elem * data[N*m+k];
+                         unit[N*n+k] -= elem * unit[N*m+k];
+                     }
+                 }
+             }
+         }
+         for(size_t m=0; m < N; m++){ 
+             elem = data[m*(N+1)];
+             for(size_t n=0; n < N; n++){
+                 data[N*m+n] /= elem;
+                 unit[N*m+n] /= elem;
+             }
+         }
+         memcpy(data, unit, sizeof(float)*N*N);
+         m_del(float, unit, N*N);
+         return true;
+     }
+     
+     mp_obj_t linalg_inv(mp_obj_t o_in) {
+         // since inv is not a class method, we have to inspect the input argument first
+         if(!MP_OBJ_IS_TYPE(o_in, &ulab_ndarray_type)) {
+             mp_raise_TypeError("only ndarrays can be inverted");
+         }
+         ndarray_obj_t *o = MP_OBJ_TO_PTR(o_in);
+         if(!MP_OBJ_IS_TYPE(o_in, &ulab_ndarray_type)) {
+             mp_raise_TypeError("only ndarray objects can be inverted");
+         }
+         if(o->m != o->n) {
+             mp_raise_ValueError("only square matrices can be inverted");
+         }
+         ndarray_obj_t *inverted = create_new_ndarray(o->m, o->n, NDARRAY_FLOAT);
+         float *data = (float *)inverted->array->items;
+         mp_obj_t elem;
+         for(size_t m=0; m < o->m; m++) { // rows first
+             for(size_t n=0; n < o->n; n++) { // columns next
+                 // this could, perhaps, be done in single line... 
+                 // On the other hand, we probably spend little time here
+                 elem = mp_binary_get_val_array(o->array->typecode, o->array->items, m*o->n+n);
+                 data[m*o->n+n] = (float)mp_obj_get_float(elem);
+             }
+         }
+         
+         if(!linalg_invert_matrix(data, o->m)) {
+             // TODO: I am not sure this is needed here. Otherwise, 
+             // how should we free up the unused RAM of inverted?
+             m_del(float, inverted->array->items, o->n*o->n);
+             mp_raise_ValueError("input matrix is singular");
+         }
+         return MP_OBJ_FROM_PTR(inverted);
+     }
+     
+     mp_obj_t linalg_dot(mp_obj_t _m1, mp_obj_t _m2) {
+         // TODO: should the results be upcast?
+         ndarray_obj_t *m1 = MP_OBJ_TO_PTR(_m1);
+         ndarray_obj_t *m2 = MP_OBJ_TO_PTR(_m2);    
+         if(m1->n != m2->m) {
+             mp_raise_ValueError("matrix dimensions do not match");
+         }
+         ndarray_obj_t *out = create_new_ndarray(m1->m, m2->n, NDARRAY_FLOAT);
+         float *outdata = (float *)out->array->items;
+         float sum, v1, v2;
+         for(size_t i=0; i < m1->n; i++) {
+             for(size_t j=0; j < m2->m; j++) {
+                 sum = 0.0;
+                 for(size_t k=0; k < m1->m; k++) {
+                     // (j, k) * (k, j)
+                     v1 = ndarray_get_float_value(m1->array->items, m1->array->typecode, i*m1->n+k);
+                     v2 = ndarray_get_float_value(m2->array->items, m2->array->typecode, k*m2->n+j);
+                     sum += v1 * v2;
+                 }
+                 outdata[i*m1->m+j] = sum;
+             }
+         }
+         return MP_OBJ_FROM_PTR(out);
+     }
+     
+     mp_obj_t linalg_zeros_ones(size_t n_args, const mp_obj_t *pos_args, mp_map_t *kw_args, uint8_t kind) {
+         static const mp_arg_t allowed_args[] = {
+             { MP_QSTR_, MP_ARG_REQUIRED | MP_ARG_OBJ, {.u_obj = MP_OBJ_NULL} } ,
+             { MP_QSTR_dtype, MP_ARG_KW_ONLY | MP_ARG_INT, {.u_int = NDARRAY_FLOAT} },
+         };
+     
+         mp_arg_val_t args[MP_ARRAY_SIZE(allowed_args)];
+         mp_arg_parse_all(n_args, pos_args, kw_args, MP_ARRAY_SIZE(allowed_args), allowed_args, args);
+         
+         uint8_t dtype = args[1].u_int;
+         if(!mp_obj_is_int(args[0].u_obj) && !mp_obj_is_type(args[0].u_obj, &mp_type_tuple)) {
+             mp_raise_TypeError("input argument must be an integer or a 2-tuple");
+         }
+         ndarray_obj_t *ndarray = NULL;
+         if(mp_obj_is_int(args[0].u_obj)) {
+             size_t n = mp_obj_get_int(args[0].u_obj);
+             ndarray = create_new_ndarray(1, n, dtype);
+         } else if(mp_obj_is_type(args[0].u_obj, &mp_type_tuple)) {
+             mp_obj_tuple_t *tuple = MP_OBJ_TO_PTR(args[0].u_obj);
+             if(tuple->len != 2) {
+                 mp_raise_TypeError("input argument must be an integer or a 2-tuple");            
+             }
+             ndarray = create_new_ndarray(mp_obj_get_int(tuple->items[0]), 
+                                                       mp_obj_get_int(tuple->items[1]), dtype);
+         }
+         if(kind == 1) {
+             mp_obj_t one = mp_obj_new_int(1);
+             for(size_t i=0; i < ndarray->array->len; i++) {
+                 mp_binary_set_val_array(dtype, ndarray->array->items, i, one);
+             }
+         }
+         return MP_OBJ_FROM_PTR(ndarray);
+     }
+     
+     mp_obj_t linalg_zeros(size_t n_args, const mp_obj_t *pos_args, mp_map_t *kw_args) {
+         return linalg_zeros_ones(n_args, pos_args, kw_args, 0);
+     }
+     
+     mp_obj_t linalg_ones(size_t n_args, const mp_obj_t *pos_args, mp_map_t *kw_args) {
+         return linalg_zeros_ones(n_args, pos_args, kw_args, 1);
+     }
+     
+     mp_obj_t linalg_eye(size_t n_args, const mp_obj_t *pos_args, mp_map_t *kw_args) {
+         static const mp_arg_t allowed_args[] = {
+             { MP_QSTR_, MP_ARG_REQUIRED | MP_ARG_INT, {.u_int = 0} },
+             { MP_QSTR_M, MP_ARG_KW_ONLY | MP_ARG_OBJ, {.u_rom_obj = MP_ROM_PTR(&mp_const_none_obj) } },
+             { MP_QSTR_k, MP_ARG_KW_ONLY | MP_ARG_INT, {.u_int = 0} },        
+             { MP_QSTR_dtype, MP_ARG_KW_ONLY | MP_ARG_INT, {.u_int = NDARRAY_FLOAT} },
+         };
+     
+         mp_arg_val_t args[MP_ARRAY_SIZE(allowed_args)];
+         mp_arg_parse_all(n_args, pos_args, kw_args, MP_ARRAY_SIZE(allowed_args), allowed_args, args);
+     
+         size_t n = args[0].u_int, m;
+         int16_t k = args[2].u_int;
+         uint8_t dtype = args[3].u_int;
+         if(args[1].u_rom_obj == mp_const_none) {
+             m = n;
+         } else {
+             m = mp_obj_get_int(args[1].u_rom_obj);
+         }
+         
+         ndarray_obj_t *ndarray = create_new_ndarray(m, n, dtype);
+         mp_obj_t one = mp_obj_new_int(1);
+         size_t i = 0;
+         if((k >= 0) && (k < n)) {
+             while(k < n) {
+                 mp_binary_set_val_array(dtype, ndarray->array->items, i*n+k, one);
+                 k++;
+                 i++;
+             }
+         } else if((k < 0) && (-k < m)) {
+             k = -k;
+             i = 0;
+             while(k < m) {
+                 mp_binary_set_val_array(dtype, ndarray->array->items, k*n+i, one);
+                 k++;
+                 i++;
+             }
+         }
+         return MP_OBJ_FROM_PTR(ndarray);
+     }
+ 
+ Vectorising mathematical operations
+ ===================================
+ 
+ General comments
+ ----------------
+ 
+ The following module implements the common mathematical functions for
+ scalars, ndarrays (linear or matrix), and iterables. If the input
+ argument is a scalar, a scalar is returned (i.e., for such arguments,
+ these functions are identical to the functions in the ``math`` module),
+ while for ndarrays, and iterables, the return value is an ndarray of
+ type ``float``.
+ 
+ Examples
+ --------
+ 
+ ipython3.. code ::
+         
+     %%micropython -unix 1
+     
+     import ulab
+     
+     # initialise an array
+     a = ulab.ndarray([1, 2, 3, 4, 5])
+     print('1D array: ', a)
+     
+     print('\nexponent of an array (range(5)): ', ulab.exp(range(5)))
+     
+     print('\nexponent of a scalar (2.0): ', ulab.exp(2.0))
+     
+     print('\n exponent of a 1D ndarray (a): ', ulab.exp(a))
+     
+     # initialise a matrix
+     b = ulab.ndarray([[1, 2, 3], [4, 5, 6]])
+     print('\n2D matrix: ', b)
+     print('exponent of a 2D matrix (b): ', ulab.exp(b))
+ .. parsed-literal::
+ 
+     1D array:  ndarray([1.0, 2.0, 3.0, 4.0, 5.0], dtype=float)
+     
+     exponent of an array (range(5)):  ndarray([1.0, 2.718281745910645, 7.389056205749512, 20.08553695678711, 54.59814834594727], dtype=float)
+     
+     exponent of a scalar (2.0):  7.38905609893065
+     
+      exponent of a 1D ndarray (a):  ndarray([2.718281745910645, 7.389056205749512, 20.08553695678711, 54.59814834594727, 148.4131622314453], dtype=float)
+     
+     2D matrix:  ndarray([[1.0, 2.0, 3.0],
+     	 [4.0, 5.0, 6.0]], dtype=float)
+     exponent of a 2D matrix (b):  ndarray([[2.718281745910645, 7.389056205749512, 20.08553695678711],
+     	 [54.59814834594727, 148.4131622314453, 403.4288024902343]], dtype=float)
+     
+     
+ 
+ Note that ndarrays are linear arrays in memory, even if the ``shape`` of
+ the ndarray is a matrix. This means that we can treat both cases in a
+ *single* loop.
+ 
+ Since ``ndarray``\ s are iterable, we could treat ``ndarray``\ s,
+ ``list``\ s, ``tuples``, and ``range``\ s on the same footing. However,
+ that would mean extra trips to a lot of functions, therefore, reading
+ out the values of the ``ndarray`` directly is probably significantly
+ faster.
+ 
+ vectorise.h
+ -----------
+ 
+ https://github.com/v923z/micropython-ulab/tree/master/code/vectorise.h
+ 
+ .. code:: cpp
+         
+     
+     #ifndef _VECTORISE_
+     #define _VECTORISE_
+     
+     #include "ndarray.h"
+     
+     mp_obj_t vectorise_acos(mp_obj_t );
+     mp_obj_t vectorise_acosh(mp_obj_t );
+     mp_obj_t vectorise_asin(mp_obj_t );
+     mp_obj_t vectorise_asinh(mp_obj_t );
+     mp_obj_t vectorise_atan(mp_obj_t );
+     mp_obj_t vectorise_atanh(mp_obj_t );
+     mp_obj_t vectorise_ceil(mp_obj_t );
+     mp_obj_t vectorise_cos(mp_obj_t );
+     mp_obj_t vectorise_erf(mp_obj_t );
+     mp_obj_t vectorise_erfc(mp_obj_t );
+     mp_obj_t vectorise_exp(mp_obj_t );
+     mp_obj_t vectorise_expm1(mp_obj_t );
+     mp_obj_t vectorise_floor(mp_obj_t );
+     mp_obj_t vectorise_gamma(mp_obj_t );
+     mp_obj_t vectorise_lgamma(mp_obj_t );
+     mp_obj_t vectorise_log(mp_obj_t );
+     mp_obj_t vectorise_log10(mp_obj_t );
+     mp_obj_t vectorise_log2(mp_obj_t );
+     mp_obj_t vectorise_sin(mp_obj_t );
+     mp_obj_t vectorise_sinh(mp_obj_t );
+     mp_obj_t vectorise_sqrt(mp_obj_t );
+     mp_obj_t vectorise_tan(mp_obj_t );
+     mp_obj_t vectorise_tanh(mp_obj_t );
+     
+     #endif
+ 
+ vectorise.c
+ -----------
+ 
+ https://github.com/v923z/micropython-ulab/tree/master/code/vectorise.c
+ 
+ .. code:: cpp
+         
+     
+     #include <math.h>
+     #include <stdio.h>
+     #include <stdlib.h>
+     #include "py/runtime.h"
+     #include "py/binary.h"
+     #include "py/obj.h"
+     #include "py/objarray.h"
+     #include "vectorise.h"
+     
+     #ifndef MP_PI
+     #define MP_PI MICROPY_FLOAT_CONST(3.14159265358979323846)
+     #endif
+     
+     mp_obj_t vectorise_generic_vector(mp_obj_t o_in, mp_float_t (*f)(mp_float_t)) {
+         // Return a single value, if o_in is not iterable
+         if(mp_obj_is_float(o_in) || mp_obj_is_integer(o_in)) {
+                 return mp_obj_new_float(f(mp_obj_get_float(o_in)));
+         }
+         mp_float_t x;
+         if(MP_OBJ_IS_TYPE(o_in, &ulab_ndarray_type)) {
+             ndarray_obj_t *o = MP_OBJ_TO_PTR(o_in);
+             ndarray_obj_t *out = create_new_ndarray(o->m, o->n, NDARRAY_FLOAT);
+             float *datain = (float *)o->array->items;
+             float *dataout = (float *)out->array->items;
+             for(size_t i=0; i < o->array->len; i++) {
+                 dataout[i] = f(datain[i]);
+             }
+             return MP_OBJ_FROM_PTR(out);
+         } else if(MP_OBJ_IS_TYPE(o_in, &mp_type_tuple) || MP_OBJ_IS_TYPE(o_in, &mp_type_list) || 
+             MP_OBJ_IS_TYPE(o_in, &mp_type_range)) {
+                 mp_obj_array_t *o = MP_OBJ_TO_PTR(o_in);
+                 ndarray_obj_t *out = create_new_ndarray(1, o->len, NDARRAY_FLOAT);
+                 float *dataout = (float *)out->array->items;
+                 mp_obj_iter_buf_t iter_buf;
+                 mp_obj_t item, iterable = mp_getiter(o_in, &iter_buf);
+                 size_t i=0;
+                 while ((item = mp_iternext(iterable)) != MP_OBJ_STOP_ITERATION) {
+                     x = mp_obj_get_float(item);
+                     dataout[i++] = f(x);
+                 }
+             return MP_OBJ_FROM_PTR(out);
+         }
+         return mp_const_none;
+     }
+     
+     
+     #define MATH_FUN_1(py_name, c_name) \
+         mp_obj_t vectorise_ ## py_name(mp_obj_t x_obj) { \
+             return vectorise_generic_vector(x_obj, MICROPY_FLOAT_C_FUN(c_name)); \
+         }
+     
+     // _degrees won't compile for the unix port
+     /*
+     mp_float_t _degreesf(mp_float_t x) {
+         return(180*x/MP_PI);
+     }
+     
+     MATH_FUN_1(degrees, _degrees);
+     
+     // _radians won't compile for the unix port
+     mp_float_t _radiansf(mp_float_t x) {
+         return(MP_PI*x/180.0);
+     }
+     
+     MATH_FUN_1(radians, _radians);
+     
+     STATIC mp_float_t _fabsf(mp_float_t x) {
+         return fabsf(x);
+     }
+     
+     MATH_FUN_1(fabs, _fabs);
+     */
+     MATH_FUN_1(acos, acos);
+     MATH_FUN_1(acosh, acosh);
+     MATH_FUN_1(asin, asin);
+     MATH_FUN_1(asinh, asinh);
+     MATH_FUN_1(atan, atan);	
+     MATH_FUN_1(atanh, atanh);
+     MATH_FUN_1(ceil, ceil);
+     MATH_FUN_1(cos, cos);
+     MATH_FUN_1(erf, erf);
+     MATH_FUN_1(erfc, erfc);
+     MATH_FUN_1(exp, exp);
+     MATH_FUN_1(expm1, expm1);
+     MATH_FUN_1(floor, floor);
+     MATH_FUN_1(gamma, tgamma);
+     MATH_FUN_1(lgamma, lgamma);
+     MATH_FUN_1(log, log);
+     MATH_FUN_1(log10, log10);
+     MATH_FUN_1(log2, log2);
+     MATH_FUN_1(sin, sin);
+     MATH_FUN_1(sinh, sinh);
+     MATH_FUN_1(sqrt, sqrt);
+     MATH_FUN_1(tan, tan);
+     MATH_FUN_1(tanh, tanh);
+ 
+ Polynomials
+ ===========
+ 
+ This module has two functions, ``polyval``, and ``polyfit``. The
+ background for ``polyfit`` can be found under
+ https://en.wikipedia.org/wiki/Polynomial_regression, and one can take
+ the matrix inversion function from ``linalg``.
+ 
+ Background
+ ----------
+ 
+ An estimate, :math:`\beta`, for the coefficients of a polynomial fit can
+ be gotten from :raw-latex:`\begin{equation}
+ \vec{\beta} = (\mathbf{X}^T\mathbf{X})^{-1}\mathbf{X}^T \vec{y}
+ \end{equation}` where :math:`\vec{y}` are the dependent values, and the
+ matrix :math:`X` is constructed from the independent values as
+ :raw-latex:`\begin{equation}
+ X = \begin{pmatrix}
+ 1 & x_1^2 & x_1^2 & ... & x_1^m 
+ \\
+ 1 & x_2^2 & x_2^2 & ... & x_2^m 
+ \\
+ \vdots & \vdots & \vdots & \ddots & \vdots 
+ \\
+ 1 & x_n^2 & x_n^2 & ... & x_n^m 
+ \end{pmatrix}
+ \end{equation}`
+ 
+ Note that the calculation of :math:`X^T` is trivial, and we need
+ :math:`X` only once, namely in the product :math:`X^TX`. We will save
+ RAM by storing only :math:`X^T`, and expressing :math:`X` from
+ :math:`X^T`, when we need it. The routine calculates the coefficients in
+ increasing order, therefore, before returning, we have to reverse the
+ array.
+ 
+ Examples
+ --------
+ 
+ polyval
+ ~~~~~~~
+ 
+ ipython3.. code ::
+         
+     %%micropython -unix 1
+     
+     import ulab
+     
+     p = [1, 1, 1, 0]
+     x = [0, 1, 2, 3, 4]
+     print('coefficients: ', p)
+     print('independent values: ', x)
+     print('\nvalues of p(x): ', ulab.polyval(p, x))
+     
+     # the same works with ndarrays
+     a = ulab.ndarray(x)
+     print('\nndarray (a): ', a)
+     print('value of p(a): ', ulab.polyval(p, a))
+ .. parsed-literal::
+ 
+     coefficients:  [1, 1, 1, 0]
+     independent values:  [0, 1, 2, 3, 4]
+     
+     values of p(x):  ndarray([0.0, 3.0, 14.0, 39.0, 84.0], dtype=float)
+     
+     ndarray (a):  ndarray([0.0, 1.0, 2.0, 3.0, 4.0], dtype=float)
+     value of p(a):  ndarray([0.0, 3.0, 14.0, 39.0, 84.0], dtype=float)
+     
+     
+ 
+ polyfit
+ ~~~~~~~
+ 
+ First a perfect parabola with zero shift, and leading coefficient of 1.
+ 
+ ipython3.. code ::
+         
+     %%micropython -unix 1
+     
+     import ulab
+     
+     x = ulab.ndarray([-3, -2, -1, 0, 1, 2, 3])
+     y = ulab.ndarray([9, 4, 1, 0, 1, 4, 9])
+     print('independent values: ', x)
+     print('dependent values: ', y)
+     
+     print('fit values', ulab.polyfit(x, y, 2))
+ .. parsed-literal::
+ 
+     independent values:  ndarray([-3.0, -2.0, -1.0, 0.0, 1.0, 2.0, 3.0], dtype=float)
+     dependent values:  ndarray([9.0, 4.0, 1.0, 0.0, 1.0, 4.0, 9.0], dtype=float)
+     fit values ndarray([1.00000011920929, 0.0, 0.0], dtype=float)
+     
+     
+ 
+ We can now take a more meaningful example: the data points scatter here:
+ 
+ ipython3.. code ::
+         
+     %%micropython -unix 1
+     
+     import ulab
+     
+     x = ulab.ndarray([-3, -2, -1, 0, 1, 2, 3])
+     y = ulab.ndarray([10, 5, 1, 0, 1, 4.2, 9.1])
+     print('independent values: ', x)
+     print('dependent values: ', y)
+     
+     print('fit values', ulab.polyfit(x, y, 2))
+ .. parsed-literal::
+ 
+     independent values:  ndarray([-3.0, -2.0, -1.0, 0.0, 1.0, 2.0, 3.0], dtype=float)
+     dependent values:  ndarray([10.0, 5.0, 1.0, 0.0, 1.0, 4.199999809265137, 9.100000381469727], dtype=float)
+     fit values ndarray([1.065476179122925, -0.1535714119672775, 0.06666660308837891], dtype=float)
+     
+     
+ 
+ Finally, let us see, what this looks like in numpy:
+ 
+ ipython3.. code ::
+         
+     x = array([-3, -2, -1, 0, 1, 2, 3])
+     y = array([10, 5, 1, 0, 1, 4.2, 9.1])
+     print('independent values: ', x)
+     print('dependent values: ', y)
+     
+     print('fit values: ', polyfit(x, y, 2))
+ .. parsed-literal::
+ 
+     independent values:  [-3 -2 -1  0  1  2  3]
+     dependent values:  [10.   5.   1.   0.   1.   4.2  9.1]
+     fit values:  [ 1.06547619 -0.15357143  0.06666667]
+ 
+ Look at that!
+ 
+ poly.h
+ ------
+ 
+ https://github.com/v923z/micropython-ulab/tree/master/code/poly.h
+ 
+ .. code:: cpp
+         
+     
+     #ifndef _POLY_
+     #define _POLY_
+     
+     mp_obj_t poly_polyval(mp_obj_t , mp_obj_t );
+     mp_obj_t poly_polyfit(size_t  , const mp_obj_t *);
+     
+     #endif
+ 
+ poly.c
+ ------
+ 
+ https://github.com/v923z/micropython-ulab/tree/master/code/poly.c
+ 
+ .. code:: cpp
+         
+     
+     #include "py/obj.h"
+     #include "py/runtime.h"
+     #include "py/objarray.h"
+     #include "ndarray.h"
+     #include "linalg.h"
+     #include "poly.h"
+     
+     
+     bool object_is_nditerable(mp_obj_t o_in) {
+         if(mp_obj_is_type(o_in, &ulab_ndarray_type) || 
+           mp_obj_is_type(o_in, &mp_type_tuple) || 
+           mp_obj_is_type(o_in, &mp_type_list) || 
+           mp_obj_is_type(o_in, &mp_type_range)) {
+             return true;
+         }
+         return false;
+     }
+     
+     size_t get_nditerable_len(mp_obj_t o_in) {
+         if(mp_obj_is_type(o_in, &ulab_ndarray_type)) {
+             ndarray_obj_t *in = MP_OBJ_TO_PTR(o_in);
+             return in->array->len;
+         } else {
+             return (size_t)mp_obj_get_int(mp_obj_len_maybe(o_in));
+         }
+     }
+     
+     mp_obj_t poly_polyval(mp_obj_t o_p, mp_obj_t o_x) {
+         // TODO: return immediately, if o_p is not an iterable
+         size_t m, n;
+         if(MP_OBJ_IS_TYPE(o_x, &ulab_ndarray_type)) {
+             ndarray_obj_t *ndx = MP_OBJ_TO_PTR(o_x);
+             m = ndx->m;
+             n = ndx->n;
+         } else {
+             mp_obj_array_t *ix = MP_OBJ_TO_PTR(o_x);
+             m = 1;
+             n = ix->len;
+         }
+         // polynomials are going to be of type float, except, when both 
+         // the coefficients and the independent variable are integers
+         ndarray_obj_t *out = create_new_ndarray(m, n, NDARRAY_FLOAT);
+         mp_obj_iter_buf_t x_buf;
+         mp_obj_t x_item, x_iterable = mp_getiter(o_x, &x_buf);
+     
+         mp_obj_iter_buf_t p_buf;
+         mp_obj_t p_item, p_iterable;
+     
+         mp_float_t x, y;
+         float *outf = (float *)out->array->items;
+         uint8_t plen = mp_obj_get_int(mp_obj_len_maybe(o_p));
+         float *p = m_new(float, plen);
+         p_iterable = mp_getiter(o_p, &p_buf);
+         uint16_t i = 0;    
+         while((p_item = mp_iternext(p_iterable)) != MP_OBJ_STOP_ITERATION) {
+             p[i] = (float)mp_obj_get_float(p_item);
+             i++;
+         }
+         i = 0;
+         while ((x_item = mp_iternext(x_iterable)) != MP_OBJ_STOP_ITERATION) {
+             x = mp_obj_get_float(x_item);
+             y = p[0];
+             for(uint8_t j=0; j < plen-1; j++) {
+                 y *= x;
+                 y += p[j+1];
+             }
+             outf[i++] = y;
+         }
+         m_del(float, p, plen);
+         return MP_OBJ_FROM_PTR(out);
+     }
+     
+     mp_obj_t poly_polyfit(size_t  n_args, const mp_obj_t *args) {
+         if((n_args != 2) && (n_args != 3)) {
+             mp_raise_ValueError("number of arguments must be 2, or 3");
+         }
+         if(!object_is_nditerable(args[0])) {
+             mp_raise_ValueError("input data must be an iterable");
+         }
+         uint16_t lenx, leny;
+         uint8_t deg;
+         float *x, *XT, *y, *prod;
+     
+         if(n_args == 2) { // only the y values are supplied
+             // TODO: this is actually not enough: the first argument can very well be a matrix, 
+             // in which case we are between the rock and a hard place
+             leny = (uint16_t)mp_obj_get_int(mp_obj_len_maybe(args[0]));
+             deg = (uint8_t)mp_obj_get_int(args[1]);
+             if(leny < deg) {
+                 mp_raise_ValueError("more degrees of freedom than data points");
+             }
+             lenx = leny;
+             x = m_new(float, lenx); // assume uniformly spaced data points
+             for(size_t i=0; i < lenx; i++) {
+                 x[i] = i;
+             }
+             y = m_new(float, leny);
+             fill_array_iterable(y, args[0]);
+         } else if(n_args == 3) {
+             lenx = (uint16_t)mp_obj_get_int(mp_obj_len_maybe(args[0]));
+             leny = (uint16_t)mp_obj_get_int(mp_obj_len_maybe(args[0]));
+             if(lenx != leny) {
+                 mp_raise_ValueError("input vectors must be of equal length");
+             }
+             deg = (uint8_t)mp_obj_get_int(args[2]);
+             if(leny < deg) {
+                 mp_raise_ValueError("more degrees of freedom than data points");
+             }
+             x = m_new(float, lenx);
+             fill_array_iterable(x, args[0]);
+             y = m_new(float, leny);
+             fill_array_iterable(y, args[1]);
+         }
+         
+         // one could probably express X as a function of XT, 
+         // and thereby save RAM, because X is used only in the product
+         XT = m_new(float, (deg+1)*leny); // XT is a matrix of shape (deg+1, len) (rows, columns)
+         for(uint8_t i=0; i < leny; i++) { // column index
+             XT[i+0*lenx] = 1.0; // top row
+             for(uint8_t j=1; j < deg+1; j++) { // row index
+                 XT[i+j*leny] = XT[i+(j-1)*leny]*x[i];
+             }
+         }
+         
+         prod = m_new(float, (deg+1)*(deg+1)); // the product matrix is of shape (deg+1, deg+1)
+         float sum;
+         for(uint16_t i=0; i < deg+1; i++) { // column index
+             for(uint16_t j=0; j < deg+1; j++) { // row index
+                 sum = 0.0;
+                 for(size_t k=0; k < lenx; k++) {
+                     // (j, k) * (k, i) 
+                     // Note that the second matrix is simply the transpose of the first: 
+                     // X(k, i) = XT(i, k) = XT[k*lenx+i]
+                     sum += XT[j*lenx+k]*XT[i*lenx+k]; // X[k*(deg+1)+i];
+                 }
+                 prod[j*(deg+1)+i] = sum;
+             }
+         }
+         if(!linalg_invert_matrix(prod, deg+1)) {
+             // Although X was a Vandermonde matrix, whose inverse is guaranteed to exist, 
+             // we bail out here, if prod couldn't be inverted: if the values in x are not all 
+             // distinct, prod is singular
+             m_del(float, XT, (deg+1)*lenx);
+             m_del(float, x, lenx);
+             m_del(float, y, lenx);
+             m_del(float, prod, (deg+1)*(deg+1));
+             mp_raise_ValueError("could not invert Vandermonde matrix");
+         } 
+         // at this point, we have the inverse of X^T * X
+         // y is a column vector; x is free now, we can use it for storing intermediate values
+         for(uint16_t i=0; i < deg+1; i++) { // row index
+             sum = 0.0;
+             for(uint16_t j=0; j < lenx; j++) { // column index
+                 sum += XT[i*lenx+j]*y[j];
+             }
+             x[i] = sum;
+         }
+         // XT is no longer needed
+         m_del(float, XT, (deg+1)*leny);
+         
+         ndarray_obj_t *beta = create_new_ndarray(deg+1, 1, NDARRAY_FLOAT);
+         float *betav = (float *)beta->array->items;
+         // x[0..(deg+1)] contains now the product X^T * y; we can get rid of y
+         m_del(float, y, leny);
+         
+         // now, we calculate beta, i.e., we apply prod = (X^T * X)^(-1) on x = X^T * y; x is a column vector now
+         for(uint16_t i=0; i < deg+1; i++) {
+             sum = 0.0;
+             for(uint16_t j=0; j < deg+1; j++) {
+                 sum += prod[i*(deg+1)+j]*x[j];
+             }
+             betav[i] = sum;
+         }
+         m_del(float, x, lenx);
+         m_del(float, prod, (deg+1)*(deg+1));
+         for(uint8_t i=0; i < (deg+1)/2; i++) {
+             // We have to reverse the array, for the leading coefficient comes first. 
+             SWAP(float, betav[i], betav[deg-i]);
+         }
+         return MP_OBJ_FROM_PTR(beta);
+     }
+ 
+ Fast Fourier transform
+ ======================
+ 
+ The original idea of the implementation of the fast Fourier transform is
+ taken from Numerical recipes. The main modification is that the present
+ FFT kernel requires two input vectors of float type: one for the real
+ part, and one for the imaginary part, while in Numerical recipes, the
+ real and imaginary parts occupy alternating positions in the same array.
+ 
+ However, since ``ndarray`` cannot hold complex types, it makes sense to
+ starts with two separate vectors. This is especially true for our
+ particular case, since the data are most probably real, coming from an
+ ADC or similar. By separating the real and imaginary parts at the very
+ beginning, we can process *real* data by not providing the imaginary
+ part. If only one argument is supplied, it is assumed to be real, and
+ the imaginary part is automatically filled in.
+ 
+ Now, the implementation computes the transform in place. This means that
+ RAM space could be saved, if the old data are not required anymore. The
+ problem, however, is that the results are of type float, irrespective of
+ the input type. If one can somehow guarantee that the input type is also
+ float, then the old data can be overwritten. This is what happens in the
+ ``spectrum`` function that overwrites the input array.
+ 
+ Examples
+ --------
+ 
+ Full FFT
+ ~~~~~~~~
+ 
+ ipython3.. code ::
+         
+     %%micropython -unix 1
+     
+     import ulab
+     
+     a = ulab.ndarray([0, 1, 2, 3, 0, 1, 2, 3])
+     re, im = ulab.fft(a)
+     print('real part: ', re)
+     print('imag part: ', im)
+ .. parsed-literal::
+ 
+     real part:  ndarray([12.0, 0.0, -3.999999761581421, 0.0, -4.0, 0.0, -4.0, 0.0], dtype=float)
+     imag part:  ndarray([0.0, 0.0, 3.999999523162842, 0.0, 0.0, 0.0, -3.999999523162842, 0.0], dtype=float)
+     
+     
+ 
+ The same Fourier transform on numpy:
+ 
+ ipython3.. code ::
+         
+     fft.fft([0, 1, 2, 3, 0, 1, 2, 3])
+ 
+ 
+ 
+ 
+ .. parsed-literal::
+ 
+     array([12.+0.j,  0.+0.j, -4.+4.j,  0.+0.j, -4.+0.j,  0.+0.j, -4.-4.j,
+             0.+0.j])
+ 
+ 
+ 
+ Spectrum
+ ~~~~~~~~
+ 
+ ipython3.. code ::
+         
+     %%micropython -unix 1
+     
+     import ulab
+     
+     a = ulab.ndarray([0, 1, 2, 3, 0, 1, 2, 3])
+     ulab.spectrum(a)
+     print(a)
+ .. parsed-literal::
+ 
+     ndarray([12.0, 0.0, 5.656853675842285, 0.0, 4.0, 0.0, 5.656853675842285, 0.0], dtype=float)
+     
+     
+ 
+ And watch this: if you need the spectrum, but do not want to overwrite
+ your data, you can do the following
+ 
+ ipython3.. code ::
+         
+     %%micropython -unix 1
+     
+     import ulab
+     
+     a = ulab.ndarray([0, 1, 2, 3, 0, 1, 2, 3])
+     re, im = ulab.fft(a)
+     print('spectrum: ', ulab.sqrt(re*re+im*im))
+ .. parsed-literal::
+ 
+     spectrum:  ndarray([12.0, 0.0, 5.656853675842285, 0.0, 4.0, 0.0, 5.656853675842285, 0.0], dtype=float)
+     
+     
+ 
+ fft.h
+ -----
+ 
+ https://github.com/v923z/micropython-ulab/tree/master/code/fft.h
+ 
+ .. code:: cpp
+         
+     
+     #ifndef _FFT_
+     #define _FFT_
+     
+     #ifndef MP_PI
+     #define MP_PI MICROPY_FLOAT_CONST(3.14159265358979323846)
+     #endif
+     
+     #define SWAP(t, a, b) { t tmp = a; a = b; b = tmp; }
+     
+     mp_obj_t fft_fft(size_t , const mp_obj_t *);
+     mp_obj_t fft_spectrum(mp_obj_t );
+     #endif
+ 
+ fft.c
+ -----
+ 
+ https://github.com/v923z/micropython-ulab/tree/master/code/fft.c
+ 
+ .. code:: cpp
+         
+     
+     #include <math.h>
+     #include <stdio.h>
+     #include <stdlib.h>
+     #include <string.h>
+     #include "py/runtime.h"
+     #include "py/binary.h"
+     #include "py/obj.h"
+     #include "py/objarray.h"
+     #include "ndarray.h"
+     #include "fft.h"
+     
+     void fft_kernel(float *real, float *imag, int n, int isign) {
+         // This is basically a modification of four1 from Numerical Recipes
+         // The main difference is that this function takes two arrays, one 
+         // for the real, and one for the imaginary parts. 
+         int j, m, mmax, istep;
+         float tempr, tempi;
+         float wtemp, wr, wpr, wpi, wi, theta;
+     
+         j = 0;
+         for(int i = 0; i < n; i++) {
+             if (j > i) {
+                 SWAP(float, real[i], real[j]);
+                 SWAP(float, imag[i], imag[j]);            
+             }
+             m = n >> 1;
+             while (j >= m && m > 0) {
+                 j -= m;
+                 m >>= 1;
+             }
+             j += m;
+         }
+     
+         mmax = 1;
+         while (n > mmax) {
+             istep = mmax << 1;
+             theta = -1.0*isign*6.28318530717959/istep;
+             wtemp = sinf(0.5 * theta);
+             wpr = -2.0 * wtemp * wtemp;
+             wpi = sinf(theta);
+             wr = 1.0;
+             wi = 0.0;
+             for(m = 0; m < mmax; m++) {
+                 for(int i = m; i < n; i += istep) {
+                     j = i + mmax;
+                     tempr = wr * real[j] - wi * imag[j];
+                     tempi = wr * imag[j] + wi * real[j];
+                     real[j] = real[i] - tempr;
+                     imag[j] = imag[i] - tempi;
+                     real[i] += tempr;
+                     imag[i] += tempi;
+                 }
+                 wtemp = wr;
+                 wr = wr*wpr - wi*wpi + wr;
+                 wi = wi*wpr + wtemp*wpi + wi;
+             }
+             mmax = istep;
+         }
+     }
+     
+     mp_obj_t fft_fft(size_t n_args, const mp_obj_t *args) {
+         // TODO: return the absolute value, if keyword argument is specified
+         // TODO: transform the data in place, if keyword argument is specified
+         if(!MP_OBJ_IS_TYPE(args[0], &ulab_ndarray_type)) {
+             mp_raise_NotImplementedError("FFT is defined for ndarrays only");
+         } 
+         if(n_args == 2) {
+             if(!MP_OBJ_IS_TYPE(args[1], &ulab_ndarray_type)) {
+                 mp_raise_NotImplementedError("FFT is defined for ndarrays only");
+             }
+         }
+         // Check if input is of length of power of 2
+         ndarray_obj_t *re = MP_OBJ_TO_PTR(args[0]);
+         uint16_t len = re->array->len;
+         if((len & (len-1)) != 0) {
+             mp_raise_ValueError("input array length must be power of 2");
+         }
+         
+         ndarray_obj_t *out_re = create_new_ndarray(1, len, NDARRAY_FLOAT);
+         float *data_re = (float *)out_re->array->items;
+         
+         if(re->array->typecode == NDARRAY_FLOAT) {
+             memcpy((float *)out_re->array->items, (float *)re->array->items, re->bytes);
+         } else {
+             for(size_t i=0; i < len; i++) {
+                 data_re[i] = ndarray_get_float_value(re->array->items, re->array->typecode, i);
+             }
+         }
+         ndarray_obj_t *out_im = create_new_ndarray(1, len, NDARRAY_FLOAT);
+         float *data_im = (float *)out_im->array->items;
+     
+         if(n_args == 2) {
+             ndarray_obj_t *im = MP_OBJ_TO_PTR(args[1]);
+             if (re->array->len != im->array->len) {
+                 mp_raise_ValueError("real and imaginary parts must be of equal length");
+             }
+             if(im->array->typecode == NDARRAY_FLOAT) {
+                 memcpy((float *)out_im->array->items, (float *)im->array->items, im->bytes);
+             } else {
+                 for(size_t i=0; i < len; i++) {
+                     data_im[i] = ndarray_get_float_value(im->array->items, im->array->typecode, i);
+                 }
+             }
+         }    
+         fft_kernel(data_re, data_im, len, 1);
+         mp_obj_t tuple[2];
+         tuple[0] = out_re;
+         tuple[1] = out_im;
+         return mp_obj_new_tuple(2, tuple);
+     }
+     
+     mp_obj_t fft_spectrum(mp_obj_t oin) {
+         // calculates the the spectrum of a single real ndarray in place
+         if(!MP_OBJ_IS_TYPE(oin, &ulab_ndarray_type)) {
+             mp_raise_NotImplementedError("FFT is defined for ndarrays only");
+         }
+         ndarray_obj_t *re = MP_OBJ_TO_PTR(oin);
+         uint16_t len = re->array->len;
+         if((re->m > 1) && (re->n > 1)) {
+             mp_raise_ValueError("input data must be an array");
+         }
+         if((len & (len-1)) != 0) {
+             mp_raise_ValueError("input array length must be power of 2");
+         }
+         if(re->array->typecode != NDARRAY_FLOAT) {
+             mp_raise_TypeError("input array must be of type float");
+         }
+         float *data_re = (float *)re->array->items;
+         float *data_im = m_new(float, len);
+         fft_kernel(data_re, data_im, len, 1);
+         for(size_t i=0; i < len; i++) {
+             data_re[i] = sqrtf(data_re[i]*data_re[i] + data_im[i]*data_im[i]);
+         }
+         m_del(float, data_im, len);
+         return mp_const_none;
+     }
+ 
+ Numerical
+ =========
+ 
+ General comments
+ ----------------
+ 
+ This section contains miscellaneous functions that did not fit in the
+ other submodules. These include ``linspace``, ``min/max``,
+ ``argmin/argmax``, ``sum``, ``mean``, ``std``. These latter functions
+ work with iterables, or ndarrays. When the ndarray is two-dimensional,
+ an ``axis`` keyword can be supplied, in which case, the function returns
+ a vector, otherwise a scalar.
+ 
+ Since the return values of ``mean``, and ``std`` are most probably
+ floats, these functions return ndarrays of type float, while ``min/max``
+ and ``clip`` do not change the type, and ``argmin/argmax`` return
+ ``uint8``, if the values are smaller than 255, otherwise, ``uint16``.
+ 
+ roll
+ ~~~~
+ 
+ Note that at present, arrays are always rolled to the left, even when
+ the user specifies right. The reason for that is inner working of
+ ``memcpy``: one can shift contiguous chunks to the left only. If one
+ tries to shift to the right, then the same value will be written into
+ the new array over and over again.
+ 
+ Examples
+ --------
+ 
+ ipython3.. code ::
+         
+     %%micropython -unix 1
+     
+     import ulab
+     
+     print(ulab.linspace(0, 10, 11))
+     print(ulab.sum([1, 2, 3]))
+     
+     a = ulab.ndarray([[1, 2, 3, 4, 5], [6, 7, 8, 9, 10], [55, 66, 77, 88, 99]], dtype=ulab.int8)
+     print(a)
+     ulab.roll(a, -1, axis=0)
+     print(a)
+     ulab.roll(a, 1, axis=1)
+     print(a)
+ .. parsed-literal::
+ 
+     ndarray([0.0, 1.0, 2.0, ..., 8.0, 9.0, 10.0], dtype=float)
+     6.0
+     ndarray([[1, 2, 3, 4, 5],
+     	 [6, 7, 8, 9, 10],
+     	 [55, 66, 77, 88, 99]], dtype=int8)
+     ndarray([[55, 66, 77, 88, 99],
+     	 [1, 2, 3, 4, 5],
+     	 [6, 7, 8, 9, 10]], dtype=int8)
+     ndarray([[66, 77, 88, 99, 55],
+     	 [2, 3, 4, 5, 1],
+     	 [7, 8, 9, 10, 6]], dtype=int8)
+     
+     
+ 
+ ipython3.. code ::
+         
+     linspace(0, 10, 11, endpoint=False, dtype=int8, retstep=True)
+ 
+ 
+ 
+ 
+ .. parsed-literal::
+ 
+     (array([0, 0, 1, 2, 3, 4, 5, 6, 7, 8, 9], dtype=int8), 0.9090909090909091)
+ 
+ 
+ 
+ ipython3.. code ::
+         
+     a = array([0, 1, 2, 3], dtype=float)
+     abs(a), -a
+ 
+ 
+ 
+ 
+ .. parsed-literal::
+ 
+     (array([0., 1., 2., 3.]), array([-0., -1., -2., -3.]))
+ 
+ 
+ 
+ ipython3.. code ::
+         
+     %%micropython -unix 1
+     
+     import ulab
+     
+     print(ulab.linspace(0, 10, num=11, endpoint=True, retstep=True, dtype=ulab.int8))
+     print(ulab.linspace(0, 10, num=11, endpoint=False, retstep=True, dtype=ulab.int16))
+ .. parsed-literal::
+ 
+     (ndarray([0, 1, 2, ..., 8, 9, 10], dtype=int8), 1.0)
+     (ndarray([0, 0, 1, ..., 7, 8, 9], dtype=int16), 0.9090909361839294)
+     
+     
+ 
+ ipython3.. code ::
+         
+     %%micropython -unix 1
+     
+     import ulab
+     
+     a = ulab.ndarray([0, 1, 2, -3], dtype=ulab.float)
+     print(abs(a))
+ .. parsed-literal::
+ 
+     ndarray([0.0, 1.0, 2.0, 3.0], dtype=float)
+     
+     
+ 
+ numerical.h
+ -----------
+ 
+ https://github.com/v923z/micropython-ulab/tree/master/code/numerical.h
+ 
+ .. code:: cpp
+         
+     
+     #ifndef _NUMERICAL_
+     #define _NUMERICAL_
+     
+     #include "ndarray.h"
+     
+     mp_obj_t numerical_linspace(size_t , const mp_obj_t *, mp_map_t *);
+     mp_obj_t numerical_sum(size_t , const mp_obj_t *, mp_map_t *);
+     mp_obj_t numerical_mean(size_t , const mp_obj_t *, mp_map_t *);
+     mp_obj_t numerical_std(size_t , const mp_obj_t *, mp_map_t *);
+     mp_obj_t numerical_min(size_t , const mp_obj_t *, mp_map_t *);
+     mp_obj_t numerical_max(size_t , const mp_obj_t *, mp_map_t *);
+     mp_obj_t numerical_argmin(size_t , const mp_obj_t *, mp_map_t *);
+     mp_obj_t numerical_argmax(size_t , const mp_obj_t *, mp_map_t *);
+     mp_obj_t numerical_roll(size_t , const mp_obj_t *, mp_map_t *);
+     
+     #endif
+ 
+ numerical.c
+ -----------
+ 
+ Parsing of arguments
+ ~~~~~~~~~~~~~~~~~~~~
+ 
+ Since most of these functions operate on matrices along an axis, it
+ might make sense to factor out the parsing of arguments and keyword
+ arguments. The void function ``numerical_parse_args`` fills in the
+ pointer for the matrix/array, and the axis.
+ 
+ https://github.com/v923z/micropython-ulab/tree/master/code/numerical.c
+ 
+ .. code:: cpp
+         
+     
+     #include <math.h>
+     #include <stdlib.h>
+     #include <string.h>
+     #include "py/obj.h"
+     #include "py/runtime.h"
+     #include "py/builtin.h"
+     #include "py/misc.h"
+     #include "numerical.h"
+     
+     enum NUMERICAL_FUNCTION_TYPE {
+         NUMERICAL_MIN,
+         NUMERICAL_MAX,
+         NUMERICAL_ARGMIN,
+         NUMERICAL_ARGMAX,
+         NUMERICAL_SUM,
+         NUMERICAL_MEAN,
+         NUMERICAL_STD,
+     };
+     
+     mp_obj_t numerical_linspace(size_t n_args, const mp_obj_t *pos_args, mp_map_t *kw_args) {
+         static const mp_arg_t allowed_args[] = {
+             { MP_QSTR_, MP_ARG_REQUIRED | MP_ARG_OBJ, {.u_rom_obj = MP_ROM_PTR(&mp_const_none_obj) } },
+             { MP_QSTR_, MP_ARG_REQUIRED | MP_ARG_OBJ, {.u_rom_obj = MP_ROM_PTR(&mp_const_none_obj) } },
+             { MP_QSTR_num, MP_ARG_INT, {.u_int = 50} },
+             { MP_QSTR_endpoint, MP_ARG_KW_ONLY | MP_ARG_OBJ, {.u_rom_obj = MP_ROM_PTR(&mp_const_true_obj)} },
+             { MP_QSTR_retstep, MP_ARG_KW_ONLY | MP_ARG_OBJ, {.u_rom_obj = MP_ROM_PTR(&mp_const_false_obj)} },
+             { MP_QSTR_dtype, MP_ARG_KW_ONLY | MP_ARG_INT, {.u_int = NDARRAY_FLOAT} },
+         };
+     
+         mp_arg_val_t args[MP_ARRAY_SIZE(allowed_args)];
+         mp_arg_parse_all(2, pos_args, kw_args, MP_ARRAY_SIZE(allowed_args), allowed_args, args);
+     
+         uint16_t len = args[2].u_int;
+         if(len < 2) {
+             mp_raise_ValueError("number of points must be at least 2");
+         }
+         float value, step;
+         value = mp_obj_get_float(args[0].u_obj);
+         uint8_t typecode = args[5].u_int;
+         if(args[3].u_obj == mp_const_true) step = (mp_obj_get_float(args[1].u_obj)-value)/(len-1);
+         else step = (mp_obj_get_float(args[1].u_obj)-value)/len;
+         ndarray_obj_t *ndarray = create_new_ndarray(1, len, typecode);
+         if(typecode == NDARRAY_UINT8) {
+             uint8_t *array = (uint8_t *)ndarray->array->items;
+             for(size_t i=0; i < len; i++, value += step) array[i] = (uint8_t)value;
+         } else if(typecode == NDARRAY_INT8) {
+             int8_t *array = (int8_t *)ndarray->array->items;
+             for(size_t i=0; i < len; i++, value += step) array[i] = (int8_t)value;
+         } else if(typecode == NDARRAY_UINT16) {
+             uint16_t *array = (uint16_t *)ndarray->array->items;
+             for(size_t i=0; i < len; i++, value += step) array[i] = (uint16_t)value;
+         } else if(typecode == NDARRAY_INT16) {
+             int16_t *array = (int16_t *)ndarray->array->items;
+             for(size_t i=0; i < len; i++, value += step) array[i] = (int16_t)value;
+         } else {
+             float *array = (float *)ndarray->array->items;
+             for(size_t i=0; i < len; i++, value += step) array[i] = value;
+         }
+         if(args[4].u_obj == mp_const_false) {
+             return MP_OBJ_FROM_PTR(ndarray);
+         } else {
+             mp_obj_t tuple[2];
+             tuple[0] = ndarray;
+             tuple[1] = mp_obj_new_float(step);
+             return mp_obj_new_tuple(2, tuple);
+         }
+     }
+     
+     mp_obj_t numerical_sum_mean_std_array(mp_obj_t oin, uint8_t optype) {
+         mp_float_t value, sum = 0.0, sq_sum = 0.0;
+         mp_obj_iter_buf_t iter_buf;
+         mp_obj_t item, iterable = mp_getiter(oin, &iter_buf);
+         mp_int_t len = mp_obj_get_int(mp_obj_len(oin));
+         while ((item = mp_iternext(iterable)) != MP_OBJ_STOP_ITERATION) {
+             value = mp_obj_get_float(item);
+             sum += value;
+             if(optype == NUMERICAL_STD) {
+                 sq_sum += value*value;
+             }
+         }
+         if(optype ==  NUMERICAL_SUM) {
+             return mp_obj_new_float(sum);
+         } else if(optype == NUMERICAL_MEAN) {
+             return mp_obj_new_float(sum/len);
+         } else {
+             sum /= len; // this is now the mean!
+             return mp_obj_new_float(sqrtf((sq_sum/len-sum*sum)));
+         }
+     }
+     
+     STATIC mp_obj_t numerical_argmin_argmax_array(mp_obj_t o_in, mp_uint_t op, uint8_t type) {
+         size_t idx = 0, best_idx = 0;
+         mp_obj_iter_buf_t iter_buf;
+         mp_obj_t iterable = mp_getiter(o_in, &iter_buf);
+         mp_obj_t best_obj = MP_OBJ_NULL;
+         mp_obj_t item;
+         while ((item = mp_iternext(iterable)) != MP_OBJ_STOP_ITERATION) {
+             if ((best_obj == MP_OBJ_NULL) || (mp_binary_op(op, item, best_obj) == mp_const_true)) {
+                 best_obj = item;
+                 best_idx = idx;
+             }
+             idx++;
+         }
+         if((type == NUMERICAL_ARGMIN) || (type == NUMERICAL_ARGMAX)) {
+             return MP_OBJ_NEW_SMALL_INT(best_idx);
+         } else {
+             return best_obj;
+         }
+     }
+     
+     STATIC size_t numerical_argmin_argmax_single_line(void *data, size_t start, size_t stop, 
+                                                       size_t stride, uint8_t typecode, uint8_t optype) {
+         size_t best_idx = start;
+         mp_float_t value, best_value = ndarray_get_float_value(data, typecode, start);
+         
+         for(size_t i=start; i < stop; i+=stride) {
+             value = ndarray_get_float_value(data, typecode, i);
+             if((optype == NUMERICAL_MIN) || (optype == NUMERICAL_ARGMIN)) {
+                 if(best_value > value) {
+                     best_value = value;
+                     best_idx = i;
+                 }
+             } else if((optype == NUMERICAL_MAX) || (optype == NUMERICAL_ARGMAX)) {
+                 if(best_value < value) {
+                     best_value = value;
+                     best_idx = i;
+                 }
+             }
+         }
+         return best_idx;
+     }
+     
+     STATIC mp_obj_t numerical_argmin_argmax_matrix(mp_obj_t oin, mp_obj_t axis, uint8_t optype) {
+         ndarray_obj_t *in = MP_OBJ_TO_PTR(oin);
+         size_t best_idx;
+         if((axis == mp_const_none) || (in->m == 1) || (in->n == 1)) { 
+             // return the value for the flattened array
+             best_idx = numerical_argmin_argmax_single_line(in->array->items, 0, 
+                                                           in->array->len, 1, in->array->typecode, optype);
+             if((optype == NUMERICAL_ARGMIN) || (optype == NUMERICAL_ARGMAX)) {
+                 return MP_OBJ_NEW_SMALL_INT(best_idx);
+             } else {
+                 // TODO: do we have to do type conversion here, depending on the type of the input array?
+                 return mp_obj_new_float(ndarray_get_float_value(in->array->items, in->array->typecode, best_idx));
+             }
+         } else {
+             uint8_t _axis = mp_obj_get_int(axis);
+             size_t m = (_axis == 0) ? 1 : in->m;
+             size_t n = (_axis == 0) ? in->n : 1;
+             size_t len = in->array->len;
+             // TODO: pass in->array->typcode to create_new_ndarray
+             ndarray_obj_t *out = create_new_ndarray(m, n, NDARRAY_FLOAT);
+     
+             // TODO: these two cases could probably be combined in a more elegant fashion...
+             if(_axis == 0) { // vertical
+                 for(size_t i=0; i < n; i++) {
+                     best_idx = numerical_argmin_argmax_single_line(in->array->items, i, len, 
+                                                                    n, in->array->typecode, optype);
+                     if((optype == NUMERICAL_ARGMIN) || (optype == NUMERICAL_ARGMAX)) {
+                         ((float_t *)out->array->items)[i] = (float)best_idx;
+                     } else {
+                         ((float_t *)out->array->items)[i] = ndarray_get_float_value(in->array->items, in->array->typecode, best_idx);
+                     }
+                 }
+             } else { // horizontal
+                 for(size_t i=0; i < m; i++) {
+                     best_idx = numerical_argmin_argmax_single_line(in->array->items, i*in->n, 
+                                                                    (i+1)*in->n, 1, in->array->typecode, optype);
+                     if((optype == NUMERICAL_ARGMIN) || (optype == NUMERICAL_ARGMAX)) {
+                         ((float_t *)out->array->items)[i] = (float)best_idx;
+                     } else {
+                         ((float_t *)out->array->items)[i] = ndarray_get_float_value(in->array->items, in->array->typecode, best_idx);
+                     }
+     
+                 }
+             }
+         return MP_OBJ_FROM_PTR(out);
+         }
+         return mp_const_none;
+     }
+     
+     STATIC mp_float_t numerical_sum_mean_std_single_line(void *data, size_t start, size_t stop, 
+                                                       size_t stride, uint8_t typecode, uint8_t optype) {
+         
+         mp_float_t sum = 0.0, sq_sum = 0.0, value;
+         size_t len = 0;
+         for(size_t i=start; i < stop; i+=stride, len++) {
+             value = ndarray_get_float_value(data, typecode, i);        
+             sum += value;
+             if(optype == NUMERICAL_STD) {
+                 sq_sum += value*value;
+             }
+         }
+         if(len == 0) {
+             mp_raise_ValueError("data length is 0!");
+         }
+         if(optype ==  NUMERICAL_SUM) {
+             return sum;
+         } else if(optype == NUMERICAL_MEAN) {
+             return sum/len;
+         } else {
+             sum /= len; // this is now the mean!
+             return sqrtf((sq_sum/len-sum*sum));
+         }
+     }
+     
+     STATIC mp_obj_t numerical_sum_mean_std_matrix(mp_obj_t oin, mp_obj_t axis, uint8_t optype) {
+         ndarray_obj_t *in = MP_OBJ_TO_PTR(oin);
+         if((axis == mp_const_none) || (in->m == 1) || (in->n == 1)) { 
+             // return the value for the flattened array
+             return mp_obj_new_float(numerical_sum_mean_std_single_line(in->array->items, 0, 
+                                                           in->array->len, 1, in->array->typecode, optype));
+         } else {
+             uint8_t _axis = mp_obj_get_int(axis);
+             size_t m = (_axis == 0) ? 1 : in->m;
+             size_t n = (_axis == 0) ? in->n : 1;
+             size_t len = in->array->len;
+             mp_float_t sms;
+             // TODO: pass in->array->typcode to create_new_ndarray
+             ndarray_obj_t *out = create_new_ndarray(m, n, NDARRAY_FLOAT);
+     
+             // TODO: these two cases could probably be combined in a more elegant fashion...
+             if(_axis == 0) { // vertical
+                 for(size_t i=0; i < n; i++) {
+                     sms = numerical_sum_mean_std_single_line(in->array->items, i, len, 
+                                                                    n, in->array->typecode, optype);
+                     ((float_t *)out->array->items)[i] = sms;
+                 }
+             } else { // horizontal
+                 for(size_t i=0; i < m; i++) {
+                     sms = numerical_sum_mean_std_single_line(in->array->items, i*in->n, 
+                                                                    (i+1)*in->n, 1, in->array->typecode, optype);
+                     ((float_t *)out->array->items)[i] = sms;
+                 }
+             }
+         return MP_OBJ_FROM_PTR(out);
+         }
+     }
+     
+     STATIC mp_obj_t numerical_function(size_t n_args, const mp_obj_t *pos_args, mp_map_t *kw_args, uint8_t type) {
+         static const mp_arg_t allowed_args[] = {
+             { MP_QSTR_, MP_ARG_REQUIRED | MP_ARG_OBJ, {.u_rom_obj = MP_ROM_PTR(&mp_const_none_obj)} } ,
+             { MP_QSTR_axis, MP_ARG_KW_ONLY | MP_ARG_OBJ, {.u_rom_obj = MP_ROM_PTR(&mp_const_none_obj)} },
+         };
+     
+         mp_arg_val_t args[MP_ARRAY_SIZE(allowed_args)];
+         mp_arg_parse_all(1, pos_args, kw_args, MP_ARRAY_SIZE(allowed_args), allowed_args, args);
+         
+         mp_obj_t oin = args[0].u_obj;
+         mp_obj_t axis = args[1].u_obj;
+         if((axis != mp_const_none) && (mp_obj_get_int(axis) != 0) && (mp_obj_get_int(axis) != 1)) {
+             // this seems to pass with False, and True...
+             mp_raise_ValueError("axis must be None, 0, or 1");
+         }
+         
+         if(MP_OBJ_IS_TYPE(oin, &mp_type_tuple) || MP_OBJ_IS_TYPE(oin, &mp_type_list) || 
+             MP_OBJ_IS_TYPE(oin, &mp_type_range)) {
+             switch(type) {
+                 case NUMERICAL_MIN:
+                 case NUMERICAL_ARGMIN:
+                     return numerical_argmin_argmax_array(oin, MP_BINARY_OP_LESS, type);
+                 case NUMERICAL_MAX:
+                 case NUMERICAL_ARGMAX:
+                     return numerical_argmin_argmax_array(oin, MP_BINARY_OP_MORE, type);
+                 case NUMERICAL_SUM:
+                 case NUMERICAL_MEAN:
+                 case NUMERICAL_STD:
+                     return numerical_sum_mean_std_array(oin, type);
+                 default: // we should never reach this point, but whatever
+                     return mp_const_none;
+             }
+         } else if(MP_OBJ_IS_TYPE(oin, &ulab_ndarray_type)) {
+             switch(type) {
+                 case NUMERICAL_MIN:
+                 case NUMERICAL_MAX:
+                 case NUMERICAL_ARGMIN:
+                 case NUMERICAL_ARGMAX:
+                     return numerical_argmin_argmax_matrix(oin, axis, type);
+                 case NUMERICAL_SUM:
+                 case NUMERICAL_MEAN:
+                 case NUMERICAL_STD:
+                     return numerical_sum_mean_std_matrix(oin, axis, type);            
+                 default:
+                     mp_raise_NotImplementedError("operation is not implemented on ndarrays");
+             }
+         } else {
+             mp_raise_TypeError("input must be tuple, list, range, or ndarray");
+         }
+         return mp_const_none;
+     }
+     
+     mp_obj_t numerical_min(size_t n_args, const mp_obj_t *pos_args, mp_map_t *kw_args) {
+         return numerical_function(n_args, pos_args, kw_args, NUMERICAL_MIN);
+     }
+     
+     mp_obj_t numerical_max(size_t n_args, const mp_obj_t *pos_args, mp_map_t *kw_args) {
+         return numerical_function(n_args, pos_args, kw_args, NUMERICAL_MAX);
+     }
+     
+     mp_obj_t numerical_argmin(size_t n_args, const mp_obj_t *pos_args, mp_map_t *kw_args) {
+         return numerical_function(n_args, pos_args, kw_args, NUMERICAL_ARGMIN);
+     }
+     
+     mp_obj_t numerical_argmax(size_t n_args, const mp_obj_t *pos_args, mp_map_t *kw_args) {
+         return numerical_function(n_args, pos_args, kw_args, NUMERICAL_ARGMAX);
+     }
+     
+     mp_obj_t numerical_sum(size_t n_args, const mp_obj_t *pos_args, mp_map_t *kw_args) {
+         return numerical_function(n_args, pos_args, kw_args, NUMERICAL_SUM);
+     }
+     
+     mp_obj_t numerical_mean(size_t n_args, const mp_obj_t *pos_args, mp_map_t *kw_args) {
+         return numerical_function(n_args, pos_args, kw_args, NUMERICAL_MEAN);
+     }
+     
+     mp_obj_t numerical_std(size_t n_args, const mp_obj_t *pos_args, mp_map_t *kw_args) {
+         return numerical_function(n_args, pos_args, kw_args, NUMERICAL_STD);
+     }
+     
+     mp_obj_t numerical_roll(size_t n_args, const mp_obj_t *pos_args, mp_map_t *kw_args) {
+         // TODO: replace memcpy by memmove
+         static const mp_arg_t allowed_args[] = {
+             { MP_QSTR_, MP_ARG_REQUIRED | MP_ARG_OBJ, {.u_rom_obj = MP_ROM_PTR(&mp_const_none_obj)} },
+             { MP_QSTR_, MP_ARG_REQUIRED | MP_ARG_OBJ, {.u_rom_obj = MP_ROM_PTR(&mp_const_none_obj) } },
+             { MP_QSTR_axis, MP_ARG_KW_ONLY | MP_ARG_INT, {.u_int = 0} },
+         };
+     
+         mp_arg_val_t args[MP_ARRAY_SIZE(allowed_args)];
+         mp_arg_parse_all(2, pos_args, kw_args, MP_ARRAY_SIZE(allowed_args), allowed_args, args);
+         
+         mp_obj_t oin = args[0].u_obj;
+         int16_t shift = mp_obj_get_int(args[1].u_obj);
+         int8_t axis = args[2].u_int;
+         if((axis != 0) && (axis != 1)) {
+             mp_raise_ValueError("axis must be None, 0, or 1");
+         }
+         ndarray_obj_t *in = MP_OBJ_TO_PTR(oin);
+         uint8_t _sizeof = mp_binary_get_size('@', in->array->typecode, NULL);
+         size_t len;
+         int16_t _shift;
+         uint8_t *data = (uint8_t *)in->array->items;
+         // TODO: transpose the matrix, if axis == 0
+         if(shift < 0) {
+             _shift = -shift;
+         } else {
+             _shift = shift;
+         }
+         if(axis == 0) {
+             len = in->m;
+             // temporary buffer
+             uint8_t *_data = m_new(uint8_t, _sizeof*len);
+             
+             _shift = _shift % len;
+             if(shift < 0) _shift = len - _shift;
+             _shift *= _sizeof;
+             uint8_t *tmp = m_new(uint8_t, _shift);
+     
+             for(size_t n=0; n < in->n; n++) {
+                 for(size_t m=0; m < len; m++) {
+                     // this loop should fill up the temporary buffer
+                     memcpy(&_data[m*_sizeof], &data[(m*in->n+n)*_sizeof], _sizeof);
+                 }
+                 // now, the actual shift
+                 memcpy(tmp, _data, _shift);
+                 memcpy(_data, &_data[_shift], len*_sizeof-_shift);
+                 memcpy(&_data[len*_sizeof-_shift], tmp, _shift);
+                 for(size_t m=0; m < len; m++) {
+                     // this loop should dump the content of the temporary buffer into data
+                     memcpy(&data[(m*in->n+n)*_sizeof], &_data[m*_sizeof], _sizeof);
+                 }            
+             }
+             m_del(uint8_t, tmp, _shift);
+             m_del(uint8_t, _data, _sizeof*len);
+             return mp_const_none;
+         }
+         len = in->n;
+         if((in->m == 1) || (in->n == 1)) {
+             len = in->array->len;
+         }
+         _shift = _shift % len;
+         if(shift < 0) _shift = len - _shift;
+         // TODO: if(shift > len/2), we should move in the opposite direction. That would save RAM
+         _shift *= _sizeof;
+         uint8_t *tmp = m_new(uint8_t, _shift);
+         for(size_t m=0; m < in->m; m++) {
+             memcpy(tmp, &data[m*len*_sizeof], _shift);
+             memcpy(&data[m*len*_sizeof], &data[m*len*_sizeof+_shift], len*_sizeof-_shift);
+             memcpy(&data[(m+1)*len*_sizeof-_shift], tmp, _shift);
+         }
+         m_del(uint8_t, tmp, _shift);
+         return mp_const_none;
+     }
+ 
+ ulab module
+ ===========
+ 
+ This module simply brings all components together, and does not contain
+ new function definitions.
+ 
+ ulab.c
+ ------
+ 
+ https://github.com/v923z/micropython-ulab/tree/master/code/ulab.c
+ 
+ .. code:: cpp
+         
+     
+     #include <math.h>
+     #include <stdio.h>
+     #include <stdlib.h>
+     #include <string.h>
+     #include "py/runtime.h"
+     #include "py/binary.h"
+     #include "py/obj.h"
+     #include "py/objarray.h" // this can in the future be dropped
+     
+     #include "ndarray.h"
+     #include "linalg.h"
+     #include "vectorise.h"
+     #include "poly.h"
+     #include "fft.h"
+     #include "numerical.h"
+     
+     #define ULAB_VERSION 0.15
+     
+     typedef struct _mp_obj_float_t {
+         mp_obj_base_t base;
+         mp_float_t value;
+     } mp_obj_float_t;
+     
+     mp_obj_float_t ulab_version = {{&mp_type_float}, ULAB_VERSION};
+     
+     MP_DEFINE_CONST_FUN_OBJ_1(ndarray_shape_obj, ndarray_shape);
+     MP_DEFINE_CONST_FUN_OBJ_2(ndarray_size_obj, ndarray_size);
+     MP_DEFINE_CONST_FUN_OBJ_1(ndarray_rawsize_obj, ndarray_rawsize);
+     MP_DEFINE_CONST_FUN_OBJ_KW(ndarray_flatten_obj, 1, ndarray_flatten);
+     
+     MP_DEFINE_CONST_FUN_OBJ_1(linalg_transpose_obj, linalg_transpose);
+     MP_DEFINE_CONST_FUN_OBJ_2(linalg_reshape_obj, linalg_reshape);
+     MP_DEFINE_CONST_FUN_OBJ_1(linalg_inv_obj, linalg_inv);
+     MP_DEFINE_CONST_FUN_OBJ_2(linalg_dot_obj, linalg_dot);
+     MP_DEFINE_CONST_FUN_OBJ_KW(linalg_zeros_obj, 0, linalg_zeros);
+     MP_DEFINE_CONST_FUN_OBJ_KW(linalg_ones_obj, 0, linalg_ones);
+     MP_DEFINE_CONST_FUN_OBJ_KW(linalg_eye_obj, 0, linalg_eye);
+     
+     MP_DEFINE_CONST_FUN_OBJ_1(vectorise_acos_obj, vectorise_acos);
+     MP_DEFINE_CONST_FUN_OBJ_1(vectorise_acosh_obj, vectorise_acosh);
+     MP_DEFINE_CONST_FUN_OBJ_1(vectorise_asin_obj, vectorise_asin);
+     MP_DEFINE_CONST_FUN_OBJ_1(vectorise_asinh_obj, vectorise_asinh);
+     MP_DEFINE_CONST_FUN_OBJ_1(vectorise_atan_obj, vectorise_atan);
+     MP_DEFINE_CONST_FUN_OBJ_1(vectorise_atanh_obj, vectorise_atanh);
+     MP_DEFINE_CONST_FUN_OBJ_1(vectorise_ceil_obj, vectorise_ceil);
+     MP_DEFINE_CONST_FUN_OBJ_1(vectorise_cos_obj, vectorise_cos);
+     MP_DEFINE_CONST_FUN_OBJ_1(vectorise_erf_obj, vectorise_erf);
+     MP_DEFINE_CONST_FUN_OBJ_1(vectorise_erfc_obj, vectorise_erfc);
+     MP_DEFINE_CONST_FUN_OBJ_1(vectorise_exp_obj, vectorise_exp);
+     MP_DEFINE_CONST_FUN_OBJ_1(vectorise_expm1_obj, vectorise_expm1);
+     MP_DEFINE_CONST_FUN_OBJ_1(vectorise_floor_obj, vectorise_floor);
+     MP_DEFINE_CONST_FUN_OBJ_1(vectorise_gamma_obj, vectorise_gamma);
+     MP_DEFINE_CONST_FUN_OBJ_1(vectorise_lgamma_obj, vectorise_lgamma);
+     MP_DEFINE_CONST_FUN_OBJ_1(vectorise_log_obj, vectorise_log);
+     MP_DEFINE_CONST_FUN_OBJ_1(vectorise_log10_obj, vectorise_log10);
+     MP_DEFINE_CONST_FUN_OBJ_1(vectorise_log2_obj, vectorise_log2);
+     MP_DEFINE_CONST_FUN_OBJ_1(vectorise_sin_obj, vectorise_sin);
+     MP_DEFINE_CONST_FUN_OBJ_1(vectorise_sinh_obj, vectorise_sinh);
+     MP_DEFINE_CONST_FUN_OBJ_1(vectorise_sqrt_obj, vectorise_sqrt);
+     MP_DEFINE_CONST_FUN_OBJ_1(vectorise_tan_obj, vectorise_tan);
+     MP_DEFINE_CONST_FUN_OBJ_1(vectorise_tanh_obj, vectorise_tanh);
+     
+     STATIC MP_DEFINE_CONST_FUN_OBJ_KW(numerical_linspace_obj, 2, numerical_linspace);
+     STATIC MP_DEFINE_CONST_FUN_OBJ_KW(numerical_sum_obj, 1, numerical_sum);
+     STATIC MP_DEFINE_CONST_FUN_OBJ_KW(numerical_mean_obj, 1, numerical_mean);
+     STATIC MP_DEFINE_CONST_FUN_OBJ_KW(numerical_std_obj, 1, numerical_std);
+     STATIC MP_DEFINE_CONST_FUN_OBJ_KW(numerical_min_obj, 1, numerical_min);
+     STATIC MP_DEFINE_CONST_FUN_OBJ_KW(numerical_max_obj, 1, numerical_max);
+     STATIC MP_DEFINE_CONST_FUN_OBJ_KW(numerical_argmin_obj, 1, numerical_argmin);
+     STATIC MP_DEFINE_CONST_FUN_OBJ_KW(numerical_argmax_obj, 1, numerical_argmax);
+     STATIC MP_DEFINE_CONST_FUN_OBJ_KW(numerical_roll_obj, 2, numerical_roll);
+     
+     STATIC MP_DEFINE_CONST_FUN_OBJ_2(poly_polyval_obj, poly_polyval);
+     STATIC MP_DEFINE_CONST_FUN_OBJ_VAR_BETWEEN(poly_polyfit_obj, 2, 3, poly_polyfit);
+     
+     STATIC MP_DEFINE_CONST_FUN_OBJ_VAR_BETWEEN(fft_fft_obj, 1, 2, fft_fft);
+     STATIC MP_DEFINE_CONST_FUN_OBJ_1(fft_spectrum_obj, fft_spectrum);
+     
+     STATIC const mp_rom_map_elem_t ulab_ndarray_locals_dict_table[] = {
+         { MP_ROM_QSTR(MP_QSTR_shape), MP_ROM_PTR(&ndarray_shape_obj) },
+         { MP_ROM_QSTR(MP_QSTR_size), MP_ROM_PTR(&ndarray_size_obj) },
+         { MP_ROM_QSTR(MP_QSTR_rawsize), MP_ROM_PTR(&ndarray_rawsize_obj) },
+         { MP_ROM_QSTR(MP_QSTR_flatten), MP_ROM_PTR(&ndarray_flatten_obj) },    
+         { MP_ROM_QSTR(MP_QSTR_transpose), MP_ROM_PTR(&linalg_transpose_obj) },
+         { MP_ROM_QSTR(MP_QSTR_reshape), MP_ROM_PTR(&linalg_reshape_obj) },
+     };
+     
+     STATIC MP_DEFINE_CONST_DICT(ulab_ndarray_locals_dict, ulab_ndarray_locals_dict_table);
+     
+     const mp_obj_type_t ulab_ndarray_type = {
+         { &mp_type_type },
+         .name = MP_QSTR_ndarray,
+         .print = ndarray_print,
+         .make_new = ndarray_make_new,
+         .subscr = ndarray_subscr,
+         .getiter = ndarray_getiter,
+         .unary_op = ndarray_unary_op,
+         .binary_op = ndarray_binary_op,
+         .locals_dict = (mp_obj_dict_t*)&ulab_ndarray_locals_dict,
+     };
+     
+     STATIC const mp_map_elem_t ulab_globals_table[] = {
+         { MP_OBJ_NEW_QSTR(MP_QSTR___name__), MP_OBJ_NEW_QSTR(MP_QSTR_ulab) },
+         { MP_ROM_QSTR(MP_QSTR___version__), MP_ROM_PTR(&ulab_version) },
+         { MP_OBJ_NEW_QSTR(MP_QSTR_ndarray), (mp_obj_t)&ulab_ndarray_type },
+         { MP_OBJ_NEW_QSTR(MP_QSTR_inv), (mp_obj_t)&linalg_inv_obj },
+         { MP_ROM_QSTR(MP_QSTR_dot), (mp_obj_t)&linalg_dot_obj },
+         { MP_ROM_QSTR(MP_QSTR_zeros), (mp_obj_t)&linalg_zeros_obj },
+         { MP_ROM_QSTR(MP_QSTR_ones), (mp_obj_t)&linalg_ones_obj },
+         { MP_ROM_QSTR(MP_QSTR_eye), (mp_obj_t)&linalg_eye_obj },    
+         { MP_OBJ_NEW_QSTR(MP_QSTR_acos), (mp_obj_t)&vectorise_acos_obj },
+         { MP_OBJ_NEW_QSTR(MP_QSTR_acosh), (mp_obj_t)&vectorise_acosh_obj },
+         { MP_OBJ_NEW_QSTR(MP_QSTR_asin), (mp_obj_t)&vectorise_asin_obj },
+         { MP_OBJ_NEW_QSTR(MP_QSTR_asinh), (mp_obj_t)&vectorise_asinh_obj },
+         { MP_OBJ_NEW_QSTR(MP_QSTR_atan), (mp_obj_t)&vectorise_atan_obj },
+         { MP_OBJ_NEW_QSTR(MP_QSTR_atanh), (mp_obj_t)&vectorise_atanh_obj },
+         { MP_OBJ_NEW_QSTR(MP_QSTR_ceil), (mp_obj_t)&vectorise_ceil_obj },
+         { MP_OBJ_NEW_QSTR(MP_QSTR_cos), (mp_obj_t)&vectorise_cos_obj },
+         { MP_OBJ_NEW_QSTR(MP_QSTR_erf), (mp_obj_t)&vectorise_erf_obj },
+         { MP_OBJ_NEW_QSTR(MP_QSTR_erfc), (mp_obj_t)&vectorise_erfc_obj },
+         { MP_OBJ_NEW_QSTR(MP_QSTR_exp), (mp_obj_t)&vectorise_exp_obj },
+         { MP_OBJ_NEW_QSTR(MP_QSTR_expm1), (mp_obj_t)&vectorise_expm1_obj },
+         { MP_OBJ_NEW_QSTR(MP_QSTR_floor), (mp_obj_t)&vectorise_floor_obj },
+         { MP_OBJ_NEW_QSTR(MP_QSTR_gamma), (mp_obj_t)&vectorise_gamma_obj },
+         { MP_OBJ_NEW_QSTR(MP_QSTR_lgamma), (mp_obj_t)&vectorise_lgamma_obj },
+         { MP_OBJ_NEW_QSTR(MP_QSTR_log), (mp_obj_t)&vectorise_log_obj },
+         { MP_OBJ_NEW_QSTR(MP_QSTR_log10), (mp_obj_t)&vectorise_log10_obj },
+         { MP_OBJ_NEW_QSTR(MP_QSTR_log2), (mp_obj_t)&vectorise_log2_obj },
+         { MP_OBJ_NEW_QSTR(MP_QSTR_sin), (mp_obj_t)&vectorise_sin_obj },
+         { MP_OBJ_NEW_QSTR(MP_QSTR_sinh), (mp_obj_t)&vectorise_sinh_obj },
+         { MP_OBJ_NEW_QSTR(MP_QSTR_sqrt), (mp_obj_t)&vectorise_sqrt_obj },
+         { MP_OBJ_NEW_QSTR(MP_QSTR_tan), (mp_obj_t)&vectorise_tan_obj },
+         { MP_OBJ_NEW_QSTR(MP_QSTR_tanh), (mp_obj_t)&vectorise_tanh_obj },
+         { MP_OBJ_NEW_QSTR(MP_QSTR_linspace), (mp_obj_t)&numerical_linspace_obj },
+         { MP_OBJ_NEW_QSTR(MP_QSTR_sum), (mp_obj_t)&numerical_sum_obj },
+         { MP_OBJ_NEW_QSTR(MP_QSTR_mean), (mp_obj_t)&numerical_mean_obj },
+         { MP_OBJ_NEW_QSTR(MP_QSTR_std), (mp_obj_t)&numerical_std_obj },
+         { MP_OBJ_NEW_QSTR(MP_QSTR_min), (mp_obj_t)&numerical_min_obj },
+         { MP_OBJ_NEW_QSTR(MP_QSTR_max), (mp_obj_t)&numerical_max_obj },
+         { MP_OBJ_NEW_QSTR(MP_QSTR_argmin), (mp_obj_t)&numerical_argmin_obj },
+         { MP_OBJ_NEW_QSTR(MP_QSTR_argmax), (mp_obj_t)&numerical_argmax_obj },
+         { MP_OBJ_NEW_QSTR(MP_QSTR_roll), (mp_obj_t)&numerical_roll_obj },  
+         { MP_OBJ_NEW_QSTR(MP_QSTR_polyval), (mp_obj_t)&poly_polyval_obj },
+         { MP_OBJ_NEW_QSTR(MP_QSTR_polyfit), (mp_obj_t)&poly_polyfit_obj },
+         { MP_OBJ_NEW_QSTR(MP_QSTR_fft), (mp_obj_t)&fft_fft_obj },
+         { MP_OBJ_NEW_QSTR(MP_QSTR_spectrum), (mp_obj_t)&fft_spectrum_obj },
+         // class constants
+         { MP_ROM_QSTR(MP_QSTR_uint8), MP_ROM_INT(NDARRAY_UINT8) },
+         { MP_ROM_QSTR(MP_QSTR_int8), MP_ROM_INT(NDARRAY_INT8) },
+         { MP_ROM_QSTR(MP_QSTR_uint16), MP_ROM_INT(NDARRAY_UINT16) },
+         { MP_ROM_QSTR(MP_QSTR_int16), MP_ROM_INT(NDARRAY_INT16) },
+         { MP_ROM_QSTR(MP_QSTR_float), MP_ROM_INT(NDARRAY_FLOAT) },
+     };
+     
+     STATIC MP_DEFINE_CONST_DICT (
+         mp_module_ulab_globals,
+         ulab_globals_table
+     );
+     
+     const mp_obj_module_t ulab_user_cmodule = {
+         .base = { &mp_type_module },
+         .globals = (mp_obj_dict_t*)&mp_module_ulab_globals,
+     };
+     
+     MP_REGISTER_MODULE(MP_QSTR_ulab, ulab_user_cmodule, MODULE_ULAB_ENABLED);
+ 
+ makefile
+ --------
+ 
+ ipython3.. code ::
+         
+     %%writefile ../../../ulab/code/micropython.mk
+     
+     USERMODULES_DIR := $(USERMOD_DIR)
+     
+     # Add all C files to SRC_USERMOD.
+     SRC_USERMOD += $(USERMODULES_DIR)/ndarray.c
+     SRC_USERMOD += $(USERMODULES_DIR)/linalg.c
+     SRC_USERMOD += $(USERMODULES_DIR)/vectorise.c
+     SRC_USERMOD += $(USERMODULES_DIR)/poly.c
+     SRC_USERMOD += $(USERMODULES_DIR)/fft.c
+     SRC_USERMOD += $(USERMODULES_DIR)/numerical.c
+     SRC_USERMOD += $(USERMODULES_DIR)/ulab.c
+     
+     # We can add our module folder to include paths if needed
+     # This is not actually needed in this example.
+     CFLAGS_USERMOD += -I$(USERMODULES_DIR)
+ .. parsed-literal::
+ 
+     Overwriting ../../../ulab/code/micropython.mk
+ 
+ make
+ ----
+ 
+ unix port
+ ~~~~~~~~~
+ 
+ ipython3.. code ::
+         
+     %cd ../../../micropython/ports/unix/
+ .. parsed-literal::
+ 
+     /home/v923z/sandbox/micropython/v1.11/micropython/ports/unix
+ 
+ .. code:: bash
+ 
+     !make USER_C_MODULES=../../../ulab all
+ .. parsed-literal::
+ 
+     Use make V=1 or set BUILD_VERBOSE in your environment to increase build verbosity.
+     Including User C Module from ../../../ulab/code
+     GEN build/genhdr/moduledefs.h
+     GEN build/genhdr/qstr.i.last
+     GEN build/genhdr/qstr.split
+     GEN build/genhdr/qstrdefs.collected.h
+     QSTR not updated
+     CC ../../py/objmodule.c
+     CC ../../../ulab/code/ndarray.c
+     CC ../../../ulab/code/ulab.c
+     LINK micropython
+        text	   data	    bss	    dec	    hex	filename
+        2085	   6862	      0	   8947	   22f3	build/build/frozen_mpy.o
+           2	      0	      0	      2	      2	build/build/frozen.o
+      477228	  57856	   2104	 537188	  83264	micropython
+ 
+ stm32 port
+ ~~~~~~~~~~
+ 
+ ipython3.. code ::
+         
+     %cd ../../../micropython/ports/stm32/
+ .. parsed-literal::
+ 
+     /home/v923z/sandbox/micropython/v1.11/micropython/ports/stm32
+ 
+ .. code:: bash
+ 
+     !make BOARD=PYBV11 CROSS_COMPILE=../../../../compiler/bin/arm-none-eabi- USER_C_MODULES=../../../ulab all
+ Change log
+ ==========
+ 
+ ipython3.. code ::
+         
+     %%writefile ../../../ulab/docs/ulab-change-log.md
+     
+     Tue, 8 Oct 2019
+     
+     version 0.15
+     
+         added inv, neg, pos, and abs unary operators to ndarray.c
+         
+     Mon, 7 Oct 2019
+     
+     version 0.14
+     
+         made the internal binary_op function tighter, and added keyword arguments to linspace
+         
+     Sat, 4 Oct 2019
+     
+     version 0.13
+     
+         added the <, <=, >, >= binary operators to ndarray
+     
+     Fri, 4 Oct 2019
+     
+     version 0.12
+     
+         added .flatten to ndarray, ones, zeros, and eye to linalg
+     
+     Thu, 3 Oct 2019
+     
+     version 0.11
+         
+         binary operators are now based on macros
+ .. parsed-literal::
+ 
+     Overwriting ../../../ulab/docs/ulab-change-log.md
+ 
+ ipython3.. code ::
+         
+     
\ No newline at end of file
diff -crNb MicorpythonOriginal1.12/ulab/docs/templates/manual.tpl micropython1.12_withUlab/ulab/docs/templates/manual.tpl
*** MicorpythonOriginal1.12/ulab/docs/templates/manual.tpl	1970-01-01 02:00:00.000000000 +0200
--- micropython1.12_withUlab/ulab/docs/templates/manual.tpl	2020-06-18 18:25:25.710905000 +0200
***************
*** 0 ****
--- 1,113 ----
+ 
+ {%- extends 'display_priority.tpl' -%}
+ 
+ 
+ {% block in_prompt %}
+ {% endblock in_prompt %}
+ 
+ {% block output_prompt %}
+ {% endblock output_prompt %}
+ 
+ {% block input scoped%}
+ 
+ {%- if cell.source.split('\n')[0].startswith('%%micropython') -%}
+ .. code::
+         
+ {{ '\n'.join(['# code to be run in micropython'] + cell.source.strip().split('\n')[1:]) | indent}}
+ 
+ {%- else -%}
+ .. code::
+ 
+ {{ '\n'.join(['# code to be run in CPython\n'] + cell.source.strip().split('\n')) | indent}}
+ {%- endif -%}
+ {% endblock input %}
+ 
+ {% block error %}
+ ::
+ 
+ {{ super() }}
+ {% endblock error %}
+ 
+ {% block traceback_line %}
+ {{ line | indent | strip_ansi }}
+ {% endblock traceback_line %}
+ 
+ {% block execute_result %}
+ {% block data_priority scoped %}
+ {{ super() }}
+ {% endblock %}
+ {% endblock execute_result %}
+ 
+ {% block stream %}
+ .. parsed-literal::
+ 
+ {{ output.text | indent }}
+ {% endblock stream %}
+ 
+ {% block data_svg %}
+ .. image:: {{ output.metadata.filenames['image/svg+xml'] | urlencode }}
+ {% endblock data_svg %}
+ 
+ {% block data_png %}
+ .. image:: {{ output.metadata.filenames['image/png'] | urlencode }}
+ {%- set width=output | get_metadata('width', 'image/png') -%}
+ {%- if width is not none %}
+    :width: {{ width }}px
+ {%- endif %}
+ {%- set height=output | get_metadata('height', 'image/png') -%}
+ {%- if height is not none %}
+    :height: {{ height }}px
+ {%- endif %}
+ {% endblock data_png %}
+ 
+ {% block data_jpg %}
+ .. image:: {{ output.metadata.filenames['image/jpeg'] | urlencode }}
+ {%- set width=output | get_metadata('width', 'image/jpeg') -%}
+ {%- if width is not none %}
+    :width: {{ width }}px
+ {%- endif %}
+ {%- set height=output | get_metadata('height', 'image/jpeg') -%}
+ {%- if height is not none %}
+    :height: {{ height }}px
+ {%- endif %}
+ {% endblock data_jpg %}
+ 
+ {% block data_markdown %}
+ {{ output.data['text/markdown'] | convert_pandoc("markdown", "rst") }}
+ {% endblock data_markdown %}
+ 
+ {% block data_latex %}
+ .. math::
+ 
+ {{ output.data['text/latex'] | strip_dollars | indent }}
+ {% endblock data_latex %}
+ 
+ {% block data_text scoped %}
+ .. parsed-literal::
+ 
+ {{ output.data['text/plain'] | indent }}
+ {% endblock data_text %}
+ 
+ {% block data_html scoped %}
+ .. raw:: html
+ 
+ {{ output.data['text/html'] | indent }}
+ {% endblock data_html %}
+ 
+ {% block markdowncell scoped %}
+ {{ cell.source | convert_pandoc("markdown", "rst") }}
+ {% endblock markdowncell %}
+ 
+ {%- block rawcell scoped -%}
+ {%- if cell.metadata.get('raw_mimetype', '').lower() in resources.get('raw_mimetypes', ['']) %}
+ {{cell.source}}
+ {% endif -%}
+ {%- endblock rawcell -%}
+ 
+ {% block headingcell scoped %}
+ {{ ("#" * cell.level + cell.source) | replace('\n', ' ') | convert_pandoc("markdown", "rst") }}
+ {% endblock headingcell %}
+ 
+ {% block unknowncell scoped %}
+ unknown type  {{cell.type}}
+ {% endblock unknowncell %}
diff -crNb MicorpythonOriginal1.12/ulab/docs/templates/rst.tpl micropython1.12_withUlab/ulab/docs/templates/rst.tpl
*** MicorpythonOriginal1.12/ulab/docs/templates/rst.tpl	1970-01-01 02:00:00.000000000 +0200
--- micropython1.12_withUlab/ulab/docs/templates/rst.tpl	2020-06-18 18:25:25.710905000 +0200
***************
*** 0 ****
--- 1,144 ----
+ 
+ {%- extends 'display_priority.tpl' -%}
+ 
+ 
+ {% block in_prompt %}
+ {% endblock in_prompt %}
+ 
+ {% block output_prompt %}
+ {% endblock output_prompt %}
+ 
+ {% block input scoped%}
+ 
+ {%- if '%%ccode' in cell.source.strip().split('\n')[0] -%}
+ 
+ {{ 'https://github.com/v923z/micropython-ulab/tree/master/code/' + cell.source.strip().split('\n')[0].split()[-1] }}
+ 
+ .. code:: cpp
+         
+ {{ '\n'.join( cell.source.strip().split('\n')[1:] ) | indent }}
+ 
+ {%- elif '%%makefile' in cell.source.strip().split('\n')[0] -%}
+ 
+ {{ 'https://github.com/v923z/micropython-ulab/tree/master/code/' + cell.source.strip().split('\n')[0].split()[-1].split('/')[1] + '/micropython.mk' }}
+ 
+ .. code:: make
+         
+ {{ '\n'.join( cell.source.strip().split('\n')[1:] ) | indent }}
+ 
+ {%- elif cell.source.strip().split('\n')[0].startswith('!') -%}
+ 
+ .. code:: bash
+ 
+ {{ cell.source | indent }}
+ 
+ {%- else -%}
+ {%- if 'magics_language' in cell.metadata  -%}
+     {{ cell.metadata.magics_language}}
+ {%- elif 'pygments_lexer' in nb.metadata.get('language_info', {}) -%}
+     {{ nb.metadata.language_info.pygments_lexer }}
+ {%- elif 'name' in nb.metadata.get('language_info', {}) -%}
+     {{ nb.metadata.language_info.name }}
+ {%- endif -%}
+ 
+ .. code ::
+         
+ {{ cell.source | indent}}
+ {%- endif -%}
+ {% endblock input %}
+ 
+ {% block error %}
+ ::
+ 
+ {{ super() }}
+ {% endblock error %}
+ 
+ {% block traceback_line %}
+ {{ line | indent | strip_ansi }}
+ {% endblock traceback_line %}
+ 
+ {% block execute_result %}
+ {% block data_priority scoped %}
+ {{ super() }}
+ {% endblock %}
+ {% endblock execute_result %}
+ 
+ {% block stream %}
+ {%- if '%%ccode' in cell.source.strip().split('\n')[0] -%}
+ {%- else -%}
+ 
+ .. parsed-literal::
+ 
+ {{ output.text | indent }}
+ {%- endif -%}
+ {% endblock stream %}
+ 
+ {% block data_svg %}
+ .. image:: {{ output.metadata.filenames['image/svg+xml'] | urlencode }}
+ {% endblock data_svg %}
+ 
+ {% block data_png %}
+ .. image:: {{ output.metadata.filenames['image/png'] | urlencode }}
+ {%- set width=output | get_metadata('width', 'image/png') -%}
+ {%- if width is not none %}
+    :width: {{ width }}px
+ {%- endif %}
+ {%- set height=output | get_metadata('height', 'image/png') -%}
+ {%- if height is not none %}
+    :height: {{ height }}px
+ {%- endif %}
+ {% endblock data_png %}
+ 
+ {% block data_jpg %}
+ .. image:: {{ output.metadata.filenames['image/jpeg'] | urlencode }}
+ {%- set width=output | get_metadata('width', 'image/jpeg') -%}
+ {%- if width is not none %}
+    :width: {{ width }}px
+ {%- endif %}
+ {%- set height=output | get_metadata('height', 'image/jpeg') -%}
+ {%- if height is not none %}
+    :height: {{ height }}px
+ {%- endif %}
+ {% endblock data_jpg %}
+ 
+ {% block data_markdown %}
+ {{ output.data['text/markdown'] | convert_pandoc("markdown", "rst") }}
+ {% endblock data_markdown %}
+ 
+ {% block data_latex %}
+ .. math::
+ 
+ {{ output.data['text/latex'] | strip_dollars | indent }}
+ {% endblock data_latex %}
+ 
+ {% block data_text scoped %}
+ 
+ .. parsed-literal::
+ 
+ {{ output.data['text/plain'] | indent }}
+ {% endblock data_text %}
+ 
+ {% block data_html scoped %}
+ .. raw:: html
+ 
+ {{ output.data['text/html'] | indent }}
+ {% endblock data_html %}
+ 
+ {% block markdowncell scoped %}
+ {{ cell.source | convert_pandoc("markdown", "rst") }}
+ {% endblock markdowncell %}
+ 
+ {%- block rawcell scoped -%}
+ {%- if cell.metadata.get('raw_mimetype', '').lower() in resources.get('raw_mimetypes', ['']) %}
+ {{cell.source}}
+ {% endif -%}
+ {%- endblock rawcell -%}
+ 
+ {% block headingcell scoped %}
+ {{ ("#" * cell.level + cell.source) | replace('\n', ' ') | convert_pandoc("markdown", "rst") }}
+ 
+ {% endblock headingcell %}
+ 
+ {% block unknowncell scoped %}
+ unknown type  {{cell.type}}
+ {% endblock unknowncell %}
diff -crNb MicorpythonOriginal1.12/ulab/docs/ulab-change-log.md micropython1.12_withUlab/ulab/docs/ulab-change-log.md
*** MicorpythonOriginal1.12/ulab/docs/ulab-change-log.md	1970-01-01 02:00:00.000000000 +0200
--- micropython1.12_withUlab/ulab/docs/ulab-change-log.md	2020-06-18 18:25:25.714905000 +0200
***************
*** 0 ****
--- 1,373 ----
+ Fri, 12 Jun 2020
+ 
+ version 0.50.2
+ 
+     fixes compilation error in openmv
+ 
+ Mon, 1 Jun 2020
+ 
+ version 0.50.1
+ 
+     fixes error in numerical max/min
+     
+ Mon, 18 May 2020
+ 
+ version 0.50.0
+ 
+     move interp to the approx sub-module
+     
+ Wed, 06 May 2020
+ 
+ version 0.46.0
+ 
+     add curve_fit to the approx sub-module
+ 
+ version 0.44.0
+ 
+ 	add approx sub-module with newton, fmin, and bisect functions
+ 
+ Thu, 30 Apr 2020
+ 
+ version 0.44.0
+ 
+ 	add approx sub-module with newton, fmin, and bisect functions
+ 
+ =======
+ Tue, 19 May 2020
+ 
+ version 0.46.1
+ 
+     fixed bad error in binary_op
+ 
+ Wed, 6 May 2020
+ 
+ version 0.46
+ 
+     added vectorisation of python functions
+ 
+ Sat, 2 May 2020
+ 
+ version 0.45.0
+ 
+ 	add equal/not_equal to the compare module
+ 	
+ Tue, 21 Apr 2020
+ 
+ version 0.42.0
+ 
+ 	add minimum/maximum/clip functions
+ 
+ Mon, 20 Apr 2020
+ 
+ version 0.41.6
+ 
+ 	argument handling improvement in polyfit
+ 
+ Mon, 20 Apr 2020
+ 
+ version 0.41.5
+ 
+ 	fix compilation errors due to https://github.com/micropython/micropython/commit/30840ebc9925bb8ef025dbc2d5982b1bfeb75f1b
+ 
+ Sat, 18 Apr 2020
+ 
+ version 0.41.4
+ 
+ 	fix compilation error on hardware ports
+ 
+ Tue, 14 Apr 2020
+ 
+ version 0.41.3
+ 
+ 	fix indexing error in dot function
+ 
+ Thu, 9 Apr 2020
+ 
+ version 0.41.2
+ 
+ 	fix transpose function
+ 
+ Tue, 7 Apr 2020
+ 
+ version 0.41.2
+ 
+ 	fix discrepancy in argmin/argmax behaviour
+ 
+ Tue, 7 Apr 2020
+ 
+ version 0.41.1
+ 
+ 	fix error in argsort
+ 
+ Sat, 4 Apr 2020
+ 
+ version 0.41.0
+ 
+ 	implemented == and != binary operators
+ 
+ Fri, 3 Apr 2020
+ 
+ version 0.40.0
+ 
+ 	added trace to linalg
+ 
+ Thu, 2 Apr 2020
+ 
+ version 0.39.0
+ 
+ 	added the ** operator, and operand swapping in binary operators
+ 
+ Thu, 2 Apr 2020
+ 
+ version 0.38.1
+ 
+ 	added fast option, when initialising from ndarray_properties
+ 
+ Thu, 12 Mar 2020
+ 
+ version 0.38.0
+ 
+ 	added initialisation from ndarray, and the around function
+ 
+ Tue, 10 Mar 2020
+ 
+ version 0.37.0
+ 
+ 	added Cholesky decomposition to linalg.c
+ 	
+ Thu, 27 Feb 2020
+ 
+ version 0.36.0
+ 
+ 	moved zeros, ones, eye and linspace into separate module (they are still bound at the top level)
+ 	
+ Thu, 27 Feb 2020
+ 
+ version 0.35.0
+ 
+     Move zeros, ones back into top level ulab module
+ 
+ Tue, 18 Feb 2020
+ 
+ version 0.34.0
+ 
+     split ulab into multiple modules
+ 
+ Sun, 16 Feb 2020
+ 
+ version 0.33.2
+ 
+     moved properties into ndarray_properties.h, implemented pointer arithmetic in fft.c to save some time
+ 
+ Fri, 14 Feb 2020
+ 
+ version 0.33.1
+ 
+     added the __name__attribute to all sub-modules
+ 
+ Thu, 13 Feb 2020
+ 
+ version 0.33.0
+ 
+     sub-modules are now proper sub-modules of ulab
+ 
+ Mon, 17 Feb 2020
+ 
+ version 0.32.1
+ 
+     temporary fix for issue #40
+     
+ Tue, 11 Feb 2020
+ 
+ version 0.32.0
+ 
+     added itemsize, size and shape attributes to ndarrays, and removed rawsize
+ 
+ Mon, 10 Feb 2020
+ 
+ version 0.31.0
+ 
+     removed asbytearray, and added buffer protocol to ndarrays, fixed bad error in filter.c
+     
+ Sun, 09 Feb 2020
+ 
+ version 0.30.2
+ 
+     fixed slice_length in ndarray.c
+ 
+ Sat, 08 Feb 2020
+ 
+ version 0.30.1
+ 
+     fixed typecode error, added variable inspection, and replaced ternary operators in filter.c
+     
+ Fri, 07 Feb 2020
+ 
+ version 0.30.0
+ 
+     ulab functions can arbitrarily be excluded from the firmware via the ulab.h configuration file
+     
+ Thu, 06 Feb 2020
+ 
+ version 0.27.0
+ 
+     add convolve, the start of a 'filter' functionality group
+ 
+ Wed, 29 Jan 2020
+ 
+ version 0.26.7
+ 
+     fixed indexing error in linalg.dot
+ 
+ Mon, 20 Jan 2020
+ 
+ version 0.26.6
+ 
+     replaced MP_ROM_PTR(&mp_const_none_obj), so that module can be compiled for the nucleo board
+ 
+ Tue, 7 Jan 2020
+ 
+ version 0.26.5
+ 
+     fixed glitch in numerical.c, numerical.h
+ 
+ Mon, 6 Jan 2020
+ 
+ version 0.26.4
+ 
+     switched version constant to string
+ 
+ Tue, 31 Dec 2019
+ 
+ version 0.263
+ 
+     changed declaration of ulab_ndarray_type to extern
+ 
+ Fri, 29 Nov 2019
+ 
+ version 0.262
+ 
+     fixed error in macro in vectorise.h
+ 
+ Thu, 28 Nov 2019
+ 
+ version 0.261
+ 
+     fixed bad indexing error in linalg.dot
+ 
+ Tue, 6 Nov 2019
+ 
+ version 0.26
+ 
+     added in-place sorting (method of ndarray), and argsort
+     
+ Mon, 4 Nov 2019
+ 
+ version 0.25
+ 
+     added first implementation of sort, and fixed section on compiling the module in the manual
+ 
+ Thu, 31 Oct 2019
+ 
+ version 0.24
+ 
+     added diff to numerical.c
+     
+ Tue, 29 Oct 2019
+ 
+ version 0.23
+ 
+     major revamp of subscription method
+ 
+ Sat, 19 Oct 2019
+ 
+ version 0.21
+ 
+     fixed trivial bug in .rawsize()
+ 
+ Sat, 19 Oct 2019
+ 
+ version 0.22
+ 
+     fixed small error in linalg_det, and implemented linalg_eig.
+ 
+ 
+ Thu, 17 Oct 2019
+ 
+ version 0.21
+ 
+     implemented uniform interface for fft, and spectrum, and added ifft.
+ 
+ Wed, 16 Oct 2019
+ 
+ version 0.20
+ 
+     Added flip function to numerical.c, and moved the size function to linalg. In addition, 
+     size is a function now, and not a method.
+ 
+ Tue, 15 Oct 2019
+ 
+ version 0.19
+ 
+     fixed roll in numerical.c: it can now accept the axis=None keyword argument, added determinant to linalg.c
+ 
+ Mon, 14 Oct 2019
+ 
+ version 0.18
+ 
+     fixed min/man function in numerical.c; it conforms to numpy behaviour
+ 
+ Fri, 11 Oct 2019
+ 
+ version 0.171
+ 
+     found and fixed small bux in roll function
+ 
+ Fri, 11 Oct 2019
+ 
+ version 0.17
+ 
+     universal function can now take arbitrary typecodes
+ 
+ Fri, 11 Oct 2019
+ 
+ version 0.161
+ 
+     fixed bad error in iterator, and make_new_ndarray 
+     
+ Thu, 10 Oct 2019
+ 
+ varsion 0.16
+ 
+     changed ndarray to array in ulab.c, so as to conform to numpy's notation
+     extended subscr method to include slices (partially works)
+     
+ Tue, 8 Oct 2019
+ 
+ version 0.15
+ 
+     added inv, neg, pos, and abs unary operators to ndarray.c
+     
+ Mon, 7 Oct 2019
+ 
+ version 0.14
+ 
+     made the internal binary_op function tighter, and added keyword arguments to linspace
+     
+ Sat, 4 Oct 2019
+ 
+ version 0.13
+ 
+     added the <, <=, >, >= binary operators to ndarray
+ 
+ Fri, 4 Oct 2019
+ 
+ version 0.12
+ 
+     added .flatten to ndarray, ones, zeros, and eye to linalg
+ 
+ Thu, 3 Oct 2019
+ 
+ version 0.11
+     
+     binary operators are now based on macros
diff -crNb MicorpythonOriginal1.12/ulab/docs/ulab-manual.ipynb micropython1.12_withUlab/ulab/docs/ulab-manual.ipynb
*** MicorpythonOriginal1.12/ulab/docs/ulab-manual.ipynb	1970-01-01 02:00:00.000000000 +0200
--- micropython1.12_withUlab/ulab/docs/ulab-manual.ipynb	2020-06-18 18:25:25.714905000 +0200
***************
*** 0 ****
--- 1,6008 ----
+ {
+  "cells": [
+   {
+    "cell_type": "code",
+    "execution_count": 1,
+    "metadata": {
+     "ExecuteTime": {
+      "end_time": "2020-05-01T09:27:13.438054Z",
+      "start_time": "2020-05-01T09:27:13.191491Z"
+     }
+    },
+    "outputs": [
+     {
+      "name": "stdout",
+      "output_type": "stream",
+      "text": [
+       "Populating the interactive namespace from numpy and matplotlib\n"
+      ]
+     }
+    ],
+    "source": [
+     "%pylab inline"
+    ]
+   },
+   {
+    "cell_type": "code",
+    "execution_count": 2,
+    "metadata": {
+     "ExecuteTime": {
+      "end_time": "2020-05-06T21:53:56.928052Z",
+      "start_time": "2020-05-06T21:53:56.920487Z"
+     }
+    },
+    "outputs": [
+     {
+      "name": "stdout",
+      "output_type": "stream",
+      "text": [
+       "Overwriting manual/source/conf.py\n"
+      ]
+     }
+    ],
+    "source": [
+     "%%writefile manual/source/conf.py\n",
+     "# Configuration file for the Sphinx documentation builder.\n",
+     "#\n",
+     "# This file only contains a selection of the most common options. For a full\n",
+     "# list see the documentation:\n",
+     "# http://www.sphinx-doc.org/en/master/config\n",
+     "\n",
+     "# -- Path setup --------------------------------------------------------------\n",
+     "\n",
+     "# If extensions (or modules to document with autodoc) are in another directory,\n",
+     "# add these directories to sys.path here. If the directory is relative to the\n",
+     "# documentation root, use os.path.abspath to make it absolute, like shown here.\n",
+     "#\n",
+     "# import os\n",
+     "# import sys\n",
+     "# sys.path.insert(0, os.path.abspath('.'))\n",
+     "\n",
+     "\n",
+     "# -- Project information -----------------------------------------------------\n",
+     "\n",
+     "project = 'micropython-ulab'\n",
+     "copyright = '2019-2020, Zoltán Vörös'\n",
+     "author = 'Zoltán Vörös'\n",
+     "\n",
+     "# The full version, including alpha/beta/rc tags\n",
+     "release = '0.50.0'\n",
+     "\n",
+     "\n",
+     "# -- General configuration ---------------------------------------------------\n",
+     "\n",
+     "# Add any Sphinx extension module names here, as strings. They can be\n",
+     "# extensions coming with Sphinx (named 'sphinx.ext.*') or your custom\n",
+     "# ones.\n",
+     "extensions = [\n",
+     "]\n",
+     "\n",
+     "# Add any paths that contain templates here, relative to this directory.\n",
+     "templates_path = ['_templates']\n",
+     "\n",
+     "# List of patterns, relative to source directory, that match files and\n",
+     "# directories to ignore when looking for source files.\n",
+     "# This pattern also affects html_static_path and html_extra_path.\n",
+     "exclude_patterns = []\n",
+     "\n",
+     "\n",
+     "# -- Options for HTML output -------------------------------------------------\n",
+     "\n",
+     "# The theme to use for HTML and HTML Help pages.  See the documentation for\n",
+     "# a list of builtin themes.\n",
+     "#\n",
+     "html_theme = 'sphinx_rtd_theme'\n",
+     "\n",
+     "# Add any paths that contain custom static files (such as style sheets) here,\n",
+     "# relative to this directory. They are copied after the builtin static files,\n",
+     "# so a file named \"default.css\" will overwrite the builtin \"default.css\".\n",
+     "html_static_path = ['_static']\n",
+     "\n",
+     "master_doc = 'index'\n",
+     "\n",
+     "author=u'Zoltán Vörös'\n",
+     "copyright=author\n",
+     "language='en'\n",
+     "\n",
+     "latex_documents = [\n",
+     "(master_doc, 'ulab-manual.tex', 'Micropython ulab documentation', \n",
+     "'Zoltán Vörös', 'manual'),\n",
+     "]\n",
+     "   "
+    ]
+   },
+   {
+    "cell_type": "markdown",
+    "metadata": {},
+    "source": [
+     "# Notebook conversion"
+    ]
+   },
+   {
+    "cell_type": "code",
+    "execution_count": 10,
+    "metadata": {
+     "ExecuteTime": {
+      "end_time": "2020-05-19T19:12:05.480514Z",
+      "start_time": "2020-05-19T19:12:01.864538Z"
+     }
+    },
+    "outputs": [],
+    "source": [
+     "import nbformat as nb\n",
+     "import nbformat.v4.nbbase as nb4\n",
+     "from nbconvert import RSTExporter\n",
+     "\n",
+     "def convert_notebook(node, fn):\n",
+     "    (rst, resources) = rstexporter.from_notebook_node(notebook)\n",
+     "    with open(fn, 'w') as fout:\n",
+     "        fout.write(rst)\n",
+     "        \n",
+     "rstexporter = RSTExporter()\n",
+     "rstexporter.template_file = './templates/manual.tpl'\n",
+     "\n",
+     "source = nb.read('ulab-manual.ipynb', nb.NO_CONVERT)\n",
+     "append_cell = False\n",
+     "\n",
+     "notebook = nb4.new_notebook()\n",
+     "for j, cell in enumerate(source['cells']):\n",
+     "    if cell['cell_type'] == 'markdown':\n",
+     "        # skip everything before Introduction\n",
+     "        if cell['source'].split('\\n')[0].startswith('# Introduction'):\n",
+     "            append_cell = True\n",
+     "    if append_cell:\n",
+     "        notebook.cells.append(cell)\n",
+     "            \n",
+     "convert_notebook(notebook,'./manual/source/ulab.rst')"
+    ]
+   },
+   {
+    "cell_type": "code",
+    "execution_count": 516,
+    "metadata": {
+     "ExecuteTime": {
+      "end_time": "2019-10-19T19:46:35.995470Z",
+      "start_time": "2019-10-19T19:46:35.989079Z"
+     }
+    },
+    "outputs": [
+     {
+      "name": "stdout",
+      "output_type": "stream",
+      "text": [
+       "Overwriting ./templates/manual.tpl\n"
+      ]
+     }
+    ],
+    "source": [
+     "%%writefile ./templates/manual.tpl\n",
+     "\n",
+     "{%- extends 'display_priority.tpl' -%}\n",
+     "\n",
+     "\n",
+     "{% block in_prompt %}\n",
+     "{% endblock in_prompt %}\n",
+     "\n",
+     "{% block output_prompt %}\n",
+     "{% endblock output_prompt %}\n",
+     "\n",
+     "{% block input scoped%}\n",
+     "\n",
+     "{%- if cell.source.split('\\n')[0].startswith('%%micropython') -%}\n",
+     ".. code::\n",
+     "        \n",
+     "{{ '\\n'.join(['# code to be run in micropython'] + cell.source.strip().split('\\n')[1:]) | indent}}\n",
+     "\n",
+     "{%- else -%}\n",
+     ".. code::\n",
+     "\n",
+     "{{ '\\n'.join(['# code to be run in CPython\\n'] + cell.source.strip().split('\\n')) | indent}}\n",
+     "{%- endif -%}\n",
+     "{% endblock input %}\n",
+     "\n",
+     "{% block error %}\n",
+     "::\n",
+     "\n",
+     "{{ super() }}\n",
+     "{% endblock error %}\n",
+     "\n",
+     "{% block traceback_line %}\n",
+     "{{ line | indent | strip_ansi }}\n",
+     "{% endblock traceback_line %}\n",
+     "\n",
+     "{% block execute_result %}\n",
+     "{% block data_priority scoped %}\n",
+     "{{ super() }}\n",
+     "{% endblock %}\n",
+     "{% endblock execute_result %}\n",
+     "\n",
+     "{% block stream %}\n",
+     ".. parsed-literal::\n",
+     "\n",
+     "{{ output.text | indent }}\n",
+     "{% endblock stream %}\n",
+     "\n",
+     "{% block data_svg %}\n",
+     ".. image:: {{ output.metadata.filenames['image/svg+xml'] | urlencode }}\n",
+     "{% endblock data_svg %}\n",
+     "\n",
+     "{% block data_png %}\n",
+     ".. image:: {{ output.metadata.filenames['image/png'] | urlencode }}\n",
+     "{%- set width=output | get_metadata('width', 'image/png') -%}\n",
+     "{%- if width is not none %}\n",
+     "   :width: {{ width }}px\n",
+     "{%- endif %}\n",
+     "{%- set height=output | get_metadata('height', 'image/png') -%}\n",
+     "{%- if height is not none %}\n",
+     "   :height: {{ height }}px\n",
+     "{%- endif %}\n",
+     "{% endblock data_png %}\n",
+     "\n",
+     "{% block data_jpg %}\n",
+     ".. image:: {{ output.metadata.filenames['image/jpeg'] | urlencode }}\n",
+     "{%- set width=output | get_metadata('width', 'image/jpeg') -%}\n",
+     "{%- if width is not none %}\n",
+     "   :width: {{ width }}px\n",
+     "{%- endif %}\n",
+     "{%- set height=output | get_metadata('height', 'image/jpeg') -%}\n",
+     "{%- if height is not none %}\n",
+     "   :height: {{ height }}px\n",
+     "{%- endif %}\n",
+     "{% endblock data_jpg %}\n",
+     "\n",
+     "{% block data_markdown %}\n",
+     "{{ output.data['text/markdown'] | convert_pandoc(\"markdown\", \"rst\") }}\n",
+     "{% endblock data_markdown %}\n",
+     "\n",
+     "{% block data_latex %}\n",
+     ".. math::\n",
+     "\n",
+     "{{ output.data['text/latex'] | strip_dollars | indent }}\n",
+     "{% endblock data_latex %}\n",
+     "\n",
+     "{% block data_text scoped %}\n",
+     ".. parsed-literal::\n",
+     "\n",
+     "{{ output.data['text/plain'] | indent }}\n",
+     "{% endblock data_text %}\n",
+     "\n",
+     "{% block data_html scoped %}\n",
+     ".. raw:: html\n",
+     "\n",
+     "{{ output.data['text/html'] | indent }}\n",
+     "{% endblock data_html %}\n",
+     "\n",
+     "{% block markdowncell scoped %}\n",
+     "{{ cell.source | convert_pandoc(\"markdown\", \"rst\") }}\n",
+     "{% endblock markdowncell %}\n",
+     "\n",
+     "{%- block rawcell scoped -%}\n",
+     "{%- if cell.metadata.get('raw_mimetype', '').lower() in resources.get('raw_mimetypes', ['']) %}\n",
+     "{{cell.source}}\n",
+     "{% endif -%}\n",
+     "{%- endblock rawcell -%}\n",
+     "\n",
+     "{% block headingcell scoped %}\n",
+     "{{ (\"#\" * cell.level + cell.source) | replace('\\n', ' ') | convert_pandoc(\"markdown\", \"rst\") }}\n",
+     "{% endblock headingcell %}\n",
+     "\n",
+     "{% block unknowncell scoped %}\n",
+     "unknown type  {{cell.type}}\n",
+     "{% endblock unknowncell %}\n"
+    ]
+   },
+   {
+    "cell_type": "markdown",
+    "metadata": {},
+    "source": [
+     "## Notebook magic"
+    ]
+   },
+   {
+    "cell_type": "code",
+    "execution_count": 3,
+    "metadata": {
+     "ExecuteTime": {
+      "end_time": "2020-05-19T16:43:45.068268Z",
+      "start_time": "2020-05-19T16:43:45.061690Z"
+     }
+    },
+    "outputs": [],
+    "source": [
+     "from IPython.core.magic import Magics, magics_class, line_cell_magic\n",
+     "from IPython.core.magic import cell_magic, register_cell_magic, register_line_magic\n",
+     "from IPython.core.magic_arguments import argument, magic_arguments, parse_argstring\n",
+     "import subprocess\n",
+     "import os"
+    ]
+   },
+   {
+    "cell_type": "code",
+    "execution_count": 4,
+    "metadata": {
+     "ExecuteTime": {
+      "end_time": "2020-05-19T16:43:46.751892Z",
+      "start_time": "2020-05-19T16:43:46.718346Z"
+     }
+    },
+    "outputs": [],
+    "source": [
+     "@magics_class\n",
+     "class PyboardMagic(Magics):\n",
+     "    @cell_magic\n",
+     "    @magic_arguments()\n",
+     "    @argument('-skip')\n",
+     "    @argument('-unix')\n",
+     "    @argument('-pyboard')\n",
+     "    @argument('-file')\n",
+     "    @argument('-data')\n",
+     "    @argument('-time')\n",
+     "    @argument('-memory')\n",
+     "    def micropython(self, line='', cell=None):\n",
+     "        args = parse_argstring(self.micropython, line)\n",
+     "        if args.skip: # doesn't care about the cell's content\n",
+     "            print('skipped execution')\n",
+     "            return None # do not parse the rest\n",
+     "        if args.unix: # tests the code on the unix port. Note that this works on unix only\n",
+     "            with open('/dev/shm/micropython.py', 'w') as fout:\n",
+     "                fout.write(cell)\n",
+     "            proc = subprocess.Popen([\"../../micropython/ports/unix/micropython\", \"/dev/shm/micropython.py\"], \n",
+     "                                    stdout=subprocess.PIPE, stderr=subprocess.PIPE)\n",
+     "            print(proc.stdout.read().decode(\"utf-8\"))\n",
+     "            print(proc.stderr.read().decode(\"utf-8\"))\n",
+     "            return None\n",
+     "        if args.file: # can be used to copy the cell content onto the pyboard's flash\n",
+     "            spaces = \"    \"\n",
+     "            try:\n",
+     "                with open(args.file, 'w') as fout:\n",
+     "                    fout.write(cell.replace('\\t', spaces))\n",
+     "                    printf('written cell to {}'.format(args.file))\n",
+     "            except:\n",
+     "                print('Failed to write to disc!')\n",
+     "            return None # do not parse the rest\n",
+     "        if args.data: # can be used to load data from the pyboard directly into kernel space\n",
+     "            message = pyb.exec(cell)\n",
+     "            if len(message) == 0:\n",
+     "                print('pyboard >>>')\n",
+     "            else:\n",
+     "                print(message.decode('utf-8'))\n",
+     "                # register new variable in user namespace\n",
+     "                self.shell.user_ns[args.data] = string_to_matrix(message.decode(\"utf-8\"))\n",
+     "        \n",
+     "        if args.time: # measures the time of executions\n",
+     "            pyb.exec('import utime')\n",
+     "            message = pyb.exec('t = utime.ticks_us()\\n' + cell + '\\ndelta = utime.ticks_diff(utime.ticks_us(), t)' + \n",
+     "                               \"\\nprint('execution time: {:d} us'.format(delta))\")\n",
+     "            print(message.decode('utf-8'))\n",
+     "        \n",
+     "        if args.memory: # prints out memory information \n",
+     "            message = pyb.exec('from micropython import mem_info\\nprint(mem_info())\\n')\n",
+     "            print(\"memory before execution:\\n========================\\n\", message.decode('utf-8'))\n",
+     "            message = pyb.exec(cell)\n",
+     "            print(\">>> \", message.decode('utf-8'))\n",
+     "            message = pyb.exec('print(mem_info())')\n",
+     "            print(\"memory after execution:\\n========================\\n\", message.decode('utf-8'))\n",
+     "\n",
+     "        if args.pyboard:\n",
+     "            message = pyb.exec(cell)\n",
+     "            print(message.decode('utf-8'))\n",
+     "\n",
+     "ip = get_ipython()\n",
+     "ip.register_magics(PyboardMagic)"
+    ]
+   },
+   {
+    "cell_type": "markdown",
+    "metadata": {},
+    "source": [
+     "## pyboard"
+    ]
+   },
+   {
+    "cell_type": "code",
+    "execution_count": 57,
+    "metadata": {
+     "ExecuteTime": {
+      "end_time": "2020-05-07T07:35:35.126401Z",
+      "start_time": "2020-05-07T07:35:35.105824Z"
+     }
+    },
+    "outputs": [],
+    "source": [
+     "import pyboard\n",
+     "pyb = pyboard.Pyboard('/dev/ttyACM0')\n",
+     "pyb.enter_raw_repl()"
+    ]
+   },
+   {
+    "cell_type": "code",
+    "execution_count": 9,
+    "metadata": {
+     "ExecuteTime": {
+      "end_time": "2020-05-19T19:11:18.145548Z",
+      "start_time": "2020-05-19T19:11:18.137468Z"
+     }
+    },
+    "outputs": [],
+    "source": [
+     "pyb.exit_raw_repl()\n",
+     "pyb.close()"
+    ]
+   },
+   {
+    "cell_type": "code",
+    "execution_count": 58,
+    "metadata": {
+     "ExecuteTime": {
+      "end_time": "2020-05-07T07:35:38.725924Z",
+      "start_time": "2020-05-07T07:35:38.645488Z"
+     }
+    },
+    "outputs": [
+     {
+      "name": "stdout",
+      "output_type": "stream",
+      "text": [
+       "\n"
+      ]
+     }
+    ],
+    "source": [
+     "%%micropython -pyboard 1\n",
+     "\n",
+     "import utime\n",
+     "import ulab as np\n",
+     "\n",
+     "def timeit(n=1000):\n",
+     "    def wrapper(f, *args, **kwargs):\n",
+     "        func_name = str(f).split(' ')[1]\n",
+     "        def new_func(*args, **kwargs):\n",
+     "            run_times = np.zeros(n, dtype=np.uint16)\n",
+     "            for i in range(n):\n",
+     "                t = utime.ticks_us()\n",
+     "                result = f(*args, **kwargs)\n",
+     "                run_times[i] = utime.ticks_diff(utime.ticks_us(), t)\n",
+     "            print('{}() execution times based on {} cycles'.format(func_name, n, (delta2-delta1)/n))\n",
+     "            print('\\tbest: %d us'%np.min(run_times))\n",
+     "            print('\\tworst: %d us'%np.max(run_times))\n",
+     "            print('\\taverage: %d us'%np.mean(run_times))\n",
+     "            print('\\tdeviation: +/-%.3f us'%np.std(run_times))            \n",
+     "            return result\n",
+     "        return new_func\n",
+     "    return wrapper\n",
+     "\n",
+     "def timeit(f, *args, **kwargs):\n",
+     "    func_name = str(f).split(' ')[1]\n",
+     "    def new_func(*args, **kwargs):\n",
+     "        t = utime.ticks_us()\n",
+     "        result = f(*args, **kwargs)\n",
+     "        print('execution time: ', utime.ticks_diff(utime.ticks_us(), t), ' us')\n",
+     "        return result\n",
+     "    return new_func"
+    ]
+   },
+   {
+    "cell_type": "markdown",
+    "metadata": {},
+    "source": [
+     "# Introduction"
+    ]
+   },
+   {
+    "cell_type": "markdown",
+    "metadata": {},
+    "source": [
+     "In the [last chapter](https://micropython-usermod.readthedocs.io/en/latest/usermods_15.html) of the usermod documentation, I mentioned that I have another story, for another day. The day has come, so here is my story.\n",
+     "\n",
+     "## Enter ulab\n",
+     "\n",
+     "`ulab` is a `numpy`-like module for `micropython`, meant to simplify and speed up common mathematical operations on arrays. The primary goal was to implement a small subset of `numpy` that might be useful in the context of a microcontroller. This means low-level data processing of linear (array) and two-dimensional (matrix) data.\n",
+     "\n",
+     "## Purpose\n",
+     "\n",
+     "Of course, the first question that one has to answer is, why on Earth one would need a fast math library on a microcontroller. After all, it is not expected that heavy number crunching is going to take place on bare metal. It is not meant to. On a PC, the main reason for writing fast code is the sheer amount of data that one wants to process. On a microcontroller, the data volume is probably small, but it might lead to catastrophic system failure, if these data are not processed in time, because the microcontroller is supposed to interact with the outside world in a timely fashion. In fact, this latter objective was the initiator of this project: I needed the Fourier transform of a signal coming from the ADC of the pyboard, and all available options were simply too slow. \n",
+     "\n",
+     "In addition to speed, another issue that one has to keep in mind when working with embedded systems is the amount of available RAM: I believe, everything here could be implemented in pure python with relatively little effort, but the price we would have to pay for that is not only speed, but RAM, too. python code, if is not frozen, and compiled into the firmware, has to be compiled at runtime, which is not exactly a cheap process. On top of that, if numbers are stored in a list or tuple, which would be the high-level container, then they occupy 8 bytes, no matter, whether they are all smaller than 100, or larger than one hundred million. This is obviously a waste of resources in an environment, where resources are scarce. \n",
+     "\n",
+     "Finally, there is a reason for using `micropython` in the first place. Namely, that a microcontroller can be programmed in a very elegant, and *pythonic* way. But if it is so, why should we not extend this idea to other tasks and concepts that might come up in this context? If there was no other reason than this *elegance*, I would find that convincing enough.\n",
+     "\n",
+     "Based on the above-mentioned considerations, all functions in `ulab` are implemented in a way that \n",
+     "\n",
+     "1. conforms to `numpy` as much as possible\n",
+     "2. is so frugal with RAM as possible,\n",
+     "3. and yet, fast. Much faster than pure python. Think of a number between 30 and 50!\n",
+     "\n",
+     "The main points of `ulab` are \n",
+     "\n",
+     "- compact, iterable and slicable containers of numerical data in 1, and 2 dimensions (arrays and matrices). These containers support all the relevant unary and binary operators (e.g., `len`, ==, +, *, etc.)\n",
+     "- vectorised computations on micropython iterables and numerical arrays/matrices (in `numpy`-speak, universal functions)\n",
+     "- basic linear algebra routines (matrix inversion, multiplication, reshaping, transposition, determinant, and eigenvalues)\n",
+     "- polynomial fits to numerical data\n",
+     "- fast Fourier transforms\n",
+     "\n",
+     "At the time of writing this manual (for version 0.50.0), the library adds approximately 40 kB of extra compiled code to the micropython (pyboard.v.11) firmware. However, if you are tight with flash space, you can easily shave off a couple of kB. See the section on [customising ulab](#Custom_builds).\n",
+     "\n",
+     "## Resources and legal matters\n",
+     "\n",
+     "The source code of the module can be found under https://github.com/v923z/micropython-ulab/tree/master/code. The source of this user manual is under https://github.com/v923z/micropython-ulab/tree/master/docs, while the technical details of the implementation are discussed at great length in https://github.com/v923z/micropython-ulab/tree/master/docs/ulab.ipynb. If you want an even thorougher explanation on why the various constructs of the implementation work, and work in that particular way, you can read more on the subject under https://micropython-usermod.readthedocs.io/en/latest/, where I demonstrate, what you have to do, if you want to make a C object behave in a *pythonic* way. \n",
+     "\n",
+     "The MIT licence applies to all material. \n",
+     "\n",
+     "## Friendly request\n",
+     "\n",
+     "If you use `ulab`, and bump into a bug, or think that a particular function is missing, or its behaviour does not conform to `numpy`, please, raise a [ulab issue](#https://github.com/v923z/micropython-ulab/issues) on github, so that the community can profit from your experiences. \n",
+     "\n",
+     "Even better, if you find the project useful, and think that it could be made better, faster, tighter, and shinier, please, consider contributing, and issue a pull request with the implementation of your improvements and new features. `ulab` can only become successful, if it offers what the community needs.\n",
+     "\n",
+     "These last comments apply to the documentation, too. If, in your opinion, the documentation is obscure, misleading, or not detailed enough, please, let me know, so that *we* can fix it.\n",
+     "\n",
+     "## Differences between micropython-ulab and circuitpython-ulab\n",
+     "\n",
+     "`ulab` has originally been developed for `micropython`, but has since been integrated into a number of its flavours. Most of these flavours are simply forks of `micropython` itself, with some additional functionality. One of the notable exceptions is `circuitpython`, which has slightly diverged at the core level, and this has some minor consequences. Some of these concern the C implementation details only, which all have been sorted out with the generous and enthusiastic support of Jeff Epler from [Adafruit Industries](http://www.adafruit.com).\n",
+     "\n",
+     "There are, however, a couple of instances, where the usage in the two environments is slightly different at the python level. These are how the packages can be imported, and how the class properties can be accessed. In both cases, the `circuitpython` implementation results in `numpy`-conform code. `numpy`-compatibility in `micropython` will be implemented as soon as `micropython` itself has the required tools. Till then we have to live with a workaround, which I will point out at the relevant places."
+    ]
+   },
+   {
+    "cell_type": "markdown",
+    "metadata": {},
+    "source": [
+     "# Customising `ulab`\n",
+     "\n",
+     "`ulab` implements a great number of functions, which are organised in sub-modules. E.g., functions related to Fourier transforms are located in the `ulab.fft` sub-module, so you would import `fft` as\n",
+     "\n",
+     "```python\n",
+     "import ulab\n",
+     "from ulab import fft\n",
+     "```\n",
+     "by which point you can get the FFT of your data by calling `fft.fft(...)`. \n",
+     "\n",
+     "The idea of such grouping of functions and methods is to provide a means for granularity: It is quite possible that you do not need all functions in a particular application. If you want to save some flash space, you can easily exclude arbitrary sub-modules from the firmware. The [ulab.h](https://github.com/v923z/micropython-ulab/blob/master/code/ulab.h) header file contains a pre-processor flag for each sub-module. The default setting is 1 for each of them. Setting them to 0 removes the module from the compiled firmware. \n",
+     "\n",
+     "The first couple of lines of the file look like this\n",
+     "\n",
+     "```c\n",
+     "// vectorise (all functions) takes approx. 6 kB of flash space\n",
+     "#define ULAB_VECTORISE_MODULE (1)\n",
+     "\n",
+     "// linalg adds around 6 kB\n",
+     "#define ULAB_LINALG_MODULE (1)\n",
+     "\n",
+     "// poly requires approx. 2.5 kB\n",
+     "#define ULAB_POLY_MODULE (1)\n",
+     "```\n",
+     "\n",
+     "In order to simplify navigation in the header, each flag begins with `ULAB_`, and continues with the name of the sub-module. This name is also the `.c` file, where the sub-module is implemented. So, e.g., the linear algebra routines can be found in `linalg.c`, and the corresponding compiler flag is `ULAB_LINALG_MODULE`. Each section displays a hint as to how much space you can save by un-setting the flag.\n",
+     "\n",
+     "At first, having to import everything in this way might appear to be overly complicated, but there is a very good reason behind all this: you can find out at the time of importing, whether a function or sub-module is part of your `ulab` firmware, or not. The alternative, namely, that you do not have to import anything beyond `ulab`, could prove catastrophic: you would learn only at run time (at the moment of calling the function in your code) that a particular function is not in the firmware, and that is most probably too late.\n",
+     "\n",
+     "Except for `fft`, the standard sub-modules, `vector`, `linalg`, `numerical`, and `poly` are all `numpy`-compatible. User-defined functions that accept `ndarray`s as their argument should be implemented in the `extras` sub-module, or its sub-modules. Hints as to how to do that can be found in the section [Extending ulab](#Extending-ulab)."
+    ]
+   },
+   {
+    "cell_type": "markdown",
+    "metadata": {},
+    "source": [
+     "# Supported functions and methods\n",
+     "\n",
+     "`ulab` supports a number of array operators, which are listed here. I tried to follow the specifications of the `numpy` interface as closely as possible, though, it was not always practical to implement verbatim behaviour. The differences, if any, are in each case small (e.g., a function cannot take all possible keyword arguments), and should not hinder everyday use. In the list below, a single asterisk denotes slight deviations from `numpy`'s nomenclature, and a double asterisk denotes those cases, where a bit more caution should be exercised, though this usually means functions that are not supported by `numpy`.\n",
+     "\n",
+     "The detailed discussion of the various functions always contains a link to the corresponding `numpy` documentation. However, before going down the rabbit hole, the module also defines a constant, the version, which can always be queried as "
+    ]
+   },
+   {
+    "cell_type": "code",
+    "execution_count": 6,
+    "metadata": {},
+    "outputs": [
+     {
+      "name": "stdout",
+      "output_type": "stream",
+      "text": [
+       "you are running ulab version 0.40.0\n",
+       "\n",
+       "\n"
+      ]
+     }
+    ],
+    "source": [
+     "%%micropython -unix 1\n",
+     "\n",
+     "import ulab as np\n",
+     "\n",
+     "print('you are running ulab version', np.__version__)"
+    ]
+   },
+   {
+    "cell_type": "markdown",
+    "metadata": {},
+    "source": [
+     "If you find a bug, please, include this number in your report!"
+    ]
+   },
+   {
+    "cell_type": "markdown",
+    "metadata": {},
+    "source": [
+     "## Basic ndarray operations\n",
+     "\n",
+     "[Unary operators](#Unary-operators)\n",
+     "\n",
+     "[Binary operators](#Binary-operators)\n",
+     "\n",
+     "[Indexing and slicing](#Slicing-and-indexing)\n",
+     "\n",
+     "[ndarray iterators](#Iterating-over-arrays)\n",
+     "\n",
+     "[Comparison operators<sup>*</sup>](#Comparison-operators)\n",
+     "\n",
+     "[Universal functions](#Universal-functions) (also support function calls on general iterables, and vectorisation of user-defined `python` functions.)\n",
+     "\n",
+     "\n",
+     "## Methods of ndarrays\n",
+     "\n",
+     "[.shape<sup>*</sup>](#.shape)\n",
+     "\n",
+     "[size<sup>*</sup>](#size)\n",
+     "\n",
+     "[itemsize<sup>*</sup>](#itemsize)\n",
+     "\n",
+     "[.reshape](#.reshape)\n",
+     "\n",
+     "[.transpose](#.transpose)\n",
+     "\n",
+     "[.flatten<sup>**</sup>](#.flatten)\n",
+     "\n",
+     "## Matrix methods\n",
+     "\n",
+     "[inv](#inv)\n",
+     "\n",
+     "[dot](#dot)\n",
+     "\n",
+     "[det](#det)\n",
+     "\n",
+     "[roll](#roll)\n",
+     "\n",
+     "[flip](#flip)\n",
+     "\n",
+     "## Array initialisation functions\n",
+     "\n",
+     "[eye](#eye)\n",
+     "\n",
+     "[ones](#ones,-zeros)\n",
+     "\n",
+     "[zeros](#ones,-zeros)\n",
+     "\n",
+     "[linspace](#linspace)\n",
+     "\n",
+     "## Statistical and other properties of arrays\n",
+     "\n",
+     "[min](#min,-argmin,-max,-argmax)\n",
+     "\n",
+     "[argmin](#min,-argmin,-max,-argmax)\n",
+     "\n",
+     "[max](#min,-argmin,-max,-argmax)\n",
+     "\n",
+     "[argmax](#min,-argmin,-max,-argmax)\n",
+     "\n",
+     "[sum](#sum,-std,-mean)\n",
+     "\n",
+     "[std](#sum,-std,-mean)\n",
+     "\n",
+     "[mean](#sum,-std,-mean)\n",
+     "\n",
+     "[diff](#diff)\n",
+     "\n",
+     "[sort](#sort)\n",
+     "\n",
+     "[argsort](#argsort)\n",
+     "\n",
+     "## Linear algebra functions\n",
+     "\n",
+     "[size](#size)\n",
+     "\n",
+     "[inv](#inv)\n",
+     "\n",
+     "[dot](#dot)\n",
+     "\n",
+     "[det](#det)\n",
+     "\n",
+     "[eig](#eig)\n",
+     "\n",
+     "[cholesky](#cholesky)\n",
+     "\n",
+     "[trace](#trace)\n",
+     "\n",
+     "## Manipulation of polynomials\n",
+     "\n",
+     "[polyval](#polyval)\n",
+     "\n",
+     "[polyfit](#polyfit)\n",
+     "\n",
+     "## FFT routines\n",
+     "\n",
+     "[fft<sup>**</sup>](#fft)\n",
+     "\n",
+     "[ifft<sup>**</sup>](#ifft)\n",
+     "\n",
+     "[spectrogram<sup>**</sup>](#spectrogram)\n",
+     "\n",
+     "## Filter functions\n",
+     "\n",
+     "[convolve](#convolve)\n",
+     "\n",
+     "## Comparison of arrays\n",
+     "\n",
+     "[equal](#equal,-not_equal)\n",
+     "\n",
+     "[not_equal](#equal,-not_equal)\n",
+     "\n",
+     "[minimum](#minimum)\n",
+     "\n",
+     "[maximum](#maximum)\n",
+     "\n",
+     "[clip](#clip)\n",
+     "\n",
+     "## Interpolation, root finding, function minimasation\n",
+     "\n",
+     "[interp](#interp)\n",
+     "\n",
+     "[newton](#newton)\n",
+     "\n",
+     "[fmin](#fmin)\n",
+     "\n",
+     "[bisect](#bisect)"
+    ]
+   },
+   {
+    "cell_type": "markdown",
+    "metadata": {},
+    "source": [
+     "# ndarray, the basic container\n",
+     "\n",
+     "The `ndarray` is the underlying container of numerical data. It is derived from micropython's own `array` object, but has a great number of extra features starting with how it can be initialised, which operations can be done on it, and which functions can accept it as an argument. One important property of an `ndarray` is that it is also a proper `micropython` iterable.\n",
+     "\n",
+     "Since the `ndarray` is a binary container, it is also compact, meaning that it takes only a couple of bytes of extra RAM in addition to what is required for storing the numbers themselves. `ndarray`s are also type-aware, i.e., one can save RAM by specifying a data type, and using the smallest reasonable one. Five such types are defined, namely `uint8`, `int8`, which occupy a single byte of memory per datum, `uint16`, and `int16`, which occupy two bytes per datum, and `float`, which occupies four or eight bytes per datum. The precision/size of the `float` type depends on the definition of `mp_float_t`. Some platforms, e.g., the PYBD, implement `double`s, but some, e.g., the pyboard.v.11, don't. You can find out, what type of float your particular platform implements by looking at the output of the [.itemsize](#.itemsize) class property.\n",
+     "\n",
+     "On the following pages, we will see how one can work with `ndarray`s. Those familiar with `numpy` should find that the nomenclature and naming conventions of `numpy` are adhered to as closely as possible. I will point out the few differences, where necessary.\n",
+     "\n",
+     "For the sake of comparison, in addition to the `ulab` code snippets, sometimes the equivalent `numpy` code is also presented. You can find out, where the snippet is supposed to run by looking at its first line, the header.\n",
+     "\n",
+     "Hint:  you can easily port existing `numpy` code, if you `import ulab as np`."
+    ]
+   },
+   {
+    "cell_type": "markdown",
+    "metadata": {},
+    "source": [
+     "## Initialising an array\n",
+     "\n",
+     "A new array can be created by passing either a standard micropython iterable, or another `ndarray` into the constructor."
+    ]
+   },
+   {
+    "cell_type": "markdown",
+    "metadata": {},
+    "source": [
+     "### Initialising by passing iterables\n",
+     "\n",
+     "If the iterable is one-dimensional, i.e., one whose elements are numbers, then a row vector will be created and returned. If the iterable is two-dimensional, i.e., one whose elements are again iterables, a matrix will be created. If the lengths of the iterables are not consistent, a `ValueError` will be raised. Iterables of different types can be mixed in the initialisation function. \n",
+     "\n",
+     "If the `dtype` keyword with the possible `uint8/int8/uint16/int16/float` values is supplied, the new `ndarray` will have that type, otherwise, it assumes `float` as default. "
+    ]
+   },
+   {
+    "cell_type": "code",
+    "execution_count": 174,
+    "metadata": {
+     "ExecuteTime": {
+      "end_time": "2019-10-11T17:43:37.591149Z",
+      "start_time": "2019-10-11T17:43:37.571853Z"
+     }
+    },
+    "outputs": [
+     {
+      "name": "stdout",
+      "output_type": "stream",
+      "text": [
+       "a:\t [1, 2, 3, 4, 5, 6, 7, 8]\n",
+       "b:\t array([1.0, 2.0, 3.0, 4.0, 5.0, 6.0, 7.0, 8.0], dtype=float)\n",
+       "\n",
+       "c:\t array([[0, 1, 2, 3, 4],\n",
+       "\t [20, 21, 22, 23, 24],\n",
+       "\t [44, 55, 66, 77, 88]], dtype=uint8)\n",
+       "\n",
+       "Traceback (most recent call last):\n",
+       "  File \"/dev/shm/micropython.py\", line 15, in <module>\n",
+       "ValueError: iterables are not of the same length\n",
+       "\n"
+      ]
+     }
+    ],
+    "source": [
+     "%%micropython -unix 1\n",
+     "\n",
+     "import ulab as np\n",
+     "\n",
+     "a = [1, 2, 3, 4, 5, 6, 7, 8]\n",
+     "b = np.array(a)\n",
+     "\n",
+     "print(\"a:\\t\", a)\n",
+     "print(\"b:\\t\", b)\n",
+     "\n",
+     "# a two-dimensional array with mixed-type initialisers\n",
+     "c = np.array([range(5), range(20, 25, 1), [44, 55, 66, 77, 88]], dtype=np.uint8)\n",
+     "print(\"\\nc:\\t\", c)\n",
+     "\n",
+     "# and now we throw an exception\n",
+     "d = np.array([range(5), range(10), [44, 55, 66, 77, 88]], dtype=np.uint8)\n",
+     "print(\"\\nd:\\t\", d)"
+    ]
+   },
+   {
+    "cell_type": "markdown",
+    "metadata": {},
+    "source": [
+     "### Initialising by passing arrays\n",
+     "\n",
+     "An `ndarray` can be initialised by supplying another array. This statement is almost trivial, since `ndarray`s are iterables themselves, though it should be pointed out that initialising through arrays is faster, because simply a new copy is created, without inspection, iteration etc. It is also possible to coerce type conversion of the output (with type conversion, the iteration cannot be avoided, therefore, this case will always be slower than straight copying):"
+    ]
+   },
+   {
+    "cell_type": "code",
+    "execution_count": 7,
+    "metadata": {
+     "ExecuteTime": {
+      "end_time": "2020-03-12T16:09:55.984719Z",
+      "start_time": "2020-03-12T16:09:55.976857Z"
+     }
+    },
+    "outputs": [
+     {
+      "name": "stdout",
+      "output_type": "stream",
+      "text": [
+       "a:\t [1, 2, 3, 4, 5, 6, 7, 8]\n",
+       "\n",
+       "b:\t array([1.0, 2.0, 3.0, 4.0, 5.0, 6.0, 7.0, 8.0], dtype=float)\n",
+       "\n",
+       "c:\t array([1.0, 2.0, 3.0, 4.0, 5.0, 6.0, 7.0, 8.0], dtype=float)\n",
+       "\n",
+       "d:\t array([1, 2, 3, 4, 5, 6, 7, 8], dtype=uint8)\n",
+       "\n",
+       "\n"
+      ]
+     }
+    ],
+    "source": [
+     "%%micropython -unix 1\n",
+     "\n",
+     "import ulab as np\n",
+     "\n",
+     "a = [1, 2, 3, 4, 5, 6, 7, 8]\n",
+     "b = np.array(a)\n",
+     "c = np.array(b)\n",
+     "d = np.array(b, dtype=np.uint8)\n",
+     "\n",
+     "print(\"a:\\t\", a)\n",
+     "print(\"\\nb:\\t\", b)\n",
+     "print(\"\\nc:\\t\", c)\n",
+     "print(\"\\nd:\\t\", d)"
+    ]
+   },
+   {
+    "cell_type": "markdown",
+    "metadata": {},
+    "source": [
+     "Note that the default type of the `ndarray` is `float`. Hence, if the array is initialised from another array, type conversion will always take place, except, when the output type is specifically supplied. I.e., "
+    ]
+   },
+   {
+    "cell_type": "code",
+    "execution_count": 6,
+    "metadata": {
+     "ExecuteTime": {
+      "end_time": "2020-04-02T07:47:01.402544Z",
+      "start_time": "2020-04-02T07:47:01.384496Z"
+     }
+    },
+    "outputs": [
+     {
+      "name": "stdout",
+      "output_type": "stream",
+      "text": [
+       "a:\t array([0, 1, 2, 3, 4], dtype=uint8)\n",
+       "\n",
+       "b:\t array([0.0, 1.0, 2.0, 3.0, 4.0], dtype=float)\n",
+       "\n",
+       "\n"
+      ]
+     }
+    ],
+    "source": [
+     "%%micropython -unix 1\n",
+     "\n",
+     "import ulab as np\n",
+     "\n",
+     "a = np.array(range(5), dtype=np.uint8)\n",
+     "b = np.array(a)\n",
+     "print(\"a:\\t\", a)\n",
+     "print(\"\\nb:\\t\", b)"
+    ]
+   },
+   {
+    "cell_type": "markdown",
+    "metadata": {},
+    "source": [
+     "will iterate over the elements in `a`, since in the assignment `b = np.array(a)` no output type was given, therefore, `float` was assumed. On the other hand, "
+    ]
+   },
+   {
+    "cell_type": "code",
+    "execution_count": 7,
+    "metadata": {
+     "ExecuteTime": {
+      "end_time": "2020-04-02T07:48:13.707533Z",
+      "start_time": "2020-04-02T07:48:13.697810Z"
+     }
+    },
+    "outputs": [
+     {
+      "name": "stdout",
+      "output_type": "stream",
+      "text": [
+       "a:\t array([0, 1, 2, 3, 4], dtype=uint8)\n",
+       "\n",
+       "b:\t array([0, 1, 2, 3, 4], dtype=uint8)\n",
+       "\n",
+       "\n"
+      ]
+     }
+    ],
+    "source": [
+     "%%micropython -unix 1\n",
+     "\n",
+     "import ulab as np\n",
+     "\n",
+     "a = np.array(range(5), dtype=np.uint8)\n",
+     "b = np.array(a, dtype=np.uint8)\n",
+     "print(\"a:\\t\", a)\n",
+     "print(\"\\nb:\\t\", b)"
+    ]
+   },
+   {
+    "cell_type": "markdown",
+    "metadata": {},
+    "source": [
+     "will simply copy the content of `a` into `b` without any iteration, and will, therefore, be faster. Keep this in mind, whenever the output type, or performance is important."
+    ]
+   },
+   {
+    "cell_type": "markdown",
+    "metadata": {},
+    "source": [
+     "## Array initialisation functions\n",
+     "\n",
+     "There are four functions that can be used for initialising an array. These are bound to `ulab` itself at the top level, i.e., no module has to be imported for the function invocations."
+    ]
+   },
+   {
+    "cell_type": "markdown",
+    "metadata": {},
+    "source": [
+     "### ones, zeros\n",
+     "\n",
+     "`numpy`: https://docs.scipy.org/doc/numpy/reference/generated/numpy.zeros.html\n",
+     "\n",
+     "`numpy`: https://docs.scipy.org/doc/numpy/reference/generated/numpy.ones.html\n",
+     "\n",
+     "A couple of special arrays and matrices can easily be initialised by calling one of the `ones`, or `zeros` functions. `ones` and `zeros` follow the same pattern, and have the call signature\n",
+     "\n",
+     "```python\n",
+     "ones(shape, dtype=float)\n",
+     "zeros(shape, dtype=float)\n",
+     "```\n",
+     "where shape is either an integer, or a 2-tuple."
+    ]
+   },
+   {
+    "cell_type": "code",
+    "execution_count": 14,
+    "metadata": {
+     "ExecuteTime": {
+      "end_time": "2019-10-10T17:15:39.366695Z",
+      "start_time": "2019-10-10T17:15:39.344152Z"
+     }
+    },
+    "outputs": [
+     {
+      "name": "stdout",
+      "output_type": "stream",
+      "text": [
+       "array([1, 1, 1, 1, 1, 1], dtype=uint8)\n",
+       "array([[0.0, 0.0, 0.0, 0.0],\n",
+       "\t [0.0, 0.0, 0.0, 0.0],\n",
+       "\t [0.0, 0.0, 0.0, 0.0],\n",
+       "\t [0.0, 0.0, 0.0, 0.0],\n",
+       "\t [0.0, 0.0, 0.0, 0.0],\n",
+       "\t [0.0, 0.0, 0.0, 0.0]], dtype=float)\n",
+       "\n",
+       "\n"
+      ]
+     }
+    ],
+    "source": [
+     "%%micropython -unix 1\n",
+     "\n",
+     "import ulab as np\n",
+     "\n",
+     "print(np.ones(6, dtype=np.uint8))\n",
+     "print(np.zeros((6, 4)))"
+    ]
+   },
+   {
+    "cell_type": "markdown",
+    "metadata": {},
+    "source": [
+     "### eye\n",
+     "\n",
+     "`numpy`: https://docs.scipy.org/doc/numpy/reference/generated/numpy.eye.html\n",
+     "\n",
+     "Another special array method is the `eye` function, whose call signature is \n",
+     "\n",
+     "```python\n",
+     "eye(N, M, k=0, dtype=float)\n",
+     "```\n",
+     "where `N` (`M`) specify the dimensions of the matrix (if only `N` is supplied, then we get a square matrix, otherwise one with `M` rows, and `N` columns), and `k` is the shift of the ones (the main diagonal corresponds to `k=0`). Here are a couple of examples."
+    ]
+   },
+   {
+    "cell_type": "markdown",
+    "metadata": {},
+    "source": [
+     "#### With a single argument"
+    ]
+   },
+   {
+    "cell_type": "code",
+    "execution_count": 23,
+    "metadata": {
+     "ExecuteTime": {
+      "end_time": "2019-10-10T17:22:21.351732Z",
+      "start_time": "2019-10-10T17:22:21.336206Z"
+     }
+    },
+    "outputs": [
+     {
+      "name": "stdout",
+      "output_type": "stream",
+      "text": [
+       "array([[1.0, 0.0, 0.0, 0.0, 0.0],\n",
+       "\t [0.0, 1.0, 0.0, 0.0, 0.0],\n",
+       "\t [0.0, 0.0, 1.0, 0.0, 0.0],\n",
+       "\t [0.0, 0.0, 0.0, 1.0, 0.0],\n",
+       "\t [0.0, 0.0, 0.0, 0.0, 1.0]], dtype=float)\n",
+       "\n",
+       "\n"
+      ]
+     }
+    ],
+    "source": [
+     "%%micropython -unix 1\n",
+     "\n",
+     "import ulab as np\n",
+     "\n",
+     "print(np.eye(5))"
+    ]
+   },
+   {
+    "cell_type": "markdown",
+    "metadata": {},
+    "source": [
+     "#### Specifying the dimensions of the matrix"
+    ]
+   },
+   {
+    "cell_type": "code",
+    "execution_count": 22,
+    "metadata": {
+     "ExecuteTime": {
+      "end_time": "2019-10-10T17:19:31.618997Z",
+      "start_time": "2019-10-10T17:19:31.600377Z"
+     }
+    },
+    "outputs": [
+     {
+      "name": "stdout",
+      "output_type": "stream",
+      "text": [
+       "array([[0, 0, 0, 0],\n",
+       "\t [1, 0, 0, 0],\n",
+       "\t [0, 1, 0, 0],\n",
+       "\t [0, 0, 1, 0],\n",
+       "\t [0, 0, 0, 1],\n",
+       "\t [0, 0, 0, 0]], dtype=int16)\n",
+       "\n",
+       "\n"
+      ]
+     }
+    ],
+    "source": [
+     "### Shifting the diagonal\n",
+     "\n",
+     "%%micropython -unix 1\n",
+     "\n",
+     "import ulab as np\n",
+     "\n",
+     "print(np.eye(4, M=6, k=-1, dtype=np.int16))"
+    ]
+   },
+   {
+    "cell_type": "code",
+    "execution_count": 21,
+    "metadata": {
+     "ExecuteTime": {
+      "end_time": "2019-10-10T17:19:08.627749Z",
+      "start_time": "2019-10-10T17:19:08.612026Z"
+     }
+    },
+    "outputs": [
+     {
+      "name": "stdout",
+      "output_type": "stream",
+      "text": [
+       "array([[1, 0, 0, 0],\n",
+       "\t [0, 1, 0, 0],\n",
+       "\t [0, 0, 1, 0],\n",
+       "\t [0, 0, 0, 1],\n",
+       "\t [0, 0, 0, 0],\n",
+       "\t [0, 0, 0, 0]], dtype=int8)\n",
+       "\n",
+       "\n"
+      ]
+     }
+    ],
+    "source": [
+     "%%micropython -unix 1\n",
+     "\n",
+     "import ulab as np\n",
+     "\n",
+     "print(np.eye(4, M=6, dtype=np.int8))"
+    ]
+   },
+   {
+    "cell_type": "markdown",
+    "metadata": {},
+    "source": [
+     "### linspace\n",
+     "\n",
+     "`numpy`: https://docs.scipy.org/doc/numpy/reference/generated/numpy.linspace.html\n",
+     "\n",
+     "This function returns an array, whose elements are uniformly spaced between the `start`, and `stop` points. The number of intervals is determined by the `num` keyword argument, whose default value is 50. With the `endpoint` keyword argument (defaults to `True`) one can include `stop` in the sequence. In addition, the `dtype` keyword can be supplied to force type conversion of the output. The default is `float`. Note that, when `dtype` is of integer type, the sequence is not necessarily evenly spaced. This is not an error, rather a consequence of rounding. (This is also the `numpy` behaviour.)"
+    ]
+   },
+   {
+    "cell_type": "code",
+    "execution_count": 371,
+    "metadata": {
+     "ExecuteTime": {
+      "end_time": "2019-10-18T12:59:53.458138Z",
+      "start_time": "2019-10-18T12:59:53.438981Z"
+     }
+    },
+    "outputs": [
+     {
+      "name": "stdout",
+      "output_type": "stream",
+      "text": [
+       "default sequence:\t array([0.0, 0.2040816396474838, 0.4081632792949677, ..., 9.591833114624023, 9.795914649963379, 9.999996185302734], dtype=float)\n",
+       "num=5:\t\t\t array([0.0, 2.5, 5.0, 7.5, 10.0], dtype=float)\n",
+       "num=5:\t\t\t array([0.0, 2.0, 4.0, 6.0, 8.0], dtype=float)\n",
+       "num=5:\t\t\t array([0, 0, 1, 2, 2, 3, 4], dtype=uint8)\n",
+       "\n",
+       "\n"
+      ]
+     }
+    ],
+    "source": [
+     "%%micropython -unix 1\n",
+     "\n",
+     "import ulab as np\n",
+     "\n",
+     "# generate a sequence with defaults\n",
+     "print('default sequence:\\t', np.linspace(0, 10))\n",
+     "\n",
+     "# num=5\n",
+     "print('num=5:\\t\\t\\t', np.linspace(0, 10, num=5))\n",
+     "\n",
+     "# num=5, endpoint=False\n",
+     "print('num=5:\\t\\t\\t', np.linspace(0, 10, num=5, endpoint=False))\n",
+     "\n",
+     "# num=5, endpoint=False, dtype=uint8\n",
+     "print('num=5:\\t\\t\\t', np.linspace(0, 5, num=7, endpoint=False, dtype=np.uint8))"
+    ]
+   },
+   {
+    "cell_type": "markdown",
+    "metadata": {},
+    "source": [
+     "## Customising array printouts"
+    ]
+   },
+   {
+    "cell_type": "markdown",
+    "metadata": {},
+    "source": [
+     "`ndarray`s are pretty-printed, i.e., if the length is larger than 10 (default value), then only the first and last three entries will be printed. Also note that, as opposed to `numpy`, the printout always contains the `dtype`."
+    ]
+   },
+   {
+    "cell_type": "code",
+    "execution_count": 448,
+    "metadata": {
+     "ExecuteTime": {
+      "end_time": "2019-10-19T12:09:32.898039Z",
+      "start_time": "2019-10-19T12:09:32.877872Z"
+     }
+    },
+    "outputs": [
+     {
+      "name": "stdout",
+      "output_type": "stream",
+      "text": [
+       "a:\t array([0.0, 1.0, 2.0, ..., 197.0, 198.0, 199.0], dtype=float)\n",
+       "\n",
+       "\n"
+      ]
+     }
+    ],
+    "source": [
+     "%%micropython -unix 1\n",
+     "\n",
+     "import ulab as np\n",
+     "\n",
+     "a = np.array(range(200))\n",
+     "print(\"a:\\t\", a)"
+    ]
+   },
+   {
+    "cell_type": "markdown",
+    "metadata": {},
+    "source": [
+     "### set_printoptions\n",
+     "\n",
+     "The default values can be overwritten by means of the `set_printoptions` function [numpy.set_printoptions](https://numpy.org/doc/1.18/reference/generated/numpy.set_printoptions.html), which accepts two keywords arguments, the `threshold`, and the `edgeitems`. The first of these arguments determines the length of the longest array that will be printed in full, while the second is the number of items that will be printed on the left and right hand side of the ellipsis, if the array is longer than `threshold`."
+    ]
+   },
+   {
+    "cell_type": "code",
+    "execution_count": 12,
+    "metadata": {
+     "ExecuteTime": {
+      "end_time": "2020-05-01T09:51:30.390302Z",
+      "start_time": "2020-05-01T09:51:30.379010Z"
+     }
+    },
+    "outputs": [
+     {
+      "name": "stdout",
+      "output_type": "stream",
+      "text": [
+       "a printed with defaults:\t array([0.0, 1.0, 2.0, ..., 17.0, 18.0, 19.0], dtype=float)\n",
+       "\n",
+       "a printed in full:\t\t array([0.0, 1.0, 2.0, 3.0, 4.0, 5.0, 6.0, 7.0, 8.0, 9.0, 10.0, 11.0, 12.0, 13.0, 14.0, 15.0, 16.0, 17.0, 18.0, 19.0], dtype=float)\n",
+       "\n",
+       "a truncated with 2 edgeitems:\t array([0.0, 1.0, ..., 18.0, 19.0], dtype=float)\n",
+       "\n",
+       "\n"
+      ]
+     }
+    ],
+    "source": [
+     "%%micropython -unix 1\n",
+     "\n",
+     "import ulab as np\n",
+     "\n",
+     "a = np.array(range(20))\n",
+     "print(\"a printed with defaults:\\t\", a)\n",
+     "\n",
+     "np.set_printoptions(threshold=200)\n",
+     "print(\"\\na printed in full:\\t\\t\", a)\n",
+     "\n",
+     "np.set_printoptions(threshold=10, edgeitems=2)\n",
+     "print(\"\\na truncated with 2 edgeitems:\\t\", a)"
+    ]
+   },
+   {
+    "cell_type": "markdown",
+    "metadata": {},
+    "source": [
+     "### get_printoptions\n",
+     "\n",
+     "The set value of the `threshold` and `edgeitems` can be retrieved by calling the `get_printoptions` function with no arguments. The function returns a dictionary with two keys."
+    ]
+   },
+   {
+    "cell_type": "code",
+    "execution_count": 11,
+    "metadata": {
+     "ExecuteTime": {
+      "end_time": "2020-05-01T09:48:48.257434Z",
+      "start_time": "2020-05-01T09:48:48.242523Z"
+     }
+    },
+    "outputs": [
+     {
+      "name": "stdout",
+      "output_type": "stream",
+      "text": [
+       "{'threshold': 100, 'edgeitems': 20}\n",
+       "\n",
+       "\n"
+      ]
+     }
+    ],
+    "source": [
+     "%%micropython -unix 1\n",
+     "\n",
+     "import ulab as np\n",
+     "\n",
+     "np.set_printoptions(threshold=100, edgeitems=20)\n",
+     "print(np.get_printoptions())"
+    ]
+   },
+   {
+    "cell_type": "markdown",
+    "metadata": {},
+    "source": [
+     "## Methods of ndarrays"
+    ]
+   },
+   {
+    "cell_type": "markdown",
+    "metadata": {},
+    "source": [
+     "### .shape\n",
+     "\n",
+     "The `.shape` method (property) returns a 2-tuple with the number of rows, and columns. \n",
+     "\n",
+     "**WARNING:** In `circuitpython`, you can call the method as a property, i.e., "
+    ]
+   },
+   {
+    "cell_type": "code",
+    "execution_count": 12,
+    "metadata": {
+     "ExecuteTime": {
+      "end_time": "2020-02-11T19:01:40.377272Z",
+      "start_time": "2020-02-11T19:01:40.364448Z"
+     }
+    },
+    "outputs": [
+     {
+      "name": "stdout",
+      "output_type": "stream",
+      "text": [
+       "a:\n",
+       " array([1, 2, 3, 4], dtype=int8)\n",
+       "shape of a: (1, 4)\n",
+       "\n",
+       "b:\n",
+       " array([[1, 2],\n",
+       "\t [3, 4]], dtype=int8)\n",
+       "shape of b: (2, 2)\n",
+       "\n",
+       "\n"
+      ]
+     }
+    ],
+    "source": [
+     "%%micropython -unix 1\n",
+     "\n",
+     "import ulab as np\n",
+     "\n",
+     "a = np.array([1, 2, 3, 4], dtype=np.int8)\n",
+     "print(\"a:\\n\", a)\n",
+     "print(\"shape of a:\", a.shape)\n",
+     "\n",
+     "b= np.array([[1, 2], [3, 4]], dtype=np.int8)\n",
+     "print(\"\\nb:\\n\", b)\n",
+     "print(\"shape of b:\", b.shape)"
+    ]
+   },
+   {
+    "cell_type": "markdown",
+    "metadata": {},
+    "source": [
+     "**WARNING:** On the other hand, since properties are not implemented in `micropython`, there you would call the method as a function, i.e., "
+    ]
+   },
+   {
+    "cell_type": "code",
+    "execution_count": 12,
+    "metadata": {
+     "ExecuteTime": {
+      "end_time": "2020-02-11T19:01:40.377272Z",
+      "start_time": "2020-02-11T19:01:40.364448Z"
+     }
+    },
+    "outputs": [
+     {
+      "name": "stdout",
+      "output_type": "stream",
+      "text": [
+       "a:\n",
+       " array([1, 2, 3, 4], dtype=int8)\n",
+       "shape of a: (1, 4)\n",
+       "\n",
+       "b:\n",
+       " array([[1, 2],\n",
+       "\t [3, 4]], dtype=int8)\n",
+       "shape of b: (2, 2)\n",
+       "\n",
+       "\n"
+      ]
+     }
+    ],
+    "source": [
+     "%%micropython -unix 1\n",
+     "\n",
+     "import ulab as np\n",
+     "\n",
+     "a = np.array([1, 2, 3, 4], dtype=np.int8)\n",
+     "print(\"a:\\n\", a)\n",
+     "print(\"shape of a:\", a.shape)\n",
+     "\n",
+     "b= np.array([[1, 2], [3, 4]], dtype=np.int8)\n",
+     "print(\"\\nb:\\n\", b)\n",
+     "print(\"shape of b:\", b.shape())"
+    ]
+   },
+   {
+    "cell_type": "markdown",
+    "metadata": {},
+    "source": [
+     "### .size\n",
+     "\n",
+     "The `.size` method (property) returns an integer with the number of elements in the array. \n",
+     "\n",
+     "**WARNING:** In `circuitpython`, the `numpy` nomenclature applies, i.e., "
+    ]
+   },
+   {
+    "cell_type": "code",
+    "execution_count": 10,
+    "metadata": {
+     "ExecuteTime": {
+      "end_time": "2020-02-11T06:32:22.721112Z",
+      "start_time": "2020-02-11T06:32:22.713111Z"
+     }
+    },
+    "outputs": [
+     {
+      "name": "stdout",
+      "output_type": "stream",
+      "text": [
+       "a:\n",
+       " array([1, 2, 3], dtype=int8)\n",
+       "size of a: 3\n",
+       "\n",
+       "b:\n",
+       " array([[1, 2],\n",
+       "\t [3, 4]], dtype=int8)\n",
+       "size of b: 4\n",
+       "\n",
+       "\n"
+      ]
+     }
+    ],
+    "source": [
+     "%%micropython -unix 1\n",
+     "\n",
+     "import ulab as np\n",
+     "\n",
+     "a = np.array([1, 2, 3], dtype=np.int8)\n",
+     "print(\"a:\\n\", a)\n",
+     "print(\"size of a:\", a.size)\n",
+     "\n",
+     "b= np.array([[1, 2], [3, 4]], dtype=np.int8)\n",
+     "print(\"\\nb:\\n\", b)\n",
+     "print(\"size of b:\", b.size)"
+    ]
+   },
+   {
+    "cell_type": "markdown",
+    "metadata": {},
+    "source": [
+     "**WARNING:** In `micropython`, `size` is a method, i.e., "
+    ]
+   },
+   {
+    "cell_type": "code",
+    "execution_count": 10,
+    "metadata": {
+     "ExecuteTime": {
+      "end_time": "2020-02-11T06:32:22.721112Z",
+      "start_time": "2020-02-11T06:32:22.713111Z"
+     }
+    },
+    "outputs": [
+     {
+      "name": "stdout",
+      "output_type": "stream",
+      "text": [
+       "a:\n",
+       " array([1, 2, 3], dtype=int8)\n",
+       "size of a: 3\n",
+       "\n",
+       "b:\n",
+       " array([[1, 2],\n",
+       "\t [3, 4]], dtype=int8)\n",
+       "size of b: 4\n",
+       "\n",
+       "\n"
+      ]
+     }
+    ],
+    "source": [
+     "%%micropython -unix 1\n",
+     "\n",
+     "import ulab as np\n",
+     "\n",
+     "a = np.array([1, 2, 3], dtype=np.int8)\n",
+     "print(\"a:\\n\", a)\n",
+     "print(\"size of a:\", a.size)\n",
+     "\n",
+     "b= np.array([[1, 2], [3, 4]], dtype=np.int8)\n",
+     "print(\"\\nb:\\n\", b)\n",
+     "print(\"size of b:\", b.size())"
+    ]
+   },
+   {
+    "cell_type": "markdown",
+    "metadata": {},
+    "source": [
+     "### .itemsize\n",
+     "\n",
+     "The `.itemsize` method (property) returns an integer with the siz enumber of elements in the array.\n",
+     "\n",
+     "**WARNING:** In `circuitpython`:"
+    ]
+   },
+   {
+    "cell_type": "code",
+    "execution_count": 13,
+    "metadata": {
+     "ExecuteTime": {
+      "end_time": "2020-02-11T19:05:04.296601Z",
+      "start_time": "2020-02-11T19:05:04.280669Z"
+     }
+    },
+    "outputs": [
+     {
+      "name": "stdout",
+      "output_type": "stream",
+      "text": [
+       "a:\n",
+       " array([1, 2, 3], dtype=int8)\n",
+       "itemsize of a: 1\n",
+       "\n",
+       "b:\n",
+       " array([[1.0, 2.0],\n",
+       "\t [3.0, 4.0]], dtype=float)\n",
+       "itemsize of b: 8\n",
+       "\n",
+       "\n"
+      ]
+     }
+    ],
+    "source": [
+     "%%micropython -unix 1\n",
+     "\n",
+     "import ulab as np\n",
+     "\n",
+     "a = np.array([1, 2, 3], dtype=np.int8)\n",
+     "print(\"a:\\n\", a)\n",
+     "print(\"itemsize of a:\", a.itemsize)\n",
+     "\n",
+     "b= np.array([[1, 2], [3, 4]], dtype=np.float)\n",
+     "print(\"\\nb:\\n\", b)\n",
+     "print(\"itemsize of b:\", b.itemsize)"
+    ]
+   },
+   {
+    "cell_type": "markdown",
+    "metadata": {},
+    "source": [
+     "**WARNING:** In `micropython`:"
+    ]
+   },
+   {
+    "cell_type": "code",
+    "execution_count": 13,
+    "metadata": {
+     "ExecuteTime": {
+      "end_time": "2020-02-11T19:05:04.296601Z",
+      "start_time": "2020-02-11T19:05:04.280669Z"
+     }
+    },
+    "outputs": [
+     {
+      "name": "stdout",
+      "output_type": "stream",
+      "text": [
+       "a:\n",
+       " array([1, 2, 3], dtype=int8)\n",
+       "itemsize of a: 1\n",
+       "\n",
+       "b:\n",
+       " array([[1.0, 2.0],\n",
+       "\t [3.0, 4.0]], dtype=float)\n",
+       "itemsize of b: 8\n",
+       "\n",
+       "\n"
+      ]
+     }
+    ],
+    "source": [
+     "%%micropython -unix 1\n",
+     "\n",
+     "import ulab as np\n",
+     "\n",
+     "a = np.array([1, 2, 3], dtype=np.int8)\n",
+     "print(\"a:\\n\", a)\n",
+     "print(\"itemsize of a:\", a.itemsize)\n",
+     "\n",
+     "b= np.array([[1, 2], [3, 4]], dtype=np.float)\n",
+     "print(\"\\nb:\\n\", b)\n",
+     "print(\"itemsize of b:\", b.itemsize())"
+    ]
+   },
+   {
+    "cell_type": "markdown",
+    "metadata": {},
+    "source": [
+     "### .reshape\n",
+     "\n",
+     "`numpy`: https://docs.scipy.org/doc/numpy/reference/generated/numpy.reshape.html\n",
+     "\n",
+     "`reshape` re-writes the shape properties of an `ndarray`, but the array will not be modified in any other way. The function takes a single 2-tuple with two integers as its argument. The 2-tuple should specify the desired number of rows and columns. If the new shape is not consistent with the old, a `ValueError` exception will be raised."
+    ]
+   },
+   {
+    "cell_type": "code",
+    "execution_count": 379,
+    "metadata": {
+     "ExecuteTime": {
+      "end_time": "2019-10-18T13:17:12.656602Z",
+      "start_time": "2019-10-18T13:17:12.641007Z"
+     }
+    },
+    "outputs": [
+     {
+      "name": "stdout",
+      "output_type": "stream",
+      "text": [
+       "a (4 by 4): array([[1, 2, 3, 4],\n",
+       "\t [5, 6, 7, 8],\n",
+       "\t [9, 10, 11, 12],\n",
+       "\t [13, 14, 15, 16]], dtype=uint8)\n",
+       "a (2 by 8): array([[1, 2, 3, 4, 5, 6, 7, 8],\n",
+       "\t [9, 10, 11, 12, 13, 14, 15, 16]], dtype=uint8)\n",
+       "a (1 by 16): array([1, 2, 3, ..., 14, 15, 16], dtype=uint8)\n",
+       "\n",
+       "\n"
+      ]
+     }
+    ],
+    "source": [
+     "%%micropython -unix 1\n",
+     "\n",
+     "import ulab as np\n",
+     "\n",
+     "a = np.array([[1, 2, 3, 4], [5, 6, 7, 8], [9, 10, 11, 12], [13, 14, 15, 16]], dtype=np.uint8)\n",
+     "print('a (4 by 4):', a)\n",
+     "print('a (2 by 8):', a.reshape((2, 8)))\n",
+     "print('a (1 by 16):', a.reshape((1, 16)))"
+    ]
+   },
+   {
+    "cell_type": "markdown",
+    "metadata": {},
+    "source": [
+     "### .flatten\n",
+     "\n",
+     "`numpy`: https://docs.scipy.org/doc/numpy/reference/generated/numpy.ndarray.flatten.htm\n",
+     "\n",
+     "`.flatten` returns the flattened array. The array can be flattened in `C` style (i.e., moving horizontally in the matrix), or in `fortran` style (i.e., moving vertically in the matrix). The `C`-style flattening is the default, and it is also fast, because this is just a verbatim copy of the contents."
+    ]
+   },
+   {
+    "cell_type": "code",
+    "execution_count": 335,
+    "metadata": {
+     "ExecuteTime": {
+      "end_time": "2019-10-16T18:04:12.241634Z",
+      "start_time": "2019-10-16T18:04:12.226130Z"
+     }
+    },
+    "outputs": [
+     {
+      "name": "stdout",
+      "output_type": "stream",
+      "text": [
+       "a: \t\t array([1, 2, 3, 4], dtype=int8)\n",
+       "a flattened: \t array([1, 2, 3, 4], dtype=int8)\n",
+       "\n",
+       "b: array([[1, 2, 3],\n",
+       "\t [4, 5, 6]], dtype=int8)\n",
+       "b flattened (C): \t array([1, 2, 3, 4, 5, 6], dtype=int8)\n",
+       "b flattened (F): \t array([1, 4, 2, 5, 3, 6], dtype=int8)\n",
+       "\n",
+       "\n"
+      ]
+     }
+    ],
+    "source": [
+     "%%micropython -unix 1\n",
+     "\n",
+     "import ulab as np\n",
+     "\n",
+     "a = np.array([1, 2, 3, 4], dtype=np.int8)\n",
+     "print(\"a: \\t\\t\", a)\n",
+     "print(\"a flattened: \\t\", a.flatten())\n",
+     "\n",
+     "b = np.array([[1, 2, 3], [4, 5, 6]], dtype=np.int8)\n",
+     "print(\"\\nb:\", b)\n",
+     "\n",
+     "print(\"b flattened (C): \\t\", b.flatten())\n",
+     "print(\"b flattened (F): \\t\", b.flatten(order='F'))"
+    ]
+   },
+   {
+    "cell_type": "markdown",
+    "metadata": {},
+    "source": [
+     "### .transpose\n",
+     "\n",
+     "`numpy`: https://docs.scipy.org/doc/numpy/reference/generated/numpy.transpose.html"
+    ]
+   },
+   {
+    "cell_type": "code",
+    "execution_count": 384,
+    "metadata": {
+     "ExecuteTime": {
+      "end_time": "2019-10-19T08:39:11.844987Z",
+      "start_time": "2019-10-19T08:39:11.828099Z"
+     }
+    },
+    "outputs": [
+     {
+      "name": "stdout",
+      "output_type": "stream",
+      "text": [
+       "a:\n",
+       " array([[1, 2, 3],\n",
+       "\t [4, 5, 6],\n",
+       "\t [7, 8, 9],\n",
+       "\t [10, 11, 12]], dtype=uint8)\n",
+       "shape of a: (4, 3)\n",
+       "\n",
+       "transpose of a:\n",
+       " array([[1, 4, 7, 10],\n",
+       "\t [2, 5, 8, 11],\n",
+       "\t [3, 6, 9, 12]], dtype=uint8)\n",
+       "shape of a: (3, 4)\n",
+       "\n",
+       "\n"
+      ]
+     }
+    ],
+    "source": [
+     "%%micropython -unix 1\n",
+     "\n",
+     "import ulab as np\n",
+     "\n",
+     "a = np.array([[1, 2, 3], [4, 5, 6], [7, 8, 9], [10, 11, 12]], dtype=np.uint8)\n",
+     "print('a:\\n', a)\n",
+     "print('shape of a:', a.shape())\n",
+     "a.transpose()\n",
+     "print('\\ntranspose of a:\\n', a)\n",
+     "print('shape of a:', a.shape())"
+    ]
+   },
+   {
+    "cell_type": "markdown",
+    "metadata": {},
+    "source": [
+     "### .sort\n",
+     "\n",
+     "`numpy`: https://docs.scipy.org/doc/numpy/reference/generated/numpy.sort.html\n",
+     "\n",
+     "In-place sorting of an `ndarray`. For a more detailed exposition, see [sort](#sort)."
+    ]
+   },
+   {
+    "cell_type": "code",
+    "execution_count": 14,
+    "metadata": {
+     "ExecuteTime": {
+      "end_time": "2019-11-05T06:23:39.251388Z",
+      "start_time": "2019-11-05T06:23:39.235989Z"
+     }
+    },
+    "outputs": [
+     {
+      "name": "stdout",
+      "output_type": "stream",
+      "text": [
+       "\n",
+       "a:\n",
+       " array([[1, 12, 3, 0],\n",
+       "\t [5, 3, 4, 1],\n",
+       "\t [9, 11, 1, 8],\n",
+       "\t [7, 10, 0, 1]], dtype=uint8)\n",
+       "\n",
+       "a sorted along vertical axis:\n",
+       " array([[1, 3, 0, 0],\n",
+       "\t [5, 10, 1, 1],\n",
+       "\t [7, 11, 3, 1],\n",
+       "\t [9, 12, 4, 8]], dtype=uint8)\n",
+       "\n",
+       "a sorted along horizontal axis:\n",
+       " array([[0, 1, 3, 12],\n",
+       "\t [1, 3, 4, 5],\n",
+       "\t [1, 8, 9, 11],\n",
+       "\t [0, 1, 7, 10]], dtype=uint8)\n",
+       "\n",
+       "flattened a sorted:\n",
+       " array([0, 0, 1, ..., 10, 11, 12], dtype=uint8)\n",
+       "\n",
+       "\n"
+      ]
+     }
+    ],
+    "source": [
+     "%%micropython -unix 1\n",
+     "\n",
+     "import ulab as np\n",
+     "\n",
+     "a = np.array([[1, 12, 3, 0], [5, 3, 4, 1], [9, 11, 1, 8], [7, 10, 0, 1]], dtype=np.uint8)\n",
+     "print('\\na:\\n', a)\n",
+     "a.sort(axis=0)\n",
+     "print('\\na sorted along vertical axis:\\n', a)\n",
+     "\n",
+     "a = np.array([[1, 12, 3, 0], [5, 3, 4, 1], [9, 11, 1, 8], [7, 10, 0, 1]], dtype=np.uint8)\n",
+     "a.sort(a, axis=1)\n",
+     "print('\\na sorted along horizontal axis:\\n', a)\n",
+     "\n",
+     "a = np.array([[1, 12, 3, 0], [5, 3, 4, 1], [9, 11, 1, 8], [7, 10, 0, 1]], dtype=np.uint8)\n",
+     "a.sort(a, axis=None)\n",
+     "print('\\nflattened a sorted:\\n', a)"
+    ]
+   },
+   {
+    "cell_type": "markdown",
+    "metadata": {},
+    "source": [
+     "## Unary operators\n",
+     "\n",
+     "With the exception of `len`, which returns a single number, all unary operators manipulate the underlying data element-wise. "
+    ]
+   },
+   {
+    "cell_type": "markdown",
+    "metadata": {},
+    "source": [
+     "### len\n",
+     "\n",
+     "This operator takes a single argument, and returns either the length (for row vectors), or the number of rows (for matrices) of its argument."
+    ]
+   },
+   {
+    "cell_type": "code",
+    "execution_count": 105,
+    "metadata": {
+     "ExecuteTime": {
+      "end_time": "2019-10-11T13:23:54.932077Z",
+      "start_time": "2019-10-11T13:23:54.911337Z"
+     }
+    },
+    "outputs": [
+     {
+      "name": "stdout",
+      "output_type": "stream",
+      "text": [
+       "a:\t array([1, 2, 3, 4, 5], dtype=uint8)\n",
+       "length of a:  5\n",
+       "shape of a:  (1, 5)\n",
+       "\n",
+       "b:\t array([[0, 1, 2, 3, 4],\n",
+       "\t [0, 1, 2, 3, 4],\n",
+       "\t [0, 1, 2, 3, 4],\n",
+       "\t [0, 1, 2, 3, 4]], dtype=uint8)\n",
+       "length of b:  4\n",
+       "shape of b:  (4, 5)\n",
+       "\n",
+       "\n"
+      ]
+     }
+    ],
+    "source": [
+     "%%micropython -unix 1\n",
+     "\n",
+     "import ulab as np\n",
+     "\n",
+     "a = np.array([1, 2, 3, 4, 5], dtype=np.uint8)\n",
+     "b = np.array([range(5), range(5), range(5), range(5)], dtype=np.uint8)\n",
+     "\n",
+     "print(\"a:\\t\", a)\n",
+     "print(\"length of a: \", len(a))\n",
+     "print(\"shape of a: \", a.shape())\n",
+     "print(\"\\nb:\\t\", b)\n",
+     "print(\"length of b: \", len(b))\n",
+     "print(\"shape of b: \", b.shape())"
+    ]
+   },
+   {
+    "cell_type": "markdown",
+    "metadata": {},
+    "source": [
+     " The number returned by `len` is also the length of the iterations, when the array supplies the elements for an iteration (see later)."
+    ]
+   },
+   {
+    "cell_type": "markdown",
+    "metadata": {},
+    "source": [
+     "### invert\n",
+     "\n",
+     "The function is defined for integer data types (`uint8`, `int8`, `uint16`, and `int16`) only, takes a single argument, and returns the element-by-element, bit-wise inverse of the array. If a `float` is supplied, the function raises a `ValueError` exception.\n",
+     "\n",
+     "With signed integers (`int8`, and `int16`), the results might be unexpected, as in the example below:"
+    ]
+   },
+   {
+    "cell_type": "code",
+    "execution_count": 98,
+    "metadata": {
+     "ExecuteTime": {
+      "end_time": "2019-10-11T13:16:16.754210Z",
+      "start_time": "2019-10-11T13:16:16.735618Z"
+     }
+    },
+    "outputs": [
+     {
+      "name": "stdout",
+      "output_type": "stream",
+      "text": [
+       "a:\t\t array([0, -1, -100], dtype=int8)\n",
+       "inverse of a:\t array([-1, 0, 99], dtype=int8)\n",
+       "\n",
+       "a:\t\t array([0, 1, 254, 255], dtype=uint8)\n",
+       "inverse of a:\t array([255, 254, 1, 0], dtype=uint8)\n",
+       "\n",
+       "\n"
+      ]
+     }
+    ],
+    "source": [
+     "%%micropython -unix 1\n",
+     "\n",
+     "import ulab as np\n",
+     "\n",
+     "a = np.array([0, -1, -100], dtype=np.int8)\n",
+     "print(\"a:\\t\\t\", a)\n",
+     "print(\"inverse of a:\\t\", ~a)\n",
+     "\n",
+     "a = np.array([0, 1, 254, 255], dtype=np.uint8)\n",
+     "print(\"\\na:\\t\\t\", a)\n",
+     "print(\"inverse of a:\\t\", ~a)"
+    ]
+   },
+   {
+    "cell_type": "markdown",
+    "metadata": {},
+    "source": [
+     "### abs\n",
+     "\n",
+     "This function takes a single argument, and returns the element-by-element absolute value of the array. When the data type is unsigned (`uint8`, or `uint16`), a copy of the array will be returned immediately, and no calculation takes place."
+    ]
+   },
+   {
+    "cell_type": "code",
+    "execution_count": 73,
+    "metadata": {
+     "ExecuteTime": {
+      "end_time": "2019-10-11T13:05:43.926821Z",
+      "start_time": "2019-10-11T13:05:43.912629Z"
+     }
+    },
+    "outputs": [
+     {
+      "name": "stdout",
+      "output_type": "stream",
+      "text": [
+       "a:\t\t\t  array([0, -1, -100], dtype=int8)\n",
+       "absolute value of a:\t  array([0, 1, 100], dtype=int8)\n",
+       "\n",
+       "\n"
+      ]
+     }
+    ],
+    "source": [
+     "%%micropython -unix 1\n",
+     "\n",
+     "import ulab as np\n",
+     "\n",
+     "a = np.array([0, -1, -100], dtype=np.int8)\n",
+     "print(\"a:\\t\\t\\t \", a)\n",
+     "print(\"absolute value of a:\\t \", abs(a))"
+    ]
+   },
+   {
+    "cell_type": "markdown",
+    "metadata": {},
+    "source": [
+     "### neg\n",
+     "\n",
+     "This operator takes a single argument, and changes the sign of each element in the array. Unsigned values are wrapped. "
+    ]
+   },
+   {
+    "cell_type": "code",
+    "execution_count": 99,
+    "metadata": {
+     "ExecuteTime": {
+      "end_time": "2019-10-11T13:17:00.946009Z",
+      "start_time": "2019-10-11T13:17:00.927264Z"
+     }
+    },
+    "outputs": [
+     {
+      "name": "stdout",
+      "output_type": "stream",
+      "text": [
+       "a:\t\t array([10, -1, 1], dtype=int8)\n",
+       "negative of a:\t array([-10, 1, -1], dtype=int8)\n",
+       "\n",
+       "b:\t\t array([0, 100, 200], dtype=uint8)\n",
+       "negative of b:\t array([0, 156, 56], dtype=uint8)\n",
+       "\n",
+       "\n"
+      ]
+     }
+    ],
+    "source": [
+     "%%micropython -unix 1\n",
+     "\n",
+     "import ulab as np\n",
+     "\n",
+     "a = np.array([10, -1, 1], dtype=np.int8)\n",
+     "print(\"a:\\t\\t\", a)\n",
+     "print(\"negative of a:\\t\", -a)\n",
+     "\n",
+     "b = np.array([0, 100, 200], dtype=np.uint8)\n",
+     "print(\"\\nb:\\t\\t\", b)\n",
+     "print(\"negative of b:\\t\", -b)"
+    ]
+   },
+   {
+    "cell_type": "markdown",
+    "metadata": {},
+    "source": [
+     "### pos\n",
+     "\n",
+     "This function takes a single argument, and simply returns a copy of the array."
+    ]
+   },
+   {
+    "cell_type": "code",
+    "execution_count": 85,
+    "metadata": {
+     "ExecuteTime": {
+      "end_time": "2019-10-11T13:09:15.965662Z",
+      "start_time": "2019-10-11T13:09:15.945461Z"
+     }
+    },
+    "outputs": [
+     {
+      "name": "stdout",
+      "output_type": "stream",
+      "text": [
+       "a:\t\t array([10, -1, 1], dtype=int8)\n",
+       "positive of a:\t array([10, -1, 1], dtype=int8)\n",
+       "\n",
+       "\n"
+      ]
+     }
+    ],
+    "source": [
+     "%%micropython -unix 1\n",
+     "\n",
+     "import ulab as np\n",
+     "\n",
+     "a = np.array([10, -1, 1], dtype=np.int8)\n",
+     "print(\"a:\\t\\t\", a)\n",
+     "print(\"positive of a:\\t\", +a)"
+    ]
+   },
+   {
+    "cell_type": "markdown",
+    "metadata": {},
+    "source": [
+     "## Binary operators\n",
+     "\n",
+     "`ulab` implements the `+`, `-`, `*`, `/`, `**`, `<`, `>`, `<=`, `>=`, `==`, `!=` binary operators that work element-wise. Partial broadcasting is available, meaning that the operands either must have the same shape, or one of them must be a scalar.\n",
+     "\n",
+     "The operators raise a `ValueError` exception, if partial broadcasting is not possible. The only exceptions are the `==` and `!=` operators that will return `False` in this case. \n",
+     "\n",
+     "**WARNING**: note that relational operators (`<`, `>`, `<=`, `>=`, `==`, `!=`) should have the `ndarray` on their left hand side, when compared to scalars. This means that the following works"
+    ]
+   },
+   {
+    "cell_type": "code",
+    "execution_count": 5,
+    "metadata": {
+     "ExecuteTime": {
+      "end_time": "2020-04-04T19:55:37.371569Z",
+      "start_time": "2020-04-04T19:55:37.359230Z"
+     }
+    },
+    "outputs": [
+     {
+      "name": "stdout",
+      "output_type": "stream",
+      "text": [
+       "[False, False, True]\n",
+       "\n",
+       "\n"
+      ]
+     }
+    ],
+    "source": [
+     "%%micropython -unix 1\n",
+     "\n",
+     "import ulab\n",
+     "a = ulab.array([1, 2, 3])\n",
+     "print(a > 2)"
+    ]
+   },
+   {
+    "cell_type": "markdown",
+    "metadata": {},
+    "source": [
+     "while the equivalent statement, `2 < a`, will raise a `TypeError` exception:"
+    ]
+   },
+   {
+    "cell_type": "code",
+    "execution_count": 26,
+    "metadata": {
+     "ExecuteTime": {
+      "end_time": "2020-05-03T08:56:42.903058Z",
+      "start_time": "2020-05-03T08:56:42.890546Z"
+     }
+    },
+    "outputs": [
+     {
+      "name": "stdout",
+      "output_type": "stream",
+      "text": [
+       "\n",
+       "Traceback (most recent call last):\n",
+       "  File \"/dev/shm/micropython.py\", line 4, in <module>\n",
+       "TypeError: unsupported types for __lt__: 'int', 'ndarray'\n",
+       "\n"
+      ]
+     }
+    ],
+    "source": [
+     "%%micropython -unix 1\n",
+     "\n",
+     "import ulab\n",
+     "a = ulab.array([1, 2, 3])\n",
+     "print(2 < a)"
+    ]
+   },
+   {
+    "cell_type": "markdown",
+    "metadata": {},
+    "source": [
+     "**WARNING:** `numpy` also allows operations between a matrix, and a row vector, if the row vector has exactly as many elements, as many columns the matrix has. This feature will be added in future versions of `ulab`."
+    ]
+   },
+   {
+    "cell_type": "code",
+    "execution_count": 188,
+    "metadata": {
+     "ExecuteTime": {
+      "end_time": "2019-10-11T18:59:35.810060Z",
+      "start_time": "2019-10-11T18:59:35.804683Z"
+     }
+    },
+    "outputs": [
+     {
+      "data": {
+       "text/plain": [
+        "array([[11, 22, 33],\n",
+        "       [14, 25, 36],\n",
+        "       [17, 28, 36]])"
+       ]
+      },
+      "execution_count": 188,
+      "metadata": {},
+      "output_type": "execute_result"
+     }
+    ],
+    "source": [
+     "a = array([[1, 2, 3], [4, 5, 6], [7, 8, 6]])\n",
+     "b = array([10, 20, 30])\n",
+     "a+b"
+    ]
+   },
+   {
+    "cell_type": "markdown",
+    "metadata": {},
+    "source": [
+     "**WARNING:** `circuitpython` users should use the `equal`, and `not_equal` operators instead of `==`, and `!=`. See the section on [array comparison](#Comparison-of-arrays) for details."
+    ]
+   },
+   {
+    "cell_type": "markdown",
+    "metadata": {},
+    "source": [
+     "### Upcasting\n",
+     "\n",
+     "Binary operations require special attention, because two arrays with different typecodes can be the operands of an operation, in which case it is not trivial, what the typecode of the result is. This decision on the result's typecode is called upcasting. Since the number of typecodes in `ulab` is significantly smaller than in `numpy`, we have to define new upcasting rules. Where possible, I followed `numpy`'s conventions. \n",
+     "\n",
+     "`ulab` observes the following upcasting rules:\n",
+     "\n",
+     "1. Operations with two `ndarray`s of the same `dtype` preserve their `dtype`, even when the results overflow.\n",
+     "\n",
+     "2. if either of the operands is a float, the result is automatically a float\n",
+     "\n",
+     "3. When the right hand side of a binary operator is a micropython variable, `mp_obj_int`, or `mp_obj_float`, then the result will be promoted to `dtype` `float`. This is necessary, because a micropython integer can be 31 bites wide. Other micropython types (e.g., lists, tuples, etc.) raise a `TypeError` exception. \n",
+     "\n",
+     "4. \n",
+     "    \n",
+     "| left hand side | right hand side | ulab result | numpy result |\n",
+     "|----------------|-----------------|-------------|--------------|\n",
+     "|`uint8`         |`int8`           |`int16`      |`int16`       |\n",
+     "|`uint8`         |`int16`          |`int16`      |`int16`       |\n",
+     "|`uint8`         |`uint16`         |`uint16`     |`uint16`      |\n",
+     "|`int8`          |`int16`          |`int16`      |`int16`       | \n",
+     "|`int8`          |`uint16`         |`uint16`     |`int32`       |\n",
+     "|`uint16`        |`int16`          |`float`      |`int32`       |\n",
+     "    \n",
+     "Note that the last two operations are promoted to `int32` in `numpy`.\n",
+     "    \n",
+     "**WARNING:** Due to the lower number of available data types, the upcasting rules of `ulab` are slightly different to those of `numpy`. Watch out for this, when porting code!\n",
+     "\n",
+     "When one of the operands is a scalar, it will internally be turned into a single-element `ndarray` with the *smallest* possible `dtype`. Thus, e.g., if the scalar is 123, it will be converted to an array of `dtype` `uint8`.\n",
+     "\n",
+     "Upcasting can be seen in action in the following snippet:"
+    ]
+   },
+   {
+    "cell_type": "code",
+    "execution_count": 212,
+    "metadata": {
+     "ExecuteTime": {
+      "end_time": "2019-10-11T19:28:50.688741Z",
+      "start_time": "2019-10-11T19:28:50.674459Z"
+     }
+    },
+    "outputs": [
+     {
+      "name": "stdout",
+      "output_type": "stream",
+      "text": [
+       "a:\t array([1, 2, 3, 4], dtype=uint8)\n",
+       "b:\t array([1, 2, 3, 4], dtype=int8)\n",
+       "a+b:\t array([2, 4, 6, 8], dtype=int16)\n",
+       "\n",
+       "a:\t array([1, 2, 3, 4], dtype=uint8)\n",
+       "c:\t array([1.0, 2.0, 3.0, 4.0], dtype=float)\n",
+       "a*c:\t array([1.0, 4.0, 9.0, 16.0], dtype=float)\n",
+       "\n",
+       "\n"
+      ]
+     }
+    ],
+    "source": [
+     "%%micropython -unix 1\n",
+     "\n",
+     "import ulab as np\n",
+     "\n",
+     "a = np.array([1, 2, 3, 4], dtype=np.uint8)\n",
+     "b = np.array([1, 2, 3, 4], dtype=np.int8)\n",
+     "print(\"a:\\t\", a)\n",
+     "print(\"b:\\t\", b)\n",
+     "print(\"a+b:\\t\", a+b)\n",
+     "\n",
+     "c = np.array([1, 2, 3, 4], dtype=np.float)\n",
+     "print(\"\\na:\\t\", a)\n",
+     "print(\"c:\\t\", c)\n",
+     "print(\"a*c:\\t\", a*c)"
+    ]
+   },
+   {
+    "cell_type": "markdown",
+    "metadata": {},
+    "source": [
+     "### Benchmarks\n",
+     "\n",
+     "The following snippet compares the performance of binary operations to a possible implementation in python. For the time measurement, we will take the following snippet from the micropython manual:"
+    ]
+   },
+   {
+    "cell_type": "code",
+    "execution_count": 32,
+    "metadata": {
+     "ExecuteTime": {
+      "end_time": "2020-05-07T06:39:52.225256Z",
+      "start_time": "2020-05-07T06:39:52.194691Z"
+     }
+    },
+    "outputs": [
+     {
+      "name": "stdout",
+      "output_type": "stream",
+      "text": [
+       "\n"
+      ]
+     }
+    ],
+    "source": [
+     "%%micropython -pyboard 1\n",
+     "\n",
+     "import utime\n",
+     "\n",
+     "def timeit(f, *args, **kwargs):\n",
+     "    func_name = str(f).split(' ')[1]\n",
+     "    def new_func(*args, **kwargs):\n",
+     "        t = utime.ticks_us()\n",
+     "        result = f(*args, **kwargs)\n",
+     "        print('execution time: ', utime.ticks_diff(utime.ticks_us(), t), ' us')\n",
+     "        return result\n",
+     "    return new_func"
+    ]
+   },
+   {
+    "cell_type": "code",
+    "execution_count": 490,
+    "metadata": {
+     "ExecuteTime": {
+      "end_time": "2019-10-19T13:23:45.432395Z",
+      "start_time": "2019-10-19T13:23:45.344021Z"
+     }
+    },
+    "outputs": [
+     {
+      "name": "stdout",
+      "output_type": "stream",
+      "text": [
+       "python add:\n",
+       "execution time:  10051  us\n",
+       "\n",
+       "python multiply:\n",
+       "execution time:  14175  us\n",
+       "\n",
+       "ulab add:\n",
+       "execution time:  222  us\n",
+       "\n",
+       "ulab multiply:\n",
+       "execution time:  213  us\n",
+       "\n"
+      ]
+     }
+    ],
+    "source": [
+     "%%micropython -pyboard 1\n",
+     "\n",
+     "import ulab as np\n",
+     "\n",
+     "@timeit\n",
+     "def py_add(a, b):\n",
+     "    return [a[i]+b[i] for i in range(1000)]\n",
+     "\n",
+     "@timeit\n",
+     "def py_multiply(a, b):\n",
+     "    return [a[i]*b[i] for i in range(1000)]\n",
+     "\n",
+     "@timeit\n",
+     "def ulab_add(a, b):\n",
+     "    return a + b\n",
+     "\n",
+     "@timeit\n",
+     "def ulab_multiply(a, b):\n",
+     "    return a * b\n",
+     "\n",
+     "a = [0.0]*1000\n",
+     "b = range(1000)\n",
+     "\n",
+     "print('python add:')\n",
+     "py_add(a, b)\n",
+     "\n",
+     "print('\\npython multiply:')\n",
+     "py_multiply(a, b)\n",
+     "\n",
+     "a = np.linspace(0, 10, num=1000)\n",
+     "b = np.ones(1000)\n",
+     "\n",
+     "print('\\nulab add:')\n",
+     "ulab_add(a, b)\n",
+     "\n",
+     "print('\\nulab multiply:')\n",
+     "ulab_multiply(a, b)"
+    ]
+   },
+   {
+    "cell_type": "markdown",
+    "metadata": {},
+    "source": [
+     "I do not claim that the python implementation above is perfect, and certainly, there is much room for improvement. However, the factor of 50 difference in execution time is very spectacular. This is nothing but a consequence of the fact that the `ulab` functions run `C` code, with very little python overhead. The factor of 50 appears to be quite universal: the FFT routine obeys similar scaling (see [Speed of FFTs](#Speed-of-FFTs)), and this number came up with font rendering, too: [fast font rendering on graphical displays](https://forum.micropython.org/viewtopic.php?f=15&t=5815&p=33362&hilit=ufont#p33383)."
+    ]
+   },
+   {
+    "cell_type": "markdown",
+    "metadata": {},
+    "source": [
+     "## Comparison operators\n",
+     "\n",
+     "The smaller than, greater than, smaller or equal, and greater or equal operators return a vector of Booleans indicating the positions (`True`), where the condition is satisfied. "
+    ]
+   },
+   {
+    "cell_type": "code",
+    "execution_count": 118,
+    "metadata": {
+     "ExecuteTime": {
+      "end_time": "2019-10-11T16:24:11.562136Z",
+      "start_time": "2019-10-11T16:24:11.548252Z"
+     }
+    },
+    "outputs": [
+     {
+      "name": "stdout",
+      "output_type": "stream",
+      "text": [
+       "[True, True, True, True, False, False, False, False]\n",
+       "\n",
+       "\n"
+      ]
+     }
+    ],
+    "source": [
+     "%%micropython -unix 1\n",
+     "\n",
+     "import ulab as np\n",
+     "\n",
+     "a = np.array([1, 2, 3, 4, 5, 6, 7, 8], dtype=np.uint8)\n",
+     "print(a < 5)"
+    ]
+   },
+   {
+    "cell_type": "markdown",
+    "metadata": {},
+    "source": [
+     "**WARNING**: at the moment, due to implementation details, the `ndarray` must be on the left hand side of the relational operators. This will change in a future version of `ulab`. \n",
+     "\n",
+     "That is, while `a < 5` and `5 > a` have the same meaning, the following code will not work:"
+    ]
+   },
+   {
+    "cell_type": "code",
+    "execution_count": 7,
+    "metadata": {},
+    "outputs": [
+     {
+      "name": "stdout",
+      "output_type": "stream",
+      "text": [
+       "\n",
+       "Traceback (most recent call last):\n",
+       "  File \"/dev/shm/micropython.py\", line 5, in <module>\n",
+       "TypeError: unsupported types for __gt__: 'int', 'ndarray'\n",
+       "\n"
+      ]
+     }
+    ],
+    "source": [
+     "%%micropython -unix 1\n",
+     "\n",
+     "import ulab as np\n",
+     "\n",
+     "a = np.array([1, 2, 3, 4, 5, 6, 7, 8], dtype=np.uint8)\n",
+     "print(5 > a)"
+    ]
+   },
+   {
+    "cell_type": "markdown",
+    "metadata": {},
+    "source": [
+     "**WARNING:** Note that `numpy` returns an array of Booleans. For most use cases this fact should not make a difference. "
+    ]
+   },
+   {
+    "cell_type": "code",
+    "execution_count": 119,
+    "metadata": {
+     "ExecuteTime": {
+      "end_time": "2019-10-11T16:25:30.888882Z",
+      "start_time": "2019-10-11T16:25:30.865641Z"
+     }
+    },
+    "outputs": [
+     {
+      "data": {
+       "text/plain": [
+        "array([ True,  True,  True,  True, False, False, False, False])"
+       ]
+      },
+      "execution_count": 119,
+      "metadata": {},
+      "output_type": "execute_result"
+     }
+    ],
+    "source": [
+     "a = array([1, 2, 3, 4, 5, 6, 7, 8])\n",
+     "a < 5"
+    ]
+   },
+   {
+    "cell_type": "markdown",
+    "metadata": {},
+    "source": [
+     "These operators work with matrices, too, in which case a list of lists of Booleans will be returned:"
+    ]
+   },
+   {
+    "cell_type": "code",
+    "execution_count": 122,
+    "metadata": {
+     "ExecuteTime": {
+      "end_time": "2019-10-11T16:28:07.876371Z",
+      "start_time": "2019-10-11T16:28:07.859304Z"
+     }
+    },
+    "outputs": [
+     {
+      "name": "stdout",
+      "output_type": "stream",
+      "text": [
+       "array([[0, 1, 2, 3, 4],\n",
+       "\t [1, 2, 3, 4, 5],\n",
+       "\t [2, 3, 4, 5, 6]], dtype=uint8)\n",
+       "[[True, True, True, True, True], [True, True, True, True, False], [True, True, True, False, False]]\n",
+       "\n",
+       "\n"
+      ]
+     }
+    ],
+    "source": [
+     "%%micropython -unix 1\n",
+     "\n",
+     "import ulab as np\n",
+     "\n",
+     "a = np.array([range(0, 5, 1), range(1, 6, 1), range(2, 7, 1)], dtype=np.uint8)\n",
+     "print(a)\n",
+     "print(a < 5)"
+    ]
+   },
+   {
+    "cell_type": "markdown",
+    "metadata": {},
+    "source": [
+     "## Iterating over arrays\n",
+     "\n",
+     "`ndarray`s are iterable, which means that their elements can also be accessed as can the elements of a list, tuple, etc. If the array is one-dimensional, the iterator returns scalars, otherwise a new one-dimensional `ndarray`, which is simply a copy of the corresponding row of the matrix, i.e, its data type will be inherited."
+    ]
+   },
+   {
+    "cell_type": "code",
+    "execution_count": 104,
+    "metadata": {
+     "ExecuteTime": {
+      "end_time": "2019-10-11T13:23:32.570237Z",
+      "start_time": "2019-10-11T13:23:32.550470Z"
+     }
+    },
+    "outputs": [
+     {
+      "name": "stdout",
+      "output_type": "stream",
+      "text": [
+       "a:\t array([1, 2, 3, 4, 5], dtype=uint8)\n",
+       "element 0 in a: 1\n",
+       "element 1 in a: 2\n",
+       "element 2 in a: 3\n",
+       "element 3 in a: 4\n",
+       "element 4 in a: 5\n",
+       "\n",
+       "b:\t array([[0, 1, 2, 3, 4],\n",
+       "\t [10, 11, 12, 13, 14],\n",
+       "\t [20, 21, 22, 23, 24],\n",
+       "\t [30, 31, 32, 33, 34]], dtype=uint8)\n",
+       "element 0 in b: array([0, 1, 2, 3, 4], dtype=uint8)\n",
+       "element 1 in b: array([10, 11, 12, 13, 14], dtype=uint8)\n",
+       "element 2 in b: array([20, 21, 22, 23, 24], dtype=uint8)\n",
+       "element 3 in b: array([30, 31, 32, 33, 34], dtype=uint8)\n",
+       "\n",
+       "\n"
+      ]
+     }
+    ],
+    "source": [
+     "%%micropython -unix 1\n",
+     "\n",
+     "import ulab as np\n",
+     "\n",
+     "a = np.array([1, 2, 3, 4, 5], dtype=np.uint8)\n",
+     "b = np.array([range(5), range(10, 15, 1), range(20, 25, 1), range(30, 35, 1)], dtype=np.uint8)\n",
+     "\n",
+     "print(\"a:\\t\", a)\n",
+     "\n",
+     "for i, _a in enumerate(a):\n",
+     "    print(\"element %d in a:\"%i, _a)\n",
+     "    \n",
+     "print(\"\\nb:\\t\", b)\n",
+     "\n",
+     "for i, _b in enumerate(b):\n",
+     "    print(\"element %d in b:\"%i, _b)"
+    ]
+   },
+   {
+    "cell_type": "markdown",
+    "metadata": {},
+    "source": [
+     "## Slicing and indexing\n",
+     "\n",
+     "Copies of sub-arrays can be created by indexing, and slicing."
+    ]
+   },
+   {
+    "cell_type": "markdown",
+    "metadata": {},
+    "source": [
+     "### Indexing\n",
+     "\n",
+     "The simplest form of indexing is specifying a single integer between the square brackets as in "
+    ]
+   },
+   {
+    "cell_type": "code",
+    "execution_count": 116,
+    "metadata": {
+     "ExecuteTime": {
+      "end_time": "2019-10-11T15:58:24.845241Z",
+      "start_time": "2019-10-11T15:58:24.821490Z"
+     }
+    },
+    "outputs": [
+     {
+      "name": "stdout",
+      "output_type": "stream",
+      "text": [
+       "a:\t\t\t\t\t\t array([0, 1, 2, ..., 7, 8, 9], dtype=uint8)\n",
+       "the first, and first from right element of a:\t 0 9\n",
+       "the second, and second from right element of a:\t 1 8\n",
+       "\n",
+       "\n"
+      ]
+     }
+    ],
+    "source": [
+     "%%micropython -unix 1\n",
+     "\n",
+     "import ulab as np\n",
+     "\n",
+     "a = np.array(range(10), dtype=np.uint8)\n",
+     "print(\"a:\\t\\t\\t\\t\\t\\t\", a)\n",
+     "print(\"the first, and first from right element of a:\\t\", a[0], a[-1])\n",
+     "print(\"the second, and second from right element of a:\\t\", a[1], a[-2])"
+    ]
+   },
+   {
+    "cell_type": "markdown",
+    "metadata": {},
+    "source": [
+     "Indices are (not necessarily non-negative) integers, or a list of Booleans. By using a Boolean list, we can select those elements of an array that satisfy a specific condition. At the moment, such indexing is defined for row vectors only, for matrices the function raises a `ValueError` exception, though this will be rectified in a future version of `ulab`."
+    ]
+   },
+   {
+    "cell_type": "code",
+    "execution_count": 183,
+    "metadata": {
+     "ExecuteTime": {
+      "end_time": "2019-10-11T18:51:18.226269Z",
+      "start_time": "2019-10-11T18:51:18.208328Z"
+     }
+    },
+    "outputs": [
+     {
+      "name": "stdout",
+      "output_type": "stream",
+      "text": [
+       "a:\t array([0.0, 1.0, 2.0, 3.0, 4.0, 5.0, 6.0, 7.0, 8.0], dtype=float)\n",
+       "a < 5:\t array([0.0, 1.0, 2.0, 3.0, 4.0], dtype=float)\n",
+       "\n",
+       "\n"
+      ]
+     }
+    ],
+    "source": [
+     "%%micropython -unix 1\n",
+     "\n",
+     "import ulab as np\n",
+     "\n",
+     "a = np.array(range(9), dtype=np.float)\n",
+     "print(\"a:\\t\", a)\n",
+     "print(\"a < 5:\\t\", a[a < 5])"
+    ]
+   },
+   {
+    "cell_type": "markdown",
+    "metadata": {},
+    "source": [
+     "Indexing with Boolean arrays can take more complicated expressions. This is a very concise way of comparing two vectors, e.g.:"
+    ]
+   },
+   {
+    "cell_type": "code",
+    "execution_count": 523,
+    "metadata": {
+     "ExecuteTime": {
+      "end_time": "2019-10-20T06:50:17.527745Z",
+      "start_time": "2019-10-20T06:50:17.466717Z"
+     }
+    },
+    "outputs": [
+     {
+      "name": "stdout",
+      "output_type": "stream",
+      "text": [
+       "a:\t array([0, 1, 2, 3, 4, 5, 6, 7, 8], dtype=uint8)\n",
+       "\n",
+       "a**2:\t array([0, 1, 4, 9, 16, 25, 36, 49, 64], dtype=uint8)\n",
+       "\n",
+       "b:\t array([4, 4, 4, 3, 3, 3, 13, 13, 13], dtype=uint8)\n",
+       "\n",
+       "100*sin(b):\t array([-75.68025, -75.68025, -75.68025, 14.112, 14.112, 14.112, 42.01671, 42.01671, 42.01671], dtype=float)\n",
+       "\n",
+       "a[a*a > np.sin(b)*100.0]:\t array([0, 1, 2, 4, 5, 7, 8], dtype=uint8)\n",
+       "\n"
+      ]
+     }
+    ],
+    "source": [
+     "%%micropython -pyboard 1\n",
+     "\n",
+     "import ulab as np\n",
+     "\n",
+     "a = np.array(range(9), dtype=np.uint8)\n",
+     "b = np.array([4, 4, 4, 3, 3, 3, 13, 13, 13], dtype=np.uint8)\n",
+     "print(\"a:\\t\", a)\n",
+     "print(\"\\na**2:\\t\", a*a)\n",
+     "print(\"\\nb:\\t\", b)\n",
+     "print(\"\\n100*sin(b):\\t\", np.sin(b)*100.0)\n",
+     "print(\"\\na[a*a > np.sin(b)*100.0]:\\t\", a[a*a > np.sin(b)*100.0])"
+    ]
+   },
+   {
+    "cell_type": "markdown",
+    "metadata": {},
+    "source": [
+     "### Slicing and assigning to slices\n",
+     "\n",
+     "You can also generate sub-arrays by specifying slices as the index of an array. Slices are special python objects of the form \n",
+     "\n",
+     "```python\n",
+     "slice = start:end:stop\n",
+     "```\n",
+     "where `start`, `end`, and `stop` are (not necessarily non-negative) integers. Not all of these three numbers must be specified in an index, in fact, all three of them can be missing. The interpreter takes care of filling in the missing values. (Note that slices cannot be defined in this way, only there, where an index is expected.) For a good explanation on how slices work in python, you can read the stackoverflow question https://stackoverflow.com/questions/509211/understanding-slice-notation.\n",
+     "\n",
+     "Slices work on both axes:"
+    ]
+   },
+   {
+    "cell_type": "code",
+    "execution_count": 129,
+    "metadata": {
+     "ExecuteTime": {
+      "end_time": "2019-10-29T19:50:23.551363Z",
+      "start_time": "2019-10-29T19:50:23.528032Z"
+     }
+    },
+    "outputs": [
+     {
+      "name": "stdout",
+      "output_type": "stream",
+      "text": [
+       "a:\n",
+       " array([[1, 2, 3],\n",
+       "\t [4, 5, 6],\n",
+       "\t [7, 8, 9]], dtype=uint8)\n",
+       "\n",
+       "a[0]:\n",
+       " array([1, 2, 3], dtype=uint8)\n",
+       "\n",
+       "a[0,:2]:\n",
+       " array([1, 2], dtype=uint8)\n",
+       "\n",
+       "a[:,0]:\n",
+       " array([1, 4, 7], dtype=uint8)\n",
+       "\n",
+       "a[-1]:\n",
+       " array([7, 8, 9], dtype=uint8)\n",
+       "\n",
+       "a[::1]:\n",
+       " array([[7, 8, 9],\n",
+       "\t [4, 5, 6]], dtype=uint8)\n",
+       "\n",
+       "\n"
+      ]
+     }
+    ],
+    "source": [
+     "%%micropython -unix 1\n",
+     "\n",
+     "import ulab as np\n",
+     "\n",
+     "a = np.array([[1, 2, 3], [4, 5, 6], [7, 8, 9]], dtype=np.uint8)\n",
+     "print('a:\\n', a)\n",
+     "\n",
+     "# the first row\n",
+     "print('\\na[0]:\\n', a[0])\n",
+     "\n",
+     "# the first two elements of the first row\n",
+     "print('\\na[0,:2]:\\n', a[0,:2])\n",
+     "\n",
+     "# the zeroth element in each row (also known as the zeroth column)\n",
+     "print('\\na[:,0]:\\n', a[:,0])\n",
+     "\n",
+     "# the last but one row\n",
+     "print('\\na[-1]:\\n', a[-1])\n",
+     "\n",
+     "# the last two rows backwards\n",
+     "print('\\na[::1]:\\n', a[::-1])"
+    ]
+   },
+   {
+    "cell_type": "markdown",
+    "metadata": {},
+    "source": [
+     "Assignment to slices can be done for the whole slice, per row, and per column. A couple of examples should make these statements clearer:"
+    ]
+   },
+   {
+    "cell_type": "code",
+    "execution_count": 132,
+    "metadata": {
+     "ExecuteTime": {
+      "end_time": "2019-10-29T19:54:32.232516Z",
+      "start_time": "2019-10-29T19:54:32.217379Z"
+     }
+    },
+    "outputs": [
+     {
+      "name": "stdout",
+      "output_type": "stream",
+      "text": [
+       "a:\n",
+       " array([[0, 0, 0],\n",
+       "\t [0, 0, 0],\n",
+       "\t [0, 0, 0]], dtype=uint8)\n",
+       "\n",
+       "a[0] = 1\n",
+       " array([[1, 1, 1],\n",
+       "\t [0, 0, 0],\n",
+       "\t [0, 0, 0]], dtype=uint8)\n",
+       "\n",
+       "a[0] = np.array([1, 2, 3])\n",
+       " array([[1, 2, 179],\n",
+       "\t [0, 0, 0],\n",
+       "\t [0, 0, 0]], dtype=uint8)\n",
+       "\n",
+       "a[:,0]:\n",
+       " array([[1, 2, 3],\n",
+       "\t [0, 0, 3],\n",
+       "\t [0, 0, 3]], dtype=uint8)\n",
+       "\n",
+       "\n"
+      ]
+     }
+    ],
+    "source": [
+     "%%micropython -unix 1\n",
+     "\n",
+     "import ulab as np\n",
+     "\n",
+     "zero_list = [0, 0, 0]\n",
+     "a = np.array([zero_list, zero_list, zero_list], dtype=np.uint8)\n",
+     "print('a:\\n', a)\n",
+     "\n",
+     "# assigning to the whole row\n",
+     "a[0] = 1\n",
+     "print('\\na[0] = 1\\n', a)\n",
+     "\n",
+     "# assigning to the whole row\n",
+     "a[0] = np.array([1, 2, -333], dtype=np.float)\n",
+     "print('\\na[0] = np.array([1, 2, 3])\\n', a)\n",
+     "\n",
+     "# assigning to a column\n",
+     "a[:,2] = 3.0\n",
+     "print('\\na[:,0]:\\n', a)"
+    ]
+   },
+   {
+    "cell_type": "markdown",
+    "metadata": {},
+    "source": [
+     "# Universal functions\n",
+     "\n",
+     "Standard mathematical functions are defined in the `vector` sub-module, and can be calculated on any scalar,  scalar-valued iterable (ranges, lists, tuples containing numbers), and on `ndarray`s without having to change the call signature. In all cases the functions return a new `ndarray` of typecode `float` (since these functions usually generate float values, anyway). The functions execute faster with `ndarray` arguments than with iterables, because the values of the input vector can be extracted faster. \n",
+     "\n",
+     "At present, the following functions are supported:\n",
+     "\n",
+     "`acos`, `acosh`, `arctan2`, `around`, `asin`, `asinh`, `atan`, `atanh`, `ceil`, `cos`, `erf`, `erfc`, `exp`, `expm1`, `floor`, `tgamma`, `lgamma`, `log`, `log10`, `log2`, `sin`, `sinh`, `sqrt`, `tan`, `tanh`.\n",
+     "\n",
+     "These functions are applied element-wise to the arguments, thus, e.g., the exponential of a matrix cannot be calculated in this way. The functions can be invoked by importing the `vector` sub-module first. "
+    ]
+   },
+   {
+    "cell_type": "code",
+    "execution_count": 525,
+    "metadata": {
+     "ExecuteTime": {
+      "end_time": "2019-10-20T06:50:55.762508Z",
+      "start_time": "2019-10-20T06:50:55.655715Z"
+     }
+    },
+    "outputs": [
+     {
+      "name": "stdout",
+      "output_type": "stream",
+      "text": [
+       "a:\t range(0, 9)\n",
+       "exp(a):\t array([1.0, 2.718282, 7.389056, 20.08554, 54.59816, 148.4132, 403.4288, 1096.633, 2980.958], dtype=float)\n",
+       "\n",
+       "b:\t array([0.0, 1.0, 2.0, 3.0, 4.0, 5.0, 6.0, 7.0, 8.0], dtype=float)\n",
+       "exp(b):\t array([1.0, 2.718282, 7.389056, 20.08554, 54.59816, 148.4132, 403.4288, 1096.633, 2980.958], dtype=float)\n",
+       "\n",
+       "c:\t array([[1.0, 2.0, 3.0],\n",
+       "\t [4.0, 5.0, 6.0],\n",
+       "\t [7.0, 8.0, 9.0]], dtype=float)\n",
+       "exp(c):\t array([[2.718282, 7.389056, 20.08554],\n",
+       "\t [54.59816, 148.4132, 403.4288],\n",
+       "\t [1096.633, 2980.958, 8103.084]], dtype=float)\n",
+       "\n"
+      ]
+     }
+    ],
+    "source": [
+     "%%micropython -pyboard 1\n",
+     "\n",
+     "import ulab as np\n",
+     "from ulab import vector\n",
+     "\n",
+     "a = range(9)\n",
+     "b = np.array(a)\n",
+     "\n",
+     "# works with ranges, lists, tuples etc.\n",
+     "print('a:\\t', a)\n",
+     "print('exp(a):\\t', vector.exp(a))\n",
+     "\n",
+     "# with 1D arrays\n",
+     "print('\\nb:\\t', b)\n",
+     "print('exp(b):\\t', vector.exp(b))\n",
+     "\n",
+     "# as well as with matrices\n",
+     "c = np.array([[1, 2, 3], [4, 5, 6], [7, 8, 9]])\n",
+     "print('\\nc:\\t', c)\n",
+     "print('exp(c):\\t', vector.exp(c))"
+    ]
+   },
+   {
+    "cell_type": "markdown",
+    "metadata": {},
+    "source": [
+     "## Computation expenses\n",
+     "\n",
+     "The overhead for calculating with micropython iterables is quite significant: for the 1000 samples below, the difference is more than 800 microseconds, because internally the function has to create the `ndarray` for the output, has to fetch the iterable's items of unknown type, and then convert them to floats. All these steps are skipped for `ndarray`s, because these pieces of information are already known. \n",
+     "\n",
+     "Doing the same with `list` comprehension requires 30 times more time than with the `ndarray`, which would become even more, if we converted the resulting list to an `ndarray`. "
+    ]
+   },
+   {
+    "cell_type": "code",
+    "execution_count": 59,
+    "metadata": {
+     "ExecuteTime": {
+      "end_time": "2020-05-07T07:35:45.696282Z",
+      "start_time": "2020-05-07T07:35:45.629909Z"
+     }
+    },
+    "outputs": [
+     {
+      "name": "stdout",
+      "output_type": "stream",
+      "text": [
+       "iterating over ndarray in ulab\r\n",
+       "execution time:  441  us\r\n",
+       "\r\n",
+       "iterating over list in ulab\r\n",
+       "execution time:  1266  us\r\n",
+       "\r\n",
+       "iterating over list in python\r\n",
+       "execution time:  11379  us\r\n",
+       "\n"
+      ]
+     }
+    ],
+    "source": [
+     "%%micropython -pyboard 1\n",
+     "\n",
+     "import ulab as np\n",
+     "from ulab import vector\n",
+     "import math\n",
+     "\n",
+     "a = [0]*1000\n",
+     "b = np.array(a)\n",
+     "\n",
+     "@timeit\n",
+     "def timed_vector(iterable):\n",
+     "    return vector.exp(iterable)\n",
+     "\n",
+     "@timeit\n",
+     "def timed_list(iterable):\n",
+     "    return [math.exp(i) for i in iterable]\n",
+     "\n",
+     "print('iterating over ndarray in ulab')\n",
+     "timed_vector(b)\n",
+     "\n",
+     "print('\\niterating over list in ulab')\n",
+     "timed_vector(a)\n",
+     "\n",
+     "print('\\niterating over list in python')\n",
+     "timed_list(a)"
+    ]
+   },
+   {
+    "cell_type": "markdown",
+    "metadata": {},
+    "source": [
+     "## Vectorising generic python functions\n",
+     "\n",
+     "`numpy`: https://numpy.org/doc/stable/reference/generated/numpy.vectorize.html\n",
+     "\n",
+     "The examples above use factory functions. In fact, they are nothing but the vectorised versions of the standard mathematical functions. User-defined `python` functions can also be vectorised by help of `vectorize`. This function takes a positional argument, namely, the `python` function that you want to vectorise, and a non-mandatory keyword argument, `otypes`, which determines the `dtype` of the output array. The `otypes` must be `None` (default), or any of the `dtypes` defined in `ulab`. With `None`, the output is automatically turned into a float array. \n",
+     "\n",
+     "The return value of `vectorize` is a `micropython` object that can be called as a standard function, but which now accepts either a scalar, an `ndarray`, or a generic `micropython` iterable as its sole argument. Note that the function that is to be vectorised must have a single argument."
+    ]
+   },
+   {
+    "cell_type": "code",
+    "execution_count": 18,
+    "metadata": {
+     "ExecuteTime": {
+      "end_time": "2020-05-06T22:13:35.735953Z",
+      "start_time": "2020-05-06T22:13:35.720709Z"
+     }
+    },
+    "outputs": [
+     {
+      "name": "stdout",
+      "output_type": "stream",
+      "text": [
+       "f on a scalar:       array([1936.0], dtype=float)\n",
+       "f on an ndarray:     array([1.0, 4.0, 9.0, 16.0], dtype=float)\n",
+       "f on a list:         array([4.0, 9.0, 16.0], dtype=float)\n",
+       "\n",
+       "\n"
+      ]
+     }
+    ],
+    "source": [
+     "%%micropython -unix 1\n",
+     "\n",
+     "import ulab as np\n",
+     "from ulab import vector\n",
+     "\n",
+     "def f(x):\n",
+     "    return x*x\n",
+     "\n",
+     "vf = vector.vectorize(f)\n",
+     "\n",
+     "# calling with a scalar\n",
+     "print('{:20}'.format('f on a scalar: '), vf(44.0))\n",
+     "\n",
+     "# calling with an ndarray\n",
+     "a = np.array([1, 2, 3, 4])\n",
+     "print('{:20}'.format('f on an ndarray: '), vf(a))\n",
+     "\n",
+     "# calling with a list\n",
+     "print('{:20}'.format('f on a list: '), vf([2, 3, 4]))"
+    ]
+   },
+   {
+    "cell_type": "markdown",
+    "metadata": {},
+    "source": [
+     "As mentioned, the `dtype` of the resulting `ndarray` can be specified via the `otypes` keyword. The value is bound to the function object that `vectorize` returns, therefore, if the same function is to be vectorised with different output types, then for each type a new function object must be created."
+    ]
+   },
+   {
+    "cell_type": "code",
+    "execution_count": 21,
+    "metadata": {
+     "ExecuteTime": {
+      "end_time": "2020-05-06T22:17:56.649769Z",
+      "start_time": "2020-05-06T22:17:56.639524Z"
+     }
+    },
+    "outputs": [
+     {
+      "name": "stdout",
+      "output_type": "stream",
+      "text": [
+       "output is uint8:     array([1, 4, 9, 16], dtype=uint8)\n",
+       "output is float:     array([1.0, 4.0, 9.0, 16.0], dtype=float)\n",
+       "\n",
+       "\n"
+      ]
+     }
+    ],
+    "source": [
+     "%%micropython -unix 1\n",
+     "\n",
+     "import ulab as np\n",
+     "from ulab import vector\n",
+     "\n",
+     "l = [1, 2, 3, 4]\n",
+     "def f(x):\n",
+     "    return x*x\n",
+     "\n",
+     "vf1 = vector.vectorize(f, otypes=np.uint8)\n",
+     "vf2 = vector.vectorize(f, otypes=np.float)\n",
+     "\n",
+     "print('{:20}'.format('output is uint8: '), vf1(l))\n",
+     "print('{:20}'.format('output is float: '), vf2(l))"
+    ]
+   },
+   {
+    "cell_type": "markdown",
+    "metadata": {},
+    "source": [
+     "The `otypes` keyword argument cannot be used for type coercion: if the function evaluates to a float, but `otypes` would dictate an integer type, an exception will be raised:"
+    ]
+   },
+   {
+    "cell_type": "code",
+    "execution_count": 25,
+    "metadata": {
+     "ExecuteTime": {
+      "end_time": "2020-05-06T22:21:43.616220Z",
+      "start_time": "2020-05-06T22:21:43.601280Z"
+     }
+    },
+    "outputs": [
+     {
+      "name": "stdout",
+      "output_type": "stream",
+      "text": [
+       "integer list:        array([1, 4, 9, 16], dtype=uint8)\n",
+       "\n",
+       "Traceback (most recent call last):\n",
+       "  File \"/dev/shm/micropython.py\", line 14, in <module>\n",
+       "TypeError: can't convert float to int\n",
+       "\n"
+      ]
+     }
+    ],
+    "source": [
+     "%%micropython -unix 1\n",
+     "\n",
+     "import ulab as np\n",
+     "from ulab import vector\n",
+     "\n",
+     "int_list = [1, 2, 3, 4]\n",
+     "float_list = [1.0, 2.0, 3.0, 4.0]\n",
+     "def f(x):\n",
+     "    return x*x\n",
+     "\n",
+     "vf = vector.vectorize(f, otypes=np.uint8)\n",
+     "\n",
+     "print('{:20}'.format('integer list: '), vf(int_list))\n",
+     "# this will raise a TypeError exception\n",
+     "print(vf(float_list))"
+    ]
+   },
+   {
+    "cell_type": "markdown",
+    "metadata": {},
+    "source": [
+     "### Benchmarks\n",
+     "\n",
+     "It should be pointed out that the `vectorize` function produces the pseudo-vectorised version of the `python` function that is fed into it, i.e., on the C level, the same `python` function is called, with the all-encompassing `mp_obj_t` type arguments, and all that happens is that the `for` loop in `[f(i) for i in iterable]` runs purely in C. Since type checking and type conversion in `f()` is expensive, the speed-up is not so spectacular as when iterating over an `ndarray` with a factory function: a gain of approximately 30% can be expected, when a native `python` type (e.g., `list`) is returned by the function, and this becomes around 50% (a factor of 2), if conversion to an `ndarray` is also counted.\n",
+     "\n",
+     "The following code snippet calculates the square of a 1000 numbers with the vectorised function (which returns an `ndarray`), with `list` comprehension, and with `list` comprehension followed by conversion to an `ndarray`. For comparison, the execution time is measured also for the case, when the square is calculated entirely in `ulab`."
+    ]
+   },
+   {
+    "cell_type": "code",
+    "execution_count": 45,
+    "metadata": {
+     "ExecuteTime": {
+      "end_time": "2020-05-07T07:32:20.048553Z",
+      "start_time": "2020-05-07T07:32:19.951851Z"
+     }
+    },
+    "outputs": [
+     {
+      "name": "stdout",
+      "output_type": "stream",
+      "text": [
+       "vectorised function\r\n",
+       "execution time:  7237  us\r\n",
+       "\r\n",
+       "list comprehension\r\n",
+       "execution time:  10248  us\r\n",
+       "\r\n",
+       "list comprehension + ndarray conversion\r\n",
+       "execution time:  12562  us\r\n",
+       "\r\n",
+       "squaring an ndarray entirely in ulab\r\n",
+       "execution time:  560  us\r\n",
+       "\n"
+      ]
+     }
+    ],
+    "source": [
+     "%%micropython -pyboard 1\n",
+     "\n",
+     "import ulab as np\n",
+     "from ulab import vector\n",
+     "\n",
+     "def f(x):\n",
+     "    return x*x\n",
+     "\n",
+     "vf = vector.vectorize(f)\n",
+     "\n",
+     "@timeit\n",
+     "def timed_vectorised_square(iterable):\n",
+     "    return vf(iterable)\n",
+     "\n",
+     "@timeit\n",
+     "def timed_python_square(iterable):\n",
+     "    return [f(i) for i in iterable]\n",
+     "\n",
+     "@timeit\n",
+     "def timed_ndarray_square(iterable):\n",
+     "    return np.array([f(i) for i in iterable])\n",
+     "\n",
+     "@timeit\n",
+     "def timed_ulab_square(ndarray):\n",
+     "    return ndarray**2\n",
+     "\n",
+     "print('vectorised function')\n",
+     "squares = timed_vectorised_square(range(1000))\n",
+     "\n",
+     "print('\\nlist comprehension')\n",
+     "squares = timed_python_square(range(1000))\n",
+     "\n",
+     "print('\\nlist comprehension + ndarray conversion')\n",
+     "squares = timed_ndarray_square(range(1000))\n",
+     "\n",
+     "print('\\nsquaring an ndarray entirely in ulab')\n",
+     "a = np.array(range(1000))\n",
+     "squares = timed_ulab_square(a)"
+    ]
+   },
+   {
+    "cell_type": "markdown",
+    "metadata": {},
+    "source": [
+     "From the comparisons above, it is obvious that `python` functions should only be vectorised, when the same effect cannot be gotten in `ulab` only. However, although the time savings are not significant, there is still a good reason for caring about vectorised functions. Namely, user-defined `python` functions become universal, i.e., they can accept generic iterables as well as `ndarray`s as their arguments. A vectorised function is still a one-liner, resulting in transparent and elegant code.\n",
+     "\n",
+     "A final comment on this subject: the `f(x)` that we defined is a *generic* `python` function. This means that it is not required that it just crunches some numbers. It has to return a number object, but it can still access the hardware in the meantime. So, e.g., \n",
+     "\n",
+     "```python\n",
+     "\n",
+     "led = pyb.LED(2)\n",
+     "\n",
+     "def f(x):\n",
+     "    if x < 100:\n",
+     "        led.toggle()\n",
+     "    return x*x\n",
+     "```\n",
+     "\n",
+     "is perfectly valid code."
+    ]
+   },
+   {
+    "cell_type": "markdown",
+    "metadata": {},
+    "source": [
+     "## around\n",
+     "\n",
+     "`numpy`: https://docs.scipy.org/doc/numpy-1.17.0/reference/generated/numpy.around.html\n",
+     "\n",
+     "`numpy`'s `around` function can also be found in the `vector` sub-module. The function implements the `decimals` keyword argument with default value `0`. The first argument must be an `ndarray`. If this is not the case, the function raises a `TypeError` exception. Note that `numpy` accepts general iterables. The `out` keyword argument known from `numpy` is not accepted. The function always returns an ndarray of type `mp_float_t`."
+    ]
+   },
+   {
+    "cell_type": "code",
+    "execution_count": 16,
+    "metadata": {
+     "ExecuteTime": {
+      "end_time": "2020-03-12T16:24:36.435638Z",
+      "start_time": "2020-03-12T16:24:36.424468Z"
+     }
+    },
+    "outputs": [
+     {
+      "name": "stdout",
+      "output_type": "stream",
+      "text": [
+       "a:\t\t array([1.0, 2.2, 33.33, 444.444], dtype=float)\n",
+       "\n",
+       "decimals = 0\t array([1.0, 2.0, 33.0, 444.0], dtype=float)\n",
+       "\n",
+       "decimals = 1\t array([1.0, 2.2, 33.3, 444.4], dtype=float)\n",
+       "\n",
+       "decimals = -1\t array([0.0, 0.0, 30.0, 440.0], dtype=float)\n",
+       "\n",
+       "\n"
+      ]
+     }
+    ],
+    "source": [
+     "%%micropython -unix 1\n",
+     "\n",
+     "import ulab as np\n",
+     "from ulab import vector\n",
+     "\n",
+     "a = np.array([1, 2.2, 33.33, 444.444])\n",
+     "print('a:\\t\\t', a)\n",
+     "print('\\ndecimals = 0\\t', vector.around(a, decimals=0))\n",
+     "print('\\ndecimals = 1\\t', vector.around(a, decimals=1))\n",
+     "print('\\ndecimals = -1\\t', vector.around(a, decimals=-1))"
+    ]
+   },
+   {
+    "cell_type": "markdown",
+    "metadata": {},
+    "source": [
+     "## arctan2\n",
+     "\n",
+     "`numpy`: https://docs.scipy.org/doc/numpy-1.17.0/reference/generated/numpy.arctan2.html\n",
+     "\n",
+     "The two-argument inverse tangent function is also part of the `vector` sub-module. The function implements only partial broadcasting, i.e., its two arguments either have the same shape, or at least one of them must be a single-element array. Scalars (`micropython` integers or floats) are also allowed."
+    ]
+   },
+   {
+    "cell_type": "code",
+    "execution_count": 22,
+    "metadata": {
+     "ExecuteTime": {
+      "end_time": "2020-03-16T18:34:22.795475Z",
+      "start_time": "2020-03-16T18:34:22.781447Z"
+     }
+    },
+    "outputs": [
+     {
+      "name": "stdout",
+      "output_type": "stream",
+      "text": [
+       "a:\t\t array([1.0, 2.2, 33.33, 444.444], dtype=float)\n",
+       "\n",
+       "arctan2(a, 1.0)\t array([0.7853981633974483, 1.14416883366802, 1.5408023243361, 1.568546328341769], dtype=float)\n",
+       "\n",
+       "arctan2(1.0, a)\t array([0.7853981633974483, 0.426627493126876, 0.02999400245879636, 0.002249998453127392], dtype=float)\n",
+       "\n",
+       "arctan2(a, a): \t array([0.7853981633974483, 0.7853981633974483, 0.7853981633974483, 0.7853981633974483], dtype=float)\n",
+       "\n",
+       "\n"
+      ]
+     }
+    ],
+    "source": [
+     "%%micropython -unix 1\n",
+     "\n",
+     "import ulab as np\n",
+     "from ulab import vector\n",
+     "\n",
+     "a = np.array([1, 2.2, 33.33, 444.444])\n",
+     "print('a:\\t\\t', a)\n",
+     "print('\\narctan2(a, 1.0)\\t', vector.arctan2(a, 1.0))\n",
+     "print('\\narctan2(1.0, a)\\t', vector.arctan2(1.0, a))\n",
+     "print('\\narctan2(a, a): \\t', vector.arctan2(a, a))"
+    ]
+   },
+   {
+    "cell_type": "markdown",
+    "metadata": {},
+    "source": [
+     "# Numerical\n",
+     "\n",
+     "Function in the `numerical` sub-module can be called by importing the sub-module first. "
+    ]
+   },
+   {
+    "cell_type": "markdown",
+    "metadata": {},
+    "source": [
+     "## min, argmin, max, argmax\n",
+     "\n",
+     "`numpy`: https://docs.scipy.org/doc/numpy/reference/generated/numpy.min.html\n",
+     "\n",
+     "`numpy`: https://docs.scipy.org/doc/numpy/reference/generated/numpy.argmax.html\n",
+     "\n",
+     "`numpy`: https://docs.scipy.org/doc/numpy/reference/generated/numpy.max.html\n",
+     "\n",
+     "`numpy`: https://docs.scipy.org/doc/numpy/reference/generated/numpy.argmax.html\n",
+     "\n",
+     "**WARNING:** Difference to `numpy`: the `out` keyword argument is not implemented.\n",
+     "\n",
+     "These functions follow the same pattern, and work with generic iterables, and `ndarray`s. `min`, and `max` return the minimum or maximum of a sequence. If the input array is two-dimensional, the `axis` keyword argument can be supplied, in which case the minimum/maximum along the given axis will be returned. If `axis=None` (this is also the default value), the minimum/maximum of the flattened array will be determined.\n",
+     "\n",
+     "`argmin/argmax` return the position (index) of the minimum/maximum in the sequence."
+    ]
+   },
+   {
+    "cell_type": "code",
+    "execution_count": 375,
+    "metadata": {
+     "ExecuteTime": {
+      "end_time": "2019-10-18T13:08:28.113525Z",
+      "start_time": "2019-10-18T13:08:28.093518Z"
+     }
+    },
+    "outputs": [
+     {
+      "name": "stdout",
+      "output_type": "stream",
+      "text": [
+       "a: array([1.0, 2.0, 0.0, 1.0, 10.0], dtype=float)\n",
+       "min of a: 0.0\n",
+       "argmin of a: 2\n",
+       "\n",
+       "b:\n",
+       " array([[1.0, 2.0, 0.0],\n",
+       "\t [1.0, 10.0, -1.0]], dtype=float)\n",
+       "min of b (flattened): -1.0\n",
+       "min of b (axis=0): array([1.0, 2.0, -1.0], dtype=float)\n",
+       "min of b (axis=1): array([0.0, -1.0], dtype=float)\n",
+       "\n",
+       "\n"
+      ]
+     }
+    ],
+    "source": [
+     "%%micropython -unix 1\n",
+     "\n",
+     "import ulab as np\n",
+     "from ulab import numerical\n",
+     "\n",
+     "a = np.array([1, 2, 0, 1, 10])\n",
+     "print('a:', a)\n",
+     "print('min of a:', numerical.min(a))\n",
+     "print('argmin of a:', numerical.argmin(a))\n",
+     "\n",
+     "b = np.array([[1, 2, 0], [1, 10, -1]])\n",
+     "print('\\nb:\\n', b)\n",
+     "print('min of b (flattened):', numerical.min(b))\n",
+     "print('min of b (axis=0):', numerical.min(b, axis=0))\n",
+     "print('min of b (axis=1):', numerical.min(b, axis=1))"
+    ]
+   },
+   {
+    "cell_type": "markdown",
+    "metadata": {},
+    "source": [
+     "## sum, std, mean\n",
+     "\n",
+     "`numpy`: https://docs.scipy.org/doc/numpy/reference/generated/numpy.sum.html\n",
+     "\n",
+     "`numpy`: https://docs.scipy.org/doc/numpy/reference/generated/numpy.std.html\n",
+     "\n",
+     "`numpy`: https://docs.scipy.org/doc/numpy/reference/generated/numpy.mean.html\n",
+     "\n",
+     "These three functions follow the same pattern: if the axis keyword is not specified, it assumes the default value of `None`, and returns the result of the computation for the flattened array. Otherwise, the calculation is along the given axis."
+    ]
+   },
+   {
+    "cell_type": "code",
+    "execution_count": 527,
+    "metadata": {
+     "ExecuteTime": {
+      "end_time": "2019-10-20T06:51:58.845076Z",
+      "start_time": "2019-10-20T06:51:58.798730Z"
+     }
+    },
+    "outputs": [
+     {
+      "name": "stdout",
+      "output_type": "stream",
+      "text": [
+       "a: \n",
+       " array([[1.0, 2.0, 3.0],\n",
+       "\t [4.0, 5.0, 6.0],\n",
+       "\t [7.0, 8.0, 9.0]], dtype=float)\n",
+       "sum, flat array:  45.0\n",
+       "mean, horizontal:  array([2.0, 5.0, 8.0], dtype=float)\n",
+       "std, vertical:  array([2.44949, 2.44949, 2.44949], dtype=float)\n",
+       "\n"
+      ]
+     }
+    ],
+    "source": [
+     "%%micropython -pyboard 1\n",
+     "\n",
+     "import ulab as np\n",
+     "from ulab import numerical\n",
+     "\n",
+     "a = np.array([[1, 2, 3], [4, 5, 6], [7, 8, 9]])\n",
+     "print('a: \\n', a)\n",
+     "\n",
+     "print('sum, flat array: ', numerical.sum(a))\n",
+     "\n",
+     "print('mean, horizontal: ', numerical.mean(a, axis=1))\n",
+     "\n",
+     "print('std, vertical: ', numerical.std(a, axis=0))"
+    ]
+   },
+   {
+    "cell_type": "markdown",
+    "metadata": {},
+    "source": [
+     "## roll\n",
+     "\n",
+     "`numpy`: https://docs.scipy.org/doc/numpy/reference/generated/numpy.roll.html\n",
+     "\n",
+     "The roll function shifts the content of a vector by the positions given as the second argument. If the `axis` keyword is supplied, the shift is applied to the given axis."
+    ]
+   },
+   {
+    "cell_type": "code",
+    "execution_count": 229,
+    "metadata": {
+     "ExecuteTime": {
+      "end_time": "2019-10-11T19:39:47.459395Z",
+      "start_time": "2019-10-11T19:39:47.443691Z"
+     }
+    },
+    "outputs": [
+     {
+      "name": "stdout",
+      "output_type": "stream",
+      "text": [
+       "a:\t\t\t array([1.0, 2.0, 3.0, 4.0, 5.0, 6.0, 7.0, 8.0], dtype=float)\n",
+       "a rolled to the left:\t array([3.0, 4.0, 5.0, 6.0, 7.0, 8.0, 1.0, 2.0], dtype=float)\n",
+       "a rolled to the right:\t array([1.0, 2.0, 3.0, 4.0, 5.0, 6.0, 7.0, 8.0], dtype=float)\n",
+       "\n",
+       "\n"
+      ]
+     }
+    ],
+    "source": [
+     "%%micropython -unix 1\n",
+     "\n",
+     "import ulab as np\n",
+     "from ulab import numerical\n",
+     "\n",
+     "a = np.array([1, 2, 3, 4, 5, 6, 7, 8])\n",
+     "print(\"a:\\t\\t\\t\", a)\n",
+     "\n",
+     "numerical.roll(a, 2)\n",
+     "print(\"a rolled to the left:\\t\", a)\n",
+     "\n",
+     "# this should be the original vector\n",
+     "numerical.roll(a, -2)\n",
+     "print(\"a rolled to the right:\\t\", a)"
+    ]
+   },
+   {
+    "cell_type": "markdown",
+    "metadata": {},
+    "source": [
+     "Rolling works with matrices, too. If the `axis` keyword is 0, the matrix is rolled along its vertical axis, otherwise, horizontally. \n",
+     "\n",
+     "Horizontal rolls are faster, because they require fewer steps, and larger memory chunks are copied, however, they also require more RAM: basically the whole row must be stored internally. Most expensive are the `None` keyword values, because with `axis = None`, the array is flattened first, hence the row's length is the size of the whole matrix.\n",
+     "\n",
+     "Vertical rolls require two internal copies of single columns. "
+    ]
+   },
+   {
+    "cell_type": "code",
+    "execution_count": 268,
+    "metadata": {
+     "ExecuteTime": {
+      "end_time": "2019-10-15T17:46:20.051069Z",
+      "start_time": "2019-10-15T17:46:20.033205Z"
+     }
+    },
+    "outputs": [
+     {
+      "name": "stdout",
+      "output_type": "stream",
+      "text": [
+       "a:\n",
+       " array([[1.0, 2.0, 3.0, 4.0],\n",
+       "\t [5.0, 6.0, 7.0, 8.0]], dtype=float)\n",
+       "\n",
+       "a rolled to the left:\n",
+       " array([[3.0, 4.0, 5.0, 6.0],\n",
+       "\t [7.0, 8.0, 1.0, 2.0]], dtype=float)\n",
+       "\n",
+       "a rolled up:\n",
+       " array([[6.0, 3.0, 4.0, 5.0],\n",
+       "\t [2.0, 7.0, 8.0, 1.0]], dtype=float)\n",
+       "\n",
+       "a rolled with None:\n",
+       " array([[3.0, 4.0, 5.0, 2.0],\n",
+       "\t [7.0, 8.0, 1.0, 6.0]], dtype=float)\n",
+       "\n",
+       "\n"
+      ]
+     }
+    ],
+    "source": [
+     "%%micropython -unix 1\n",
+     "\n",
+     "import ulab as np\n",
+     "from ulab import numerical\n",
+     "\n",
+     "a = np.array([[1, 2, 3, 4], [5, 6, 7, 8]])\n",
+     "print(\"a:\\n\", a)\n",
+     "\n",
+     "numerical.roll(a, 2)\n",
+     "print(\"\\na rolled to the left:\\n\", a)\n",
+     "\n",
+     "numerical.roll(a, -1, axis=1)\n",
+     "print(\"\\na rolled up:\\n\", a)\n",
+     "\n",
+     "numerical.roll(a, 1, axis=None)\n",
+     "print(\"\\na rolled with None:\\n\", a)"
+    ]
+   },
+   {
+    "cell_type": "markdown",
+    "metadata": {},
+    "source": [
+     "### Simple running weighted average\n",
+     "\n",
+     "As a demonstration of the conciseness of `ulab/numpy` operations, we will calculate an exponentially weighted running average of a measurement vector in just a couple of lines. I chose this particular example, because I think that this can indeed be used in real-life applications."
+    ]
+   },
+   {
+    "cell_type": "code",
+    "execution_count": 230,
+    "metadata": {
+     "ExecuteTime": {
+      "end_time": "2019-10-11T20:03:00.713235Z",
+      "start_time": "2019-10-11T20:03:00.696932Z"
+     }
+    },
+    "outputs": [
+     {
+      "name": "stdout",
+      "output_type": "stream",
+      "text": [
+       "array([0.01165623031556606, 0.03168492019176483, 0.08612854033708572, 0.234121635556221, 0.6364086270332336], dtype=float)\n",
+       "0.2545634508132935\n",
+       "array([0.0, 0.0, 0.0, 0.0, 2.0], dtype=float)\n",
+       "0.3482121050357819\n",
+       "array([0.0, 0.0, 0.0, 2.0, 2.0], dtype=float)\n",
+       "0.3826635211706161\n",
+       "array([0.0, 0.0, 2.0, 2.0, 2.0], dtype=float)\n",
+       "0.3953374892473221\n",
+       "array([0.0, 2.0, 2.0, 2.0, 2.0], dtype=float)\n",
+       "0.3999999813735485\n",
+       "array([2.0, 2.0, 2.0, 2.0, 2.0], dtype=float)\n",
+       "0.3999999813735485\n",
+       "array([2.0, 2.0, 2.0, 2.0, 2.0], dtype=float)\n",
+       "0.3999999813735485\n",
+       "array([2.0, 2.0, 2.0, 2.0, 2.0], dtype=float)\n",
+       "0.3999999813735485\n",
+       "array([2.0, 2.0, 2.0, 2.0, 2.0], dtype=float)\n",
+       "0.3999999813735485\n",
+       "array([2.0, 2.0, 2.0, 2.0, 2.0], dtype=float)\n",
+       "0.3999999813735485\n",
+       "array([2.0, 2.0, 2.0, 2.0, 2.0], dtype=float)\n",
+       "\n",
+       "\n"
+      ]
+     }
+    ],
+    "source": [
+     "%%micropython -unix 1\n",
+     "\n",
+     "import ulab as np\n",
+     "from ulab import numerical\n",
+     "from ulab import vector\n",
+     "\n",
+     "def dummy_adc():\n",
+     "    # dummy adc function, so that the results are reproducible\n",
+     "    return 2\n",
+     "    \n",
+     "n = 10\n",
+     "# These are the normalised weights; the last entry is the most dominant\n",
+     "weight = vector.exp([1, 2, 3, 4, 5])\n",
+     "weight = weight/numerical.sum(weight)\n",
+     "\n",
+     "print(weight)\n",
+     "# initial array of samples\n",
+     "samples = np.array([0]*n)\n",
+     "\n",
+     "for i in range(n):\n",
+     "    # a new datum is inserted on the right hand side. This simply overwrites whatever was in the last slot\n",
+     "    samples[-1] = dummy_adc()\n",
+     "    print(numerical.mean(samples[-5:]*weight))\n",
+     "    print(samples[-5:])\n",
+     "    # the data are shifted by one position to the left\n",
+     "    numerical.roll(samples, 1)"
+    ]
+   },
+   {
+    "cell_type": "markdown",
+    "metadata": {},
+    "source": [
+     "## flip\n",
+     "\n",
+     "`numpy`: https://docs.scipy.org/doc/numpy/reference/generated/numpy.flip.html\n",
+     "\n",
+     "The `flip` function takes one positional, an `ndarray`, and one keyword argument, `axis = None`, and reverses the order of elements along the given axis. If the keyword argument is `None`, the matrix' entries are flipped along all axes. `flip` returns a new copy of the array."
+    ]
+   },
+   {
+    "cell_type": "code",
+    "execution_count": 275,
+    "metadata": {
+     "ExecuteTime": {
+      "end_time": "2019-10-16T06:35:52.163725Z",
+      "start_time": "2019-10-16T06:35:52.149231Z"
+     }
+    },
+    "outputs": [
+     {
+      "name": "stdout",
+      "output_type": "stream",
+      "text": [
+       "a: \t array([1.0, 2.0, 3.0, 4.0, 5.0], dtype=float)\n",
+       "a flipped:\t array([5.0, 4.0, 3.0, 2.0, 1.0], dtype=float)\n",
+       "\n",
+       "a flipped horizontally\n",
+       " array([[3, 2, 1],\n",
+       "\t [6, 5, 4],\n",
+       "\t [9, 8, 7]], dtype=uint8)\n",
+       "\n",
+       "a flipped vertically\n",
+       " array([[7, 8, 9],\n",
+       "\t [4, 5, 6],\n",
+       "\t [1, 2, 3]], dtype=uint8)\n",
+       "\n",
+       "a flipped horizontally+vertically\n",
+       " array([[9, 8, 7],\n",
+       "\t [6, 5, 4],\n",
+       "\t [3, 2, 1]], dtype=uint8)\n",
+       "\n",
+       "\n"
+      ]
+     }
+    ],
+    "source": [
+     "%%micropython -unix 1\n",
+     "\n",
+     "import ulab as np\n",
+     "from ulab import numerical\n",
+     "\n",
+     "a = np.array([1, 2, 3, 4, 5])\n",
+     "print(\"a: \\t\", a)\n",
+     "print(\"a flipped:\\t\", np.flip(a))\n",
+     "\n",
+     "a = np.array([[1, 2, 3], [4, 5, 6], [7, 8, 9]], dtype=np.uint8)\n",
+     "print(\"\\na flipped horizontally\\n\", numerical.flip(a, axis=1))\n",
+     "print(\"\\na flipped vertically\\n\", numerical.flip(a, axis=0))\n",
+     "print(\"\\na flipped horizontally+vertically\\n\", numerical.flip(a))"
+    ]
+   },
+   {
+    "cell_type": "markdown",
+    "metadata": {},
+    "source": [
+     "## diff\n",
+     "\n",
+     "`numpy`: https://docs.scipy.org/doc/numpy/reference/generated/numpy.diff.html\n",
+     "\n",
+     "The `diff` function returns the numerical derivative of the forward scheme, or more accurately, the differences of an `ndarray` along a given axis. The order of derivative can be stipulated with the `n` keyword argument, which should be between 0, and 9. Default is 1. If higher order derivatives are required, they can be gotten by repeated calls to the function. The `axis` keyword argument should  be -1 (last axis, in `ulab` equivalent to the second axis, and this also happens to be the default value), 0, or 1. \n",
+     "\n",
+     "Beyond the output array, the function requires only a couple of bytes of extra RAM for the differentiation stencil. (The stencil is an `int8` array, one byte longer than `n`. This also explains, why the highest order is 9: the coefficients of a ninth-order stencil all fit in signed bytes, while 10 would require `int16`.) Note that as usual in numerical differentiation (and also in `numpy`), the length of the respective axis will be reduced by `n` after the operation. If `n` is larger than, or equal to the length of the axis, an empty array will be returned.\n",
+     "\n",
+     "**WARNING**: the `diff` function does not implement the `prepend` and `append` keywords that can be found in `numpy`. "
+    ]
+   },
+   {
+    "cell_type": "code",
+    "execution_count": 169,
+    "metadata": {
+     "ExecuteTime": {
+      "end_time": "2019-10-31T11:51:02.854338Z",
+      "start_time": "2019-10-31T11:51:02.838000Z"
+     }
+    },
+    "outputs": [
+     {
+      "name": "stdout",
+      "output_type": "stream",
+      "text": [
+       "a:\n",
+       " array([0, 1, 2, 3, 4, 5, 6, 7, 8], dtype=uint8)\n",
+       "\n",
+       "first derivative:\n",
+       " array([1, 1, 1, 1, 1, 1, 1, 1], dtype=uint8)\n",
+       "\n",
+       "second derivative:\n",
+       " array([0, 0, 0, 0, 0, 0, 0], dtype=uint8)\n",
+       "\n",
+       "c:\n",
+       " array([[1.0, 2.0, 3.0, 4.0],\n",
+       "\t [4.0, 3.0, 2.0, 1.0],\n",
+       "\t [1.0, 4.0, 9.0, 16.0],\n",
+       "\t [0.0, 0.0, 0.0, 0.0]], dtype=float)\n",
+       "\n",
+       "first derivative, first axis:\n",
+       " array([[3.0, 1.0, -1.0, -3.0],\n",
+       "\t [-3.0, 1.0, 7.0, 15.0],\n",
+       "\t [-1.0, -4.0, -9.0, -16.0]], dtype=float)\n",
+       "\n",
+       "first derivative, second axis:\n",
+       " array([[1.0, 1.0, 1.0],\n",
+       "\t [-1.0, -1.0, -1.0],\n",
+       "\t [3.0, 5.0, 7.0],\n",
+       "\t [0.0, 0.0, 0.0]], dtype=float)\n",
+       "\n",
+       "\n"
+      ]
+     }
+    ],
+    "source": [
+     "%%micropython -unix 1\n",
+     "\n",
+     "import ulab as np\n",
+     "from ulab import numerical\n",
+     "\n",
+     "a = np.array(range(9), dtype=np.uint8)\n",
+     "print('a:\\n', a)\n",
+     "\n",
+     "print('\\nfirst derivative:\\n', numerical.diff(a, n=1))\n",
+     "print('\\nsecond derivative:\\n', numerical.diff(a, n=2))\n",
+     "\n",
+     "c = np.array([[1, 2, 3, 4], [4, 3, 2, 1], [1, 4, 9, 16], [0, 0, 0, 0]])\n",
+     "print('\\nc:\\n', c)\n",
+     "print('\\nfirst derivative, first axis:\\n', numerical.diff(c, axis=0))\n",
+     "print('\\nfirst derivative, second axis:\\n', numerical.diff(c, axis=1))"
+    ]
+   },
+   {
+    "cell_type": "markdown",
+    "metadata": {},
+    "source": [
+     "## sort\n",
+     "\n",
+     "`numpy`: https://docs.scipy.org/doc/numpy/reference/generated/numpy.sort.html\n",
+     "\n",
+     "The sort function takes an ndarray, and sorts its elements in ascending order along the specified axis using a heap sort algorithm. As opposed to the `.sort()` method discussed earlier, this function creates a copy of its input before sorting, and at the end, returns this copy. Sorting takes place in place, without auxiliary storage. The `axis` keyword argument takes on the possible values of -1 (the last axis, in `ulab` equivalent to the second axis, and this also happens to be the default value), 0, 1, or `None`. The first three cases are identical to those in [diff](#diff), while the last one flattens the array before sorting. \n",
+     "\n",
+     "If descending order is required, the result can simply be `flip`ped, see [flip](#flip).\n",
+     "\n",
+     "**WARNING:** `numpy` defines the `kind`, and `order` keyword arguments that are not implemented here. The function in `ulab` always uses heap sort, and since `ulab` does not have the concept of data fields, the `order` keyword argument would have no meaning."
+    ]
+   },
+   {
+    "cell_type": "code",
+    "execution_count": 29,
+    "metadata": {
+     "ExecuteTime": {
+      "end_time": "2019-11-05T16:06:27.536193Z",
+      "start_time": "2019-11-05T16:06:27.521792Z"
+     }
+    },
+    "outputs": [
+     {
+      "name": "stdout",
+      "output_type": "stream",
+      "text": [
+       "\n",
+       "a:\n",
+       " array([[1.0, 12.0, 3.0, 0.0],\n",
+       "\t [5.0, 3.0, 4.0, 1.0],\n",
+       "\t [9.0, 11.0, 1.0, 8.0],\n",
+       "\t [7.0, 10.0, 0.0, 1.0]], dtype=float)\n",
+       "\n",
+       "a sorted along vertical axis:\n",
+       " array([[1.0, 3.0, 0.0, 0.0],\n",
+       "\t [5.0, 10.0, 1.0, 1.0],\n",
+       "\t [7.0, 11.0, 3.0, 1.0],\n",
+       "\t [9.0, 12.0, 4.0, 8.0]], dtype=float)\n",
+       "\n",
+       "a sorted along horizontal axis:\n",
+       " array([[0.0, 1.0, 3.0, 12.0],\n",
+       "\t [1.0, 3.0, 4.0, 5.0],\n",
+       "\t [1.0, 8.0, 9.0, 11.0],\n",
+       "\t [0.0, 1.0, 7.0, 10.0]], dtype=float)\n",
+       "\n",
+       "flattened a sorted:\n",
+       " array([0.0, 0.0, 1.0, ..., 10.0, 11.0, 12.0], dtype=float)\n",
+       "\n",
+       "\n"
+      ]
+     }
+    ],
+    "source": [
+     "%%micropython -unix 1\n",
+     "\n",
+     "import ulab as np\n",
+     "from ulab import numerical\n",
+     "\n",
+     "a = np.array([[1, 12, 3, 0], [5, 3, 4, 1], [9, 11, 1, 8], [7, 10, 0, 1]], dtype=np.float)\n",
+     "print('\\na:\\n', a)\n",
+     "b = numerical.sort(a, axis=0)\n",
+     "print('\\na sorted along vertical axis:\\n', b)\n",
+     "\n",
+     "c = numerical.sort(a, axis=1)\n",
+     "print('\\na sorted along horizontal axis:\\n', c)\n",
+     "\n",
+     "c = numerical.sort(a, axis=None)\n",
+     "print('\\nflattened a sorted:\\n', c)"
+    ]
+   },
+   {
+    "cell_type": "markdown",
+    "metadata": {},
+    "source": [
+     "Heap sort requires $\\sim N\\log N$ operations, and notably, the worst case costs only 20% more time than the average. In order to get an order-of-magnitude estimate, we will take the sine of 1000 uniformly spaced numbers between 0, and two pi, and sort them:"
+    ]
+   },
+   {
+    "cell_type": "code",
+    "execution_count": null,
+    "metadata": {},
+    "outputs": [],
+    "source": [
+     "%%micropython -pyboard 1\n",
+     "\n",
+     "import ulab as np\n",
+     "from ulab import vector\n",
+     "from ulab import numerical\n",
+     "\n",
+     "@timeit\n",
+     "def sort_time(array):\n",
+     "    return numerical.sort(array)\n",
+     "\n",
+     "b = vector.sin(np.linspace(0, 6.28, num=1000))\n",
+     "print('b: ', b)\n",
+     "sort_time(b)\n",
+     "print('\\nb sorted:\\n', b)"
+    ]
+   },
+   {
+    "cell_type": "markdown",
+    "metadata": {},
+    "source": [
+     "## argsort\n",
+     "\n",
+     "`numpy`: https://docs.scipy.org/doc/numpy/reference/generated/numpy.argsort.html\n",
+     "\n",
+     "Similarly to [sort](#sort), `argsort` takes a positional, and a keyword argument, and returns an unsigned short index array of type `ndarray` with the same dimensions as the input, or, if `axis=None`, as a row vector with length equal to the number of elements in the input (i.e., the flattened array). The indices in the output sort the input in ascending order. The routine in `argsort` is the same as in `sort`, therefore, the comments on computational expenses (time and RAM) also apply. In particular, since no copy of the original data is required, virtually no RAM beyond the output array is used. \n",
+     "\n",
+     "Since the underlying container of the output array is of type `uint16_t`, neither of the output dimensions should be larger than 65535."
+    ]
+   },
+   {
+    "cell_type": "code",
+    "execution_count": 30,
+    "metadata": {
+     "ExecuteTime": {
+      "end_time": "2019-11-06T06:28:45.719578Z",
+      "start_time": "2019-11-06T06:28:45.704072Z"
+     }
+    },
+    "outputs": [
+     {
+      "name": "stdout",
+      "output_type": "stream",
+      "text": [
+       "\n",
+       "a:\n",
+       " array([[1.0, 12.0, 3.0, 0.0],\n",
+       "\t [5.0, 3.0, 4.0, 1.0],\n",
+       "\t [9.0, 11.0, 1.0, 8.0],\n",
+       "\t [7.0, 10.0, 0.0, 1.0]], dtype=float)\n",
+       "\n",
+       "a sorted along vertical axis:\n",
+       " array([[0, 1, 3, 0],\n",
+       "\t [1, 3, 2, 1],\n",
+       "\t [3, 2, 0, 3],\n",
+       "\t [2, 0, 1, 2]], dtype=uint16)\n",
+       "\n",
+       "a sorted along horizontal axis:\n",
+       " array([[3, 0, 2, 1],\n",
+       "\t [3, 1, 2, 0],\n",
+       "\t [2, 3, 0, 1],\n",
+       "\t [2, 3, 0, 1]], dtype=uint16)\n",
+       "\n",
+       "flattened a sorted:\n",
+       " array([3, 14, 0, ..., 13, 9, 1], dtype=uint16)\n",
+       "\n",
+       "\n"
+      ]
+     }
+    ],
+    "source": [
+     "%%micropython -unix 1\n",
+     "\n",
+     "import ulab as np\n",
+     "from ulab import numerical\n",
+     "\n",
+     "a = np.array([[1, 12, 3, 0], [5, 3, 4, 1], [9, 11, 1, 8], [7, 10, 0, 1]], dtype=np.float)\n",
+     "print('\\na:\\n', a)\n",
+     "b = numerical.argsort(a, axis=0)\n",
+     "print('\\na sorted along vertical axis:\\n', b)\n",
+     "\n",
+     "c = numerical.argsort(a, axis=1)\n",
+     "print('\\na sorted along horizontal axis:\\n', c)\n",
+     "\n",
+     "c = numerical.argsort(a, axis=None)\n",
+     "print('\\nflattened a sorted:\\n', c)"
+    ]
+   },
+   {
+    "cell_type": "markdown",
+    "metadata": {},
+    "source": [
+     "Since during the sorting, only the indices are shuffled, `argsort` does not modify the input array, as one can verify this by the following example:"
+    ]
+   },
+   {
+    "cell_type": "code",
+    "execution_count": 33,
+    "metadata": {
+     "ExecuteTime": {
+      "end_time": "2019-11-06T16:04:31.653444Z",
+      "start_time": "2019-11-06T16:04:31.634995Z"
+     }
+    },
+    "outputs": [
+     {
+      "name": "stdout",
+      "output_type": "stream",
+      "text": [
+       "\n",
+       "a:\n",
+       " array([0, 5, 1, 3, 2, 4], dtype=uint8)\n",
+       "\n",
+       "sorting indices:\n",
+       " array([0, 2, 4, 3, 5, 1], dtype=uint16)\n",
+       "\n",
+       "the original array:\n",
+       " array([0, 5, 1, 3, 2, 4], dtype=uint8)\n",
+       "\n",
+       "\n"
+      ]
+     }
+    ],
+    "source": [
+     "%%micropython -unix 1\n",
+     "\n",
+     "import ulab as np\n",
+     "from ulab import numerical\n",
+     "\n",
+     "a = np.array([0, 5, 1, 3, 2, 4], dtype=np.uint8)\n",
+     "print('\\na:\\n', a)\n",
+     "b = numerical.argsort(a, axis=1)\n",
+     "print('\\nsorting indices:\\n', b)\n",
+     "print('\\nthe original array:\\n', a)"
+    ]
+   },
+   {
+    "cell_type": "markdown",
+    "metadata": {},
+    "source": [
+     "# Linalg\n",
+     "\n",
+     "Functions in the `linalg` module can be called by importing the sub-module first."
+    ]
+   },
+   {
+    "cell_type": "markdown",
+    "metadata": {},
+    "source": [
+     "## size\n",
+     "\n",
+     "`size` takes a single argument, the axis, whose size is to be returned. Depending on the value of the argument, the following information will be returned:\n",
+     "\n",
+     "1. argument is 0: the number of elements of the array\n",
+     "2. argument is 1: the number of rows\n",
+     "3. argument is 2: the number of columns"
+    ]
+   },
+   {
+    "cell_type": "code",
+    "execution_count": 321,
+    "metadata": {
+     "ExecuteTime": {
+      "end_time": "2019-10-16T17:47:38.439137Z",
+      "start_time": "2019-10-16T17:47:38.422003Z"
+     }
+    },
+    "outputs": [
+     {
+      "name": "stdout",
+      "output_type": "stream",
+      "text": [
+       "a:\n",
+       " array([1, 2, 3, 4], dtype=int8)\n",
+       "size of a: 4 , 4\n",
+       "\n",
+       "b:\n",
+       " array([[1, 2],\n",
+       "\t [3, 4]], dtype=int8)\n",
+       "size of b: 4 , 2 , 2\n",
+       "\n",
+       "\n"
+      ]
+     }
+    ],
+    "source": [
+     "%%micropython -unix 1\n",
+     "\n",
+     "import ulab as np\n",
+     "from ulab import linalg\n",
+     "\n",
+     "a = np.array([1, 2, 3, 4], dtype=np.int8)\n",
+     "print(\"a:\\n\", a)\n",
+     "print(\"size of a:\", linalg.size(a, axis=None), \",\", linalg.size(a, axis=0))\n",
+     "\n",
+     "b= np.array([[1, 2], [3, 4]], dtype=np.int8)\n",
+     "print(\"\\nb:\\n\", b)\n",
+     "print(\"size of b:\", linalg.size(b, axis=None), \",\", linalg.size(b, axis=0), \",\", linalg.size(b, axis=1))"
+    ]
+   },
+   {
+    "cell_type": "markdown",
+    "metadata": {},
+    "source": [
+     "## inv\n",
+     "\n",
+     "`numpy`: https://docs.scipy.org/doc/numpy-1.17.0/reference/generated/numpy.linalg.inv.html\n",
+     "\n",
+     "A square matrix, provided that it is not singular, can be inverted by calling the `inv` function that takes a single argument. The inversion is based on successive elimination of elements in the lower left triangle, and raises a `ValueError` exception, if the matrix turns out to be singular (i.e., one of the diagonal entries is zero)."
+    ]
+   },
+   {
+    "cell_type": "code",
+    "execution_count": 538,
+    "metadata": {
+     "ExecuteTime": {
+      "end_time": "2019-10-20T06:55:25.025726Z",
+      "start_time": "2019-10-20T06:55:24.982557Z"
+     }
+    },
+    "outputs": [
+     {
+      "name": "stdout",
+      "output_type": "stream",
+      "text": [
+       "array([[-2.166666, 1.499999, -0.8333326, 1.0],\n",
+       "\t [1.666666, -3.333331, 1.666666, -4.768516e-08],\n",
+       "\t [0.1666672, 2.166666, -0.8333327, -1.0],\n",
+       "\t [-0.1666666, -0.3333334, 4.96705e-08, 0.5]], dtype=float)\n",
+       "\n"
+      ]
+     }
+    ],
+    "source": [
+     "%%micropython -pyboard 1\n",
+     "\n",
+     "import ulab as np\n",
+     "from ulab import linalg\n",
+     "\n",
+     "m = np.array([[1, 2, 3, 4], [4, 5, 6, 4], [7, 8.6, 9, 4], [3, 4, 5, 6]])\n",
+     "\n",
+     "print(linalg.inv(m))"
+    ]
+   },
+   {
+    "cell_type": "markdown",
+    "metadata": {},
+    "source": [
+     "### Computation expenses\n",
+     "\n",
+     "Note that the cost of inverting a matrix is approximately twice as many floats (RAM), as the number of entries in the original matrix, and approximately as many operations, as the number of entries. Here are a couple of numbers: "
+    ]
+   },
+   {
+    "cell_type": "code",
+    "execution_count": 552,
+    "metadata": {
+     "ExecuteTime": {
+      "end_time": "2019-10-20T07:10:39.190734Z",
+      "start_time": "2019-10-20T07:10:39.138872Z"
+     }
+    },
+    "outputs": [
+     {
+      "name": "stdout",
+      "output_type": "stream",
+      "text": [
+       "2 by 2 matrix:\n",
+       "execution time:  65  us\n",
+       "\n",
+       "4 by 4 matrix:\n",
+       "execution time:  105  us\n",
+       "\n",
+       "8 by 8 matrix:\n",
+       "execution time:  299  us\n",
+       "\n"
+      ]
+     }
+    ],
+    "source": [
+     "%%micropython -pyboard 1\n",
+     "\n",
+     "import ulab as np\n",
+     "from ulab import linalg\n",
+     "\n",
+     "@timeit\n",
+     "def invert_matrix(m):\n",
+     "    return linalg.inv(m)\n",
+     "\n",
+     "m = np.array([[1, 2,], [4, 5]])\n",
+     "print('2 by 2 matrix:')\n",
+     "invert_matrix(m)\n",
+     "\n",
+     "m = np.array([[1, 2, 3, 4], [4, 5, 6, 4], [7, 8.6, 9, 4], [3, 4, 5, 6]])\n",
+     "print('\\n4 by 4 matrix:')\n",
+     "invert_matrix(m)\n",
+     "\n",
+     "m = np.array([[1, 2, 3, 4, 5, 6, 7, 8], [0, 5, 6, 4, 5, 6, 4, 5], \n",
+     "              [0, 0, 9, 7, 8, 9, 7, 8], [0, 0, 0, 10, 11, 12, 11, 12], \n",
+     "             [0, 0, 0, 0, 4, 6, 7, 8], [0, 0, 0, 0, 0, 5, 6, 7], \n",
+     "             [0, 0, 0, 0, 0, 0, 7, 6], [0, 0, 0, 0, 0, 0, 0, 2]])\n",
+     "print('\\n8 by 8 matrix:')\n",
+     "invert_matrix(m)"
+    ]
+   },
+   {
+    "cell_type": "markdown",
+    "metadata": {},
+    "source": [
+     "The above-mentioned scaling is not obeyed strictly. The reason for the discrepancy is that the function call is still the same for all three cases: the input must be inspected, the output array must be created, and so on. "
+    ]
+   },
+   {
+    "cell_type": "markdown",
+    "metadata": {},
+    "source": [
+     "## dot\n",
+     "\n",
+     "`numpy`: https://docs.scipy.org/doc/numpy/reference/generated/numpy.dot.html\n",
+     "\n",
+     "\n",
+     "**WARNING:** numpy applies upcasting rules for the multiplication of matrices, while `ulab` simply returns a float matrix. \n",
+     "\n",
+     "Once you can invert a matrix, you might want to know, whether the inversion is correct. You can simply take the original matrix and its inverse, and multiply them by calling the `dot` function, which takes the two matrices as its arguments. If the matrix dimensions do not match, the function raises a `ValueError`. The result of the multiplication is expected to be the unit matrix, which is demonstrated below."
+    ]
+   },
+   {
+    "cell_type": "code",
+    "execution_count": 556,
+    "metadata": {
+     "ExecuteTime": {
+      "end_time": "2019-10-20T07:13:30.102776Z",
+      "start_time": "2019-10-20T07:13:30.073704Z"
+     }
+    },
+    "outputs": [
+     {
+      "name": "stdout",
+      "output_type": "stream",
+      "text": [
+       "m:\n",
+       " array([[1, 2, 3],\n",
+       "\t [4, 5, 6],\n",
+       "\t [7, 10, 9]], dtype=uint8)\n",
+       "\n",
+       "m^-1:\n",
+       " array([[-1.25, 1.0, -0.25],\n",
+       "\t [0.5, -1.0, 0.5],\n",
+       "\t [0.4166667, 0.3333334, -0.25]], dtype=float)\n",
+       "\n",
+       "m*m^-1:\n",
+       " array([[1.0, 2.384186e-07, -1.490116e-07],\n",
+       "\t [-2.980232e-07, 1.000001, -4.172325e-07],\n",
+       "\t [-3.278255e-07, 1.311302e-06, 0.9999992]], dtype=float)\n",
+       "\n"
+      ]
+     }
+    ],
+    "source": [
+     "%%micropython -pyboard 1\n",
+     "\n",
+     "import ulab as np\n",
+     "from ulab import linalg\n",
+     "\n",
+     "m = np.array([[1, 2, 3], [4, 5, 6], [7, 10, 9]], dtype=np.uint8)\n",
+     "n = linalg.inv(m)\n",
+     "print(\"m:\\n\", m)\n",
+     "print(\"\\nm^-1:\\n\", n)\n",
+     "# this should be the unit matrix\n",
+     "print(\"\\nm*m^-1:\\n\", linalg.dot(m, n))"
+    ]
+   },
+   {
+    "cell_type": "markdown",
+    "metadata": {},
+    "source": [
+     "Note that for matrix multiplication you don't necessarily need square matrices, it is enough, if their dimensions are compatible (i.e., the the left-hand-side matrix has as many columns, as does the right-hand-side matrix rows):"
+    ]
+   },
+   {
+    "cell_type": "code",
+    "execution_count": 37,
+    "metadata": {
+     "ExecuteTime": {
+      "end_time": "2019-10-10T17:33:17.921324Z",
+      "start_time": "2019-10-10T17:33:17.900587Z"
+     }
+    },
+    "outputs": [
+     {
+      "name": "stdout",
+      "output_type": "stream",
+      "text": [
+       "array([[1, 2, 3, 4],\n",
+       "\t [5, 6, 7, 8]], dtype=uint8)\n",
+       "array([[1, 2],\n",
+       "\t [3, 4],\n",
+       "\t [5, 6],\n",
+       "\t [7, 8]], dtype=uint8)\n",
+       "array([[7.0, 10.0],\n",
+       "\t [23.0, 34.0]], dtype=float)\n",
+       "\n",
+       "\n"
+      ]
+     }
+    ],
+    "source": [
+     "%%micropython -unix 1\n",
+     "\n",
+     "import ulab as np\n",
+     "from ulab import linalg\n",
+     "\n",
+     "m = np.array([[1, 2, 3, 4], [5, 6, 7, 8]], dtype=np.uint8)\n",
+     "n = np.array([[1, 2], [3, 4], [5, 6], [7, 8]], dtype=np.uint8)\n",
+     "print(m)\n",
+     "print(n)\n",
+     "print(linalg.dot(m, n))"
+    ]
+   },
+   {
+    "cell_type": "markdown",
+    "metadata": {},
+    "source": [
+     "## det\n",
+     "\n",
+     "`numpy`: https://docs.scipy.org/doc/numpy/reference/generated/numpy.linalg.det.html\n",
+     "\n",
+     "The `det` function takes a square matrix as its single argument, and calculates the determinant. The calculation is based on successive elimination of the matrix elements, and the return value is a float, even if the input array was of integer type."
+    ]
+   },
+   {
+    "cell_type": "code",
+    "execution_count": 495,
+    "metadata": {
+     "ExecuteTime": {
+      "end_time": "2019-10-19T13:27:24.246995Z",
+      "start_time": "2019-10-19T13:27:24.228698Z"
+     }
+    },
+    "outputs": [
+     {
+      "name": "stdout",
+      "output_type": "stream",
+      "text": [
+       "-2.0\n",
+       "\n"
+      ]
+     }
+    ],
+    "source": [
+     "%%micropython -pyboard 1\n",
+     "\n",
+     "import ulab as np\n",
+     "from ulab import linalg\n",
+     "\n",
+     "a = np.array([[1, 2], [3, 4]], dtype=np.uint8)\n",
+     "print(linalg.det(a))"
+    ]
+   },
+   {
+    "cell_type": "markdown",
+    "metadata": {},
+    "source": [
+     "### Benchmark\n",
+     "\n",
+     "Since the routine for calculating the determinant is pretty much the same as for finding the [inverse of a matrix](#inv), the execution times are similar:"
+    ]
+   },
+   {
+    "cell_type": "code",
+    "execution_count": 557,
+    "metadata": {
+     "ExecuteTime": {
+      "end_time": "2019-10-20T07:14:59.778987Z",
+      "start_time": "2019-10-20T07:14:59.740021Z"
+     }
+    },
+    "outputs": [
+     {
+      "name": "stdout",
+      "output_type": "stream",
+      "text": [
+       "execution time:  294  us\n",
+       "\n"
+      ]
+     }
+    ],
+    "source": [
+     "%%micropython -pyboard 1\n",
+     "\n",
+     "@timeit\n",
+     "def matrix_det(m):\n",
+     "    return linalg.inv(m)\n",
+     "\n",
+     "m = np.array([[1, 2, 3, 4, 5, 6, 7, 8], [0, 5, 6, 4, 5, 6, 4, 5], \n",
+     "              [0, 0, 9, 7, 8, 9, 7, 8], [0, 0, 0, 10, 11, 12, 11, 12], \n",
+     "             [0, 0, 0, 0, 4, 6, 7, 8], [0, 0, 0, 0, 0, 5, 6, 7], \n",
+     "             [0, 0, 0, 0, 0, 0, 7, 6], [0, 0, 0, 0, 0, 0, 0, 2]])\n",
+     "\n",
+     "matrix_det(m)"
+    ]
+   },
+   {
+    "cell_type": "markdown",
+    "metadata": {},
+    "source": [
+     "## eig\n",
+     "\n",
+     "`numpy`: https://docs.scipy.org/doc/numpy/reference/generated/numpy.linalg.eig.html\n",
+     "\n",
+     "The `eig` function calculates the eigenvalues and the eigenvectors of a real, symmetric square matrix. If the matrix is not symmetric, a `ValueError` will be raised. The function takes a single argument, and returns a tuple with the eigenvalues, and eigenvectors. With the help of the eigenvectors, amongst other things, you can implement sophisticated stabilisation routines for robots."
+    ]
+   },
+   {
+    "cell_type": "code",
+    "execution_count": 496,
+    "metadata": {
+     "ExecuteTime": {
+      "end_time": "2019-10-19T13:27:30.977472Z",
+      "start_time": "2019-10-19T13:27:30.943326Z"
+     }
+    },
+    "outputs": [
+     {
+      "name": "stdout",
+      "output_type": "stream",
+      "text": [
+       "eigenvectors of a:\n",
+       " array([-1.165288, 0.8029362, 5.585626, 13.77673], dtype=float)\n",
+       "\n",
+       "eigenvalues of a:\n",
+       " array([[0.8151754, -0.4499267, -0.1643907, 0.3256237],\n",
+       "\t [0.2211193, 0.7847154, 0.08373602, 0.5729892],\n",
+       "\t [-0.1340859, -0.3100657, 0.8742685, 0.3486182],\n",
+       "\t [-0.5182822, -0.2926556, -0.4490192, 0.6664218]], dtype=float)\n",
+       "\n"
+      ]
+     }
+    ],
+    "source": [
+     "%%micropython -pyboard 1\n",
+     "\n",
+     "import ulab as np\n",
+     "from ulab import linalg\n",
+     "\n",
+     "a = np.array([[1, 2, 1, 4], [2, 5, 3, 5], [1, 3, 6, 1], [4, 5, 1, 7]], dtype=np.uint8)\n",
+     "x, y = linalg.eig(a)\n",
+     "print('eigenvectors of a:\\n', x)\n",
+     "print('\\neigenvalues of a:\\n', y)"
+    ]
+   },
+   {
+    "cell_type": "markdown",
+    "metadata": {},
+    "source": [
+     "The same matrix diagonalised with `numpy` yields:"
+    ]
+   },
+   {
+    "cell_type": "code",
+    "execution_count": 389,
+    "metadata": {
+     "ExecuteTime": {
+      "end_time": "2019-10-19T09:47:46.835349Z",
+      "start_time": "2019-10-19T09:47:46.785592Z"
+     }
+    },
+    "outputs": [
+     {
+      "name": "stdout",
+      "output_type": "stream",
+      "text": [
+       "eigenvectors of a:\n",
+       " [13.77672606 -1.16528837  0.80293655  5.58562576]\n",
+       "\n",
+       "eigenvalues of a:\n",
+       " [[ 0.32561419  0.815156    0.44994112 -0.16446602]\n",
+       " [ 0.57300777  0.22113342 -0.78469926  0.08372081]\n",
+       " [ 0.34861093 -0.13401142  0.31007764  0.87427868]\n",
+       " [ 0.66641421 -0.51832581  0.29266348 -0.44897499]]\n"
+      ]
+     }
+    ],
+    "source": [
+     "a = array([[1, 2, 1, 4], [2, 5, 3, 5], [1, 3, 6, 1], [4, 5, 1, 7]], dtype=np.uint8)\n",
+     "x, y = eig(a)\n",
+     "print('eigenvectors of a:\\n', x)\n",
+     "print('\\neigenvalues of a:\\n', y)"
+    ]
+   },
+   {
+    "cell_type": "markdown",
+    "metadata": {},
+    "source": [
+     "When comparing results, we should keep two things in mind: \n",
+     "\n",
+     "1. the eigenvalues and eigenvectors are not necessarily sorted in the same way\n",
+     "2. an eigenvector can be multiplied by an arbitrary non-zero scalar, and it is still an eigenvector with the same eigenvalue. This is why all signs of the eigenvector belonging to 5.58, and 0.80 are flipped in `ulab` with respect to `numpy`. This difference, however, is of absolutely no consequence. "
+    ]
+   },
+   {
+    "cell_type": "markdown",
+    "metadata": {},
+    "source": [
+     "### Computation expenses\n",
+     "\n",
+     "Since the function is based on [Givens rotations](https://en.wikipedia.org/wiki/Givens_rotation) and runs till convergence is achieved, or till the maximum number of allowed rotations is exhausted, there is no universal estimate for the time required to find the eigenvalues. However, an order of magnitude can, at least, be guessed based on the measurement below:"
+    ]
+   },
+   {
+    "cell_type": "code",
+    "execution_count": 559,
+    "metadata": {
+     "ExecuteTime": {
+      "end_time": "2019-10-20T07:18:52.520515Z",
+      "start_time": "2019-10-20T07:18:52.499653Z"
+     }
+    },
+    "outputs": [
+     {
+      "name": "stdout",
+      "output_type": "stream",
+      "text": [
+       "execution time:  111  us\n",
+       "\n"
+      ]
+     }
+    ],
+    "source": [
+     "%%micropython -pyboard 1\n",
+     "\n",
+     "import ulab as np\n",
+     "from ulab import linalg\n",
+     "\n",
+     "@timeit\n",
+     "def matrix_eig(a):\n",
+     "    return linalg.eig(a)\n",
+     "\n",
+     "a = np.array([[1, 2, 1, 4], [2, 5, 3, 5], [1, 3, 6, 1], [4, 5, 1, 7]], dtype=np.uint8)\n",
+     "\n",
+     "matrix_eig(a)"
+    ]
+   },
+   {
+    "cell_type": "markdown",
+    "metadata": {},
+    "source": [
+     "## Cholesky decomposition\n",
+     "\n",
+     "`numpy`: https://docs.scipy.org/doc/numpy-1.17.0/reference/generated/numpy.linalg.cholesky.html\n",
+     "\n",
+     "`cholesky` takes a positive definite, symmetric square matrix as its single argument, and returns *square root matrix* in the lower triangular form. If the input argument does not fulfill the positivity or symmetry condition, a `ValueError` is raised."
+    ]
+   },
+   {
+    "cell_type": "code",
+    "execution_count": 18,
+    "metadata": {
+     "ExecuteTime": {
+      "end_time": "2020-03-10T19:25:21.754166Z",
+      "start_time": "2020-03-10T19:25:21.740726Z"
+     }
+    },
+    "outputs": [
+     {
+      "name": "stdout",
+      "output_type": "stream",
+      "text": [
+       "a:  array([[25.0, 15.0, -5.0],\n",
+       "\t [15.0, 18.0, 0.0],\n",
+       "\t [-5.0, 0.0, 11.0]], dtype=float)\n",
+       "\n",
+       "====================\n",
+       "Cholesky decomposition\n",
+       " array([[5.0, 0.0, 0.0],\n",
+       "\t [3.0, 3.0, 0.0],\n",
+       "\t [-1.0, 1.0, 3.0]], dtype=float)\n",
+       "\n",
+       "\n"
+      ]
+     }
+    ],
+    "source": [
+     "%%micropython -unix 1\n",
+     "\n",
+     "import ulab\n",
+     "from ulab import linalg\n",
+     "\n",
+     "a = ulab.array([[25, 15, -5], [15, 18,  0], [-5,  0, 11]])\n",
+     "print('a: ', a)\n",
+     "print('\\n' + '='*20 + '\\nCholesky decomposition\\n', linalg.cholesky(a))"
+    ]
+   },
+   {
+    "cell_type": "markdown",
+    "metadata": {},
+    "source": [
+     "## trace\n",
+     "\n",
+     "`numpy`: https://docs.scipy.org/doc/numpy-1.17.0/reference/generated/numpy.linalg.trace.html\n",
+     "\n",
+     "The `trace` function returns the sum of the diagonal elements of a square matrix. If the input argument is not a square matrix, an exception will be raised.\n",
+     "\n",
+     "The scalar so returned will inherit the type of the input array, i.e., integer arrays have integer trace, and floating point arrays a floating point trace."
+    ]
+   },
+   {
+    "cell_type": "code",
+    "execution_count": 16,
+    "metadata": {},
+    "outputs": [
+     {
+      "name": "stdout",
+      "output_type": "stream",
+      "text": [
+       "a:  array([[25, 15, -5],\n",
+       "\t [15, 18, 0],\n",
+       "\t [-5, 0, 11]], dtype=int8)\n",
+       "\n",
+       "trace of a:  54\n",
+       "====================\n",
+       "b:  array([[25.0, 15.0, -5.0],\n",
+       "\t [15.0, 18.0, 0.0],\n",
+       "\t [-5.0, 0.0, 11.0]], dtype=float)\n",
+       "\n",
+       "trace of b:  54.0\n",
+       "\n",
+       "\n"
+      ]
+     }
+    ],
+    "source": [
+     "%%micropython -unix 1\n",
+     "\n",
+     "import ulab\n",
+     "from ulab import linalg\n",
+     "\n",
+     "a = ulab.array([[25, 15, -5], [15, 18,  0], [-5,  0, 11]], dtype=ulab.int8)\n",
+     "print('a: ', a)\n",
+     "print('\\ntrace of a: ', linalg.trace(a))\n",
+     "\n",
+     "b = ulab.array([[25, 15, -5], [15, 18,  0], [-5,  0, 11]], dtype=ulab.float)\n",
+     "\n",
+     "print('='*20 + '\\nb: ', b)\n",
+     "print('\\ntrace of b: ', linalg.trace(b))"
+    ]
+   },
+   {
+    "cell_type": "markdown",
+    "metadata": {},
+    "source": [
+     "# Polynomials\n",
+     "\n",
+     "Functions in the polynomial sub-module can be invoked by importing the module first."
+    ]
+   },
+   {
+    "cell_type": "markdown",
+    "metadata": {},
+    "source": [
+     "## polyval\n",
+     "\n",
+     "`numpy`: https://docs.scipy.org/doc/numpy/reference/generated/numpy.polyval.html\n",
+     "\n",
+     "`polyval` takes two arguments, both arrays or other iterables."
+    ]
+   },
+   {
+    "cell_type": "code",
+    "execution_count": 187,
+    "metadata": {
+     "ExecuteTime": {
+      "end_time": "2019-11-01T12:53:22.448303Z",
+      "start_time": "2019-11-01T12:53:22.435176Z"
+     }
+    },
+    "outputs": [
+     {
+      "name": "stdout",
+      "output_type": "stream",
+      "text": [
+       "coefficients:  [1, 1, 1, 0]\n",
+       "independent values:  [0, 1, 2, 3, 4]\n",
+       "\n",
+       "values of p(x):  array([0.0, 3.0, 14.0, 39.0, 84.0], dtype=float)\n",
+       "\n",
+       "ndarray (a):  array([0.0, 1.0, 2.0, 3.0, 4.0], dtype=float)\n",
+       "value of p(a):  array([0.0, 3.0, 14.0, 39.0, 84.0], dtype=float)\n",
+       "\n",
+       "\n"
+      ]
+     }
+    ],
+    "source": [
+     "%%micropython -unix 1\n",
+     "\n",
+     "import ulab as np\n",
+     "from ulab import poly\n",
+     "\n",
+     "p = [1, 1, 1, 0]\n",
+     "x = [0, 1, 2, 3, 4]\n",
+     "print('coefficients: ', p)\n",
+     "print('independent values: ', x)\n",
+     "print('\\nvalues of p(x): ', poly.polyval(p, x))\n",
+     "\n",
+     "# the same works with one-dimensional ndarrays\n",
+     "a = np.array(x)\n",
+     "print('\\nndarray (a): ', a)\n",
+     "print('value of p(a): ', poly.polyval(p, a))"
+    ]
+   },
+   {
+    "cell_type": "markdown",
+    "metadata": {},
+    "source": [
+     "## polyfit\n",
+     "\n",
+     "`numpy`: https://docs.scipy.org/doc/numpy/reference/generated/numpy.polyfit.html\n",
+     "\n",
+     "polyfit takes two, or three arguments. The last one is the degree of the polynomial that will be fitted, the last but one is an array or iterable with the `y` (dependent) values, and the first one, an array or iterable with the `x` (independent) values, can be dropped. If that is the case, `x` will be generated in the function, assuming uniform sampling. \n",
+     "\n",
+     "If the length of `x`, and `y` are not the same, the function raises a `ValueError`."
+    ]
+   },
+   {
+    "cell_type": "code",
+    "execution_count": 189,
+    "metadata": {
+     "ExecuteTime": {
+      "end_time": "2019-11-01T12:54:08.326802Z",
+      "start_time": "2019-11-01T12:54:08.311182Z"
+     }
+    },
+    "outputs": [
+     {
+      "name": "stdout",
+      "output_type": "stream",
+      "text": [
+       "independent values:\t array([0.0, 1.0, 2.0, 3.0, 4.0, 5.0, 6.0], dtype=float)\n",
+       "dependent values:\t array([9.0, 4.0, 1.0, 0.0, 1.0, 4.0, 9.0], dtype=float)\n",
+       "fitted values:\t\t array([1.0, -6.0, 9.000000000000004], dtype=float)\n",
+       "\n",
+       "dependent values:\t array([9.0, 4.0, 1.0, 0.0, 1.0, 4.0, 9.0], dtype=float)\n",
+       "fitted values:\t\t array([1.0, -6.0, 9.000000000000004], dtype=float)\n",
+       "\n",
+       "\n"
+      ]
+     }
+    ],
+    "source": [
+     "%%micropython -unix 1\n",
+     "\n",
+     "import ulab as np\n",
+     "from ulab import poly\n",
+     "\n",
+     "x = np.array([0, 1, 2, 3, 4, 5, 6])\n",
+     "y = np.array([9, 4, 1, 0, 1, 4, 9])\n",
+     "print('independent values:\\t', x)\n",
+     "print('dependent values:\\t', y)\n",
+     "print('fitted values:\\t\\t', poly.polyfit(x, y, 2))\n",
+     "\n",
+     "# the same with missing x\n",
+     "print('\\ndependent values:\\t', y)\n",
+     "print('fitted values:\\t\\t', poly.polyfit(y, 2))"
+    ]
+   },
+   {
+    "cell_type": "markdown",
+    "metadata": {},
+    "source": [
+     "### Execution time\n",
+     "\n",
+     "`polyfit` is based on the inversion of a matrix (there is more on the background in  https://en.wikipedia.org/wiki/Polynomial_regression), and it requires the intermediate storage of `2*N*(deg+1)` floats, where `N` is the number of entries in the input array, and `deg` is the fit's degree. The additional computation costs of the matrix inversion discussed in [inv](#inv) also apply. The example from above needs around 150 microseconds to return:"
+    ]
+   },
+   {
+    "cell_type": "code",
+    "execution_count": 560,
+    "metadata": {
+     "ExecuteTime": {
+      "end_time": "2019-10-20T07:24:39.002243Z",
+      "start_time": "2019-10-20T07:24:38.978687Z"
+     }
+    },
+    "outputs": [
+     {
+      "name": "stdout",
+      "output_type": "stream",
+      "text": [
+       "execution time:  153  us\n",
+       "\n"
+      ]
+     }
+    ],
+    "source": [
+     "%%micropython -pyboard 1\n",
+     "\n",
+     "import ulab as np\n",
+     "from ulab import poly\n",
+     "\n",
+     "@timeit\n",
+     "def time_polyfit(x, y, n):\n",
+     "    return poly.polyfit(x, y, n)\n",
+     "\n",
+     "x = np.array([0, 1, 2, 3, 4, 5, 6])\n",
+     "y = np.array([9, 4, 1, 0, 1, 4, 9])\n",
+     "\n",
+     "time_polyfit(x, y, 2)"
+    ]
+   },
+   {
+    "cell_type": "markdown",
+    "metadata": {},
+    "source": [
+     "# Fourier transforms\n",
+     "\n",
+     "Functions related to Fourier transforms can be called by importing the `fft` sub-module first.\n",
+     "\n",
+     "`numpy`: https://docs.scipy.org/doc/numpy/reference/generated/numpy.fft.ifft.html\n",
+     "\n",
+     "## fft\n",
+     "\n",
+     "Since `ulab`'s `ndarray` does not support complex numbers, the invocation of the Fourier transform differs from that in `numpy`. In `numpy`, you can simply pass an array or iterable to the function, and it will be treated as a complex array:"
+    ]
+   },
+   {
+    "cell_type": "code",
+    "execution_count": 341,
+    "metadata": {
+     "ExecuteTime": {
+      "end_time": "2019-10-17T17:33:38.487729Z",
+      "start_time": "2019-10-17T17:33:38.473515Z"
+     }
+    },
+    "outputs": [
+     {
+      "data": {
+       "text/plain": [
+        "array([20.+0.j,  0.+0.j, -4.+4.j,  0.+0.j, -4.+0.j,  0.+0.j, -4.-4.j,\n",
+        "        0.+0.j])"
+       ]
+      },
+      "execution_count": 341,
+      "metadata": {},
+      "output_type": "execute_result"
+     }
+    ],
+    "source": [
+     "fft.fft([1, 2, 3, 4, 1, 2, 3, 4])"
+    ]
+   },
+   {
+    "cell_type": "markdown",
+    "metadata": {},
+    "source": [
+     "**WARNING:** The array that is returned is also complex, i.e., the real and imaginary components are cast together. In `ulab`, the real and imaginary parts are treated separately: you have to pass two `ndarray`s to the function, although, the second argument is optional, in which case the imaginary part is assumed to be zero.\n",
+     "\n",
+     "**WARNING:** The function, as opposed to `numpy`, returns a 2-tuple, whose elements are two `ndarray`s, holding the real and imaginary parts of the transform separately. "
+    ]
+   },
+   {
+    "cell_type": "code",
+    "execution_count": 114,
+    "metadata": {
+     "ExecuteTime": {
+      "end_time": "2020-02-16T18:38:07.294862Z",
+      "start_time": "2020-02-16T18:38:07.233842Z"
+     }
+    },
+    "outputs": [
+     {
+      "name": "stdout",
+      "output_type": "stream",
+      "text": [
+       "real part:\t array([5119.996, -5.004663, -5.004798, ..., -5.005482, -5.005643, -5.006577], dtype=float)\r\n",
+       "\r\n",
+       "imaginary part:\t array([0.0, 1631.333, 815.659, ..., -543.764, -815.6588, -1631.333], dtype=float)\r\n",
+       "\r\n",
+       "real part:\t array([5119.996, -5.004663, -5.004798, ..., -5.005482, -5.005643, -5.006577], dtype=float)\r\n",
+       "\r\n",
+       "imaginary part:\t array([0.0, 1631.333, 815.659, ..., -543.764, -815.6588, -1631.333], dtype=float)\r\n",
+       "\n"
+      ]
+     }
+    ],
+    "source": [
+     "%%micropython -pyboard 1\n",
+     "\n",
+     "import ulab as np\n",
+     "from ulab import vector\n",
+     "from ulab import fft\n",
+     "\n",
+     "x = np.linspace(0, 10, num=1024)\n",
+     "y = vector.sin(x)\n",
+     "z = np.zeros(len(x))\n",
+     "\n",
+     "a, b = fft.fft(x)\n",
+     "print('real part:\\t', a)\n",
+     "print('\\nimaginary part:\\t', b)\n",
+     "\n",
+     "c, d = fft.fft(x, z)\n",
+     "print('\\nreal part:\\t', c)\n",
+     "print('\\nimaginary part:\\t', d)"
+    ]
+   },
+   {
+    "cell_type": "markdown",
+    "metadata": {},
+    "source": [
+     "## ifft\n",
+     "\n",
+     "The above-mentioned rules apply to the inverse Fourier transform. The inverse is also normalised by `N`, the number of elements, as is customary in `numpy`. With the normalisation, we can ascertain that the inverse of the transform is equal to the original array."
+    ]
+   },
+   {
+    "cell_type": "code",
+    "execution_count": 459,
+    "metadata": {
+     "ExecuteTime": {
+      "end_time": "2019-10-19T13:08:17.647416Z",
+      "start_time": "2019-10-19T13:08:17.597456Z"
+     }
+    },
+    "outputs": [
+     {
+      "name": "stdout",
+      "output_type": "stream",
+      "text": [
+       "original vector:\t array([0.0, 0.009775016, 0.0195491, ..., -0.5275068, -0.5357859, -0.5440139], dtype=float)\n",
+       "\n",
+       "real part of inverse:\t array([-2.980232e-08, 0.0097754, 0.0195494, ..., -0.5275064, -0.5357857, -0.5440133], dtype=float)\n",
+       "\n",
+       "imaginary part of inverse:\t array([-2.980232e-08, -1.451171e-07, 3.693752e-08, ..., 6.44871e-08, 9.34986e-08, 2.18336e-07], dtype=float)\n",
+       "\n"
+      ]
+     }
+    ],
+    "source": [
+     "%%micropython -pyboard 1\n",
+     "\n",
+     "import ulab as np\n",
+     "from ulab import vector\n",
+     "from ulab import fft\n",
+     "\n",
+     "x = np.linspace(0, 10, num=1024)\n",
+     "y = vector.sin(x)\n",
+     "\n",
+     "a, b = fft.fft(y)\n",
+     "\n",
+     "print('original vector:\\t', y)\n",
+     "\n",
+     "y, z = fft.ifft(a, b)\n",
+     "# the real part should be equal to y\n",
+     "print('\\nreal part of inverse:\\t', y)\n",
+     "# the imaginary part should be equal to zero\n",
+     "print('\\nimaginary part of inverse:\\t', z)"
+    ]
+   },
+   {
+    "cell_type": "markdown",
+    "metadata": {},
+    "source": [
+     "Note that unlike in `numpy`, the length of the array on which the Fourier transform is carried out must be a power of 2. If this is not the case, the function raises a `ValueError` exception."
+    ]
+   },
+   {
+    "cell_type": "markdown",
+    "metadata": {},
+    "source": [
+     "## spectrogram\n",
+     "\n",
+     "In addition to the Fourier transform and its inverse, `ulab` also sports a function called `spectrogram`, which returns the absolute value of the Fourier transform. This could be used to find the dominant spectral component in a time series. The arguments are treated in the same way as in `fft`, and `ifft`. In order to keep compatibility of the core modules with `numpy`, this function is defined in the `extras` sub-module."
+    ]
+   },
+   {
+    "cell_type": "code",
+    "execution_count": 5,
+    "metadata": {
+     "ExecuteTime": {
+      "end_time": "2020-03-10T20:09:54.473041Z",
+      "start_time": "2020-03-10T20:09:54.457178Z"
+     }
+    },
+    "outputs": [
+     {
+      "name": "stdout",
+      "output_type": "stream",
+      "text": [
+       "original vector:\t array([0.0, 0.009775015390171337, 0.01954909674625918, ..., -0.5275140569487312, -0.5357931822978732, -0.5440211108893639], dtype=float)\n",
+       "\n",
+       "spectrum:\t array([187.8635087634579, 315.3112063607119, 347.8814873399374, ..., 84.45888934298905, 347.8814873399374, 315.3112063607118], dtype=float)\n",
+       "\n",
+       "\n"
+      ]
+     }
+    ],
+    "source": [
+     "%%micropython -unix 1\n",
+     "\n",
+     "import ulab as np\n",
+     "from ulab import vector\n",
+     "from ulab import extras\n",
+     "\n",
+     "x = np.linspace(0, 10, num=1024)\n",
+     "y = vector.sin(x)\n",
+     "\n",
+     "a = extras.spectrogram(y)\n",
+     "\n",
+     "print('original vector:\\t', y)\n",
+     "print('\\nspectrum:\\t', a)"
+    ]
+   },
+   {
+    "cell_type": "markdown",
+    "metadata": {},
+    "source": [
+     "As such, `spectrogram` is really just a shorthand for `np.sqrt(a*a + b*b)`:"
+    ]
+   },
+   {
+    "cell_type": "code",
+    "execution_count": 461,
+    "metadata": {
+     "ExecuteTime": {
+      "end_time": "2019-10-19T13:08:58.196537Z",
+      "start_time": "2019-10-19T13:08:58.155036Z"
+     }
+    },
+    "outputs": [
+     {
+      "name": "stdout",
+      "output_type": "stream",
+      "text": [
+       "\n",
+       "spectrum calculated the hard way:\t array([187.8641, 315.3125, 347.8804, ..., 84.4587, 347.8803, 315.3124], dtype=float)\n",
+       "\n",
+       "spectrum calculated the lazy way:\t array([187.8641, 315.3125, 347.8804, ..., 84.4587, 347.8803, 315.3124], dtype=float)\n",
+       "\n"
+      ]
+     }
+    ],
+    "source": [
+     "%%micropython -pyboard 1\n",
+     "\n",
+     "import ulab as np\n",
+     "from ulab import fft\n",
+     "from ulab import vector\n",
+     "from ulab import extras\n",
+     "\n",
+     "x = np.linspace(0, 10, num=1024)\n",
+     "y = vector.sin(x)\n",
+     "\n",
+     "a, b = fft.fft(y)\n",
+     "\n",
+     "print('\\nspectrum calculated the hard way:\\t', vector.sqrt(a*a + b*b))\n",
+     "\n",
+     "a = extras.spectrogram(y)\n",
+     "\n",
+     "print('\\nspectrum calculated the lazy way:\\t', a)"
+    ]
+   },
+   {
+    "cell_type": "markdown",
+    "metadata": {},
+    "source": [
+     "## Computation and storage costs"
+    ]
+   },
+   {
+    "cell_type": "markdown",
+    "metadata": {},
+    "source": [
+     "### RAM\n",
+     "\n",
+     "The FFT routine of `ulab` calculates the transform in place. This means that beyond reserving space for the two `ndarray`s that will be returned (the computation uses these two as intermediate storage space), only a handful of temporary variables, all floats or 32-bit integers, are required. "
+    ]
+   },
+   {
+    "cell_type": "markdown",
+    "metadata": {},
+    "source": [
+     "### Speed of FFTs\n",
+     "\n",
+     "A comment on the speed: a 1024-point transform implemented in python would cost around 90 ms, and 13 ms in assembly, if the code runs on the pyboard, v.1.1. You can gain a factor of four by moving to the D series \n",
+     "https://github.com/peterhinch/micropython-fourier/blob/master/README.md#8-performance. "
+    ]
+   },
+   {
+    "cell_type": "code",
+    "execution_count": 494,
+    "metadata": {
+     "ExecuteTime": {
+      "end_time": "2019-10-19T13:25:40.540913Z",
+      "start_time": "2019-10-19T13:25:40.509598Z"
+     }
+    },
+    "outputs": [
+     {
+      "name": "stdout",
+      "output_type": "stream",
+      "text": [
+       "execution time:  1985  us\n",
+       "\n"
+      ]
+     }
+    ],
+    "source": [
+     "%%micropython -pyboard 1\n",
+     "\n",
+     "import ulab as np\n",
+     "from ulab import vector\n",
+     "from ulab import fft\n",
+     "\n",
+     "x = np.linspace(0, 10, num=1024)\n",
+     "y = vector.sin(x)\n",
+     "\n",
+     "@timeit\n",
+     "def np_fft(y):\n",
+     "    return fft.fft(y)\n",
+     "\n",
+     "a, b = np_fft(y)"
+    ]
+   },
+   {
+    "cell_type": "markdown",
+    "metadata": {},
+    "source": [
+     "The C implementation runs in less than 2 ms on the pyboard (we have just measured that), and has been reported to run in under 0.8 ms on the D series board. That is an improvement of at least a factor of four. "
+    ]
+   },
+   {
+    "cell_type": "markdown",
+    "metadata": {},
+    "source": [
+     "# Filter routines\n",
+     "\n",
+     "Functions in the `filter` module can be called by importing the sub-module first."
+    ]
+   },
+   {
+    "cell_type": "markdown",
+    "metadata": {},
+    "source": [
+     "## convolve\n",
+     "\n",
+     "`numpy`: https://docs.scipy.org/doc/numpy/reference/generated/numpy.convolve.html\n",
+     "\n",
+     "Returns the discrete, linear convolution of two one-dimensional sequences.\n",
+     "\n",
+     "Only the ``full`` mode is supported, and the ``mode`` named parameter is not accepted. Note that all other modes can be had by slicing a ``full`` result."
+    ]
+   },
+   {
+    "cell_type": "code",
+    "execution_count": 5,
+    "metadata": {
+     "ExecuteTime": {
+      "end_time": "2020-02-10T18:46:06.538207Z",
+      "start_time": "2020-02-10T18:46:06.525851Z"
+     }
+    },
+    "outputs": [
+     {
+      "name": "stdout",
+      "output_type": "stream",
+      "text": [
+       "array([1.0, 12.0, 123.0, 1230.0, 2300.0, 3000.0], dtype=float)\n",
+       "\n",
+       "\n"
+      ]
+     }
+    ],
+    "source": [
+     "%%micropython -unix 1\n",
+     "\n",
+     "import ulab as np\n",
+     "from ulab import filter\n",
+     "\n",
+     "x = np.array((1,2,3))\n",
+     "y = np.array((1,10,100,1000))\n",
+     "\n",
+     "print(filter.convolve(x, y))"
+    ]
+   },
+   {
+    "cell_type": "markdown",
+    "metadata": {},
+    "source": [
+     "# Comparison of arrays\n",
+     "\n",
+     "Functions in the `compare` module can be called by importing the sub-module first."
+    ]
+   },
+   {
+    "cell_type": "markdown",
+    "metadata": {},
+    "source": [
+     "## equal, not_equal\n",
+     "\n",
+     "`numpy`: https://numpy.org/doc/stable/reference/generated/numpy.equal.html\n",
+     "\n",
+     "`numpy`: https://numpy.org/doc/stable/reference/generated/numpy.not_equal.html\n",
+     "\n",
+     "In `micropython`, equality of arrays or scalars can be established by utilising the `==`, `!=`, `<`, `>`, `<=`, or `=>` binary operators. In `circuitpython`, `==` and `!=` will produce unexpected results. In order to avoid this discrepancy, and to maintain compatibility with `numpy`, `ulab` implements the `equal` and `not_equal` operators that return the same results, irrespective of the `python` implementation.\n",
+     "\n",
+     "These two functions take two `ndarray`s, or scalars as their arguments. No keyword arguments are implemented."
+    ]
+   },
+   {
+    "cell_type": "code",
+    "execution_count": 24,
+    "metadata": {
+     "ExecuteTime": {
+      "end_time": "2020-05-03T08:53:02.668348Z",
+      "start_time": "2020-05-03T08:53:02.656130Z"
+     }
+    },
+    "outputs": [
+     {
+      "name": "stdout",
+      "output_type": "stream",
+      "text": [
+       "a:  array([0.0, 1.0, 2.0, 3.0, 4.0, 5.0, 6.0, 7.0, 8.0], dtype=float)\n",
+       "b:  array([0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0], dtype=float)\n",
+       "\n",
+       "a == b:  [True, False, False, False, False, False, False, False, False]\n",
+       "a != b:  [False, True, True, True, True, True, True, True, True]\n",
+       "a == 2:  [False, False, True, False, False, False, False, False, False]\n",
+       "\n",
+       "\n"
+      ]
+     }
+    ],
+    "source": [
+     "%%micropython -unix 1\n",
+     "\n",
+     "import ulab as np\n",
+     "\n",
+     "a = np.array(range(9))\n",
+     "b = np.zeros(9)\n",
+     "\n",
+     "print('a: ', a)\n",
+     "print('b: ', b)\n",
+     "print('\\na == b: ', np.compare.equal(a, b))\n",
+     "print('a != b: ', np.compare.not_equal(a, b))\n",
+     "\n",
+     "# comparison with scalars\n",
+     "print('a == 2: ', np.compare.equal(a, 2))"
+    ]
+   },
+   {
+    "cell_type": "markdown",
+    "metadata": {},
+    "source": [
+     "## minimum\n",
+     "\n",
+     "`numpy`: https://docs.scipy.org/doc/numpy/reference/generated/numpy.minimum.html\n",
+     "\n",
+     "Returns the minimum of two arrays, or two scalars, or an array, and a scalar. Partial broadcasting is implemented. If the arrays are of different `dtype`, the output is upcast as in [Binary operators](#Binary-operators). If both inputs are scalars, a scalar is returned. Only positional arguments are implemented.\n",
+     "\n",
+     "## maximum\n",
+     "\n",
+     "`numpy`: https://docs.scipy.org/doc/numpy/reference/generated/numpy.maximum.html\n",
+     "\n",
+     "Returns the maximum of two arrays, or two scalars, or an array, and a scalar. Partial broadcasting is implemented. If the arrays are of different `dtype`, the output is upcast as in [Binary operators](#Binary-operators). If both inputs are scalars, a scalar is returned. Only positional arguments are implemented."
+    ]
+   },
+   {
+    "cell_type": "code",
+    "execution_count": 15,
+    "metadata": {
+     "ExecuteTime": {
+      "end_time": "2020-04-21T20:31:42.178279Z",
+      "start_time": "2020-04-21T20:31:42.163823Z"
+     }
+    },
+    "outputs": [
+     {
+      "name": "stdout",
+      "output_type": "stream",
+      "text": [
+       "minimum of a, and b:\n",
+       "array([1.0, 2.0, 3.0, 2.0, 1.0], dtype=float)\n",
+       "\n",
+       "maximum of a, and b:\n",
+       "array([5.0, 4.0, 3.0, 4.0, 5.0], dtype=float)\n",
+       "\n",
+       "maximum of 1, and 5.5:\n",
+       "5.5\n",
+       "\n",
+       "\n"
+      ]
+     }
+    ],
+    "source": [
+     "%%micropython -unix 1\n",
+     "\n",
+     "import ulab\n",
+     "\n",
+     "a = ulab.array([1, 2, 3, 4, 5], dtype=ulab.uint8)\n",
+     "b = ulab.array([5, 4, 3, 2, 1], dtype=ulab.float)\n",
+     "print('minimum of a, and b:')\n",
+     "print(ulab.compare.minimum(a, b))\n",
+     "\n",
+     "print('\\nmaximum of a, and b:')\n",
+     "print(ulab.compare.maximum(a, b))\n",
+     "\n",
+     "print('\\nmaximum of 1, and 5.5:')\n",
+     "print(ulab.compare.maximum(1, 5.5))"
+    ]
+   },
+   {
+    "cell_type": "markdown",
+    "metadata": {},
+    "source": [
+     "## clip\n",
+     "\n",
+     "`numpy`: https://docs.scipy.org/doc/numpy/reference/generated/numpy.clip.html\n",
+     "\n",
+     "Clips an array, i.e., values that are outside of an interval are clipped to the interval edges. The function is equivalent to `maximum(a_min, minimum(a, a_max))`. or two scalars, hence partial broadcasting takes place exactly as in [minimum](#minimum). If the arrays are of different `dtype`, the output is upcast as in [Binary operators](#Binary-operators)."
+    ]
+   },
+   {
+    "cell_type": "code",
+    "execution_count": 19,
+    "metadata": {
+     "ExecuteTime": {
+      "end_time": "2020-04-21T20:33:29.679569Z",
+      "start_time": "2020-04-21T20:33:29.663150Z"
+     }
+    },
+    "outputs": [
+     {
+      "name": "stdout",
+      "output_type": "stream",
+      "text": [
+       "a:\t\t array([0, 1, 2, 3, 4, 5, 6, 7, 8], dtype=uint8)\n",
+       "clipped:\t array([3, 3, 3, 3, 4, 5, 6, 7, 7], dtype=uint8)\n",
+       "\n",
+       "a:\t\t array([0, 1, 2, 3, 4, 5, 6, 7, 8], dtype=uint8)\n",
+       "b:\t\t array([3.0, 3.0, 3.0, 3.0, 3.0, 3.0, 3.0, 3.0, 3.0], dtype=float)\n",
+       "clipped:\t array([3.0, 3.0, 3.0, 3.0, 4.0, 5.0, 6.0, 7.0, 7.0], dtype=float)\n",
+       "\n",
+       "\n"
+      ]
+     }
+    ],
+    "source": [
+     "%%micropython -unix 1\n",
+     "\n",
+     "import ulab\n",
+     "\n",
+     "a = ulab.array(range(9), dtype=ulab.uint8)\n",
+     "print('a:\\t\\t', a)\n",
+     "print('clipped:\\t', ulab.compare.clip(a, 3, 7))\n",
+     "\n",
+     "b = 3 * ulab.ones(len(a), dtype=ulab.float)\n",
+     "print('\\na:\\t\\t', a)\n",
+     "print('b:\\t\\t', b)\n",
+     "print('clipped:\\t', ulab.compare.clip(a, b, 7))"
+    ]
+   },
+   {
+    "cell_type": "markdown",
+    "metadata": {},
+    "source": [
+     "# Interpolation, root finding, and function minimisation\n",
+     "\n",
+     "The `approx` sub-module defines functions for interpolating numerical data, and finding the roots and the minimum of arbitrary functions defined in `python`. Note that routines that work with user-defined\n",
+     "functions still have to call the underlying `python` code, and therefore, gains in speed are not as significant as with other vectorised operations. As a rule of thumb, a factor of two can be expected, when compared to an optimised python implementation."
+    ]
+   },
+   {
+    "cell_type": "markdown",
+    "metadata": {},
+    "source": [
+     "## interp\n",
+     "\n",
+     "`numpy`: https://docs.scipy.org/doc/numpy/numpy.interp\n",
+     "\n",
+     "The `interp` function returns the linearly interpolated values of a one-dimensional numerical array. It requires three positional arguments,`x`, at which the interpolated values are evaluated, `xp`, the array\n",
+     "of the independent variables of the data, and `fp`, the array of the dependent values of the data. `xp` must be a monotonically increasing sequence of numbers.\n",
+     "\n",
+     "Two keyword arguments, `left`, and `right` can also be supplied; these determine the return values, if `x < xp[0]`, and `x > xp[-1]`, respectively. If these arguments are not supplied, `left`, and `right` default to `fp[0]`, and `fp[-1]`, respectively."
+    ]
+   },
+   {
+    "cell_type": "code",
+    "execution_count": 6,
+    "metadata": {
+     "ExecuteTime": {
+      "end_time": "2020-05-19T16:50:55.612934Z",
+      "start_time": "2020-05-19T16:50:55.592755Z"
+     }
+    },
+    "outputs": [
+     {
+      "name": "stdout",
+      "output_type": "stream",
+      "text": [
+       "array([0.8, 1.8, 2.8, 3.8, 4.8], dtype=float)\n",
+       "array([1.0, 1.8, 2.8, 4.6, 5.0], dtype=float)\n",
+       "array([0.0, 1.8, 2.8, 4.6, 5.0], dtype=float)\n",
+       "array([1.0, 1.8, 2.8, 4.6, 10.0], dtype=float)\n",
+       "\n",
+       "\n"
+      ]
+     }
+    ],
+    "source": [
+     "%%micropython -unix 1\n",
+     "\n",
+     "import ulab\n",
+     "from ulab import approx\n",
+     "\n",
+     "x = ulab.array([1, 2, 3, 4, 5])\n",
+     "xp = ulab.array([1, 2, 3, 4])\n",
+     "fp = ulab.array([1, 2, 3, 5])\n",
+     "x = x - 0.2\n",
+     "print(x)\n",
+     "print(approx.interp(x, xp, fp))\n",
+     "print(approx.interp(x, xp, fp, left=0.0))\n",
+     "print(approx.interp(x, xp, fp, right=10.0))"
+    ]
+   },
+   {
+    "cell_type": "markdown",
+    "metadata": {},
+    "source": [
+     "## newton\n",
+     "\n",
+     "`scipy`:https://docs.scipy.org/doc/scipy/reference/generated/scipy.optimize.newton.html\n",
+     "\n",
+     "`newton` finds a zero of a real, user-defined function using the Newton-Raphson (or secant or Halley’s) method. The routine requires two positional arguments, the function, and the initial value. Three keyword\n",
+     "arguments can be supplied to control the iteration. These are the absolute and relative tolerances `tol`, and `rtol`, respectively, and the number of iterations before stopping, `maxiter`. The function retuns a single scalar, the position of the root."
+    ]
+   },
+   {
+    "cell_type": "code",
+    "execution_count": 9,
+    "metadata": {
+     "ExecuteTime": {
+      "end_time": "2020-05-19T16:52:41.146966Z",
+      "start_time": "2020-05-19T16:52:41.132190Z"
+     }
+    },
+    "outputs": [
+     {
+      "name": "stdout",
+      "output_type": "stream",
+      "text": [
+       "1.260135727246117\n",
+       "\n",
+       "\n"
+      ]
+     }
+    ],
+    "source": [
+     "%%micropython -unix 1\n",
+     "\n",
+     "import ulab\n",
+     "from ulab import approx\n",
+     "    \n",
+     "def f(x):\n",
+     "    return x*x*x - 2.0\n",
+     "\n",
+     "print(approx.newton(f, 3., tol=0.001, rtol=0.01))"
+    ]
+   },
+   {
+    "cell_type": "markdown",
+    "metadata": {},
+    "source": [
+     "## bisect \n",
+     "\n",
+     "`scipy`: https://docs.scipy.org/doc/scipy/reference/generated/scipy.optimize.bisect.html\n",
+     "\n",
+     "`bisect` finds the root of a function of one variable using a simple bisection routine. It takes three positional arguments, the function itself, and two starting points. The function must have opposite signs\n",
+     "at the starting points. Returned is the position of the root.\n",
+     "\n",
+     "Two keyword arguments, `xtol`, and `maxiter` can be supplied to control the accuracy, and the number of bisections, respectively."
+    ]
+   },
+   {
+    "cell_type": "code",
+    "execution_count": 10,
+    "metadata": {
+     "ExecuteTime": {
+      "end_time": "2020-05-19T16:53:53.224741Z",
+      "start_time": "2020-05-19T16:53:53.212098Z"
+     }
+    },
+    "outputs": [
+     {
+      "name": "stdout",
+      "output_type": "stream",
+      "text": [
+       "0.9999997615814209\n",
+       "only 8 bisections:  0.984375\n",
+       "with 0.1 accuracy:  0.9375\n",
+       "\n",
+       "\n"
+      ]
+     }
+    ],
+    "source": [
+     "%%micropython -unix 1\n",
+     "\n",
+     "import ulab\n",
+     "from ulab import approx\n",
+     "    \n",
+     "def f(x):\n",
+     "    return x*x - 1\n",
+     "\n",
+     "print(approx.bisect(f, 0, 4))\n",
+     "\n",
+     "print('only 8 bisections: ',  approx.bisect(f, 0, 4, maxiter=8))\n",
+     "\n",
+     "print('with 0.1 accuracy: ',  approx.bisect(f, 0, 4, xtol=0.1))"
+    ]
+   },
+   {
+    "cell_type": "markdown",
+    "metadata": {},
+    "source": [
+     "### Performance\n",
+     "\n",
+     "Since the `bisect` routine calls user-defined `python` functions, the speed gain is only about a factor of two, if compared to a purely `python` implementation."
+    ]
+   },
+   {
+    "cell_type": "code",
+    "execution_count": 7,
+    "metadata": {
+     "ExecuteTime": {
+      "end_time": "2020-05-19T19:08:24.750562Z",
+      "start_time": "2020-05-19T19:08:24.682959Z"
+     }
+    },
+    "outputs": [
+     {
+      "name": "stdout",
+      "output_type": "stream",
+      "text": [
+       "bisect running in python\r\n",
+       "execution time:  1270  us\r\n",
+       "bisect running in C\r\n",
+       "execution time:  642  us\r\n",
+       "\n"
+      ]
+     }
+    ],
+    "source": [
+     "%%micropython -pyboard 1\n",
+     "\n",
+     "import ulab\n",
+     "from ulab import approx\n",
+     "\n",
+     "def f(x):\n",
+     "    return (x-1)*(x-1) - 2.0\n",
+     "\n",
+     "def bisect(f, a, b, xtol=2.4e-7, maxiter=100):\n",
+     "    if f(a) * f(b) > 0:\n",
+     "        raise ValueError\n",
+     "\n",
+     "    rtb = a if f(a) < 0.0 else b\n",
+     "    dx = b - a if f(a) < 0.0 else a - b\n",
+     "    for i in range(maxiter):\n",
+     "        dx *= 0.5\n",
+     "        x_mid = rtb + dx\n",
+     "        mid_value = f(x_mid)\n",
+     "        if mid_value < 0:\n",
+     "            rtb = x_mid\n",
+     "        if abs(dx) < xtol:\n",
+     "            break\n",
+     "\n",
+     "    return rtb\n",
+     "\n",
+     "@timeit\n",
+     "def bisect_approx(f, a, b):\n",
+     "    return approx.bisect(f, a, b)\n",
+     "\n",
+     "@timeit\n",
+     "def bisect_timed(f, a, b):\n",
+     "    return bisect(f, a, b)\n",
+     "\n",
+     "print('bisect running in python')\n",
+     "bisect_timed(f, 3, 2)\n",
+     "\n",
+     "print('bisect running in C')\n",
+     "bisect_approx(f, 3, 2)"
+    ]
+   },
+   {
+    "cell_type": "markdown",
+    "metadata": {},
+    "source": [
+     "## fmin\n",
+     "\n",
+     "`scipy`: https://docs.scipy.org/doc/scipy/reference/generated/scipy.optimize.fmin.html\n",
+     "\n",
+     "The `fmin` function finds the position of the minimum of a user-defined function by using the downhill simplex method. Requires two positional arguments, the function, and the initial value. Three keyword arguments, `xatol`, `fatol`, and `maxiter` stipulate conditions for stopping."
+    ]
+   },
+   {
+    "cell_type": "code",
+    "execution_count": 11,
+    "metadata": {
+     "ExecuteTime": {
+      "end_time": "2020-05-19T16:56:40.365826Z",
+      "start_time": "2020-05-19T16:56:40.352936Z"
+     }
+    },
+    "outputs": [
+     {
+      "name": "stdout",
+      "output_type": "stream",
+      "text": [
+       "0.9996093749999952\n",
+       "1.199999999999996\n",
+       "\n",
+       "\n"
+      ]
+     }
+    ],
+    "source": [
+     "%%micropython -unix 1\n",
+     "import ulab\n",
+     "from ulab import approx\n",
+     "\n",
+     "def f(x):\n",
+     "    return (x-1)**2 - 1\n",
+     "\n",
+     "print(approx.fmin(f, 3.0))\n",
+     "print(approx.fmin(f, 3.0, xatol=0.1))"
+    ]
+   },
+   {
+    "cell_type": "markdown",
+    "metadata": {},
+    "source": [
+     "# Extending ulab\n",
+     "\n",
+     "As mentioned at the beginning, `ulab` is a set of sub-modules, out of which one, `extra` is explicitly reserved for user code. You should implement your functions in this sub-module, or sub-modules thereof.\n",
+     "\n",
+     "The new functions can easily be added to `extra` in a couple of simple steps. At the C level, the type definition of an `ndarray` is as follows:\n",
+     "\n",
+     "```c\n",
+     "typedef struct _ndarray_obj_t {\n",
+     "    mp_obj_base_t base;\n",
+     "    size_t m, n;\n",
+     "    mp_obj_array_t *array;\n",
+     "    size_t bytes;\n",
+     "} ndarray_obj_t;\n",
+     "```\n",
+     "\n",
+     "## Creating a new ndarray\n",
+     "\n",
+     "A new `ndarray` can be created by calling \n",
+     "\n",
+     "```c\n",
+     "ndarray_obj_t *new_ndarray = create_new_ndarray(m, n, typecode);\n",
+     "```\n",
+     "where `m`, and `n` are the number of rows and columns, respectively, and `typecode` is one of the values from \n",
+     "\n",
+     "```c\n",
+     "enum NDARRAY_TYPE {\n",
+     "    NDARRAY_UINT8 = 'B',\n",
+     "    NDARRAY_INT8 = 'b',\n",
+     "    NDARRAY_UINT16 = 'H', \n",
+     "    NDARRAY_INT16 = 'h',\n",
+     "    NDARRAY_FLOAT = 'f',\n",
+     "};\n",
+     "```\n",
+     "or\n",
+     "```c\n",
+     "enum NDARRAY_TYPE {\n",
+     "    NDARRAY_UINT8 = 'B',\n",
+     "    NDARRAY_INT8 = 'b',\n",
+     "    NDARRAY_UINT16 = 'H', \n",
+     "    NDARRAY_INT16 = 'h',\n",
+     "    NDARRAY_FLOAT = 'd',\n",
+     "};\n",
+     "```\n",
+     "The ambiguity is caused by the fact that not all platforms implement `double`, and there one has to take `float`s. But you haven't actually got to be concerned by this, because at the very beginning of `ndarray.h`, this is already taken care of: the pre-processor figures out, what the `float` implementation of the hardware platform is, and defines the  `NDARRAY_FLOAT` typecode accordingly. All you have to keep in mind is that wherever you would use `float` or `double`, you have to use `mp_float_t`. That type is defined in `py/mpconfig.h` of the micropython code base.\n",
+     "\n",
+     "Therefore, a 4-by-5 matrix of type float can be created as\n",
+     "\n",
+     "```c\n",
+     "ndarray_obj_t *new_ndarray = create_new_ndarray(4, 5, NDARRAY_FLOAT);\n",
+     "```\n",
+     "\n",
+     "This function also fills in the `ndarray` structure's `m`, `n`, and `bytes` members, as well initialises the `array` member with zeros. \n",
+     "\n",
+     "Alternatively, a one-to-one copy of an `ndarray` can be gotten by calling \n",
+     "\n",
+     "```c\n",
+     "mp_obj_t copy_of_input_object = ndarray_copy(object_in);\n",
+     "```\n",
+     "\n",
+     "Note, however, that this function takes an input object of type `mp_obj_t`, and returns a copy of type `mp_obj_t`, i.e., something that can be taken from, and can immediately be returned to the interpreter. If you want to work on the data in the copy, you still have to create a pointer to it\n",
+     "\n",
+     "```c\n",
+     "ndarray_obj_t *ndarray = MP_OBJ_TO_PTR(copy_of_input_object);\n",
+     "```\n",
+     "\n",
+     "The values stored in `array` can be modified or retrieved by accessing `array->items`. Note that `array->items` is a void pointer, therefore, it must be cast before trying to access the elements. `array` has at least two useful members. One of them is `len`, which is the number of elements that the array holds, while the second one is the `typecode` that we passed to `create_new_ndarray` earlier. \n",
+     "\n",
+     "Thus, staying with our example of a 4-by-5 float matrix, we can loop through all entries as\n",
+     "\n",
+     "```c\n",
+     "mp_float_t *items = (mp_float_t *)new_ndarray->array->items;\n",
+     "mp_float_t item;\n",
+     "\n",
+     "for(size_t i=0; i < new_ndarray->array->len; i++) {\n",
+     "    item = items[i];\n",
+     "    // do something with item...\n",
+     "}\n",
+     "```\n",
+     "or, since the data are stored in the pointer in a C-like fashion, as \n",
+     "\n",
+     "```c\n",
+     "mp_float_t *items = (mp_float_t *)new_ndarray->array->items;\n",
+     "mp_float_t item;\n",
+     "\n",
+     "for(size_t m=0; m < new_ndarray->m; m++) { // loop through the rows\n",
+     "    for(size_t n=0; n < new_ndarray->n; n++) { // loop through the columns\n",
+     "        item = items[m*new_ndarray->n+n]; // get the (m,n) entry\n",
+     "        // do something with item...\n",
+     "    }\n",
+     "}\n",
+     "```\n",
+     "\n",
+     "\n",
+     "## Accessing data in the ndarray\n",
+     "\n",
+     "We have already seen, how the entries of an array can be accessed. If the object in question comes from the user (i.e., via the micropython interface), we can get a pointer to it by calling \n",
+     "\n",
+     "```c\n",
+     "ndarray_obj_t *ndarray = MP_OBJ_TO_PTR(object_in);\n",
+     "```\n",
+     "Once the pointer is at our disposal, we can get a pointer to the underlying numerical array as discussed earlier.\n",
+     "\n",
+     "If you need to find out the typecode of the array, you can get it by accessing the `typecode` member of `array`, i.e., \n",
+     "\n",
+     "```c\n",
+     "ndarray->array->typecode\n",
+     "```\n",
+     "should be equal to `B`, `b`, `H`, `h`, or `f`. The size of a single item is returned by the function `mp_binary_get_size('@', ndarray->array->typecode, NULL)`. This number is equal to 1, if the typecode is `B`, or `b`, 2, if the typecode is `H`, or `h`, 4, if the typecode is `f`, and 8 for `d`. \n",
+     "\n",
+     "Alternatively, the size can be found out by dividing `ndarray->bytes` with the product of `m`, and `n`, i.e., \n",
+     "\n",
+     "```c\n",
+     "ndarray->bytes/(ndarray->m*ndarray*n) \n",
+     "```\n",
+     "is equal to `mp_binary_get_size('@', ndarray->array->typecode, NULL)`.\n",
+     "\n",
+     "## Making certain that we have an ndarray\n",
+     "\n",
+     "A number of operations make sense for `ndarray`s only, therefore, before doing any heavy work on the data, it might be reasonable to check, whether the input argument is of the proper type. This you do by evaluating\n",
+     "\n",
+     "```c\n",
+     "mp_obj_is_type(object_in, &ulab_ndarray_type)\n",
+     "```\n",
+     "which should return `true`. "
+    ]
+   },
+   {
+    "cell_type": "markdown",
+    "metadata": {},
+    "source": [
+     "## Boilerplate of sorts\n",
+     "\n",
+     "To summarise the contents of the previous three sections, here is a useless function that prints out the size (`m`, and `n`) of an array, creates a copy of the input, and fills up the resulting matrix with 13.\n",
+     "\n",
+     "```c\n",
+     "mp_obj_t useless_function(mp_obj_t object_in) {\n",
+     "    if(!mp_obj_is_type(object_in, &ulab_ndarray_type)) {\n",
+     "        mp_raise_TypeError(\"useless_function takes only ndarray arguments\");\n",
+     "    }\n",
+     "    \n",
+     "    mp_obj_t object_out = ndarray_copy(object_int);\n",
+     "    \n",
+     "    ndarray_obj_t *ndarray = MP_OBJ_TO_PTR(object_out);\n",
+     "    printf(\"\\nsize (m): %ld, size (n): %ld\\n\", ndarray->m, ndarray->n);\n",
+     "    printf(\"\\nlength (len): %ld, typecode: %d\\n\", ndarray->array->len, ndarray->array->typecode);\n",
+     "    if(ndarray->array->typecode == NDARRAY_UINT8) {\n",
+     "        // cast the pointer to the items\n",
+     "        uint8_t *items = (uint8_t *)ndarray->array->items;\n",
+     "        // retrieve the length of the array, and loop over the elements\n",
+     "        for(size_t i=0; i < ndarray->array->len; i++) items[i] = 13;\n",
+     "    } else if(ndarray->array->typecode == NDARRAY_INT8) {\n",
+     "        int8_t *items = (int8_t *)ndarray->array->items;\n",
+     "        for(size_t i=0; i < ndarray->array->len; i++) items[i] = 13;\n",
+     "    } else if(ndarray->array->typecode == NDARRAY_UINT16) {\n",
+     "        uint16_t *items = (uint16_t *)ndarray->array->items;\n",
+     "        for(size_t i=0; i < ndarray->array->len; i++) items[i] = 13;\n",
+     "    } else if(ndarray->array->typecode == NDARRAY_INT16) {\n",
+     "        int16_t *items = (int16_t *)ndarray->array->items;\n",
+     "        for(size_t i=0; i < ndarray->array->len; i++) items[i] = 13;\n",
+     "    } else {\n",
+     "        float *items = (mp_float_t *)ndarray->array->items;\n",
+     "        for(size_t i=0; i < ndarray->array->len; i++) items[i] = 13;\n",
+     "    }\n",
+     "    return object_out;\n",
+     "}\n",
+     "```\n",
+     "If, on the other hand, you want to create an `ndarray` from scratch, and return that, you could work along the following lines:\n",
+     "\n",
+     "```c\n",
+     "mp_obj_t useless_function(mp_obj_t object_in) {\n",
+     "    uint16_t m = mp_obj_get_int(object_in);\n",
+     "    \n",
+     "    ndarray_obj_t *ndarray = create_new_ndarray(1, m, NDARRAY_UINT8);\n",
+     "    \n",
+     "    uint8_t *items = (uint8_t *)ndarray->array->items;\n",
+     "    // do something with the array's entries\n",
+     "    // ...\n",
+     "    \n",
+     "    // and at the very end, return an mp_object_t\n",
+     "    return MP_PTR_TO_OBJ(ndarray);\n",
+     "}\n",
+     "```\n"
+    ]
+   },
+   {
+    "cell_type": "markdown",
+    "metadata": {},
+    "source": [
+     "Once the function implementation is done, you should add the function object to the globals dictionary of the `extra` sub-module as \n",
+     "\n",
+     "```c\n",
+     "...\n",
+     "    MP_DEFINE_CONST_FUN_OBJ_1(useless_function_obj, userless_function);\n",
+     "...\n",
+     "    STATIC const mp_map_elem_t extra_globals_table[] = {\n",
+     "...\n",
+     "    { MP_OBJ_NEW_QSTR(MP_QSTR_useless), (mp_obj_t)&useless_function_obj },\n",
+     "...\n",
+     "};\n",
+     "```\n",
+     "\n",
+     "The exact form of the function object definition \n",
+     "\n",
+     "```c\n",
+     "    MP_DEFINE_CONST_FUN_OBJ_1(useless_function_obj, userless_function);\n",
+     "```\n",
+     "depends naturally on what exactly you implemented, i.e., how many arguments the function takes, whether only positional arguments allowed and so on. For a thorough discussion on how function objects have to be defined, see, e.g., the [user module programming manual](#https://micropython-usermod.readthedocs.io/en/latest/).\n",
+     "\n",
+     "And with that, you are done. You can simply call the compiler as \n",
+     "\n",
+     "```bash\n",
+     "make BOARD=PYBV11 USER_C_MODULES=../../../ulab all\n",
+     "```\n",
+     "and the rest is taken care of."
+    ]
+   },
+   {
+    "cell_type": "markdown",
+    "metadata": {},
+    "source": [
+     "In the boilerplate above, we cast the pointer to `array->items` to the required type. There are certain operations, however, when you do not need the casting. If you do not want to change the array's values, only their position within the array, you can get away with copying the memory content, regardless the type. A good example for such a scenario is the transpose function in https://github.com/v923z/micropython-ulab/blob/master/code/linalg.c."
+    ]
+   }
+  ],
+  "metadata": {
+   "kernelspec": {
+    "display_name": "Python 3",
+    "language": "python",
+    "name": "python3"
+   },
+   "language_info": {
+    "codemirror_mode": {
+     "name": "ipython",
+     "version": 3
+    },
+    "file_extension": ".py",
+    "mimetype": "text/x-python",
+    "name": "python",
+    "nbconvert_exporter": "python",
+    "pygments_lexer": "ipython3",
+    "version": "3.7.6"
+   },
+   "toc": {
+    "base_numbering": 1,
+    "nav_menu": {},
+    "number_sections": true,
+    "sideBar": true,
+    "skip_h1_title": false,
+    "title_cell": "Table of Contents",
+    "title_sidebar": "Contents",
+    "toc_cell": false,
+    "toc_position": {
+     "height": "calc(100% - 180px)",
+     "left": "10px",
+     "top": "150px",
+     "width": "382.797px"
+    },
+    "toc_section_display": true,
+    "toc_window_display": true
+   },
+   "varInspector": {
+    "cols": {
+     "lenName": 16,
+     "lenType": 16,
+     "lenVar": 40
+    },
+    "kernels_config": {
+     "python": {
+      "delete_cmd_postfix": "",
+      "delete_cmd_prefix": "del ",
+      "library": "var_list.py",
+      "varRefreshCmd": "print(var_dic_list())"
+     },
+     "r": {
+      "delete_cmd_postfix": ") ",
+      "delete_cmd_prefix": "rm(",
+      "library": "var_list.r",
+      "varRefreshCmd": "cat(var_dic_list()) "
+     }
+    },
+    "types_to_exclude": [
+     "module",
+     "function",
+     "builtin_function_or_method",
+     "instance",
+     "_Feature"
+    ],
+    "window_display": false
+   }
+  },
+  "nbformat": 4,
+  "nbformat_minor": 4
+ }
diff -crNb MicorpythonOriginal1.12/ulab/.git/config micropython1.12_withUlab/ulab/.git/config
*** MicorpythonOriginal1.12/ulab/.git/config	1970-01-01 02:00:00.000000000 +0200
--- micropython1.12_withUlab/ulab/.git/config	2020-06-18 18:25:25.698905000 +0200
***************
*** 0 ****
--- 1,11 ----
+ [core]
+ 	repositoryformatversion = 0
+ 	filemode = true
+ 	bare = false
+ 	logallrefupdates = true
+ [remote "origin"]
+ 	url = https://github.com/v923z/micropython-ulab.git
+ 	fetch = +refs/heads/*:refs/remotes/origin/*
+ [branch "master"]
+ 	remote = origin
+ 	merge = refs/heads/master
diff -crNb MicorpythonOriginal1.12/ulab/.git/description micropython1.12_withUlab/ulab/.git/description
*** MicorpythonOriginal1.12/ulab/.git/description	1970-01-01 02:00:00.000000000 +0200
--- micropython1.12_withUlab/ulab/.git/description	2020-06-18 18:25:22.726936000 +0200
***************
*** 0 ****
--- 1 ----
+ Unnamed repository; edit this file 'description' to name the repository.
diff -crNb MicorpythonOriginal1.12/ulab/.git/HEAD micropython1.12_withUlab/ulab/.git/HEAD
*** MicorpythonOriginal1.12/ulab/.git/HEAD	1970-01-01 02:00:00.000000000 +0200
--- micropython1.12_withUlab/ulab/.git/HEAD	2020-06-18 18:25:25.698905000 +0200
***************
*** 0 ****
--- 1 ----
+ ref: refs/heads/master
diff -crNb MicorpythonOriginal1.12/ulab/.git/hooks/applypatch-msg.sample micropython1.12_withUlab/ulab/.git/hooks/applypatch-msg.sample
*** MicorpythonOriginal1.12/ulab/.git/hooks/applypatch-msg.sample	1970-01-01 02:00:00.000000000 +0200
--- micropython1.12_withUlab/ulab/.git/hooks/applypatch-msg.sample	2020-06-18 18:25:22.726936000 +0200
***************
*** 0 ****
--- 1,15 ----
+ #!/bin/sh
+ #
+ # An example hook script to check the commit log message taken by
+ # applypatch from an e-mail message.
+ #
+ # The hook should exit with non-zero status after issuing an
+ # appropriate message if it wants to stop the commit.  The hook is
+ # allowed to edit the commit message file.
+ #
+ # To enable this hook, rename this file to "applypatch-msg".
+ 
+ . git-sh-setup
+ commitmsg="$(git rev-parse --git-path hooks/commit-msg)"
+ test -x "$commitmsg" && exec "$commitmsg" ${1+"$@"}
+ :
diff -crNb MicorpythonOriginal1.12/ulab/.git/hooks/commit-msg.sample micropython1.12_withUlab/ulab/.git/hooks/commit-msg.sample
*** MicorpythonOriginal1.12/ulab/.git/hooks/commit-msg.sample	1970-01-01 02:00:00.000000000 +0200
--- micropython1.12_withUlab/ulab/.git/hooks/commit-msg.sample	2020-06-18 18:25:22.726936000 +0200
***************
*** 0 ****
--- 1,24 ----
+ #!/bin/sh
+ #
+ # An example hook script to check the commit log message.
+ # Called by "git commit" with one argument, the name of the file
+ # that has the commit message.  The hook should exit with non-zero
+ # status after issuing an appropriate message if it wants to stop the
+ # commit.  The hook is allowed to edit the commit message file.
+ #
+ # To enable this hook, rename this file to "commit-msg".
+ 
+ # Uncomment the below to add a Signed-off-by line to the message.
+ # Doing this in a hook is a bad idea in general, but the prepare-commit-msg
+ # hook is more suited to it.
+ #
+ # SOB=$(git var GIT_AUTHOR_IDENT | sed -n 's/^\(.*>\).*$/Signed-off-by: \1/p')
+ # grep -qs "^$SOB" "$1" || echo "$SOB" >> "$1"
+ 
+ # This example catches duplicate Signed-off-by lines.
+ 
+ test "" = "$(grep '^Signed-off-by: ' "$1" |
+ 	 sort | uniq -c | sed -e '/^[ 	]*1[ 	]/d')" || {
+ 	echo >&2 Duplicate Signed-off-by lines.
+ 	exit 1
+ }
diff -crNb MicorpythonOriginal1.12/ulab/.git/hooks/fsmonitor-watchman.sample micropython1.12_withUlab/ulab/.git/hooks/fsmonitor-watchman.sample
*** MicorpythonOriginal1.12/ulab/.git/hooks/fsmonitor-watchman.sample	1970-01-01 02:00:00.000000000 +0200
--- micropython1.12_withUlab/ulab/.git/hooks/fsmonitor-watchman.sample	2020-06-18 18:25:22.726936000 +0200
***************
*** 0 ****
--- 1,114 ----
+ #!/usr/bin/perl
+ 
+ use strict;
+ use warnings;
+ use IPC::Open2;
+ 
+ # An example hook script to integrate Watchman
+ # (https://facebook.github.io/watchman/) with git to speed up detecting
+ # new and modified files.
+ #
+ # The hook is passed a version (currently 1) and a time in nanoseconds
+ # formatted as a string and outputs to stdout all files that have been
+ # modified since the given time. Paths must be relative to the root of
+ # the working tree and separated by a single NUL.
+ #
+ # To enable this hook, rename this file to "query-watchman" and set
+ # 'git config core.fsmonitor .git/hooks/query-watchman'
+ #
+ my ($version, $time) = @ARGV;
+ 
+ # Check the hook interface version
+ 
+ if ($version == 1) {
+ 	# convert nanoseconds to seconds
+ 	$time = int $time / 1000000000;
+ } else {
+ 	die "Unsupported query-fsmonitor hook version '$version'.\n" .
+ 	    "Falling back to scanning...\n";
+ }
+ 
+ my $git_work_tree;
+ if ($^O =~ 'msys' || $^O =~ 'cygwin') {
+ 	$git_work_tree = Win32::GetCwd();
+ 	$git_work_tree =~ tr/\\/\//;
+ } else {
+ 	require Cwd;
+ 	$git_work_tree = Cwd::cwd();
+ }
+ 
+ my $retry = 1;
+ 
+ launch_watchman();
+ 
+ sub launch_watchman {
+ 
+ 	my $pid = open2(\*CHLD_OUT, \*CHLD_IN, 'watchman -j --no-pretty')
+ 	    or die "open2() failed: $!\n" .
+ 	    "Falling back to scanning...\n";
+ 
+ 	# In the query expression below we're asking for names of files that
+ 	# changed since $time but were not transient (ie created after
+ 	# $time but no longer exist).
+ 	#
+ 	# To accomplish this, we're using the "since" generator to use the
+ 	# recency index to select candidate nodes and "fields" to limit the
+ 	# output to file names only. Then we're using the "expression" term to
+ 	# further constrain the results.
+ 	#
+ 	# The category of transient files that we want to ignore will have a
+ 	# creation clock (cclock) newer than $time_t value and will also not
+ 	# currently exist.
+ 
+ 	my $query = <<"	END";
+ 		["query", "$git_work_tree", {
+ 			"since": $time,
+ 			"fields": ["name"],
+ 			"expression": ["not", ["allof", ["since", $time, "cclock"], ["not", "exists"]]]
+ 		}]
+ 	END
+ 
+ 	print CHLD_IN $query;
+ 	close CHLD_IN;
+ 	my $response = do {local $/; <CHLD_OUT>};
+ 
+ 	die "Watchman: command returned no output.\n" .
+ 	    "Falling back to scanning...\n" if $response eq "";
+ 	die "Watchman: command returned invalid output: $response\n" .
+ 	    "Falling back to scanning...\n" unless $response =~ /^\{/;
+ 
+ 	my $json_pkg;
+ 	eval {
+ 		require JSON::XS;
+ 		$json_pkg = "JSON::XS";
+ 		1;
+ 	} or do {
+ 		require JSON::PP;
+ 		$json_pkg = "JSON::PP";
+ 	};
+ 
+ 	my $o = $json_pkg->new->utf8->decode($response);
+ 
+ 	if ($retry > 0 and $o->{error} and $o->{error} =~ m/unable to resolve root .* directory (.*) is not watched/) {
+ 		print STDERR "Adding '$git_work_tree' to watchman's watch list.\n";
+ 		$retry--;
+ 		qx/watchman watch "$git_work_tree"/;
+ 		die "Failed to make watchman watch '$git_work_tree'.\n" .
+ 		    "Falling back to scanning...\n" if $? != 0;
+ 
+ 		# Watchman will always return all files on the first query so
+ 		# return the fast "everything is dirty" flag to git and do the
+ 		# Watchman query just to get it over with now so we won't pay
+ 		# the cost in git to look up each individual file.
+ 		print "/\0";
+ 		eval { launch_watchman() };
+ 		exit 0;
+ 	}
+ 
+ 	die "Watchman: $o->{error}.\n" .
+ 	    "Falling back to scanning...\n" if $o->{error};
+ 
+ 	binmode STDOUT, ":utf8";
+ 	local $, = "\0";
+ 	print @{$o->{files}};
+ }
diff -crNb MicorpythonOriginal1.12/ulab/.git/hooks/post-update.sample micropython1.12_withUlab/ulab/.git/hooks/post-update.sample
*** MicorpythonOriginal1.12/ulab/.git/hooks/post-update.sample	1970-01-01 02:00:00.000000000 +0200
--- micropython1.12_withUlab/ulab/.git/hooks/post-update.sample	2020-06-18 18:25:22.726936000 +0200
***************
*** 0 ****
--- 1,8 ----
+ #!/bin/sh
+ #
+ # An example hook script to prepare a packed repository for use over
+ # dumb transports.
+ #
+ # To enable this hook, rename this file to "post-update".
+ 
+ exec git update-server-info
diff -crNb MicorpythonOriginal1.12/ulab/.git/hooks/pre-applypatch.sample micropython1.12_withUlab/ulab/.git/hooks/pre-applypatch.sample
*** MicorpythonOriginal1.12/ulab/.git/hooks/pre-applypatch.sample	1970-01-01 02:00:00.000000000 +0200
--- micropython1.12_withUlab/ulab/.git/hooks/pre-applypatch.sample	2020-06-18 18:25:22.726936000 +0200
***************
*** 0 ****
--- 1,14 ----
+ #!/bin/sh
+ #
+ # An example hook script to verify what is about to be committed
+ # by applypatch from an e-mail message.
+ #
+ # The hook should exit with non-zero status after issuing an
+ # appropriate message if it wants to stop the commit.
+ #
+ # To enable this hook, rename this file to "pre-applypatch".
+ 
+ . git-sh-setup
+ precommit="$(git rev-parse --git-path hooks/pre-commit)"
+ test -x "$precommit" && exec "$precommit" ${1+"$@"}
+ :
diff -crNb MicorpythonOriginal1.12/ulab/.git/hooks/pre-commit.sample micropython1.12_withUlab/ulab/.git/hooks/pre-commit.sample
*** MicorpythonOriginal1.12/ulab/.git/hooks/pre-commit.sample	1970-01-01 02:00:00.000000000 +0200
--- micropython1.12_withUlab/ulab/.git/hooks/pre-commit.sample	2020-06-18 18:25:22.726936000 +0200
***************
*** 0 ****
--- 1,49 ----
+ #!/bin/sh
+ #
+ # An example hook script to verify what is about to be committed.
+ # Called by "git commit" with no arguments.  The hook should
+ # exit with non-zero status after issuing an appropriate message if
+ # it wants to stop the commit.
+ #
+ # To enable this hook, rename this file to "pre-commit".
+ 
+ if git rev-parse --verify HEAD >/dev/null 2>&1
+ then
+ 	against=HEAD
+ else
+ 	# Initial commit: diff against an empty tree object
+ 	against=4b825dc642cb6eb9a060e54bf8d69288fbee4904
+ fi
+ 
+ # If you want to allow non-ASCII filenames set this variable to true.
+ allownonascii=$(git config --bool hooks.allownonascii)
+ 
+ # Redirect output to stderr.
+ exec 1>&2
+ 
+ # Cross platform projects tend to avoid non-ASCII filenames; prevent
+ # them from being added to the repository. We exploit the fact that the
+ # printable range starts at the space character and ends with tilde.
+ if [ "$allownonascii" != "true" ] &&
+ 	# Note that the use of brackets around a tr range is ok here, (it's
+ 	# even required, for portability to Solaris 10's /usr/bin/tr), since
+ 	# the square bracket bytes happen to fall in the designated range.
+ 	test $(git diff --cached --name-only --diff-filter=A -z $against |
+ 	  LC_ALL=C tr -d '[ -~]\0' | wc -c) != 0
+ then
+ 	cat <<\EOF
+ Error: Attempt to add a non-ASCII file name.
+ 
+ This can cause problems if you want to work with people on other platforms.
+ 
+ To be portable it is advisable to rename the file.
+ 
+ If you know what you are doing you can disable this check using:
+ 
+   git config hooks.allownonascii true
+ EOF
+ 	exit 1
+ fi
+ 
+ # If there are whitespace errors, print the offending file names and fail.
+ exec git diff-index --check --cached $against --
diff -crNb MicorpythonOriginal1.12/ulab/.git/hooks/prepare-commit-msg.sample micropython1.12_withUlab/ulab/.git/hooks/prepare-commit-msg.sample
*** MicorpythonOriginal1.12/ulab/.git/hooks/prepare-commit-msg.sample	1970-01-01 02:00:00.000000000 +0200
--- micropython1.12_withUlab/ulab/.git/hooks/prepare-commit-msg.sample	2020-06-18 18:25:22.726936000 +0200
***************
*** 0 ****
--- 1,42 ----
+ #!/bin/sh
+ #
+ # An example hook script to prepare the commit log message.
+ # Called by "git commit" with the name of the file that has the
+ # commit message, followed by the description of the commit
+ # message's source.  The hook's purpose is to edit the commit
+ # message file.  If the hook fails with a non-zero status,
+ # the commit is aborted.
+ #
+ # To enable this hook, rename this file to "prepare-commit-msg".
+ 
+ # This hook includes three examples. The first one removes the
+ # "# Please enter the commit message..." help message.
+ #
+ # The second includes the output of "git diff --name-status -r"
+ # into the message, just before the "git status" output.  It is
+ # commented because it doesn't cope with --amend or with squashed
+ # commits.
+ #
+ # The third example adds a Signed-off-by line to the message, that can
+ # still be edited.  This is rarely a good idea.
+ 
+ COMMIT_MSG_FILE=$1
+ COMMIT_SOURCE=$2
+ SHA1=$3
+ 
+ /usr/bin/perl -i.bak -ne 'print unless(m/^. Please enter the commit message/..m/^#$/)' "$COMMIT_MSG_FILE"
+ 
+ # case "$COMMIT_SOURCE,$SHA1" in
+ #  ,|template,)
+ #    /usr/bin/perl -i.bak -pe '
+ #       print "\n" . `git diff --cached --name-status -r`
+ # 	 if /^#/ && $first++ == 0' "$COMMIT_MSG_FILE" ;;
+ #  *) ;;
+ # esac
+ 
+ # SOB=$(git var GIT_COMMITTER_IDENT | sed -n 's/^\(.*>\).*$/Signed-off-by: \1/p')
+ # git interpret-trailers --in-place --trailer "$SOB" "$COMMIT_MSG_FILE"
+ # if test -z "$COMMIT_SOURCE"
+ # then
+ #   /usr/bin/perl -i.bak -pe 'print "\n" if !$first_line++' "$COMMIT_MSG_FILE"
+ # fi
diff -crNb MicorpythonOriginal1.12/ulab/.git/hooks/pre-push.sample micropython1.12_withUlab/ulab/.git/hooks/pre-push.sample
*** MicorpythonOriginal1.12/ulab/.git/hooks/pre-push.sample	1970-01-01 02:00:00.000000000 +0200
--- micropython1.12_withUlab/ulab/.git/hooks/pre-push.sample	2020-06-18 18:25:22.726936000 +0200
***************
*** 0 ****
--- 1,53 ----
+ #!/bin/sh
+ 
+ # An example hook script to verify what is about to be pushed.  Called by "git
+ # push" after it has checked the remote status, but before anything has been
+ # pushed.  If this script exits with a non-zero status nothing will be pushed.
+ #
+ # This hook is called with the following parameters:
+ #
+ # $1 -- Name of the remote to which the push is being done
+ # $2 -- URL to which the push is being done
+ #
+ # If pushing without using a named remote those arguments will be equal.
+ #
+ # Information about the commits which are being pushed is supplied as lines to
+ # the standard input in the form:
+ #
+ #   <local ref> <local sha1> <remote ref> <remote sha1>
+ #
+ # This sample shows how to prevent push of commits where the log message starts
+ # with "WIP" (work in progress).
+ 
+ remote="$1"
+ url="$2"
+ 
+ z40=0000000000000000000000000000000000000000
+ 
+ while read local_ref local_sha remote_ref remote_sha
+ do
+ 	if [ "$local_sha" = $z40 ]
+ 	then
+ 		# Handle delete
+ 		:
+ 	else
+ 		if [ "$remote_sha" = $z40 ]
+ 		then
+ 			# New branch, examine all commits
+ 			range="$local_sha"
+ 		else
+ 			# Update to existing branch, examine new commits
+ 			range="$remote_sha..$local_sha"
+ 		fi
+ 
+ 		# Check for WIP commit
+ 		commit=`git rev-list -n 1 --grep '^WIP' "$range"`
+ 		if [ -n "$commit" ]
+ 		then
+ 			echo >&2 "Found WIP commit in $local_ref, not pushing"
+ 			exit 1
+ 		fi
+ 	fi
+ done
+ 
+ exit 0
diff -crNb MicorpythonOriginal1.12/ulab/.git/hooks/pre-rebase.sample micropython1.12_withUlab/ulab/.git/hooks/pre-rebase.sample
*** MicorpythonOriginal1.12/ulab/.git/hooks/pre-rebase.sample	1970-01-01 02:00:00.000000000 +0200
--- micropython1.12_withUlab/ulab/.git/hooks/pre-rebase.sample	2020-06-18 18:25:22.726936000 +0200
***************
*** 0 ****
--- 1,169 ----
+ #!/bin/sh
+ #
+ # Copyright (c) 2006, 2008 Junio C Hamano
+ #
+ # The "pre-rebase" hook is run just before "git rebase" starts doing
+ # its job, and can prevent the command from running by exiting with
+ # non-zero status.
+ #
+ # The hook is called with the following parameters:
+ #
+ # $1 -- the upstream the series was forked from.
+ # $2 -- the branch being rebased (or empty when rebasing the current branch).
+ #
+ # This sample shows how to prevent topic branches that are already
+ # merged to 'next' branch from getting rebased, because allowing it
+ # would result in rebasing already published history.
+ 
+ publish=next
+ basebranch="$1"
+ if test "$#" = 2
+ then
+ 	topic="refs/heads/$2"
+ else
+ 	topic=`git symbolic-ref HEAD` ||
+ 	exit 0 ;# we do not interrupt rebasing detached HEAD
+ fi
+ 
+ case "$topic" in
+ refs/heads/??/*)
+ 	;;
+ *)
+ 	exit 0 ;# we do not interrupt others.
+ 	;;
+ esac
+ 
+ # Now we are dealing with a topic branch being rebased
+ # on top of master.  Is it OK to rebase it?
+ 
+ # Does the topic really exist?
+ git show-ref -q "$topic" || {
+ 	echo >&2 "No such branch $topic"
+ 	exit 1
+ }
+ 
+ # Is topic fully merged to master?
+ not_in_master=`git rev-list --pretty=oneline ^master "$topic"`
+ if test -z "$not_in_master"
+ then
+ 	echo >&2 "$topic is fully merged to master; better remove it."
+ 	exit 1 ;# we could allow it, but there is no point.
+ fi
+ 
+ # Is topic ever merged to next?  If so you should not be rebasing it.
+ only_next_1=`git rev-list ^master "^$topic" ${publish} | sort`
+ only_next_2=`git rev-list ^master           ${publish} | sort`
+ if test "$only_next_1" = "$only_next_2"
+ then
+ 	not_in_topic=`git rev-list "^$topic" master`
+ 	if test -z "$not_in_topic"
+ 	then
+ 		echo >&2 "$topic is already up to date with master"
+ 		exit 1 ;# we could allow it, but there is no point.
+ 	else
+ 		exit 0
+ 	fi
+ else
+ 	not_in_next=`git rev-list --pretty=oneline ^${publish} "$topic"`
+ 	/usr/bin/perl -e '
+ 		my $topic = $ARGV[0];
+ 		my $msg = "* $topic has commits already merged to public branch:\n";
+ 		my (%not_in_next) = map {
+ 			/^([0-9a-f]+) /;
+ 			($1 => 1);
+ 		} split(/\n/, $ARGV[1]);
+ 		for my $elem (map {
+ 				/^([0-9a-f]+) (.*)$/;
+ 				[$1 => $2];
+ 			} split(/\n/, $ARGV[2])) {
+ 			if (!exists $not_in_next{$elem->[0]}) {
+ 				if ($msg) {
+ 					print STDERR $msg;
+ 					undef $msg;
+ 				}
+ 				print STDERR " $elem->[1]\n";
+ 			}
+ 		}
+ 	' "$topic" "$not_in_next" "$not_in_master"
+ 	exit 1
+ fi
+ 
+ <<\DOC_END
+ 
+ This sample hook safeguards topic branches that have been
+ published from being rewound.
+ 
+ The workflow assumed here is:
+ 
+  * Once a topic branch forks from "master", "master" is never
+    merged into it again (either directly or indirectly).
+ 
+  * Once a topic branch is fully cooked and merged into "master",
+    it is deleted.  If you need to build on top of it to correct
+    earlier mistakes, a new topic branch is created by forking at
+    the tip of the "master".  This is not strictly necessary, but
+    it makes it easier to keep your history simple.
+ 
+  * Whenever you need to test or publish your changes to topic
+    branches, merge them into "next" branch.
+ 
+ The script, being an example, hardcodes the publish branch name
+ to be "next", but it is trivial to make it configurable via
+ $GIT_DIR/config mechanism.
+ 
+ With this workflow, you would want to know:
+ 
+ (1) ... if a topic branch has ever been merged to "next".  Young
+     topic branches can have stupid mistakes you would rather
+     clean up before publishing, and things that have not been
+     merged into other branches can be easily rebased without
+     affecting other people.  But once it is published, you would
+     not want to rewind it.
+ 
+ (2) ... if a topic branch has been fully merged to "master".
+     Then you can delete it.  More importantly, you should not
+     build on top of it -- other people may already want to
+     change things related to the topic as patches against your
+     "master", so if you need further changes, it is better to
+     fork the topic (perhaps with the same name) afresh from the
+     tip of "master".
+ 
+ Let's look at this example:
+ 
+ 		   o---o---o---o---o---o---o---o---o---o "next"
+ 		  /       /           /           /
+ 		 /   a---a---b A     /           /
+ 		/   /               /           /
+ 	       /   /   c---c---c---c B         /
+ 	      /   /   /             \         /
+ 	     /   /   /   b---b C     \       /
+ 	    /   /   /   /             \     /
+     ---o---o---o---o---o---o---o---o---o---o---o "master"
+ 
+ 
+ A, B and C are topic branches.
+ 
+  * A has one fix since it was merged up to "next".
+ 
+  * B has finished.  It has been fully merged up to "master" and "next",
+    and is ready to be deleted.
+ 
+  * C has not merged to "next" at all.
+ 
+ We would want to allow C to be rebased, refuse A, and encourage
+ B to be deleted.
+ 
+ To compute (1):
+ 
+ 	git rev-list ^master ^topic next
+ 	git rev-list ^master        next
+ 
+ 	if these match, topic has not merged in next at all.
+ 
+ To compute (2):
+ 
+ 	git rev-list master..topic
+ 
+ 	if this is empty, it is fully merged to "master".
+ 
+ DOC_END
diff -crNb MicorpythonOriginal1.12/ulab/.git/hooks/pre-receive.sample micropython1.12_withUlab/ulab/.git/hooks/pre-receive.sample
*** MicorpythonOriginal1.12/ulab/.git/hooks/pre-receive.sample	1970-01-01 02:00:00.000000000 +0200
--- micropython1.12_withUlab/ulab/.git/hooks/pre-receive.sample	2020-06-18 18:25:22.726936000 +0200
***************
*** 0 ****
--- 1,24 ----
+ #!/bin/sh
+ #
+ # An example hook script to make use of push options.
+ # The example simply echoes all push options that start with 'echoback='
+ # and rejects all pushes when the "reject" push option is used.
+ #
+ # To enable this hook, rename this file to "pre-receive".
+ 
+ if test -n "$GIT_PUSH_OPTION_COUNT"
+ then
+ 	i=0
+ 	while test "$i" -lt "$GIT_PUSH_OPTION_COUNT"
+ 	do
+ 		eval "value=\$GIT_PUSH_OPTION_$i"
+ 		case "$value" in
+ 		echoback=*)
+ 			echo "echo from the pre-receive-hook: ${value#*=}" >&2
+ 			;;
+ 		reject)
+ 			exit 1
+ 		esac
+ 		i=$((i + 1))
+ 	done
+ fi
diff -crNb MicorpythonOriginal1.12/ulab/.git/hooks/update.sample micropython1.12_withUlab/ulab/.git/hooks/update.sample
*** MicorpythonOriginal1.12/ulab/.git/hooks/update.sample	1970-01-01 02:00:00.000000000 +0200
--- micropython1.12_withUlab/ulab/.git/hooks/update.sample	2020-06-18 18:25:22.726936000 +0200
***************
*** 0 ****
--- 1,128 ----
+ #!/bin/sh
+ #
+ # An example hook script to block unannotated tags from entering.
+ # Called by "git receive-pack" with arguments: refname sha1-old sha1-new
+ #
+ # To enable this hook, rename this file to "update".
+ #
+ # Config
+ # ------
+ # hooks.allowunannotated
+ #   This boolean sets whether unannotated tags will be allowed into the
+ #   repository.  By default they won't be.
+ # hooks.allowdeletetag
+ #   This boolean sets whether deleting tags will be allowed in the
+ #   repository.  By default they won't be.
+ # hooks.allowmodifytag
+ #   This boolean sets whether a tag may be modified after creation. By default
+ #   it won't be.
+ # hooks.allowdeletebranch
+ #   This boolean sets whether deleting branches will be allowed in the
+ #   repository.  By default they won't be.
+ # hooks.denycreatebranch
+ #   This boolean sets whether remotely creating branches will be denied
+ #   in the repository.  By default this is allowed.
+ #
+ 
+ # --- Command line
+ refname="$1"
+ oldrev="$2"
+ newrev="$3"
+ 
+ # --- Safety check
+ if [ -z "$GIT_DIR" ]; then
+ 	echo "Don't run this script from the command line." >&2
+ 	echo " (if you want, you could supply GIT_DIR then run" >&2
+ 	echo "  $0 <ref> <oldrev> <newrev>)" >&2
+ 	exit 1
+ fi
+ 
+ if [ -z "$refname" -o -z "$oldrev" -o -z "$newrev" ]; then
+ 	echo "usage: $0 <ref> <oldrev> <newrev>" >&2
+ 	exit 1
+ fi
+ 
+ # --- Config
+ allowunannotated=$(git config --bool hooks.allowunannotated)
+ allowdeletebranch=$(git config --bool hooks.allowdeletebranch)
+ denycreatebranch=$(git config --bool hooks.denycreatebranch)
+ allowdeletetag=$(git config --bool hooks.allowdeletetag)
+ allowmodifytag=$(git config --bool hooks.allowmodifytag)
+ 
+ # check for no description
+ projectdesc=$(sed -e '1q' "$GIT_DIR/description")
+ case "$projectdesc" in
+ "Unnamed repository"* | "")
+ 	echo "*** Project description file hasn't been set" >&2
+ 	exit 1
+ 	;;
+ esac
+ 
+ # --- Check types
+ # if $newrev is 0000...0000, it's a commit to delete a ref.
+ zero="0000000000000000000000000000000000000000"
+ if [ "$newrev" = "$zero" ]; then
+ 	newrev_type=delete
+ else
+ 	newrev_type=$(git cat-file -t $newrev)
+ fi
+ 
+ case "$refname","$newrev_type" in
+ 	refs/tags/*,commit)
+ 		# un-annotated tag
+ 		short_refname=${refname##refs/tags/}
+ 		if [ "$allowunannotated" != "true" ]; then
+ 			echo "*** The un-annotated tag, $short_refname, is not allowed in this repository" >&2
+ 			echo "*** Use 'git tag [ -a | -s ]' for tags you want to propagate." >&2
+ 			exit 1
+ 		fi
+ 		;;
+ 	refs/tags/*,delete)
+ 		# delete tag
+ 		if [ "$allowdeletetag" != "true" ]; then
+ 			echo "*** Deleting a tag is not allowed in this repository" >&2
+ 			exit 1
+ 		fi
+ 		;;
+ 	refs/tags/*,tag)
+ 		# annotated tag
+ 		if [ "$allowmodifytag" != "true" ] && git rev-parse $refname > /dev/null 2>&1
+ 		then
+ 			echo "*** Tag '$refname' already exists." >&2
+ 			echo "*** Modifying a tag is not allowed in this repository." >&2
+ 			exit 1
+ 		fi
+ 		;;
+ 	refs/heads/*,commit)
+ 		# branch
+ 		if [ "$oldrev" = "$zero" -a "$denycreatebranch" = "true" ]; then
+ 			echo "*** Creating a branch is not allowed in this repository" >&2
+ 			exit 1
+ 		fi
+ 		;;
+ 	refs/heads/*,delete)
+ 		# delete branch
+ 		if [ "$allowdeletebranch" != "true" ]; then
+ 			echo "*** Deleting a branch is not allowed in this repository" >&2
+ 			exit 1
+ 		fi
+ 		;;
+ 	refs/remotes/*,commit)
+ 		# tracking branch
+ 		;;
+ 	refs/remotes/*,delete)
+ 		# delete tracking branch
+ 		if [ "$allowdeletebranch" != "true" ]; then
+ 			echo "*** Deleting a tracking branch is not allowed in this repository" >&2
+ 			exit 1
+ 		fi
+ 		;;
+ 	*)
+ 		# Anything else (is there anything else?)
+ 		echo "*** Update hook: unknown type of update to ref $refname of type $newrev_type" >&2
+ 		exit 1
+ 		;;
+ esac
+ 
+ # --- Finished
+ exit 0
Binary files MicorpythonOriginal1.12/ulab/.git/index and micropython1.12_withUlab/ulab/.git/index differ
diff -crNb MicorpythonOriginal1.12/ulab/.git/info/exclude micropython1.12_withUlab/ulab/.git/info/exclude
*** MicorpythonOriginal1.12/ulab/.git/info/exclude	1970-01-01 02:00:00.000000000 +0200
--- micropython1.12_withUlab/ulab/.git/info/exclude	2020-06-18 18:25:22.726936000 +0200
***************
*** 0 ****
--- 1,6 ----
+ # git ls-files --others --exclude-from=.git/info/exclude
+ # Lines that start with '#' are comments.
+ # For a project mostly in C, the following would be a good set of
+ # exclude patterns (uncomment them if you want to use them):
+ # *.[oa]
+ # *~
diff -crNb MicorpythonOriginal1.12/ulab/.git/logs/HEAD micropython1.12_withUlab/ulab/.git/logs/HEAD
*** MicorpythonOriginal1.12/ulab/.git/logs/HEAD	1970-01-01 02:00:00.000000000 +0200
--- micropython1.12_withUlab/ulab/.git/logs/HEAD	2020-06-18 18:25:25.698905000 +0200
***************
*** 0 ****
--- 1 ----
+ 0000000000000000000000000000000000000000 a223de9c73b1ad175ce61230c0ea89b7c173b88d Shadofisher <graemefisheratwork@gmail.com> 1592497525 +0200	clone: from https://github.com/v923z/micropython-ulab.git
diff -crNb MicorpythonOriginal1.12/ulab/.git/logs/refs/heads/master micropython1.12_withUlab/ulab/.git/logs/refs/heads/master
*** MicorpythonOriginal1.12/ulab/.git/logs/refs/heads/master	1970-01-01 02:00:00.000000000 +0200
--- micropython1.12_withUlab/ulab/.git/logs/refs/heads/master	2020-06-18 18:25:25.698905000 +0200
***************
*** 0 ****
--- 1 ----
+ 0000000000000000000000000000000000000000 a223de9c73b1ad175ce61230c0ea89b7c173b88d Shadofisher <graemefisheratwork@gmail.com> 1592497525 +0200	clone: from https://github.com/v923z/micropython-ulab.git
diff -crNb MicorpythonOriginal1.12/ulab/.git/logs/refs/remotes/origin/HEAD micropython1.12_withUlab/ulab/.git/logs/refs/remotes/origin/HEAD
*** MicorpythonOriginal1.12/ulab/.git/logs/refs/remotes/origin/HEAD	1970-01-01 02:00:00.000000000 +0200
--- micropython1.12_withUlab/ulab/.git/logs/refs/remotes/origin/HEAD	2020-06-18 18:25:25.698905000 +0200
***************
*** 0 ****
--- 1 ----
+ 0000000000000000000000000000000000000000 a223de9c73b1ad175ce61230c0ea89b7c173b88d Shadofisher <graemefisheratwork@gmail.com> 1592497525 +0200	clone: from https://github.com/v923z/micropython-ulab.git
Binary files MicorpythonOriginal1.12/ulab/.git/objects/pack/pack-5821bbe30e2b49469ef22b67ccf55bd57751865e.idx and micropython1.12_withUlab/ulab/.git/objects/pack/pack-5821bbe30e2b49469ef22b67ccf55bd57751865e.idx differ
Binary files MicorpythonOriginal1.12/ulab/.git/objects/pack/pack-5821bbe30e2b49469ef22b67ccf55bd57751865e.pack and micropython1.12_withUlab/ulab/.git/objects/pack/pack-5821bbe30e2b49469ef22b67ccf55bd57751865e.pack differ
diff -crNb MicorpythonOriginal1.12/ulab/.git/packed-refs micropython1.12_withUlab/ulab/.git/packed-refs
*** MicorpythonOriginal1.12/ulab/.git/packed-refs	1970-01-01 02:00:00.000000000 +0200
--- micropython1.12_withUlab/ulab/.git/packed-refs	2020-06-18 18:25:25.698905000 +0200
***************
*** 0 ****
--- 1,12 ----
+ # pack-refs with: peeled fully-peeled sorted 
+ d240e5aad28be84da0b74974074fd6645868a0f3 refs/remotes/origin/1dim
+ a223de9c73b1ad175ce61230c0ea89b7c173b88d refs/remotes/origin/master
+ 2867ec9f13024167fcb22fb06a2e46b1e7fea46d refs/remotes/origin/ndim
+ f9cf519843dd39aadc275fca9b8050f258a73697 refs/remotes/origin/sosfilter
+ f4314892acdb96ad32f3584eb478c86b1189c7fb refs/remotes/origin/speedtest
+ 5d8137c6923d6e2dc7f19c4df38ec77298321066 refs/remotes/origin/static-ndim
+ 2a725d6067ebbc53599c9717fc91d5178c0bddb8 refs/remotes/origin/testing
+ dbe3736223fd498034b1dbe865f3d90817f6b99c refs/tags/0.23
+ 43cda00f6560bd99924ac9db803a247d3b1ed5e1 refs/tags/0.24
+ 847c7f9d63ea3f69337fbb05b7805581350499d0 refs/tags/0.36.0
+ a223de9c73b1ad175ce61230c0ea89b7c173b88d refs/tags/0.50.2
diff -crNb MicorpythonOriginal1.12/ulab/.git/refs/heads/master micropython1.12_withUlab/ulab/.git/refs/heads/master
*** MicorpythonOriginal1.12/ulab/.git/refs/heads/master	1970-01-01 02:00:00.000000000 +0200
--- micropython1.12_withUlab/ulab/.git/refs/heads/master	2020-06-18 18:25:25.698905000 +0200
***************
*** 0 ****
--- 1 ----
+ a223de9c73b1ad175ce61230c0ea89b7c173b88d
diff -crNb MicorpythonOriginal1.12/ulab/.git/refs/remotes/origin/HEAD micropython1.12_withUlab/ulab/.git/refs/remotes/origin/HEAD
*** MicorpythonOriginal1.12/ulab/.git/refs/remotes/origin/HEAD	1970-01-01 02:00:00.000000000 +0200
--- micropython1.12_withUlab/ulab/.git/refs/remotes/origin/HEAD	2020-06-18 18:25:25.698905000 +0200
***************
*** 0 ****
--- 1 ----
+ ref: refs/remotes/origin/master
diff -crNb MicorpythonOriginal1.12/ulab/.github/workflows/build.yml micropython1.12_withUlab/ulab/.github/workflows/build.yml
*** MicorpythonOriginal1.12/ulab/.github/workflows/build.yml	1970-01-01 02:00:00.000000000 +0200
--- micropython1.12_withUlab/ulab/.github/workflows/build.yml	2020-06-18 18:25:25.706905000 +0200
***************
*** 0 ****
--- 1,62 ----
+ name: Build CI
+ 
+ on:
+   push:
+   pull_request:
+     paths:
+     - 'code/**'
+     - 'tests/**'
+     - '.github/workflows/**'
+   release:
+     types: [published]
+   check_suite:
+     types: [rerequested]
+ 
+ jobs:
+   test:
+     runs-on: ubuntu-16.04
+     steps:
+     - name: Dump GitHub context
+       env:
+         GITHUB_CONTEXT: ${{ toJson(github) }}
+       run: echo "$GITHUB_CONTEXT"
+     - name: Set up Python 3.5
+       uses: actions/setup-python@v1
+       with:
+         python-version: 3.5
+ 
+     - name: Versions
+       run: |
+         gcc --version
+         python3 --version
+     - name: Checkout ulab
+       uses: actions/checkout@v1
+ 
+     - name: Checkout micropython repo
+       uses: actions/checkout@v2
+       with:
+         repository: micropython/micropython
+         path: micropython
+ 
+     - name: Checkout micropython submodules
+       run: (cd micropython && git submodule update --init)
+ 
+     - name: Build mpy-cross
+       run: make -C micropython/mpy-cross -j2
+ 
+     - name: Build micropython unix port
+       run: |
+         make -C micropython/ports/unix -j2 deplibs
+         make -C micropython/ports/unix -j2 USER_C_MODULES=$(readlink -f .)
+ 
+     - name: Run tests
+       run: env MICROPYTHON_CPYTHON3=python3.5 MICROPY_MICROPYTHON=micropython/ports/unix/micropython micropython/tests/run-tests -d tests
+     - name: Print failure info
+       run: |
+         for exp in *.exp;
+         do testbase=$(basename $exp .exp);
+         echo -e "\nFAILURE $testbase";
+         diff -u $testbase.exp $testbase.out;
+         done
+       if: failure()
+ 
diff -crNb MicorpythonOriginal1.12/ulab/.gitignore micropython1.12_withUlab/ulab/.gitignore
*** MicorpythonOriginal1.12/ulab/.gitignore	1970-01-01 02:00:00.000000000 +0200
--- micropython1.12_withUlab/ulab/.gitignore	2020-06-18 18:25:25.706905000 +0200
***************
*** 0 ****
--- 1,3 ----
+ /micropython
+ /*.exp
+ /*.out
diff -crNb MicorpythonOriginal1.12/ulab/LICENSE micropython1.12_withUlab/ulab/LICENSE
*** MicorpythonOriginal1.12/ulab/LICENSE	1970-01-01 02:00:00.000000000 +0200
--- micropython1.12_withUlab/ulab/LICENSE	2020-06-18 18:25:25.706905000 +0200
***************
*** 0 ****
--- 1,21 ----
+ MIT License
+ 
+ Copyright (c) 2019 Zoltán Vörös
+ 
+ Permission is hereby granted, free of charge, to any person obtaining a copy
+ of this software and associated documentation files (the "Software"), to deal
+ in the Software without restriction, including without limitation the rights
+ to use, copy, modify, merge, publish, distribute, sublicense, and/or sell
+ copies of the Software, and to permit persons to whom the Software is
+ furnished to do so, subject to the following conditions:
+ 
+ The above copyright notice and this permission notice shall be included in all
+ copies or substantial portions of the Software.
+ 
+ THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
+ IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
+ FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE
+ AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
+ LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,
+ OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE
+ SOFTWARE.
diff -crNb MicorpythonOriginal1.12/ulab/README.md micropython1.12_withUlab/ulab/README.md
*** MicorpythonOriginal1.12/ulab/README.md	1970-01-01 02:00:00.000000000 +0200
--- micropython1.12_withUlab/ulab/README.md	2020-06-18 18:25:25.706905000 +0200
***************
*** 0 ****
--- 1,117 ----
+ # ulab
+ 
+ `ulab` is a `numpy`-like array manipulation library for `micropython` and `CircuitPython`.
+ The module is written in C, defines compact containers for numerical
+ data, and is fast. The library is a software-only standard `micropython` user module,
+ i.e., it has no hardware dependencies, and can be compiled for any platform. 
+ The `float` implementation of `micropython` (`float`, or `double`) is automatically detected.
+ 
+ # Supported functions
+ 
+ 
+ ## ndarray
+ 
+ `ulab` implements `numpy`'s `ndarray` with the `==`, `!=`, `<`, `<=`, `>`, `>=`, `+`, `-`, `/`, `*`, and `**` binary operators, and the `len`, `~`, `-`, `+`, `abs` unary operators that operate element-wise. Type-aware `ndarray`s can be initialised from any `micropython` iterable, lists of iterables, or by means of the `ones`, `zeros`, `eye`, or `linspace` functions. 
+ 
+ `ndarray`s can be iterated on, and have a number of their own methods, such as `shape`, `reshape`, `transpose`, `size`, and `itemsize`.
+ 
+ ## Modules
+ 
+ In addition to the `ndarray`'s operators and methods, seven modules define a great number of functions that can take `ndarray`s or `micropython` iterables as their arguments. If flash space is a concern, unnecessary sub-modules can be excluded from the compiled firmware with a pre-processor switch. 
+ 
+ ### vector
+ 
+ The `vector` sub-module implements all functions of the `math` package (e.g., `acos`, `acosh`, ..., `tan`, `tanh`) of `micropython` for `ndarray`s and iterables. In addition, it also provided tools for vectorising generic, user-defined `python` functions. 
+ 
+ ### numerical
+ 
+ The `numerical` sub-module defines the `roll`, `flip`, `diff`, `sort` and `argsort` functions for `ndarray`s, and, in addition, the `min`, `max`, `argmin`, `argmax`, `sum`, `mean`, `std` functions that work with `ndarray`s, as well as generic one-dimensional iterables.
+ 
+ ### linalg
+ 
+ The `linalg` sub-module implements functions for matrix inversion, dot product, and the calculation of the determinant, eigenvalues, eigenvectors, Cholesky decomposition, and trace. 
+ 
+ ### poly
+ 
+ The `poly` sub-module defines the `polyval`, and `polyfit` functions from `numpy`.
+ 
+ ### fft
+ 
+ The `fft` sub-module implements the fast Fourier transform, and its inverse for one-dimensional `ndarray`s.
+ 
+ ### filter
+ 
+ The `filter` sub-module implements one-dimensional convolution.
+ 
+ ### compare
+ 
+ The `compare` sub-module contains the implementation of the `equal`, `not_equal`, `minimum`, `maximum`, and `clip` functions.
+ 
+ ### approx
+ 
+ The `approx` sub-module contains the implementation of the `interp` function of `numpy`, and `newton`, `bisect`, and `fmin` from `scipy`.
+ 
+ ### extras
+ 
+ The `extras` sub-module is meant as a user-extendable module, and currently implements the `spectrogram` function of `scipy`. 
+ 
+ # Finding help
+ 
+ Documentation can be found on [readthedocs](readthedocs.org/) under [micropython-ulab](https://micropython-ulab.readthedocs.io/en/latest), as well as at [circuitpython-ulab](
+ https://circuitpython.readthedocs.io/en/latest/shared-bindings/ulab/__init__.html). A number of practical examples are listed in the excellent [circuitpython-ulab](https://learn.adafruit.com/ulab-crunch-numbers-fast-with-circuitpython/overview) overview.
+ 
+ # Firmware
+ 
+ Firmware for pyboard.v.1.1, and PYBD_SF6 is released once in a while, and can be downloaded
+ from https://github.com/v923z/micropython-ulab/releases. Since a number of features can be
+ set in the firmware (threading, support for SD card, LEDs, user switch etc.), and it is
+ impossible to create something that suits everyone, these releases should only be used for
+ quick testing of `ulab`. Otherwise, compilation from the source is required with
+ the appropriate settings, which are usually defined in the `mpconfigboard.h` file of the port
+ in question.
+ 
+ `ulab` is also included in most development builds of `CircuitPython` for SAMD51 and nRF microcontrollers.
+ 
+ ## Compiling
+ 
+ If you want to try the latest version of `ulab` on micropython, or your hardware is 
+ different to pyboard.v.1.1, or PYBD_SF6, the firmware can be compiled 
+ from the source by following these steps:
+ 
+ First, you have to clone the `micropython` repository by running
+ 
+ ```
+ git clone https://github.com/micropython/micropython.git
+ ```
+ on the command line. This will create a new repository with the name `micropython`. Staying there, clone the `ulab` repository with 
+ 
+ ```
+ git clone https://github.com/v923z/micropython-ulab.git ulab
+ ```
+ 
+ If you don't have the cross-compiler installed, your might want to do that now, for instance on Linux by executing
+ 
+ ```
+ sudo apt-get install gcc-arm-none-eabi
+ ```
+ 
+ If this step was successful, you can try to run the `make` command in the port's directory as
+ ```
+ make BOARD=PYBV11 USER_C_MODULES=../../../ulab all
+ ```
+ which will prepare the firmware for pyboard.v.11. Similarly, 
+ ```
+ make BOARD=PYBD_SF6 USER_C_MODULES=../../../ulab all
+ ```
+ will compile for the SF6 member of the PYBD series. If your target is `unix`, you don't need to specify the `BOARD` parameter.
+ 
+ Provided that you managed to compile the firmware, you would upload that by running either
+ ```
+ dfu-util --alt 0 -D firmware.dfu
+ ```
+ or 
+ ```
+ python pydfu.py -u firmware.dfu
+ ```
+ 
+ In case you got stuck somewhere in the process, a bit more detailed instructions can be found under https://github.com/micropython/micropython/wiki/Getting-Started, and https://github.com/micropython/micropython/wiki/Pyboard-Firmware-Update.
diff -crNb MicorpythonOriginal1.12/ulab/tests/00smoke.py micropython1.12_withUlab/ulab/tests/00smoke.py
*** MicorpythonOriginal1.12/ulab/tests/00smoke.py	1970-01-01 02:00:00.000000000 +0200
--- micropython1.12_withUlab/ulab/tests/00smoke.py	2020-06-18 18:25:25.714905000 +0200
***************
*** 0 ****
--- 1,2 ----
+ import ulab
+ print(ulab.eye(3))
diff -crNb MicorpythonOriginal1.12/ulab/tests/00smoke.py.exp micropython1.12_withUlab/ulab/tests/00smoke.py.exp
*** MicorpythonOriginal1.12/ulab/tests/00smoke.py.exp	1970-01-01 02:00:00.000000000 +0200
--- micropython1.12_withUlab/ulab/tests/00smoke.py.exp	2020-06-18 18:25:25.714905000 +0200
***************
*** 0 ****
--- 1,3 ----
+ array([[1.0, 0.0, 0.0],
+ 	 [0.0, 1.0, 0.0],
+ 	 [0.0, 0.0, 1.0]], dtype=float)
diff -crNb MicorpythonOriginal1.12/ulab/tests/argminmax.py micropython1.12_withUlab/ulab/tests/argminmax.py
*** MicorpythonOriginal1.12/ulab/tests/argminmax.py	1970-01-01 02:00:00.000000000 +0200
--- micropython1.12_withUlab/ulab/tests/argminmax.py	2020-06-18 18:25:25.714905000 +0200
***************
*** 0 ****
--- 1,62 ----
+ import ulab
+ 
+ # Adapted from https://docs.python.org/3.8/library/itertools.html#itertools.permutations
+ def permutations(iterable, r=None):
+     # permutations('ABCD', 2) --> AB AC AD BA BC BD CA CB CD DA DB DC
+     # permutations(range(3)) --> 012 021 102 120 201 210
+     pool = tuple(iterable)
+     n = len(pool)
+     r = n if r is None else r
+     if r > n:
+         return
+     indices = list(range(n))
+     cycles = list(range(n, n-r, -1))
+     yield tuple(pool[i] for i in indices[:r])
+     while n:
+         for i in reversed(range(r)):
+             cycles[i] -= 1
+             if cycles[i] == 0:
+                 indices[i:] = indices[i+1:] + indices[i:i+1]
+                 cycles[i] = n - i
+             else:
+                 j = cycles[i]
+                 indices[i], indices[-j] = indices[-j], indices[i]
+                 yield tuple(pool[i] for i in indices[:r])
+                 break
+         else:
+             return
+ 
+ # Combinations expected to throw
+ try:
+     print(ulab.numerical.argmin([]))
+ except ValueError:
+     print("ValueError")
+ 
+ try:
+     print(ulab.numerical.argmax([]))
+ except ValueError:
+     print("ValueError")
+ 
+ # Combinations expected to succeed
+ print(ulab.numerical.argmin([1]))
+ print(ulab.numerical.argmax([1]))
+ print(ulab.numerical.argmin(ulab.array([1])))
+ print(ulab.numerical.argmax(ulab.array([1])))
+ 
+ print()
+ print("max tests")
+ for p in permutations((100,200,300)):
+     m1 = ulab.numerical.argmax(p)
+     m2 = ulab.numerical.argmax(ulab.array(p))
+     print(p, m1, m2)
+     if m1 != m2 or p[m1] != max(p):
+         print("FAIL", p, m1, m2, max(p))
+ 
+ print()
+ print("min tests")
+ for p in permutations((100,200,300)):
+     m1 = ulab.numerical.argmin(p)
+     m2 = ulab.numerical.argmin(ulab.array(p))
+     print(p, m1, m2)
+     if m1 != m2 or p[m1] != min(p):
+         print("FAIL", p, m1, m2, min(p))
diff -crNb MicorpythonOriginal1.12/ulab/tests/argminmax.py.exp micropython1.12_withUlab/ulab/tests/argminmax.py.exp
*** MicorpythonOriginal1.12/ulab/tests/argminmax.py.exp	1970-01-01 02:00:00.000000000 +0200
--- micropython1.12_withUlab/ulab/tests/argminmax.py.exp	2020-06-18 18:25:25.714905000 +0200
***************
*** 0 ****
--- 1,22 ----
+ ValueError
+ ValueError
+ 0
+ 0
+ 0
+ 0
+ 
+ max tests
+ (100, 200, 300) 2 2
+ (100, 300, 200) 1 1
+ (200, 100, 300) 2 2
+ (200, 300, 100) 1 1
+ (300, 100, 200) 0 0
+ (300, 200, 100) 0 0
+ 
+ min tests
+ (100, 200, 300) 0 0
+ (100, 300, 200) 0 0
+ (200, 100, 300) 1 1
+ (200, 300, 100) 2 2
+ (300, 100, 200) 1 1
+ (300, 200, 100) 2 2
diff -crNb MicorpythonOriginal1.12/ulab/tests/cholesky.py micropython1.12_withUlab/ulab/tests/cholesky.py
*** MicorpythonOriginal1.12/ulab/tests/cholesky.py	1970-01-01 02:00:00.000000000 +0200
--- micropython1.12_withUlab/ulab/tests/cholesky.py	2020-06-18 18:25:25.714905000 +0200
***************
*** 0 ****
--- 1,17 ----
+ import ulab
+ from ulab import linalg
+ 
+ a = ulab.array([[1, 2], [2, 5]])
+ print(linalg.cholesky(a))
+ 
+ b = a = ulab.array([[25, 15, -5], [15, 18,  0], [-5,  0, 11]])
+ print(linalg.cholesky(b))
+ 
+ c = ulab.array([[18, 22,  54,  42], [22, 70,  86,  62], [54, 86, 174, 134], [42, 62, 134, 106]])
+ print(linalg.cholesky(c))
+ 
+ # this throw a ValueError exception
+ d = ulab.array([[25, 15, -5], [15, 18,  0], [-5,  0, 1]])
+ 
+ 
+ 
diff -crNb MicorpythonOriginal1.12/ulab/tests/cholesky.py.exp micropython1.12_withUlab/ulab/tests/cholesky.py.exp
*** MicorpythonOriginal1.12/ulab/tests/cholesky.py.exp	1970-01-01 02:00:00.000000000 +0200
--- micropython1.12_withUlab/ulab/tests/cholesky.py.exp	2020-06-18 18:25:25.714905000 +0200
***************
*** 0 ****
--- 1,9 ----
+ array([[1.0, 0.0],
+ 	 [2.0, 1.0]], dtype=float)
+ array([[5.0, 0.0, 0.0],
+ 	 [3.0, 3.0, 0.0],
+ 	 [-1.0, 1.0, 3.0]], dtype=float)
+ array([[4.242640687119285, 0.0, 0.0, 0.0],
+ 	 [5.185449728701349, 6.565905201197403, 0.0, 0.0],
+ 	 [12.72792206135786, 3.046038495400855, 1.649742247909068, 0.0],
+ 	 [9.899494936611665, 1.624553864213789, 1.849711005231386, 1.392621247645583]], dtype=float)
diff -crNb MicorpythonOriginal1.12/ulab/tests/compare.py micropython1.12_withUlab/ulab/tests/compare.py
*** MicorpythonOriginal1.12/ulab/tests/compare.py	1970-01-01 02:00:00.000000000 +0200
--- micropython1.12_withUlab/ulab/tests/compare.py	2020-06-18 18:25:25.714905000 +0200
***************
*** 0 ****
--- 1,14 ----
+ import ulab
+ from ulab import compare
+ 
+ a = ulab.array([1, 2, 3, 4, 5], dtype=ulab.uint8)
+ b = ulab.array([5, 4, 3, 2, 1], dtype=ulab.float)
+ print(compare.minimum(a, b))
+ print(compare.maximum(a, b))
+ print(compare.maximum(1, 5.5))
+ 
+ a = ulab.array(range(9), dtype=ulab.uint8)
+ print(compare.clip(a, 3, 7))
+ 
+ b = 3 * ulab.ones(len(a), dtype=ulab.float)
+ print(compare.clip(a, b, 7))
diff -crNb MicorpythonOriginal1.12/ulab/tests/compare.py.exp micropython1.12_withUlab/ulab/tests/compare.py.exp
*** MicorpythonOriginal1.12/ulab/tests/compare.py.exp	1970-01-01 02:00:00.000000000 +0200
--- micropython1.12_withUlab/ulab/tests/compare.py.exp	2020-06-18 18:25:25.714905000 +0200
***************
*** 0 ****
--- 1,5 ----
+ array([1.0, 2.0, 3.0, 2.0, 1.0], dtype=float)
+ array([5.0, 4.0, 3.0, 4.0, 5.0], dtype=float)
+ 5.5
+ array([3, 3, 3, 3, 4, 5, 6, 7, 7], dtype=uint8)
+ array([3.0, 3.0, 3.0, 3.0, 4.0, 5.0, 6.0, 7.0, 7.0], dtype=float)
diff -crNb MicorpythonOriginal1.12/ulab/tests/constructors.py micropython1.12_withUlab/ulab/tests/constructors.py
*** MicorpythonOriginal1.12/ulab/tests/constructors.py	1970-01-01 02:00:00.000000000 +0200
--- micropython1.12_withUlab/ulab/tests/constructors.py	2020-06-18 18:25:25.714905000 +0200
***************
*** 0 ****
--- 1,13 ----
+ from ulab import linalg
+ import ulab
+ print(ulab.ones(3))
+ print(ulab.ones((2,3)))
+ print(ulab.zeros(3))
+ print(ulab.zeros((2,3)))
+ print(ulab.eye(3))
+ print(ulab.ones(1, dtype=ulab.int8))
+ print(ulab.ones(2, dtype=ulab.uint8))
+ print(ulab.ones(3, dtype=ulab.int16))
+ print(ulab.ones(4, dtype=ulab.uint16))
+ print(ulab.ones(5, dtype=ulab.float))
+ print(ulab.linspace(0, 1, 9))
diff -crNb MicorpythonOriginal1.12/ulab/tests/constructors.py.exp micropython1.12_withUlab/ulab/tests/constructors.py.exp
*** MicorpythonOriginal1.12/ulab/tests/constructors.py.exp	1970-01-01 02:00:00.000000000 +0200
--- micropython1.12_withUlab/ulab/tests/constructors.py.exp	2020-06-18 18:25:25.714905000 +0200
***************
*** 0 ****
--- 1,15 ----
+ array([1.0, 1.0, 1.0], dtype=float)
+ array([[1.0, 1.0, 1.0],
+ 	 [1.0, 1.0, 1.0]], dtype=float)
+ array([0.0, 0.0, 0.0], dtype=float)
+ array([[0.0, 0.0, 0.0],
+ 	 [0.0, 0.0, 0.0]], dtype=float)
+ array([[1.0, 0.0, 0.0],
+ 	 [0.0, 1.0, 0.0],
+ 	 [0.0, 0.0, 1.0]], dtype=float)
+ array([1], dtype=int8)
+ array([1, 1], dtype=uint8)
+ array([1, 1, 1], dtype=int16)
+ array([1, 1, 1, 1], dtype=uint16)
+ array([1.0, 1.0, 1.0, 1.0, 1.0], dtype=float)
+ array([0.0, 0.125, 0.25, 0.375, 0.5, 0.625, 0.75, 0.875, 1.0], dtype=float)
diff -crNb MicorpythonOriginal1.12/ulab/tests/linalg.py micropython1.12_withUlab/ulab/tests/linalg.py
*** MicorpythonOriginal1.12/ulab/tests/linalg.py	1970-01-01 02:00:00.000000000 +0200
--- micropython1.12_withUlab/ulab/tests/linalg.py	2020-06-18 18:25:25.714905000 +0200
***************
*** 0 ****
--- 1,17 ----
+ import ulab
+ from ulab import linalg
+ 
+ a = ulab.array([[1, 2], [3, 4]])
+ print(linalg.inv(a))
+ 
+ b = ulab.array([[1, 2, 3], [4, 5, 6], [7, 8, 7]])
+ print(linalg.inv(b))
+ 
+ c = ulab.array([[1, 2, 0, 0], [0, 6, 7, 0], [0, 0, 8, 9], [0, 0, 15, 13]])
+ print(linalg.inv(c))
+ 
+ print(linalg.det(a))
+ print(linalg.det(b))
+ print(linalg.det(c))
+ 
+ 
diff -crNb MicorpythonOriginal1.12/ulab/tests/linalg.py.exp micropython1.12_withUlab/ulab/tests/linalg.py.exp
*** MicorpythonOriginal1.12/ulab/tests/linalg.py.exp	1970-01-01 02:00:00.000000000 +0200
--- micropython1.12_withUlab/ulab/tests/linalg.py.exp	2020-06-18 18:25:25.714905000 +0200
***************
*** 0 ****
--- 1,12 ----
+ array([[-2.0, 1.0],
+ 	 [1.5, -0.5]], dtype=float)
+ array([[-2.166666666666667, 1.666666666666667, -0.5],
+ 	 [2.333333333333333, -2.333333333333333, 1.0],
+ 	 [-0.5, 1.0, -0.5]], dtype=float)
+ array([[1.0, -0.3333333333333333, -0.9784946236559136, 0.6774193548387095],
+ 	 [0.0, 0.1666666666666667, 0.489247311827957, -0.3387096774193548],
+ 	 [0.0, 0.0, -0.4193548387096775, 0.2903225806451613],
+ 	 [-0.0, -0.0, 0.4838709677419355, -0.2580645161290323]], dtype=float)
+ -2.0
+ 6.0
+ -186.0
diff -crNb MicorpythonOriginal1.12/ulab/tests/operators.py micropython1.12_withUlab/ulab/tests/operators.py
*** MicorpythonOriginal1.12/ulab/tests/operators.py	1970-01-01 02:00:00.000000000 +0200
--- micropython1.12_withUlab/ulab/tests/operators.py	2020-06-18 18:25:25.714905000 +0200
***************
*** 0 ****
--- 1,20 ----
+ import ulab
+ a = ulab.ones(3)
+ print(a+a)
+ print(a-a)
+ print(a*a)
+ print(a/a)
+ print(a+2)
+ print(a-2)
+ print(a*2)
+ print(a/2)
+ print(a<1)
+ print(a<2)
+ print(a<=0)
+ print(a<=1)
+ print(a>1)
+ print(a>2)
+ print(a>=0)
+ print(a>=1)
+ #print(a==0)  # These print just true or false.  Is it right?  is it a micropython limitation?
+ #print(a==1)
diff -crNb MicorpythonOriginal1.12/ulab/tests/operators.py.exp micropython1.12_withUlab/ulab/tests/operators.py.exp
*** MicorpythonOriginal1.12/ulab/tests/operators.py.exp	1970-01-01 02:00:00.000000000 +0200
--- micropython1.12_withUlab/ulab/tests/operators.py.exp	2020-06-18 18:25:25.714905000 +0200
***************
*** 0 ****
--- 1,16 ----
+ array([2.0, 2.0, 2.0], dtype=float)
+ array([0.0, 0.0, 0.0], dtype=float)
+ array([1.0, 1.0, 1.0], dtype=float)
+ array([1.0, 1.0, 1.0], dtype=float)
+ array([3.0, 3.0, 3.0], dtype=float)
+ array([-1.0, -1.0, -1.0], dtype=float)
+ array([2.0, 2.0, 2.0], dtype=float)
+ array([0.5, 0.5, 0.5], dtype=float)
+ [False, False, False]
+ [True, True, True]
+ [False, False, False]
+ [True, True, True]
+ [False, False, False]
+ [False, False, False]
+ [True, True, True]
+ [True, True, True]
diff -crNb MicorpythonOriginal1.12/ulab/tests/poly.py micropython1.12_withUlab/ulab/tests/poly.py
*** MicorpythonOriginal1.12/ulab/tests/poly.py	1970-01-01 02:00:00.000000000 +0200
--- micropython1.12_withUlab/ulab/tests/poly.py	2020-06-18 18:25:25.714905000 +0200
***************
*** 0 ****
--- 1,27 ----
+ import ulab
+ from ulab import poly
+ from ulab import vector
+ 
+ # polynom evaluation
+ x = ulab.linspace(0, 10, num=9)
+ p = [1, 2, 3]
+ y = poly.polyval(p, x)
+ print(y)
+ 
+ # linear fit
+ x = ulab.linspace(-5, 5, num=11)
+ y = x + vector.sin(x)
+ p = poly.polyfit(x, y, 1)
+ print(p)
+ 
+ # quadratic fit
+ x = ulab.linspace(-5, 5, num=11)
+ y = x*x + vector.sin(x)*3.0
+ p = poly.polyfit(x, y, 2)
+ print(p)
+ 
+ # cubic fit
+ x = ulab.linspace(-5, 5, num=11)
+ y = x*x*x + vector.sin(x)*10.0
+ p = poly.polyfit(x, y, 3)
+ print(p)
diff -crNb MicorpythonOriginal1.12/ulab/tests/poly.py.exp micropython1.12_withUlab/ulab/tests/poly.py.exp
*** MicorpythonOriginal1.12/ulab/tests/poly.py.exp	1970-01-01 02:00:00.000000000 +0200
--- micropython1.12_withUlab/ulab/tests/poly.py.exp	2020-06-18 18:25:25.714905000 +0200
***************
*** 0 ****
--- 1,4 ----
+ array([3.0, 7.0625, 14.25, 24.5625, 38.0, 54.56250000000001, 74.25000000000001, 97.06250000000001, 123.0], dtype=float)
+ array([0.9138471728743898, -8.074349270001139e-17], dtype=float)
+ array([1.0, -0.2584584813768293, 3.552713678800501e-15], dtype=float)
+ array([0.766798803225857, 0.0, 3.289453031323674, 0.0], dtype=float)
diff -crNb MicorpythonOriginal1.12/ulab/tests/slicing2.py micropython1.12_withUlab/ulab/tests/slicing2.py
*** MicorpythonOriginal1.12/ulab/tests/slicing2.py	1970-01-01 02:00:00.000000000 +0200
--- micropython1.12_withUlab/ulab/tests/slicing2.py	2020-06-18 18:25:25.714905000 +0200
***************
*** 0 ****
--- 1,8 ----
+ try:
+     import ulab as np
+ except:
+     import numpy as np
+ 
+ a = np.array(range(9), dtype=np.float)
+ print("a:\t", list(a))
+ print("a < 5:\t", list(a[a < 5]))
diff -crNb MicorpythonOriginal1.12/ulab/tests/slicing2.py.exp micropython1.12_withUlab/ulab/tests/slicing2.py.exp
*** MicorpythonOriginal1.12/ulab/tests/slicing2.py.exp	1970-01-01 02:00:00.000000000 +0200
--- micropython1.12_withUlab/ulab/tests/slicing2.py.exp	2020-06-18 18:25:25.714905000 +0200
***************
*** 0 ****
--- 1,2 ----
+ a:	 [0.0, 1.0, 2.0, 3.0, 4.0, 5.0, 6.0, 7.0, 8.0]
+ a < 5:	 [0.0, 1.0, 2.0, 3.0, 4.0]
diff -crNb MicorpythonOriginal1.12/ulab/tests/slicing.py micropython1.12_withUlab/ulab/tests/slicing.py
*** MicorpythonOriginal1.12/ulab/tests/slicing.py	1970-01-01 02:00:00.000000000 +0200
--- micropython1.12_withUlab/ulab/tests/slicing.py	2020-06-18 18:25:25.714905000 +0200
***************
*** 0 ****
--- 1,25 ----
+ try:
+     import ulab as np
+ except:
+     import numpy as np
+ 
+ for num in range(1,4):
+     for start in range(-num, num+1):
+         for end in range(-num, num+1):
+             for stride in (-3, -2, -1, 1, 2, 3):
+                 l = list(range(num))
+                 a = np.array(l, dtype=np.int8)
+                 sl = l[start:end:stride]
+                 ll = len(sl)
+                 try:
+                     sa = list(a[start:end:stride])
+                     la = len(sa)
+                 except IndexError as e:
+                     sa = str(e)
+                     la = -1
+                 print("%2d [% d:% d:% d]     %-24r %-24r%s" % (
+                     num, start, end, stride, sl, sa, " ***" if sa != sl else ""))
+ 
+                 a[start:end:stride] = np.ones(len(sl)) * -1
+                 print("%2d [% d:% d:% d]     %r" % (
+                     num, start, end, stride, list(a)))
diff -crNb MicorpythonOriginal1.12/ulab/tests/slicing.py.exp micropython1.12_withUlab/ulab/tests/slicing.py.exp
*** MicorpythonOriginal1.12/ulab/tests/slicing.py.exp	1970-01-01 02:00:00.000000000 +0200
--- micropython1.12_withUlab/ulab/tests/slicing.py.exp	2020-06-18 18:25:25.714905000 +0200
***************
*** 0 ****
--- 1,996 ----
+  1 [-1:-1:-3]     []                       []                      
+  1 [-1:-1:-3]     [0]
+  1 [-1:-1:-2]     []                       []                      
+  1 [-1:-1:-2]     [0]
+  1 [-1:-1:-1]     []                       []                      
+  1 [-1:-1:-1]     [0]
+  1 [-1:-1: 1]     []                       []                      
+  1 [-1:-1: 1]     [0]
+  1 [-1:-1: 2]     []                       []                      
+  1 [-1:-1: 2]     [0]
+  1 [-1:-1: 3]     []                       []                      
+  1 [-1:-1: 3]     [0]
+  1 [-1: 0:-3]     []                       []                      
+  1 [-1: 0:-3]     [0]
+  1 [-1: 0:-2]     []                       []                      
+  1 [-1: 0:-2]     [0]
+  1 [-1: 0:-1]     []                       []                      
+  1 [-1: 0:-1]     [0]
+  1 [-1: 0: 1]     []                       []                      
+  1 [-1: 0: 1]     [0]
+  1 [-1: 0: 2]     []                       []                      
+  1 [-1: 0: 2]     [0]
+  1 [-1: 0: 3]     []                       []                      
+  1 [-1: 0: 3]     [0]
+  1 [-1: 1:-3]     []                       []                      
+  1 [-1: 1:-3]     [0]
+  1 [-1: 1:-2]     []                       []                      
+  1 [-1: 1:-2]     [0]
+  1 [-1: 1:-1]     []                       []                      
+  1 [-1: 1:-1]     [0]
+  1 [-1: 1: 1]     [0]                      [0]                     
+  1 [-1: 1: 1]     [-1]
+  1 [-1: 1: 2]     [0]                      [0]                     
+  1 [-1: 1: 2]     [-1]
+  1 [-1: 1: 3]     [0]                      [0]                     
+  1 [-1: 1: 3]     [-1]
+  1 [ 0:-1:-3]     []                       []                      
+  1 [ 0:-1:-3]     [0]
+  1 [ 0:-1:-2]     []                       []                      
+  1 [ 0:-1:-2]     [0]
+  1 [ 0:-1:-1]     []                       []                      
+  1 [ 0:-1:-1]     [0]
+  1 [ 0:-1: 1]     []                       []                      
+  1 [ 0:-1: 1]     [0]
+  1 [ 0:-1: 2]     []                       []                      
+  1 [ 0:-1: 2]     [0]
+  1 [ 0:-1: 3]     []                       []                      
+  1 [ 0:-1: 3]     [0]
+  1 [ 0: 0:-3]     []                       []                      
+  1 [ 0: 0:-3]     [0]
+  1 [ 0: 0:-2]     []                       []                      
+  1 [ 0: 0:-2]     [0]
+  1 [ 0: 0:-1]     []                       []                      
+  1 [ 0: 0:-1]     [0]
+  1 [ 0: 0: 1]     []                       []                      
+  1 [ 0: 0: 1]     [0]
+  1 [ 0: 0: 2]     []                       []                      
+  1 [ 0: 0: 2]     [0]
+  1 [ 0: 0: 3]     []                       []                      
+  1 [ 0: 0: 3]     [0]
+  1 [ 0: 1:-3]     []                       []                      
+  1 [ 0: 1:-3]     [0]
+  1 [ 0: 1:-2]     []                       []                      
+  1 [ 0: 1:-2]     [0]
+  1 [ 0: 1:-1]     []                       []                      
+  1 [ 0: 1:-1]     [0]
+  1 [ 0: 1: 1]     [0]                      [0]                     
+  1 [ 0: 1: 1]     [-1]
+  1 [ 0: 1: 2]     [0]                      [0]                     
+  1 [ 0: 1: 2]     [-1]
+  1 [ 0: 1: 3]     [0]                      [0]                     
+  1 [ 0: 1: 3]     [-1]
+  1 [ 1:-1:-3]     []                       []                      
+  1 [ 1:-1:-3]     [0]
+  1 [ 1:-1:-2]     []                       []                      
+  1 [ 1:-1:-2]     [0]
+  1 [ 1:-1:-1]     []                       []                      
+  1 [ 1:-1:-1]     [0]
+  1 [ 1:-1: 1]     []                       []                      
+  1 [ 1:-1: 1]     [0]
+  1 [ 1:-1: 2]     []                       []                      
+  1 [ 1:-1: 2]     [0]
+  1 [ 1:-1: 3]     []                       []                      
+  1 [ 1:-1: 3]     [0]
+  1 [ 1: 0:-3]     []                       []                      
+  1 [ 1: 0:-3]     [0]
+  1 [ 1: 0:-2]     []                       []                      
+  1 [ 1: 0:-2]     [0]
+  1 [ 1: 0:-1]     []                       []                      
+  1 [ 1: 0:-1]     [0]
+  1 [ 1: 0: 1]     []                       []                      
+  1 [ 1: 0: 1]     [0]
+  1 [ 1: 0: 2]     []                       []                      
+  1 [ 1: 0: 2]     [0]
+  1 [ 1: 0: 3]     []                       []                      
+  1 [ 1: 0: 3]     [0]
+  1 [ 1: 1:-3]     []                       []                      
+  1 [ 1: 1:-3]     [0]
+  1 [ 1: 1:-2]     []                       []                      
+  1 [ 1: 1:-2]     [0]
+  1 [ 1: 1:-1]     []                       []                      
+  1 [ 1: 1:-1]     [0]
+  1 [ 1: 1: 1]     []                       []                      
+  1 [ 1: 1: 1]     [0]
+  1 [ 1: 1: 2]     []                       []                      
+  1 [ 1: 1: 2]     [0]
+  1 [ 1: 1: 3]     []                       []                      
+  1 [ 1: 1: 3]     [0]
+  2 [-2:-2:-3]     []                       []                      
+  2 [-2:-2:-3]     [0, 1]
+  2 [-2:-2:-2]     []                       []                      
+  2 [-2:-2:-2]     [0, 1]
+  2 [-2:-2:-1]     []                       []                      
+  2 [-2:-2:-1]     [0, 1]
+  2 [-2:-2: 1]     []                       []                      
+  2 [-2:-2: 1]     [0, 1]
+  2 [-2:-2: 2]     []                       []                      
+  2 [-2:-2: 2]     [0, 1]
+  2 [-2:-2: 3]     []                       []                      
+  2 [-2:-2: 3]     [0, 1]
+  2 [-2:-1:-3]     []                       []                      
+  2 [-2:-1:-3]     [0, 1]
+  2 [-2:-1:-2]     []                       []                      
+  2 [-2:-1:-2]     [0, 1]
+  2 [-2:-1:-1]     []                       []                      
+  2 [-2:-1:-1]     [0, 1]
+  2 [-2:-1: 1]     [0]                      [0]                     
+  2 [-2:-1: 1]     [-1, 1]
+  2 [-2:-1: 2]     [0]                      [0]                     
+  2 [-2:-1: 2]     [-1, 1]
+  2 [-2:-1: 3]     [0]                      [0]                     
+  2 [-2:-1: 3]     [-1, 1]
+  2 [-2: 0:-3]     []                       []                      
+  2 [-2: 0:-3]     [0, 1]
+  2 [-2: 0:-2]     []                       []                      
+  2 [-2: 0:-2]     [0, 1]
+  2 [-2: 0:-1]     []                       []                      
+  2 [-2: 0:-1]     [0, 1]
+  2 [-2: 0: 1]     []                       []                      
+  2 [-2: 0: 1]     [0, 1]
+  2 [-2: 0: 2]     []                       []                      
+  2 [-2: 0: 2]     [0, 1]
+  2 [-2: 0: 3]     []                       []                      
+  2 [-2: 0: 3]     [0, 1]
+  2 [-2: 1:-3]     []                       []                      
+  2 [-2: 1:-3]     [0, 1]
+  2 [-2: 1:-2]     []                       []                      
+  2 [-2: 1:-2]     [0, 1]
+  2 [-2: 1:-1]     []                       []                      
+  2 [-2: 1:-1]     [0, 1]
+  2 [-2: 1: 1]     [0]                      [0]                     
+  2 [-2: 1: 1]     [-1, 1]
+  2 [-2: 1: 2]     [0]                      [0]                     
+  2 [-2: 1: 2]     [-1, 1]
+  2 [-2: 1: 3]     [0]                      [0]                     
+  2 [-2: 1: 3]     [-1, 1]
+  2 [-2: 2:-3]     []                       []                      
+  2 [-2: 2:-3]     [0, 1]
+  2 [-2: 2:-2]     []                       []                      
+  2 [-2: 2:-2]     [0, 1]
+  2 [-2: 2:-1]     []                       []                      
+  2 [-2: 2:-1]     [0, 1]
+  2 [-2: 2: 1]     [0, 1]                   [0, 1]                  
+  2 [-2: 2: 1]     [-1, -1]
+  2 [-2: 2: 2]     [0]                      [0]                     
+  2 [-2: 2: 2]     [-1, 1]
+  2 [-2: 2: 3]     [0]                      [0]                     
+  2 [-2: 2: 3]     [-1, 1]
+  2 [-1:-2:-3]     [1]                      [1]                     
+  2 [-1:-2:-3]     [0, -1]
+  2 [-1:-2:-2]     [1]                      [1]                     
+  2 [-1:-2:-2]     [0, -1]
+  2 [-1:-2:-1]     [1]                      [1]                     
+  2 [-1:-2:-1]     [0, -1]
+  2 [-1:-2: 1]     []                       []                      
+  2 [-1:-2: 1]     [0, 1]
+  2 [-1:-2: 2]     []                       []                      
+  2 [-1:-2: 2]     [0, 1]
+  2 [-1:-2: 3]     []                       []                      
+  2 [-1:-2: 3]     [0, 1]
+  2 [-1:-1:-3]     []                       []                      
+  2 [-1:-1:-3]     [0, 1]
+  2 [-1:-1:-2]     []                       []                      
+  2 [-1:-1:-2]     [0, 1]
+  2 [-1:-1:-1]     []                       []                      
+  2 [-1:-1:-1]     [0, 1]
+  2 [-1:-1: 1]     []                       []                      
+  2 [-1:-1: 1]     [0, 1]
+  2 [-1:-1: 2]     []                       []                      
+  2 [-1:-1: 2]     [0, 1]
+  2 [-1:-1: 3]     []                       []                      
+  2 [-1:-1: 3]     [0, 1]
+  2 [-1: 0:-3]     [1]                      [1]                     
+  2 [-1: 0:-3]     [0, -1]
+  2 [-1: 0:-2]     [1]                      [1]                     
+  2 [-1: 0:-2]     [0, -1]
+  2 [-1: 0:-1]     [1]                      [1]                     
+  2 [-1: 0:-1]     [0, -1]
+  2 [-1: 0: 1]     []                       []                      
+  2 [-1: 0: 1]     [0, 1]
+  2 [-1: 0: 2]     []                       []                      
+  2 [-1: 0: 2]     [0, 1]
+  2 [-1: 0: 3]     []                       []                      
+  2 [-1: 0: 3]     [0, 1]
+  2 [-1: 1:-3]     []                       []                      
+  2 [-1: 1:-3]     [0, 1]
+  2 [-1: 1:-2]     []                       []                      
+  2 [-1: 1:-2]     [0, 1]
+  2 [-1: 1:-1]     []                       []                      
+  2 [-1: 1:-1]     [0, 1]
+  2 [-1: 1: 1]     []                       []                      
+  2 [-1: 1: 1]     [0, 1]
+  2 [-1: 1: 2]     []                       []                      
+  2 [-1: 1: 2]     [0, 1]
+  2 [-1: 1: 3]     []                       []                      
+  2 [-1: 1: 3]     [0, 1]
+  2 [-1: 2:-3]     []                       []                      
+  2 [-1: 2:-3]     [0, 1]
+  2 [-1: 2:-2]     []                       []                      
+  2 [-1: 2:-2]     [0, 1]
+  2 [-1: 2:-1]     []                       []                      
+  2 [-1: 2:-1]     [0, 1]
+  2 [-1: 2: 1]     [1]                      [1]                     
+  2 [-1: 2: 1]     [0, -1]
+  2 [-1: 2: 2]     [1]                      [1]                     
+  2 [-1: 2: 2]     [0, -1]
+  2 [-1: 2: 3]     [1]                      [1]                     
+  2 [-1: 2: 3]     [0, -1]
+  2 [ 0:-2:-3]     []                       []                      
+  2 [ 0:-2:-3]     [0, 1]
+  2 [ 0:-2:-2]     []                       []                      
+  2 [ 0:-2:-2]     [0, 1]
+  2 [ 0:-2:-1]     []                       []                      
+  2 [ 0:-2:-1]     [0, 1]
+  2 [ 0:-2: 1]     []                       []                      
+  2 [ 0:-2: 1]     [0, 1]
+  2 [ 0:-2: 2]     []                       []                      
+  2 [ 0:-2: 2]     [0, 1]
+  2 [ 0:-2: 3]     []                       []                      
+  2 [ 0:-2: 3]     [0, 1]
+  2 [ 0:-1:-3]     []                       []                      
+  2 [ 0:-1:-3]     [0, 1]
+  2 [ 0:-1:-2]     []                       []                      
+  2 [ 0:-1:-2]     [0, 1]
+  2 [ 0:-1:-1]     []                       []                      
+  2 [ 0:-1:-1]     [0, 1]
+  2 [ 0:-1: 1]     [0]                      [0]                     
+  2 [ 0:-1: 1]     [-1, 1]
+  2 [ 0:-1: 2]     [0]                      [0]                     
+  2 [ 0:-1: 2]     [-1, 1]
+  2 [ 0:-1: 3]     [0]                      [0]                     
+  2 [ 0:-1: 3]     [-1, 1]
+  2 [ 0: 0:-3]     []                       []                      
+  2 [ 0: 0:-3]     [0, 1]
+  2 [ 0: 0:-2]     []                       []                      
+  2 [ 0: 0:-2]     [0, 1]
+  2 [ 0: 0:-1]     []                       []                      
+  2 [ 0: 0:-1]     [0, 1]
+  2 [ 0: 0: 1]     []                       []                      
+  2 [ 0: 0: 1]     [0, 1]
+  2 [ 0: 0: 2]     []                       []                      
+  2 [ 0: 0: 2]     [0, 1]
+  2 [ 0: 0: 3]     []                       []                      
+  2 [ 0: 0: 3]     [0, 1]
+  2 [ 0: 1:-3]     []                       []                      
+  2 [ 0: 1:-3]     [0, 1]
+  2 [ 0: 1:-2]     []                       []                      
+  2 [ 0: 1:-2]     [0, 1]
+  2 [ 0: 1:-1]     []                       []                      
+  2 [ 0: 1:-1]     [0, 1]
+  2 [ 0: 1: 1]     [0]                      [0]                     
+  2 [ 0: 1: 1]     [-1, 1]
+  2 [ 0: 1: 2]     [0]                      [0]                     
+  2 [ 0: 1: 2]     [-1, 1]
+  2 [ 0: 1: 3]     [0]                      [0]                     
+  2 [ 0: 1: 3]     [-1, 1]
+  2 [ 0: 2:-3]     []                       []                      
+  2 [ 0: 2:-3]     [0, 1]
+  2 [ 0: 2:-2]     []                       []                      
+  2 [ 0: 2:-2]     [0, 1]
+  2 [ 0: 2:-1]     []                       []                      
+  2 [ 0: 2:-1]     [0, 1]
+  2 [ 0: 2: 1]     [0, 1]                   [0, 1]                  
+  2 [ 0: 2: 1]     [-1, -1]
+  2 [ 0: 2: 2]     [0]                      [0]                     
+  2 [ 0: 2: 2]     [-1, 1]
+  2 [ 0: 2: 3]     [0]                      [0]                     
+  2 [ 0: 2: 3]     [-1, 1]
+  2 [ 1:-2:-3]     [1]                      [1]                     
+  2 [ 1:-2:-3]     [0, -1]
+  2 [ 1:-2:-2]     [1]                      [1]                     
+  2 [ 1:-2:-2]     [0, -1]
+  2 [ 1:-2:-1]     [1]                      [1]                     
+  2 [ 1:-2:-1]     [0, -1]
+  2 [ 1:-2: 1]     []                       []                      
+  2 [ 1:-2: 1]     [0, 1]
+  2 [ 1:-2: 2]     []                       []                      
+  2 [ 1:-2: 2]     [0, 1]
+  2 [ 1:-2: 3]     []                       []                      
+  2 [ 1:-2: 3]     [0, 1]
+  2 [ 1:-1:-3]     []                       []                      
+  2 [ 1:-1:-3]     [0, 1]
+  2 [ 1:-1:-2]     []                       []                      
+  2 [ 1:-1:-2]     [0, 1]
+  2 [ 1:-1:-1]     []                       []                      
+  2 [ 1:-1:-1]     [0, 1]
+  2 [ 1:-1: 1]     []                       []                      
+  2 [ 1:-1: 1]     [0, 1]
+  2 [ 1:-1: 2]     []                       []                      
+  2 [ 1:-1: 2]     [0, 1]
+  2 [ 1:-1: 3]     []                       []                      
+  2 [ 1:-1: 3]     [0, 1]
+  2 [ 1: 0:-3]     [1]                      [1]                     
+  2 [ 1: 0:-3]     [0, -1]
+  2 [ 1: 0:-2]     [1]                      [1]                     
+  2 [ 1: 0:-2]     [0, -1]
+  2 [ 1: 0:-1]     [1]                      [1]                     
+  2 [ 1: 0:-1]     [0, -1]
+  2 [ 1: 0: 1]     []                       []                      
+  2 [ 1: 0: 1]     [0, 1]
+  2 [ 1: 0: 2]     []                       []                      
+  2 [ 1: 0: 2]     [0, 1]
+  2 [ 1: 0: 3]     []                       []                      
+  2 [ 1: 0: 3]     [0, 1]
+  2 [ 1: 1:-3]     []                       []                      
+  2 [ 1: 1:-3]     [0, 1]
+  2 [ 1: 1:-2]     []                       []                      
+  2 [ 1: 1:-2]     [0, 1]
+  2 [ 1: 1:-1]     []                       []                      
+  2 [ 1: 1:-1]     [0, 1]
+  2 [ 1: 1: 1]     []                       []                      
+  2 [ 1: 1: 1]     [0, 1]
+  2 [ 1: 1: 2]     []                       []                      
+  2 [ 1: 1: 2]     [0, 1]
+  2 [ 1: 1: 3]     []                       []                      
+  2 [ 1: 1: 3]     [0, 1]
+  2 [ 1: 2:-3]     []                       []                      
+  2 [ 1: 2:-3]     [0, 1]
+  2 [ 1: 2:-2]     []                       []                      
+  2 [ 1: 2:-2]     [0, 1]
+  2 [ 1: 2:-1]     []                       []                      
+  2 [ 1: 2:-1]     [0, 1]
+  2 [ 1: 2: 1]     [1]                      [1]                     
+  2 [ 1: 2: 1]     [0, -1]
+  2 [ 1: 2: 2]     [1]                      [1]                     
+  2 [ 1: 2: 2]     [0, -1]
+  2 [ 1: 2: 3]     [1]                      [1]                     
+  2 [ 1: 2: 3]     [0, -1]
+  2 [ 2:-2:-3]     [1]                      [1]                     
+  2 [ 2:-2:-3]     [0, -1]
+  2 [ 2:-2:-2]     [1]                      [1]                     
+  2 [ 2:-2:-2]     [0, -1]
+  2 [ 2:-2:-1]     [1]                      [1]                     
+  2 [ 2:-2:-1]     [0, -1]
+  2 [ 2:-2: 1]     []                       []                      
+  2 [ 2:-2: 1]     [0, 1]
+  2 [ 2:-2: 2]     []                       []                      
+  2 [ 2:-2: 2]     [0, 1]
+  2 [ 2:-2: 3]     []                       []                      
+  2 [ 2:-2: 3]     [0, 1]
+  2 [ 2:-1:-3]     []                       []                      
+  2 [ 2:-1:-3]     [0, 1]
+  2 [ 2:-1:-2]     []                       []                      
+  2 [ 2:-1:-2]     [0, 1]
+  2 [ 2:-1:-1]     []                       []                      
+  2 [ 2:-1:-1]     [0, 1]
+  2 [ 2:-1: 1]     []                       []                      
+  2 [ 2:-1: 1]     [0, 1]
+  2 [ 2:-1: 2]     []                       []                      
+  2 [ 2:-1: 2]     [0, 1]
+  2 [ 2:-1: 3]     []                       []                      
+  2 [ 2:-1: 3]     [0, 1]
+  2 [ 2: 0:-3]     [1]                      [1]                     
+  2 [ 2: 0:-3]     [0, -1]
+  2 [ 2: 0:-2]     [1]                      [1]                     
+  2 [ 2: 0:-2]     [0, -1]
+  2 [ 2: 0:-1]     [1]                      [1]                     
+  2 [ 2: 0:-1]     [0, -1]
+  2 [ 2: 0: 1]     []                       []                      
+  2 [ 2: 0: 1]     [0, 1]
+  2 [ 2: 0: 2]     []                       []                      
+  2 [ 2: 0: 2]     [0, 1]
+  2 [ 2: 0: 3]     []                       []                      
+  2 [ 2: 0: 3]     [0, 1]
+  2 [ 2: 1:-3]     []                       []                      
+  2 [ 2: 1:-3]     [0, 1]
+  2 [ 2: 1:-2]     []                       []                      
+  2 [ 2: 1:-2]     [0, 1]
+  2 [ 2: 1:-1]     []                       []                      
+  2 [ 2: 1:-1]     [0, 1]
+  2 [ 2: 1: 1]     []                       []                      
+  2 [ 2: 1: 1]     [0, 1]
+  2 [ 2: 1: 2]     []                       []                      
+  2 [ 2: 1: 2]     [0, 1]
+  2 [ 2: 1: 3]     []                       []                      
+  2 [ 2: 1: 3]     [0, 1]
+  2 [ 2: 2:-3]     []                       []                      
+  2 [ 2: 2:-3]     [0, 1]
+  2 [ 2: 2:-2]     []                       []                      
+  2 [ 2: 2:-2]     [0, 1]
+  2 [ 2: 2:-1]     []                       []                      
+  2 [ 2: 2:-1]     [0, 1]
+  2 [ 2: 2: 1]     []                       []                      
+  2 [ 2: 2: 1]     [0, 1]
+  2 [ 2: 2: 2]     []                       []                      
+  2 [ 2: 2: 2]     [0, 1]
+  2 [ 2: 2: 3]     []                       []                      
+  2 [ 2: 2: 3]     [0, 1]
+  3 [-3:-3:-3]     []                       []                      
+  3 [-3:-3:-3]     [0, 1, 2]
+  3 [-3:-3:-2]     []                       []                      
+  3 [-3:-3:-2]     [0, 1, 2]
+  3 [-3:-3:-1]     []                       []                      
+  3 [-3:-3:-1]     [0, 1, 2]
+  3 [-3:-3: 1]     []                       []                      
+  3 [-3:-3: 1]     [0, 1, 2]
+  3 [-3:-3: 2]     []                       []                      
+  3 [-3:-3: 2]     [0, 1, 2]
+  3 [-3:-3: 3]     []                       []                      
+  3 [-3:-3: 3]     [0, 1, 2]
+  3 [-3:-2:-3]     []                       []                      
+  3 [-3:-2:-3]     [0, 1, 2]
+  3 [-3:-2:-2]     []                       []                      
+  3 [-3:-2:-2]     [0, 1, 2]
+  3 [-3:-2:-1]     []                       []                      
+  3 [-3:-2:-1]     [0, 1, 2]
+  3 [-3:-2: 1]     [0]                      [0]                     
+  3 [-3:-2: 1]     [-1, 1, 2]
+  3 [-3:-2: 2]     [0]                      [0]                     
+  3 [-3:-2: 2]     [-1, 1, 2]
+  3 [-3:-2: 3]     [0]                      [0]                     
+  3 [-3:-2: 3]     [-1, 1, 2]
+  3 [-3:-1:-3]     []                       []                      
+  3 [-3:-1:-3]     [0, 1, 2]
+  3 [-3:-1:-2]     []                       []                      
+  3 [-3:-1:-2]     [0, 1, 2]
+  3 [-3:-1:-1]     []                       []                      
+  3 [-3:-1:-1]     [0, 1, 2]
+  3 [-3:-1: 1]     [0, 1]                   [0, 1]                  
+  3 [-3:-1: 1]     [-1, -1, 2]
+  3 [-3:-1: 2]     [0]                      [0]                     
+  3 [-3:-1: 2]     [-1, 1, 2]
+  3 [-3:-1: 3]     [0]                      [0]                     
+  3 [-3:-1: 3]     [-1, 1, 2]
+  3 [-3: 0:-3]     []                       []                      
+  3 [-3: 0:-3]     [0, 1, 2]
+  3 [-3: 0:-2]     []                       []                      
+  3 [-3: 0:-2]     [0, 1, 2]
+  3 [-3: 0:-1]     []                       []                      
+  3 [-3: 0:-1]     [0, 1, 2]
+  3 [-3: 0: 1]     []                       []                      
+  3 [-3: 0: 1]     [0, 1, 2]
+  3 [-3: 0: 2]     []                       []                      
+  3 [-3: 0: 2]     [0, 1, 2]
+  3 [-3: 0: 3]     []                       []                      
+  3 [-3: 0: 3]     [0, 1, 2]
+  3 [-3: 1:-3]     []                       []                      
+  3 [-3: 1:-3]     [0, 1, 2]
+  3 [-3: 1:-2]     []                       []                      
+  3 [-3: 1:-2]     [0, 1, 2]
+  3 [-3: 1:-1]     []                       []                      
+  3 [-3: 1:-1]     [0, 1, 2]
+  3 [-3: 1: 1]     [0]                      [0]                     
+  3 [-3: 1: 1]     [-1, 1, 2]
+  3 [-3: 1: 2]     [0]                      [0]                     
+  3 [-3: 1: 2]     [-1, 1, 2]
+  3 [-3: 1: 3]     [0]                      [0]                     
+  3 [-3: 1: 3]     [-1, 1, 2]
+  3 [-3: 2:-3]     []                       []                      
+  3 [-3: 2:-3]     [0, 1, 2]
+  3 [-3: 2:-2]     []                       []                      
+  3 [-3: 2:-2]     [0, 1, 2]
+  3 [-3: 2:-1]     []                       []                      
+  3 [-3: 2:-1]     [0, 1, 2]
+  3 [-3: 2: 1]     [0, 1]                   [0, 1]                  
+  3 [-3: 2: 1]     [-1, -1, 2]
+  3 [-3: 2: 2]     [0]                      [0]                     
+  3 [-3: 2: 2]     [-1, 1, 2]
+  3 [-3: 2: 3]     [0]                      [0]                     
+  3 [-3: 2: 3]     [-1, 1, 2]
+  3 [-3: 3:-3]     []                       []                      
+  3 [-3: 3:-3]     [0, 1, 2]
+  3 [-3: 3:-2]     []                       []                      
+  3 [-3: 3:-2]     [0, 1, 2]
+  3 [-3: 3:-1]     []                       []                      
+  3 [-3: 3:-1]     [0, 1, 2]
+  3 [-3: 3: 1]     [0, 1, 2]                [0, 1, 2]               
+  3 [-3: 3: 1]     [-1, -1, -1]
+  3 [-3: 3: 2]     [0, 2]                   [0, 2]                  
+  3 [-3: 3: 2]     [-1, 1, -1]
+  3 [-3: 3: 3]     [0]                      [0]                     
+  3 [-3: 3: 3]     [-1, 1, 2]
+  3 [-2:-3:-3]     [1]                      [1]                     
+  3 [-2:-3:-3]     [0, -1, 2]
+  3 [-2:-3:-2]     [1]                      [1]                     
+  3 [-2:-3:-2]     [0, -1, 2]
+  3 [-2:-3:-1]     [1]                      [1]                     
+  3 [-2:-3:-1]     [0, -1, 2]
+  3 [-2:-3: 1]     []                       []                      
+  3 [-2:-3: 1]     [0, 1, 2]
+  3 [-2:-3: 2]     []                       []                      
+  3 [-2:-3: 2]     [0, 1, 2]
+  3 [-2:-3: 3]     []                       []                      
+  3 [-2:-3: 3]     [0, 1, 2]
+  3 [-2:-2:-3]     []                       []                      
+  3 [-2:-2:-3]     [0, 1, 2]
+  3 [-2:-2:-2]     []                       []                      
+  3 [-2:-2:-2]     [0, 1, 2]
+  3 [-2:-2:-1]     []                       []                      
+  3 [-2:-2:-1]     [0, 1, 2]
+  3 [-2:-2: 1]     []                       []                      
+  3 [-2:-2: 1]     [0, 1, 2]
+  3 [-2:-2: 2]     []                       []                      
+  3 [-2:-2: 2]     [0, 1, 2]
+  3 [-2:-2: 3]     []                       []                      
+  3 [-2:-2: 3]     [0, 1, 2]
+  3 [-2:-1:-3]     []                       []                      
+  3 [-2:-1:-3]     [0, 1, 2]
+  3 [-2:-1:-2]     []                       []                      
+  3 [-2:-1:-2]     [0, 1, 2]
+  3 [-2:-1:-1]     []                       []                      
+  3 [-2:-1:-1]     [0, 1, 2]
+  3 [-2:-1: 1]     [1]                      [1]                     
+  3 [-2:-1: 1]     [0, -1, 2]
+  3 [-2:-1: 2]     [1]                      [1]                     
+  3 [-2:-1: 2]     [0, -1, 2]
+  3 [-2:-1: 3]     [1]                      [1]                     
+  3 [-2:-1: 3]     [0, -1, 2]
+  3 [-2: 0:-3]     [1]                      [1]                     
+  3 [-2: 0:-3]     [0, -1, 2]
+  3 [-2: 0:-2]     [1]                      [1]                     
+  3 [-2: 0:-2]     [0, -1, 2]
+  3 [-2: 0:-1]     [1]                      [1]                     
+  3 [-2: 0:-1]     [0, -1, 2]
+  3 [-2: 0: 1]     []                       []                      
+  3 [-2: 0: 1]     [0, 1, 2]
+  3 [-2: 0: 2]     []                       []                      
+  3 [-2: 0: 2]     [0, 1, 2]
+  3 [-2: 0: 3]     []                       []                      
+  3 [-2: 0: 3]     [0, 1, 2]
+  3 [-2: 1:-3]     []                       []                      
+  3 [-2: 1:-3]     [0, 1, 2]
+  3 [-2: 1:-2]     []                       []                      
+  3 [-2: 1:-2]     [0, 1, 2]
+  3 [-2: 1:-1]     []                       []                      
+  3 [-2: 1:-1]     [0, 1, 2]
+  3 [-2: 1: 1]     []                       []                      
+  3 [-2: 1: 1]     [0, 1, 2]
+  3 [-2: 1: 2]     []                       []                      
+  3 [-2: 1: 2]     [0, 1, 2]
+  3 [-2: 1: 3]     []                       []                      
+  3 [-2: 1: 3]     [0, 1, 2]
+  3 [-2: 2:-3]     []                       []                      
+  3 [-2: 2:-3]     [0, 1, 2]
+  3 [-2: 2:-2]     []                       []                      
+  3 [-2: 2:-2]     [0, 1, 2]
+  3 [-2: 2:-1]     []                       []                      
+  3 [-2: 2:-1]     [0, 1, 2]
+  3 [-2: 2: 1]     [1]                      [1]                     
+  3 [-2: 2: 1]     [0, -1, 2]
+  3 [-2: 2: 2]     [1]                      [1]                     
+  3 [-2: 2: 2]     [0, -1, 2]
+  3 [-2: 2: 3]     [1]                      [1]                     
+  3 [-2: 2: 3]     [0, -1, 2]
+  3 [-2: 3:-3]     []                       []                      
+  3 [-2: 3:-3]     [0, 1, 2]
+  3 [-2: 3:-2]     []                       []                      
+  3 [-2: 3:-2]     [0, 1, 2]
+  3 [-2: 3:-1]     []                       []                      
+  3 [-2: 3:-1]     [0, 1, 2]
+  3 [-2: 3: 1]     [1, 2]                   [1, 2]                  
+  3 [-2: 3: 1]     [0, -1, -1]
+  3 [-2: 3: 2]     [1]                      [1]                     
+  3 [-2: 3: 2]     [0, -1, 2]
+  3 [-2: 3: 3]     [1]                      [1]                     
+  3 [-2: 3: 3]     [0, -1, 2]
+  3 [-1:-3:-3]     [2]                      [2]                     
+  3 [-1:-3:-3]     [0, 1, -1]
+  3 [-1:-3:-2]     [2]                      [2]                     
+  3 [-1:-3:-2]     [0, 1, -1]
+  3 [-1:-3:-1]     [2, 1]                   [2, 1]                  
+  3 [-1:-3:-1]     [0, -1, -1]
+  3 [-1:-3: 1]     []                       []                      
+  3 [-1:-3: 1]     [0, 1, 2]
+  3 [-1:-3: 2]     []                       []                      
+  3 [-1:-3: 2]     [0, 1, 2]
+  3 [-1:-3: 3]     []                       []                      
+  3 [-1:-3: 3]     [0, 1, 2]
+  3 [-1:-2:-3]     [2]                      [2]                     
+  3 [-1:-2:-3]     [0, 1, -1]
+  3 [-1:-2:-2]     [2]                      [2]                     
+  3 [-1:-2:-2]     [0, 1, -1]
+  3 [-1:-2:-1]     [2]                      [2]                     
+  3 [-1:-2:-1]     [0, 1, -1]
+  3 [-1:-2: 1]     []                       []                      
+  3 [-1:-2: 1]     [0, 1, 2]
+  3 [-1:-2: 2]     []                       []                      
+  3 [-1:-2: 2]     [0, 1, 2]
+  3 [-1:-2: 3]     []                       []                      
+  3 [-1:-2: 3]     [0, 1, 2]
+  3 [-1:-1:-3]     []                       []                      
+  3 [-1:-1:-3]     [0, 1, 2]
+  3 [-1:-1:-2]     []                       []                      
+  3 [-1:-1:-2]     [0, 1, 2]
+  3 [-1:-1:-1]     []                       []                      
+  3 [-1:-1:-1]     [0, 1, 2]
+  3 [-1:-1: 1]     []                       []                      
+  3 [-1:-1: 1]     [0, 1, 2]
+  3 [-1:-1: 2]     []                       []                      
+  3 [-1:-1: 2]     [0, 1, 2]
+  3 [-1:-1: 3]     []                       []                      
+  3 [-1:-1: 3]     [0, 1, 2]
+  3 [-1: 0:-3]     [2]                      [2]                     
+  3 [-1: 0:-3]     [0, 1, -1]
+  3 [-1: 0:-2]     [2]                      [2]                     
+  3 [-1: 0:-2]     [0, 1, -1]
+  3 [-1: 0:-1]     [2, 1]                   [2, 1]                  
+  3 [-1: 0:-1]     [0, -1, -1]
+  3 [-1: 0: 1]     []                       []                      
+  3 [-1: 0: 1]     [0, 1, 2]
+  3 [-1: 0: 2]     []                       []                      
+  3 [-1: 0: 2]     [0, 1, 2]
+  3 [-1: 0: 3]     []                       []                      
+  3 [-1: 0: 3]     [0, 1, 2]
+  3 [-1: 1:-3]     [2]                      [2]                     
+  3 [-1: 1:-3]     [0, 1, -1]
+  3 [-1: 1:-2]     [2]                      [2]                     
+  3 [-1: 1:-2]     [0, 1, -1]
+  3 [-1: 1:-1]     [2]                      [2]                     
+  3 [-1: 1:-1]     [0, 1, -1]
+  3 [-1: 1: 1]     []                       []                      
+  3 [-1: 1: 1]     [0, 1, 2]
+  3 [-1: 1: 2]     []                       []                      
+  3 [-1: 1: 2]     [0, 1, 2]
+  3 [-1: 1: 3]     []                       []                      
+  3 [-1: 1: 3]     [0, 1, 2]
+  3 [-1: 2:-3]     []                       []                      
+  3 [-1: 2:-3]     [0, 1, 2]
+  3 [-1: 2:-2]     []                       []                      
+  3 [-1: 2:-2]     [0, 1, 2]
+  3 [-1: 2:-1]     []                       []                      
+  3 [-1: 2:-1]     [0, 1, 2]
+  3 [-1: 2: 1]     []                       []                      
+  3 [-1: 2: 1]     [0, 1, 2]
+  3 [-1: 2: 2]     []                       []                      
+  3 [-1: 2: 2]     [0, 1, 2]
+  3 [-1: 2: 3]     []                       []                      
+  3 [-1: 2: 3]     [0, 1, 2]
+  3 [-1: 3:-3]     []                       []                      
+  3 [-1: 3:-3]     [0, 1, 2]
+  3 [-1: 3:-2]     []                       []                      
+  3 [-1: 3:-2]     [0, 1, 2]
+  3 [-1: 3:-1]     []                       []                      
+  3 [-1: 3:-1]     [0, 1, 2]
+  3 [-1: 3: 1]     [2]                      [2]                     
+  3 [-1: 3: 1]     [0, 1, -1]
+  3 [-1: 3: 2]     [2]                      [2]                     
+  3 [-1: 3: 2]     [0, 1, -1]
+  3 [-1: 3: 3]     [2]                      [2]                     
+  3 [-1: 3: 3]     [0, 1, -1]
+  3 [ 0:-3:-3]     []                       []                      
+  3 [ 0:-3:-3]     [0, 1, 2]
+  3 [ 0:-3:-2]     []                       []                      
+  3 [ 0:-3:-2]     [0, 1, 2]
+  3 [ 0:-3:-1]     []                       []                      
+  3 [ 0:-3:-1]     [0, 1, 2]
+  3 [ 0:-3: 1]     []                       []                      
+  3 [ 0:-3: 1]     [0, 1, 2]
+  3 [ 0:-3: 2]     []                       []                      
+  3 [ 0:-3: 2]     [0, 1, 2]
+  3 [ 0:-3: 3]     []                       []                      
+  3 [ 0:-3: 3]     [0, 1, 2]
+  3 [ 0:-2:-3]     []                       []                      
+  3 [ 0:-2:-3]     [0, 1, 2]
+  3 [ 0:-2:-2]     []                       []                      
+  3 [ 0:-2:-2]     [0, 1, 2]
+  3 [ 0:-2:-1]     []                       []                      
+  3 [ 0:-2:-1]     [0, 1, 2]
+  3 [ 0:-2: 1]     [0]                      [0]                     
+  3 [ 0:-2: 1]     [-1, 1, 2]
+  3 [ 0:-2: 2]     [0]                      [0]                     
+  3 [ 0:-2: 2]     [-1, 1, 2]
+  3 [ 0:-2: 3]     [0]                      [0]                     
+  3 [ 0:-2: 3]     [-1, 1, 2]
+  3 [ 0:-1:-3]     []                       []                      
+  3 [ 0:-1:-3]     [0, 1, 2]
+  3 [ 0:-1:-2]     []                       []                      
+  3 [ 0:-1:-2]     [0, 1, 2]
+  3 [ 0:-1:-1]     []                       []                      
+  3 [ 0:-1:-1]     [0, 1, 2]
+  3 [ 0:-1: 1]     [0, 1]                   [0, 1]                  
+  3 [ 0:-1: 1]     [-1, -1, 2]
+  3 [ 0:-1: 2]     [0]                      [0]                     
+  3 [ 0:-1: 2]     [-1, 1, 2]
+  3 [ 0:-1: 3]     [0]                      [0]                     
+  3 [ 0:-1: 3]     [-1, 1, 2]
+  3 [ 0: 0:-3]     []                       []                      
+  3 [ 0: 0:-3]     [0, 1, 2]
+  3 [ 0: 0:-2]     []                       []                      
+  3 [ 0: 0:-2]     [0, 1, 2]
+  3 [ 0: 0:-1]     []                       []                      
+  3 [ 0: 0:-1]     [0, 1, 2]
+  3 [ 0: 0: 1]     []                       []                      
+  3 [ 0: 0: 1]     [0, 1, 2]
+  3 [ 0: 0: 2]     []                       []                      
+  3 [ 0: 0: 2]     [0, 1, 2]
+  3 [ 0: 0: 3]     []                       []                      
+  3 [ 0: 0: 3]     [0, 1, 2]
+  3 [ 0: 1:-3]     []                       []                      
+  3 [ 0: 1:-3]     [0, 1, 2]
+  3 [ 0: 1:-2]     []                       []                      
+  3 [ 0: 1:-2]     [0, 1, 2]
+  3 [ 0: 1:-1]     []                       []                      
+  3 [ 0: 1:-1]     [0, 1, 2]
+  3 [ 0: 1: 1]     [0]                      [0]                     
+  3 [ 0: 1: 1]     [-1, 1, 2]
+  3 [ 0: 1: 2]     [0]                      [0]                     
+  3 [ 0: 1: 2]     [-1, 1, 2]
+  3 [ 0: 1: 3]     [0]                      [0]                     
+  3 [ 0: 1: 3]     [-1, 1, 2]
+  3 [ 0: 2:-3]     []                       []                      
+  3 [ 0: 2:-3]     [0, 1, 2]
+  3 [ 0: 2:-2]     []                       []                      
+  3 [ 0: 2:-2]     [0, 1, 2]
+  3 [ 0: 2:-1]     []                       []                      
+  3 [ 0: 2:-1]     [0, 1, 2]
+  3 [ 0: 2: 1]     [0, 1]                   [0, 1]                  
+  3 [ 0: 2: 1]     [-1, -1, 2]
+  3 [ 0: 2: 2]     [0]                      [0]                     
+  3 [ 0: 2: 2]     [-1, 1, 2]
+  3 [ 0: 2: 3]     [0]                      [0]                     
+  3 [ 0: 2: 3]     [-1, 1, 2]
+  3 [ 0: 3:-3]     []                       []                      
+  3 [ 0: 3:-3]     [0, 1, 2]
+  3 [ 0: 3:-2]     []                       []                      
+  3 [ 0: 3:-2]     [0, 1, 2]
+  3 [ 0: 3:-1]     []                       []                      
+  3 [ 0: 3:-1]     [0, 1, 2]
+  3 [ 0: 3: 1]     [0, 1, 2]                [0, 1, 2]               
+  3 [ 0: 3: 1]     [-1, -1, -1]
+  3 [ 0: 3: 2]     [0, 2]                   [0, 2]                  
+  3 [ 0: 3: 2]     [-1, 1, -1]
+  3 [ 0: 3: 3]     [0]                      [0]                     
+  3 [ 0: 3: 3]     [-1, 1, 2]
+  3 [ 1:-3:-3]     [1]                      [1]                     
+  3 [ 1:-3:-3]     [0, -1, 2]
+  3 [ 1:-3:-2]     [1]                      [1]                     
+  3 [ 1:-3:-2]     [0, -1, 2]
+  3 [ 1:-3:-1]     [1]                      [1]                     
+  3 [ 1:-3:-1]     [0, -1, 2]
+  3 [ 1:-3: 1]     []                       []                      
+  3 [ 1:-3: 1]     [0, 1, 2]
+  3 [ 1:-3: 2]     []                       []                      
+  3 [ 1:-3: 2]     [0, 1, 2]
+  3 [ 1:-3: 3]     []                       []                      
+  3 [ 1:-3: 3]     [0, 1, 2]
+  3 [ 1:-2:-3]     []                       []                      
+  3 [ 1:-2:-3]     [0, 1, 2]
+  3 [ 1:-2:-2]     []                       []                      
+  3 [ 1:-2:-2]     [0, 1, 2]
+  3 [ 1:-2:-1]     []                       []                      
+  3 [ 1:-2:-1]     [0, 1, 2]
+  3 [ 1:-2: 1]     []                       []                      
+  3 [ 1:-2: 1]     [0, 1, 2]
+  3 [ 1:-2: 2]     []                       []                      
+  3 [ 1:-2: 2]     [0, 1, 2]
+  3 [ 1:-2: 3]     []                       []                      
+  3 [ 1:-2: 3]     [0, 1, 2]
+  3 [ 1:-1:-3]     []                       []                      
+  3 [ 1:-1:-3]     [0, 1, 2]
+  3 [ 1:-1:-2]     []                       []                      
+  3 [ 1:-1:-2]     [0, 1, 2]
+  3 [ 1:-1:-1]     []                       []                      
+  3 [ 1:-1:-1]     [0, 1, 2]
+  3 [ 1:-1: 1]     [1]                      [1]                     
+  3 [ 1:-1: 1]     [0, -1, 2]
+  3 [ 1:-1: 2]     [1]                      [1]                     
+  3 [ 1:-1: 2]     [0, -1, 2]
+  3 [ 1:-1: 3]     [1]                      [1]                     
+  3 [ 1:-1: 3]     [0, -1, 2]
+  3 [ 1: 0:-3]     [1]                      [1]                     
+  3 [ 1: 0:-3]     [0, -1, 2]
+  3 [ 1: 0:-2]     [1]                      [1]                     
+  3 [ 1: 0:-2]     [0, -1, 2]
+  3 [ 1: 0:-1]     [1]                      [1]                     
+  3 [ 1: 0:-1]     [0, -1, 2]
+  3 [ 1: 0: 1]     []                       []                      
+  3 [ 1: 0: 1]     [0, 1, 2]
+  3 [ 1: 0: 2]     []                       []                      
+  3 [ 1: 0: 2]     [0, 1, 2]
+  3 [ 1: 0: 3]     []                       []                      
+  3 [ 1: 0: 3]     [0, 1, 2]
+  3 [ 1: 1:-3]     []                       []                      
+  3 [ 1: 1:-3]     [0, 1, 2]
+  3 [ 1: 1:-2]     []                       []                      
+  3 [ 1: 1:-2]     [0, 1, 2]
+  3 [ 1: 1:-1]     []                       []                      
+  3 [ 1: 1:-1]     [0, 1, 2]
+  3 [ 1: 1: 1]     []                       []                      
+  3 [ 1: 1: 1]     [0, 1, 2]
+  3 [ 1: 1: 2]     []                       []                      
+  3 [ 1: 1: 2]     [0, 1, 2]
+  3 [ 1: 1: 3]     []                       []                      
+  3 [ 1: 1: 3]     [0, 1, 2]
+  3 [ 1: 2:-3]     []                       []                      
+  3 [ 1: 2:-3]     [0, 1, 2]
+  3 [ 1: 2:-2]     []                       []                      
+  3 [ 1: 2:-2]     [0, 1, 2]
+  3 [ 1: 2:-1]     []                       []                      
+  3 [ 1: 2:-1]     [0, 1, 2]
+  3 [ 1: 2: 1]     [1]                      [1]                     
+  3 [ 1: 2: 1]     [0, -1, 2]
+  3 [ 1: 2: 2]     [1]                      [1]                     
+  3 [ 1: 2: 2]     [0, -1, 2]
+  3 [ 1: 2: 3]     [1]                      [1]                     
+  3 [ 1: 2: 3]     [0, -1, 2]
+  3 [ 1: 3:-3]     []                       []                      
+  3 [ 1: 3:-3]     [0, 1, 2]
+  3 [ 1: 3:-2]     []                       []                      
+  3 [ 1: 3:-2]     [0, 1, 2]
+  3 [ 1: 3:-1]     []                       []                      
+  3 [ 1: 3:-1]     [0, 1, 2]
+  3 [ 1: 3: 1]     [1, 2]                   [1, 2]                  
+  3 [ 1: 3: 1]     [0, -1, -1]
+  3 [ 1: 3: 2]     [1]                      [1]                     
+  3 [ 1: 3: 2]     [0, -1, 2]
+  3 [ 1: 3: 3]     [1]                      [1]                     
+  3 [ 1: 3: 3]     [0, -1, 2]
+  3 [ 2:-3:-3]     [2]                      [2]                     
+  3 [ 2:-3:-3]     [0, 1, -1]
+  3 [ 2:-3:-2]     [2]                      [2]                     
+  3 [ 2:-3:-2]     [0, 1, -1]
+  3 [ 2:-3:-1]     [2, 1]                   [2, 1]                  
+  3 [ 2:-3:-1]     [0, -1, -1]
+  3 [ 2:-3: 1]     []                       []                      
+  3 [ 2:-3: 1]     [0, 1, 2]
+  3 [ 2:-3: 2]     []                       []                      
+  3 [ 2:-3: 2]     [0, 1, 2]
+  3 [ 2:-3: 3]     []                       []                      
+  3 [ 2:-3: 3]     [0, 1, 2]
+  3 [ 2:-2:-3]     [2]                      [2]                     
+  3 [ 2:-2:-3]     [0, 1, -1]
+  3 [ 2:-2:-2]     [2]                      [2]                     
+  3 [ 2:-2:-2]     [0, 1, -1]
+  3 [ 2:-2:-1]     [2]                      [2]                     
+  3 [ 2:-2:-1]     [0, 1, -1]
+  3 [ 2:-2: 1]     []                       []                      
+  3 [ 2:-2: 1]     [0, 1, 2]
+  3 [ 2:-2: 2]     []                       []                      
+  3 [ 2:-2: 2]     [0, 1, 2]
+  3 [ 2:-2: 3]     []                       []                      
+  3 [ 2:-2: 3]     [0, 1, 2]
+  3 [ 2:-1:-3]     []                       []                      
+  3 [ 2:-1:-3]     [0, 1, 2]
+  3 [ 2:-1:-2]     []                       []                      
+  3 [ 2:-1:-2]     [0, 1, 2]
+  3 [ 2:-1:-1]     []                       []                      
+  3 [ 2:-1:-1]     [0, 1, 2]
+  3 [ 2:-1: 1]     []                       []                      
+  3 [ 2:-1: 1]     [0, 1, 2]
+  3 [ 2:-1: 2]     []                       []                      
+  3 [ 2:-1: 2]     [0, 1, 2]
+  3 [ 2:-1: 3]     []                       []                      
+  3 [ 2:-1: 3]     [0, 1, 2]
+  3 [ 2: 0:-3]     [2]                      [2]                     
+  3 [ 2: 0:-3]     [0, 1, -1]
+  3 [ 2: 0:-2]     [2]                      [2]                     
+  3 [ 2: 0:-2]     [0, 1, -1]
+  3 [ 2: 0:-1]     [2, 1]                   [2, 1]                  
+  3 [ 2: 0:-1]     [0, -1, -1]
+  3 [ 2: 0: 1]     []                       []                      
+  3 [ 2: 0: 1]     [0, 1, 2]
+  3 [ 2: 0: 2]     []                       []                      
+  3 [ 2: 0: 2]     [0, 1, 2]
+  3 [ 2: 0: 3]     []                       []                      
+  3 [ 2: 0: 3]     [0, 1, 2]
+  3 [ 2: 1:-3]     [2]                      [2]                     
+  3 [ 2: 1:-3]     [0, 1, -1]
+  3 [ 2: 1:-2]     [2]                      [2]                     
+  3 [ 2: 1:-2]     [0, 1, -1]
+  3 [ 2: 1:-1]     [2]                      [2]                     
+  3 [ 2: 1:-1]     [0, 1, -1]
+  3 [ 2: 1: 1]     []                       []                      
+  3 [ 2: 1: 1]     [0, 1, 2]
+  3 [ 2: 1: 2]     []                       []                      
+  3 [ 2: 1: 2]     [0, 1, 2]
+  3 [ 2: 1: 3]     []                       []                      
+  3 [ 2: 1: 3]     [0, 1, 2]
+  3 [ 2: 2:-3]     []                       []                      
+  3 [ 2: 2:-3]     [0, 1, 2]
+  3 [ 2: 2:-2]     []                       []                      
+  3 [ 2: 2:-2]     [0, 1, 2]
+  3 [ 2: 2:-1]     []                       []                      
+  3 [ 2: 2:-1]     [0, 1, 2]
+  3 [ 2: 2: 1]     []                       []                      
+  3 [ 2: 2: 1]     [0, 1, 2]
+  3 [ 2: 2: 2]     []                       []                      
+  3 [ 2: 2: 2]     [0, 1, 2]
+  3 [ 2: 2: 3]     []                       []                      
+  3 [ 2: 2: 3]     [0, 1, 2]
+  3 [ 2: 3:-3]     []                       []                      
+  3 [ 2: 3:-3]     [0, 1, 2]
+  3 [ 2: 3:-2]     []                       []                      
+  3 [ 2: 3:-2]     [0, 1, 2]
+  3 [ 2: 3:-1]     []                       []                      
+  3 [ 2: 3:-1]     [0, 1, 2]
+  3 [ 2: 3: 1]     [2]                      [2]                     
+  3 [ 2: 3: 1]     [0, 1, -1]
+  3 [ 2: 3: 2]     [2]                      [2]                     
+  3 [ 2: 3: 2]     [0, 1, -1]
+  3 [ 2: 3: 3]     [2]                      [2]                     
+  3 [ 2: 3: 3]     [0, 1, -1]
+  3 [ 3:-3:-3]     [2]                      [2]                     
+  3 [ 3:-3:-3]     [0, 1, -1]
+  3 [ 3:-3:-2]     [2]                      [2]                     
+  3 [ 3:-3:-2]     [0, 1, -1]
+  3 [ 3:-3:-1]     [2, 1]                   [2, 1]                  
+  3 [ 3:-3:-1]     [0, -1, -1]
+  3 [ 3:-3: 1]     []                       []                      
+  3 [ 3:-3: 1]     [0, 1, 2]
+  3 [ 3:-3: 2]     []                       []                      
+  3 [ 3:-3: 2]     [0, 1, 2]
+  3 [ 3:-3: 3]     []                       []                      
+  3 [ 3:-3: 3]     [0, 1, 2]
+  3 [ 3:-2:-3]     [2]                      [2]                     
+  3 [ 3:-2:-3]     [0, 1, -1]
+  3 [ 3:-2:-2]     [2]                      [2]                     
+  3 [ 3:-2:-2]     [0, 1, -1]
+  3 [ 3:-2:-1]     [2]                      [2]                     
+  3 [ 3:-2:-1]     [0, 1, -1]
+  3 [ 3:-2: 1]     []                       []                      
+  3 [ 3:-2: 1]     [0, 1, 2]
+  3 [ 3:-2: 2]     []                       []                      
+  3 [ 3:-2: 2]     [0, 1, 2]
+  3 [ 3:-2: 3]     []                       []                      
+  3 [ 3:-2: 3]     [0, 1, 2]
+  3 [ 3:-1:-3]     []                       []                      
+  3 [ 3:-1:-3]     [0, 1, 2]
+  3 [ 3:-1:-2]     []                       []                      
+  3 [ 3:-1:-2]     [0, 1, 2]
+  3 [ 3:-1:-1]     []                       []                      
+  3 [ 3:-1:-1]     [0, 1, 2]
+  3 [ 3:-1: 1]     []                       []                      
+  3 [ 3:-1: 1]     [0, 1, 2]
+  3 [ 3:-1: 2]     []                       []                      
+  3 [ 3:-1: 2]     [0, 1, 2]
+  3 [ 3:-1: 3]     []                       []                      
+  3 [ 3:-1: 3]     [0, 1, 2]
+  3 [ 3: 0:-3]     [2]                      [2]                     
+  3 [ 3: 0:-3]     [0, 1, -1]
+  3 [ 3: 0:-2]     [2]                      [2]                     
+  3 [ 3: 0:-2]     [0, 1, -1]
+  3 [ 3: 0:-1]     [2, 1]                   [2, 1]                  
+  3 [ 3: 0:-1]     [0, -1, -1]
+  3 [ 3: 0: 1]     []                       []                      
+  3 [ 3: 0: 1]     [0, 1, 2]
+  3 [ 3: 0: 2]     []                       []                      
+  3 [ 3: 0: 2]     [0, 1, 2]
+  3 [ 3: 0: 3]     []                       []                      
+  3 [ 3: 0: 3]     [0, 1, 2]
+  3 [ 3: 1:-3]     [2]                      [2]                     
+  3 [ 3: 1:-3]     [0, 1, -1]
+  3 [ 3: 1:-2]     [2]                      [2]                     
+  3 [ 3: 1:-2]     [0, 1, -1]
+  3 [ 3: 1:-1]     [2]                      [2]                     
+  3 [ 3: 1:-1]     [0, 1, -1]
+  3 [ 3: 1: 1]     []                       []                      
+  3 [ 3: 1: 1]     [0, 1, 2]
+  3 [ 3: 1: 2]     []                       []                      
+  3 [ 3: 1: 2]     [0, 1, 2]
+  3 [ 3: 1: 3]     []                       []                      
+  3 [ 3: 1: 3]     [0, 1, 2]
+  3 [ 3: 2:-3]     []                       []                      
+  3 [ 3: 2:-3]     [0, 1, 2]
+  3 [ 3: 2:-2]     []                       []                      
+  3 [ 3: 2:-2]     [0, 1, 2]
+  3 [ 3: 2:-1]     []                       []                      
+  3 [ 3: 2:-1]     [0, 1, 2]
+  3 [ 3: 2: 1]     []                       []                      
+  3 [ 3: 2: 1]     [0, 1, 2]
+  3 [ 3: 2: 2]     []                       []                      
+  3 [ 3: 2: 2]     [0, 1, 2]
+  3 [ 3: 2: 3]     []                       []                      
+  3 [ 3: 2: 3]     [0, 1, 2]
+  3 [ 3: 3:-3]     []                       []                      
+  3 [ 3: 3:-3]     [0, 1, 2]
+  3 [ 3: 3:-2]     []                       []                      
+  3 [ 3: 3:-2]     [0, 1, 2]
+  3 [ 3: 3:-1]     []                       []                      
+  3 [ 3: 3:-1]     [0, 1, 2]
+  3 [ 3: 3: 1]     []                       []                      
+  3 [ 3: 3: 1]     [0, 1, 2]
+  3 [ 3: 3: 2]     []                       []                      
+  3 [ 3: 3: 2]     [0, 1, 2]
+  3 [ 3: 3: 3]     []                       []                      
+  3 [ 3: 3: 3]     [0, 1, 2]
